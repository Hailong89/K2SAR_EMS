/**************************************************************************
**
** Version: @(#)regtc1130.xml	1.14 09/11/24
** Generated from @(#)regtc1130.xml	1.14 09/11/24
** 
** This file contains all SFR and BIT names and on-chip register definitions
** It is based on the following document(s):
** - TC1130_dave_20031124.txt
** 
** Copyright 2002-2014 Altium BV
**
**************************************************************************/
#ifndef _REGTC1130_H
#define _REGTC1130_H

/* Core Base */
#define core_base	0xF7E1	/* The base address off the memory for the CSFR's */

/* Core Special Function Registers (CSFR). Macros, such as PCXI, that expand to a 16-bit number do not directly represent a memory address.
   They are intended to be used with the intrinsic functions __mfcr(...) and __mtcr(...). */
#define PCXI	0xFE00	/* Previous Context Info Register */
#define PSW	0xFE04	/* Program Status Word */
#define PC	0xFE08	/* Program Counter */
#define SYSCON	0xFE14	/* System Configuration Control Register */
#define CPU_ID	0xFE18	/* CPU Identification Register */
#define BIV	0xFE20	/* Interrupt Vector Table */
#define BTV	0xFE24	/* Trap Vector Table Pointer. */
#define ISP	0xFE28	/* Interrupt Stack Pointer */
#define ICR	0xFE2C	/* Interrupt Unit Control Register */
#define FCX	0xFE38	/* Free CSA List Head Pointer */
#define LCX	0xFE3C	/* Free CSA List Limit Pointer */
#define MMU_CON	0x8000	/* MMU Configuration Register */
#define MMU_ASI	0x8004	/* MMU Address Space Identifier Register */
#define MMU_ID	0x8008	/* MMU Identification Register */
#define MMU_TVA	0x800C	/* MMU Translation Virtual Address Register */
#define MMU_TPA	0x8010	/* MMU Translation Physical Address Register */
#define MMU_TPX	0x8014	/* MMU Translation Page Index Register */
#define MMU_TFA	0x8018	/* MMU Translation Fault Address Register */
#define DPR0_0L	0xC000	/* Data Seg. Prot. Reg. 0, Set 0, lower */
#define DPR0_0U	0xC004	/* Data Seg. Prot. Reg. 0, Set 0, upper */
#define DPR0_1L	0xC008	/* Data Seg. Prot. Reg. 1, Set 0, lower */
#define DPR0_1U	0xC00C	/* Data Seg. Prot. Reg. 1, Set 0, upper */
#define DPR0_2L	0xC010	/* Data Seg. Prot. Reg. 2, Set 0, lower */
#define DPR0_2U	0xC014	/* Data Seg. Prot. Reg. 2, Set 0, upper */
#define DPR0_3L	0xC018	/* Data Seg. Prot. Reg. 3, Set 0, lower */
#define DPR0_3U	0xC01C	/* Data Seg. Prot. Reg. 3, Set 0, upper */
#define DPR1_0L	0xC400	/* Data Seg. Prot. Reg. 0, Set 1, lower */
#define DPR1_0U	0xC404	/* Data Seg. Prot. Reg. 0, Set 1, upper */
#define DPR1_1L	0xC408	/* Data Seg. Prot. Reg. 1, Set 1, lower */
#define DPR1_1U	0xC40C	/* Data Seg. Prot. Reg. 1, Set 1, upper */
#define DPR1_2L	0xC410	/* Data Seg. Prot. Reg. 2, Set 1, lower */
#define DPR1_2U	0xC414	/* Data Seg. Prot. Reg. 2, Set 1, upper */
#define DPR1_3L	0xC418	/* Data Seg. Prot. Reg. 3, Set 1, lower */
#define DPR1_3U	0xC41C	/* Data Seg. Prot. Reg. 3, Set 1, upper */
#define CPR0_0L	0xD000	/* Code Seg. Prot. Reg. 0, Set 0, lower */
#define CPR0_0U	0xD004	/* Code Seg. Prot. Reg. 0, Set 0, upper */
#define CPR0_1L	0xD008	/* Code Seg. Prot. Reg. 1, Set 0, lower */
#define CPR0_1U	0xD00C	/* Code Seg. Prot. Reg. 1, Set 0, upper */
#define CPR1_0L	0xD400	/* Code Seg. Prot. Reg. 0, Set 1, lower */
#define CPR1_0U	0xD404	/* Code Seg. Prot. Reg. 0, Set 1, upper */
#define CPR1_1L	0xD408	/* Code Seg. Prot. Reg. 1, Set 1, lower */
#define CPR1_1U	0xD40C	/* Code Seg. Prot. Reg. 1, Set 1, upper */
#define DPM0	0xE000	/* Data Protection Mode Register, Set 0 (4 bytes) */
#define DPM1	0xE080	/* Data Protection Mode Register, Set 1 (4 bytes) */
#define CPM0	0xE200	/* Code Protection Mode Register, Set 0 (2 bytes) */
#define CPM1	0xE280	/* Code Protection Mode Register, Set 1 (2 bytes) */
#define DBGSR	0xFD00	/* Debug Status Register */
#define EXEVT	0xFD08	/* External Break Input Event Specifier */
#define CREVT	0xFD0C	/* Emulator Resource Protection Event Specifier */
#define SWEVT	0xFD10	/* Software Break Event Specifier */
#define TR0EVT	0xFD20	/* Trigger Event 0 Specifier */
#define TR1EVT	0xFD24	/* Trigger Event 1 Specifier */
#define DMS	0xFD40	/* Debug Monitor Start Address Register */
#define DCX	0xFD44	/* Debug Contest Save Area Pointer */

/* SCU CD */
typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int MOD_REV        : 8;
		/* const */ unsigned int MOD_TYPE       : 8;
		/* const */ unsigned int MOD_NUMBER     : 16;
	} B;
	int I;
	unsigned int U;

} SCU_ID_type;
#define SCU_ID	(*( SCU_ID_type *) 0xF0000008u)	/* SCU Module Identification Register */

typedef volatile union
{
	struct
	{ 
		unsigned int RRSTM          : 1;
		unsigned int                : 1;
		unsigned int RREXT          : 1;
		unsigned int                : 13;
		unsigned int SWCFG          : 4;
		unsigned int                : 1;
		unsigned int SWBRKIN        : 1;
		unsigned int                : 2;
		unsigned int SWBOOT         : 1;
		unsigned int                : 7;
	} B;
	int I;
	unsigned int U;

} RST_REQ_type;
#define RST_REQ	(*( RST_REQ_type *) 0xF0000010u)	/* Reset Request Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int RSSTM          : 1;
		/* const */ unsigned int                : 1;
		/* const */ unsigned int RSEXT          : 1;
		/* const */ unsigned int                : 13;
		/* const */ unsigned int HWCFG          : 3;
		/* const */ unsigned int                : 1;
		/* const */ unsigned int TESTMODE       : 1;
		/* const */ unsigned int HWBRKIN        : 1;
		/* const */ unsigned int                : 5;
		/* const */ unsigned int PWORST         : 1;
		/* const */ unsigned int HDRST          : 1;
		/* const */ unsigned int SFTRST         : 1;
		/* const */ unsigned int WDTRST         : 1;
		/* const */ unsigned int PWDRST         : 1;
	} B;
	int I;
	unsigned int U;

} RST_SR_type;
#define RST_SR	(*( RST_SR_type *) 0xF0000014u)	/* Reset Status Register */

typedef volatile union
{
	struct
	{ 
		unsigned int MOSC           : 1;
		/* const */ unsigned int OSCR           : 1;
		unsigned int ORDRES         : 1;
		unsigned int                : 1;
		unsigned int OGC            : 1;
		unsigned int                : 27;
	} B;
	int I;
	unsigned int U;

} OSC_CON_type;
#define OSC_CON	(*( OSC_CON_type *) 0xF0000018u)	/* Oscillator Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int ENDINIT        : 1;
		unsigned int WDTLCK         : 1;
		unsigned int WDTHPW0        : 2;
		unsigned int WDTHPW1        : 4;
		unsigned int WDTPW          : 8;
		unsigned int WDTREL         : 16;
	} B;
	int I;
	unsigned int U;

} WDT_CON0_type;
#define WDT_CON0	(*( WDT_CON0_type *) 0xF0000020u)	/* Watchdog Timer Control Register 0 */

typedef volatile union
{
	struct
	{ 
		unsigned int                : 2;
		unsigned int WDTIR          : 1;
		unsigned int WDTDR          : 1;
		unsigned int                : 28;
	} B;
	int I;
	unsigned int U;

} WDT_CON1_type;
#define WDT_CON1	(*( WDT_CON1_type *) 0xF0000024u)	/* Watchdog Timer Control Register 1 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int WDTAE          : 1;
		/* const */ unsigned int WDTOE          : 1;
		/* const */ unsigned int WDTIS          : 1;
		/* const */ unsigned int WDTDS          : 1;
		/* const */ unsigned int WDTTO          : 1;
		/* const */ unsigned int WDTPR          : 1;
		/* const */ unsigned int                : 10;
		/* const */ unsigned int WDTTIM         : 16;
	} B;
	int I;
	unsigned int U;

} WDT_SR_type;
#define WDT_SR	(*( WDT_SR_type *) 0xF0000028u)	/* Watchdog Timer Status Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int NMIEXT         : 1;
		/* const */ unsigned int NMIPLL         : 1;
		/* const */ unsigned int NMIWDT         : 1;
		/* const */ unsigned int NMIPER         : 1;
		/* const */ unsigned int NMIDPM         : 1;
		/* const */ unsigned int                : 27;
	} B;
	int I;
	unsigned int U;

} NMISR_type;
#define NMISR	(*( NMISR_type *) 0xF000002Cu)	/* NMI Status Register */

typedef volatile union
{
	struct
	{ 
		unsigned int DSRE           : 1;
		unsigned int DSREQ          : 1;
		unsigned int                : 30;
	} B;
	int I;
	unsigned int U;

} PMG_CON_type;
#define PMG_CON	(*( PMG_CON_type *) 0xF0000030u)	/* Power Management Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int REQSLP         : 2;
		/* const */ unsigned int                : 6;
		/* const */ unsigned int PMST           : 3;
		/* const */ unsigned int                : 21;
	} B;
	int I;
	unsigned int U;

} PMG_CSR_type;
#define PMG_CSR	(*( PMG_CSR_type *) 0xF0000034u)	/* Power Management Control and Status Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int SW0PT0         : 1;
		/* const */ unsigned int SWOPT1         : 1;
		/* const */ unsigned int SWOPT2         : 1;
		/* const */ unsigned int SWOPT3         : 1;
		/* const */ unsigned int SWOPT4         : 1;
		/* const */ unsigned int SWOPT5         : 1;
		/* const */ unsigned int SWOPT6         : 1;
		/* const */ unsigned int SWOPT7         : 1;
		/* const */ unsigned int SWOPT8         : 1;
		/* const */ unsigned int SWOPT9         : 1;
		/* const */ unsigned int SWOPT10        : 1;
		/* const */ unsigned int SWOPT11        : 1;
		/* const */ unsigned int SWOPT12        : 1;
		/* const */ unsigned int SWOPT13        : 1;
		/* const */ unsigned int SWOPT14        : 1;
		/* const */ unsigned int SWOPT15        : 1;
		/* const */ unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} SCU_SCLIR_type;
#define SCU_SCLIR	(*( SCU_SCLIR_type *) 0xF0000038u)	/* SCU Software Configuration Latched Inputs Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int LOCK           : 1;
		unsigned int RESLD          : 1;
		unsigned int SYSFSL         : 1;
		unsigned int                : 2;
		unsigned int VCOBYP         : 1;
		unsigned int VCOSEL         : 2;
		unsigned int KDIV           : 4;
		unsigned int                : 1;
		unsigned int PDIV           : 3;
		unsigned int NDIV           : 7;
		unsigned int                : 1;
		unsigned int OSCDISC        : 1;
		unsigned int                : 4;
		/* const */ unsigned int BYPPIN         : 1;
		unsigned int                : 2;
	} B;
	int I;
	unsigned int U;

} PLL_CLC_type;
#define PLL_CLC	(*( PLL_CLC_type *) 0xF0000040u)	/* PLL Clock Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int FIEN           : 1;
		unsigned int VRBEN          : 1;
		unsigned int CSOEN          : 1;
		unsigned int CSGEN          : 1;
		unsigned int EPUD           : 1;
		unsigned int NMIEN          : 1;
		unsigned int PEREN          : 1;
		unsigned int RBOOTA         : 1;
		unsigned int DMIVRB         : 1;
		unsigned int PMIVRB         : 1;
		unsigned int DMUVRB         : 1;
		unsigned int CANVRB         : 1;
		unsigned int USBCLDIV       : 2;
		unsigned int USBCLSEL       : 2;
		unsigned int OUTEN          : 1;
		unsigned int ZERO           : 7;
		unsigned int ONE            : 8;
	} B;
	int I;
	unsigned int U;

} SCU_CON_type;
#define SCU_CON	(*( SCU_CON_type *) 0xF0000050u)	/* SCU Control Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int FXI            : 1;
		/* const */ unsigned int FUI            : 1;
		/* const */ unsigned int FZI            : 1;
		/* const */ unsigned int FVI            : 1;
		/* const */ unsigned int FII            : 1;
		/* const */ unsigned int                : 10;
		/* const */ unsigned int BOOTA          : 1;
		/* const */ unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} SCU_STAT_type;
#define SCU_STAT	(*( SCU_STAT_type *) 0xF0000054u)	/* SCU Status Register */

typedef volatile union
{
	struct
	{ 
		unsigned int SEL0           : 1;
		unsigned int SEL1           : 1;
		unsigned int SEL2           : 1;
		unsigned int SEL3           : 1;
		unsigned int                : 28;
	} B;
	int I;
	unsigned int U;

} FSR_type;
#define FSR	(*( FSR_type *) 0xF0000060u)	/* Fusebox Selector Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int FADDR          : 14;
		/* const */ unsigned int VA             : 1;
		/* const */ unsigned int                : 1;
		/* const */ unsigned int LOC            : 2;
		/* const */ unsigned int                : 14;
	} B;
	int I;
	unsigned int U;

} FDR_type;
#define FDR	(*( FDR_type *) 0xF0000064u)	/* SCU Fusebox Data Register */

typedef volatile union
{
	struct
	{ 
		unsigned int PEN0           : 1;
		unsigned int PEN1           : 1;
		unsigned int PEN2           : 1;
		unsigned int PEN3           : 1;
		unsigned int PEN4           : 1;
		unsigned int                : 27;
	} B;
	int I;
	unsigned int U;

} SCU_PETCR_type;
#define SCU_PETCR	(*( SCU_PETCR_type *) 0xF0000068u)	/* SCU Parity Error Trap Control Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int PFL0           : 1;
		/* const */ unsigned int PFL1           : 1;
		/* const */ unsigned int PFL2           : 1;
		/* const */ unsigned int PFL3           : 1;
		/* const */ unsigned int PFL4           : 1;
		/* const */ unsigned int                : 27;
	} B;
	int I;
	unsigned int U;

} SCU_PETSR_type;
#define SCU_PETSR	(*( SCU_PETSR_type *) 0xF000006Cu)	/* SCU Parity Error Trap Status Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int DEPT           : 5;
		/* const */ unsigned int MANUF          : 11;
		/* const */ unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} MANID_type;
#define MANID	(*( MANID_type *) 0xF0000070u)	/* Manufacturer Identification Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int CHREV          : 8;
		/* const */ unsigned int CHID           : 8;
		/* const */ unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} CHIPID_type;
#define CHIPID	(*( CHIPID_type *) 0xF0000074u)	/* Chip Identification Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int RT0            : 1;
		/* const */ unsigned int RT1            : 1;
		/* const */ unsigned int RT2            : 1;
		/* const */ unsigned int RT3            : 1;
		/* const */ unsigned int RT4            : 1;
		/* const */ unsigned int RT5            : 1;
		/* const */ unsigned int RT6            : 1;
		/* const */ unsigned int RT7            : 1;
		/* const */ unsigned int RT8            : 1;
		/* const */ unsigned int RT9            : 1;
		/* const */ unsigned int RT10           : 1;
		/* const */ unsigned int RT11           : 1;
		/* const */ unsigned int RT12           : 1;
		/* const */ unsigned int RT13           : 1;
		/* const */ unsigned int RT14           : 1;
		/* const */ unsigned int RT15           : 1;
		/* const */ unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} RTID_type;
#define RTID	(*( RTID_type *) 0xF0000078u)	/* Redesign Tracing Identification Register */

typedef volatile union
{
	struct
	{ 
		unsigned int SRPN           : 8;
		unsigned int                : 2;
		unsigned int TOS            : 1;
		unsigned int                : 1;
		unsigned int SRE            : 1;
		/* const */ unsigned int SRR            : 1;
		unsigned int CLRR           : 1;
		unsigned int SETR           : 1;
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} MACTX0SRC_type;
#define MACTX0SRC	(*( MACTX0SRC_type *) 0xF000007Cu)	/* MAC Transmit Interrupt Service Request Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int SRPN           : 8;
		unsigned int                : 2;
		unsigned int TOS            : 1;
		unsigned int                : 1;
		unsigned int SRE            : 1;
		/* const */ unsigned int SRR            : 1;
		unsigned int CLRR           : 1;
		unsigned int SETR           : 1;
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} MACRX0SRC_type;
#define MACRX0SRC	(*( MACRX0SRC_type *) 0xF0000080u)	/* MAC Receive Interrupt Service Request Control Register 0 */

typedef volatile union
{
	struct
	{ 
		unsigned int SRPN           : 8;
		unsigned int                : 2;
		unsigned int TOS            : 1;
		unsigned int                : 1;
		unsigned int SRE            : 1;
		/* const */ unsigned int SRR            : 1;
		unsigned int CLRR           : 1;
		unsigned int SETR           : 1;
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} MACTX1SRC_type;
#define MACTX1SRC	(*( MACTX1SRC_type *) 0xF0000084u)	/* MAC Transmit Interrupt Service Request Control Register 1 */

typedef volatile union
{
	struct
	{ 
		unsigned int SRPN           : 8;
		unsigned int                : 2;
		unsigned int TOS            : 1;
		unsigned int                : 1;
		unsigned int SRE            : 1;
		/* const */ unsigned int SRR            : 1;
		unsigned int CLRR           : 1;
		unsigned int SETR           : 1;
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} MACRX1SRC_type;
#define MACRX1SRC	(*( MACRX1SRC_type *) 0xF0000088u)	/* MAC Receive Interrupt Service Request Control Register 1 */

typedef volatile union
{
	struct
	{ 
		unsigned int SRPN           : 8;
		unsigned int                : 2;
		unsigned int TOS            : 1;
		unsigned int                : 1;
		unsigned int SRE            : 1;
		/* const */ unsigned int SRR            : 1;
		unsigned int CLRR           : 1;
		unsigned int SETR           : 1;
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} RBSRC0_type;
#define RBSRC0	(*( RBSRC0_type *) 0xF000008Cu)	/* RB Service Request Control 0 Register */

typedef volatile union
{
	struct
	{ 
		unsigned int SRPN           : 8;
		unsigned int                : 2;
		unsigned int TOS            : 1;
		unsigned int                : 1;
		unsigned int SRE            : 1;
		/* const */ unsigned int SRR            : 1;
		unsigned int CLRR           : 1;
		unsigned int SETR           : 1;
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} RBSRC1_type;
#define RBSRC1	(*( RBSRC1_type *) 0xF0000090u)	/* RB Service Request Control 1 Register */

typedef volatile union
{
	struct
	{ 
		unsigned int SRPN           : 8;
		unsigned int                : 2;
		unsigned int TOS            : 1;
		unsigned int                : 1;
		unsigned int SRE            : 1;
		/* const */ unsigned int SRR            : 1;
		unsigned int CLRR           : 1;
		unsigned int SETR           : 1;
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} TBSRC_type;
#define TBSRC	(*( TBSRC_type *) 0xF0000094u)	/* TB Service Request Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int SRPN           : 8;
		unsigned int                : 2;
		unsigned int TOS            : 1;
		unsigned int                : 1;
		unsigned int SRE            : 1;
		/* const */ unsigned int SRR            : 1;
		unsigned int CLRR           : 1;
		unsigned int SETR           : 1;
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} DRSRC_type;
#define DRSRC	(*( DRSRC_type *) 0xF0000098u)	/* DR Service Request Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int SRPN           : 8;
		unsigned int                : 2;
		unsigned int TOS            : 1;
		unsigned int                : 1;
		unsigned int SRE            : 1;
		/* const */ unsigned int SRR            : 1;
		unsigned int CLRR           : 1;
		unsigned int SETR           : 1;
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} DTSRC_type;
#define DTSRC	(*( DTSRC_type *) 0xF000009Cu)	/* DT Service Request Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int SRPN           : 8;
		unsigned int                : 2;
		unsigned int TOS            : 1;
		unsigned int                : 1;
		unsigned int SRE            : 1;
		/* const */ unsigned int SRR            : 1;
		unsigned int CLRR           : 1;
		unsigned int SETR           : 1;
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} FPU_SRC_type;
#define FPU_SRC	(*( FPU_SRC_type *) 0xF00000A0u)	/* FPU Service Request Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int OTMLC          : 8;
		/* const */ unsigned int                : 23;
		/* const */ unsigned int OTMEN          : 1;
	} B;
	int I;
	unsigned int U;

} SCU_OTCON_type;
#define SCU_OTCON	(*( SCU_OTCON_type *) 0xF00000A8u)	/* SCU On Chip Test Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int T0             : 1;
		unsigned int T1             : 1;
		unsigned int T2             : 1;
		unsigned int T3             : 1;
		unsigned int T4             : 1;
		unsigned int T5             : 1;
		unsigned int T6             : 1;
		unsigned int T7             : 1;
		unsigned int T8             : 1;
		unsigned int T9             : 1;
		unsigned int T10            : 1;
		unsigned int T11            : 1;
		unsigned int T12            : 1;
		unsigned int T13            : 1;
		unsigned int T14            : 1;
		unsigned int T15            : 1;
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} SCU_OTDAT_type;
#define SCU_OTDAT	(*( SCU_OTDAT_type *) 0xF00000ACu)	/* SCU On Chip Test Data Register */

typedef volatile union
{
	struct
	{ 
		unsigned int                : 4;
		unsigned int EXIS0          : 2;
		unsigned int                : 2;
		unsigned int FEN0           : 1;
		unsigned int REN0           : 1;
		unsigned int LDEN0          : 1;
		unsigned int EIEN0          : 1;
		unsigned int INP0           : 3;
		unsigned int                : 5;
		unsigned int EXIS1          : 2;
		unsigned int                : 2;
		unsigned int FEN1           : 1;
		unsigned int REN1           : 1;
		unsigned int LDEN1          : 1;
		unsigned int EIEN1          : 1;
		unsigned int INP1           : 3;
		unsigned int                : 1;
	} B;
	int I;
	unsigned int U;

} EICR0_type;
#define EICR0	(*( EICR0_type *) 0xF00000B0u)	/* External Input Channel Register 0 */

typedef volatile union
{
	struct
	{ 
		unsigned int                : 4;
		unsigned int EXIS2          : 2;
		unsigned int                : 2;
		unsigned int FEN2           : 1;
		unsigned int REN2           : 1;
		unsigned int LDEN2          : 1;
		unsigned int EIEN2          : 1;
		unsigned int INP2           : 3;
		unsigned int                : 5;
		unsigned int EXIS3          : 2;
		unsigned int                : 2;
		unsigned int FEN3           : 1;
		unsigned int REN3           : 1;
		unsigned int LDEN3          : 1;
		unsigned int EIEN3          : 1;
		unsigned int INP3           : 3;
		unsigned int                : 1;
	} B;
	int I;
	unsigned int U;

} EICR1_type;
#define EICR1	(*( EICR1_type *) 0xF00000B4u)	/* External Input Channel Register 1 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int INTF0          : 1;
		/* const */ unsigned int INTF1          : 1;
		/* const */ unsigned int INTF2          : 1;
		/* const */ unsigned int INTF3          : 1;
		/* const */ unsigned int                : 28;
	} B;
	int I;
	unsigned int U;

} EIFR_type;
#define EIFR	(*( EIFR_type *) 0xF00000B8u)	/* External Input Flag Register */

typedef volatile union
{
	struct
	{ 
		unsigned int FS0            : 1;
		unsigned int FS1            : 1;
		unsigned int FS2            : 1;
		unsigned int FS3            : 1;
		unsigned int                : 12;
		unsigned int FC0            : 1;
		unsigned int FC1            : 1;
		unsigned int FC2            : 1;
		unsigned int FC3            : 1;
		unsigned int                : 12;
	} B;
	int I;
	unsigned int U;

} FMR_type;
#define FMR	(*( FMR_type *) 0xF00000BCu)	/* SCU Flag Modification Register */

typedef volatile union
{
	struct
	{ 
		unsigned int IPEN00         : 1;
		unsigned int IPEN01         : 1;
		unsigned int IPEN02         : 1;
		unsigned int IPEN03         : 1;
		unsigned int                : 9;
		unsigned int GEEN0          : 1;
		unsigned int IGP0           : 2;
		unsigned int IPEN10         : 1;
		unsigned int IPEN11         : 1;
		unsigned int IPEN12         : 1;
		unsigned int IPEN13         : 1;
		unsigned int                : 9;
		unsigned int GEEN1          : 1;
		unsigned int IGP1           : 2;
	} B;
	int I;
	unsigned int U;

} IGCR0_type;
#define IGCR0	(*( IGCR0_type *) 0xF00000C0u)	/* Interrupt Gating Register 0 */

typedef volatile union
{
	struct
	{ 
		unsigned int IPEN20         : 1;
		unsigned int IPEN21         : 1;
		unsigned int IPEN22         : 1;
		unsigned int IPEN23         : 1;
		unsigned int                : 9;
		unsigned int GEEN2          : 1;
		unsigned int IGP2           : 2;
		unsigned int IPEN30         : 1;
		unsigned int IPEN31         : 1;
		unsigned int IPEN32         : 1;
		unsigned int IPEN33         : 1;
		unsigned int                : 9;
		unsigned int GEEN3          : 1;
		unsigned int IGP3           : 2;
	} B;
	int I;
	unsigned int U;

} IGCR1_type;
#define IGCR1	(*( IGCR1_type *) 0xF00000C4u)	/* Interrupt Gating Register 1 */

typedef volatile union
{
	struct
	{ 
		unsigned int SRPN           : 8;
		unsigned int                : 2;
		unsigned int TOS            : 1;
		unsigned int                : 1;
		unsigned int SRE            : 1;
		/* const */ unsigned int SRR            : 1;
		unsigned int CLRR           : 1;
		unsigned int SETR           : 1;
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} EINT_SRC3_type;
#define EINT_SRC3	(*( EINT_SRC3_type *) 0xF00000C8u)	/* Service Request Control Reg. for Ext. Interrupt 3 */

typedef volatile union
{
	struct
	{ 
		unsigned int SRPN           : 8;
		unsigned int                : 2;
		unsigned int TOS            : 1;
		unsigned int                : 1;
		unsigned int SRE            : 1;
		/* const */ unsigned int SRR            : 1;
		unsigned int CLRR           : 1;
		unsigned int SETR           : 1;
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} EINT_SRC2_type;
#define EINT_SRC2	(*( EINT_SRC2_type *) 0xF00000D0u)	/* Service Request Control Reg. for Ext. Interrupt 2 */

typedef volatile union
{
	struct
	{ 
		unsigned int SRPN           : 8;
		unsigned int                : 2;
		unsigned int TOS            : 1;
		unsigned int                : 1;
		unsigned int SRE            : 1;
		/* const */ unsigned int SRR            : 1;
		unsigned int CLRR           : 1;
		unsigned int SETR           : 1;
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} EINT_SRC1_type;
#define EINT_SRC1	(*( EINT_SRC1_type *) 0xF00000D4u)	/* Service Request Control Reg. for Ext. Interrupt 1 */

typedef volatile union
{
	struct
	{ 
		unsigned int SRPN           : 8;
		unsigned int                : 2;
		unsigned int TOS            : 1;
		unsigned int                : 1;
		unsigned int SRE            : 1;
		/* const */ unsigned int SRR            : 1;
		unsigned int CLRR           : 1;
		unsigned int SETR           : 1;
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} EINT_SRC0_type;
#define EINT_SRC0	(*( EINT_SRC0_type *) 0xF00000D8u)	/* Service Request Control Reg. for Ext. Interrupt 0 */

typedef volatile union
{
	struct
	{ 
		unsigned int SEL0           : 1;
		unsigned int SEL1           : 1;
		unsigned int SEL2           : 1;
		unsigned int SEL3           : 1;
		unsigned int SEL4           : 1;
		unsigned int SEL5           : 1;
		unsigned int SEL6           : 1;
		unsigned int SEL7           : 1;
		unsigned int SEL8           : 1;
		unsigned int SEL9           : 1;
		unsigned int                : 22;
	} B;
	int I;
	unsigned int U;

} SCU_DMARS_type;
#define SCU_DMARS	(*( SCU_DMARS_type *) 0xF00000DCu)	/* DMA Request Select Register */


/* SBCU CD */
typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int MOD_REV        : 8;
		/* const */ unsigned int MOD_NUMBER     : 8;
		/* const */ unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} SBCU_ID_type;
#define SBCU_ID	(*( SBCU_ID_type *) 0xF0000108u)	/* SBCU Module Identification Register */

typedef volatile union
{
	struct
	{ 
		unsigned int TOUT           : 16;	/* Bus time-out value */
		unsigned int DBG            : 1;	/* Debug trace */
		unsigned int                : 1;
		unsigned int PSE            : 1;	/* Power saving */
		unsigned int SPE            : 1;	/* Starvation protection */
		unsigned int                : 4;
		unsigned int SPC            : 8;	/* Starvation counter sample period */
	} B;
	int I;
	unsigned int U;

} SBCU_CON_type;
#define SBCU_CON	(*( SBCU_CON_type *) 0xF0000110u)	/* SBCU Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int ERRCNT         : 16;
		unsigned int TOUT           : 1;
		unsigned int RDY            : 1;
		unsigned int ABT            : 1;
		unsigned int ACK            : 2;
		unsigned int SVM            : 1;
		unsigned int WRN            : 1;
		unsigned int RDN            : 1;
		unsigned int TAG            : 4;
		unsigned int OPC            : 4;
	} B;
	int I;
	unsigned int U;

} SBCU_ECON_type;
#define SBCU_ECON	(*( SBCU_ECON_type *) 0xF0000120u)	/* Error Control Capture Register */

typedef volatile union
{
	struct
	{ 
		unsigned int FPIADR         : 32;
	} B;
	int I;
	unsigned int U;

} SBCU_EADD_type;
#define SBCU_EADD	(*( SBCU_EADD_type *) 0xF0000124u)	/* Error Address Capture Register */

typedef volatile union
{
	struct
	{ 
		unsigned int FPIDAT         : 32;
	} B;
	int I;
	unsigned int U;

} SBCU_EDAT_type;
#define SBCU_EDAT	(*( SBCU_EDAT_type *) 0xF0000128u)	/* Error Data Capture Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int EO             : 1;
		/* const */ unsigned int OA             : 1;
		unsigned int                : 2;
		unsigned int RA             : 1;
		unsigned int                : 7;
		unsigned int CONCOM         : 3;
		unsigned int                : 1;
		unsigned int ONG            : 1;
		unsigned int                : 3;
		unsigned int ONA1           : 2;
		unsigned int                : 2;
		unsigned int ONA2           : 2;
		unsigned int                : 2;
		unsigned int ONBOS          : 4;
	} B;
	int I;
	unsigned int U;

} SBCU_DBCNTL_type;
#define SBCU_DBCNTL	(*( SBCU_DBCNTL_type *) 0xF0000130u)	/* Debug Control Register (OCDS) */

typedef volatile union
{
	struct
	{ 
		unsigned int FPIGRNT        : 16;
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} SBCU_DBGRNT_type;
#define SBCU_DBGRNT	(*( SBCU_DBGRNT_type *) 0xF0000134u)	/* Debug Grant Mask Register (OCDS) */

typedef volatile union
{
	struct
	{ 
		unsigned int ADR1           : 32;
	} B;
	int I;
	unsigned int U;

} SBCU_DBADR1_type;
#define SBCU_DBADR1	(*( SBCU_DBADR1_type *) 0xF0000138u)	/* Debug Address1 Register (OCDS) */

typedef volatile union
{
	struct
	{ 
		unsigned int ADR2           : 32;
	} B;
	int I;
	unsigned int U;

} SBCU_DBADR2_type;
#define SBCU_DBADR2	(*( SBCU_DBADR2_type *) 0xF000013Cu)	/* Debug Address2 Register (OCDS) */

typedef volatile union
{
	struct
	{ 
		unsigned int OPC            : 4;
		unsigned int SVM            : 1;
		unsigned int                : 3;
		unsigned int WR             : 1;
		unsigned int                : 3;
		unsigned int RD             : 1;
		unsigned int                : 19;
	} B;
	int I;
	unsigned int U;

} SBCU_DBBOS_type;
#define SBCU_DBBOS	(*( SBCU_DBBOS_type *) 0xF0000140u)	/* Debug Bus Operation Register (OCDS) */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int FPIGNT         : 16;
		/* const */ unsigned int DMALAST        : 16;
	} B;
	int I;
	unsigned int U;

} SBCU_DBGNTT_type;
#define SBCU_DBGNTT	(*( SBCU_DBGNTT_type *) 0xF0000144u)	/* Debug Trapped Master Register (OCDS) */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int FPIADR         : 32;
	} B;
	int I;
	unsigned int U;

} SBCU_DBADRT_type;
#define SBCU_DBADRT	(*( SBCU_DBADRT_type *) 0xF0000148u)	/* Debug Trapped Address Register (OCDS) */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int FPIOPC         : 4;
		/* const */ unsigned int FPISVM         : 1;
		/* const */ unsigned int FPIACK         : 2;
		/* const */ unsigned int FPIRDY         : 1;
		/* const */ unsigned int FPIWR          : 1;
		/* const */ unsigned int FPIRST         : 2;
		/* const */ unsigned int FPIOPS         : 1;
		/* const */ unsigned int FPIRD          : 1;
		/* const */ unsigned int FPIABORT       : 1;
		/* const */ unsigned int FPITOUT        : 1;
		/* const */ unsigned int                : 1;
		/* const */ unsigned int FPITAG         : 4;
		/* const */ unsigned int                : 12;
	} B;
	int I;
	unsigned int U;

} SBCU_DBBOST_type;
#define SBCU_DBBOST	(*( SBCU_DBBOST_type *) 0xF000014Cu)	/* Debug Trapped Bus Operation Register (OCDS) */

typedef volatile union
{
	struct
	{ 
		unsigned int SRPN           : 8;
		unsigned int                : 2;
		unsigned int TOS            : 1;
		unsigned int                : 1;
		unsigned int SRE            : 1;
		/* const */ unsigned int SRR            : 1;
		unsigned int CLRR           : 1;
		unsigned int SETR           : 1;
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} SBCU_SRC_type;
#define SBCU_SRC	(*( SBCU_SRC_type *) 0xF00001FCu)	/* SBCU Service Request Control Register */


/* STM CD */
typedef volatile union
{
	struct
	{ 
		unsigned int DISR           : 1;
		/* const */ unsigned int DISS           : 1;
		unsigned int SPEN           : 1;
		unsigned int EDIS           : 1;
		unsigned int SBWE           : 1;
		unsigned int FSOE           : 1;
		unsigned int                : 2;
		unsigned int RMC            : 3;
		unsigned int                : 21;
	} B;
	int I;
	unsigned int U;

} STM_CLC_type;
#define STM_CLC	(*( STM_CLC_type *) 0xF0000200u)	/* STM Clock Control Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int MOD_REV        : 8;
		/* const */ unsigned int MOD_TYPE       : 8;
		/* const */ unsigned int MOD_NUMBER     : 16;
	} B;
	int I;
	unsigned int U;

} STM_ID_type;
#define STM_ID	(*( STM_ID_type *) 0xF0000208u)	/* STM Module Identification Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int STM            : 32;
	} B;
	int I;
	unsigned int U;

} STM_TIM0_type;
#define STM_TIM0	(*( STM_TIM0_type *) 0xF0000210u)	/* STM Register 0 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int STM            : 32;
	} B;
	int I;
	unsigned int U;

} STM_TIM1_type;
#define STM_TIM1	(*( STM_TIM1_type *) 0xF0000214u)	/* STM Register 1 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int STM            : 32;
	} B;
	int I;
	unsigned int U;

} STM_TIM2_type;
#define STM_TIM2	(*( STM_TIM2_type *) 0xF0000218u)	/* STM Register 2 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int STM            : 32;
	} B;
	int I;
	unsigned int U;

} STM_TIM3_type;
#define STM_TIM3	(*( STM_TIM3_type *) 0xF000021Cu)	/* STM Register 3 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int STM            : 32;
	} B;
	int I;
	unsigned int U;

} STM_TIM4_type;
#define STM_TIM4	(*( STM_TIM4_type *) 0xF0000220u)	/* STM Register 4 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int STM            : 32;
	} B;
	int I;
	unsigned int U;

} STM_TIM5_type;
#define STM_TIM5	(*( STM_TIM5_type *) 0xF0000224u)	/* STM Register 5 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int STM            : 24;
		/* const */ unsigned int                : 8;
	} B;
	int I;
	unsigned int U;

} STM_TIM6_type;
#define STM_TIM6	(*( STM_TIM6_type *) 0xF0000228u)	/* STM Register 6 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int STM_CAP        : 24;
		/* const */ unsigned int                : 8;
	} B;
	int I;
	unsigned int U;

} STM_CAP_type;
#define STM_CAP	(*( STM_CAP_type *) 0xF000022Cu)	/* STM Capture Register */

typedef volatile union
{
	struct
	{ 
		unsigned int CMPVAL         : 32;
	} B;
	int I;
	unsigned int U;

} STM_CMP0_type;
#define STM_CMP0	(*( STM_CMP0_type *) 0xF0000230u)	/* Compare Register 1 */

typedef volatile union
{
	struct
	{ 
		unsigned int CMPVAL         : 32;
	} B;
	int I;
	unsigned int U;

} STM_CMP1_type;
#define STM_CMP1	(*( STM_CMP1_type *) 0xF0000234u)	/* Compare Register 1 */

typedef volatile union
{
	struct
	{ 
		unsigned int MSIZE0         : 5;
		unsigned int                : 3;
		unsigned int MSTART0        : 5;
		unsigned int                : 3;
		unsigned int MSIZE1         : 5;
		unsigned int                : 3;
		unsigned int MSTART1        : 5;
		unsigned int                : 3;
	} B;
	int I;
	unsigned int U;

} STM_CMCON_type;
#define STM_CMCON	(*( STM_CMCON_type *) 0xF0000238u)	/* Compare Match Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int CMP0EN         : 1;
		/* const */ unsigned int CMP0IR         : 1;
		unsigned int CMP0OS         : 1;
		unsigned int                : 1;
		unsigned int CMP1EN         : 1;
		/* const */ unsigned int CMP1IR         : 1;
		unsigned int CMP1OS         : 1;
		unsigned int                : 25;
	} B;
	int I;
	unsigned int U;

} STM_ICR_type;
#define STM_ICR	(*( STM_ICR_type *) 0xF000023Cu)	/* STM Interrupt Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int CMP0IRR        : 1;
		unsigned int CMP0IRS        : 1;
		unsigned int CMP1IRR        : 1;
		unsigned int CMP1IRS        : 1;
		unsigned int                : 28;
	} B;
	int I;
	unsigned int U;

} STM_ISRR_type;
#define STM_ISRR	(*( STM_ISRR_type *) 0xF0000240u)	/* Interrupt Set/Reset Register */

typedef volatile union
{
	struct
	{ 
		unsigned int SRPN           : 8;
		unsigned int                : 2;
		unsigned int TOS            : 1;
		unsigned int                : 1;
		unsigned int SRE            : 1;
		/* const */ unsigned int SRR            : 1;
		unsigned int CLRR           : 1;
		unsigned int SETR           : 1;
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} STM_SRC1_type;
#define STM_SRC1	(*( STM_SRC1_type *) 0xF00002F8u)	/* STM Service Request Control Register 1 */

typedef volatile union
{
	struct
	{ 
		unsigned int SRPN           : 8;
		unsigned int                : 2;
		unsigned int TOS            : 1;
		unsigned int                : 1;
		unsigned int SRE            : 1;
		/* const */ unsigned int SRR            : 1;
		unsigned int CLRR           : 1;
		unsigned int SETR           : 1;
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} STM_SRC0_type;
#define STM_SRC0	(*( STM_SRC0_type *) 0xF00002FCu)	/* STM Service Request Control Register 0 */

#define SYSTIME_LOW	STM_TIM0.U
#define SYSTIME_HIGH	STM_CAP.U

/* Cerberus */
typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int REVISION       : 8;
		/* const */ unsigned int MODULE         : 8;
		/* const */ unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} CBS_JDP_ID_type;
#define CBS_JDP_ID	(*( CBS_JDP_ID_type *) 0xF0000308u)	/* Module Identification Register */

typedef volatile union
{
	struct
	{ 
		unsigned int DATA           : 32;
	} B;
	int I;
	unsigned int U;

} CBS_COMDATA_type;
#define CBS_COMDATA	(*( CBS_COMDATA_type *) 0xF0000368u)	/* Cerberus Communication Mode Data Register */

typedef volatile union
{
	struct
	{ 
		unsigned int                : 4;
		/* const */ unsigned int CRSYNC         : 1;
		/* const */ unsigned int CWSYNC         : 1;
		unsigned int CWACK          : 1;
		/* const */ unsigned int COMSYNC        : 1;
		unsigned int                : 4;
		/* const */ unsigned int CHANNEL        : 3;
		unsigned int                : 17;
	} B;
	int I;
	unsigned int U;

} CBS_IOSR_type;
#define CBS_IOSR	(*( CBS_IOSR_type *) 0xF000036Cu)	/* Cerberus Status Register */

typedef volatile union
{
	struct
	{ 
		unsigned int BSTC           : 1;
		unsigned int                : 1;
		unsigned int BSBM           : 1;
		unsigned int BSM1           : 1;
		unsigned int                : 1;
		unsigned int BSDMA          : 1;
		unsigned int                : 2;
		unsigned int BTTC           : 1;
		unsigned int                : 7;
		unsigned int BSPIN          : 1;
		unsigned int                : 2;
		unsigned int BTPIN          : 1;
		unsigned int BTT            : 1;
		unsigned int                : 2;
		unsigned int BTSS           : 1;
		unsigned int                : 8;
	} B;
	int I;
	unsigned int U;

} CBS_MCDBBS_type;
#define CBS_MCDBBS	(*( CBS_MCDBBS_type *) 0xF0000370u)	/* Cerberus Break Bus Switch Configuration Register */

typedef volatile union
{
	struct
	{ 
		unsigned int BTSCL          : 1;
		/* const */ unsigned int                : 5;
		unsigned int SUSP           : 1;
		unsigned int SUS            : 1;
		unsigned int BTSP           : 1;
		unsigned int BTSEN          : 1;
		unsigned int BTSM           : 1;
		/* const */ unsigned int                : 5;
		/* const */ unsigned int SSSTC          : 1;
		/* const */ unsigned int                : 5;
		/* const */ unsigned int SSSBRK         : 1;
		/* const */ unsigned int                : 1;
		/* const */ unsigned int SOS            : 1;
		/* const */ unsigned int SDS            : 1;
		/* const */ unsigned int                : 6;
	} B;
	int I;
	unsigned int U;

} CBS_MCDSSG_type;
#define CBS_MCDSSG	(*( CBS_MCDSSG_type *) 0xF0000374u)	/* Cerberus Suspend Signal Generation Status and Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int PAT            : 8;
		unsigned int                : 8;
		unsigned int IFLCKP         : 1;
		unsigned int IFLCK          : 1;
		unsigned int AUTOKP         : 1;
		unsigned int AUTOK          : 1;
		unsigned int                : 12;
	} B;
	int I;
	unsigned int U;

} CBS_OEC_type;
#define CBS_OEC	(*( CBS_OEC_type *) 0xF0000378u)	/* Cerberus OCDS Enable Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int TRCENP         : 1;
		unsigned int TRCEN          : 1;
		unsigned int TRCMUXP        : 1;
		unsigned int TRCMUX         : 1;
		unsigned int TRCDENP        : 1;
		unsigned int TRCDEN         : 1;
		unsigned int TRCDSP         : 1;
		unsigned int TRCDS          : 1;
		unsigned int                : 4;
		unsigned int WDTSUSP        : 1;
		unsigned int WDTSUS         : 1;
		unsigned int                : 2;
		unsigned int HARRP          : 1;
		unsigned int HARR           : 1;
		unsigned int                : 14;
	} B;
	int I;
	unsigned int U;

} CBS_OCNTRL_type;
#define CBS_OCNTRL	(*( CBS_OCNTRL_type *) 0xF000037Cu)	/* Cerberus OSCU Configuration and Control Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int OEN            : 1;
		/* const */ unsigned int TRCEN          : 1;
		/* const */ unsigned int TRCMUX         : 1;
		/* const */ unsigned int TRCDEN         : 1;
		/* const */ unsigned int TRCDS          : 1;
		/* const */ unsigned int                : 2;
		/* const */ unsigned int WDTSUS         : 1;
		/* const */ unsigned int HARR           : 1;
		/* const */ unsigned int                : 7;
		/* const */ unsigned int IFLCK          : 1;
		/* const */ unsigned int AUTOK          : 1;
		/* const */ unsigned int                : 14;
	} B;
	int I;
	unsigned int U;

} CBS_OSTATE_type;
#define CBS_OSTATE	(*( CBS_OSTATE_type *) 0xF0000380u)	/* Cerberus OSCU Status Register */

typedef volatile union
{
	struct
	{ 
		unsigned int SETCRS         : 1;
		unsigned int SETCWS         : 1;
		unsigned int SETCS          : 1;
		unsigned int CLRCS          : 1;
		unsigned int CHANNEL_P      : 1;
		unsigned int CHANNEL        : 3;
		/* const */ unsigned int                : 8;
		unsigned int SETINTMOD      : 1;
		/* const */ unsigned int                : 1;
		unsigned int SETINTTRC      : 1;
		unsigned int CLRINTTRC      : 1;
		unsigned int TRCMODP        : 1;
		unsigned int TRCMOD         : 2;
		/* const */ unsigned int                : 1;
		/* const */ unsigned int INTMOD         : 1;
		/* const */ unsigned int INTTRC         : 1;
		/* const */ unsigned int                : 6;
	} B;
	int I;
	unsigned int U;

} CBS_INTMOD_type;
#define CBS_INTMOD	(*( CBS_INTMOD_type *) 0xF0000384u)	/* Cerberus Internal Mode Status and Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int ADDR           : 32;
	} B;
	int I;
	unsigned int U;

} CBS_ICTSA_type;
#define CBS_ICTSA	(*( CBS_ICTSA_type *) 0xF0000388u)	/* Cerberus Internal Controlled Trace Source Address Register */

typedef volatile union
{
	struct
	{ 
		unsigned int ADDR           : 32;
	} B;
	int I;
	unsigned int U;

} CBS_ICTTA_type;
#define CBS_ICTTA	(*( CBS_ICTTA_type *) 0xF000038Cu)	/* Cerberus Internal Controlled Trace Target Address Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int BSSTC          : 1;
		unsigned int                : 1;
		/* const */ unsigned int BSSBM          : 1;
		/* const */ unsigned int BSSM1          : 1;
		unsigned int                : 1;
		/* const */ unsigned int BSSDMA         : 1;
		unsigned int                : 2;
		/* const */ unsigned int BSCTC          : 1;
		unsigned int                : 1;
		/* const */ unsigned int BSCBM          : 1;
		/* const */ unsigned int BSCM1          : 1;
		unsigned int                : 1;
		/* const */ unsigned int BSCDMA         : 1;
		unsigned int                : 2;
		/* const */ unsigned int BBS0           : 1;
		/* const */ unsigned int BBS1           : 1;
		/* const */ unsigned int BBC0           : 1;
		/* const */ unsigned int BBC1           : 1;
		unsigned int                : 4;
		unsigned int CAPCLR         : 1;
		unsigned int                : 7;
	} B;
	int I;
	unsigned int U;

} CBS_MCDBBSS_type;
#define CBS_MCDBBSS	(*( CBS_MCDBBSS_type *) 0xF0000390u)	/* Cerberus Break Bus Switch Status Register */

typedef volatile union
{
	struct
	{ 
		unsigned int STCP           : 1;
		unsigned int STCM           : 1;
		unsigned int STCTC          : 1;
		unsigned int                : 29;
	} B;
	int I;
	unsigned int U;

} CBS_MCDSSGC_type;
#define CBS_MCDSSGC	(*( CBS_MCDSSGC_type *) 0xF0000394u)	/* Cerberus Suspend Signal Generation Configuration Register */

typedef volatile union
{
	struct
	{ 
		unsigned int SRPN           : 8;
		unsigned int                : 2;
		unsigned int TOS            : 1;
		unsigned int                : 1;
		unsigned int SRE            : 1;
		/* const */ unsigned int SRR            : 1;
		unsigned int CLRR           : 1;
		unsigned int SETR           : 1;
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} CBS_SRC_type;
#define CBS_SRC	(*( CBS_SRC_type *) 0xF00003FCu)	/* Cerberus Service Request Control Register */


/* GPTU L */
typedef volatile union
{
	struct
	{ 
		unsigned int DISR           : 1;
		/* const */ unsigned int DISS           : 1;
		unsigned int SPEN           : 1;
		unsigned int EDIS           : 1;
		unsigned int SBWE           : 1;
		unsigned int FSOE           : 1;
		unsigned int                : 2;
		unsigned int RMC            : 8;
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} GPTU_CLC_type;
#define GPTU_CLC	(*( GPTU_CLC_type *) 0xF0000600u)	/* GPTU Clock Control Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int MOD_REV        : 8;
		/* const */ unsigned int MOD_TYPE       : 8;
		/* const */ unsigned int MOD_NUMBER     : 16;
	} B;
	int I;
	unsigned int U;

} GPTU_ID_type;
#define GPTU_ID	(*( GPTU_ID_type *) 0xF0000608u)	/* GPTU Module Identification Register */

typedef volatile union
{
	struct
	{ 
		unsigned int T0AINS         : 2;
		unsigned int T0BINS         : 2;
		unsigned int T0CINS         : 2;
		unsigned int T0DINS         : 2;
		unsigned int T1AINS         : 2;
		unsigned int T1BINS         : 2;
		unsigned int T1CINS         : 2;
		unsigned int T1DINS         : 2;
		unsigned int T0AREL         : 1;
		unsigned int T0BREL         : 1;
		unsigned int T0CREL         : 1;
		unsigned int T0DREL         : 1;
		unsigned int T1AREL         : 1;
		unsigned int T1BREL         : 1;
		unsigned int T1CREL         : 1;
		unsigned int T1DREL         : 1;
		unsigned int T0INC          : 1;
		unsigned int T1INC          : 1;
		unsigned int                : 2;
		unsigned int T01IN0         : 2;
		unsigned int T01IN1         : 2;
	} B;
	int I;
	unsigned int U;

} GPTU_T01IRS_type;
#define GPTU_T01IRS	(*( GPTU_T01IRS_type *) 0xF0000610u)	/* GPTU Timer T0 and T1 Input and Reload Source Selection Register */

typedef volatile union
{
	struct
	{ 
		unsigned int SOUT00         : 2;
		unsigned int SOUT01         : 2;
		unsigned int STRG00         : 2;
		unsigned int STRG01         : 2;
		unsigned int SSR00          : 2;
		unsigned int SSR01          : 2;
		unsigned int                : 4;
		unsigned int SOUT10         : 2;
		unsigned int SOUT11         : 2;
		unsigned int STRG10         : 2;
		unsigned int STRG11         : 2;
		unsigned int SSR10          : 2;
		unsigned int SSR11          : 2;
		unsigned int                : 4;
	} B;
	int I;
	unsigned int U;

} GPTU_T01OTS_type;
#define GPTU_T01OTS	(*( GPTU_T01OTS_type *) 0xF0000614u)	/* GPTU  Timer T0 and T1 Output, Trigger and Service Request Register */

typedef volatile union
{
	struct
	{ 
		unsigned int T2ACSRC        : 2;
		unsigned int T2ACDIR        : 2;
		unsigned int T2ACCLR        : 2;
		unsigned int T2ACOV         : 2;
		unsigned int T2ACOS         : 1;
		unsigned int                : 3;
		unsigned int T2ADIR         : 1;
		unsigned int                : 2;
		unsigned int T2SPLIT        : 1;
		unsigned int T2BCSRC        : 2;
		unsigned int T2BCDIR        : 2;
		unsigned int T2BCCLR        : 2;
		unsigned int T2BCOV         : 2;
		unsigned int T2BCOS         : 1;
		unsigned int                : 3;
		unsigned int T2BDIR         : 1;
		unsigned int                : 3;
	} B;
	int I;
	unsigned int U;

} GPTU_T2CON_type;
#define GPTU_T2CON	(*( GPTU_T2CON_type *) 0xF0000618u)	/* GPTU Timer T2 Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int T2AMRC0        : 3;
		unsigned int                : 1;
		unsigned int T2AMRC1        : 3;
		unsigned int                : 9;
		unsigned int T2BMRC0        : 3;
		unsigned int                : 1;
		unsigned int T2BMRC1        : 3;
		unsigned int                : 9;
	} B;
	int I;
	unsigned int U;

} GPTU_T2RCCON_type;
#define GPTU_T2RCCON	(*( GPTU_T2RCCON_type *) 0xF000061Cu)	/* GPTU Timer T2 Reload/Capture Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int T2AICNT        : 3;
		unsigned int                : 1;
		unsigned int T2AISTR        : 3;
		unsigned int                : 1;
		unsigned int T2AISTP        : 3;
		unsigned int                : 1;
		unsigned int T2AIUD         : 3;
		unsigned int                : 1;
		unsigned int T2AICLR        : 3;
		unsigned int                : 1;
		unsigned int T2AIRC0        : 3;
		unsigned int                : 1;
		unsigned int T2AIRC1        : 3;
		unsigned int                : 5;
	} B;
	int I;
	unsigned int U;

} GPTU_T2AIS_type;
#define GPTU_T2AIS	(*( GPTU_T2AIS_type *) 0xF0000620u)	/* GPTU Timer T2/T2A External Input Selection Register */

typedef volatile union
{
	struct
	{ 
		unsigned int T2BICNT        : 3;
		unsigned int                : 1;
		unsigned int T2BISTR        : 3;
		unsigned int                : 1;
		unsigned int T2BISTP        : 3;
		unsigned int                : 1;
		unsigned int T2BIUD         : 3;
		unsigned int                : 1;
		unsigned int T2BICLR        : 3;
		unsigned int                : 1;
		unsigned int T2BIRC0        : 3;
		unsigned int                : 1;
		unsigned int T2BIRC1        : 3;
		unsigned int                : 5;
	} B;
	int I;
	unsigned int U;

} GPTU_T2BIS_type;
#define GPTU_T2BIS	(*( GPTU_T2BIS_type *) 0xF0000624u)	/* GPTU Timer T2B External Input Selection Register */

typedef volatile union
{
	struct
	{ 
		unsigned int T2AECNT        : 2;
		unsigned int T2AESTR        : 2;
		unsigned int T2AESTP        : 2;
		unsigned int T2AEUD         : 2;
		unsigned int T2AECLR        : 2;
		unsigned int T2AERC0        : 2;
		unsigned int T2AERC1        : 2;
		unsigned int                : 2;
		unsigned int T2BECNT        : 2;
		unsigned int T2BESTR        : 2;
		unsigned int T2BESTP        : 2;
		unsigned int T2BEUD         : 2;
		unsigned int T2BECLR        : 2;
		unsigned int T2BERC0        : 2;
		unsigned int T2BERC1        : 2;
		unsigned int                : 2;
	} B;
	int I;
	unsigned int U;

} GPTU_T2ES_type;
#define GPTU_T2ES	(*( GPTU_T2ES_type *) 0xF0000628u)	/* GPTU Timer T2 External Input Edge Selection Register */

typedef volatile union
{
	struct
	{ 
		unsigned int SO0            : 3;
		unsigned int                : 1;
		unsigned int SO1            : 3;
		unsigned int                : 1;
		unsigned int SO2            : 3;
		unsigned int                : 1;
		unsigned int SO3            : 3;
		unsigned int                : 1;
		unsigned int SO4            : 3;
		unsigned int                : 1;
		unsigned int SO5            : 3;
		unsigned int                : 1;
		unsigned int SO6            : 3;
		unsigned int                : 1;
		unsigned int SO7            : 3;
		unsigned int                : 1;
	} B;
	int I;
	unsigned int U;

} GPTU_OSEL_type;
#define GPTU_OSEL	(*( GPTU_OSEL_type *) 0xF000062Cu)	/* GPTU Output Source Selection Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int OUT0           : 1;
		/* const */ unsigned int OUT1           : 1;
		/* const */ unsigned int OUT2           : 1;
		/* const */ unsigned int OUT3           : 1;
		/* const */ unsigned int OUT4           : 1;
		/* const */ unsigned int OUT5           : 1;
		/* const */ unsigned int OUT6           : 1;
		/* const */ unsigned int OUT7           : 1;
		unsigned int CLRO0          : 1;
		unsigned int CLRO1          : 1;
		unsigned int CLRO2          : 1;
		unsigned int CLRO3          : 1;
		unsigned int CLRO4          : 1;
		unsigned int CLRO5          : 1;
		unsigned int CLRO6          : 1;
		unsigned int CLRO7          : 1;
		unsigned int SETO0          : 1;
		unsigned int SETO1          : 1;
		unsigned int SETO2          : 1;
		unsigned int SETO3          : 1;
		unsigned int SETO4          : 1;
		unsigned int SETO5          : 1;
		unsigned int SETO6          : 1;
		unsigned int SETO7          : 1;
		unsigned int                : 8;
	} B;
	int I;
	unsigned int U;

} GPTU_OUT_type;
#define GPTU_OUT	(*( GPTU_OUT_type *) 0xF0000630u)	/* GPTU Output Register */

typedef volatile union
{
	struct
	{ 
		unsigned int T0A            : 8;
		unsigned int T0B            : 8;
		unsigned int T0C            : 8;
		unsigned int T0D            : 8;
	} B;
	int I;
	unsigned int U;

} GPTU_T0DCBA_type;
#define GPTU_T0DCBA	(*( GPTU_T0DCBA_type *) 0xF0000634u)	/* GPTU Timer T0 Count Register (T0D, T0C, T0B,T0A) */

typedef volatile union
{
	struct
	{ 
		unsigned int T0A            : 8;
		unsigned int T0B            : 8;
		unsigned int T0C            : 8;
		unsigned int                : 8;
	} B;
	int I;
	unsigned int U;

} GPTU_T0CBA_type;
#define GPTU_T0CBA	(*( GPTU_T0CBA_type *) 0xF0000638u)	/* GPTU Timer T0 Count Register (T0C, T0B, T0A) */

typedef volatile union
{
	struct
	{ 
		unsigned int T0RA           : 8;
		unsigned int T0RB           : 8;
		unsigned int T0RC           : 8;
		unsigned int T0RD           : 8;
	} B;
	int I;
	unsigned int U;

} GPTU_T0RDCBA_type;
#define GPTU_T0RDCBA	(*( GPTU_T0RDCBA_type *) 0xF000063Cu)	/* GPTU Timer T0 Reload Register (T0RD, T0RC, T0RB,T0RA) */

typedef volatile union
{
	struct
	{ 
		unsigned int T0RA           : 8;
		unsigned int T0RB           : 8;
		unsigned int T0RC           : 8;
		unsigned int                : 8;
	} B;
	int I;
	unsigned int U;

} GPTU_T0RCBA_type;
#define GPTU_T0RCBA	(*( GPTU_T0RCBA_type *) 0xF0000640u)	/* GPTU Timer T0 Reload Register (T0RC, T0RB, T0RA) */

typedef volatile union
{
	struct
	{ 
		unsigned int T1A            : 8;
		unsigned int T1B            : 8;
		unsigned int T1C            : 8;
		unsigned int T1D            : 8;
	} B;
	int I;
	unsigned int U;

} GPTU_T1DCBA_type;
#define GPTU_T1DCBA	(*( GPTU_T1DCBA_type *) 0xF0000644u)	/* GPTU Timer T1 Count Register (T1D, T1C, T1B,T1A) */

typedef volatile union
{
	struct
	{ 
		unsigned int T1A            : 8;
		unsigned int T1B            : 8;
		unsigned int T1C            : 8;
		unsigned int                : 8;
	} B;
	int I;
	unsigned int U;

} GPTU_T1CBA_type;
#define GPTU_T1CBA	(*( GPTU_T1CBA_type *) 0xF0000648u)	/* GPTU Timer T1 Count Register (T1C, T1B, T1A) */

typedef volatile union
{
	struct
	{ 
		unsigned int T1RA           : 8;
		unsigned int T1RB           : 8;
		unsigned int T1RC           : 8;
		unsigned int T1RD           : 8;
	} B;
	int I;
	unsigned int U;

} GPTU_T1RDCBA_type;
#define GPTU_T1RDCBA	(*( GPTU_T1RDCBA_type *) 0xF000064Cu)	/* GPTU Timer T1 Reload Register (T1RD, T1RC, T1RB,T1RA) */

typedef volatile union
{
	struct
	{ 
		unsigned int T1RA           : 8;
		unsigned int T1RB           : 8;
		unsigned int T1RC           : 8;
		unsigned int                : 8;
	} B;
	int I;
	unsigned int U;

} GPTU_T1RCBA_type;
#define GPTU_T1RCBA	(*( GPTU_T1RCBA_type *) 0xF0000650u)	/* GPTU Timer T1 Reload Register (T1RC, T1RB, T1RA) */

typedef volatile union
{
	struct
	{ 
		unsigned int T2A            : 16;
		unsigned int T2B            : 16;
	} B;
	int I;
	unsigned int U;

} GPTU_T2_type;
#define GPTU_T2	(*( GPTU_T2_type *) 0xF0000654u)	/* GPTU Timer T2 Count Register */

typedef volatile union
{
	struct
	{ 
		unsigned int T2ARC0         : 16;
		unsigned int T2BRC0         : 16;
	} B;
	int I;
	unsigned int U;

} GPTU_T2RC0_type;
#define GPTU_T2RC0	(*( GPTU_T2RC0_type *) 0xF0000658u)	/* GPTU Timer T2 Reload/Capture Register 0 */

typedef volatile union
{
	struct
	{ 
		unsigned int T2ARC1         : 16;
		unsigned int T2BRC1         : 16;
	} B;
	int I;
	unsigned int U;

} GPTU_T2RC1_type;
#define GPTU_T2RC1	(*( GPTU_T2RC1_type *) 0xF000065Cu)	/* GPTU Timer T2 Reload/Capture Register 1 */

typedef volatile union
{
	struct
	{ 
		unsigned int T0ARUN         : 1;
		unsigned int T0BRUN         : 1;
		unsigned int T0CRUN         : 1;
		unsigned int T0DRUN         : 1;
		unsigned int T1ARUN         : 1;
		unsigned int T1BRUN         : 1;
		unsigned int T1CRUN         : 1;
		unsigned int T1DRUN         : 1;
		/* const */ unsigned int T2ARUN         : 1;
		unsigned int T2ASETR        : 1;
		unsigned int T2ACLRR        : 1;
		unsigned int                : 1;
		/* const */ unsigned int T2BRUN         : 1;
		unsigned int T2BSETR        : 1;
		unsigned int T2BCLRR        : 1;
		unsigned int                : 17;
	} B;
	int I;
	unsigned int U;

} GPTU_T012RUN_type;
#define GPTU_T012RUN	(*( GPTU_T012RUN_type *) 0xF0000660u)	/* GPTU Timers T0, T1 and T2 Run Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int SSR7           : 4;
		unsigned int SSR6           : 4;
		unsigned int SSR5           : 4;
		unsigned int SSR4           : 4;
		unsigned int SSR3           : 4;
		unsigned int SSR2           : 4;
		unsigned int SSR1           : 4;
		unsigned int SSR0           : 4;
	} B;
	int I;
	unsigned int U;

} GPTU_SRSEL_type;
#define GPTU_SRSEL	(*( GPTU_SRSEL_type *) 0xF00006DCu)	/* GPTU Service Request Source Select Register */

typedef volatile union
{
	struct
	{ 
		unsigned int SRPN           : 8;
		unsigned int                : 2;
		unsigned int TOS            : 1;
		unsigned int                : 1;
		unsigned int SRE            : 1;
		/* const */ unsigned int SRR            : 1;
		unsigned int CLRR           : 1;
		unsigned int SETR           : 1;
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} GPTU_SRC7_type;
#define GPTU_SRC7	(*( GPTU_SRC7_type *) 0xF00006E0u)	/* GPTU Service Request Control Register 7 */

typedef volatile union
{
	struct
	{ 
		unsigned int SRPN           : 8;
		unsigned int                : 2;
		unsigned int TOS            : 1;
		unsigned int                : 1;
		unsigned int SRE            : 1;
		/* const */ unsigned int SRR            : 1;
		unsigned int CLRR           : 1;
		unsigned int SETR           : 1;
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} GPTU_SRC6_type;
#define GPTU_SRC6	(*( GPTU_SRC6_type *) 0xF00006E4u)	/* GPTU Service Request Control Register 6 */

typedef volatile union
{
	struct
	{ 
		unsigned int SRPN           : 8;
		unsigned int                : 2;
		unsigned int TOS            : 1;
		unsigned int                : 1;
		unsigned int SRE            : 1;
		/* const */ unsigned int SRR            : 1;
		unsigned int CLRR           : 1;
		unsigned int SETR           : 1;
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} GPTU_SRC5_type;
#define GPTU_SRC5	(*( GPTU_SRC5_type *) 0xF00006E8u)	/* GPTU Service Request Control Register 5 */

typedef volatile union
{
	struct
	{ 
		unsigned int SRPN           : 8;
		unsigned int                : 2;
		unsigned int TOS            : 1;
		unsigned int                : 1;
		unsigned int SRE            : 1;
		/* const */ unsigned int SRR            : 1;
		unsigned int CLRR           : 1;
		unsigned int SETR           : 1;
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} GPTU_SRC4_type;
#define GPTU_SRC4	(*( GPTU_SRC4_type *) 0xF00006ECu)	/* GPTU Service Request Control Register 4 */

typedef volatile union
{
	struct
	{ 
		unsigned int SRPN           : 8;
		unsigned int                : 2;
		unsigned int TOS            : 1;
		unsigned int                : 1;
		unsigned int SRE            : 1;
		/* const */ unsigned int SRR            : 1;
		unsigned int CLRR           : 1;
		unsigned int SETR           : 1;
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} GPTU_SRC3_type;
#define GPTU_SRC3	(*( GPTU_SRC3_type *) 0xF00006F0u)	/* GPTU Service Request Control Register 3 */

typedef volatile union
{
	struct
	{ 
		unsigned int SRPN           : 8;
		unsigned int                : 2;
		unsigned int TOS            : 1;
		unsigned int                : 1;
		unsigned int SRE            : 1;
		/* const */ unsigned int SRR            : 1;
		unsigned int CLRR           : 1;
		unsigned int SETR           : 1;
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} GPTU_SRC2_type;
#define GPTU_SRC2	(*( GPTU_SRC2_type *) 0xF00006F4u)	/* GPTU Service Request Control Register 2 */

typedef volatile union
{
	struct
	{ 
		unsigned int SRPN           : 8;
		unsigned int                : 2;
		unsigned int TOS            : 1;
		unsigned int                : 1;
		unsigned int SRE            : 1;
		/* const */ unsigned int SRR            : 1;
		unsigned int CLRR           : 1;
		unsigned int SETR           : 1;
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} GPTU_SRC1_type;
#define GPTU_SRC1	(*( GPTU_SRC1_type *) 0xF00006F8u)	/* GPTU Service Request Control Register 1 */

typedef volatile union
{
	struct
	{ 
		unsigned int SRPN           : 8;
		unsigned int                : 2;
		unsigned int TOS            : 1;
		unsigned int                : 1;
		unsigned int SRE            : 1;
		/* const */ unsigned int SRR            : 1;
		unsigned int CLRR           : 1;
		unsigned int SETR           : 1;
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} GPTU_SRC0_type;
#define GPTU_SRC0	(*( GPTU_SRC0_type *) 0xF00006FCu)	/* GPTU Service Request Control Register 0 */


/* P0 CD */
typedef volatile union
{
	struct
	{ 
		unsigned int P0             : 1;
		unsigned int P1             : 1;
		unsigned int P2             : 1;
		unsigned int P3             : 1;
		unsigned int P4             : 1;
		unsigned int P5             : 1;
		unsigned int P6             : 1;
		unsigned int P7             : 1;
		unsigned int P8             : 1;
		unsigned int P9             : 1;
		unsigned int P10            : 1;
		unsigned int P11            : 1;
		unsigned int P12            : 1;
		unsigned int P13            : 1;
		unsigned int P14            : 1;
		unsigned int P15            : 1;
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} P0_OUT_type;
#define P0_OUT	(*( P0_OUT_type *) 0xF0000C10u)	/* Port 0 Data Output Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int P0             : 1;
		/* const */ unsigned int P1             : 1;
		/* const */ unsigned int P2             : 1;
		/* const */ unsigned int P3             : 1;
		/* const */ unsigned int P4             : 1;
		/* const */ unsigned int P5             : 1;
		/* const */ unsigned int P6             : 1;
		/* const */ unsigned int P7             : 1;
		/* const */ unsigned int P8             : 1;
		/* const */ unsigned int P9             : 1;
		/* const */ unsigned int P10            : 1;
		/* const */ unsigned int P11            : 1;
		/* const */ unsigned int P12            : 1;
		/* const */ unsigned int P13            : 1;
		/* const */ unsigned int P14            : 1;
		/* const */ unsigned int P15            : 1;
		/* const */ unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} P0_IN_type;
#define P0_IN	(*( P0_IN_type *) 0xF0000C14u)	/* Port 0 Data Input Register */

typedef volatile union
{
	struct
	{ 
		unsigned int P0             : 1;
		unsigned int P1             : 1;
		unsigned int P2             : 1;
		unsigned int P3             : 1;
		unsigned int P4             : 1;
		unsigned int P5             : 1;
		unsigned int P6             : 1;
		unsigned int P7             : 1;
		unsigned int P8             : 1;
		unsigned int P9             : 1;
		unsigned int P10            : 1;
		unsigned int P11            : 1;
		unsigned int P12            : 1;
		unsigned int P13            : 1;
		unsigned int P14            : 1;
		unsigned int P15            : 1;
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} P0_DIR_type;
#define P0_DIR	(*( P0_DIR_type *) 0xF0000C18u)	/* Port 0 Direction Register */

typedef volatile union
{
	struct
	{ 
		unsigned int P0             : 1;
		unsigned int P1             : 1;
		unsigned int P2             : 1;
		unsigned int P3             : 1;
		unsigned int P4             : 1;
		unsigned int P5             : 1;
		unsigned int P6             : 1;
		unsigned int P7             : 1;
		unsigned int P8             : 1;
		unsigned int P9             : 1;
		unsigned int P10            : 1;
		unsigned int P11            : 1;
		unsigned int P12            : 1;
		unsigned int P13            : 1;
		unsigned int P14            : 1;
		unsigned int P15            : 1;
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} P0_OD_type;
#define P0_OD	(*( P0_OD_type *) 0xF0000C1Cu)	/* Port 0 Open Drain Mode Register */

typedef volatile union
{
	struct
	{ 
		unsigned int P0             : 1;
		unsigned int P1             : 1;
		unsigned int P2             : 1;
		unsigned int P3             : 1;
		unsigned int P4             : 1;
		unsigned int P5             : 1;
		unsigned int P6             : 1;
		unsigned int P7             : 1;
		unsigned int P8             : 1;
		unsigned int P9             : 1;
		unsigned int P10            : 1;
		unsigned int P11            : 1;
		unsigned int P12            : 1;
		unsigned int P13            : 1;
		unsigned int P14            : 1;
		unsigned int P15            : 1;
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} P0_PUDSEL_type;
#define P0_PUDSEL	(*( P0_PUDSEL_type *) 0xF0000C28u)	/* Port 0 Pull up/down Select Register */

typedef volatile union
{
	struct
	{ 
		unsigned int P0             : 1;
		unsigned int P1             : 1;
		unsigned int P2             : 1;
		unsigned int P3             : 1;
		unsigned int P4             : 1;
		unsigned int P5             : 1;
		unsigned int P6             : 1;
		unsigned int P7             : 1;
		unsigned int P8             : 1;
		unsigned int P9             : 1;
		unsigned int P10            : 1;
		unsigned int P11            : 1;
		unsigned int P12            : 1;
		unsigned int P13            : 1;
		unsigned int P14            : 1;
		unsigned int P15            : 1;
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} P0_PUDEN_type;
#define P0_PUDEN	(*( P0_PUDEN_type *) 0xF0000C2Cu)	/* Port 0 Pull up/down Enable Register */

typedef volatile union
{
	struct
	{ 
		unsigned int P0             : 1;
		unsigned int P1             : 1;
		unsigned int P2             : 1;
		unsigned int P3             : 1;
		unsigned int P4             : 1;
		unsigned int P5             : 1;
		unsigned int P6             : 1;
		unsigned int P7             : 1;
		unsigned int P8             : 1;
		unsigned int P9             : 1;
		unsigned int P10            : 1;
		unsigned int P11            : 1;
		unsigned int P12            : 1;
		unsigned int P13            : 1;
		unsigned int P14            : 1;
		unsigned int P15            : 1;
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} P0_ALTSEL0_type;
#define P0_ALTSEL0	(*( P0_ALTSEL0_type *) 0xF0000C44u)	/* Port 0 Alternate Select Register 0 */

typedef volatile union
{
	struct
	{ 
		unsigned int P0             : 1;
		unsigned int P1             : 1;
		unsigned int P2             : 1;
		unsigned int P3             : 1;
		unsigned int P4             : 1;
		unsigned int P5             : 1;
		unsigned int P6             : 1;
		unsigned int P7             : 1;
		unsigned int P8             : 1;
		unsigned int P9             : 1;
		unsigned int P10            : 1;
		unsigned int P11            : 1;
		unsigned int P12            : 1;
		unsigned int P13            : 1;
		unsigned int P14            : 1;
		unsigned int P15            : 1;
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} P0_ALTSEL1_type;
#define P0_ALTSEL1	(*( P0_ALTSEL1_type *) 0xF0000C48u)	/* Port 0 Alternate Select Register 1 */


/* P1 CD */
typedef volatile union
{
	struct
	{ 
		unsigned int P0             : 1;
		unsigned int P1             : 1;
		unsigned int P2             : 1;
		unsigned int P3             : 1;
		unsigned int P4             : 1;
		unsigned int P5             : 1;
		unsigned int P6             : 1;
		unsigned int P7             : 1;
		unsigned int P8             : 1;
		unsigned int P9             : 1;
		unsigned int P10            : 1;
		unsigned int P11            : 1;
		unsigned int P12            : 1;
		unsigned int P13            : 1;
		unsigned int P14            : 1;
		unsigned int P15            : 1;
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} P1_OUT_type;
#define P1_OUT	(*( P1_OUT_type *) 0xF0000D10u)	/* Port 1 Data Output Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int P0             : 1;
		/* const */ unsigned int P1             : 1;
		/* const */ unsigned int P2             : 1;
		/* const */ unsigned int P3             : 1;
		/* const */ unsigned int P4             : 1;
		/* const */ unsigned int P5             : 1;
		/* const */ unsigned int P6             : 1;
		/* const */ unsigned int P7             : 1;
		/* const */ unsigned int P8             : 1;
		/* const */ unsigned int P9             : 1;
		/* const */ unsigned int P10            : 1;
		/* const */ unsigned int P11            : 1;
		/* const */ unsigned int P12            : 1;
		/* const */ unsigned int P13            : 1;
		/* const */ unsigned int P14            : 1;
		/* const */ unsigned int P15            : 1;
		/* const */ unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} P1_IN_type;
#define P1_IN	(*( P1_IN_type *) 0xF0000D14u)	/* Port 1 Data Input Register */

typedef volatile union
{
	struct
	{ 
		unsigned int P0             : 1;
		unsigned int P1             : 1;
		unsigned int P2             : 1;
		unsigned int P3             : 1;
		unsigned int P4             : 1;
		unsigned int P5             : 1;
		unsigned int P6             : 1;
		unsigned int P7             : 1;
		unsigned int P8             : 1;
		unsigned int P9             : 1;
		unsigned int P10            : 1;
		unsigned int P11            : 1;
		unsigned int P12            : 1;
		unsigned int P13            : 1;
		unsigned int P14            : 1;
		unsigned int P15            : 1;
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} P1_DIR_type;
#define P1_DIR	(*( P1_DIR_type *) 0xF0000D18u)	/* Port 1 Direction Register */

typedef volatile union
{
	struct
	{ 
		unsigned int P0             : 1;
		unsigned int P1             : 1;
		unsigned int P2             : 1;
		unsigned int P3             : 1;
		unsigned int P4             : 1;
		unsigned int P5             : 1;
		unsigned int P6             : 1;
		unsigned int P7             : 1;
		unsigned int P8             : 1;
		unsigned int P9             : 1;
		unsigned int P10            : 1;
		unsigned int P11            : 1;
		unsigned int P12            : 1;
		unsigned int P13            : 1;
		unsigned int P14            : 1;
		unsigned int P15            : 1;
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} P1_OD_type;
#define P1_OD	(*( P1_OD_type *) 0xF0000D1Cu)	/* Port 1 Open Drain Mode Register */

typedef volatile union
{
	struct
	{ 
		unsigned int P0             : 1;
		unsigned int P1             : 1;
		unsigned int P2             : 1;
		unsigned int P3             : 1;
		unsigned int P4             : 1;
		unsigned int P5             : 1;
		unsigned int P6             : 1;
		unsigned int P7             : 1;
		unsigned int P8             : 1;
		unsigned int P9             : 1;
		unsigned int P10            : 1;
		unsigned int P11            : 1;
		unsigned int P12            : 1;
		unsigned int P13            : 1;
		unsigned int P14            : 1;
		unsigned int P15            : 1;
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} P1_PUDSEL_type;
#define P1_PUDSEL	(*( P1_PUDSEL_type *) 0xF0000D28u)	/* Port 1 Pull up/down Select Register */

typedef volatile union
{
	struct
	{ 
		unsigned int P0             : 1;
		unsigned int P1             : 1;
		unsigned int P2             : 1;
		unsigned int P3             : 1;
		unsigned int P4             : 1;
		unsigned int P5             : 1;
		unsigned int P6             : 1;
		unsigned int P7             : 1;
		unsigned int P8             : 1;
		unsigned int P9             : 1;
		unsigned int P10            : 1;
		unsigned int P11            : 1;
		unsigned int P12            : 1;
		unsigned int P13            : 1;
		unsigned int P14            : 1;
		unsigned int P15            : 1;
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} P1_PUDEN_type;
#define P1_PUDEN	(*( P1_PUDEN_type *) 0xF0000D2Cu)	/* Port 1 Pull up/down Enable Register */

typedef volatile union
{
	struct
	{ 
		unsigned int P0             : 1;
		unsigned int P1             : 1;
		unsigned int P2             : 1;
		unsigned int P3             : 1;
		unsigned int P4             : 1;
		unsigned int P5             : 1;
		unsigned int P6             : 1;
		unsigned int P7             : 1;
		unsigned int P8             : 1;
		unsigned int P9             : 1;
		unsigned int P10            : 1;
		unsigned int P11            : 1;
		unsigned int P12            : 1;
		unsigned int P13            : 1;
		unsigned int P14            : 1;
		unsigned int P15            : 1;
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} P1_ALTSEL0_type;
#define P1_ALTSEL0	(*( P1_ALTSEL0_type *) 0xF0000D44u)	/* Port 1 Alternate Select Register 0 */

typedef volatile union
{
	struct
	{ 
		unsigned int P0             : 1;
		unsigned int P1             : 1;
		unsigned int P2             : 1;
		unsigned int P3             : 1;
		unsigned int P4             : 1;
		unsigned int P5             : 1;
		unsigned int P6             : 1;
		unsigned int P7             : 1;
		unsigned int P8             : 1;
		unsigned int P9             : 1;
		unsigned int P10            : 1;
		unsigned int P11            : 1;
		unsigned int P12            : 1;
		unsigned int P13            : 1;
		unsigned int P14            : 1;
		unsigned int P15            : 1;
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} P1_ALTSEL1_type;
#define P1_ALTSEL1	(*( P1_ALTSEL1_type *) 0xF0000D48u)	/* Port 1 Alternate Select Register 1 */


/* P2 CD */
typedef volatile union
{
	struct
	{ 
		unsigned int P0             : 1;
		unsigned int P1             : 1;
		unsigned int P2             : 1;
		unsigned int P3             : 1;
		unsigned int P4             : 1;
		unsigned int P5             : 1;
		unsigned int P6             : 1;
		unsigned int P7             : 1;
		unsigned int P8             : 1;
		unsigned int P9             : 1;
		unsigned int P10            : 1;
		unsigned int P11            : 1;
		unsigned int P12            : 1;
		unsigned int P13            : 1;
		unsigned int P14            : 1;
		unsigned int P15            : 1;
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} P2_OUT_type;
#define P2_OUT	(*( P2_OUT_type *) 0xF0000E10u)	/* Port 2 Data Output Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int P0             : 1;
		/* const */ unsigned int P1             : 1;
		/* const */ unsigned int P2             : 1;
		/* const */ unsigned int P3             : 1;
		/* const */ unsigned int P4             : 1;
		/* const */ unsigned int P5             : 1;
		/* const */ unsigned int P6             : 1;
		/* const */ unsigned int P7             : 1;
		/* const */ unsigned int P8             : 1;
		/* const */ unsigned int P9             : 1;
		/* const */ unsigned int P10            : 1;
		/* const */ unsigned int P11            : 1;
		/* const */ unsigned int P12            : 1;
		/* const */ unsigned int P13            : 1;
		/* const */ unsigned int P14            : 1;
		/* const */ unsigned int P15            : 1;
		/* const */ unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} P2_IN_type;
#define P2_IN	(*( P2_IN_type *) 0xF0000E14u)	/* Port 2 Data Input Register */

typedef volatile union
{
	struct
	{ 
		unsigned int P0             : 1;
		unsigned int P1             : 1;
		unsigned int P2             : 1;
		unsigned int P3             : 1;
		unsigned int P4             : 1;
		unsigned int P5             : 1;
		unsigned int P6             : 1;
		unsigned int P7             : 1;
		unsigned int P8             : 1;
		unsigned int P9             : 1;
		unsigned int P10            : 1;
		unsigned int P11            : 1;
		unsigned int P12            : 1;
		unsigned int P13            : 1;
		unsigned int P14            : 1;
		unsigned int P15            : 1;
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} P2_DIR_type;
#define P2_DIR	(*( P2_DIR_type *) 0xF0000E18u)	/* Port 2 Direction Register */

typedef volatile union
{
	struct
	{ 
		unsigned int P0             : 1;
		unsigned int P1             : 1;
		unsigned int P2             : 1;
		unsigned int P3             : 1;
		unsigned int P4             : 1;
		unsigned int P5             : 1;
		unsigned int P6             : 1;
		unsigned int P7             : 1;
		unsigned int P8             : 1;
		unsigned int P9             : 1;
		unsigned int P10            : 1;
		unsigned int P11            : 1;
		unsigned int P12            : 1;
		unsigned int P13            : 1;
		unsigned int P14            : 1;
		unsigned int P15            : 1;
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} P2_OD_type;
#define P2_OD	(*( P2_OD_type *) 0xF0000E1Cu)	/* Port 2 Open Drain Mode Register */

typedef volatile union
{
	struct
	{ 
		unsigned int P0             : 1;
		unsigned int P1             : 1;
		unsigned int P2             : 1;
		unsigned int P3             : 1;
		unsigned int P4             : 1;
		unsigned int P5             : 1;
		unsigned int P6             : 1;
		unsigned int P7             : 1;
		unsigned int P8             : 1;
		unsigned int P9             : 1;
		unsigned int P10            : 1;
		unsigned int P11            : 1;
		unsigned int P12            : 1;
		unsigned int P13            : 1;
		unsigned int P14            : 1;
		unsigned int P15            : 1;
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} P2_PUDSEL_type;
#define P2_PUDSEL	(*( P2_PUDSEL_type *) 0xF0000E28u)	/* Port 2 Pull up/down Select Register */

typedef volatile union
{
	struct
	{ 
		unsigned int P0             : 1;
		unsigned int P1             : 1;
		unsigned int P2             : 1;
		unsigned int P3             : 1;
		unsigned int P4             : 1;
		unsigned int P5             : 1;
		unsigned int P6             : 1;
		unsigned int P7             : 1;
		unsigned int P8             : 1;
		unsigned int P9             : 1;
		unsigned int P10            : 1;
		unsigned int P11            : 1;
		unsigned int P12            : 1;
		unsigned int P13            : 1;
		unsigned int P14            : 1;
		unsigned int P15            : 1;
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} P2_PUDEN_type;
#define P2_PUDEN	(*( P2_PUDEN_type *) 0xF0000E2Cu)	/* Port 2 Pull up/down Enable Register */

typedef volatile union
{
	struct
	{ 
		unsigned int P0             : 1;
		unsigned int P1             : 1;
		unsigned int P2             : 1;
		unsigned int P3             : 1;
		unsigned int P4             : 1;
		unsigned int P5             : 1;
		unsigned int P6             : 1;
		unsigned int P7             : 1;
		unsigned int P8             : 1;
		unsigned int P9             : 1;
		unsigned int P10            : 1;
		unsigned int P11            : 1;
		unsigned int P12            : 1;
		unsigned int P13            : 1;
		unsigned int P14            : 1;
		unsigned int P15            : 1;
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} P2_ALTSEL0_type;
#define P2_ALTSEL0	(*( P2_ALTSEL0_type *) 0xF0000E44u)	/* Port 2 Alternate Select Register 0 */

typedef volatile union
{
	struct
	{ 
		unsigned int P0             : 1;
		unsigned int P1             : 1;
		unsigned int P2             : 1;
		unsigned int P3             : 1;
		unsigned int P4             : 1;
		unsigned int P5             : 1;
		unsigned int P6             : 1;
		unsigned int P7             : 1;
		unsigned int P8             : 1;
		unsigned int P9             : 1;
		unsigned int P10            : 1;
		unsigned int P11            : 1;
		unsigned int P12            : 1;
		unsigned int P13            : 1;
		unsigned int P14            : 1;
		unsigned int P15            : 1;
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} P2_ALTSEL1_type;
#define P2_ALTSEL1	(*( P2_ALTSEL1_type *) 0xF0000E48u)	/* Port 2 Alternate Select Register 1 */


/* P3 CD */
typedef volatile union
{
	struct
	{ 
		unsigned int P0             : 1;
		unsigned int P1             : 1;
		unsigned int P2             : 1;
		unsigned int P3             : 1;
		unsigned int P4             : 1;
		unsigned int P5             : 1;
		unsigned int P6             : 1;
		unsigned int P7             : 1;
		unsigned int P8             : 1;
		unsigned int P9             : 1;
		unsigned int P10            : 1;
		unsigned int P11            : 1;
		unsigned int P12            : 1;
		unsigned int P13            : 1;
		unsigned int P14            : 1;
		unsigned int P15            : 1;
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} P3_OUT_type;
#define P3_OUT	(*( P3_OUT_type *) 0xF0000F10u)	/* Port 3 Data Output Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int P0             : 1;
		/* const */ unsigned int P1             : 1;
		/* const */ unsigned int P2             : 1;
		/* const */ unsigned int P3             : 1;
		/* const */ unsigned int P4             : 1;
		/* const */ unsigned int P5             : 1;
		/* const */ unsigned int P6             : 1;
		/* const */ unsigned int P7             : 1;
		/* const */ unsigned int P8             : 1;
		/* const */ unsigned int P9             : 1;
		/* const */ unsigned int P10            : 1;
		/* const */ unsigned int P11            : 1;
		/* const */ unsigned int P12            : 1;
		/* const */ unsigned int P13            : 1;
		/* const */ unsigned int P14            : 1;
		/* const */ unsigned int P15            : 1;
		/* const */ unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} P3_IN_type;
#define P3_IN	(*( P3_IN_type *) 0xF0000F14u)	/* Port 3 Data Input Register */

typedef volatile union
{
	struct
	{ 
		unsigned int P0             : 1;
		unsigned int P1             : 1;
		unsigned int P2             : 1;
		unsigned int P3             : 1;
		unsigned int P4             : 1;
		unsigned int P5             : 1;
		unsigned int P6             : 1;
		unsigned int P7             : 1;
		unsigned int P8             : 1;
		unsigned int P9             : 1;
		unsigned int P10            : 1;
		unsigned int P11            : 1;
		unsigned int P12            : 1;
		unsigned int P13            : 1;
		unsigned int P14            : 1;
		unsigned int P15            : 1;
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} P3_DIR_type;
#define P3_DIR	(*( P3_DIR_type *) 0xF0000F18u)	/* Port 3 Direction Register */

typedef volatile union
{
	struct
	{ 
		unsigned int P0             : 1;
		unsigned int P1             : 1;
		unsigned int P2             : 1;
		unsigned int P3             : 1;
		unsigned int P4             : 1;
		unsigned int P5             : 1;
		unsigned int P6             : 1;
		unsigned int P7             : 1;
		unsigned int P8             : 1;
		unsigned int P9             : 1;
		unsigned int P10            : 1;
		unsigned int P11            : 1;
		unsigned int P12            : 1;
		unsigned int P13            : 1;
		unsigned int P14            : 1;
		unsigned int P15            : 1;
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} P3_OD_type;
#define P3_OD	(*( P3_OD_type *) 0xF0000F1Cu)	/* Port 3 Open Drain Mode Register */

typedef volatile union
{
	struct
	{ 
		unsigned int P0             : 1;
		unsigned int P1             : 1;
		unsigned int P2             : 1;
		unsigned int P3             : 1;
		unsigned int P4             : 1;
		unsigned int P5             : 1;
		unsigned int P6             : 1;
		unsigned int P7             : 1;
		unsigned int P8             : 1;
		unsigned int P9             : 1;
		unsigned int P10            : 1;
		unsigned int P11            : 1;
		unsigned int P12            : 1;
		unsigned int P13            : 1;
		unsigned int P14            : 1;
		unsigned int P15            : 1;
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} P3_PUDSEL_type;
#define P3_PUDSEL	(*( P3_PUDSEL_type *) 0xF0000F28u)	/* Port 3 Pull up/down Select Register */

typedef volatile union
{
	struct
	{ 
		unsigned int P0             : 1;
		unsigned int P1             : 1;
		unsigned int P2             : 1;
		unsigned int P3             : 1;
		unsigned int P4             : 1;
		unsigned int P5             : 1;
		unsigned int P6             : 1;
		unsigned int P7             : 1;
		unsigned int P8             : 1;
		unsigned int P9             : 1;
		unsigned int P10            : 1;
		unsigned int P11            : 1;
		unsigned int P12            : 1;
		unsigned int P13            : 1;
		unsigned int P14            : 1;
		unsigned int P15            : 1;
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} P3_PUDEN_type;
#define P3_PUDEN	(*( P3_PUDEN_type *) 0xF0000F2Cu)	/* Port 3 Pull up/down Enable Register */

typedef volatile union
{
	struct
	{ 
		unsigned int P0             : 1;
		unsigned int P1             : 1;
		unsigned int P2             : 1;
		unsigned int P3             : 1;
		unsigned int P4             : 1;
		unsigned int P5             : 1;
		unsigned int P6             : 1;
		unsigned int P7             : 1;
		unsigned int P8             : 1;
		unsigned int P9             : 1;
		unsigned int P10            : 1;
		unsigned int P11            : 1;
		unsigned int P12            : 1;
		unsigned int P13            : 1;
		unsigned int P14            : 1;
		unsigned int P15            : 1;
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} P3_ALTSEL0_type;
#define P3_ALTSEL0	(*( P3_ALTSEL0_type *) 0xF0000F44u)	/* Port 3 Alternate Select Register 0 */

typedef volatile union
{
	struct
	{ 
		unsigned int P0             : 1;
		unsigned int P1             : 1;
		unsigned int P2             : 1;
		unsigned int P3             : 1;
		unsigned int P4             : 1;
		unsigned int P5             : 1;
		unsigned int P6             : 1;
		unsigned int P7             : 1;
		unsigned int P8             : 1;
		unsigned int P9             : 1;
		unsigned int P10            : 1;
		unsigned int P11            : 1;
		unsigned int P12            : 1;
		unsigned int P13            : 1;
		unsigned int P14            : 1;
		unsigned int P15            : 1;
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} P3_ALTSEL1_type;
#define P3_ALTSEL1	(*( P3_ALTSEL1_type *) 0xF0000F48u)	/* Port 3 Alternate Select Register 1 */


/* P4 CD */
typedef volatile union
{
	struct
	{ 
		unsigned int P0             : 1;
		unsigned int P1             : 1;
		unsigned int P2             : 1;
		unsigned int P3             : 1;
		unsigned int P4             : 1;
		unsigned int P5             : 1;
		unsigned int P6             : 1;
		unsigned int P7             : 1;
		unsigned int                : 24;
	} B;
	int I;
	unsigned int U;

} P4_OUT_type;
#define P4_OUT	(*( P4_OUT_type *) 0xF0001010u)	/* Port 4 Data Output Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int P0             : 1;
		/* const */ unsigned int P1             : 1;
		/* const */ unsigned int P2             : 1;
		/* const */ unsigned int P3             : 1;
		/* const */ unsigned int P4             : 1;
		/* const */ unsigned int P5             : 1;
		/* const */ unsigned int P6             : 1;
		/* const */ unsigned int P7             : 1;
		/* const */ unsigned int                : 24;
	} B;
	int I;
	unsigned int U;

} P4_IN_type;
#define P4_IN	(*( P4_IN_type *) 0xF0001014u)	/* Port 4 Data Input Register */

typedef volatile union
{
	struct
	{ 
		unsigned int P0             : 1;
		unsigned int P1             : 1;
		unsigned int P2             : 1;
		unsigned int P3             : 1;
		unsigned int P4             : 1;
		unsigned int P5             : 1;
		unsigned int P6             : 1;
		unsigned int P7             : 1;
		unsigned int                : 24;
	} B;
	int I;
	unsigned int U;

} P4_DIR_type;
#define P4_DIR	(*( P4_DIR_type *) 0xF0001018u)	/* Port 4 Direction Register */

typedef volatile union
{
	struct
	{ 
		unsigned int P0             : 1;
		unsigned int P1             : 1;
		unsigned int P2             : 1;
		unsigned int P3             : 1;
		unsigned int P4             : 1;
		unsigned int P5             : 1;
		unsigned int P6             : 1;
		unsigned int P7             : 1;
		unsigned int                : 24;
	} B;
	int I;
	unsigned int U;

} P4_OD_type;
#define P4_OD	(*( P4_OD_type *) 0xF000101Cu)	/* Port 4 Open Drain Mode Register */

typedef volatile union
{
	struct
	{ 
		unsigned int P0             : 1;
		unsigned int P1             : 1;
		unsigned int P2             : 1;
		unsigned int P3             : 1;
		unsigned int P4             : 1;
		unsigned int P5             : 1;
		unsigned int P6             : 1;
		unsigned int P7             : 1;
		unsigned int                : 24;
	} B;
	int I;
	unsigned int U;

} P4_PUDSEL_type;
#define P4_PUDSEL	(*( P4_PUDSEL_type *) 0xF0001028u)	/* Port 4 Pull up/down Select Register */

typedef volatile union
{
	struct
	{ 
		unsigned int P0             : 1;
		unsigned int P1             : 1;
		unsigned int P2             : 1;
		unsigned int P3             : 1;
		unsigned int P4             : 1;
		unsigned int P5             : 1;
		unsigned int P6             : 1;
		unsigned int P7             : 1;
		unsigned int                : 24;
	} B;
	int I;
	unsigned int U;

} P4_PUDEN_type;
#define P4_PUDEN	(*( P4_PUDEN_type *) 0xF000102Cu)	/* Port 4 Pull up/down Enable Register */

typedef volatile union
{
	struct
	{ 
		unsigned int P0             : 1;
		unsigned int P1             : 1;
		unsigned int P2             : 1;
		unsigned int P3             : 1;
		unsigned int P4             : 1;
		unsigned int P5             : 1;
		unsigned int P6             : 1;
		unsigned int P7             : 1;
		unsigned int                : 24;
	} B;
	int I;
	unsigned int U;

} P4_ALTSEL0_type;
#define P4_ALTSEL0	(*( P4_ALTSEL0_type *) 0xF0001044u)	/* Port 4 Alternate Select Register 0 */

typedef volatile union
{
	struct
	{ 
		unsigned int P0             : 1;
		unsigned int P1             : 1;
		unsigned int P2             : 1;
		unsigned int P3             : 1;
		unsigned int P4             : 1;
		unsigned int P5             : 1;
		unsigned int P6             : 1;
		unsigned int P7             : 1;
		unsigned int                : 24;
	} B;
	int I;
	unsigned int U;

} P4_ALTSEL1_type;
#define P4_ALTSEL1	(*( P4_ALTSEL1_type *) 0xF0001048u)	/* Port 4 Alternate Select Register 1 */


/* CCU60 */
typedef volatile union
{
	struct
	{ 
		unsigned int DISR           : 1;
		/* const */ unsigned int DISS           : 1;
		unsigned int SPEN           : 1;
		unsigned int EDIS           : 1;
		unsigned int SBWE           : 1;
		unsigned int FSOE           : 1;
		unsigned int                : 26;
	} B;
	int I;
	unsigned int U;

} CCU60_CLC_type;
#define CCU60_CLC	(*( CCU60_CLC_type *) 0xF0002000u)	/* CCU60 Clock Control Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int MOD_REV        : 8;
		/* const */ unsigned int MOD_TYPE       : 8;
		/* const */ unsigned int MOD_NUMBER     : 16;
	} B;
	int I;
	unsigned int U;

} CCU60_ID_type;
#define CCU60_ID	(*( CCU60_ID_type *) 0xF0002008u)	/* Module Identification Register */

typedef volatile union
{
	struct
	{ 
		unsigned int STEP           : 10;
		unsigned int                : 2;
		unsigned int SC             : 2;
		unsigned int DM             : 2;
		unsigned int RESULT         : 10;
		unsigned int                : 2;
		/* const */ unsigned int SUSACK         : 1;
		/* const */ unsigned int SUSREQ         : 1;
		unsigned int ENHW           : 1;
		unsigned int DISCLK         : 1;
	} B;
	int I;
	unsigned int U;

} CCU60_FDR_type;
#define CCU60_FDR	(*( CCU60_FDR_type *) 0xF000200Cu)	/* CCU60 Fractional Divider Register */

typedef volatile union
{
	struct
	{ 
		unsigned int ISCC60         : 2;
		unsigned int ISCC61         : 2;
		unsigned int ISCC62         : 2;
		unsigned int ISTRP          : 2;
		unsigned int ISPOS0         : 2;
		unsigned int ISPOS1         : 2;
		unsigned int ISPOS2         : 2;
		unsigned int IST12HR        : 2;
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} CCU60_PISEL0_type;
#define CCU60_PISEL0	(*( CCU60_PISEL0_type *) 0xF0002010u)	/* Port Input Select Register 0 */

typedef volatile union
{
	struct
	{ 
		unsigned int IST13HR        : 2;
		unsigned int                : 30;
	} B;
	int I;
	unsigned int U;

} CCU60_PISEL2_type;
#define CCU60_PISEL2	(*( CCU60_PISEL2_type *) 0xF0002014u)	/* Port Input Select Register 2 */

typedef volatile union
{
	struct
	{ 
		unsigned int T12CV          : 16;
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} CCU60_T12_type;
#define CCU60_T12	(*( CCU60_T12_type *) 0xF0002020u)	/* Timer T12 Counter Register */

typedef volatile union
{
	struct
	{ 
		unsigned int T12PV          : 16;
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} CCU60_T12PR_type;
#define CCU60_T12PR	(*( CCU60_T12PR_type *) 0xF0002024u)	/* Timer T12 period register */

typedef volatile union
{
	struct
	{ 
		unsigned int DTM            : 8;
		unsigned int DTE0           : 1;
		unsigned int DTE1           : 1;
		unsigned int DTE2           : 1;
		/* const */ unsigned int                : 1;
		/* const */ unsigned int DTR0           : 1;
		/* const */ unsigned int DTR1           : 1;
		/* const */ unsigned int DTR2           : 1;
		/* const */ unsigned int                : 17;
	} B;
	int I;
	unsigned int U;

} CCU60_T12DTC_type;
#define CCU60_T12DTC	(*( CCU60_T12DTC_type *) 0xF0002028u)	/* Dead-Time Control Register for Timer12 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int CC60V          : 16;
		/* const */ unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} CCU60_CC60R_type;
#define CCU60_CC60R	(*( CCU60_CC60R_type *) 0xF0002030u)	/* Capture/Compare Register for Channel CC60 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int CC61V          : 16;
		/* const */ unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} CCU60_CC61R_type;
#define CCU60_CC61R	(*( CCU60_CC61R_type *) 0xF0002034u)	/* Capture/Compare Register for Channel CC61 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int CC62V          : 16;
		/* const */ unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} CCU60_CC62R_type;
#define CCU60_CC62R	(*( CCU60_CC62R_type *) 0xF0002038u)	/* Capture/Compare Register for Channel CC62 */

typedef volatile union
{
	struct
	{ 
		unsigned int T12RR          : 1;
		unsigned int T12RS          : 1;
		unsigned int T12RES         : 1;
		unsigned int DTRES          : 1;
		unsigned int                : 2;
		unsigned int T12STR         : 1;
		unsigned int T12STD         : 1;
		unsigned int T13RR          : 1;
		unsigned int T13RS          : 1;
		unsigned int T13RES         : 1;
		unsigned int                : 3;
		unsigned int T13STR         : 1;
		unsigned int T13STD         : 1;
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} CCU60_TCTR4_type;
#define CCU60_TCTR4	(*( CCU60_TCTR4_type *) 0xF000203Cu)	/* Timer Control Register 4 */

typedef volatile union
{
	struct
	{ 
		unsigned int CC60S          : 16;
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} CCU60_CC60SR_type;
#define CCU60_CC60SR	(*( CCU60_CC60SR_type *) 0xF0002040u)	/* Capture/Compare Shadow Register for Channel CC60 */

typedef volatile union
{
	struct
	{ 
		unsigned int CC61S          : 16;
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} CCU60_CC61SR_type;
#define CCU60_CC61SR	(*( CCU60_CC61SR_type *) 0xF0002044u)	/* Capture/Compare Shadow Register for Channel CC61 */

typedef volatile union
{
	struct
	{ 
		unsigned int CC62S          : 16;
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} CCU60_CC62SR_type;
#define CCU60_CC62SR	(*( CCU60_CC62SR_type *) 0xF0002048u)	/* Capture/Compare Shadow Register for Channel CC62 */

typedef volatile union
{
	struct
	{ 
		unsigned int T13CV          : 16;
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} CCU60_T13_type;
#define CCU60_T13	(*( CCU60_T13_type *) 0xF0002050u)	/* Timer T13 Register */

typedef volatile union
{
	struct
	{ 
		unsigned int T13PV          : 16;
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} CCU60_T13PR_type;
#define CCU60_T13PR	(*( CCU60_T13PR_type *) 0xF0002054u)	/* Timer T13 Period Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int CC63V          : 16;
		/* const */ unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} CCU60_CC63R_type;
#define CCU60_CC63R	(*( CCU60_CC63R_type *) 0xF0002058u)	/* Compare Register for Channel CC63 */

typedef volatile union
{
	struct
	{ 
		unsigned int CC63S          : 16;
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} CCU60_CC63SR_type;
#define CCU60_CC63SR	(*( CCU60_CC63SR_type *) 0xF000205Cu)	/* Compare Shadow Register for Channel  CC63 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int CC60ST         : 1;
		/* const */ unsigned int CC61ST         : 1;
		/* const */ unsigned int CC62ST         : 1;
		/* const */ unsigned int CCPOS0         : 1;
		/* const */ unsigned int CCPOS1         : 1;
		/* const */ unsigned int CCPOS2         : 1;
		/* const */ unsigned int CC63ST         : 1;
		unsigned int                : 1;
		unsigned int CC60PS         : 1;
		unsigned int COUT60PS       : 1;
		unsigned int CC61PS         : 1;
		unsigned int COUT61PS       : 1;
		unsigned int CC62PS         : 1;
		unsigned int COUT62PS       : 1;
		unsigned int COUT63PS       : 1;
		unsigned int T13IM          : 1;
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} CCU60_CMPSTAT_type;
#define CCU60_CMPSTAT	(*( CCU60_CMPSTAT_type *) 0xF0002060u)	/* Compare Status Register */

typedef volatile union
{
	struct
	{ 
		unsigned int MCC60S         : 1;
		unsigned int MCC61S         : 1;
		unsigned int MCC62S         : 1;
		unsigned int                : 3;
		unsigned int MCC63S         : 1;
		unsigned int                : 1;
		unsigned int MCC60R         : 1;
		unsigned int MCC61R         : 1;
		unsigned int MCC62R         : 1;
		unsigned int                : 3;
		unsigned int MCC63R         : 1;
		unsigned int                : 17;
	} B;
	int I;
	unsigned int U;

} CCU60_CMPMODIF_type;
#define CCU60_CMPMODIF	(*( CCU60_CMPMODIF_type *) 0xF0002064u)	/* Compare State Modification Register */

typedef volatile union
{
	struct
	{ 
		unsigned int T12CLK         : 3;
		unsigned int T12PRE         : 1;
		/* const */ unsigned int T12R           : 1;
		/* const */ unsigned int STE12          : 1;
		/* const */ unsigned int CDIR           : 1;
		unsigned int CTM            : 1;
		unsigned int T13CLK         : 3;
		unsigned int T13PRE         : 1;
		/* const */ unsigned int T13R           : 1;
		/* const */ unsigned int STE13          : 1;
		unsigned int                : 18;
	} B;
	int I;
	unsigned int U;

} CCU60_TCTR0_type;
#define CCU60_TCTR0	(*( CCU60_TCTR0_type *) 0xF0002068u)	/* Timer Control Register 0 */

typedef volatile union
{
	struct
	{ 
		unsigned int T12SSC         : 1;
		unsigned int T13SSC         : 1;
		unsigned int T13TEC         : 3;
		unsigned int T13TED         : 2;
		unsigned int SUSCFG         : 1;
		unsigned int T12RSEL        : 2;
		unsigned int T13RSEL        : 2;
		unsigned int                : 20;
	} B;
	int I;
	unsigned int U;

} CCU60_TCTR2_type;
#define CCU60_TCTR2	(*( CCU60_TCTR2_type *) 0xF000206Cu)	/* Timer Control Register 2 */

typedef volatile union
{
	struct
	{ 
		unsigned int T12MODEN       : 6;
		unsigned int                : 1;
		unsigned int MCMEN          : 1;
		unsigned int T13MODEN       : 6;
		unsigned int                : 1;
		unsigned int ECT13O         : 1;
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} CCU60_MODCTR_type;
#define CCU60_MODCTR	(*( CCU60_MODCTR_type *) 0xF0002070u)	/* Modulation Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int TRPM0          : 1;
		unsigned int TRPM1          : 1;
		unsigned int TRPM2          : 1;
		unsigned int                : 5;
		unsigned int TRPEN          : 6;
		unsigned int TRPEN13        : 1;
		unsigned int TRPPEN         : 1;
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} CCU60_TRPCTR_type;
#define CCU60_TRPCTR	(*( CCU60_TRPCTR_type *) 0xF0002074u)	/* Trap Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int PSL            : 6;
		unsigned int                : 1;
		unsigned int PSL63          : 1;
		unsigned int                : 24;
	} B;
	int I;
	unsigned int U;

} CCU60_PSLR_type;
#define CCU60_PSLR	(*( CCU60_PSLR_type *) 0xF0002078u)	/* Passive State Level Register */

typedef volatile union
{
	struct
	{ 
		unsigned int MSEL60         : 4;
		unsigned int MSEL61         : 4;
		unsigned int MSEL62         : 4;
		unsigned int HSYNC          : 3;
		unsigned int DBYP           : 1;
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} CCU60_T12MSEL_type;
#define CCU60_T12MSEL	(*( CCU60_T12MSEL_type *) 0xF000207Cu)	/* T12 Capture/Compare Mode Select Register */

typedef volatile union
{
	struct
	{ 
		unsigned int MCMPS          : 6;
		unsigned int                : 1;
		unsigned int STRMCM         : 1;
		unsigned int EXPHS          : 3;
		unsigned int CURHS          : 3;
		unsigned int                : 1;
		unsigned int STRHP          : 1;
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} CCU60_MCMOUTS_type;
#define CCU60_MCMOUTS	(*( CCU60_MCMOUTS_type *) 0xF0002080u)	/* Multi-Channel Mode Output Shadow Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int MCMP           : 6;
		/* const */ unsigned int R              : 1;
		/* const */ unsigned int                : 1;
		/* const */ unsigned int EXPH           : 3;
		/* const */ unsigned int CURH           : 3;
		/* const */ unsigned int                : 18;
	} B;
	int I;
	unsigned int U;

} CCU60_MCMOUT_type;
#define CCU60_MCMOUT	(*( CCU60_MCMOUT_type *) 0xF0002084u)	/* Multi-Channel Mode Output Register */

typedef volatile union
{
	struct
	{ 
		unsigned int SWSEL          : 3;
		unsigned int                : 1;
		unsigned int SWSYN          : 2;
		unsigned int                : 26;
	} B;
	int I;
	unsigned int U;

} CCU60_MCMCTR_type;
#define CCU60_MCMCTR	(*( CCU60_MCMCTR_type *) 0xF0002088u)	/* Multi-Channel Mode Control Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int ICC60R         : 1;
		/* const */ unsigned int ICC60F         : 1;
		/* const */ unsigned int ICC61R         : 1;
		/* const */ unsigned int ICC61F         : 1;
		/* const */ unsigned int ICC62R         : 1;
		/* const */ unsigned int ICC62F         : 1;
		/* const */ unsigned int T12OM          : 1;
		/* const */ unsigned int T12PM          : 1;
		/* const */ unsigned int T13CM          : 1;
		/* const */ unsigned int T13PM          : 1;
		/* const */ unsigned int TRPF           : 1;
		/* const */ unsigned int TRPS           : 1;
		/* const */ unsigned int CHE            : 1;
		/* const */ unsigned int WHE            : 1;
		/* const */ unsigned int IDLE           : 1;
		/* const */ unsigned int STR            : 1;
		/* const */ unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} CCU60_IS_type;
#define CCU60_IS	(*( CCU60_IS_type *) 0xF0002090u)	/* Capture/Compare Interrupt Status Register */

typedef volatile union
{
	struct
	{ 
		unsigned int SCC60R         : 1;
		unsigned int SCC60F         : 1;
		unsigned int SCC61R         : 1;
		unsigned int SCC61F         : 1;
		unsigned int SCC62R         : 1;
		unsigned int SCC62F         : 1;
		unsigned int ST12OM         : 1;
		unsigned int ST12PM         : 1;
		unsigned int ST13CM         : 1;
		unsigned int ST13PM         : 1;
		unsigned int STRPF          : 1;
		unsigned int SWHC           : 1;
		unsigned int SCHE           : 1;
		unsigned int SWHE           : 1;
		unsigned int SIDLE          : 1;
		unsigned int SSTR           : 1;
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} CCU60_ISS_type;
#define CCU60_ISS	(*( CCU60_ISS_type *) 0xF0002094u)	/* Capture/Compare Interrupt Status Set Register */

typedef volatile union
{
	struct
	{ 
		unsigned int RCC60R         : 1;
		unsigned int RCC60F         : 1;
		unsigned int RCC61R         : 1;
		unsigned int RCC61F         : 1;
		unsigned int RCC62R         : 1;
		unsigned int RCC62F         : 1;
		unsigned int RT12OM         : 1;
		unsigned int RT12PM         : 1;
		unsigned int RT13CM         : 1;
		unsigned int RT13PM         : 1;
		unsigned int RTRPF          : 1;
		unsigned int                : 1;
		unsigned int RCHE           : 1;
		unsigned int RWHE           : 1;
		unsigned int RIDLE          : 1;
		unsigned int RSTR           : 1;
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} CCU60_ISR_type;
#define CCU60_ISR	(*( CCU60_ISR_type *) 0xF0002098u)	/* Capture/Compare Interrupt Status Reset Register */

typedef volatile union
{
	struct
	{ 
		unsigned int ENCC60R        : 1;
		unsigned int ENCC60F        : 1;
		unsigned int ENCC61R        : 1;
		unsigned int ENCC61F        : 1;
		unsigned int ENCC62R        : 1;
		unsigned int ENCC62F        : 1;
		unsigned int ENT12OM        : 1;
		unsigned int ENT12PM        : 1;
		unsigned int ENT13CM        : 1;
		unsigned int ENT13PM        : 1;
		unsigned int ENTRPF         : 1;
		unsigned int                : 1;
		unsigned int ENCHE          : 1;
		unsigned int ENWHE          : 1;
		unsigned int ENIDLE         : 1;
		unsigned int ENSTR          : 1;
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} CCU60_IEN_type;
#define CCU60_IEN	(*( CCU60_IEN_type *) 0xF000209Cu)	/* Capture/Compare Interrupt Enable Register */

typedef volatile union
{
	struct
	{ 
		unsigned int INPCC60        : 2;
		unsigned int INPCC61        : 2;
		unsigned int INPCC62        : 2;
		unsigned int INPCHE         : 2;
		unsigned int INPERR         : 2;
		unsigned int INPT12         : 2;
		unsigned int INPT13         : 2;
		unsigned int                : 18;
	} B;
	int I;
	unsigned int U;

} CCU60_INP_type;
#define CCU60_INP	(*( CCU60_INP_type *) 0xF00020A0u)	/* Capture/Compare Interrupt Node Pointer Register */

typedef volatile union
{
	struct
	{ 
		unsigned int SRPN           : 8;
		unsigned int                : 2;
		unsigned int TOS            : 1;
		unsigned int                : 1;
		unsigned int SRE            : 1;
		/* const */ unsigned int SRR            : 1;
		unsigned int CLRR           : 1;
		unsigned int SETR           : 1;
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} CCU60_SRC3_type;
#define CCU60_SRC3	(*( CCU60_SRC3_type *) 0xF00020F0u)	/* CCU60 Service Request Control Register 3 */

typedef volatile union
{
	struct
	{ 
		unsigned int SRPN           : 8;
		unsigned int                : 2;
		unsigned int TOS            : 1;
		unsigned int                : 1;
		unsigned int SRE            : 1;
		/* const */ unsigned int SRR            : 1;
		unsigned int CLRR           : 1;
		unsigned int SETR           : 1;
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} CCU60_SRC2_type;
#define CCU60_SRC2	(*( CCU60_SRC2_type *) 0xF00020F4u)	/* CCU60 Service Request Control Register 2 */

typedef volatile union
{
	struct
	{ 
		unsigned int SRPN           : 8;
		unsigned int                : 2;
		unsigned int TOS            : 1;
		unsigned int                : 1;
		unsigned int SRE            : 1;
		/* const */ unsigned int SRR            : 1;
		unsigned int CLRR           : 1;
		unsigned int SETR           : 1;
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} CCU60_SRC1_type;
#define CCU60_SRC1	(*( CCU60_SRC1_type *) 0xF00020F8u)	/* CCU60 Service Request Control Register 1 */

typedef volatile union
{
	struct
	{ 
		unsigned int SRPN           : 8;
		unsigned int                : 2;
		unsigned int TOS            : 1;
		unsigned int                : 1;
		unsigned int SRE            : 1;
		/* const */ unsigned int SRR            : 1;
		unsigned int CLRR           : 1;
		unsigned int SETR           : 1;
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} CCU60_SRC0_type;
#define CCU60_SRC0	(*( CCU60_SRC0_type *) 0xF00020FCu)	/* CCU60 Service Request Control Register 0 */


/* CCU61 */
typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int MOD_REV        : 8;
		/* const */ unsigned int MOD_TYPE       : 8;
		/* const */ unsigned int MOD_NUMBER     : 16;
	} B;
	int I;
	unsigned int U;

} CCU61_ID_type;
#define CCU61_ID	(*( CCU61_ID_type *) 0xF0002108u)	/* Module Identification Register */

typedef volatile union
{
	struct
	{ 
		unsigned int ISCC60         : 2;
		unsigned int ISCC61         : 2;
		unsigned int ISCC62         : 2;
		unsigned int ISTRP          : 2;
		unsigned int ISPOS0         : 2;
		unsigned int ISPOS1         : 2;
		unsigned int ISPOS2         : 2;
		unsigned int IST12HR        : 2;
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} CCU61_PISEL0_type;
#define CCU61_PISEL0	(*( CCU61_PISEL0_type *) 0xF0002110u)	/* Port Input Select Register 0 */

typedef volatile union
{
	struct
	{ 
		unsigned int IST13HR        : 2;
		unsigned int                : 30;
	} B;
	int I;
	unsigned int U;

} CCU61_PISEL2_type;
#define CCU61_PISEL2	(*( CCU61_PISEL2_type *) 0xF0002114u)	/* Port Input Select Register 2 */

typedef volatile union
{
	struct
	{ 
		unsigned int T12CV          : 16;
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} CCU61_T12_type;
#define CCU61_T12	(*( CCU61_T12_type *) 0xF0002120u)	/* Timer T12 Counter Register */

typedef volatile union
{
	struct
	{ 
		unsigned int T12PV          : 16;
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} CCU61_T12PR_type;
#define CCU61_T12PR	(*( CCU61_T12PR_type *) 0xF0002124u)	/* Timer T12 period register */

typedef volatile union
{
	struct
	{ 
		unsigned int DTM            : 8;
		unsigned int DTE0           : 1;
		unsigned int DTE1           : 1;
		unsigned int DTE2           : 1;
		/* const */ unsigned int                : 1;
		/* const */ unsigned int DTR0           : 1;
		/* const */ unsigned int DTR1           : 1;
		/* const */ unsigned int DTR2           : 1;
		/* const */ unsigned int                : 17;
	} B;
	int I;
	unsigned int U;

} CCU61_T12DTC_type;
#define CCU61_T12DTC	(*( CCU61_T12DTC_type *) 0xF0002128u)	/* Dead-Time Control Register for Timer12 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int CC60V          : 16;
		/* const */ unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} CCU61_CC60R_type;
#define CCU61_CC60R	(*( CCU61_CC60R_type *) 0xF0002130u)	/* Capture/Compare Register for Channel CC60 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int CC61V          : 16;
		/* const */ unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} CCU61_CC61R_type;
#define CCU61_CC61R	(*( CCU61_CC61R_type *) 0xF0002134u)	/* Capture/Compare Register for Channel CC61 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int CC62V          : 16;
		/* const */ unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} CCU61_CC62R_type;
#define CCU61_CC62R	(*( CCU61_CC62R_type *) 0xF0002138u)	/* Capture/Compare Register for Channel CC62 */

typedef volatile union
{
	struct
	{ 
		unsigned int T12RR          : 1;
		unsigned int T12RS          : 1;
		unsigned int T12RES         : 1;
		unsigned int DTRES          : 1;
		unsigned int                : 2;
		unsigned int T12STR         : 1;
		unsigned int T12STD         : 1;
		unsigned int T13RR          : 1;
		unsigned int T13RS          : 1;
		unsigned int T13RES         : 1;
		unsigned int                : 3;
		unsigned int T13STR         : 1;
		unsigned int T13STD         : 1;
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} CCU61_TCTR4_type;
#define CCU61_TCTR4	(*( CCU61_TCTR4_type *) 0xF000213Cu)	/* Timer Control Register 4 */

typedef volatile union
{
	struct
	{ 
		unsigned int CC60S          : 16;
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} CCU61_CC60SR_type;
#define CCU61_CC60SR	(*( CCU61_CC60SR_type *) 0xF0002140u)	/* Capture/Compare Shadow Register for Channel CC60 */

typedef volatile union
{
	struct
	{ 
		unsigned int CC61S          : 16;
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} CCU61_CC61SR_type;
#define CCU61_CC61SR	(*( CCU61_CC61SR_type *) 0xF0002144u)	/* Capture/Compare Shadow Register for Channel CC61 */

typedef volatile union
{
	struct
	{ 
		unsigned int CC62S          : 16;
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} CCU61_CC62SR_type;
#define CCU61_CC62SR	(*( CCU61_CC62SR_type *) 0xF0002148u)	/* Capture/Compare Shadow Register for Channel CC62 */

typedef volatile union
{
	struct
	{ 
		unsigned int T13CV          : 16;
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} CCU61_T13_type;
#define CCU61_T13	(*( CCU61_T13_type *) 0xF0002150u)	/* Timer T13 Register */

typedef volatile union
{
	struct
	{ 
		unsigned int T13PV          : 16;
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} CCU61_T13PR_type;
#define CCU61_T13PR	(*( CCU61_T13PR_type *) 0xF0002154u)	/* Timer T13 Period Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int CC63V          : 16;
		/* const */ unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} CCU61_CC63R_type;
#define CCU61_CC63R	(*( CCU61_CC63R_type *) 0xF0002158u)	/* Compare Register for Channel CC63 */

typedef volatile union
{
	struct
	{ 
		unsigned int CC63S          : 16;
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} CCU61_CC63SR_type;
#define CCU61_CC63SR	(*( CCU61_CC63SR_type *) 0xF000215Cu)	/* Compare Shadow Register for Channel  CC63 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int CC60ST         : 1;
		/* const */ unsigned int CC61ST         : 1;
		/* const */ unsigned int CC62ST         : 1;
		/* const */ unsigned int CCPOS0         : 1;
		/* const */ unsigned int CCPOS1         : 1;
		/* const */ unsigned int CCPOS2         : 1;
		/* const */ unsigned int CC63ST         : 1;
		unsigned int                : 1;
		unsigned int CC60PS         : 1;
		unsigned int COUT60PS       : 1;
		unsigned int CC61PS         : 1;
		unsigned int COUT61PS       : 1;
		unsigned int CC62PS         : 1;
		unsigned int COUT62PS       : 1;
		unsigned int COUT63PS       : 1;
		unsigned int T13IM          : 1;
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} CCU61_CMPSTAT_type;
#define CCU61_CMPSTAT	(*( CCU61_CMPSTAT_type *) 0xF0002160u)	/* Compare Status Register */

typedef volatile union
{
	struct
	{ 
		unsigned int MCC60S         : 1;
		unsigned int MCC61S         : 1;
		unsigned int MCC62S         : 1;
		unsigned int                : 3;
		unsigned int MCC63S         : 1;
		unsigned int                : 1;
		unsigned int MCC60R         : 1;
		unsigned int MCC61R         : 1;
		unsigned int MCC62R         : 1;
		unsigned int                : 3;
		unsigned int MCC63R         : 1;
		unsigned int                : 17;
	} B;
	int I;
	unsigned int U;

} CCU61_CMPMODIF_type;
#define CCU61_CMPMODIF	(*( CCU61_CMPMODIF_type *) 0xF0002164u)	/* Compare State Modification Register */

typedef volatile union
{
	struct
	{ 
		unsigned int T12CLK         : 3;
		unsigned int T12PRE         : 1;
		/* const */ unsigned int T12R           : 1;
		/* const */ unsigned int STE12          : 1;
		/* const */ unsigned int CDIR           : 1;
		unsigned int CTM            : 1;
		unsigned int T13CLK         : 3;
		unsigned int T13PRE         : 1;
		/* const */ unsigned int T13R           : 1;
		/* const */ unsigned int STE13          : 1;
		unsigned int                : 18;
	} B;
	int I;
	unsigned int U;

} CCU61_TCTR0_type;
#define CCU61_TCTR0	(*( CCU61_TCTR0_type *) 0xF0002168u)	/* Timer Control Register 0 */

typedef volatile union
{
	struct
	{ 
		unsigned int T12SSC         : 1;
		unsigned int T13SSC         : 1;
		unsigned int T13TEC         : 3;
		unsigned int T13TED         : 2;
		unsigned int SUSCFG         : 1;
		unsigned int T12RSEL        : 2;
		unsigned int T13RSEL        : 2;
		unsigned int                : 20;
	} B;
	int I;
	unsigned int U;

} CCU61_TCTR2_type;
#define CCU61_TCTR2	(*( CCU61_TCTR2_type *) 0xF000216Cu)	/* Timer Control Register 2 */

typedef volatile union
{
	struct
	{ 
		unsigned int T12MODEN       : 6;
		unsigned int                : 1;
		unsigned int MCMEN          : 1;
		unsigned int T13MODEN       : 6;
		unsigned int                : 1;
		unsigned int ECT13O         : 1;
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} CCU61_MODCTR_type;
#define CCU61_MODCTR	(*( CCU61_MODCTR_type *) 0xF0002170u)	/* Modulation Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int TRPM0          : 1;
		unsigned int TRPM1          : 1;
		unsigned int TRPM2          : 1;
		unsigned int                : 5;
		unsigned int TRPEN          : 6;
		unsigned int TRPEN13        : 1;
		unsigned int TRPPEN         : 1;
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} CCU61_TRPCTR_type;
#define CCU61_TRPCTR	(*( CCU61_TRPCTR_type *) 0xF0002174u)	/* Trap Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int PSL            : 6;
		unsigned int                : 1;
		unsigned int PSL63          : 1;
		unsigned int                : 24;
	} B;
	int I;
	unsigned int U;

} CCU61_PSLR_type;
#define CCU61_PSLR	(*( CCU61_PSLR_type *) 0xF0002178u)	/* Passive State Level Register */

typedef volatile union
{
	struct
	{ 
		unsigned int MSEL60         : 4;
		unsigned int MSEL61         : 4;
		unsigned int MSEL62         : 4;
		unsigned int HSYNC          : 3;
		unsigned int DBYP           : 1;
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} CCU61_T12MSEL_type;
#define CCU61_T12MSEL	(*( CCU61_T12MSEL_type *) 0xF000217Cu)	/* T12 Capture/Compare Mode Select Register */

typedef volatile union
{
	struct
	{ 
		unsigned int MCMPS          : 6;
		unsigned int                : 1;
		unsigned int STRMCM         : 1;
		unsigned int EXPHS          : 3;
		unsigned int CURHS          : 3;
		unsigned int                : 1;
		unsigned int STRHP          : 1;
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} CCU61_MCMOUTS_type;
#define CCU61_MCMOUTS	(*( CCU61_MCMOUTS_type *) 0xF0002180u)	/* Multi-Channel Mode Output Shadow Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int MCMP           : 6;
		/* const */ unsigned int R              : 1;
		/* const */ unsigned int                : 1;
		/* const */ unsigned int EXPH           : 3;
		/* const */ unsigned int CURH           : 3;
		/* const */ unsigned int                : 18;
	} B;
	int I;
	unsigned int U;

} CCU61_MCMOUT_type;
#define CCU61_MCMOUT	(*( CCU61_MCMOUT_type *) 0xF0002184u)	/* Multi-Channel Mode Output Register */

typedef volatile union
{
	struct
	{ 
		unsigned int SWSEL          : 3;
		unsigned int                : 1;
		unsigned int SWSYN          : 2;
		unsigned int                : 26;
	} B;
	int I;
	unsigned int U;

} CCU61_MCMCTR_type;
#define CCU61_MCMCTR	(*( CCU61_MCMCTR_type *) 0xF0002188u)	/* Multi-Channel Mode Control Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int ICC60R         : 1;
		/* const */ unsigned int ICC60F         : 1;
		/* const */ unsigned int ICC61R         : 1;
		/* const */ unsigned int ICC61F         : 1;
		/* const */ unsigned int ICC62R         : 1;
		/* const */ unsigned int ICC62F         : 1;
		/* const */ unsigned int T12OM          : 1;
		/* const */ unsigned int T12PM          : 1;
		/* const */ unsigned int T13CM          : 1;
		/* const */ unsigned int T13PM          : 1;
		/* const */ unsigned int TRPF           : 1;
		/* const */ unsigned int TRPS           : 1;
		/* const */ unsigned int CHE            : 1;
		/* const */ unsigned int WHE            : 1;
		/* const */ unsigned int IDLE           : 1;
		/* const */ unsigned int STR            : 1;
		/* const */ unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} CCU61_IS_type;
#define CCU61_IS	(*( CCU61_IS_type *) 0xF0002190u)	/* Capture/Compare Interrupt Status Register */

typedef volatile union
{
	struct
	{ 
		unsigned int SCC60R         : 1;
		unsigned int SCC60F         : 1;
		unsigned int SCC61R         : 1;
		unsigned int SCC61F         : 1;
		unsigned int SCC62R         : 1;
		unsigned int SCC62F         : 1;
		unsigned int ST12OM         : 1;
		unsigned int ST12PM         : 1;
		unsigned int ST13CM         : 1;
		unsigned int ST13PM         : 1;
		unsigned int STRPF          : 1;
		unsigned int SWHC           : 1;
		unsigned int SCHE           : 1;
		unsigned int SWHE           : 1;
		unsigned int SIDLE          : 1;
		unsigned int SSTR           : 1;
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} CCU61_ISS_type;
#define CCU61_ISS	(*( CCU61_ISS_type *) 0xF0002194u)	/* Capture/Compare Interrupt Status Set Register */

typedef volatile union
{
	struct
	{ 
		unsigned int RCC60R         : 1;
		unsigned int RCC60F         : 1;
		unsigned int RCC61R         : 1;
		unsigned int RCC61F         : 1;
		unsigned int RCC62R         : 1;
		unsigned int RCC62F         : 1;
		unsigned int RT12OM         : 1;
		unsigned int RT12PM         : 1;
		unsigned int RT13CM         : 1;
		unsigned int RT13PM         : 1;
		unsigned int RTRPF          : 1;
		unsigned int                : 1;
		unsigned int RCHE           : 1;
		unsigned int RWHE           : 1;
		unsigned int RIDLE          : 1;
		unsigned int RSTR           : 1;
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} CCU61_ISR_type;
#define CCU61_ISR	(*( CCU61_ISR_type *) 0xF0002198u)	/* Capture/Compare Interrupt Status Reset Register */

typedef volatile union
{
	struct
	{ 
		unsigned int ENCC60R        : 1;
		unsigned int ENCC60F        : 1;
		unsigned int ENCC61R        : 1;
		unsigned int ENCC61F        : 1;
		unsigned int ENCC62R        : 1;
		unsigned int ENCC62F        : 1;
		unsigned int ENT12OM        : 1;
		unsigned int ENT12PM        : 1;
		unsigned int ENT13CM        : 1;
		unsigned int ENT13PM        : 1;
		unsigned int ENTRPF         : 1;
		unsigned int                : 1;
		unsigned int ENCHE          : 1;
		unsigned int ENWHE          : 1;
		unsigned int ENIDLE         : 1;
		unsigned int ENSTR          : 1;
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} CCU61_IEN_type;
#define CCU61_IEN	(*( CCU61_IEN_type *) 0xF000219Cu)	/* Capture/Compare Interrupt Enable Register */

typedef volatile union
{
	struct
	{ 
		unsigned int INPCC60        : 2;
		unsigned int INPCC61        : 2;
		unsigned int INPCC62        : 2;
		unsigned int INPCHE         : 2;
		unsigned int INPERR         : 2;
		unsigned int INPT12         : 2;
		unsigned int INPT13         : 2;
		unsigned int                : 18;
	} B;
	int I;
	unsigned int U;

} CCU61_INP_type;
#define CCU61_INP	(*( CCU61_INP_type *) 0xF00021A0u)	/* Capture/Compare Interrupt Node Pointer Register */

typedef volatile union
{
	struct
	{ 
		unsigned int SRPN           : 8;
		unsigned int                : 2;
		unsigned int TOS            : 1;
		unsigned int                : 1;
		unsigned int SRE            : 1;
		/* const */ unsigned int SRR            : 1;
		unsigned int CLRR           : 1;
		unsigned int SETR           : 1;
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} CCU61_SRC3_type;
#define CCU61_SRC3	(*( CCU61_SRC3_type *) 0xF00021F0u)	/* CCU60 Service Request Control Register 3 */

typedef volatile union
{
	struct
	{ 
		unsigned int SRPN           : 8;
		unsigned int                : 2;
		unsigned int TOS            : 1;
		unsigned int                : 1;
		unsigned int SRE            : 1;
		/* const */ unsigned int SRR            : 1;
		unsigned int CLRR           : 1;
		unsigned int SETR           : 1;
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} CCU61_SRC2_type;
#define CCU61_SRC2	(*( CCU61_SRC2_type *) 0xF00021F4u)	/* CCU60 Service Request Control Register 2 */

typedef volatile union
{
	struct
	{ 
		unsigned int SRPN           : 8;
		unsigned int                : 2;
		unsigned int TOS            : 1;
		unsigned int                : 1;
		unsigned int SRE            : 1;
		/* const */ unsigned int SRR            : 1;
		unsigned int CLRR           : 1;
		unsigned int SETR           : 1;
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} CCU61_SRC1_type;
#define CCU61_SRC1	(*( CCU61_SRC1_type *) 0xF00021F8u)	/* CCU60 Service Request Control Register 1 */

typedef volatile union
{
	struct
	{ 
		unsigned int SRPN           : 8;
		unsigned int                : 2;
		unsigned int TOS            : 1;
		unsigned int                : 1;
		unsigned int SRE            : 1;
		/* const */ unsigned int SRR            : 1;
		unsigned int CLRR           : 1;
		unsigned int SETR           : 1;
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} CCU61_SRC0_type;
#define CCU61_SRC0	(*( CCU61_SRC0_type *) 0xF00021FCu)	/* CCU60 Service Request Control Register 0 */


/* DMA */
typedef volatile union
{
	struct
	{ 
		unsigned int DISR           : 1;
		/* const */ unsigned int DISS           : 1;
		unsigned int SPEN           : 1;
		unsigned int                : 1;
		unsigned int SBWE           : 1;
		unsigned int FSOE           : 1;
		unsigned int                : 26;
	} B;
	int I;
	unsigned int U;

} DMA_CLC_type;
#define DMA_CLC	(*( DMA_CLC_type *) 0xF0003C00u)	/* DMA Clock Control Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int MOD_REV        : 8;
		/* const */ unsigned int MOD_TYPE       : 8;
		/* const */ unsigned int MOD_NUMBER     : 16;
	} B;
	int I;
	unsigned int U;

} DMA_ID_type;
#define DMA_ID	(*( DMA_ID_type *) 0xF0003C08u)	/* DMA Module Identification Register */

typedef volatile union
{
	struct
	{ 
		unsigned int CH00           : 1;
		unsigned int CH01           : 1;
		unsigned int CH02           : 1;
		unsigned int CH03           : 1;
		unsigned int CH04           : 1;
		unsigned int CH05           : 1;
		unsigned int CH06           : 1;
		unsigned int CH07           : 1;
		unsigned int                : 24;
	} B;
	int I;
	unsigned int U;

} DMA_CHRSTR_type;
#define DMA_CHRSTR	(*( DMA_CHRSTR_type *) 0xF0003C10u)	/* Channel Reset Request Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int CH00           : 1;
		/* const */ unsigned int CH01           : 1;
		/* const */ unsigned int CH02           : 1;
		/* const */ unsigned int CH03           : 1;
		/* const */ unsigned int CH04           : 1;
		/* const */ unsigned int CH05           : 1;
		/* const */ unsigned int CH06           : 1;
		/* const */ unsigned int CH07           : 1;
		/* const */ unsigned int                : 8;
		/* const */ unsigned int HTRE00         : 1;
		/* const */ unsigned int HTRE01         : 1;
		/* const */ unsigned int HTRE02         : 1;
		/* const */ unsigned int HTRE03         : 1;
		/* const */ unsigned int HTRE04         : 1;
		/* const */ unsigned int HTRE05         : 1;
		/* const */ unsigned int HTRE06         : 1;
		/* const */ unsigned int HTRE07         : 1;
		/* const */ unsigned int                : 8;
	} B;
	int I;
	unsigned int U;

} DMA_TRSR_type;
#define DMA_TRSR	(*( DMA_TRSR_type *) 0xF0003C14u)	/* Transaction Request State Register */

typedef volatile union
{
	struct
	{ 
		unsigned int SCH00          : 1;
		unsigned int SCH01          : 1;
		unsigned int SCH02          : 1;
		unsigned int SCH03          : 1;
		unsigned int SCH04          : 1;
		unsigned int SCH05          : 1;
		unsigned int SCH06          : 1;
		unsigned int SCH07          : 1;
		unsigned int                : 24;
	} B;
	int I;
	unsigned int U;

} DMA_STREQ_type;
#define DMA_STREQ	(*( DMA_STREQ_type *) 0xF0003C18u)	/* Software Transaction Request Register */

typedef volatile union
{
	struct
	{ 
		unsigned int ECH00          : 1;
		unsigned int ECH01          : 1;
		unsigned int ECH02          : 1;
		unsigned int ECH03          : 1;
		unsigned int ECH04          : 1;
		unsigned int ECH05          : 1;
		unsigned int ECH06          : 1;
		unsigned int ECH07          : 1;
		unsigned int                : 8;
		unsigned int DCH00          : 1;
		unsigned int DCH01          : 1;
		unsigned int DCH02          : 1;
		unsigned int DCH03          : 1;
		unsigned int DCH04          : 1;
		unsigned int DCH05          : 1;
		unsigned int DCH06          : 1;
		unsigned int DCH07          : 1;
		unsigned int                : 8;
	} B;
	int I;
	unsigned int U;

} DMA_HTREQ_type;
#define DMA_HTREQ	(*( DMA_HTREQ_type *) 0xF0003C1Cu)	/* Hardware Transaction Request Register */

typedef volatile union
{
	struct
	{ 
		unsigned int ETRL00         : 1;
		unsigned int ETRL01         : 1;
		unsigned int ETRL02         : 1;
		unsigned int ETRL03         : 1;
		unsigned int ETRL04         : 1;
		unsigned int ETRL05         : 1;
		unsigned int ETRL06         : 1;
		unsigned int ETRL07         : 1;
		unsigned int                : 8;
		unsigned int EME0SER        : 1;
		unsigned int EME0DER        : 1;
		unsigned int                : 2;
		unsigned int ME0INP         : 4;
		unsigned int                : 4;
		unsigned int TRLINP         : 4;
	} B;
	int I;
	unsigned int U;

} DMA_EER_type;
#define DMA_EER	(*( DMA_EER_type *) 0xF0003C20u)	/* Enable Error Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int TRL00          : 1;
		/* const */ unsigned int TRL01          : 1;
		/* const */ unsigned int TRL02          : 1;
		/* const */ unsigned int TRL03          : 1;
		/* const */ unsigned int TRL04          : 1;
		/* const */ unsigned int TRL05          : 1;
		/* const */ unsigned int TRL06          : 1;
		/* const */ unsigned int TRL07          : 1;
		/* const */ unsigned int                : 8;
		/* const */ unsigned int ME0SER         : 1;
		/* const */ unsigned int ME0DER         : 1;
		/* const */ unsigned int                : 2;
		/* const */ unsigned int FPI0ER         : 1;
		/* const */ unsigned int FPI1ER         : 1;
		/* const */ unsigned int                : 2;
		/* const */ unsigned int LECME0         : 3;
		/* const */ unsigned int MLI0           : 1;
		/* const */ unsigned int                : 3;
		/* const */ unsigned int MLI1           : 1;
	} B;
	int I;
	unsigned int U;

} DMA_ERRSR_type;
#define DMA_ERRSR	(*( DMA_ERRSR_type *) 0xF0003C24u)	/* Error Status Register */

typedef volatile union
{
	struct
	{ 
		unsigned int CTRL00         : 1;
		unsigned int CTRL01         : 1;
		unsigned int CTRL02         : 1;
		unsigned int CTRL03         : 1;
		unsigned int CTRL04         : 1;
		unsigned int CTRL05         : 1;
		unsigned int CTRL06         : 1;
		unsigned int CTRL07         : 1;
		unsigned int                : 8;
		unsigned int CME0SER        : 1;
		unsigned int CME0DER        : 1;
		unsigned int                : 2;
		unsigned int CFPI0ER        : 1;
		unsigned int CFPI1ER        : 1;
		unsigned int                : 5;
		unsigned int CLRMLI0        : 1;
		unsigned int                : 3;
		unsigned int CLRMLI1        : 1;
	} B;
	int I;
	unsigned int U;

} DMA_CLRE_type;
#define DMA_CLRE	(*( DMA_CLRE_type *) 0xF0003C28u)	/* Clear Error Register */

typedef volatile union
{
	struct
	{ 
		unsigned int SIDMA0         : 1;
		unsigned int SIDMA1         : 1;
		unsigned int SIDMA2         : 1;
		unsigned int SIDMA3         : 1;
		unsigned int SIDMA4         : 1;
		unsigned int SIDMA5         : 1;
		unsigned int SIDMA6         : 1;
		unsigned int SIDMA7         : 1;
		unsigned int SIDMA8         : 1;
		unsigned int SIDMA9         : 1;
		unsigned int SIDMA10        : 1;
		unsigned int SIDMA11        : 1;
		unsigned int SIDMA12        : 1;
		unsigned int SIDMA13        : 1;
		unsigned int SIDMA14        : 1;
		unsigned int SIDMA15        : 1;
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} DMA_GINTR_type;
#define DMA_GINTR	(*( DMA_GINTR_type *) 0xF0003C2Cu)	/* DMA Global Interrupt Set Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int ME0RS          : 1;
		/* const */ unsigned int CH0            : 3;
		/* const */ unsigned int ME0WS          : 1;
		/* const */ unsigned int                : 27;
	} B;
	int I;
	unsigned int U;

} DMA_MESR_type;
#define DMA_MESR	(*( DMA_MESR_type *) 0xF0003C30u)	/* Move Engine Status Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int ME0R           : 32;
	} B;
	int I;
	unsigned int U;

} DMA_ME0R_type;
#define DMA_ME0R	(*( DMA_ME0R_type *) 0xF0003C34u)	/* Move Engine 0 Read Register */

typedef volatile union
{
	struct
	{ 
		unsigned int PAT00          : 8;
		unsigned int PAT01          : 8;
		unsigned int PAT02          : 8;
		unsigned int PAT03          : 8;
	} B;
	int I;
	unsigned int U;

} DMA_ME0PR_type;
#define DMA_ME0PR	(*( DMA_ME0PR_type *) 0xF0003C3Cu)	/* Move Engine 0 Pattern Register */

typedef volatile union
{
	struct
	{ 
		unsigned int AEN0           : 1;
		unsigned int AEN1           : 1;
		unsigned int AEN2           : 1;
		unsigned int AEN3           : 1;
		unsigned int AEN4           : 1;
		unsigned int AEN5           : 1;
		unsigned int AEN6           : 1;
		unsigned int AEN7           : 1;
		unsigned int AEN8           : 1;
		unsigned int AEN9           : 1;
		unsigned int AEN10          : 1;
		unsigned int AEN11          : 1;
		unsigned int AEN12          : 1;
		unsigned int AEN13          : 1;
		unsigned int AEN14          : 1;
		unsigned int AEN15          : 1;
		unsigned int AEN16          : 1;
		unsigned int AEN17          : 1;
		unsigned int AEN18          : 1;
		unsigned int AEN19          : 1;
		unsigned int AEN20          : 1;
		unsigned int AEN21          : 1;
		unsigned int AEN22          : 1;
		unsigned int AEN23          : 1;
		unsigned int AEN24          : 1;
		unsigned int AEN25          : 1;
		unsigned int AEN26          : 1;
		unsigned int AEN27          : 1;
		unsigned int AEN28          : 1;
		unsigned int AEN29          : 1;
		unsigned int AEN30          : 1;
		unsigned int AEN31          : 1;
	} B;
	int I;
	unsigned int U;

} DMA_ME0AENR_type;
#define DMA_ME0AENR	(*( DMA_ME0AENR_type *) 0xF0003C44u)	/* Move Engine 0 Access Enable Register */

typedef volatile union
{
	struct
	{ 
		unsigned int SLICE0         : 5;
		unsigned int SIZE0          : 3;
		unsigned int SLICE1         : 5;
		unsigned int SIZE1          : 3;
		unsigned int SLICE2         : 5;
		unsigned int SIZE2          : 3;
		unsigned int SLICE3         : 5;
		unsigned int SIZE3          : 3;
	} B;
	int I;
	unsigned int U;

} DMA_ME0ARR_type;
#define DMA_ME0ARR	(*( DMA_ME0ARR_type *) 0xF0003C48u)	/* Move Engine 0 Access Range Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int ICH00          : 1;
		/* const */ unsigned int ICH01          : 1;
		/* const */ unsigned int ICH02          : 1;
		/* const */ unsigned int ICH03          : 1;
		/* const */ unsigned int ICH04          : 1;
		/* const */ unsigned int ICH05          : 1;
		/* const */ unsigned int ICH06          : 1;
		/* const */ unsigned int ICH07          : 1;
		/* const */ unsigned int                : 8;
		/* const */ unsigned int PD00           : 1;
		/* const */ unsigned int PD01           : 1;
		/* const */ unsigned int PD02           : 1;
		/* const */ unsigned int PD03           : 1;
		/* const */ unsigned int PD04           : 1;
		/* const */ unsigned int PD05           : 1;
		/* const */ unsigned int PD06           : 1;
		/* const */ unsigned int PD07           : 1;
		/* const */ unsigned int                : 8;
	} B;
	int I;
	unsigned int U;

} DMA_INTSR_type;
#define DMA_INTSR	(*( DMA_INTSR_type *) 0xF0003C54u)	/* Interrupt Status Register */

typedef volatile union
{
	struct
	{ 
		unsigned int CICH00         : 1;
		unsigned int CICH01         : 1;
		unsigned int CICH02         : 1;
		unsigned int CICH03         : 1;
		unsigned int CICH04         : 1;
		unsigned int CICH05         : 1;
		unsigned int CICH06         : 1;
		unsigned int CICH07         : 1;
		unsigned int                : 8;
		unsigned int CWRP00         : 1;
		unsigned int CWRP01         : 1;
		unsigned int CWRP02         : 1;
		unsigned int CWRP03         : 1;
		unsigned int CWRP04         : 1;
		unsigned int CWRP05         : 1;
		unsigned int CWRP06         : 1;
		unsigned int CWRP07         : 1;
		unsigned int                : 8;
	} B;
	int I;
	unsigned int U;

} DMA_INTCR_type;
#define DMA_INTCR	(*( DMA_INTCR_type *) 0xF0003C58u)	/* Interrupt Clear Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int WRPS00         : 1;
		/* const */ unsigned int WRPS01         : 1;
		/* const */ unsigned int WRPS02         : 1;
		/* const */ unsigned int WRPS03         : 1;
		/* const */ unsigned int WRPS04         : 1;
		/* const */ unsigned int WRPS05         : 1;
		/* const */ unsigned int WRPS06         : 1;
		/* const */ unsigned int WRPS07         : 1;
		/* const */ unsigned int                : 8;
		/* const */ unsigned int WRPD00         : 1;
		/* const */ unsigned int WRPD01         : 1;
		/* const */ unsigned int WRPD02         : 1;
		/* const */ unsigned int WRPD03         : 1;
		/* const */ unsigned int WRPD04         : 1;
		/* const */ unsigned int WRPD05         : 1;
		/* const */ unsigned int WRPD06         : 1;
		/* const */ unsigned int WRPD07         : 1;
		/* const */ unsigned int                : 8;
	} B;
	int I;
	unsigned int U;

} DMA_WRPSR_type;
#define DMA_WRPSR	(*( DMA_WRPSR_type *) 0xF0003C5Cu)	/* Wrap Status Register */

typedef volatile union
{
	struct
	{ 
		unsigned int BTRC0          : 2;
		unsigned int BCHS0          : 3;
		unsigned int BRL0           : 1;
		unsigned int                : 26;
	} B;
	int I;
	unsigned int U;

} DMA_OCDSR_type;
#define DMA_OCDSR	(*( DMA_OCDSR_type *) 0xF0003C64u)	/* OCDS Register */

typedef volatile union
{
	struct
	{ 
		unsigned int SUSEN00        : 1;
		unsigned int SUSEN01        : 1;
		unsigned int SUSEN02        : 1;
		unsigned int SUSEN03        : 1;
		unsigned int SUSEN04        : 1;
		unsigned int SUSEN05        : 1;
		unsigned int SUSEN06        : 1;
		unsigned int SUSEN07        : 1;
		/* const */ unsigned int                : 8;
		/* const */ unsigned int SUSAC00        : 1;
		/* const */ unsigned int SUSAC01        : 1;
		/* const */ unsigned int SUSAC02        : 1;
		/* const */ unsigned int SUSAC03        : 1;
		/* const */ unsigned int SUSAC04        : 1;
		/* const */ unsigned int SUSAC05        : 1;
		/* const */ unsigned int SUSAC06        : 1;
		/* const */ unsigned int SUSAC07        : 1;
		/* const */ unsigned int                : 8;
	} B;
	int I;
	unsigned int U;

} DMA_SUSPMR_type;
#define DMA_SUSPMR	(*( DMA_SUSPMR_type *) 0xF0003C68u)	/* Suspend Mode Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int TCOUNT         : 9;
		/* const */ unsigned int                : 6;
		/* const */ unsigned int LXO            : 1;
		/* const */ unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} DMA_CHSR00_type;
#define DMA_CHSR00	(*( DMA_CHSR00_type *) 0xF0003C80u)	/* Channel 00 Status Register */

typedef volatile union
{
	struct
	{ 
		unsigned int TREL           : 9;
		unsigned int                : 4;
		unsigned int PRSEL          : 3;
		unsigned int BLKM           : 3;
		unsigned int RROAT          : 1;
		unsigned int CHMODE         : 1;
		unsigned int CHDW           : 2;
		unsigned int                : 1;
		unsigned int PATSEL         : 2;
		unsigned int                : 2;
		unsigned int CHPRIO         : 1;
		unsigned int                : 1;
		unsigned int DMAPRIO        : 1;
		unsigned int                : 1;
	} B;
	int I;
	unsigned int U;

} DMA_CHCR00_type;
#define DMA_CHCR00	(*( DMA_CHCR00_type *) 0xF0003C84u)	/* DMA Channel 00 Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int WRPSE          : 1;
		unsigned int WRPDE          : 1;
		unsigned int INTCT          : 2;
		unsigned int WRPP           : 4;
		unsigned int INTP           : 4;
		unsigned int IRDV           : 4;
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} DMA_CHICR00_type;
#define DMA_CHICR00	(*( DMA_CHICR00_type *) 0xF0003C88u)	/* DMA Channel 00 Interrupt Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int SMF            : 3;
		unsigned int INCS           : 1;
		unsigned int DMF            : 3;
		unsigned int INCD           : 1;
		unsigned int CBLS           : 4;
		unsigned int CBLD           : 4;
		unsigned int SHCT           : 2;
		unsigned int                : 14;
	} B;
	int I;
	unsigned int U;

} DMA_ADRCR00_type;
#define DMA_ADRCR00	(*( DMA_ADRCR00_type *) 0xF0003C8Cu)	/* DMA Channel 00 Address Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int SADR           : 32;
	} B;
	int I;
	unsigned int U;

} DMA_SADR00_type;
#define DMA_SADR00	(*( DMA_SADR00_type *) 0xF0003C90u)	/* DMA Channel 00 Source Address Register */

typedef volatile union
{
	struct
	{ 
		unsigned int DADR           : 32;
	} B;
	int I;
	unsigned int U;

} DMA_DADR00_type;
#define DMA_DADR00	(*( DMA_DADR00_type *) 0xF0003C94u)	/* DMA Channel 00 Destination Address Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int SHADR          : 32;
	} B;
	int I;
	unsigned int U;

} DMA_SHADR00_type;
#define DMA_SHADR00	(*( DMA_SHADR00_type *) 0xF0003C98u)	/* Channel 00 Shadowed Address Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int TCOUNT         : 9;
		/* const */ unsigned int                : 6;
		/* const */ unsigned int LXO            : 1;
		/* const */ unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} DMA_CHSR01_type;
#define DMA_CHSR01	(*( DMA_CHSR01_type *) 0xF0003CA0u)	/* DMA Channel 01 Status Register */

typedef volatile union
{
	struct
	{ 
		unsigned int TREL           : 9;
		unsigned int                : 4;
		unsigned int PRSEL          : 3;
		unsigned int BLKM           : 3;
		unsigned int RROAT          : 1;
		unsigned int CHMODE         : 1;
		unsigned int CHDW           : 2;
		unsigned int                : 1;
		unsigned int PATSEL         : 2;
		unsigned int                : 2;
		unsigned int CHPRIO         : 1;
		unsigned int                : 1;
		unsigned int DMAPRIO        : 1;
		unsigned int                : 1;
	} B;
	int I;
	unsigned int U;

} DMA_CHCR01_type;
#define DMA_CHCR01	(*( DMA_CHCR01_type *) 0xF0003CA4u)	/* DMA Channel 01 Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int WRPSE          : 1;
		unsigned int WRPDE          : 1;
		unsigned int INTCT          : 2;
		unsigned int WRPP           : 4;
		unsigned int INTP           : 4;
		unsigned int IRDV           : 4;
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} DMA_CHICR01_type;
#define DMA_CHICR01	(*( DMA_CHICR01_type *) 0xF0003CA8u)	/* DMA Channel 01 Interrupt Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int SMF            : 3;
		unsigned int INCS           : 1;
		unsigned int DMF            : 3;
		unsigned int INCD           : 1;
		unsigned int CBLS           : 4;
		unsigned int CBLD           : 4;
		unsigned int SHCT           : 2;
		unsigned int                : 14;
	} B;
	int I;
	unsigned int U;

} DMA_ADRCR01_type;
#define DMA_ADRCR01	(*( DMA_ADRCR01_type *) 0xF0003CACu)	/* DMA Channel 01 Address Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int SADR           : 32;
	} B;
	int I;
	unsigned int U;

} DMA_SADR01_type;
#define DMA_SADR01	(*( DMA_SADR01_type *) 0xF0003CB0u)	/* DMA Channel 01 Source Address Register */

typedef volatile union
{
	struct
	{ 
		unsigned int DADR           : 32;
	} B;
	int I;
	unsigned int U;

} DMA_DADR01_type;
#define DMA_DADR01	(*( DMA_DADR01_type *) 0xF0003CB4u)	/* DMA Channel 01 Destination Address Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int SHADR          : 32;
	} B;
	int I;
	unsigned int U;

} DMA_SHADR01_type;
#define DMA_SHADR01	(*( DMA_SHADR01_type *) 0xF0003CB8u)	/* DMA Channel 01 Shadowed Address Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int TCOUNT         : 9;
		/* const */ unsigned int                : 6;
		/* const */ unsigned int LXO            : 1;
		/* const */ unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} DMA_CHSR02_type;
#define DMA_CHSR02	(*( DMA_CHSR02_type *) 0xF0003CC0u)	/* DMA Channel 02 Status Register */

typedef volatile union
{
	struct
	{ 
		unsigned int TREL           : 9;
		unsigned int                : 4;
		unsigned int PRSEL          : 3;
		unsigned int BLKM           : 3;
		unsigned int RROAT          : 1;
		unsigned int CHMODE         : 1;
		unsigned int CHDW           : 2;
		unsigned int                : 1;
		unsigned int PATSEL         : 2;
		unsigned int                : 2;
		unsigned int CHPRIO         : 1;
		unsigned int                : 1;
		unsigned int DMAPRIO        : 1;
		unsigned int                : 1;
	} B;
	int I;
	unsigned int U;

} DMA_CHCR02_type;
#define DMA_CHCR02	(*( DMA_CHCR02_type *) 0xF0003CC4u)	/* DMA Channel 02 Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int WRPSE          : 1;
		unsigned int WRPDE          : 1;
		unsigned int INTCT          : 2;
		unsigned int WRPP           : 4;
		unsigned int INTP           : 4;
		unsigned int IRDV           : 4;
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} DMA_CHICR02_type;
#define DMA_CHICR02	(*( DMA_CHICR02_type *) 0xF0003CC8u)	/* DMA Channel 02 Interrupt Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int SMF            : 3;
		unsigned int INCS           : 1;
		unsigned int DMF            : 3;
		unsigned int INCD           : 1;
		unsigned int CBLS           : 4;
		unsigned int CBLD           : 4;
		unsigned int SHCT           : 2;
		unsigned int                : 14;
	} B;
	int I;
	unsigned int U;

} DMA_ADRCR02_type;
#define DMA_ADRCR02	(*( DMA_ADRCR02_type *) 0xF0003CCCu)	/* DMA Channel 02 Address Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int SADR           : 32;
	} B;
	int I;
	unsigned int U;

} DMA_SADR02_type;
#define DMA_SADR02	(*( DMA_SADR02_type *) 0xF0003CD0u)	/* DMA Channel 02 Source Address Register */

typedef volatile union
{
	struct
	{ 
		unsigned int DADR           : 32;
	} B;
	int I;
	unsigned int U;

} DMA_DADR02_type;
#define DMA_DADR02	(*( DMA_DADR02_type *) 0xF0003CD4u)	/* DMA Channel 02 Destination Address Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int SHADR          : 32;
	} B;
	int I;
	unsigned int U;

} DMA_SHADR02_type;
#define DMA_SHADR02	(*( DMA_SHADR02_type *) 0xF0003CD8u)	/* DMA Channel 02 Shadowed Address Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int TCOUNT         : 9;
		/* const */ unsigned int                : 6;
		/* const */ unsigned int LXO            : 1;
		/* const */ unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} DMA_CHSR03_type;
#define DMA_CHSR03	(*( DMA_CHSR03_type *) 0xF0003CE0u)	/* DMA Channel 03 Status Register */

typedef volatile union
{
	struct
	{ 
		unsigned int TREL           : 9;
		unsigned int                : 4;
		unsigned int PRSEL          : 3;
		unsigned int BLKM           : 3;
		unsigned int RROAT          : 1;
		unsigned int CHMODE         : 1;
		unsigned int CHDW           : 2;
		unsigned int                : 1;
		unsigned int PATSEL         : 2;
		unsigned int                : 2;
		unsigned int CHPRIO         : 1;
		unsigned int                : 1;
		unsigned int DMAPRIO        : 1;
		unsigned int                : 1;
	} B;
	int I;
	unsigned int U;

} DMA_CHCR03_type;
#define DMA_CHCR03	(*( DMA_CHCR03_type *) 0xF0003CE4u)	/* DMA Channel 03 Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int WRPSE          : 1;
		unsigned int WRPDE          : 1;
		unsigned int INTCT          : 2;
		unsigned int WRPP           : 4;
		unsigned int INTP           : 4;
		unsigned int IRDV           : 4;
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} DMA_CHICR03_type;
#define DMA_CHICR03	(*( DMA_CHICR03_type *) 0xF0003CE8u)	/* DMA Channel 03 Interrupt Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int SMF            : 3;
		unsigned int INCS           : 1;
		unsigned int DMF            : 3;
		unsigned int INCD           : 1;
		unsigned int CBLS           : 4;
		unsigned int CBLD           : 4;
		unsigned int SHCT           : 2;
		unsigned int                : 14;
	} B;
	int I;
	unsigned int U;

} DMA_ADRCR03_type;
#define DMA_ADRCR03	(*( DMA_ADRCR03_type *) 0xF0003CECu)	/* DMA Channel 03 Address Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int SADR           : 32;
	} B;
	int I;
	unsigned int U;

} DMA_SADR03_type;
#define DMA_SADR03	(*( DMA_SADR03_type *) 0xF0003CF0u)	/* DMA Channel 03 Source Address Register */

typedef volatile union
{
	struct
	{ 
		unsigned int DADR           : 32;
	} B;
	int I;
	unsigned int U;

} DMA_DADR03_type;
#define DMA_DADR03	(*( DMA_DADR03_type *) 0xF0003CF4u)	/* DMA Channel 03 Destination Address Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int SHADR          : 32;
	} B;
	int I;
	unsigned int U;

} DMA_SHADR03_type;
#define DMA_SHADR03	(*( DMA_SHADR03_type *) 0xF0003CF8u)	/* DMA Channel 03 Shadowed Address Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int TCOUNT         : 9;
		/* const */ unsigned int                : 6;
		/* const */ unsigned int LXO            : 1;
		/* const */ unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} DMA_CHSR04_type;
#define DMA_CHSR04	(*( DMA_CHSR04_type *) 0xF0003D00u)	/* DMA Channel 04 Status Register */

typedef volatile union
{
	struct
	{ 
		unsigned int TREL           : 9;
		unsigned int                : 4;
		unsigned int PRSEL          : 3;
		unsigned int BLKM           : 3;
		unsigned int RROAT          : 1;
		unsigned int CHMODE         : 1;
		unsigned int CHDW           : 2;
		unsigned int                : 1;
		unsigned int PATSEL         : 2;
		unsigned int                : 2;
		unsigned int CHPRIO         : 1;
		unsigned int                : 1;
		unsigned int DMAPRIO        : 1;
		unsigned int                : 1;
	} B;
	int I;
	unsigned int U;

} DMA_CHCR04_type;
#define DMA_CHCR04	(*( DMA_CHCR04_type *) 0xF0003D04u)	/* DMA Channel 04 Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int WRPSE          : 1;
		unsigned int WRPDE          : 1;
		unsigned int INTCT          : 2;
		unsigned int WRPP           : 4;
		unsigned int INTP           : 4;
		unsigned int IRDV           : 4;
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} DMA_CHICR04_type;
#define DMA_CHICR04	(*( DMA_CHICR04_type *) 0xF0003D08u)	/* DMA Channel 04 Interrupt Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int SMF            : 3;
		unsigned int INCS           : 1;
		unsigned int DMF            : 3;
		unsigned int INCD           : 1;
		unsigned int CBLS           : 4;
		unsigned int CBLD           : 4;
		unsigned int SHCT           : 2;
		unsigned int                : 14;
	} B;
	int I;
	unsigned int U;

} DMA_ADRCR04_type;
#define DMA_ADRCR04	(*( DMA_ADRCR04_type *) 0xF0003D0Cu)	/* DMA Channel 04 Address Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int SADR           : 32;
	} B;
	int I;
	unsigned int U;

} DMA_SADR04_type;
#define DMA_SADR04	(*( DMA_SADR04_type *) 0xF0003D10u)	/* DMA Channel 04 Source Address Register */

typedef volatile union
{
	struct
	{ 
		unsigned int DADR           : 32;
	} B;
	int I;
	unsigned int U;

} DMA_DADR04_type;
#define DMA_DADR04	(*( DMA_DADR04_type *) 0xF0003D14u)	/* DMA Channel 04 Destination Address Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int SHADR          : 32;
	} B;
	int I;
	unsigned int U;

} DMA_SHADR04_type;
#define DMA_SHADR04	(*( DMA_SHADR04_type *) 0xF0003D18u)	/* DMA Channel 04 Shadowed Address Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int TCOUNT         : 9;
		/* const */ unsigned int                : 6;
		/* const */ unsigned int LXO            : 1;
		/* const */ unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} DMA_CHSR05_type;
#define DMA_CHSR05	(*( DMA_CHSR05_type *) 0xF0003D20u)	/* DMA Channel 05 Status Register */

typedef volatile union
{
	struct
	{ 
		unsigned int TREL           : 9;
		unsigned int                : 4;
		unsigned int PRSEL          : 3;
		unsigned int BLKM           : 3;
		unsigned int RROAT          : 1;
		unsigned int CHMODE         : 1;
		unsigned int CHDW           : 2;
		unsigned int                : 1;
		unsigned int PATSEL         : 2;
		unsigned int                : 2;
		unsigned int CHPRIO         : 1;
		unsigned int                : 1;
		unsigned int DMAPRIO        : 1;
		unsigned int                : 1;
	} B;
	int I;
	unsigned int U;

} DMA_CHCR05_type;
#define DMA_CHCR05	(*( DMA_CHCR05_type *) 0xF0003D24u)	/* DMA Channel 05 Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int WRPSE          : 1;
		unsigned int WRPDE          : 1;
		unsigned int INTCT          : 2;
		unsigned int WRPP           : 4;
		unsigned int INTP           : 4;
		unsigned int IRDV           : 4;
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} DMA_CHICR05_type;
#define DMA_CHICR05	(*( DMA_CHICR05_type *) 0xF0003D28u)	/* DMA Channel 05 Interrupt Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int SMF            : 3;
		unsigned int INCS           : 1;
		unsigned int DMF            : 3;
		unsigned int INCD           : 1;
		unsigned int CBLS           : 4;
		unsigned int CBLD           : 4;
		unsigned int SHCT           : 2;
		unsigned int                : 14;
	} B;
	int I;
	unsigned int U;

} DMA_ADRCR05_type;
#define DMA_ADRCR05	(*( DMA_ADRCR05_type *) 0xF0003D2Cu)	/* DMA Channel 05 Address Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int SADR           : 32;
	} B;
	int I;
	unsigned int U;

} DMA_SADR05_type;
#define DMA_SADR05	(*( DMA_SADR05_type *) 0xF0003D30u)	/* DMA Channel 05 Source Address Register */

typedef volatile union
{
	struct
	{ 
		unsigned int DADR           : 32;
	} B;
	int I;
	unsigned int U;

} DMA_DADR05_type;
#define DMA_DADR05	(*( DMA_DADR05_type *) 0xF0003D34u)	/* DMA Channel 05 Destination Address Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int SHADR          : 32;
	} B;
	int I;
	unsigned int U;

} DMA_SHADR05_type;
#define DMA_SHADR05	(*( DMA_SHADR05_type *) 0xF0003D38u)	/* DMA Channel 05 Shadowed Address Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int TCOUNT         : 9;
		/* const */ unsigned int                : 6;
		/* const */ unsigned int LXO            : 1;
		/* const */ unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} DMA_CHSR06_type;
#define DMA_CHSR06	(*( DMA_CHSR06_type *) 0xF0003D40u)	/* DMA Channel 06 Status Register */

typedef volatile union
{
	struct
	{ 
		unsigned int TREL           : 9;
		unsigned int                : 4;
		unsigned int PRSEL          : 3;
		unsigned int BLKM           : 3;
		unsigned int RROAT          : 1;
		unsigned int CHMODE         : 1;
		unsigned int CHDW           : 2;
		unsigned int                : 1;
		unsigned int PATSEL         : 2;
		unsigned int                : 2;
		unsigned int CHPRIO         : 1;
		unsigned int                : 1;
		unsigned int DMAPRIO        : 1;
		unsigned int                : 1;
	} B;
	int I;
	unsigned int U;

} DMA_CHCR06_type;
#define DMA_CHCR06	(*( DMA_CHCR06_type *) 0xF0003D44u)	/* DMA Channel 06 Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int WRPSE          : 1;
		unsigned int WRPDE          : 1;
		unsigned int INTCT          : 2;
		unsigned int WRPP           : 4;
		unsigned int INTP           : 4;
		unsigned int IRDV           : 4;
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} DMA_CHICR06_type;
#define DMA_CHICR06	(*( DMA_CHICR06_type *) 0xF0003D48u)	/* DMA Channel 06 Interrupt Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int SMF            : 3;
		unsigned int INCS           : 1;
		unsigned int DMF            : 3;
		unsigned int INCD           : 1;
		unsigned int CBLS           : 4;
		unsigned int CBLD           : 4;
		unsigned int SHCT           : 2;
		unsigned int                : 14;
	} B;
	int I;
	unsigned int U;

} DMA_ADRCR06_type;
#define DMA_ADRCR06	(*( DMA_ADRCR06_type *) 0xF0003D4Cu)	/* DMA Channel 06 Address Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int SADR           : 32;
	} B;
	int I;
	unsigned int U;

} DMA_SADR06_type;
#define DMA_SADR06	(*( DMA_SADR06_type *) 0xF0003D50u)	/* DMA Channel 06 Source Address Register */

typedef volatile union
{
	struct
	{ 
		unsigned int DADR           : 32;
	} B;
	int I;
	unsigned int U;

} DMA_DADR06_type;
#define DMA_DADR06	(*( DMA_DADR06_type *) 0xF0003D54u)	/* DMA Channel 06 Destination Address Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int SHADR          : 32;
	} B;
	int I;
	unsigned int U;

} DMA_SHADR06_type;
#define DMA_SHADR06	(*( DMA_SHADR06_type *) 0xF0003D58u)	/* DMA Channel 06 Shadowed Address Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int TCOUNT         : 9;
		/* const */ unsigned int                : 6;
		/* const */ unsigned int LXO            : 1;
		/* const */ unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} DMA_CHSR07_type;
#define DMA_CHSR07	(*( DMA_CHSR07_type *) 0xF0003D60u)	/* DMA Channel 07 Status Register */

typedef volatile union
{
	struct
	{ 
		unsigned int TREL           : 9;
		unsigned int                : 4;
		unsigned int PRSEL          : 3;
		unsigned int BLKM           : 3;
		unsigned int RROAT          : 1;
		unsigned int CHMODE         : 1;
		unsigned int CHDW           : 2;
		unsigned int                : 1;
		unsigned int PATSEL         : 2;
		unsigned int                : 2;
		unsigned int CHPRIO         : 1;
		unsigned int                : 1;
		unsigned int DMAPRIO        : 1;
		unsigned int                : 1;
	} B;
	int I;
	unsigned int U;

} DMA_CHCR07_type;
#define DMA_CHCR07	(*( DMA_CHCR07_type *) 0xF0003D64u)	/* DMA Channel 07 Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int WRPSE          : 1;
		unsigned int WRPDE          : 1;
		unsigned int INTCT          : 2;
		unsigned int WRPP           : 4;
		unsigned int INTP           : 4;
		unsigned int IRDV           : 4;
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} DMA_CHICR07_type;
#define DMA_CHICR07	(*( DMA_CHICR07_type *) 0xF0003D68u)	/* DMA Channel 07 Interrupt Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int SMF            : 3;
		unsigned int INCS           : 1;
		unsigned int DMF            : 3;
		unsigned int INCD           : 1;
		unsigned int CBLS           : 4;
		unsigned int CBLD           : 4;
		unsigned int SHCT           : 2;
		unsigned int                : 14;
	} B;
	int I;
	unsigned int U;

} DMA_ADRCR07_type;
#define DMA_ADRCR07	(*( DMA_ADRCR07_type *) 0xF0003D6Cu)	/* DMA Channel 07 Address Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int SADR           : 32;
	} B;
	int I;
	unsigned int U;

} DMA_SADR07_type;
#define DMA_SADR07	(*( DMA_SADR07_type *) 0xF0003D70u)	/* DMA Channel 07 Source Address Register */

typedef volatile union
{
	struct
	{ 
		unsigned int DADR           : 32;
	} B;
	int I;
	unsigned int U;

} DMA_DADR07_type;
#define DMA_DADR07	(*( DMA_DADR07_type *) 0xF0003D74u)	/* DMA Channel 07 Destination Address Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int SHADR          : 32;
	} B;
	int I;
	unsigned int U;

} DMA_SHADR07_type;
#define DMA_SHADR07	(*( DMA_SHADR07_type *) 0xF0003D78u)	/* DMA Channel 07 Shadowed Address Register */

typedef volatile union
{
	struct
	{ 
		unsigned int TOUT           : 16;
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} DMA_TOCTR_type;
#define DMA_TOCTR	(*( DMA_TOCTR_type *) 0xF0003E80u)	/* DMA Bus Time-Out Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int SRPN           : 8;
		unsigned int                : 2;
		unsigned int TOS            : 1;
		unsigned int                : 1;
		unsigned int SRE            : 1;
		/* const */ unsigned int SRR            : 1;
		unsigned int CLRR           : 1;
		unsigned int SETR           : 1;
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} DMA_SYSSRC4_type;
#define DMA_SYSSRC4	(*( DMA_SYSSRC4_type *) 0xF0003E8Cu)	/* System Interrupt Service Request Control Register 4 */

typedef volatile union
{
	struct
	{ 
		unsigned int SRPN           : 8;
		unsigned int                : 2;
		unsigned int TOS            : 1;
		unsigned int                : 1;
		unsigned int SRE            : 1;
		/* const */ unsigned int SRR            : 1;
		unsigned int CLRR           : 1;
		unsigned int SETR           : 1;
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} DMA_MLI0SRC3_type;
#define DMA_MLI0SRC3	(*( DMA_MLI0SRC3_type *) 0xF0003EA0u)	/* MLI 0 Service Request Control Register 3 */

typedef volatile union
{
	struct
	{ 
		unsigned int SRPN           : 8;
		unsigned int                : 2;
		unsigned int TOS            : 1;
		unsigned int                : 1;
		unsigned int SRE            : 1;
		/* const */ unsigned int SRR            : 1;
		unsigned int CLRR           : 1;
		unsigned int SETR           : 1;
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} DMA_MLI0SRC2_type;
#define DMA_MLI0SRC2	(*( DMA_MLI0SRC2_type *) 0xF0003EA4u)	/* MLI 0 Service Request Control Register 2 */

typedef volatile union
{
	struct
	{ 
		unsigned int SRPN           : 8;
		unsigned int                : 2;
		unsigned int TOS            : 1;
		unsigned int                : 1;
		unsigned int SRE            : 1;
		/* const */ unsigned int SRR            : 1;
		unsigned int CLRR           : 1;
		unsigned int SETR           : 1;
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} DMA_MLI0SRC1_type;
#define DMA_MLI0SRC1	(*( DMA_MLI0SRC1_type *) 0xF0003EA8u)	/* MLI 0 Service Request Control Register 1 */

typedef volatile union
{
	struct
	{ 
		unsigned int SRPN           : 8;
		unsigned int                : 2;
		unsigned int TOS            : 1;
		unsigned int                : 1;
		unsigned int SRE            : 1;
		/* const */ unsigned int SRR            : 1;
		unsigned int CLRR           : 1;
		unsigned int SETR           : 1;
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} DMA_MLI0SRC0_type;
#define DMA_MLI0SRC0	(*( DMA_MLI0SRC0_type *) 0xF0003EACu)	/* MLI 0 Service Request Control Register 0 */

typedef volatile union
{
	struct
	{ 
		unsigned int SRPN           : 8;
		unsigned int                : 2;
		unsigned int TOS            : 1;
		unsigned int                : 1;
		unsigned int SRE            : 1;
		/* const */ unsigned int SRR            : 1;
		unsigned int CLRR           : 1;
		unsigned int SETR           : 1;
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} DMA_MLI1SRC1_type;
#define DMA_MLI1SRC1	(*( DMA_MLI1SRC1_type *) 0xF0003EB8u)	/* MLI 1 Service Request Control Register 1 */

typedef volatile union
{
	struct
	{ 
		unsigned int SRPN           : 8;
		unsigned int                : 2;
		unsigned int TOS            : 1;
		unsigned int                : 1;
		unsigned int SRE            : 1;
		/* const */ unsigned int SRR            : 1;
		unsigned int CLRR           : 1;
		unsigned int SETR           : 1;
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} DMA_MLI1SRC0_type;
#define DMA_MLI1SRC0	(*( DMA_MLI1SRC0_type *) 0xF0003EBCu)	/* MLI 1 Service Request Control Register 0 */

typedef volatile union
{
	struct
	{ 
		unsigned int SRPN           : 8;
		unsigned int                : 2;
		unsigned int TOS            : 1;
		unsigned int                : 1;
		unsigned int SRE            : 1;
		/* const */ unsigned int SRR            : 1;
		unsigned int CLRR           : 1;
		unsigned int SETR           : 1;
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} DMA_SRC3_type;
#define DMA_SRC3	(*( DMA_SRC3_type *) 0xF0003EF0u)	/* DMA Service Request Control Register 3 */

typedef volatile union
{
	struct
	{ 
		unsigned int SRPN           : 8;
		unsigned int                : 2;
		unsigned int TOS            : 1;
		unsigned int                : 1;
		unsigned int SRE            : 1;
		/* const */ unsigned int SRR            : 1;
		unsigned int CLRR           : 1;
		unsigned int SETR           : 1;
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} DMA_SRC2_type;
#define DMA_SRC2	(*( DMA_SRC2_type *) 0xF0003EF4u)	/* DMA Service Request Control Register 2 */

typedef volatile union
{
	struct
	{ 
		unsigned int SRPN           : 8;
		unsigned int                : 2;
		unsigned int TOS            : 1;
		unsigned int                : 1;
		unsigned int SRE            : 1;
		/* const */ unsigned int SRR            : 1;
		unsigned int CLRR           : 1;
		unsigned int SETR           : 1;
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} DMA_SRC1_type;
#define DMA_SRC1	(*( DMA_SRC1_type *) 0xF0003EF8u)	/* DMA Service Request Control Register 1 */

typedef volatile union
{
	struct
	{ 
		unsigned int SRPN           : 8;
		unsigned int                : 2;
		unsigned int TOS            : 1;
		unsigned int                : 1;
		unsigned int SRE            : 1;
		/* const */ unsigned int SRR            : 1;
		unsigned int CLRR           : 1;
		unsigned int SETR           : 1;
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} DMA_SRC0_type;
#define DMA_SRC0	(*( DMA_SRC0_type *) 0xF0003EFCu)	/* DMA Service Request Control Register 0 */


/* MultiCAN */
typedef volatile union
{
	struct
	{ 
		unsigned int DISR           : 1;
		/* const */ unsigned int DISS           : 1;
		unsigned int SPEN           : 1;
		unsigned int EDIS           : 1;
		unsigned int SBWE           : 1;
		unsigned int FSOE           : 1;
		unsigned int                : 26;
	} B;
	int I;
	unsigned int U;

} CAN_CLC_type;
#define CAN_CLC	(*( CAN_CLC_type *) 0xF0004000u)	/* MultiCAN Clock Control Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int MOD_REV        : 8;
		/* const */ unsigned int MOD_TYPE       : 8;
		/* const */ unsigned int MOD_NUMBER     : 16;
	} B;
	int I;
	unsigned int U;

} CAN_ID_type;
#define CAN_ID	(*( CAN_ID_type *) 0xF0004008u)	/* MultiCAN Module Identification Register */

typedef volatile union
{
	struct
	{ 
		unsigned int STEP           : 10;
		unsigned int                : 2;
		unsigned int SC             : 2;
		unsigned int DM             : 2;
		/* const */ unsigned int RESULT         : 10;
		unsigned int                : 2;
		/* const */ unsigned int SUSACK         : 1;
		/* const */ unsigned int SUSREQ         : 1;
		unsigned int ENHW           : 1;
		unsigned int DISCLK         : 1;
	} B;
	int I;
	unsigned int U;

} CAN_FDR_type;
#define CAN_FDR	(*( CAN_FDR_type *) 0xF000400Cu)	/* MultiCAN Fractional Divider Register */

typedef volatile union
{
	struct
	{ 
		unsigned int ECCW           : 1;
		/* const */ unsigned int                : 7;
		unsigned int EDCDIS         : 1;
		/* const */ unsigned int                : 7;
		/* const */ unsigned int ECCR           : 1;
		/* const */ unsigned int                : 7;
		/* const */ unsigned int SBERR          : 1;
		/* const */ unsigned int                : 7;
	} B;
	int I;
	unsigned int U;

} CAN_EDCR_type;
#define CAN_EDCR	(*( CAN_EDCR_type *) 0xF0004080u)	/* Error Detection and Correction Test Register */

typedef volatile union
{
	struct
	{ 
		unsigned int SRPN           : 8;
		unsigned int                : 2;
		unsigned int TOS            : 1;
		unsigned int                : 1;
		unsigned int SRE            : 1;
		/* const */ unsigned int SRR            : 1;
		unsigned int CLRR           : 1;
		unsigned int SETR           : 1;
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} CAN_SRC15_type;
#define CAN_SRC15	(*( CAN_SRC15_type *) 0xF00040C0u)	/* CAN Service Request Control Register 15 */

typedef volatile union
{
	struct
	{ 
		unsigned int SRPN           : 8;
		unsigned int                : 2;
		unsigned int TOS            : 1;
		unsigned int                : 1;
		unsigned int SRE            : 1;
		/* const */ unsigned int SRR            : 1;
		unsigned int CLRR           : 1;
		unsigned int SETR           : 1;
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} CAN_SRC14_type;
#define CAN_SRC14	(*( CAN_SRC14_type *) 0xF00040C4u)	/* CAN Service Request Control Register 14 */

typedef volatile union
{
	struct
	{ 
		unsigned int SRPN           : 8;
		unsigned int                : 2;
		unsigned int TOS            : 1;
		unsigned int                : 1;
		unsigned int SRE            : 1;
		/* const */ unsigned int SRR            : 1;
		unsigned int CLRR           : 1;
		unsigned int SETR           : 1;
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} CAN_SRC13_type;
#define CAN_SRC13	(*( CAN_SRC13_type *) 0xF00040C8u)	/* CAN Service Request Control Register 13 */

typedef volatile union
{
	struct
	{ 
		unsigned int SRPN           : 8;
		unsigned int                : 2;
		unsigned int TOS            : 1;
		unsigned int                : 1;
		unsigned int SRE            : 1;
		/* const */ unsigned int SRR            : 1;
		unsigned int CLRR           : 1;
		unsigned int SETR           : 1;
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} CAN_SRC12_type;
#define CAN_SRC12	(*( CAN_SRC12_type *) 0xF00040CCu)	/* CAN Service Request Control Register 12 */

typedef volatile union
{
	struct
	{ 
		unsigned int SRPN           : 8;
		unsigned int                : 2;
		unsigned int TOS            : 1;
		unsigned int                : 1;
		unsigned int SRE            : 1;
		/* const */ unsigned int SRR            : 1;
		unsigned int CLRR           : 1;
		unsigned int SETR           : 1;
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} CAN_SRC11_type;
#define CAN_SRC11	(*( CAN_SRC11_type *) 0xF00040D0u)	/* CAN Service Request Control Register 11 */

typedef volatile union
{
	struct
	{ 
		unsigned int SRPN           : 8;
		unsigned int                : 2;
		unsigned int TOS            : 1;
		unsigned int                : 1;
		unsigned int SRE            : 1;
		/* const */ unsigned int SRR            : 1;
		unsigned int CLRR           : 1;
		unsigned int SETR           : 1;
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} CAN_SRC10_type;
#define CAN_SRC10	(*( CAN_SRC10_type *) 0xF00040D4u)	/* CAN Service Request Control Register 10 */

typedef volatile union
{
	struct
	{ 
		unsigned int SRPN           : 8;
		unsigned int                : 2;
		unsigned int TOS            : 1;
		unsigned int                : 1;
		unsigned int SRE            : 1;
		/* const */ unsigned int SRR            : 1;
		unsigned int CLRR           : 1;
		unsigned int SETR           : 1;
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} CAN_SRC9_type;
#define CAN_SRC9	(*( CAN_SRC9_type *) 0xF00040D8u)	/* CAN Service Request Control Register 9 */

typedef volatile union
{
	struct
	{ 
		unsigned int SRPN           : 8;
		unsigned int                : 2;
		unsigned int TOS            : 1;
		unsigned int                : 1;
		unsigned int SRE            : 1;
		/* const */ unsigned int SRR            : 1;
		unsigned int CLRR           : 1;
		unsigned int SETR           : 1;
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} CAN_SRC8_type;
#define CAN_SRC8	(*( CAN_SRC8_type *) 0xF00040DCu)	/* CAN Service Request Control Register 8 */

typedef volatile union
{
	struct
	{ 
		unsigned int SRPN           : 8;
		unsigned int                : 2;
		unsigned int TOS            : 1;
		unsigned int                : 1;
		unsigned int SRE            : 1;
		/* const */ unsigned int SRR            : 1;
		unsigned int CLRR           : 1;
		unsigned int SETR           : 1;
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} CAN_SRC7_type;
#define CAN_SRC7	(*( CAN_SRC7_type *) 0xF00040E0u)	/* Service Request Control Register 7 */

typedef volatile union
{
	struct
	{ 
		unsigned int SRPN           : 8;
		unsigned int                : 2;
		unsigned int TOS            : 1;
		unsigned int                : 1;
		unsigned int SRE            : 1;
		/* const */ unsigned int SRR            : 1;
		unsigned int CLRR           : 1;
		unsigned int SETR           : 1;
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} CAN_SRC6_type;
#define CAN_SRC6	(*( CAN_SRC6_type *) 0xF00040E4u)	/* CAN Service Request Control Register 6 */

typedef volatile union
{
	struct
	{ 
		unsigned int SRPN           : 8;
		unsigned int                : 2;
		unsigned int TOS            : 1;
		unsigned int                : 1;
		unsigned int SRE            : 1;
		/* const */ unsigned int SRR            : 1;
		unsigned int CLRR           : 1;
		unsigned int SETR           : 1;
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} CAN_SRC5_type;
#define CAN_SRC5	(*( CAN_SRC5_type *) 0xF00040E8u)	/* CAN Service Request Control Register 5 */

typedef volatile union
{
	struct
	{ 
		unsigned int SRPN           : 8;
		unsigned int                : 2;
		unsigned int TOS            : 1;
		unsigned int                : 1;
		unsigned int SRE            : 1;
		/* const */ unsigned int SRR            : 1;
		unsigned int CLRR           : 1;
		unsigned int SETR           : 1;
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} CAN_SRC4_type;
#define CAN_SRC4	(*( CAN_SRC4_type *) 0xF00040ECu)	/* CAN Service Request Control Register 4 */

typedef volatile union
{
	struct
	{ 
		unsigned int SRPN           : 8;
		unsigned int                : 2;
		unsigned int TOS            : 1;
		unsigned int                : 1;
		unsigned int SRE            : 1;
		/* const */ unsigned int SRR            : 1;
		unsigned int CLRR           : 1;
		unsigned int SETR           : 1;
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} CAN_SRC3_type;
#define CAN_SRC3	(*( CAN_SRC3_type *) 0xF00040F0u)	/* CAN Service Request Control Register 3 */

typedef volatile union
{
	struct
	{ 
		unsigned int SRPN           : 8;
		unsigned int                : 2;
		unsigned int TOS            : 1;
		unsigned int                : 1;
		unsigned int SRE            : 1;
		/* const */ unsigned int SRR            : 1;
		unsigned int CLRR           : 1;
		unsigned int SETR           : 1;
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} CAN_SRC2_type;
#define CAN_SRC2	(*( CAN_SRC2_type *) 0xF00040F4u)	/* CAN Service Request Control Register 2 */

typedef volatile union
{
	struct
	{ 
		unsigned int SRPN           : 8;
		unsigned int                : 2;
		unsigned int TOS            : 1;
		unsigned int                : 1;
		unsigned int SRE            : 1;
		/* const */ unsigned int SRR            : 1;
		unsigned int CLRR           : 1;
		unsigned int SETR           : 1;
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} CAN_SRC1_type;
#define CAN_SRC1	(*( CAN_SRC1_type *) 0xF00040F8u)	/* CAN Service Request Control Register 1 */

typedef volatile union
{
	struct
	{ 
		unsigned int SRPN           : 8;
		unsigned int                : 2;
		unsigned int TOS            : 1;
		unsigned int                : 1;
		unsigned int SRE            : 1;
		/* const */ unsigned int SRR            : 1;
		unsigned int CLRR           : 1;
		unsigned int SETR           : 1;
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} CAN_SRC0_type;
#define CAN_SRC0	(*( CAN_SRC0_type *) 0xF00040FCu)	/* CAN Service Request Control Register 0 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int BEGIN          : 8;
		/* const */ unsigned int END            : 8;
		/* const */ unsigned int SIZE           : 8;
		/* const */ unsigned int EMPTY          : 1;
		/* const */ unsigned int                : 7;
	} B;
	int I;
	unsigned int U;

} CAN_LIST0_type;
#define CAN_LIST0	(*( CAN_LIST0_type *) 0xF0004100u)	/* List Register 0 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int BEGIN          : 8;
		/* const */ unsigned int END            : 8;
		/* const */ unsigned int SIZE           : 8;
		/* const */ unsigned int EMPTY          : 1;
		/* const */ unsigned int                : 7;
	} B;
	int I;
	unsigned int U;

} CAN_LIST1_type;
#define CAN_LIST1	(*( CAN_LIST1_type *) 0xF0004104u)	/* List Register 1 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int BEGIN          : 8;
		/* const */ unsigned int END            : 8;
		/* const */ unsigned int SIZE           : 8;
		/* const */ unsigned int EMPTY          : 1;
		/* const */ unsigned int                : 7;
	} B;
	int I;
	unsigned int U;

} CAN_LIST2_type;
#define CAN_LIST2	(*( CAN_LIST2_type *) 0xF0004108u)	/* List Register 2 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int BEGIN          : 8;
		/* const */ unsigned int END            : 8;
		/* const */ unsigned int SIZE           : 8;
		/* const */ unsigned int EMPTY          : 1;
		/* const */ unsigned int                : 7;
	} B;
	int I;
	unsigned int U;

} CAN_LIST3_type;
#define CAN_LIST3	(*( CAN_LIST3_type *) 0xF000410Cu)	/* List Register 3 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int BEGIN          : 8;
		/* const */ unsigned int END            : 8;
		/* const */ unsigned int SIZE           : 8;
		/* const */ unsigned int EMPTY          : 1;
		/* const */ unsigned int                : 7;
	} B;
	int I;
	unsigned int U;

} CAN_LIST4_type;
#define CAN_LIST4	(*( CAN_LIST4_type *) 0xF0004110u)	/* List Register 4 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int BEGIN          : 8;
		/* const */ unsigned int END            : 8;
		/* const */ unsigned int SIZE           : 8;
		/* const */ unsigned int EMPTY          : 1;
		/* const */ unsigned int                : 7;
	} B;
	int I;
	unsigned int U;

} CAN_LIST5_type;
#define CAN_LIST5	(*( CAN_LIST5_type *) 0xF0004114u)	/* List Register 5 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int BEGIN          : 8;
		/* const */ unsigned int END            : 8;
		/* const */ unsigned int SIZE           : 8;
		/* const */ unsigned int EMPTY          : 1;
		/* const */ unsigned int                : 7;
	} B;
	int I;
	unsigned int U;

} CAN_LIST6_type;
#define CAN_LIST6	(*( CAN_LIST6_type *) 0xF0004118u)	/* List Register 6 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int BEGIN          : 8;
		/* const */ unsigned int END            : 8;
		/* const */ unsigned int SIZE           : 8;
		/* const */ unsigned int EMPTY          : 1;
		/* const */ unsigned int                : 7;
	} B;
	int I;
	unsigned int U;

} CAN_LIST7_type;
#define CAN_LIST7	(*( CAN_LIST7_type *) 0xF000411Cu)	/* List Register 7 */

typedef volatile union
{
	struct
	{ 
		unsigned int PND            : 32;
	} B;
	int I;
	unsigned int U;

} CAN_MSPND0_type;
#define CAN_MSPND0	(*( CAN_MSPND0_type *) 0xF0004120u)	/* Message Pending Register 0 */

typedef volatile union
{
	struct
	{ 
		unsigned int PND            : 32;
	} B;
	int I;
	unsigned int U;

} CAN_MSPND1_type;
#define CAN_MSPND1	(*( CAN_MSPND1_type *) 0xF0004124u)	/* Message Pending Register 1 */

typedef volatile union
{
	struct
	{ 
		unsigned int PND            : 32;
	} B;
	int I;
	unsigned int U;

} CAN_MSPND2_type;
#define CAN_MSPND2	(*( CAN_MSPND2_type *) 0xF0004128u)	/* Message Pending Register 2 */

typedef volatile union
{
	struct
	{ 
		unsigned int PND            : 32;
	} B;
	int I;
	unsigned int U;

} CAN_MSPND3_type;
#define CAN_MSPND3	(*( CAN_MSPND3_type *) 0xF000412Cu)	/* Message Pending Register 3 */

typedef volatile union
{
	struct
	{ 
		unsigned int PND            : 32;
	} B;
	int I;
	unsigned int U;

} CAN_MSPND4_type;
#define CAN_MSPND4	(*( CAN_MSPND4_type *) 0xF0004130u)	/* Message Pending Register 4 */

typedef volatile union
{
	struct
	{ 
		unsigned int PND            : 32;
	} B;
	int I;
	unsigned int U;

} CAN_MSPND5_type;
#define CAN_MSPND5	(*( CAN_MSPND5_type *) 0xF0004134u)	/* Message Pending Register 5 */

typedef volatile union
{
	struct
	{ 
		unsigned int PND            : 32;
	} B;
	int I;
	unsigned int U;

} CAN_MSPND6_type;
#define CAN_MSPND6	(*( CAN_MSPND6_type *) 0xF0004138u)	/* Message Pending Register 6 */

typedef volatile union
{
	struct
	{ 
		unsigned int PND            : 32;
	} B;
	int I;
	unsigned int U;

} CAN_MSPND7_type;
#define CAN_MSPND7	(*( CAN_MSPND7_type *) 0xF000413Cu)	/* Message Pending Register 7 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int INDEX          : 6;
		/* const */ unsigned int                : 26;
	} B;
	int I;
	unsigned int U;

} CAN_MSID0_type;
#define CAN_MSID0	(*( CAN_MSID0_type *) 0xF0004140u)	/* Message Index Register 0 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int INDEX          : 6;
		/* const */ unsigned int                : 26;
	} B;
	int I;
	unsigned int U;

} CAN_MSID1_type;
#define CAN_MSID1	(*( CAN_MSID1_type *) 0xF0004144u)	/* Message Index Register 1 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int INDEX          : 6;
		/* const */ unsigned int                : 26;
	} B;
	int I;
	unsigned int U;

} CAN_MSID2_type;
#define CAN_MSID2	(*( CAN_MSID2_type *) 0xF0004148u)	/* Message Index Register 2 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int INDEX          : 6;
		/* const */ unsigned int                : 26;
	} B;
	int I;
	unsigned int U;

} CAN_MSID3_type;
#define CAN_MSID3	(*( CAN_MSID3_type *) 0xF000414Cu)	/* Message Index Register 3 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int INDEX          : 6;
		/* const */ unsigned int                : 26;
	} B;
	int I;
	unsigned int U;

} CAN_MSID4_type;
#define CAN_MSID4	(*( CAN_MSID4_type *) 0xF0004150u)	/* Message Index Register 4 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int INDEX          : 6;
		/* const */ unsigned int                : 26;
	} B;
	int I;
	unsigned int U;

} CAN_MSID5_type;
#define CAN_MSID5	(*( CAN_MSID5_type *) 0xF0004154u)	/* Message Index Register 5 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int INDEX          : 6;
		/* const */ unsigned int                : 26;
	} B;
	int I;
	unsigned int U;

} CAN_MSID6_type;
#define CAN_MSID6	(*( CAN_MSID6_type *) 0xF0004158u)	/* Message Index Register 6 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int INDEX          : 6;
		/* const */ unsigned int                : 26;
	} B;
	int I;
	unsigned int U;

} CAN_MSID7_type;
#define CAN_MSID7	(*( CAN_MSID7_type *) 0xF000415Cu)	/* Message Index Register 7 */

typedef volatile union
{
	struct
	{ 
		unsigned int IM             : 32;
	} B;
	int I;
	unsigned int U;

} CAN_MSIMASK_type;
#define CAN_MSIMASK	(*( CAN_MSIMASK_type *) 0xF00041C0u)	/* Message Index Mask Register */

typedef volatile union
{
	struct
	{ 
		unsigned int PANCMD         : 8;
		/* const */ unsigned int BUSY           : 1;
		/* const */ unsigned int RBUSY          : 1;
		unsigned int                : 6;
		unsigned int PANAR1         : 8;
		unsigned int PANAR2         : 8;
	} B;
	int I;
	unsigned int U;

} CAN_PANCTR_type;
#define CAN_PANCTR	(*( CAN_PANCTR_type *) 0xF00041C4u)	/* Panel Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int                : 12;
		unsigned int MPSEL          : 4;
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} CAN_MCR_type;
#define CAN_MCR	(*( CAN_MCR_type *) 0xF00041C8u)	/* MultiCAN Module Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int IT             : 16;
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} CAN_MITR_type;
#define CAN_MITR	(*( CAN_MITR_type *) 0xF00041CCu)	/* Module Interrupt Trigger Register */

typedef volatile union
{
	struct
	{ 
		unsigned int INIT           : 1;
		unsigned int TRIE           : 1;
		unsigned int LECIE          : 1;
		unsigned int ALIE           : 1;
		unsigned int CANDIS         : 1;
		unsigned int                : 1;
		unsigned int CCE            : 1;
		unsigned int CALM           : 1;
		unsigned int SUSEN          : 1;
		unsigned int                : 23;
	} B;
	int I;
	unsigned int U;

} CAN_NCR0_type;
#define CAN_NCR0	(*( CAN_NCR0_type *) 0xF0004200u)	/* Node 0 Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int LEC            : 3;
		unsigned int TXOK           : 1;
		unsigned int RXOK           : 1;
		unsigned int ALERT          : 1;
		/* const */ unsigned int EWRN           : 1;
		/* const */ unsigned int BOFF           : 1;
		unsigned int LLE            : 1;
		unsigned int LOE            : 1;
		/* const */ unsigned int SUSACK         : 1;
		unsigned int                : 21;
	} B;
	int I;
	unsigned int U;

} CAN_NSR0_type;
#define CAN_NSR0	(*( CAN_NSR0_type *) 0xF0004204u)	/* Node 0 Status Register */

typedef volatile union
{
	struct
	{ 
		unsigned int ALINP          : 4;
		unsigned int LECINP         : 4;
		unsigned int TRINP          : 4;
		unsigned int CFCINP         : 4;
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} CAN_NIPR0_type;
#define CAN_NIPR0	(*( CAN_NIPR0_type *) 0xF0004208u)	/* Node 0 Interrupt Pointer Register */

typedef volatile union
{
	struct
	{ 
		unsigned int RXSEL          : 3;
		unsigned int                : 5;
		unsigned int LBM            : 1;
		unsigned int                : 23;
	} B;
	int I;
	unsigned int U;

} CAN_NPCR0_type;
#define CAN_NPCR0	(*( CAN_NPCR0_type *) 0xF000420Cu)	/* Node 0 Port Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int BRP            : 6;
		unsigned int SJW            : 2;
		unsigned int TSEG1          : 4;
		unsigned int TSEG2          : 3;
		unsigned int DIV8           : 1;
		unsigned int FTX            : 1;
		unsigned int                : 15;
	} B;
	int I;
	unsigned int U;

} CAN_NBTR0_type;
#define CAN_NBTR0	(*( CAN_NBTR0_type *) 0xF0004210u)	/* Node 0 Bit Timing Register */

typedef volatile union
{
	struct
	{ 
		unsigned int REC            : 8;
		unsigned int TEC            : 8;
		unsigned int EWRNLVL        : 8;
		/* const */ unsigned int LETD           : 1;
		/* const */ unsigned int LEINC          : 1;
		/* const */ unsigned int                : 6;
	} B;
	int I;
	unsigned int U;

} CAN_NECNT0_type;
#define CAN_NECNT0	(*( CAN_NECNT0_type *) 0xF0004214u)	/* Node 0 Error Counter Register */

typedef volatile union
{
	struct
	{ 
		unsigned int CFC            : 16;
		unsigned int CFSEL          : 3;
		unsigned int CFMOD          : 2;
		unsigned int                : 1;
		unsigned int CFCIE          : 1;
		unsigned int CFCOV          : 1;
		unsigned int                : 8;
	} B;
	int I;
	unsigned int U;

} CAN_NFCR0_type;
#define CAN_NFCR0	(*( CAN_NFCR0_type *) 0xF0004218u)	/* Node 0 Frame Counter Register */

typedef volatile union
{
	struct
	{ 
		unsigned int INIT           : 1;
		unsigned int TRIE           : 1;
		unsigned int LECIE          : 1;
		unsigned int ALIE           : 1;
		unsigned int CANDIS         : 1;
		unsigned int                : 1;
		unsigned int CCE            : 1;
		unsigned int CALM           : 1;
		unsigned int SUSEN          : 1;
		unsigned int                : 23;
	} B;
	int I;
	unsigned int U;

} CAN_NCR1_type;
#define CAN_NCR1	(*( CAN_NCR1_type *) 0xF0004300u)	/* Node 1 Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int LEC            : 3;
		unsigned int TXOK           : 1;
		unsigned int RXOK           : 1;
		unsigned int ALERT          : 1;
		/* const */ unsigned int EWRN           : 1;
		/* const */ unsigned int BOFF           : 1;
		unsigned int LLE            : 1;
		unsigned int LOE            : 1;
		/* const */ unsigned int SUSACK         : 1;
		unsigned int                : 21;
	} B;
	int I;
	unsigned int U;

} CAN_NSR1_type;
#define CAN_NSR1	(*( CAN_NSR1_type *) 0xF0004304u)	/* Node 1 Status Register */

typedef volatile union
{
	struct
	{ 
		unsigned int ALINP          : 4;
		unsigned int LECINP         : 4;
		unsigned int TRINP          : 4;
		unsigned int CFCINP         : 4;
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} CAN_NIPR1_type;
#define CAN_NIPR1	(*( CAN_NIPR1_type *) 0xF0004308u)	/* Node 1 Interrupt Pointer Register */

typedef volatile union
{
	struct
	{ 
		unsigned int RXSEL          : 3;
		unsigned int                : 5;
		unsigned int LBM            : 1;
		unsigned int                : 23;
	} B;
	int I;
	unsigned int U;

} CAN_NPCR1_type;
#define CAN_NPCR1	(*( CAN_NPCR1_type *) 0xF000430Cu)	/* Node 1 Port Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int BRP            : 6;
		unsigned int SJW            : 2;
		unsigned int TSEG1          : 4;
		unsigned int TSEG2          : 3;
		unsigned int DIV8           : 1;
		unsigned int FTX            : 1;
		unsigned int                : 15;
	} B;
	int I;
	unsigned int U;

} CAN_NBTR1_type;
#define CAN_NBTR1	(*( CAN_NBTR1_type *) 0xF0004310u)	/* Node 1 Bit Timing Register */

typedef volatile union
{
	struct
	{ 
		unsigned int REC            : 8;
		unsigned int TEC            : 8;
		unsigned int EWRNLVL        : 8;
		/* const */ unsigned int LETD           : 1;
		/* const */ unsigned int LEINC          : 1;
		/* const */ unsigned int                : 6;
	} B;
	int I;
	unsigned int U;

} CAN_NECNT1_type;
#define CAN_NECNT1	(*( CAN_NECNT1_type *) 0xF0004314u)	/* Node 1 Error Counter Register */

typedef volatile union
{
	struct
	{ 
		unsigned int CFC            : 16;
		unsigned int CFSEL          : 3;
		unsigned int CFMOD          : 2;
		unsigned int                : 1;
		unsigned int CFCIE          : 1;
		unsigned int CFCOV          : 1;
		unsigned int                : 8;
	} B;
	int I;
	unsigned int U;

} CAN_NFCR1_type;
#define CAN_NFCR1	(*( CAN_NFCR1_type *) 0xF0004318u)	/* Node 1 Frame Counter Register */

typedef volatile union
{
	struct
	{ 
		unsigned int INIT           : 1;
		unsigned int TRIE           : 1;
		unsigned int LECIE          : 1;
		unsigned int ALIE           : 1;
		unsigned int CANDIS         : 1;
		unsigned int                : 1;
		unsigned int CCE            : 1;
		unsigned int CALM           : 1;
		unsigned int SUSEN          : 1;
		unsigned int                : 23;
	} B;
	int I;
	unsigned int U;

} CAN_NCR2_type;
#define CAN_NCR2	(*( CAN_NCR2_type *) 0xF0004400u)	/* Node 2 Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int LEC            : 3;
		unsigned int TXOK           : 1;
		unsigned int RXOK           : 1;
		unsigned int ALERT          : 1;
		/* const */ unsigned int EWRN           : 1;
		/* const */ unsigned int BOFF           : 1;
		unsigned int LLE            : 1;
		unsigned int LOE            : 1;
		/* const */ unsigned int SUSACK         : 1;
		unsigned int                : 21;
	} B;
	int I;
	unsigned int U;

} CAN_NSR2_type;
#define CAN_NSR2	(*( CAN_NSR2_type *) 0xF0004404u)	/* Node 2 Status Register */

typedef volatile union
{
	struct
	{ 
		unsigned int ALINP          : 4;
		unsigned int LECINP         : 4;
		unsigned int TRINP          : 4;
		unsigned int CFCINP         : 4;
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} CAN_NIPR2_type;
#define CAN_NIPR2	(*( CAN_NIPR2_type *) 0xF0004408u)	/* Node 2 Interrupt Pointer Register */

typedef volatile union
{
	struct
	{ 
		unsigned int RXSEL          : 3;
		unsigned int                : 5;
		unsigned int LBM            : 1;
		unsigned int                : 23;
	} B;
	int I;
	unsigned int U;

} CAN_NPCR2_type;
#define CAN_NPCR2	(*( CAN_NPCR2_type *) 0xF000440Cu)	/* Node 2 Port Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int BRP            : 6;
		unsigned int SJW            : 2;
		unsigned int TSEG1          : 4;
		unsigned int TSEG2          : 3;
		unsigned int DIV8           : 1;
		unsigned int FTX            : 1;
		unsigned int                : 15;
	} B;
	int I;
	unsigned int U;

} CAN_NBTR2_type;
#define CAN_NBTR2	(*( CAN_NBTR2_type *) 0xF0004410u)	/* Node 2 Bit Timing Register */

typedef volatile union
{
	struct
	{ 
		unsigned int REC            : 8;
		unsigned int TEC            : 8;
		unsigned int EWRNLVL        : 8;
		/* const */ unsigned int LETD           : 1;
		/* const */ unsigned int LEINC          : 1;
		/* const */ unsigned int                : 6;
	} B;
	int I;
	unsigned int U;

} CAN_NECNT2_type;
#define CAN_NECNT2	(*( CAN_NECNT2_type *) 0xF0004414u)	/* Node 2 Error Counter Register */

typedef volatile union
{
	struct
	{ 
		unsigned int CFC            : 16;
		unsigned int CFSEL          : 3;
		unsigned int CFMOD          : 2;
		unsigned int                : 1;
		unsigned int CFCIE          : 1;
		unsigned int CFCOV          : 1;
		unsigned int                : 8;
	} B;
	int I;
	unsigned int U;

} CAN_NFCR2_type;
#define CAN_NFCR2	(*( CAN_NFCR2_type *) 0xF0004418u)	/* Node 2 Frame Counter Register */

typedef volatile union
{
	struct
	{ 
		unsigned int INIT           : 1;
		unsigned int TRIE           : 1;
		unsigned int LECIE          : 1;
		unsigned int ALIE           : 1;
		unsigned int CANDIS         : 1;
		unsigned int                : 1;
		unsigned int CCE            : 1;
		unsigned int CALM           : 1;
		unsigned int SUSEN          : 1;
		unsigned int                : 23;
	} B;
	int I;
	unsigned int U;

} CAN_NCR3_type;
#define CAN_NCR3	(*( CAN_NCR3_type *) 0xF0004500u)	/* Node 3 Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int LEC            : 3;
		unsigned int TXOK           : 1;
		unsigned int RXOK           : 1;
		unsigned int ALERT          : 1;
		/* const */ unsigned int EWRN           : 1;
		/* const */ unsigned int BOFF           : 1;
		unsigned int LLE            : 1;
		unsigned int LOE            : 1;
		/* const */ unsigned int SUSACK         : 1;
		unsigned int                : 21;
	} B;
	int I;
	unsigned int U;

} CAN_NSR3_type;
#define CAN_NSR3	(*( CAN_NSR3_type *) 0xF0004504u)	/* Node 3 Status Register */

typedef volatile union
{
	struct
	{ 
		unsigned int ALINP          : 4;
		unsigned int LECINP         : 4;
		unsigned int TRINP          : 4;
		unsigned int CFCINP         : 4;
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} CAN_NIPR3_type;
#define CAN_NIPR3	(*( CAN_NIPR3_type *) 0xF0004508u)	/* Node 3 Interrupt Pointer Register */

typedef volatile union
{
	struct
	{ 
		unsigned int RXSEL          : 3;
		unsigned int                : 5;
		unsigned int LBM            : 1;
		unsigned int                : 23;
	} B;
	int I;
	unsigned int U;

} CAN_NPCR3_type;
#define CAN_NPCR3	(*( CAN_NPCR3_type *) 0xF000450Cu)	/* Node 3 Port Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int BRP            : 6;
		unsigned int SJW            : 2;
		unsigned int TSEG1          : 4;
		unsigned int TSEG2          : 3;
		unsigned int DIV8           : 1;
		unsigned int FTX            : 1;
		unsigned int                : 15;
	} B;
	int I;
	unsigned int U;

} CAN_NBTR3_type;
#define CAN_NBTR3	(*( CAN_NBTR3_type *) 0xF0004510u)	/* Node 3 Bit Timing Register */

typedef volatile union
{
	struct
	{ 
		unsigned int REC            : 8;
		unsigned int TEC            : 8;
		unsigned int EWRNLVL        : 8;
		/* const */ unsigned int LETD           : 1;
		/* const */ unsigned int LEINC          : 1;
		/* const */ unsigned int                : 6;
	} B;
	int I;
	unsigned int U;

} CAN_NECNT3_type;
#define CAN_NECNT3	(*( CAN_NECNT3_type *) 0xF0004514u)	/* Node 3 Error Counter Register */

typedef volatile union
{
	struct
	{ 
		unsigned int CFC            : 16;
		unsigned int CFSEL          : 3;
		unsigned int CFMOD          : 2;
		unsigned int                : 1;
		unsigned int CFCIE          : 1;
		unsigned int CFCOV          : 1;
		unsigned int                : 8;
	} B;
	int I;
	unsigned int U;

} CAN_NFCR3_type;
#define CAN_NFCR3	(*( CAN_NFCR3_type *) 0xF0004518u)	/* Node 3 Frame Counter Register */

typedef volatile union
{
	struct
	{ 
		unsigned int MMC            : 4;
		unsigned int                : 4;
		unsigned int GDFS           : 1;
		unsigned int IDC            : 1;
		unsigned int DLCC           : 1;
		unsigned int DATC           : 1;
		unsigned int                : 4;
		unsigned int RXIE           : 1;
		unsigned int TXIE           : 1;
		unsigned int OVIE           : 1;
		unsigned int                : 1;
		unsigned int FRREN          : 1;
		unsigned int RMM            : 1;
		unsigned int SDT            : 1;
		unsigned int STT            : 1;
		unsigned int DLC            : 4;
		unsigned int MSC            : 4;
	} B;
	int I;
	unsigned int U;

} CAN_MOFCR_type;
#define CAN_MOFCR0	(*( CAN_MOFCR_type *) 0xF0004600u)	/* Message Object 0 Function Control Register */
#define CAN_MOFCR1	(*( CAN_MOFCR_type *) 0xF0004620u)	/* Message Object 1 Function Control Register */
#define CAN_MOFCR2	(*( CAN_MOFCR_type *) 0xF0004640u)	/* Message Object 2 Function Control Register */
#define CAN_MOFCR3	(*( CAN_MOFCR_type *) 0xF0004660u)	/* Message Object 3 Function Control Register */
#define CAN_MOFCR4	(*( CAN_MOFCR_type *) 0xF0004680u)	/* Message Object 4 Function Control Register */
#define CAN_MOFCR5	(*( CAN_MOFCR_type *) 0xF00046A0u)	/* Message Object 5 Function Control Register */
#define CAN_MOFCR6	(*( CAN_MOFCR_type *) 0xF00046C0u)	/* Message Object 6 Function Control Register */
#define CAN_MOFCR7	(*( CAN_MOFCR_type *) 0xF00046E0u)	/* Message Object 7 Function Control Register */
#define CAN_MOFCR8	(*( CAN_MOFCR_type *) 0xF0004700u)	/* Message Object 8 Function Control Register */
#define CAN_MOFCR9	(*( CAN_MOFCR_type *) 0xF0004720u)	/* Message Object 9 Function Control Register */
#define CAN_MOFCR10	(*( CAN_MOFCR_type *) 0xF0004740u)	/* Message Object 10 Function Control Register */
#define CAN_MOFCR11	(*( CAN_MOFCR_type *) 0xF0004760u)	/* Message Object 11 Function Control Register */
#define CAN_MOFCR12	(*( CAN_MOFCR_type *) 0xF0004780u)	/* Message Object 12 Function Control Register */
#define CAN_MOFCR13	(*( CAN_MOFCR_type *) 0xF00047A0u)	/* Message Object 13 Function Control Register */
#define CAN_MOFCR14	(*( CAN_MOFCR_type *) 0xF00047C0u)	/* Message Object 14 Function Control Register */
#define CAN_MOFCR15	(*( CAN_MOFCR_type *) 0xF00047E0u)	/* Message Object 15 Function Control Register */
#define CAN_MOFCR16	(*( CAN_MOFCR_type *) 0xF0004800u)	/* Message Object 16 Function Control Register */
#define CAN_MOFCR17	(*( CAN_MOFCR_type *) 0xF0004820u)	/* Message Object 17 Function Control Register */
#define CAN_MOFCR18	(*( CAN_MOFCR_type *) 0xF0004840u)	/* Message Object 18 Function Control Register */
#define CAN_MOFCR19	(*( CAN_MOFCR_type *) 0xF0004860u)	/* Message Object 19 Function Control Register */
#define CAN_MOFCR20	(*( CAN_MOFCR_type *) 0xF0004880u)	/* Message Object 20 Function Control Register */
#define CAN_MOFCR21	(*( CAN_MOFCR_type *) 0xF00048A0u)	/* Message Object 21 Function Control Register */
#define CAN_MOFCR22	(*( CAN_MOFCR_type *) 0xF00048C0u)	/* Message Object 22 Function Control Register */
#define CAN_MOFCR23	(*( CAN_MOFCR_type *) 0xF00048E0u)	/* Message Object 23 Function Control Register */
#define CAN_MOFCR24	(*( CAN_MOFCR_type *) 0xF0004900u)	/* Message Object 24 Function Control Register */
#define CAN_MOFCR25	(*( CAN_MOFCR_type *) 0xF0004920u)	/* Message Object 25 Function Control Register */
#define CAN_MOFCR26	(*( CAN_MOFCR_type *) 0xF0004940u)	/* Message Object 26 Function Control Register */
#define CAN_MOFCR27	(*( CAN_MOFCR_type *) 0xF0004960u)	/* Message Object 27 Function Control Register */
#define CAN_MOFCR28	(*( CAN_MOFCR_type *) 0xF0004980u)	/* Message Object 28 Function Control Register */
#define CAN_MOFCR29	(*( CAN_MOFCR_type *) 0xF00049A0u)	/* Message Object 29 Function Control Register */
#define CAN_MOFCR30	(*( CAN_MOFCR_type *) 0xF00049C0u)	/* Message Object 30 Function Control Register */
#define CAN_MOFCR31	(*( CAN_MOFCR_type *) 0xF00049E0u)	/* Message Object 31 Function Control Register */
#define CAN_MOFCR32	(*( CAN_MOFCR_type *) 0xF0004A00u)	/* Message Object 32 Function Control Register */
#define CAN_MOFCR33	(*( CAN_MOFCR_type *) 0xF0004A20u)	/* Message Object 33 Function Control Register */
#define CAN_MOFCR34	(*( CAN_MOFCR_type *) 0xF0004A40u)	/* Message Object 34 Function Control Register */
#define CAN_MOFCR35	(*( CAN_MOFCR_type *) 0xF0004A60u)	/* Message Object 35 Function Control Register */
#define CAN_MOFCR36	(*( CAN_MOFCR_type *) 0xF0004A80u)	/* Message Object 36 Function Control Register */
#define CAN_MOFCR37	(*( CAN_MOFCR_type *) 0xF0004AA0u)	/* Message Object 37 Function Control Register */
#define CAN_MOFCR38	(*( CAN_MOFCR_type *) 0xF0004AC0u)	/* Message Object 38 Function Control Register */
#define CAN_MOFCR39	(*( CAN_MOFCR_type *) 0xF0004AE0u)	/* Message Object 39 Function Control Register */
#define CAN_MOFCR40	(*( CAN_MOFCR_type *) 0xF0004B00u)	/* Message Object 40 Function Control Register */
#define CAN_MOFCR41	(*( CAN_MOFCR_type *) 0xF0004B20u)	/* Message Object 41 Function Control Register */
#define CAN_MOFCR42	(*( CAN_MOFCR_type *) 0xF0004B40u)	/* Message Object 42 Function Control Register */
#define CAN_MOFCR43	(*( CAN_MOFCR_type *) 0xF0004B60u)	/* Message Object 43 Function Control Register */
#define CAN_MOFCR44	(*( CAN_MOFCR_type *) 0xF0004B80u)	/* Message Object 44 Function Control Register */
#define CAN_MOFCR45	(*( CAN_MOFCR_type *) 0xF0004BA0u)	/* Message Object 45 Function Control Register */
#define CAN_MOFCR46	(*( CAN_MOFCR_type *) 0xF0004BC0u)	/* Message Object 46 Function Control Register */
#define CAN_MOFCR47	(*( CAN_MOFCR_type *) 0xF0004BE0u)	/* Message Object 47 Function Control Register */
#define CAN_MOFCR48	(*( CAN_MOFCR_type *) 0xF0004C00u)	/* Message Object 48 Function Control Register */
#define CAN_MOFCR49	(*( CAN_MOFCR_type *) 0xF0004C20u)	/* Message Object 49 Function Control Register */
#define CAN_MOFCR50	(*( CAN_MOFCR_type *) 0xF0004C40u)	/* Message Object 50 Function Control Register */
#define CAN_MOFCR51	(*( CAN_MOFCR_type *) 0xF0004C60u)	/* Message Object 51 Function Control Register */
#define CAN_MOFCR52	(*( CAN_MOFCR_type *) 0xF0004C80u)	/* Message Object 52 Function Control Register */
#define CAN_MOFCR53	(*( CAN_MOFCR_type *) 0xF0004CA0u)	/* Message Object 53 Function Control Register */
#define CAN_MOFCR54	(*( CAN_MOFCR_type *) 0xF0004CC0u)	/* Message Object 54 Function Control Register */
#define CAN_MOFCR55	(*( CAN_MOFCR_type *) 0xF0004CE0u)	/* Message Object 55 Function Control Register */
#define CAN_MOFCR56	(*( CAN_MOFCR_type *) 0xF0004D00u)	/* Message Object 56 Function Control Register */
#define CAN_MOFCR57	(*( CAN_MOFCR_type *) 0xF0004D20u)	/* Message Object 57 Function Control Register */
#define CAN_MOFCR58	(*( CAN_MOFCR_type *) 0xF0004D40u)	/* Message Object 58 Function Control Register */
#define CAN_MOFCR59	(*( CAN_MOFCR_type *) 0xF0004D60u)	/* Message Object 59 Function Control Register */
#define CAN_MOFCR60	(*( CAN_MOFCR_type *) 0xF0004D80u)	/* Message Object 60 Function Control Register */
#define CAN_MOFCR61	(*( CAN_MOFCR_type *) 0xF0004DA0u)	/* Message Object 61 Function Control Register */
#define CAN_MOFCR62	(*( CAN_MOFCR_type *) 0xF0004DC0u)	/* Message Object 62 Function Control Register */
#define CAN_MOFCR63	(*( CAN_MOFCR_type *) 0xF0004DE0u)	/* Message Object 63 Function Control Register */
#define CAN_MOFCR64	(*( CAN_MOFCR_type *) 0xF0004E00u)	/* Message Object 64 Function Control Register */
#define CAN_MOFCR65	(*( CAN_MOFCR_type *) 0xF0004E20u)	/* Message Object 65 Function Control Register */
#define CAN_MOFCR66	(*( CAN_MOFCR_type *) 0xF0004E40u)	/* Message Object 66 Function Control Register */
#define CAN_MOFCR67	(*( CAN_MOFCR_type *) 0xF0004E60u)	/* Message Object 67 Function Control Register */
#define CAN_MOFCR68	(*( CAN_MOFCR_type *) 0xF0004E80u)	/* Message Object 68 Function Control Register */
#define CAN_MOFCR69	(*( CAN_MOFCR_type *) 0xF0004EA0u)	/* Message Object 69 Function Control Register */
#define CAN_MOFCR70	(*( CAN_MOFCR_type *) 0xF0004EC0u)	/* Message Object 70 Function Control Register */
#define CAN_MOFCR71	(*( CAN_MOFCR_type *) 0xF0004EE0u)	/* Message Object 71 Function Control Register */
#define CAN_MOFCR72	(*( CAN_MOFCR_type *) 0xF0004F00u)	/* Message Object 72 Function Control Register */
#define CAN_MOFCR73	(*( CAN_MOFCR_type *) 0xF0004F20u)	/* Message Object 73 Function Control Register */
#define CAN_MOFCR74	(*( CAN_MOFCR_type *) 0xF0004F40u)	/* Message Object 74 Function Control Register */
#define CAN_MOFCR75	(*( CAN_MOFCR_type *) 0xF0004F60u)	/* Message Object 75 Function Control Register */
#define CAN_MOFCR76	(*( CAN_MOFCR_type *) 0xF0004F80u)	/* Message Object 76 Function Control Register */
#define CAN_MOFCR77	(*( CAN_MOFCR_type *) 0xF0004FA0u)	/* Message Object 77 Function Control Register */
#define CAN_MOFCR78	(*( CAN_MOFCR_type *) 0xF0004FC0u)	/* Message Object 78 Function Control Register */
#define CAN_MOFCR79	(*( CAN_MOFCR_type *) 0xF0004FE0u)	/* Message Object 79 Function Control Register */
#define CAN_MOFCR80	(*( CAN_MOFCR_type *) 0xF0005000u)	/* Message Object 80 Function Control Register */
#define CAN_MOFCR81	(*( CAN_MOFCR_type *) 0xF0005020u)	/* Message Object 81 Function Control Register */
#define CAN_MOFCR82	(*( CAN_MOFCR_type *) 0xF0005040u)	/* Message Object 82 Function Control Register */
#define CAN_MOFCR83	(*( CAN_MOFCR_type *) 0xF0005060u)	/* Message Object 83 Function Control Register */
#define CAN_MOFCR84	(*( CAN_MOFCR_type *) 0xF0005080u)	/* Message Object 84 Function Control Register */
#define CAN_MOFCR85	(*( CAN_MOFCR_type *) 0xF00050A0u)	/* Message Object 85 Function Control Register */
#define CAN_MOFCR86	(*( CAN_MOFCR_type *) 0xF00050C0u)	/* Message Object 86 Function Control Register */
#define CAN_MOFCR87	(*( CAN_MOFCR_type *) 0xF00050E0u)	/* Message Object 87 Function Control Register */
#define CAN_MOFCR88	(*( CAN_MOFCR_type *) 0xF0005100u)	/* Message Object 88 Function Control Register */
#define CAN_MOFCR89	(*( CAN_MOFCR_type *) 0xF0005120u)	/* Message Object 89 Function Control Register */
#define CAN_MOFCR90	(*( CAN_MOFCR_type *) 0xF0005140u)	/* Message Object 90 Function Control Register */
#define CAN_MOFCR91	(*( CAN_MOFCR_type *) 0xF0005160u)	/* Message Object 91 Function Control Register */
#define CAN_MOFCR92	(*( CAN_MOFCR_type *) 0xF0005180u)	/* Message Object 92 Function Control Register */
#define CAN_MOFCR93	(*( CAN_MOFCR_type *) 0xF00051A0u)	/* Message Object 93 Function Control Register */
#define CAN_MOFCR94	(*( CAN_MOFCR_type *) 0xF00051C0u)	/* Message Object 94 Function Control Register */
#define CAN_MOFCR95	(*( CAN_MOFCR_type *) 0xF00051E0u)	/* Message Object 95 Function Control Register */
#define CAN_MOFCR96	(*( CAN_MOFCR_type *) 0xF0005200u)	/* Message Object 96 Function Control Register */
#define CAN_MOFCR97	(*( CAN_MOFCR_type *) 0xF0005220u)	/* Message Object 97 Function Control Register */
#define CAN_MOFCR98	(*( CAN_MOFCR_type *) 0xF0005240u)	/* Message Object 98 Function Control Register */
#define CAN_MOFCR99	(*( CAN_MOFCR_type *) 0xF0005260u)	/* Message Object 99 Function Control Register */
#define CAN_MOFCR100	(*( CAN_MOFCR_type *) 0xF0005280u)	/* Message Object 100 Function Control Register */
#define CAN_MOFCR101	(*( CAN_MOFCR_type *) 0xF00052A0u)	/* Message Object 101 Function Control Register */
#define CAN_MOFCR102	(*( CAN_MOFCR_type *) 0xF00052C0u)	/* Message Object 102 Function Control Register */
#define CAN_MOFCR103	(*( CAN_MOFCR_type *) 0xF00052E0u)	/* Message Object 103 Function Control Register */
#define CAN_MOFCR104	(*( CAN_MOFCR_type *) 0xF0005300u)	/* Message Object 104 Function Control Register */
#define CAN_MOFCR105	(*( CAN_MOFCR_type *) 0xF0005320u)	/* Message Object 105 Function Control Register */
#define CAN_MOFCR106	(*( CAN_MOFCR_type *) 0xF0005340u)	/* Message Object 106 Function Control Register */
#define CAN_MOFCR107	(*( CAN_MOFCR_type *) 0xF0005360u)	/* Message Object 107 Function Control Register */
#define CAN_MOFCR108	(*( CAN_MOFCR_type *) 0xF0005380u)	/* Message Object 108 Function Control Register */
#define CAN_MOFCR109	(*( CAN_MOFCR_type *) 0xF00053A0u)	/* Message Object 109 Function Control Register */
#define CAN_MOFCR110	(*( CAN_MOFCR_type *) 0xF00053C0u)	/* Message Object 110 Function Control Register */
#define CAN_MOFCR111	(*( CAN_MOFCR_type *) 0xF00053E0u)	/* Message Object 111 Function Control Register */
#define CAN_MOFCR112	(*( CAN_MOFCR_type *) 0xF0005400u)	/* Message Object 112 Function Control Register */
#define CAN_MOFCR113	(*( CAN_MOFCR_type *) 0xF0005420u)	/* Message Object 113 Function Control Register */
#define CAN_MOFCR114	(*( CAN_MOFCR_type *) 0xF0005440u)	/* Message Object 114 Function Control Register */
#define CAN_MOFCR115	(*( CAN_MOFCR_type *) 0xF0005460u)	/* Message Object 115 Function Control Register */
#define CAN_MOFCR116	(*( CAN_MOFCR_type *) 0xF0005480u)	/* Message Object 116 Function Control Register */
#define CAN_MOFCR117	(*( CAN_MOFCR_type *) 0xF00054A0u)	/* Message Object 117 Function Control Register */
#define CAN_MOFCR118	(*( CAN_MOFCR_type *) 0xF00054C0u)	/* Message Object 118 Function Control Register */
#define CAN_MOFCR119	(*( CAN_MOFCR_type *) 0xF00054E0u)	/* Message Object 119 Function Control Register */
#define CAN_MOFCR120	(*( CAN_MOFCR_type *) 0xF0005500u)	/* Message Object 120 Function Control Register */
#define CAN_MOFCR121	(*( CAN_MOFCR_type *) 0xF0005520u)	/* Message Object 121 Function Control Register */
#define CAN_MOFCR122	(*( CAN_MOFCR_type *) 0xF0005540u)	/* Message Object 122 Function Control Register */
#define CAN_MOFCR123	(*( CAN_MOFCR_type *) 0xF0005560u)	/* Message Object 123 Function Control Register */
#define CAN_MOFCR124	(*( CAN_MOFCR_type *) 0xF0005580u)	/* Message Object 124 Function Control Register */
#define CAN_MOFCR125	(*( CAN_MOFCR_type *) 0xF00055A0u)	/* Message Object 125 Function Control Register */
#define CAN_MOFCR126	(*( CAN_MOFCR_type *) 0xF00055C0u)	/* Message Object 126 Function Control Register */
#define CAN_MOFCR127	(*( CAN_MOFCR_type *) 0xF00055E0u)	/* Message Object 127 Function Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int BOT            : 8;
		unsigned int TOP            : 8;
		unsigned int CUR            : 8;
		unsigned int SEL            : 8;
	} B;
	int I;
	unsigned int U;

} CAN_MOFGPR_type;
#define CAN_MOFGPR0	(*( CAN_MOFGPR_type *) 0xF0004604u)	/* Message Object 0 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR1	(*( CAN_MOFGPR_type *) 0xF0004624u)	/* Message Object 1 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR2	(*( CAN_MOFGPR_type *) 0xF0004644u)	/* Message Object 2 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR3	(*( CAN_MOFGPR_type *) 0xF0004664u)	/* Message Object 3 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR4	(*( CAN_MOFGPR_type *) 0xF0004684u)	/* Message Object 4 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR5	(*( CAN_MOFGPR_type *) 0xF00046A4u)	/* Message Object 5 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR6	(*( CAN_MOFGPR_type *) 0xF00046C4u)	/* Message Object 6 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR7	(*( CAN_MOFGPR_type *) 0xF00046E4u)	/* Message Object 7 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR8	(*( CAN_MOFGPR_type *) 0xF0004704u)	/* Message Object 8 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR9	(*( CAN_MOFGPR_type *) 0xF0004724u)	/* Message Object 9 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR10	(*( CAN_MOFGPR_type *) 0xF0004744u)	/* Message Object 10 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR11	(*( CAN_MOFGPR_type *) 0xF0004764u)	/* Message Object 11 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR12	(*( CAN_MOFGPR_type *) 0xF0004784u)	/* Message Object 12 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR13	(*( CAN_MOFGPR_type *) 0xF00047A4u)	/* Message Object 13 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR14	(*( CAN_MOFGPR_type *) 0xF00047C4u)	/* Message Object 14 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR15	(*( CAN_MOFGPR_type *) 0xF00047E4u)	/* Message Object 15 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR16	(*( CAN_MOFGPR_type *) 0xF0004804u)	/* Message Object 16 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR17	(*( CAN_MOFGPR_type *) 0xF0004824u)	/* Message Object 17 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR18	(*( CAN_MOFGPR_type *) 0xF0004844u)	/* Message Object 18 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR19	(*( CAN_MOFGPR_type *) 0xF0004864u)	/* Message Object 19 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR20	(*( CAN_MOFGPR_type *) 0xF0004884u)	/* Message Object 20 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR21	(*( CAN_MOFGPR_type *) 0xF00048A4u)	/* Message Object 21 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR22	(*( CAN_MOFGPR_type *) 0xF00048C4u)	/* Message Object 22 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR23	(*( CAN_MOFGPR_type *) 0xF00048E4u)	/* Message Object 23 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR24	(*( CAN_MOFGPR_type *) 0xF0004904u)	/* Message Object 24 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR25	(*( CAN_MOFGPR_type *) 0xF0004924u)	/* Message Object 25 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR26	(*( CAN_MOFGPR_type *) 0xF0004944u)	/* Message Object 26 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR27	(*( CAN_MOFGPR_type *) 0xF0004964u)	/* Message Object 27 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR28	(*( CAN_MOFGPR_type *) 0xF0004984u)	/* Message Object 28 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR29	(*( CAN_MOFGPR_type *) 0xF00049A4u)	/* Message Object 29 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR30	(*( CAN_MOFGPR_type *) 0xF00049C4u)	/* Message Object 30 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR31	(*( CAN_MOFGPR_type *) 0xF00049E4u)	/* Message Object 31 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR32	(*( CAN_MOFGPR_type *) 0xF0004A04u)	/* Message Object 32 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR33	(*( CAN_MOFGPR_type *) 0xF0004A24u)	/* Message Object 33 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR34	(*( CAN_MOFGPR_type *) 0xF0004A44u)	/* Message Object 34 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR35	(*( CAN_MOFGPR_type *) 0xF0004A64u)	/* Message Object 35 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR36	(*( CAN_MOFGPR_type *) 0xF0004A84u)	/* Message Object 36 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR37	(*( CAN_MOFGPR_type *) 0xF0004AA4u)	/* Message Object 37 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR38	(*( CAN_MOFGPR_type *) 0xF0004AC4u)	/* Message Object 38 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR39	(*( CAN_MOFGPR_type *) 0xF0004AE4u)	/* Message Object 39 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR40	(*( CAN_MOFGPR_type *) 0xF0004B04u)	/* Message Object 40 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR41	(*( CAN_MOFGPR_type *) 0xF0004B24u)	/* Message Object 41 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR42	(*( CAN_MOFGPR_type *) 0xF0004B44u)	/* Message Object 42 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR43	(*( CAN_MOFGPR_type *) 0xF0004B64u)	/* Message Object 43 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR44	(*( CAN_MOFGPR_type *) 0xF0004B84u)	/* Message Object 44 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR45	(*( CAN_MOFGPR_type *) 0xF0004BA4u)	/* Message Object 45 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR46	(*( CAN_MOFGPR_type *) 0xF0004BC4u)	/* Message Object 46 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR47	(*( CAN_MOFGPR_type *) 0xF0004BE4u)	/* Message Object 47 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR48	(*( CAN_MOFGPR_type *) 0xF0004C04u)	/* Message Object 48 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR49	(*( CAN_MOFGPR_type *) 0xF0004C24u)	/* Message Object 49 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR50	(*( CAN_MOFGPR_type *) 0xF0004C44u)	/* Message Object 50 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR51	(*( CAN_MOFGPR_type *) 0xF0004C64u)	/* Message Object 51 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR52	(*( CAN_MOFGPR_type *) 0xF0004C84u)	/* Message Object 52 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR53	(*( CAN_MOFGPR_type *) 0xF0004CA4u)	/* Message Object 53 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR54	(*( CAN_MOFGPR_type *) 0xF0004CC4u)	/* Message Object 54 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR55	(*( CAN_MOFGPR_type *) 0xF0004CE4u)	/* Message Object 55 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR56	(*( CAN_MOFGPR_type *) 0xF0004D04u)	/* Message Object 56 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR57	(*( CAN_MOFGPR_type *) 0xF0004D24u)	/* Message Object 57 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR58	(*( CAN_MOFGPR_type *) 0xF0004D44u)	/* Message Object 58 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR59	(*( CAN_MOFGPR_type *) 0xF0004D64u)	/* Message Object 59 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR60	(*( CAN_MOFGPR_type *) 0xF0004D84u)	/* Message Object 60 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR61	(*( CAN_MOFGPR_type *) 0xF0004DA4u)	/* Message Object 61 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR62	(*( CAN_MOFGPR_type *) 0xF0004DC4u)	/* Message Object 62 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR63	(*( CAN_MOFGPR_type *) 0xF0004DE4u)	/* Message Object 63 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR64	(*( CAN_MOFGPR_type *) 0xF0004E04u)	/* Message Object 64 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR65	(*( CAN_MOFGPR_type *) 0xF0004E24u)	/* Message Object 65 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR66	(*( CAN_MOFGPR_type *) 0xF0004E44u)	/* Message Object 66 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR67	(*( CAN_MOFGPR_type *) 0xF0004E64u)	/* Message Object 67 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR68	(*( CAN_MOFGPR_type *) 0xF0004E84u)	/* Message Object 68 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR69	(*( CAN_MOFGPR_type *) 0xF0004EA4u)	/* Message Object 69 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR70	(*( CAN_MOFGPR_type *) 0xF0004EC4u)	/* Message Object 70 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR71	(*( CAN_MOFGPR_type *) 0xF0004EE4u)	/* Message Object 71 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR72	(*( CAN_MOFGPR_type *) 0xF0004F04u)	/* Message Object 72 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR73	(*( CAN_MOFGPR_type *) 0xF0004F24u)	/* Message Object 73 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR74	(*( CAN_MOFGPR_type *) 0xF0004F44u)	/* Message Object 74 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR75	(*( CAN_MOFGPR_type *) 0xF0004F64u)	/* Message Object 75 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR76	(*( CAN_MOFGPR_type *) 0xF0004F84u)	/* Message Object 76 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR77	(*( CAN_MOFGPR_type *) 0xF0004FA4u)	/* Message Object 77 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR78	(*( CAN_MOFGPR_type *) 0xF0004FC4u)	/* Message Object 78 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR79	(*( CAN_MOFGPR_type *) 0xF0004FE4u)	/* Message Object 79 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR80	(*( CAN_MOFGPR_type *) 0xF0005004u)	/* Message Object 80 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR81	(*( CAN_MOFGPR_type *) 0xF0005024u)	/* Message Object 81 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR82	(*( CAN_MOFGPR_type *) 0xF0005044u)	/* Message Object 82 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR83	(*( CAN_MOFGPR_type *) 0xF0005064u)	/* Message Object 83 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR84	(*( CAN_MOFGPR_type *) 0xF0005084u)	/* Message Object 84 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR85	(*( CAN_MOFGPR_type *) 0xF00050A4u)	/* Message Object 85 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR86	(*( CAN_MOFGPR_type *) 0xF00050C4u)	/* Message Object 86 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR87	(*( CAN_MOFGPR_type *) 0xF00050E4u)	/* Message Object 87 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR88	(*( CAN_MOFGPR_type *) 0xF0005104u)	/* Message Object 88 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR89	(*( CAN_MOFGPR_type *) 0xF0005124u)	/* Message Object 89 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR90	(*( CAN_MOFGPR_type *) 0xF0005144u)	/* Message Object 90 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR91	(*( CAN_MOFGPR_type *) 0xF0005164u)	/* Message Object 91 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR92	(*( CAN_MOFGPR_type *) 0xF0005184u)	/* Message Object 92 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR93	(*( CAN_MOFGPR_type *) 0xF00051A4u)	/* Message Object 93 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR94	(*( CAN_MOFGPR_type *) 0xF00051C4u)	/* Message Object 94 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR95	(*( CAN_MOFGPR_type *) 0xF00051E4u)	/* Message Object 95 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR96	(*( CAN_MOFGPR_type *) 0xF0005204u)	/* Message Object 96 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR97	(*( CAN_MOFGPR_type *) 0xF0005224u)	/* Message Object 97 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR98	(*( CAN_MOFGPR_type *) 0xF0005244u)	/* Message Object 98 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR99	(*( CAN_MOFGPR_type *) 0xF0005264u)	/* Message Object 99 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR100	(*( CAN_MOFGPR_type *) 0xF0005284u)	/* Message Object 100 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR101	(*( CAN_MOFGPR_type *) 0xF00052A4u)	/* Message Object 101 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR102	(*( CAN_MOFGPR_type *) 0xF00052C4u)	/* Message Object 102 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR103	(*( CAN_MOFGPR_type *) 0xF00052E4u)	/* Message Object 103 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR104	(*( CAN_MOFGPR_type *) 0xF0005304u)	/* Message Object 104 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR105	(*( CAN_MOFGPR_type *) 0xF0005324u)	/* Message Object 105 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR106	(*( CAN_MOFGPR_type *) 0xF0005344u)	/* Message Object 106 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR107	(*( CAN_MOFGPR_type *) 0xF0005364u)	/* Message Object 107 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR108	(*( CAN_MOFGPR_type *) 0xF0005384u)	/* Message Object 108 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR109	(*( CAN_MOFGPR_type *) 0xF00053A4u)	/* Message Object 109 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR110	(*( CAN_MOFGPR_type *) 0xF00053C4u)	/* Message Object 110 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR111	(*( CAN_MOFGPR_type *) 0xF00053E4u)	/* Message Object 111 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR112	(*( CAN_MOFGPR_type *) 0xF0005404u)	/* Message Object 112 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR113	(*( CAN_MOFGPR_type *) 0xF0005424u)	/* Message Object 113 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR114	(*( CAN_MOFGPR_type *) 0xF0005444u)	/* Message Object 114 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR115	(*( CAN_MOFGPR_type *) 0xF0005464u)	/* Message Object 115 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR116	(*( CAN_MOFGPR_type *) 0xF0005484u)	/* Message Object 116 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR117	(*( CAN_MOFGPR_type *) 0xF00054A4u)	/* Message Object 117 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR118	(*( CAN_MOFGPR_type *) 0xF00054C4u)	/* Message Object 118 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR119	(*( CAN_MOFGPR_type *) 0xF00054E4u)	/* Message Object 119 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR120	(*( CAN_MOFGPR_type *) 0xF0005504u)	/* Message Object 120 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR121	(*( CAN_MOFGPR_type *) 0xF0005524u)	/* Message Object 121 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR122	(*( CAN_MOFGPR_type *) 0xF0005544u)	/* Message Object 122 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR123	(*( CAN_MOFGPR_type *) 0xF0005564u)	/* Message Object 123 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR124	(*( CAN_MOFGPR_type *) 0xF0005584u)	/* Message Object 124 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR125	(*( CAN_MOFGPR_type *) 0xF00055A4u)	/* Message Object 125 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR126	(*( CAN_MOFGPR_type *) 0xF00055C4u)	/* Message Object 126 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR127	(*( CAN_MOFGPR_type *) 0xF00055E4u)	/* Message Object 127 FIFO/Gateway Pointer Register */

typedef volatile union
{
	struct
	{ 
		unsigned int RXINP          : 4;
		unsigned int TXINP          : 4;
		unsigned int MPN            : 8;
		unsigned int CFCVAL         : 16;
	} B;
	int I;
	unsigned int U;

} CAN_MOIPR_type;
#define CAN_MOIPR0	(*( CAN_MOIPR_type *) 0xF0004608u)	/* Message Object 0 Interrupt Pointer Register */
#define CAN_MOIPR1	(*( CAN_MOIPR_type *) 0xF0004628u)	/* Message Object 1 Interrupt Pointer Register */
#define CAN_MOIPR2	(*( CAN_MOIPR_type *) 0xF0004648u)	/* Message Object 2 Interrupt Pointer Register */
#define CAN_MOIPR3	(*( CAN_MOIPR_type *) 0xF0004668u)	/* Message Object 3 Interrupt Pointer Register */
#define CAN_MOIPR4	(*( CAN_MOIPR_type *) 0xF0004688u)	/* Message Object 4 Interrupt Pointer Register */
#define CAN_MOIPR5	(*( CAN_MOIPR_type *) 0xF00046A8u)	/* Message Object 5 Interrupt Pointer Register */
#define CAN_MOIPR6	(*( CAN_MOIPR_type *) 0xF00046C8u)	/* Message Object 6 Interrupt Pointer Register */
#define CAN_MOIPR7	(*( CAN_MOIPR_type *) 0xF00046E8u)	/* Message Object 7 Interrupt Pointer Register */
#define CAN_MOIPR8	(*( CAN_MOIPR_type *) 0xF0004708u)	/* Message Object 8 Interrupt Pointer Register */
#define CAN_MOIPR9	(*( CAN_MOIPR_type *) 0xF0004728u)	/* Message Object 9 Interrupt Pointer Register */
#define CAN_MOIPR10	(*( CAN_MOIPR_type *) 0xF0004748u)	/* Message Object 10 Interrupt Pointer Register */
#define CAN_MOIPR11	(*( CAN_MOIPR_type *) 0xF0004768u)	/* Message Object 11 Interrupt Pointer Register */
#define CAN_MOIPR12	(*( CAN_MOIPR_type *) 0xF0004788u)	/* Message Object 12 Interrupt Pointer Register */
#define CAN_MOIPR13	(*( CAN_MOIPR_type *) 0xF00047A8u)	/* Message Object 13 Interrupt Pointer Register */
#define CAN_MOIPR14	(*( CAN_MOIPR_type *) 0xF00047C8u)	/* Message Object 14 Interrupt Pointer Register */
#define CAN_MOIPR15	(*( CAN_MOIPR_type *) 0xF00047E8u)	/* Message Object 15 Interrupt Pointer Register */
#define CAN_MOIPR16	(*( CAN_MOIPR_type *) 0xF0004808u)	/* Message Object 16 Interrupt Pointer Register */
#define CAN_MOIPR17	(*( CAN_MOIPR_type *) 0xF0004828u)	/* Message Object 17 Interrupt Pointer Register */
#define CAN_MOIPR18	(*( CAN_MOIPR_type *) 0xF0004848u)	/* Message Object 18 Interrupt Pointer Register */
#define CAN_MOIPR19	(*( CAN_MOIPR_type *) 0xF0004868u)	/* Message Object 19 Interrupt Pointer Register */
#define CAN_MOIPR20	(*( CAN_MOIPR_type *) 0xF0004888u)	/* Message Object 20 Interrupt Pointer Register */
#define CAN_MOIPR21	(*( CAN_MOIPR_type *) 0xF00048A8u)	/* Message Object 21 Interrupt Pointer Register */
#define CAN_MOIPR22	(*( CAN_MOIPR_type *) 0xF00048C8u)	/* Message Object 22 Interrupt Pointer Register */
#define CAN_MOIPR23	(*( CAN_MOIPR_type *) 0xF00048E8u)	/* Message Object 23 Interrupt Pointer Register */
#define CAN_MOIPR24	(*( CAN_MOIPR_type *) 0xF0004908u)	/* Message Object 24 Interrupt Pointer Register */
#define CAN_MOIPR25	(*( CAN_MOIPR_type *) 0xF0004928u)	/* Message Object 25 Interrupt Pointer Register */
#define CAN_MOIPR26	(*( CAN_MOIPR_type *) 0xF0004948u)	/* Message Object 26 Interrupt Pointer Register */
#define CAN_MOIPR27	(*( CAN_MOIPR_type *) 0xF0004968u)	/* Message Object 27 Interrupt Pointer Register */
#define CAN_MOIPR28	(*( CAN_MOIPR_type *) 0xF0004988u)	/* Message Object 28 Interrupt Pointer Register */
#define CAN_MOIPR29	(*( CAN_MOIPR_type *) 0xF00049A8u)	/* Message Object 29 Interrupt Pointer Register */
#define CAN_MOIPR30	(*( CAN_MOIPR_type *) 0xF00049C8u)	/* Message Object 30 Interrupt Pointer Register */
#define CAN_MOIPR31	(*( CAN_MOIPR_type *) 0xF00049E8u)	/* Message Object 31 Interrupt Pointer Register */
#define CAN_MOIPR32	(*( CAN_MOIPR_type *) 0xF0004A08u)	/* Message Object 32 Interrupt Pointer Register */
#define CAN_MOIPR33	(*( CAN_MOIPR_type *) 0xF0004A28u)	/* Message Object 33 Interrupt Pointer Register */
#define CAN_MOIPR34	(*( CAN_MOIPR_type *) 0xF0004A48u)	/* Message Object 34 Interrupt Pointer Register */
#define CAN_MOIPR35	(*( CAN_MOIPR_type *) 0xF0004A68u)	/* Message Object 35 Interrupt Pointer Register */
#define CAN_MOIPR36	(*( CAN_MOIPR_type *) 0xF0004A88u)	/* Message Object 36 Interrupt Pointer Register */
#define CAN_MOIPR37	(*( CAN_MOIPR_type *) 0xF0004AA8u)	/* Message Object 37 Interrupt Pointer Register */
#define CAN_MOIPR38	(*( CAN_MOIPR_type *) 0xF0004AC8u)	/* Message Object 38 Interrupt Pointer Register */
#define CAN_MOIPR39	(*( CAN_MOIPR_type *) 0xF0004AE8u)	/* Message Object 39 Interrupt Pointer Register */
#define CAN_MOIPR40	(*( CAN_MOIPR_type *) 0xF0004B08u)	/* Message Object 40 Interrupt Pointer Register */
#define CAN_MOIPR41	(*( CAN_MOIPR_type *) 0xF0004B28u)	/* Message Object 41 Interrupt Pointer Register */
#define CAN_MOIPR42	(*( CAN_MOIPR_type *) 0xF0004B48u)	/* Message Object 42 Interrupt Pointer Register */
#define CAN_MOIPR43	(*( CAN_MOIPR_type *) 0xF0004B68u)	/* Message Object 43 Interrupt Pointer Register */
#define CAN_MOIPR44	(*( CAN_MOIPR_type *) 0xF0004B88u)	/* Message Object 44 Interrupt Pointer Register */
#define CAN_MOIPR45	(*( CAN_MOIPR_type *) 0xF0004BA8u)	/* Message Object 45 Interrupt Pointer Register */
#define CAN_MOIPR46	(*( CAN_MOIPR_type *) 0xF0004BC8u)	/* Message Object 46 Interrupt Pointer Register */
#define CAN_MOIPR47	(*( CAN_MOIPR_type *) 0xF0004BE8u)	/* Message Object 47 Interrupt Pointer Register */
#define CAN_MOIPR48	(*( CAN_MOIPR_type *) 0xF0004C08u)	/* Message Object 48 Interrupt Pointer Register */
#define CAN_MOIPR49	(*( CAN_MOIPR_type *) 0xF0004C28u)	/* Message Object 49 Interrupt Pointer Register */
#define CAN_MOIPR50	(*( CAN_MOIPR_type *) 0xF0004C48u)	/* Message Object 50 Interrupt Pointer Register */
#define CAN_MOIPR51	(*( CAN_MOIPR_type *) 0xF0004C68u)	/* Message Object 51 Interrupt Pointer Register */
#define CAN_MOIPR52	(*( CAN_MOIPR_type *) 0xF0004C88u)	/* Message Object 52 Interrupt Pointer Register */
#define CAN_MOIPR53	(*( CAN_MOIPR_type *) 0xF0004CA8u)	/* Message Object 53 Interrupt Pointer Register */
#define CAN_MOIPR54	(*( CAN_MOIPR_type *) 0xF0004CC8u)	/* Message Object 54 Interrupt Pointer Register */
#define CAN_MOIPR55	(*( CAN_MOIPR_type *) 0xF0004CE8u)	/* Message Object 55 Interrupt Pointer Register */
#define CAN_MOIPR56	(*( CAN_MOIPR_type *) 0xF0004D08u)	/* Message Object 56 Interrupt Pointer Register */
#define CAN_MOIPR57	(*( CAN_MOIPR_type *) 0xF0004D28u)	/* Message Object 57 Interrupt Pointer Register */
#define CAN_MOIPR58	(*( CAN_MOIPR_type *) 0xF0004D48u)	/* Message Object 58 Interrupt Pointer Register */
#define CAN_MOIPR59	(*( CAN_MOIPR_type *) 0xF0004D68u)	/* Message Object 59 Interrupt Pointer Register */
#define CAN_MOIPR60	(*( CAN_MOIPR_type *) 0xF0004D88u)	/* Message Object 60 Interrupt Pointer Register */
#define CAN_MOIPR61	(*( CAN_MOIPR_type *) 0xF0004DA8u)	/* Message Object 61 Interrupt Pointer Register */
#define CAN_MOIPR62	(*( CAN_MOIPR_type *) 0xF0004DC8u)	/* Message Object 62 Interrupt Pointer Register */
#define CAN_MOIPR63	(*( CAN_MOIPR_type *) 0xF0004DE8u)	/* Message Object 63 Interrupt Pointer Register */
#define CAN_MOIPR64	(*( CAN_MOIPR_type *) 0xF0004E08u)	/* Message Object 64 Interrupt Pointer Register */
#define CAN_MOIPR65	(*( CAN_MOIPR_type *) 0xF0004E28u)	/* Message Object 65 Interrupt Pointer Register */
#define CAN_MOIPR66	(*( CAN_MOIPR_type *) 0xF0004E48u)	/* Message Object 66 Interrupt Pointer Register */
#define CAN_MOIPR67	(*( CAN_MOIPR_type *) 0xF0004E68u)	/* Message Object 67 Interrupt Pointer Register */
#define CAN_MOIPR68	(*( CAN_MOIPR_type *) 0xF0004E88u)	/* Message Object 68 Interrupt Pointer Register */
#define CAN_MOIPR69	(*( CAN_MOIPR_type *) 0xF0004EA8u)	/* Message Object 69 Interrupt Pointer Register */
#define CAN_MOIPR70	(*( CAN_MOIPR_type *) 0xF0004EC8u)	/* Message Object 70 Interrupt Pointer Register */
#define CAN_MOIPR71	(*( CAN_MOIPR_type *) 0xF0004EE8u)	/* Message Object 71 Interrupt Pointer Register */
#define CAN_MOIPR72	(*( CAN_MOIPR_type *) 0xF0004F08u)	/* Message Object 72 Interrupt Pointer Register */
#define CAN_MOIPR73	(*( CAN_MOIPR_type *) 0xF0004F28u)	/* Message Object 73 Interrupt Pointer Register */
#define CAN_MOIPR74	(*( CAN_MOIPR_type *) 0xF0004F48u)	/* Message Object 74 Interrupt Pointer Register */
#define CAN_MOIPR75	(*( CAN_MOIPR_type *) 0xF0004F68u)	/* Message Object 75 Interrupt Pointer Register */
#define CAN_MOIPR76	(*( CAN_MOIPR_type *) 0xF0004F88u)	/* Message Object 76 Interrupt Pointer Register */
#define CAN_MOIPR77	(*( CAN_MOIPR_type *) 0xF0004FA8u)	/* Message Object 77 Interrupt Pointer Register */
#define CAN_MOIPR78	(*( CAN_MOIPR_type *) 0xF0004FC8u)	/* Message Object 78 Interrupt Pointer Register */
#define CAN_MOIPR79	(*( CAN_MOIPR_type *) 0xF0004FE8u)	/* Message Object 79 Interrupt Pointer Register */
#define CAN_MOIPR80	(*( CAN_MOIPR_type *) 0xF0005008u)	/* Message Object 80 Interrupt Pointer Register */
#define CAN_MOIPR81	(*( CAN_MOIPR_type *) 0xF0005028u)	/* Message Object 81 Interrupt Pointer Register */
#define CAN_MOIPR82	(*( CAN_MOIPR_type *) 0xF0005048u)	/* Message Object 82 Interrupt Pointer Register */
#define CAN_MOIPR83	(*( CAN_MOIPR_type *) 0xF0005068u)	/* Message Object 83 Interrupt Pointer Register */
#define CAN_MOIPR84	(*( CAN_MOIPR_type *) 0xF0005088u)	/* Message Object 84 Interrupt Pointer Register */
#define CAN_MOIPR85	(*( CAN_MOIPR_type *) 0xF00050A8u)	/* Message Object 85 Interrupt Pointer Register */
#define CAN_MOIPR86	(*( CAN_MOIPR_type *) 0xF00050C8u)	/* Message Object 86 Interrupt Pointer Register */
#define CAN_MOIPR87	(*( CAN_MOIPR_type *) 0xF00050E8u)	/* Message Object 87 Interrupt Pointer Register */
#define CAN_MOIPR88	(*( CAN_MOIPR_type *) 0xF0005108u)	/* Message Object 88 Interrupt Pointer Register */
#define CAN_MOIPR89	(*( CAN_MOIPR_type *) 0xF0005128u)	/* Message Object 89 Interrupt Pointer Register */
#define CAN_MOIPR90	(*( CAN_MOIPR_type *) 0xF0005148u)	/* Message Object 90 Interrupt Pointer Register */
#define CAN_MOIPR91	(*( CAN_MOIPR_type *) 0xF0005168u)	/* Message Object 91 Interrupt Pointer Register */
#define CAN_MOIPR92	(*( CAN_MOIPR_type *) 0xF0005188u)	/* Message Object 92 Interrupt Pointer Register */
#define CAN_MOIPR93	(*( CAN_MOIPR_type *) 0xF00051A8u)	/* Message Object 93 Interrupt Pointer Register */
#define CAN_MOIPR94	(*( CAN_MOIPR_type *) 0xF00051C8u)	/* Message Object 94 Interrupt Pointer Register */
#define CAN_MOIPR95	(*( CAN_MOIPR_type *) 0xF00051E8u)	/* Message Object 95 Interrupt Pointer Register */
#define CAN_MOIPR96	(*( CAN_MOIPR_type *) 0xF0005208u)	/* Message Object 96 Interrupt Pointer Register */
#define CAN_MOIPR97	(*( CAN_MOIPR_type *) 0xF0005228u)	/* Message Object 97 Interrupt Pointer Register */
#define CAN_MOIPR98	(*( CAN_MOIPR_type *) 0xF0005248u)	/* Message Object 98 Interrupt Pointer Register */
#define CAN_MOIPR99	(*( CAN_MOIPR_type *) 0xF0005268u)	/* Message Object 99 Interrupt Pointer Register */
#define CAN_MOIPR100	(*( CAN_MOIPR_type *) 0xF0005288u)	/* Message Object 100 Interrupt Pointer Register */
#define CAN_MOIPR101	(*( CAN_MOIPR_type *) 0xF00052A8u)	/* Message Object 101 Interrupt Pointer Register */
#define CAN_MOIPR102	(*( CAN_MOIPR_type *) 0xF00052C8u)	/* Message Object 102 Interrupt Pointer Register */
#define CAN_MOIPR103	(*( CAN_MOIPR_type *) 0xF00052E8u)	/* Message Object 103 Interrupt Pointer Register */
#define CAN_MOIPR104	(*( CAN_MOIPR_type *) 0xF0005308u)	/* Message Object 104 Interrupt Pointer Register */
#define CAN_MOIPR105	(*( CAN_MOIPR_type *) 0xF0005328u)	/* Message Object 105 Interrupt Pointer Register */
#define CAN_MOIPR106	(*( CAN_MOIPR_type *) 0xF0005348u)	/* Message Object 106 Interrupt Pointer Register */
#define CAN_MOIPR107	(*( CAN_MOIPR_type *) 0xF0005368u)	/* Message Object 107 Interrupt Pointer Register */
#define CAN_MOIPR108	(*( CAN_MOIPR_type *) 0xF0005388u)	/* Message Object 108 Interrupt Pointer Register */
#define CAN_MOIPR109	(*( CAN_MOIPR_type *) 0xF00053A8u)	/* Message Object 109 Interrupt Pointer Register */
#define CAN_MOIPR110	(*( CAN_MOIPR_type *) 0xF00053C8u)	/* Message Object 110 Interrupt Pointer Register */
#define CAN_MOIPR111	(*( CAN_MOIPR_type *) 0xF00053E8u)	/* Message Object 111 Interrupt Pointer Register */
#define CAN_MOIPR112	(*( CAN_MOIPR_type *) 0xF0005408u)	/* Message Object 112 Interrupt Pointer Register */
#define CAN_MOIPR113	(*( CAN_MOIPR_type *) 0xF0005428u)	/* Message Object 113 Interrupt Pointer Register */
#define CAN_MOIPR114	(*( CAN_MOIPR_type *) 0xF0005448u)	/* Message Object 114 Interrupt Pointer Register */
#define CAN_MOIPR115	(*( CAN_MOIPR_type *) 0xF0005468u)	/* Message Object 115 Interrupt Pointer Register */
#define CAN_MOIPR116	(*( CAN_MOIPR_type *) 0xF0005488u)	/* Message Object 116 Interrupt Pointer Register */
#define CAN_MOIPR117	(*( CAN_MOIPR_type *) 0xF00054A8u)	/* Message Object 117 Interrupt Pointer Register */
#define CAN_MOIPR118	(*( CAN_MOIPR_type *) 0xF00054C8u)	/* Message Object 118 Interrupt Pointer Register */
#define CAN_MOIPR119	(*( CAN_MOIPR_type *) 0xF00054E8u)	/* Message Object 119 Interrupt Pointer Register */
#define CAN_MOIPR120	(*( CAN_MOIPR_type *) 0xF0005508u)	/* Message Object 120 Interrupt Pointer Register */
#define CAN_MOIPR121	(*( CAN_MOIPR_type *) 0xF0005528u)	/* Message Object 121 Interrupt Pointer Register */
#define CAN_MOIPR122	(*( CAN_MOIPR_type *) 0xF0005548u)	/* Message Object 122 Interrupt Pointer Register */
#define CAN_MOIPR123	(*( CAN_MOIPR_type *) 0xF0005568u)	/* Message Object 123 Interrupt Pointer Register */
#define CAN_MOIPR124	(*( CAN_MOIPR_type *) 0xF0005588u)	/* Message Object 124 Interrupt Pointer Register */
#define CAN_MOIPR125	(*( CAN_MOIPR_type *) 0xF00055A8u)	/* Message Object 125 Interrupt Pointer Register */
#define CAN_MOIPR126	(*( CAN_MOIPR_type *) 0xF00055C8u)	/* Message Object 126 Interrupt Pointer Register */
#define CAN_MOIPR127	(*( CAN_MOIPR_type *) 0xF00055E8u)	/* Message Object 127 Interrupt Pointer Register */

typedef volatile union
{
	struct
	{ 
		unsigned int AM             : 29;
		unsigned int MIDE           : 1;
		unsigned int                : 2;
	} B;
	int I;
	unsigned int U;

} CAN_MOAMR_type;
#define CAN_MOAMR0	(*( CAN_MOAMR_type *) 0xF000460Cu)	/* Message Object 0 Acceptance Mask Register */
#define CAN_MOAMR1	(*( CAN_MOAMR_type *) 0xF000462Cu)	/* Message Object 1 Acceptance Mask Register */
#define CAN_MOAMR2	(*( CAN_MOAMR_type *) 0xF000464Cu)	/* Message Object 2 Acceptance Mask Register */
#define CAN_MOAMR3	(*( CAN_MOAMR_type *) 0xF000466Cu)	/* Message Object 3 Acceptance Mask Register */
#define CAN_MOAMR4	(*( CAN_MOAMR_type *) 0xF000468Cu)	/* Message Object 4 Acceptance Mask Register */
#define CAN_MOAMR5	(*( CAN_MOAMR_type *) 0xF00046ACu)	/* Message Object 5 Acceptance Mask Register */
#define CAN_MOAMR6	(*( CAN_MOAMR_type *) 0xF00046CCu)	/* Message Object 6 Acceptance Mask Register */
#define CAN_MOAMR7	(*( CAN_MOAMR_type *) 0xF00046ECu)	/* Message Object 7 Acceptance Mask Register */
#define CAN_MOAMR8	(*( CAN_MOAMR_type *) 0xF000470Cu)	/* Message Object 8 Acceptance Mask Register */
#define CAN_MOAMR9	(*( CAN_MOAMR_type *) 0xF000472Cu)	/* Message Object 9 Acceptance Mask Register */
#define CAN_MOAMR10	(*( CAN_MOAMR_type *) 0xF000474Cu)	/* Message Object 10 Acceptance Mask Register */
#define CAN_MOAMR11	(*( CAN_MOAMR_type *) 0xF000476Cu)	/* Message Object 11 Acceptance Mask Register */
#define CAN_MOAMR12	(*( CAN_MOAMR_type *) 0xF000478Cu)	/* Message Object 12 Acceptance Mask Register */
#define CAN_MOAMR13	(*( CAN_MOAMR_type *) 0xF00047ACu)	/* Message Object 13 Acceptance Mask Register */
#define CAN_MOAMR14	(*( CAN_MOAMR_type *) 0xF00047CCu)	/* Message Object 14 Acceptance Mask Register */
#define CAN_MOAMR15	(*( CAN_MOAMR_type *) 0xF00047ECu)	/* Message Object 15 Acceptance Mask Register */
#define CAN_MOAMR16	(*( CAN_MOAMR_type *) 0xF000480Cu)	/* Message Object 16 Acceptance Mask Register */
#define CAN_MOAMR17	(*( CAN_MOAMR_type *) 0xF000482Cu)	/* Message Object 17 Acceptance Mask Register */
#define CAN_MOAMR18	(*( CAN_MOAMR_type *) 0xF000484Cu)	/* Message Object 18 Acceptance Mask Register */
#define CAN_MOAMR19	(*( CAN_MOAMR_type *) 0xF000486Cu)	/* Message Object 19 Acceptance Mask Register */
#define CAN_MOAMR20	(*( CAN_MOAMR_type *) 0xF000488Cu)	/* Message Object 20 Acceptance Mask Register */
#define CAN_MOAMR21	(*( CAN_MOAMR_type *) 0xF00048ACu)	/* Message Object 21 Acceptance Mask Register */
#define CAN_MOAMR22	(*( CAN_MOAMR_type *) 0xF00048CCu)	/* Message Object 22 Acceptance Mask Register */
#define CAN_MOAMR23	(*( CAN_MOAMR_type *) 0xF00048ECu)	/* Message Object 23 Acceptance Mask Register */
#define CAN_MOAMR24	(*( CAN_MOAMR_type *) 0xF000490Cu)	/* Message Object 24 Acceptance Mask Register */
#define CAN_MOAMR25	(*( CAN_MOAMR_type *) 0xF000492Cu)	/* Message Object 25 Acceptance Mask Register */
#define CAN_MOAMR26	(*( CAN_MOAMR_type *) 0xF000494Cu)	/* Message Object 26 Acceptance Mask Register */
#define CAN_MOAMR27	(*( CAN_MOAMR_type *) 0xF000496Cu)	/* Message Object 27 Acceptance Mask Register */
#define CAN_MOAMR28	(*( CAN_MOAMR_type *) 0xF000498Cu)	/* Message Object 28 Acceptance Mask Register */
#define CAN_MOAMR29	(*( CAN_MOAMR_type *) 0xF00049ACu)	/* Message Object 29 Acceptance Mask Register */
#define CAN_MOAMR30	(*( CAN_MOAMR_type *) 0xF00049CCu)	/* Message Object 30 Acceptance Mask Register */
#define CAN_MOAMR31	(*( CAN_MOAMR_type *) 0xF00049ECu)	/* Message Object 31 Acceptance Mask Register */
#define CAN_MOAMR32	(*( CAN_MOAMR_type *) 0xF0004A0Cu)	/* Message Object 32 Acceptance Mask Register */
#define CAN_MOAMR33	(*( CAN_MOAMR_type *) 0xF0004A2Cu)	/* Message Object 33 Acceptance Mask Register */
#define CAN_MOAMR34	(*( CAN_MOAMR_type *) 0xF0004A4Cu)	/* Message Object 34 Acceptance Mask Register */
#define CAN_MOAMR35	(*( CAN_MOAMR_type *) 0xF0004A6Cu)	/* Message Object 35 Acceptance Mask Register */
#define CAN_MOAMR36	(*( CAN_MOAMR_type *) 0xF0004A8Cu)	/* Message Object 36 Acceptance Mask Register */
#define CAN_MOAMR37	(*( CAN_MOAMR_type *) 0xF0004AACu)	/* Message Object 37 Acceptance Mask Register */
#define CAN_MOAMR38	(*( CAN_MOAMR_type *) 0xF0004ACCu)	/* Message Object 38 Acceptance Mask Register */
#define CAN_MOAMR39	(*( CAN_MOAMR_type *) 0xF0004AECu)	/* Message Object 39 Acceptance Mask Register */
#define CAN_MOAMR40	(*( CAN_MOAMR_type *) 0xF0004B0Cu)	/* Message Object 40 Acceptance Mask Register */
#define CAN_MOAMR41	(*( CAN_MOAMR_type *) 0xF0004B2Cu)	/* Message Object 41 Acceptance Mask Register */
#define CAN_MOAMR42	(*( CAN_MOAMR_type *) 0xF0004B4Cu)	/* Message Object 42 Acceptance Mask Register */
#define CAN_MOAMR43	(*( CAN_MOAMR_type *) 0xF0004B6Cu)	/* Message Object 43 Acceptance Mask Register */
#define CAN_MOAMR44	(*( CAN_MOAMR_type *) 0xF0004B8Cu)	/* Message Object 44 Acceptance Mask Register */
#define CAN_MOAMR45	(*( CAN_MOAMR_type *) 0xF0004BACu)	/* Message Object 45 Acceptance Mask Register */
#define CAN_MOAMR46	(*( CAN_MOAMR_type *) 0xF0004BCCu)	/* Message Object 46 Acceptance Mask Register */
#define CAN_MOAMR47	(*( CAN_MOAMR_type *) 0xF0004BECu)	/* Message Object 47 Acceptance Mask Register */
#define CAN_MOAMR48	(*( CAN_MOAMR_type *) 0xF0004C0Cu)	/* Message Object 48 Acceptance Mask Register */
#define CAN_MOAMR49	(*( CAN_MOAMR_type *) 0xF0004C2Cu)	/* Message Object 49 Acceptance Mask Register */
#define CAN_MOAMR50	(*( CAN_MOAMR_type *) 0xF0004C4Cu)	/* Message Object 50 Acceptance Mask Register */
#define CAN_MOAMR51	(*( CAN_MOAMR_type *) 0xF0004C6Cu)	/* Message Object 51 Acceptance Mask Register */
#define CAN_MOAMR52	(*( CAN_MOAMR_type *) 0xF0004C8Cu)	/* Message Object 52 Acceptance Mask Register */
#define CAN_MOAMR53	(*( CAN_MOAMR_type *) 0xF0004CACu)	/* Message Object 53 Acceptance Mask Register */
#define CAN_MOAMR54	(*( CAN_MOAMR_type *) 0xF0004CCCu)	/* Message Object 54 Acceptance Mask Register */
#define CAN_MOAMR55	(*( CAN_MOAMR_type *) 0xF0004CECu)	/* Message Object 55 Acceptance Mask Register */
#define CAN_MOAMR56	(*( CAN_MOAMR_type *) 0xF0004D0Cu)	/* Message Object 56 Acceptance Mask Register */
#define CAN_MOAMR57	(*( CAN_MOAMR_type *) 0xF0004D2Cu)	/* Message Object 57 Acceptance Mask Register */
#define CAN_MOAMR58	(*( CAN_MOAMR_type *) 0xF0004D4Cu)	/* Message Object 58 Acceptance Mask Register */
#define CAN_MOAMR59	(*( CAN_MOAMR_type *) 0xF0004D6Cu)	/* Message Object 59 Acceptance Mask Register */
#define CAN_MOAMR60	(*( CAN_MOAMR_type *) 0xF0004D8Cu)	/* Message Object 60 Acceptance Mask Register */
#define CAN_MOAMR61	(*( CAN_MOAMR_type *) 0xF0004DACu)	/* Message Object 61 Acceptance Mask Register */
#define CAN_MOAMR62	(*( CAN_MOAMR_type *) 0xF0004DCCu)	/* Message Object 62 Acceptance Mask Register */
#define CAN_MOAMR63	(*( CAN_MOAMR_type *) 0xF0004DECu)	/* Message Object 63 Acceptance Mask Register */
#define CAN_MOAMR64	(*( CAN_MOAMR_type *) 0xF0004E0Cu)	/* Message Object 64 Acceptance Mask Register */
#define CAN_MOAMR65	(*( CAN_MOAMR_type *) 0xF0004E2Cu)	/* Message Object 65 Acceptance Mask Register */
#define CAN_MOAMR66	(*( CAN_MOAMR_type *) 0xF0004E4Cu)	/* Message Object 66 Acceptance Mask Register */
#define CAN_MOAMR67	(*( CAN_MOAMR_type *) 0xF0004E6Cu)	/* Message Object 67 Acceptance Mask Register */
#define CAN_MOAMR68	(*( CAN_MOAMR_type *) 0xF0004E8Cu)	/* Message Object 68 Acceptance Mask Register */
#define CAN_MOAMR69	(*( CAN_MOAMR_type *) 0xF0004EACu)	/* Message Object 69 Acceptance Mask Register */
#define CAN_MOAMR70	(*( CAN_MOAMR_type *) 0xF0004ECCu)	/* Message Object 70 Acceptance Mask Register */
#define CAN_MOAMR71	(*( CAN_MOAMR_type *) 0xF0004EECu)	/* Message Object 71 Acceptance Mask Register */
#define CAN_MOAMR72	(*( CAN_MOAMR_type *) 0xF0004F0Cu)	/* Message Object 72 Acceptance Mask Register */
#define CAN_MOAMR73	(*( CAN_MOAMR_type *) 0xF0004F2Cu)	/* Message Object 73 Acceptance Mask Register */
#define CAN_MOAMR74	(*( CAN_MOAMR_type *) 0xF0004F4Cu)	/* Message Object 74 Acceptance Mask Register */
#define CAN_MOAMR75	(*( CAN_MOAMR_type *) 0xF0004F6Cu)	/* Message Object 75 Acceptance Mask Register */
#define CAN_MOAMR76	(*( CAN_MOAMR_type *) 0xF0004F8Cu)	/* Message Object 76 Acceptance Mask Register */
#define CAN_MOAMR77	(*( CAN_MOAMR_type *) 0xF0004FACu)	/* Message Object 77 Acceptance Mask Register */
#define CAN_MOAMR78	(*( CAN_MOAMR_type *) 0xF0004FCCu)	/* Message Object 78 Acceptance Mask Register */
#define CAN_MOAMR79	(*( CAN_MOAMR_type *) 0xF0004FECu)	/* Message Object 79 Acceptance Mask Register */
#define CAN_MOAMR80	(*( CAN_MOAMR_type *) 0xF000500Cu)	/* Message Object 80 Acceptance Mask Register */
#define CAN_MOAMR81	(*( CAN_MOAMR_type *) 0xF000502Cu)	/* Message Object 81 Acceptance Mask Register */
#define CAN_MOAMR82	(*( CAN_MOAMR_type *) 0xF000504Cu)	/* Message Object 82 Acceptance Mask Register */
#define CAN_MOAMR83	(*( CAN_MOAMR_type *) 0xF000506Cu)	/* Message Object 83 Acceptance Mask Register */
#define CAN_MOAMR84	(*( CAN_MOAMR_type *) 0xF000508Cu)	/* Message Object 84 Acceptance Mask Register */
#define CAN_MOAMR85	(*( CAN_MOAMR_type *) 0xF00050ACu)	/* Message Object 85 Acceptance Mask Register */
#define CAN_MOAMR86	(*( CAN_MOAMR_type *) 0xF00050CCu)	/* Message Object 86 Acceptance Mask Register */
#define CAN_MOAMR87	(*( CAN_MOAMR_type *) 0xF00050ECu)	/* Message Object 87 Acceptance Mask Register */
#define CAN_MOAMR88	(*( CAN_MOAMR_type *) 0xF000510Cu)	/* Message Object 88 Acceptance Mask Register */
#define CAN_MOAMR89	(*( CAN_MOAMR_type *) 0xF000512Cu)	/* Message Object 89 Acceptance Mask Register */
#define CAN_MOAMR90	(*( CAN_MOAMR_type *) 0xF000514Cu)	/* Message Object 90 Acceptance Mask Register */
#define CAN_MOAMR91	(*( CAN_MOAMR_type *) 0xF000516Cu)	/* Message Object 91 Acceptance Mask Register */
#define CAN_MOAMR92	(*( CAN_MOAMR_type *) 0xF000518Cu)	/* Message Object 92 Acceptance Mask Register */
#define CAN_MOAMR93	(*( CAN_MOAMR_type *) 0xF00051ACu)	/* Message Object 93 Acceptance Mask Register */
#define CAN_MOAMR94	(*( CAN_MOAMR_type *) 0xF00051CCu)	/* Message Object 94 Acceptance Mask Register */
#define CAN_MOAMR95	(*( CAN_MOAMR_type *) 0xF00051ECu)	/* Message Object 95 Acceptance Mask Register */
#define CAN_MOAMR96	(*( CAN_MOAMR_type *) 0xF000520Cu)	/* Message Object 96 Acceptance Mask Register */
#define CAN_MOAMR97	(*( CAN_MOAMR_type *) 0xF000522Cu)	/* Message Object 97 Acceptance Mask Register */
#define CAN_MOAMR98	(*( CAN_MOAMR_type *) 0xF000524Cu)	/* Message Object 98 Acceptance Mask Register */
#define CAN_MOAMR99	(*( CAN_MOAMR_type *) 0xF000526Cu)	/* Message Object 99 Acceptance Mask Register */
#define CAN_MOAMR100	(*( CAN_MOAMR_type *) 0xF000528Cu)	/* Message Object 100 Acceptance Mask Register */
#define CAN_MOAMR101	(*( CAN_MOAMR_type *) 0xF00052ACu)	/* Message Object 101 Acceptance Mask Register */
#define CAN_MOAMR102	(*( CAN_MOAMR_type *) 0xF00052CCu)	/* Message Object 102 Acceptance Mask Register */
#define CAN_MOAMR103	(*( CAN_MOAMR_type *) 0xF00052ECu)	/* Message Object 103 Acceptance Mask Register */
#define CAN_MOAMR104	(*( CAN_MOAMR_type *) 0xF000530Cu)	/* Message Object 104 Acceptance Mask Register */
#define CAN_MOAMR105	(*( CAN_MOAMR_type *) 0xF000532Cu)	/* Message Object 105 Acceptance Mask Register */
#define CAN_MOAMR106	(*( CAN_MOAMR_type *) 0xF000534Cu)	/* Message Object 106 Acceptance Mask Register */
#define CAN_MOAMR107	(*( CAN_MOAMR_type *) 0xF000536Cu)	/* Message Object 107 Acceptance Mask Register */
#define CAN_MOAMR108	(*( CAN_MOAMR_type *) 0xF000538Cu)	/* Message Object 108 Acceptance Mask Register */
#define CAN_MOAMR109	(*( CAN_MOAMR_type *) 0xF00053ACu)	/* Message Object 109 Acceptance Mask Register */
#define CAN_MOAMR110	(*( CAN_MOAMR_type *) 0xF00053CCu)	/* Message Object 110 Acceptance Mask Register */
#define CAN_MOAMR111	(*( CAN_MOAMR_type *) 0xF00053ECu)	/* Message Object 111 Acceptance Mask Register */
#define CAN_MOAMR112	(*( CAN_MOAMR_type *) 0xF000540Cu)	/* Message Object 112 Acceptance Mask Register */
#define CAN_MOAMR113	(*( CAN_MOAMR_type *) 0xF000542Cu)	/* Message Object 113 Acceptance Mask Register */
#define CAN_MOAMR114	(*( CAN_MOAMR_type *) 0xF000544Cu)	/* Message Object 114 Acceptance Mask Register */
#define CAN_MOAMR115	(*( CAN_MOAMR_type *) 0xF000546Cu)	/* Message Object 115 Acceptance Mask Register */
#define CAN_MOAMR116	(*( CAN_MOAMR_type *) 0xF000548Cu)	/* Message Object 116 Acceptance Mask Register */
#define CAN_MOAMR117	(*( CAN_MOAMR_type *) 0xF00054ACu)	/* Message Object 117 Acceptance Mask Register */
#define CAN_MOAMR118	(*( CAN_MOAMR_type *) 0xF00054CCu)	/* Message Object 118 Acceptance Mask Register */
#define CAN_MOAMR119	(*( CAN_MOAMR_type *) 0xF00054ECu)	/* Message Object 119 Acceptance Mask Register */
#define CAN_MOAMR120	(*( CAN_MOAMR_type *) 0xF000550Cu)	/* Message Object 120 Acceptance Mask Register */
#define CAN_MOAMR121	(*( CAN_MOAMR_type *) 0xF000552Cu)	/* Message Object 121 Acceptance Mask Register */
#define CAN_MOAMR122	(*( CAN_MOAMR_type *) 0xF000554Cu)	/* Message Object 122 Acceptance Mask Register */
#define CAN_MOAMR123	(*( CAN_MOAMR_type *) 0xF000556Cu)	/* Message Object 123 Acceptance Mask Register */
#define CAN_MOAMR124	(*( CAN_MOAMR_type *) 0xF000558Cu)	/* Message Object 124 Acceptance Mask Register */
#define CAN_MOAMR125	(*( CAN_MOAMR_type *) 0xF00055ACu)	/* Message Object 125 Acceptance Mask Register */
#define CAN_MOAMR126	(*( CAN_MOAMR_type *) 0xF00055CCu)	/* Message Object 126 Acceptance Mask Register */
#define CAN_MOAMR127	(*( CAN_MOAMR_type *) 0xF00055ECu)	/* Message Object 127 Acceptance Mask Register */

typedef volatile union
{
	struct
	{ 
		unsigned int DB0            : 8;
		unsigned int DB1            : 8;
		unsigned int DB2            : 8;
		unsigned int DB3            : 8;
	} B;
	int I;
	unsigned int U;

} CAN_MODATAL_type;
#define CAN_MODATAL0	(*( CAN_MODATAL_type *) 0xF0004610u)	/* Message Object 0 Data Register Low */
#define CAN_MODATAL1	(*( CAN_MODATAL_type *) 0xF0004630u)	/* Message Object 1 Data Register Low */
#define CAN_MODATAL2	(*( CAN_MODATAL_type *) 0xF0004650u)	/* Message Object 2 Data Register Low */
#define CAN_MODATAL3	(*( CAN_MODATAL_type *) 0xF0004670u)	/* Message Object 3 Data Register Low */
#define CAN_MODATAL4	(*( CAN_MODATAL_type *) 0xF0004690u)	/* Message Object 4 Data Register Low */
#define CAN_MODATAL5	(*( CAN_MODATAL_type *) 0xF00046B0u)	/* Message Object 5 Data Register Low */
#define CAN_MODATAL6	(*( CAN_MODATAL_type *) 0xF00046D0u)	/* Message Object 6 Data Register Low */
#define CAN_MODATAL7	(*( CAN_MODATAL_type *) 0xF00046F0u)	/* Message Object 7 Data Register Low */
#define CAN_MODATAL8	(*( CAN_MODATAL_type *) 0xF0004710u)	/* Message Object 8 Data Register Low */
#define CAN_MODATAL9	(*( CAN_MODATAL_type *) 0xF0004730u)	/* Message Object 9 Data Register Low */
#define CAN_MODATAL10	(*( CAN_MODATAL_type *) 0xF0004750u)	/* Message Object 10 Data Register Low */
#define CAN_MODATAL11	(*( CAN_MODATAL_type *) 0xF0004770u)	/* Message Object 11 Data Register Low */
#define CAN_MODATAL12	(*( CAN_MODATAL_type *) 0xF0004790u)	/* Message Object 12 Data Register Low */
#define CAN_MODATAL13	(*( CAN_MODATAL_type *) 0xF00047B0u)	/* Message Object 13 Data Register Low */
#define CAN_MODATAL14	(*( CAN_MODATAL_type *) 0xF00047D0u)	/* Message Object 14 Data Register Low */
#define CAN_MODATAL15	(*( CAN_MODATAL_type *) 0xF00047F0u)	/* Message Object 15 Data Register Low */
#define CAN_MODATAL16	(*( CAN_MODATAL_type *) 0xF0004810u)	/* Message Object 16 Data Register Low */
#define CAN_MODATAL17	(*( CAN_MODATAL_type *) 0xF0004830u)	/* Message Object 17 Data Register Low */
#define CAN_MODATAL18	(*( CAN_MODATAL_type *) 0xF0004850u)	/* Message Object 18 Data Register Low */
#define CAN_MODATAL19	(*( CAN_MODATAL_type *) 0xF0004870u)	/* Message Object 19 Data Register Low */
#define CAN_MODATAL20	(*( CAN_MODATAL_type *) 0xF0004890u)	/* Message Object 20 Data Register Low */
#define CAN_MODATAL21	(*( CAN_MODATAL_type *) 0xF00048B0u)	/* Message Object 21 Data Register Low */
#define CAN_MODATAL22	(*( CAN_MODATAL_type *) 0xF00048D0u)	/* Message Object 22 Data Register Low */
#define CAN_MODATAL23	(*( CAN_MODATAL_type *) 0xF00048F0u)	/* Message Object 23 Data Register Low */
#define CAN_MODATAL24	(*( CAN_MODATAL_type *) 0xF0004910u)	/* Message Object 24 Data Register Low */
#define CAN_MODATAL25	(*( CAN_MODATAL_type *) 0xF0004930u)	/* Message Object 25 Data Register Low */
#define CAN_MODATAL26	(*( CAN_MODATAL_type *) 0xF0004950u)	/* Message Object 26 Data Register Low */
#define CAN_MODATAL27	(*( CAN_MODATAL_type *) 0xF0004970u)	/* Message Object 27 Data Register Low */
#define CAN_MODATAL28	(*( CAN_MODATAL_type *) 0xF0004990u)	/* Message Object 28 Data Register Low */
#define CAN_MODATAL29	(*( CAN_MODATAL_type *) 0xF00049B0u)	/* Message Object 29 Data Register Low */
#define CAN_MODATAL30	(*( CAN_MODATAL_type *) 0xF00049D0u)	/* Message Object 30 Data Register Low */
#define CAN_MODATAL31	(*( CAN_MODATAL_type *) 0xF00049F0u)	/* Message Object 31 Data Register Low */
#define CAN_MODATAL32	(*( CAN_MODATAL_type *) 0xF0004A10u)	/* Message Object 32 Data Register Low */
#define CAN_MODATAL33	(*( CAN_MODATAL_type *) 0xF0004A30u)	/* Message Object 33 Data Register Low */
#define CAN_MODATAL34	(*( CAN_MODATAL_type *) 0xF0004A50u)	/* Message Object 34 Data Register Low */
#define CAN_MODATAL35	(*( CAN_MODATAL_type *) 0xF0004A70u)	/* Message Object 35 Data Register Low */
#define CAN_MODATAL36	(*( CAN_MODATAL_type *) 0xF0004A90u)	/* Message Object 36 Data Register Low */
#define CAN_MODATAL37	(*( CAN_MODATAL_type *) 0xF0004AB0u)	/* Message Object 37 Data Register Low */
#define CAN_MODATAL38	(*( CAN_MODATAL_type *) 0xF0004AD0u)	/* Message Object 38 Data Register Low */
#define CAN_MODATAL39	(*( CAN_MODATAL_type *) 0xF0004AF0u)	/* Message Object 39 Data Register Low */
#define CAN_MODATAL40	(*( CAN_MODATAL_type *) 0xF0004B10u)	/* Message Object 40 Data Register Low */
#define CAN_MODATAL41	(*( CAN_MODATAL_type *) 0xF0004B30u)	/* Message Object 41 Data Register Low */
#define CAN_MODATAL42	(*( CAN_MODATAL_type *) 0xF0004B50u)	/* Message Object 42 Data Register Low */
#define CAN_MODATAL43	(*( CAN_MODATAL_type *) 0xF0004B70u)	/* Message Object 43 Data Register Low */
#define CAN_MODATAL44	(*( CAN_MODATAL_type *) 0xF0004B90u)	/* Message Object 44 Data Register Low */
#define CAN_MODATAL45	(*( CAN_MODATAL_type *) 0xF0004BB0u)	/* Message Object 45 Data Register Low */
#define CAN_MODATAL46	(*( CAN_MODATAL_type *) 0xF0004BD0u)	/* Message Object 46 Data Register Low */
#define CAN_MODATAL47	(*( CAN_MODATAL_type *) 0xF0004BF0u)	/* Message Object 47 Data Register Low */
#define CAN_MODATAL48	(*( CAN_MODATAL_type *) 0xF0004C10u)	/* Message Object 48 Data Register Low */
#define CAN_MODATAL49	(*( CAN_MODATAL_type *) 0xF0004C30u)	/* Message Object 49 Data Register Low */
#define CAN_MODATAL50	(*( CAN_MODATAL_type *) 0xF0004C50u)	/* Message Object 50 Data Register Low */
#define CAN_MODATAL51	(*( CAN_MODATAL_type *) 0xF0004C70u)	/* Message Object 51 Data Register Low */
#define CAN_MODATAL52	(*( CAN_MODATAL_type *) 0xF0004C90u)	/* Message Object 52 Data Register Low */
#define CAN_MODATAL53	(*( CAN_MODATAL_type *) 0xF0004CB0u)	/* Message Object 53 Data Register Low */
#define CAN_MODATAL54	(*( CAN_MODATAL_type *) 0xF0004CD0u)	/* Message Object 54 Data Register Low */
#define CAN_MODATAL55	(*( CAN_MODATAL_type *) 0xF0004CF0u)	/* Message Object 55 Data Register Low */
#define CAN_MODATAL56	(*( CAN_MODATAL_type *) 0xF0004D10u)	/* Message Object 56 Data Register Low */
#define CAN_MODATAL57	(*( CAN_MODATAL_type *) 0xF0004D30u)	/* Message Object 57 Data Register Low */
#define CAN_MODATAL58	(*( CAN_MODATAL_type *) 0xF0004D50u)	/* Message Object 58 Data Register Low */
#define CAN_MODATAL59	(*( CAN_MODATAL_type *) 0xF0004D70u)	/* Message Object 59 Data Register Low */
#define CAN_MODATAL60	(*( CAN_MODATAL_type *) 0xF0004D90u)	/* Message Object 60 Data Register Low */
#define CAN_MODATAL61	(*( CAN_MODATAL_type *) 0xF0004DB0u)	/* Message Object 61 Data Register Low */
#define CAN_MODATAL62	(*( CAN_MODATAL_type *) 0xF0004DD0u)	/* Message Object 62 Data Register Low */
#define CAN_MODATAL63	(*( CAN_MODATAL_type *) 0xF0004DF0u)	/* Message Object 63 Data Register Low */
#define CAN_MODATAL64	(*( CAN_MODATAL_type *) 0xF0004E10u)	/* Message Object 64 Data Register Low */
#define CAN_MODATAL65	(*( CAN_MODATAL_type *) 0xF0004E30u)	/* Message Object 65 Data Register Low */
#define CAN_MODATAL66	(*( CAN_MODATAL_type *) 0xF0004E50u)	/* Message Object 66 Data Register Low */
#define CAN_MODATAL67	(*( CAN_MODATAL_type *) 0xF0004E70u)	/* Message Object 67 Data Register Low */
#define CAN_MODATAL68	(*( CAN_MODATAL_type *) 0xF0004E90u)	/* Message Object 68 Data Register Low */
#define CAN_MODATAL69	(*( CAN_MODATAL_type *) 0xF0004EB0u)	/* Message Object 69 Data Register Low */
#define CAN_MODATAL70	(*( CAN_MODATAL_type *) 0xF0004ED0u)	/* Message Object 70 Data Register Low */
#define CAN_MODATAL71	(*( CAN_MODATAL_type *) 0xF0004EF0u)	/* Message Object 71 Data Register Low */
#define CAN_MODATAL72	(*( CAN_MODATAL_type *) 0xF0004F10u)	/* Message Object 72 Data Register Low */
#define CAN_MODATAL73	(*( CAN_MODATAL_type *) 0xF0004F30u)	/* Message Object 73 Data Register Low */
#define CAN_MODATAL74	(*( CAN_MODATAL_type *) 0xF0004F50u)	/* Message Object 74 Data Register Low */
#define CAN_MODATAL75	(*( CAN_MODATAL_type *) 0xF0004F70u)	/* Message Object 75 Data Register Low */
#define CAN_MODATAL76	(*( CAN_MODATAL_type *) 0xF0004F90u)	/* Message Object 76 Data Register Low */
#define CAN_MODATAL77	(*( CAN_MODATAL_type *) 0xF0004FB0u)	/* Message Object 77 Data Register Low */
#define CAN_MODATAL78	(*( CAN_MODATAL_type *) 0xF0004FD0u)	/* Message Object 78 Data Register Low */
#define CAN_MODATAL79	(*( CAN_MODATAL_type *) 0xF0004FF0u)	/* Message Object 79 Data Register Low */
#define CAN_MODATAL80	(*( CAN_MODATAL_type *) 0xF0005010u)	/* Message Object 80 Data Register Low */
#define CAN_MODATAL81	(*( CAN_MODATAL_type *) 0xF0005030u)	/* Message Object 81 Data Register Low */
#define CAN_MODATAL82	(*( CAN_MODATAL_type *) 0xF0005050u)	/* Message Object 82 Data Register Low */
#define CAN_MODATAL83	(*( CAN_MODATAL_type *) 0xF0005070u)	/* Message Object 83 Data Register Low */
#define CAN_MODATAL84	(*( CAN_MODATAL_type *) 0xF0005090u)	/* Message Object 84 Data Register Low */
#define CAN_MODATAL85	(*( CAN_MODATAL_type *) 0xF00050B0u)	/* Message Object 85 Data Register Low */
#define CAN_MODATAL86	(*( CAN_MODATAL_type *) 0xF00050D0u)	/* Message Object 86 Data Register Low */
#define CAN_MODATAL87	(*( CAN_MODATAL_type *) 0xF00050F0u)	/* Message Object 87 Data Register Low */
#define CAN_MODATAL88	(*( CAN_MODATAL_type *) 0xF0005110u)	/* Message Object 88 Data Register Low */
#define CAN_MODATAL89	(*( CAN_MODATAL_type *) 0xF0005130u)	/* Message Object 89 Data Register Low */
#define CAN_MODATAL90	(*( CAN_MODATAL_type *) 0xF0005150u)	/* Message Object 90 Data Register Low */
#define CAN_MODATAL91	(*( CAN_MODATAL_type *) 0xF0005170u)	/* Message Object 91 Data Register Low */
#define CAN_MODATAL92	(*( CAN_MODATAL_type *) 0xF0005190u)	/* Message Object 92 Data Register Low */
#define CAN_MODATAL93	(*( CAN_MODATAL_type *) 0xF00051B0u)	/* Message Object 93 Data Register Low */
#define CAN_MODATAL94	(*( CAN_MODATAL_type *) 0xF00051D0u)	/* Message Object 94 Data Register Low */
#define CAN_MODATAL95	(*( CAN_MODATAL_type *) 0xF00051F0u)	/* Message Object 95 Data Register Low */
#define CAN_MODATAL96	(*( CAN_MODATAL_type *) 0xF0005210u)	/* Message Object 96 Data Register Low */
#define CAN_MODATAL97	(*( CAN_MODATAL_type *) 0xF0005230u)	/* Message Object 97 Data Register Low */
#define CAN_MODATAL98	(*( CAN_MODATAL_type *) 0xF0005250u)	/* Message Object 98 Data Register Low */
#define CAN_MODATAL99	(*( CAN_MODATAL_type *) 0xF0005270u)	/* Message Object 99 Data Register Low */
#define CAN_MODATAL100	(*( CAN_MODATAL_type *) 0xF0005290u)	/* Message Object 100 Data Register Low */
#define CAN_MODATAL101	(*( CAN_MODATAL_type *) 0xF00052B0u)	/* Message Object 101 Data Register Low */
#define CAN_MODATAL102	(*( CAN_MODATAL_type *) 0xF00052D0u)	/* Message Object 102 Data Register Low */
#define CAN_MODATAL103	(*( CAN_MODATAL_type *) 0xF00052F0u)	/* Message Object 103 Data Register Low */
#define CAN_MODATAL104	(*( CAN_MODATAL_type *) 0xF0005310u)	/* Message Object 104 Data Register Low */
#define CAN_MODATAL105	(*( CAN_MODATAL_type *) 0xF0005330u)	/* Message Object 105 Data Register Low */
#define CAN_MODATAL106	(*( CAN_MODATAL_type *) 0xF0005350u)	/* Message Object 106 Data Register Low */
#define CAN_MODATAL107	(*( CAN_MODATAL_type *) 0xF0005370u)	/* Message Object 107 Data Register Low */
#define CAN_MODATAL108	(*( CAN_MODATAL_type *) 0xF0005390u)	/* Message Object 108 Data Register Low */
#define CAN_MODATAL109	(*( CAN_MODATAL_type *) 0xF00053B0u)	/* Message Object 109 Data Register Low */
#define CAN_MODATAL110	(*( CAN_MODATAL_type *) 0xF00053D0u)	/* Message Object 110 Data Register Low */
#define CAN_MODATAL111	(*( CAN_MODATAL_type *) 0xF00053F0u)	/* Message Object 111 Data Register Low */
#define CAN_MODATAL112	(*( CAN_MODATAL_type *) 0xF0005410u)	/* Message Object 112 Data Register Low */
#define CAN_MODATAL113	(*( CAN_MODATAL_type *) 0xF0005430u)	/* Message Object 113 Data Register Low */
#define CAN_MODATAL114	(*( CAN_MODATAL_type *) 0xF0005450u)	/* Message Object 114 Data Register Low */
#define CAN_MODATAL115	(*( CAN_MODATAL_type *) 0xF0005470u)	/* Message Object 115 Data Register Low */
#define CAN_MODATAL116	(*( CAN_MODATAL_type *) 0xF0005490u)	/* Message Object 116 Data Register Low */
#define CAN_MODATAL117	(*( CAN_MODATAL_type *) 0xF00054B0u)	/* Message Object 117 Data Register Low */
#define CAN_MODATAL118	(*( CAN_MODATAL_type *) 0xF00054D0u)	/* Message Object 118 Data Register Low */
#define CAN_MODATAL119	(*( CAN_MODATAL_type *) 0xF00054F0u)	/* Message Object 119 Data Register Low */
#define CAN_MODATAL120	(*( CAN_MODATAL_type *) 0xF0005510u)	/* Message Object 120 Data Register Low */
#define CAN_MODATAL121	(*( CAN_MODATAL_type *) 0xF0005530u)	/* Message Object 121 Data Register Low */
#define CAN_MODATAL122	(*( CAN_MODATAL_type *) 0xF0005550u)	/* Message Object 122 Data Register Low */
#define CAN_MODATAL123	(*( CAN_MODATAL_type *) 0xF0005570u)	/* Message Object 123 Data Register Low */
#define CAN_MODATAL124	(*( CAN_MODATAL_type *) 0xF0005590u)	/* Message Object 124 Data Register Low */
#define CAN_MODATAL125	(*( CAN_MODATAL_type *) 0xF00055B0u)	/* Message Object 125 Data Register Low */
#define CAN_MODATAL126	(*( CAN_MODATAL_type *) 0xF00055D0u)	/* Message Object 126 Data Register Low */
#define CAN_MODATAL127	(*( CAN_MODATAL_type *) 0xF00055F0u)	/* Message Object 127 Data Register Low */

typedef volatile union
{
	struct
	{ 
		unsigned int DB4            : 8;
		unsigned int DB5            : 8;
		unsigned int DB6            : 8;
		unsigned int DB7            : 8;
	} B;
	int I;
	unsigned int U;

} CAN_MODATAH_type;
#define CAN_MODATAH0	(*( CAN_MODATAH_type *) 0xF0004614u)	/* Message Object 0 Data Register High */
#define CAN_MODATAH1	(*( CAN_MODATAH_type *) 0xF0004634u)	/* Message Object 1 Data Register High */
#define CAN_MODATAH2	(*( CAN_MODATAH_type *) 0xF0004654u)	/* Message Object 2 Data Register High */
#define CAN_MODATAH3	(*( CAN_MODATAH_type *) 0xF0004674u)	/* Message Object 3 Data Register High */
#define CAN_MODATAH4	(*( CAN_MODATAH_type *) 0xF0004694u)	/* Message Object 4 Data Register High */
#define CAN_MODATAH5	(*( CAN_MODATAH_type *) 0xF00046B4u)	/* Message Object 5 Data Register High */
#define CAN_MODATAH6	(*( CAN_MODATAH_type *) 0xF00046D4u)	/* Message Object 6 Data Register High */
#define CAN_MODATAH7	(*( CAN_MODATAH_type *) 0xF00046F4u)	/* Message Object 7 Data Register High */
#define CAN_MODATAH8	(*( CAN_MODATAH_type *) 0xF0004714u)	/* Message Object 8 Data Register High */
#define CAN_MODATAH9	(*( CAN_MODATAH_type *) 0xF0004734u)	/* Message Object 9 Data Register High */
#define CAN_MODATAH10	(*( CAN_MODATAH_type *) 0xF0004754u)	/* Message Object 10 Data Register High */
#define CAN_MODATAH11	(*( CAN_MODATAH_type *) 0xF0004774u)	/* Message Object 11 Data Register High */
#define CAN_MODATAH12	(*( CAN_MODATAH_type *) 0xF0004794u)	/* Message Object 12 Data Register High */
#define CAN_MODATAH13	(*( CAN_MODATAH_type *) 0xF00047B4u)	/* Message Object 13 Data Register High */
#define CAN_MODATAH14	(*( CAN_MODATAH_type *) 0xF00047D4u)	/* Message Object 14 Data Register High */
#define CAN_MODATAH15	(*( CAN_MODATAH_type *) 0xF00047F4u)	/* Message Object 15 Data Register High */
#define CAN_MODATAH16	(*( CAN_MODATAH_type *) 0xF0004814u)	/* Message Object 16 Data Register High */
#define CAN_MODATAH17	(*( CAN_MODATAH_type *) 0xF0004834u)	/* Message Object 17 Data Register High */
#define CAN_MODATAH18	(*( CAN_MODATAH_type *) 0xF0004854u)	/* Message Object 18 Data Register High */
#define CAN_MODATAH19	(*( CAN_MODATAH_type *) 0xF0004874u)	/* Message Object 19 Data Register High */
#define CAN_MODATAH20	(*( CAN_MODATAH_type *) 0xF0004894u)	/* Message Object 20 Data Register High */
#define CAN_MODATAH21	(*( CAN_MODATAH_type *) 0xF00048B4u)	/* Message Object 21 Data Register High */
#define CAN_MODATAH22	(*( CAN_MODATAH_type *) 0xF00048D4u)	/* Message Object 22 Data Register High */
#define CAN_MODATAH23	(*( CAN_MODATAH_type *) 0xF00048F4u)	/* Message Object 23 Data Register High */
#define CAN_MODATAH24	(*( CAN_MODATAH_type *) 0xF0004914u)	/* Message Object 24 Data Register High */
#define CAN_MODATAH25	(*( CAN_MODATAH_type *) 0xF0004934u)	/* Message Object 25 Data Register High */
#define CAN_MODATAH26	(*( CAN_MODATAH_type *) 0xF0004954u)	/* Message Object 26 Data Register High */
#define CAN_MODATAH27	(*( CAN_MODATAH_type *) 0xF0004974u)	/* Message Object 27 Data Register High */
#define CAN_MODATAH28	(*( CAN_MODATAH_type *) 0xF0004994u)	/* Message Object 28 Data Register High */
#define CAN_MODATAH29	(*( CAN_MODATAH_type *) 0xF00049B4u)	/* Message Object 29 Data Register High */
#define CAN_MODATAH30	(*( CAN_MODATAH_type *) 0xF00049D4u)	/* Message Object 30 Data Register High */
#define CAN_MODATAH31	(*( CAN_MODATAH_type *) 0xF00049F4u)	/* Message Object 31 Data Register High */
#define CAN_MODATAH32	(*( CAN_MODATAH_type *) 0xF0004A14u)	/* Message Object 32 Data Register High */
#define CAN_MODATAH33	(*( CAN_MODATAH_type *) 0xF0004A34u)	/* Message Object 33 Data Register High */
#define CAN_MODATAH34	(*( CAN_MODATAH_type *) 0xF0004A54u)	/* Message Object 34 Data Register High */
#define CAN_MODATAH35	(*( CAN_MODATAH_type *) 0xF0004A74u)	/* Message Object 35 Data Register High */
#define CAN_MODATAH36	(*( CAN_MODATAH_type *) 0xF0004A94u)	/* Message Object 36 Data Register High */
#define CAN_MODATAH37	(*( CAN_MODATAH_type *) 0xF0004AB4u)	/* Message Object 37 Data Register High */
#define CAN_MODATAH38	(*( CAN_MODATAH_type *) 0xF0004AD4u)	/* Message Object 38 Data Register High */
#define CAN_MODATAH39	(*( CAN_MODATAH_type *) 0xF0004AF4u)	/* Message Object 39 Data Register High */
#define CAN_MODATAH40	(*( CAN_MODATAH_type *) 0xF0004B14u)	/* Message Object 40 Data Register High */
#define CAN_MODATAH41	(*( CAN_MODATAH_type *) 0xF0004B34u)	/* Message Object 41 Data Register High */
#define CAN_MODATAH42	(*( CAN_MODATAH_type *) 0xF0004B54u)	/* Message Object 42 Data Register High */
#define CAN_MODATAH43	(*( CAN_MODATAH_type *) 0xF0004B74u)	/* Message Object 43 Data Register High */
#define CAN_MODATAH44	(*( CAN_MODATAH_type *) 0xF0004B94u)	/* Message Object 44 Data Register High */
#define CAN_MODATAH45	(*( CAN_MODATAH_type *) 0xF0004BB4u)	/* Message Object 45 Data Register High */
#define CAN_MODATAH46	(*( CAN_MODATAH_type *) 0xF0004BD4u)	/* Message Object 46 Data Register High */
#define CAN_MODATAH47	(*( CAN_MODATAH_type *) 0xF0004BF4u)	/* Message Object 47 Data Register High */
#define CAN_MODATAH48	(*( CAN_MODATAH_type *) 0xF0004C14u)	/* Message Object 48 Data Register High */
#define CAN_MODATAH49	(*( CAN_MODATAH_type *) 0xF0004C34u)	/* Message Object 49 Data Register High */
#define CAN_MODATAH50	(*( CAN_MODATAH_type *) 0xF0004C54u)	/* Message Object 50 Data Register High */
#define CAN_MODATAH51	(*( CAN_MODATAH_type *) 0xF0004C74u)	/* Message Object 51 Data Register High */
#define CAN_MODATAH52	(*( CAN_MODATAH_type *) 0xF0004C94u)	/* Message Object 52 Data Register High */
#define CAN_MODATAH53	(*( CAN_MODATAH_type *) 0xF0004CB4u)	/* Message Object 53 Data Register High */
#define CAN_MODATAH54	(*( CAN_MODATAH_type *) 0xF0004CD4u)	/* Message Object 54 Data Register High */
#define CAN_MODATAH55	(*( CAN_MODATAH_type *) 0xF0004CF4u)	/* Message Object 55 Data Register High */
#define CAN_MODATAH56	(*( CAN_MODATAH_type *) 0xF0004D14u)	/* Message Object 56 Data Register High */
#define CAN_MODATAH57	(*( CAN_MODATAH_type *) 0xF0004D34u)	/* Message Object 57 Data Register High */
#define CAN_MODATAH58	(*( CAN_MODATAH_type *) 0xF0004D54u)	/* Message Object 58 Data Register High */
#define CAN_MODATAH59	(*( CAN_MODATAH_type *) 0xF0004D74u)	/* Message Object 59 Data Register High */
#define CAN_MODATAH60	(*( CAN_MODATAH_type *) 0xF0004D94u)	/* Message Object 60 Data Register High */
#define CAN_MODATAH61	(*( CAN_MODATAH_type *) 0xF0004DB4u)	/* Message Object 61 Data Register High */
#define CAN_MODATAH62	(*( CAN_MODATAH_type *) 0xF0004DD4u)	/* Message Object 62 Data Register High */
#define CAN_MODATAH63	(*( CAN_MODATAH_type *) 0xF0004DF4u)	/* Message Object 63 Data Register High */
#define CAN_MODATAH64	(*( CAN_MODATAH_type *) 0xF0004E14u)	/* Message Object 64 Data Register High */
#define CAN_MODATAH65	(*( CAN_MODATAH_type *) 0xF0004E34u)	/* Message Object 65 Data Register High */
#define CAN_MODATAH66	(*( CAN_MODATAH_type *) 0xF0004E54u)	/* Message Object 66 Data Register High */
#define CAN_MODATAH67	(*( CAN_MODATAH_type *) 0xF0004E74u)	/* Message Object 67 Data Register High */
#define CAN_MODATAH68	(*( CAN_MODATAH_type *) 0xF0004E94u)	/* Message Object 68 Data Register High */
#define CAN_MODATAH69	(*( CAN_MODATAH_type *) 0xF0004EB4u)	/* Message Object 69 Data Register High */
#define CAN_MODATAH70	(*( CAN_MODATAH_type *) 0xF0004ED4u)	/* Message Object 70 Data Register High */
#define CAN_MODATAH71	(*( CAN_MODATAH_type *) 0xF0004EF4u)	/* Message Object 71 Data Register High */
#define CAN_MODATAH72	(*( CAN_MODATAH_type *) 0xF0004F14u)	/* Message Object 72 Data Register High */
#define CAN_MODATAH73	(*( CAN_MODATAH_type *) 0xF0004F34u)	/* Message Object 73 Data Register High */
#define CAN_MODATAH74	(*( CAN_MODATAH_type *) 0xF0004F54u)	/* Message Object 74 Data Register High */
#define CAN_MODATAH75	(*( CAN_MODATAH_type *) 0xF0004F74u)	/* Message Object 75 Data Register High */
#define CAN_MODATAH76	(*( CAN_MODATAH_type *) 0xF0004F94u)	/* Message Object 76 Data Register High */
#define CAN_MODATAH77	(*( CAN_MODATAH_type *) 0xF0004FB4u)	/* Message Object 77 Data Register High */
#define CAN_MODATAH78	(*( CAN_MODATAH_type *) 0xF0004FD4u)	/* Message Object 78 Data Register High */
#define CAN_MODATAH79	(*( CAN_MODATAH_type *) 0xF0004FF4u)	/* Message Object 79 Data Register High */
#define CAN_MODATAH80	(*( CAN_MODATAH_type *) 0xF0005014u)	/* Message Object 80 Data Register High */
#define CAN_MODATAH81	(*( CAN_MODATAH_type *) 0xF0005034u)	/* Message Object 81 Data Register High */
#define CAN_MODATAH82	(*( CAN_MODATAH_type *) 0xF0005054u)	/* Message Object 82 Data Register High */
#define CAN_MODATAH83	(*( CAN_MODATAH_type *) 0xF0005074u)	/* Message Object 83 Data Register High */
#define CAN_MODATAH84	(*( CAN_MODATAH_type *) 0xF0005094u)	/* Message Object 84 Data Register High */
#define CAN_MODATAH85	(*( CAN_MODATAH_type *) 0xF00050B4u)	/* Message Object 85 Data Register High */
#define CAN_MODATAH86	(*( CAN_MODATAH_type *) 0xF00050D4u)	/* Message Object 86 Data Register High */
#define CAN_MODATAH87	(*( CAN_MODATAH_type *) 0xF00050F4u)	/* Message Object 87 Data Register High */
#define CAN_MODATAH88	(*( CAN_MODATAH_type *) 0xF0005114u)	/* Message Object 88 Data Register High */
#define CAN_MODATAH89	(*( CAN_MODATAH_type *) 0xF0005134u)	/* Message Object 89 Data Register High */
#define CAN_MODATAH90	(*( CAN_MODATAH_type *) 0xF0005154u)	/* Message Object 90 Data Register High */
#define CAN_MODATAH91	(*( CAN_MODATAH_type *) 0xF0005174u)	/* Message Object 91 Data Register High */
#define CAN_MODATAH92	(*( CAN_MODATAH_type *) 0xF0005194u)	/* Message Object 92 Data Register High */
#define CAN_MODATAH93	(*( CAN_MODATAH_type *) 0xF00051B4u)	/* Message Object 93 Data Register High */
#define CAN_MODATAH94	(*( CAN_MODATAH_type *) 0xF00051D4u)	/* Message Object 94 Data Register High */
#define CAN_MODATAH95	(*( CAN_MODATAH_type *) 0xF00051F4u)	/* Message Object 95 Data Register High */
#define CAN_MODATAH96	(*( CAN_MODATAH_type *) 0xF0005214u)	/* Message Object 96 Data Register High */
#define CAN_MODATAH97	(*( CAN_MODATAH_type *) 0xF0005234u)	/* Message Object 97 Data Register High */
#define CAN_MODATAH98	(*( CAN_MODATAH_type *) 0xF0005254u)	/* Message Object 98 Data Register High */
#define CAN_MODATAH99	(*( CAN_MODATAH_type *) 0xF0005274u)	/* Message Object 99 Data Register High */
#define CAN_MODATAH100	(*( CAN_MODATAH_type *) 0xF0005294u)	/* Message Object 100 Data Register High */
#define CAN_MODATAH101	(*( CAN_MODATAH_type *) 0xF00052B4u)	/* Message Object 101 Data Register High */
#define CAN_MODATAH102	(*( CAN_MODATAH_type *) 0xF00052D4u)	/* Message Object 102 Data Register High */
#define CAN_MODATAH103	(*( CAN_MODATAH_type *) 0xF00052F4u)	/* Message Object 103 Data Register High */
#define CAN_MODATAH104	(*( CAN_MODATAH_type *) 0xF0005314u)	/* Message Object 104 Data Register High */
#define CAN_MODATAH105	(*( CAN_MODATAH_type *) 0xF0005334u)	/* Message Object 105 Data Register High */
#define CAN_MODATAH106	(*( CAN_MODATAH_type *) 0xF0005354u)	/* Message Object 106 Data Register High */
#define CAN_MODATAH107	(*( CAN_MODATAH_type *) 0xF0005374u)	/* Message Object 107 Data Register High */
#define CAN_MODATAH108	(*( CAN_MODATAH_type *) 0xF0005394u)	/* Message Object 108 Data Register High */
#define CAN_MODATAH109	(*( CAN_MODATAH_type *) 0xF00053B4u)	/* Message Object 109 Data Register High */
#define CAN_MODATAH110	(*( CAN_MODATAH_type *) 0xF00053D4u)	/* Message Object 110 Data Register High */
#define CAN_MODATAH111	(*( CAN_MODATAH_type *) 0xF00053F4u)	/* Message Object 111 Data Register High */
#define CAN_MODATAH112	(*( CAN_MODATAH_type *) 0xF0005414u)	/* Message Object 112 Data Register High */
#define CAN_MODATAH113	(*( CAN_MODATAH_type *) 0xF0005434u)	/* Message Object 113 Data Register High */
#define CAN_MODATAH114	(*( CAN_MODATAH_type *) 0xF0005454u)	/* Message Object 114 Data Register High */
#define CAN_MODATAH115	(*( CAN_MODATAH_type *) 0xF0005474u)	/* Message Object 115 Data Register High */
#define CAN_MODATAH116	(*( CAN_MODATAH_type *) 0xF0005494u)	/* Message Object 116 Data Register High */
#define CAN_MODATAH117	(*( CAN_MODATAH_type *) 0xF00054B4u)	/* Message Object 117 Data Register High */
#define CAN_MODATAH118	(*( CAN_MODATAH_type *) 0xF00054D4u)	/* Message Object 118 Data Register High */
#define CAN_MODATAH119	(*( CAN_MODATAH_type *) 0xF00054F4u)	/* Message Object 119 Data Register High */
#define CAN_MODATAH120	(*( CAN_MODATAH_type *) 0xF0005514u)	/* Message Object 120 Data Register High */
#define CAN_MODATAH121	(*( CAN_MODATAH_type *) 0xF0005534u)	/* Message Object 121 Data Register High */
#define CAN_MODATAH122	(*( CAN_MODATAH_type *) 0xF0005554u)	/* Message Object 122 Data Register High */
#define CAN_MODATAH123	(*( CAN_MODATAH_type *) 0xF0005574u)	/* Message Object 123 Data Register High */
#define CAN_MODATAH124	(*( CAN_MODATAH_type *) 0xF0005594u)	/* Message Object 124 Data Register High */
#define CAN_MODATAH125	(*( CAN_MODATAH_type *) 0xF00055B4u)	/* Message Object 125 Data Register High */
#define CAN_MODATAH126	(*( CAN_MODATAH_type *) 0xF00055D4u)	/* Message Object 126 Data Register High */
#define CAN_MODATAH127	(*( CAN_MODATAH_type *) 0xF00055F4u)	/* Message Object 127 Data Register High */

typedef volatile union
{
	struct
	{ 
		unsigned int ID             : 29;
		unsigned int IDE            : 1;
		unsigned int PRI            : 2;
	} B;
	int I;
	unsigned int U;

} CAN_MOAR_type;
#define CAN_MOAR0	(*( CAN_MOAR_type *) 0xF0004618u)	/* Message Object 0 Arbitration Register */
#define CAN_MOAR1	(*( CAN_MOAR_type *) 0xF0004638u)	/* Message Object 1 Arbitration Register */
#define CAN_MOAR2	(*( CAN_MOAR_type *) 0xF0004658u)	/* Message Object 2 Arbitration Register */
#define CAN_MOAR3	(*( CAN_MOAR_type *) 0xF0004678u)	/* Message Object 3 Arbitration Register */
#define CAN_MOAR4	(*( CAN_MOAR_type *) 0xF0004698u)	/* Message Object 4 Arbitration Register */
#define CAN_MOAR5	(*( CAN_MOAR_type *) 0xF00046B8u)	/* Message Object 5 Arbitration Register */
#define CAN_MOAR6	(*( CAN_MOAR_type *) 0xF00046D8u)	/* Message Object 6 Arbitration Register */
#define CAN_MOAR7	(*( CAN_MOAR_type *) 0xF00046F8u)	/* Message Object 7 Arbitration Register */
#define CAN_MOAR8	(*( CAN_MOAR_type *) 0xF0004718u)	/* Message Object 8 Arbitration Register */
#define CAN_MOAR9	(*( CAN_MOAR_type *) 0xF0004738u)	/* Message Object 9 Arbitration Register */
#define CAN_MOAR10	(*( CAN_MOAR_type *) 0xF0004758u)	/* Message Object 10 Arbitration Register */
#define CAN_MOAR11	(*( CAN_MOAR_type *) 0xF0004778u)	/* Message Object 11 Arbitration Register */
#define CAN_MOAR12	(*( CAN_MOAR_type *) 0xF0004798u)	/* Message Object 12 Arbitration Register */
#define CAN_MOAR13	(*( CAN_MOAR_type *) 0xF00047B8u)	/* Message Object 13 Arbitration Register */
#define CAN_MOAR14	(*( CAN_MOAR_type *) 0xF00047D8u)	/* Message Object 14 Arbitration Register */
#define CAN_MOAR15	(*( CAN_MOAR_type *) 0xF00047F8u)	/* Message Object 15 Arbitration Register */
#define CAN_MOAR16	(*( CAN_MOAR_type *) 0xF0004818u)	/* Message Object 16 Arbitration Register */
#define CAN_MOAR17	(*( CAN_MOAR_type *) 0xF0004838u)	/* Message Object 17 Arbitration Register */
#define CAN_MOAR18	(*( CAN_MOAR_type *) 0xF0004858u)	/* Message Object 18 Arbitration Register */
#define CAN_MOAR19	(*( CAN_MOAR_type *) 0xF0004878u)	/* Message Object 19 Arbitration Register */
#define CAN_MOAR20	(*( CAN_MOAR_type *) 0xF0004898u)	/* Message Object 20 Arbitration Register */
#define CAN_MOAR21	(*( CAN_MOAR_type *) 0xF00048B8u)	/* Message Object 21 Arbitration Register */
#define CAN_MOAR22	(*( CAN_MOAR_type *) 0xF00048D8u)	/* Message Object 22 Arbitration Register */
#define CAN_MOAR23	(*( CAN_MOAR_type *) 0xF00048F8u)	/* Message Object 23 Arbitration Register */
#define CAN_MOAR24	(*( CAN_MOAR_type *) 0xF0004918u)	/* Message Object 24 Arbitration Register */
#define CAN_MOAR25	(*( CAN_MOAR_type *) 0xF0004938u)	/* Message Object 25 Arbitration Register */
#define CAN_MOAR26	(*( CAN_MOAR_type *) 0xF0004958u)	/* Message Object 26 Arbitration Register */
#define CAN_MOAR27	(*( CAN_MOAR_type *) 0xF0004978u)	/* Message Object 27 Arbitration Register */
#define CAN_MOAR28	(*( CAN_MOAR_type *) 0xF0004998u)	/* Message Object 28 Arbitration Register */
#define CAN_MOAR29	(*( CAN_MOAR_type *) 0xF00049B8u)	/* Message Object 29 Arbitration Register */
#define CAN_MOAR30	(*( CAN_MOAR_type *) 0xF00049D8u)	/* Message Object 30 Arbitration Register */
#define CAN_MOAR31	(*( CAN_MOAR_type *) 0xF00049F8u)	/* Message Object 31 Arbitration Register */
#define CAN_MOAR32	(*( CAN_MOAR_type *) 0xF0004A18u)	/* Message Object 32 Arbitration Register */
#define CAN_MOAR33	(*( CAN_MOAR_type *) 0xF0004A38u)	/* Message Object 33 Arbitration Register */
#define CAN_MOAR34	(*( CAN_MOAR_type *) 0xF0004A58u)	/* Message Object 34 Arbitration Register */
#define CAN_MOAR35	(*( CAN_MOAR_type *) 0xF0004A78u)	/* Message Object 35 Arbitration Register */
#define CAN_MOAR36	(*( CAN_MOAR_type *) 0xF0004A98u)	/* Message Object 36 Arbitration Register */
#define CAN_MOAR37	(*( CAN_MOAR_type *) 0xF0004AB8u)	/* Message Object 37 Arbitration Register */
#define CAN_MOAR38	(*( CAN_MOAR_type *) 0xF0004AD8u)	/* Message Object 38 Arbitration Register */
#define CAN_MOAR39	(*( CAN_MOAR_type *) 0xF0004AF8u)	/* Message Object 39 Arbitration Register */
#define CAN_MOAR40	(*( CAN_MOAR_type *) 0xF0004B18u)	/* Message Object 40 Arbitration Register */
#define CAN_MOAR41	(*( CAN_MOAR_type *) 0xF0004B38u)	/* Message Object 41 Arbitration Register */
#define CAN_MOAR42	(*( CAN_MOAR_type *) 0xF0004B58u)	/* Message Object 42 Arbitration Register */
#define CAN_MOAR43	(*( CAN_MOAR_type *) 0xF0004B78u)	/* Message Object 43 Arbitration Register */
#define CAN_MOAR44	(*( CAN_MOAR_type *) 0xF0004B98u)	/* Message Object 44 Arbitration Register */
#define CAN_MOAR45	(*( CAN_MOAR_type *) 0xF0004BB8u)	/* Message Object 45 Arbitration Register */
#define CAN_MOAR46	(*( CAN_MOAR_type *) 0xF0004BD8u)	/* Message Object 46 Arbitration Register */
#define CAN_MOAR47	(*( CAN_MOAR_type *) 0xF0004BF8u)	/* Message Object 47 Arbitration Register */
#define CAN_MOAR48	(*( CAN_MOAR_type *) 0xF0004C18u)	/* Message Object 48 Arbitration Register */
#define CAN_MOAR49	(*( CAN_MOAR_type *) 0xF0004C38u)	/* Message Object 49 Arbitration Register */
#define CAN_MOAR50	(*( CAN_MOAR_type *) 0xF0004C58u)	/* Message Object 50 Arbitration Register */
#define CAN_MOAR51	(*( CAN_MOAR_type *) 0xF0004C78u)	/* Message Object 51 Arbitration Register */
#define CAN_MOAR52	(*( CAN_MOAR_type *) 0xF0004C98u)	/* Message Object 52 Arbitration Register */
#define CAN_MOAR53	(*( CAN_MOAR_type *) 0xF0004CB8u)	/* Message Object 53 Arbitration Register */
#define CAN_MOAR54	(*( CAN_MOAR_type *) 0xF0004CD8u)	/* Message Object 54 Arbitration Register */
#define CAN_MOAR55	(*( CAN_MOAR_type *) 0xF0004CF8u)	/* Message Object 55 Arbitration Register */
#define CAN_MOAR56	(*( CAN_MOAR_type *) 0xF0004D18u)	/* Message Object 56 Arbitration Register */
#define CAN_MOAR57	(*( CAN_MOAR_type *) 0xF0004D38u)	/* Message Object 57 Arbitration Register */
#define CAN_MOAR58	(*( CAN_MOAR_type *) 0xF0004D58u)	/* Message Object 58 Arbitration Register */
#define CAN_MOAR59	(*( CAN_MOAR_type *) 0xF0004D78u)	/* Message Object 59 Arbitration Register */
#define CAN_MOAR60	(*( CAN_MOAR_type *) 0xF0004D98u)	/* Message Object 60 Arbitration Register */
#define CAN_MOAR61	(*( CAN_MOAR_type *) 0xF0004DB8u)	/* Message Object 61 Arbitration Register */
#define CAN_MOAR62	(*( CAN_MOAR_type *) 0xF0004DD8u)	/* Message Object 62 Arbitration Register */
#define CAN_MOAR63	(*( CAN_MOAR_type *) 0xF0004DF8u)	/* Message Object 63 Arbitration Register */
#define CAN_MOAR64	(*( CAN_MOAR_type *) 0xF0004E18u)	/* Message Object 64 Arbitration Register */
#define CAN_MOAR65	(*( CAN_MOAR_type *) 0xF0004E38u)	/* Message Object 65 Arbitration Register */
#define CAN_MOAR66	(*( CAN_MOAR_type *) 0xF0004E58u)	/* Message Object 66 Arbitration Register */
#define CAN_MOAR67	(*( CAN_MOAR_type *) 0xF0004E78u)	/* Message Object 67 Arbitration Register */
#define CAN_MOAR68	(*( CAN_MOAR_type *) 0xF0004E98u)	/* Message Object 68 Arbitration Register */
#define CAN_MOAR69	(*( CAN_MOAR_type *) 0xF0004EB8u)	/* Message Object 69 Arbitration Register */
#define CAN_MOAR70	(*( CAN_MOAR_type *) 0xF0004ED8u)	/* Message Object 70 Arbitration Register */
#define CAN_MOAR71	(*( CAN_MOAR_type *) 0xF0004EF8u)	/* Message Object 71 Arbitration Register */
#define CAN_MOAR72	(*( CAN_MOAR_type *) 0xF0004F18u)	/* Message Object 72 Arbitration Register */
#define CAN_MOAR73	(*( CAN_MOAR_type *) 0xF0004F38u)	/* Message Object 73 Arbitration Register */
#define CAN_MOAR74	(*( CAN_MOAR_type *) 0xF0004F58u)	/* Message Object 74 Arbitration Register */
#define CAN_MOAR75	(*( CAN_MOAR_type *) 0xF0004F78u)	/* Message Object 75 Arbitration Register */
#define CAN_MOAR76	(*( CAN_MOAR_type *) 0xF0004F98u)	/* Message Object 76 Arbitration Register */
#define CAN_MOAR77	(*( CAN_MOAR_type *) 0xF0004FB8u)	/* Message Object 77 Arbitration Register */
#define CAN_MOAR78	(*( CAN_MOAR_type *) 0xF0004FD8u)	/* Message Object 78 Arbitration Register */
#define CAN_MOAR79	(*( CAN_MOAR_type *) 0xF0004FF8u)	/* Message Object 79 Arbitration Register */
#define CAN_MOAR80	(*( CAN_MOAR_type *) 0xF0005018u)	/* Message Object 80 Arbitration Register */
#define CAN_MOAR81	(*( CAN_MOAR_type *) 0xF0005038u)	/* Message Object 81 Arbitration Register */
#define CAN_MOAR82	(*( CAN_MOAR_type *) 0xF0005058u)	/* Message Object 82 Arbitration Register */
#define CAN_MOAR83	(*( CAN_MOAR_type *) 0xF0005078u)	/* Message Object 83 Arbitration Register */
#define CAN_MOAR84	(*( CAN_MOAR_type *) 0xF0005098u)	/* Message Object 84 Arbitration Register */
#define CAN_MOAR85	(*( CAN_MOAR_type *) 0xF00050B8u)	/* Message Object 85 Arbitration Register */
#define CAN_MOAR86	(*( CAN_MOAR_type *) 0xF00050D8u)	/* Message Object 86 Arbitration Register */
#define CAN_MOAR87	(*( CAN_MOAR_type *) 0xF00050F8u)	/* Message Object 87 Arbitration Register */
#define CAN_MOAR88	(*( CAN_MOAR_type *) 0xF0005118u)	/* Message Object 88 Arbitration Register */
#define CAN_MOAR89	(*( CAN_MOAR_type *) 0xF0005138u)	/* Message Object 89 Arbitration Register */
#define CAN_MOAR90	(*( CAN_MOAR_type *) 0xF0005158u)	/* Message Object 90 Arbitration Register */
#define CAN_MOAR91	(*( CAN_MOAR_type *) 0xF0005178u)	/* Message Object 91 Arbitration Register */
#define CAN_MOAR92	(*( CAN_MOAR_type *) 0xF0005198u)	/* Message Object 92 Arbitration Register */
#define CAN_MOAR93	(*( CAN_MOAR_type *) 0xF00051B8u)	/* Message Object 93 Arbitration Register */
#define CAN_MOAR94	(*( CAN_MOAR_type *) 0xF00051D8u)	/* Message Object 94 Arbitration Register */
#define CAN_MOAR95	(*( CAN_MOAR_type *) 0xF00051F8u)	/* Message Object 95 Arbitration Register */
#define CAN_MOAR96	(*( CAN_MOAR_type *) 0xF0005218u)	/* Message Object 96 Arbitration Register */
#define CAN_MOAR97	(*( CAN_MOAR_type *) 0xF0005238u)	/* Message Object 97 Arbitration Register */
#define CAN_MOAR98	(*( CAN_MOAR_type *) 0xF0005258u)	/* Message Object 98 Arbitration Register */
#define CAN_MOAR99	(*( CAN_MOAR_type *) 0xF0005278u)	/* Message Object 99 Arbitration Register */
#define CAN_MOAR100	(*( CAN_MOAR_type *) 0xF0005298u)	/* Message Object 100 Arbitration Register */
#define CAN_MOAR101	(*( CAN_MOAR_type *) 0xF00052B8u)	/* Message Object 101 Arbitration Register */
#define CAN_MOAR102	(*( CAN_MOAR_type *) 0xF00052D8u)	/* Message Object 102 Arbitration Register */
#define CAN_MOAR103	(*( CAN_MOAR_type *) 0xF00052F8u)	/* Message Object 103 Arbitration Register */
#define CAN_MOAR104	(*( CAN_MOAR_type *) 0xF0005318u)	/* Message Object 104 Arbitration Register */
#define CAN_MOAR105	(*( CAN_MOAR_type *) 0xF0005338u)	/* Message Object 105 Arbitration Register */
#define CAN_MOAR106	(*( CAN_MOAR_type *) 0xF0005358u)	/* Message Object 106 Arbitration Register */
#define CAN_MOAR107	(*( CAN_MOAR_type *) 0xF0005378u)	/* Message Object 107 Arbitration Register */
#define CAN_MOAR108	(*( CAN_MOAR_type *) 0xF0005398u)	/* Message Object 108 Arbitration Register */
#define CAN_MOAR109	(*( CAN_MOAR_type *) 0xF00053B8u)	/* Message Object 109 Arbitration Register */
#define CAN_MOAR110	(*( CAN_MOAR_type *) 0xF00053D8u)	/* Message Object 110 Arbitration Register */
#define CAN_MOAR111	(*( CAN_MOAR_type *) 0xF00053F8u)	/* Message Object 111 Arbitration Register */
#define CAN_MOAR112	(*( CAN_MOAR_type *) 0xF0005418u)	/* Message Object 112 Arbitration Register */
#define CAN_MOAR113	(*( CAN_MOAR_type *) 0xF0005438u)	/* Message Object 113 Arbitration Register */
#define CAN_MOAR114	(*( CAN_MOAR_type *) 0xF0005458u)	/* Message Object 114 Arbitration Register */
#define CAN_MOAR115	(*( CAN_MOAR_type *) 0xF0005478u)	/* Message Object 115 Arbitration Register */
#define CAN_MOAR116	(*( CAN_MOAR_type *) 0xF0005498u)	/* Message Object 116 Arbitration Register */
#define CAN_MOAR117	(*( CAN_MOAR_type *) 0xF00054B8u)	/* Message Object 117 Arbitration Register */
#define CAN_MOAR118	(*( CAN_MOAR_type *) 0xF00054D8u)	/* Message Object 118 Arbitration Register */
#define CAN_MOAR119	(*( CAN_MOAR_type *) 0xF00054F8u)	/* Message Object 119 Arbitration Register */
#define CAN_MOAR120	(*( CAN_MOAR_type *) 0xF0005518u)	/* Message Object 120 Arbitration Register */
#define CAN_MOAR121	(*( CAN_MOAR_type *) 0xF0005538u)	/* Message Object 121 Arbitration Register */
#define CAN_MOAR122	(*( CAN_MOAR_type *) 0xF0005558u)	/* Message Object 122 Arbitration Register */
#define CAN_MOAR123	(*( CAN_MOAR_type *) 0xF0005578u)	/* Message Object 123 Arbitration Register */
#define CAN_MOAR124	(*( CAN_MOAR_type *) 0xF0005598u)	/* Message Object 124 Arbitration Register */
#define CAN_MOAR125	(*( CAN_MOAR_type *) 0xF00055B8u)	/* Message Object 125 Arbitration Register */
#define CAN_MOAR126	(*( CAN_MOAR_type *) 0xF00055D8u)	/* Message Object 126 Arbitration Register */
#define CAN_MOAR127	(*( CAN_MOAR_type *) 0xF00055F8u)	/* Message Object 127 Arbitration Register */

typedef volatile union
{
	struct
	{ 
		unsigned int RXPND          : 1;
		unsigned int TXPND          : 1;
		unsigned int RXUPD          : 1;
		unsigned int NEWDAT         : 1;
		unsigned int MSGLST         : 1;
		unsigned int MSGVAL         : 1;
		unsigned int RTSEL          : 1;
		unsigned int RXEN           : 1;
		unsigned int TXRQ           : 1;
		unsigned int TXEN0          : 1;
		unsigned int TXEN1          : 1;
		unsigned int DIR            : 1;
		/* const */ unsigned int LIST           : 4;
		unsigned int CTRL           : 16;
	} B;
	int I;
	unsigned int U;

} CAN_MOCTR_type;
#define CAN_MOCTR0	(*( CAN_MOCTR_type *) 0xF000461Cu)	/* Message Object 0 Control Register */
#define CAN_MOCTR1	(*( CAN_MOCTR_type *) 0xF000463Cu)	/* Message Object 1 Control Register */
#define CAN_MOCTR2	(*( CAN_MOCTR_type *) 0xF000465Cu)	/* Message Object 2 Control Register */
#define CAN_MOCTR3	(*( CAN_MOCTR_type *) 0xF000467Cu)	/* Message Object 3 Control Register */
#define CAN_MOCTR4	(*( CAN_MOCTR_type *) 0xF000469Cu)	/* Message Object 4 Control Register */
#define CAN_MOCTR5	(*( CAN_MOCTR_type *) 0xF00046BCu)	/* Message Object 5 Control Register */
#define CAN_MOCTR6	(*( CAN_MOCTR_type *) 0xF00046DCu)	/* Message Object 6 Control Register */
#define CAN_MOCTR7	(*( CAN_MOCTR_type *) 0xF00046FCu)	/* Message Object 7 Control Register */
#define CAN_MOCTR8	(*( CAN_MOCTR_type *) 0xF000471Cu)	/* Message Object 8 Control Register */
#define CAN_MOCTR9	(*( CAN_MOCTR_type *) 0xF000473Cu)	/* Message Object 9 Control Register */
#define CAN_MOCTR10	(*( CAN_MOCTR_type *) 0xF000475Cu)	/* Message Object 10 Control Register */
#define CAN_MOCTR11	(*( CAN_MOCTR_type *) 0xF000477Cu)	/* Message Object 11 Control Register */
#define CAN_MOCTR12	(*( CAN_MOCTR_type *) 0xF000479Cu)	/* Message Object 12 Control Register */
#define CAN_MOCTR13	(*( CAN_MOCTR_type *) 0xF00047BCu)	/* Message Object 13 Control Register */
#define CAN_MOCTR14	(*( CAN_MOCTR_type *) 0xF00047DCu)	/* Message Object 14 Control Register */
#define CAN_MOCTR15	(*( CAN_MOCTR_type *) 0xF00047FCu)	/* Message Object 15 Control Register */
#define CAN_MOCTR16	(*( CAN_MOCTR_type *) 0xF000481Cu)	/* Message Object 16 Control Register */
#define CAN_MOCTR17	(*( CAN_MOCTR_type *) 0xF000483Cu)	/* Message Object 17 Control Register */
#define CAN_MOCTR18	(*( CAN_MOCTR_type *) 0xF000485Cu)	/* Message Object 18 Control Register */
#define CAN_MOCTR19	(*( CAN_MOCTR_type *) 0xF000487Cu)	/* Message Object 19 Control Register */
#define CAN_MOCTR20	(*( CAN_MOCTR_type *) 0xF000489Cu)	/* Message Object 20 Control Register */
#define CAN_MOCTR21	(*( CAN_MOCTR_type *) 0xF00048BCu)	/* Message Object 21 Control Register */
#define CAN_MOCTR22	(*( CAN_MOCTR_type *) 0xF00048DCu)	/* Message Object 22 Control Register */
#define CAN_MOCTR23	(*( CAN_MOCTR_type *) 0xF00048FCu)	/* Message Object 23 Control Register */
#define CAN_MOCTR24	(*( CAN_MOCTR_type *) 0xF000491Cu)	/* Message Object 24 Control Register */
#define CAN_MOCTR25	(*( CAN_MOCTR_type *) 0xF000493Cu)	/* Message Object 25 Control Register */
#define CAN_MOCTR26	(*( CAN_MOCTR_type *) 0xF000495Cu)	/* Message Object 26 Control Register */
#define CAN_MOCTR27	(*( CAN_MOCTR_type *) 0xF000497Cu)	/* Message Object 27 Control Register */
#define CAN_MOCTR28	(*( CAN_MOCTR_type *) 0xF000499Cu)	/* Message Object 28 Control Register */
#define CAN_MOCTR29	(*( CAN_MOCTR_type *) 0xF00049BCu)	/* Message Object 29 Control Register */
#define CAN_MOCTR30	(*( CAN_MOCTR_type *) 0xF00049DCu)	/* Message Object 30 Control Register */
#define CAN_MOCTR31	(*( CAN_MOCTR_type *) 0xF00049FCu)	/* Message Object 31 Control Register */
#define CAN_MOCTR32	(*( CAN_MOCTR_type *) 0xF0004A1Cu)	/* Message Object 32 Control Register */
#define CAN_MOCTR33	(*( CAN_MOCTR_type *) 0xF0004A3Cu)	/* Message Object 33 Control Register */
#define CAN_MOCTR34	(*( CAN_MOCTR_type *) 0xF0004A5Cu)	/* Message Object 34 Control Register */
#define CAN_MOCTR35	(*( CAN_MOCTR_type *) 0xF0004A7Cu)	/* Message Object 35 Control Register */
#define CAN_MOCTR36	(*( CAN_MOCTR_type *) 0xF0004A9Cu)	/* Message Object 36 Control Register */
#define CAN_MOCTR37	(*( CAN_MOCTR_type *) 0xF0004ABCu)	/* Message Object 37 Control Register */
#define CAN_MOCTR38	(*( CAN_MOCTR_type *) 0xF0004ADCu)	/* Message Object 38 Control Register */
#define CAN_MOCTR39	(*( CAN_MOCTR_type *) 0xF0004AFCu)	/* Message Object 39 Control Register */
#define CAN_MOCTR40	(*( CAN_MOCTR_type *) 0xF0004B1Cu)	/* Message Object 40 Control Register */
#define CAN_MOCTR41	(*( CAN_MOCTR_type *) 0xF0004B3Cu)	/* Message Object 41 Control Register */
#define CAN_MOCTR42	(*( CAN_MOCTR_type *) 0xF0004B5Cu)	/* Message Object 42 Control Register */
#define CAN_MOCTR43	(*( CAN_MOCTR_type *) 0xF0004B7Cu)	/* Message Object 43 Control Register */
#define CAN_MOCTR44	(*( CAN_MOCTR_type *) 0xF0004B9Cu)	/* Message Object 44 Control Register */
#define CAN_MOCTR45	(*( CAN_MOCTR_type *) 0xF0004BBCu)	/* Message Object 45 Control Register */
#define CAN_MOCTR46	(*( CAN_MOCTR_type *) 0xF0004BDCu)	/* Message Object 46 Control Register */
#define CAN_MOCTR47	(*( CAN_MOCTR_type *) 0xF0004BFCu)	/* Message Object 47 Control Register */
#define CAN_MOCTR48	(*( CAN_MOCTR_type *) 0xF0004C1Cu)	/* Message Object 48 Control Register */
#define CAN_MOCTR49	(*( CAN_MOCTR_type *) 0xF0004C3Cu)	/* Message Object 49 Control Register */
#define CAN_MOCTR50	(*( CAN_MOCTR_type *) 0xF0004C5Cu)	/* Message Object 50 Control Register */
#define CAN_MOCTR51	(*( CAN_MOCTR_type *) 0xF0004C7Cu)	/* Message Object 51 Control Register */
#define CAN_MOCTR52	(*( CAN_MOCTR_type *) 0xF0004C9Cu)	/* Message Object 52 Control Register */
#define CAN_MOCTR53	(*( CAN_MOCTR_type *) 0xF0004CBCu)	/* Message Object 53 Control Register */
#define CAN_MOCTR54	(*( CAN_MOCTR_type *) 0xF0004CDCu)	/* Message Object 54 Control Register */
#define CAN_MOCTR55	(*( CAN_MOCTR_type *) 0xF0004CFCu)	/* Message Object 55 Control Register */
#define CAN_MOCTR56	(*( CAN_MOCTR_type *) 0xF0004D1Cu)	/* Message Object 56 Control Register */
#define CAN_MOCTR57	(*( CAN_MOCTR_type *) 0xF0004D3Cu)	/* Message Object 57 Control Register */
#define CAN_MOCTR58	(*( CAN_MOCTR_type *) 0xF0004D5Cu)	/* Message Object 58 Control Register */
#define CAN_MOCTR59	(*( CAN_MOCTR_type *) 0xF0004D7Cu)	/* Message Object 59 Control Register */
#define CAN_MOCTR60	(*( CAN_MOCTR_type *) 0xF0004D9Cu)	/* Message Object 60 Control Register */
#define CAN_MOCTR61	(*( CAN_MOCTR_type *) 0xF0004DBCu)	/* Message Object 61 Control Register */
#define CAN_MOCTR62	(*( CAN_MOCTR_type *) 0xF0004DDCu)	/* Message Object 62 Control Register */
#define CAN_MOCTR63	(*( CAN_MOCTR_type *) 0xF0004DFCu)	/* Message Object 63 Control Register */
#define CAN_MOCTR64	(*( CAN_MOCTR_type *) 0xF0004E1Cu)	/* Message Object 64 Control Register */
#define CAN_MOCTR65	(*( CAN_MOCTR_type *) 0xF0004E3Cu)	/* Message Object 65 Control Register */
#define CAN_MOCTR66	(*( CAN_MOCTR_type *) 0xF0004E5Cu)	/* Message Object 66 Control Register */
#define CAN_MOCTR67	(*( CAN_MOCTR_type *) 0xF0004E7Cu)	/* Message Object 67 Control Register */
#define CAN_MOCTR68	(*( CAN_MOCTR_type *) 0xF0004E9Cu)	/* Message Object 68 Control Register */
#define CAN_MOCTR69	(*( CAN_MOCTR_type *) 0xF0004EBCu)	/* Message Object 69 Control Register */
#define CAN_MOCTR70	(*( CAN_MOCTR_type *) 0xF0004EDCu)	/* Message Object 70 Control Register */
#define CAN_MOCTR71	(*( CAN_MOCTR_type *) 0xF0004EFCu)	/* Message Object 71 Control Register */
#define CAN_MOCTR72	(*( CAN_MOCTR_type *) 0xF0004F1Cu)	/* Message Object 72 Control Register */
#define CAN_MOCTR73	(*( CAN_MOCTR_type *) 0xF0004F3Cu)	/* Message Object 73 Control Register */
#define CAN_MOCTR74	(*( CAN_MOCTR_type *) 0xF0004F5Cu)	/* Message Object 74 Control Register */
#define CAN_MOCTR75	(*( CAN_MOCTR_type *) 0xF0004F7Cu)	/* Message Object 75 Control Register */
#define CAN_MOCTR76	(*( CAN_MOCTR_type *) 0xF0004F9Cu)	/* Message Object 76 Control Register */
#define CAN_MOCTR77	(*( CAN_MOCTR_type *) 0xF0004FBCu)	/* Message Object 77 Control Register */
#define CAN_MOCTR78	(*( CAN_MOCTR_type *) 0xF0004FDCu)	/* Message Object 78 Control Register */
#define CAN_MOCTR79	(*( CAN_MOCTR_type *) 0xF0004FFCu)	/* Message Object 79 Control Register */
#define CAN_MOCTR80	(*( CAN_MOCTR_type *) 0xF000501Cu)	/* Message Object 80 Control Register */
#define CAN_MOCTR81	(*( CAN_MOCTR_type *) 0xF000503Cu)	/* Message Object 81 Control Register */
#define CAN_MOCTR82	(*( CAN_MOCTR_type *) 0xF000505Cu)	/* Message Object 82 Control Register */
#define CAN_MOCTR83	(*( CAN_MOCTR_type *) 0xF000507Cu)	/* Message Object 83 Control Register */
#define CAN_MOCTR84	(*( CAN_MOCTR_type *) 0xF000509Cu)	/* Message Object 84 Control Register */
#define CAN_MOCTR85	(*( CAN_MOCTR_type *) 0xF00050BCu)	/* Message Object 85 Control Register */
#define CAN_MOCTR86	(*( CAN_MOCTR_type *) 0xF00050DCu)	/* Message Object 86 Control Register */
#define CAN_MOCTR87	(*( CAN_MOCTR_type *) 0xF00050FCu)	/* Message Object 87 Control Register */
#define CAN_MOCTR88	(*( CAN_MOCTR_type *) 0xF000511Cu)	/* Message Object 88 Control Register */
#define CAN_MOCTR89	(*( CAN_MOCTR_type *) 0xF000513Cu)	/* Message Object 89 Control Register */
#define CAN_MOCTR90	(*( CAN_MOCTR_type *) 0xF000515Cu)	/* Message Object 90 Control Register */
#define CAN_MOCTR91	(*( CAN_MOCTR_type *) 0xF000517Cu)	/* Message Object 91 Control Register */
#define CAN_MOCTR92	(*( CAN_MOCTR_type *) 0xF000519Cu)	/* Message Object 92 Control Register */
#define CAN_MOCTR93	(*( CAN_MOCTR_type *) 0xF00051BCu)	/* Message Object 93 Control Register */
#define CAN_MOCTR94	(*( CAN_MOCTR_type *) 0xF00051DCu)	/* Message Object 94 Control Register */
#define CAN_MOCTR95	(*( CAN_MOCTR_type *) 0xF00051FCu)	/* Message Object 95 Control Register */
#define CAN_MOCTR96	(*( CAN_MOCTR_type *) 0xF000521Cu)	/* Message Object 96 Control Register */
#define CAN_MOCTR97	(*( CAN_MOCTR_type *) 0xF000523Cu)	/* Message Object 97 Control Register */
#define CAN_MOCTR98	(*( CAN_MOCTR_type *) 0xF000525Cu)	/* Message Object 98 Control Register */
#define CAN_MOCTR99	(*( CAN_MOCTR_type *) 0xF000527Cu)	/* Message Object 99 Control Register */
#define CAN_MOCTR100	(*( CAN_MOCTR_type *) 0xF000529Cu)	/* Message Object 100 Control Register */
#define CAN_MOCTR101	(*( CAN_MOCTR_type *) 0xF00052BCu)	/* Message Object 101 Control Register */
#define CAN_MOCTR102	(*( CAN_MOCTR_type *) 0xF00052DCu)	/* Message Object 102 Control Register */
#define CAN_MOCTR103	(*( CAN_MOCTR_type *) 0xF00052FCu)	/* Message Object 103 Control Register */
#define CAN_MOCTR104	(*( CAN_MOCTR_type *) 0xF000531Cu)	/* Message Object 104 Control Register */
#define CAN_MOCTR105	(*( CAN_MOCTR_type *) 0xF000533Cu)	/* Message Object 105 Control Register */
#define CAN_MOCTR106	(*( CAN_MOCTR_type *) 0xF000535Cu)	/* Message Object 106 Control Register */
#define CAN_MOCTR107	(*( CAN_MOCTR_type *) 0xF000537Cu)	/* Message Object 107 Control Register */
#define CAN_MOCTR108	(*( CAN_MOCTR_type *) 0xF000539Cu)	/* Message Object 108 Control Register */
#define CAN_MOCTR109	(*( CAN_MOCTR_type *) 0xF00053BCu)	/* Message Object 109 Control Register */
#define CAN_MOCTR110	(*( CAN_MOCTR_type *) 0xF00053DCu)	/* Message Object 110 Control Register */
#define CAN_MOCTR111	(*( CAN_MOCTR_type *) 0xF00053FCu)	/* Message Object 111 Control Register */
#define CAN_MOCTR112	(*( CAN_MOCTR_type *) 0xF000541Cu)	/* Message Object 112 Control Register */
#define CAN_MOCTR113	(*( CAN_MOCTR_type *) 0xF000543Cu)	/* Message Object 113 Control Register */
#define CAN_MOCTR114	(*( CAN_MOCTR_type *) 0xF000545Cu)	/* Message Object 114 Control Register */
#define CAN_MOCTR115	(*( CAN_MOCTR_type *) 0xF000547Cu)	/* Message Object 115 Control Register */
#define CAN_MOCTR116	(*( CAN_MOCTR_type *) 0xF000549Cu)	/* Message Object 116 Control Register */
#define CAN_MOCTR117	(*( CAN_MOCTR_type *) 0xF00054BCu)	/* Message Object 117 Control Register */
#define CAN_MOCTR118	(*( CAN_MOCTR_type *) 0xF00054DCu)	/* Message Object 118 Control Register */
#define CAN_MOCTR119	(*( CAN_MOCTR_type *) 0xF00054FCu)	/* Message Object 119 Control Register */
#define CAN_MOCTR120	(*( CAN_MOCTR_type *) 0xF000551Cu)	/* Message Object 120 Control Register */
#define CAN_MOCTR121	(*( CAN_MOCTR_type *) 0xF000553Cu)	/* Message Object 121 Control Register */
#define CAN_MOCTR122	(*( CAN_MOCTR_type *) 0xF000555Cu)	/* Message Object 122 Control Register */
#define CAN_MOCTR123	(*( CAN_MOCTR_type *) 0xF000557Cu)	/* Message Object 123 Control Register */
#define CAN_MOCTR124	(*( CAN_MOCTR_type *) 0xF000559Cu)	/* Message Object 124 Control Register */
#define CAN_MOCTR125	(*( CAN_MOCTR_type *) 0xF00055BCu)	/* Message Object 125 Control Register */
#define CAN_MOCTR126	(*( CAN_MOCTR_type *) 0xF00055DCu)	/* Message Object 126 Control Register */
#define CAN_MOCTR127	(*( CAN_MOCTR_type *) 0xF00055FCu)	/* Message Object 127 Control Register */


/* USB RAM Based Registers */
typedef volatile union
{
	struct
	{ 
		unsigned int SUT0           : 8;
		unsigned int SUT1           : 8;
		unsigned int SUT2           : 8;
		unsigned int SUT3           : 8;
	} B;
	int I;
	unsigned int U;

} USB_SUTL_type;
#define USB_SUTL	(*( USB_SUTL_type *) 0xF00E2000u)	/* Setup Token Low Bytes Register */

typedef volatile union
{
	struct
	{ 
		unsigned int SUT4           : 8;
		unsigned int SUT5           : 8;
		unsigned int SUT6           : 8;
		unsigned int SUT7           : 8;
	} B;
	int I;
	unsigned int U;

} USB_SUTH_type;
#define USB_SUTH	(*( USB_SUTH_type *) 0xF00E2004u)	/* Setup Token High Bytes Register */

typedef volatile union
{
	struct
	{ 
		unsigned int PSZ0           : 3;
		unsigned int BSP0           : 13;
		unsigned int UAP0           : 16;
	} B;
	int I;
	unsigned int U;

} USB_EPUP0_type;
#define USB_EPUP0	(*( USB_EPUP0_type *) 0xF00E2010u)	/* Endpoint n USB pointer register */

typedef volatile union
{
	struct
	{ 
		unsigned int UAVM0          : 1;
		unsigned int                : 2;
		unsigned int BSZ0           : 13;
		unsigned int CAP0           : 16;
	} B;
	int I;
	unsigned int U;

} USB_EPCP0_type;
#define USB_EPCP0	(*( USB_EPCP0_type *) 0xF00E2014u)	/* Endpoint 0 CPU pointer register */

typedef volatile union
{
	struct
	{ 
		unsigned int ACKE0          : 1;
		unsigned int NACKE0         : 1;
		unsigned int BNRE0          : 1;
		unsigned int WNIE0          : 1;
		unsigned int TRIE0          : 1;
		unsigned int                : 11;
		unsigned int INP400         : 1;
		unsigned int INP410         : 1;
		unsigned int INP420         : 1;
		unsigned int                : 1;
		unsigned int INP500         : 1;
		unsigned int INP510         : 1;
		unsigned int INP520         : 1;
		unsigned int                : 1;
		unsigned int INP600         : 1;
		unsigned int INP610         : 1;
		unsigned int INP620         : 1;
		unsigned int                : 1;
		unsigned int INP700         : 1;
		unsigned int INP710         : 1;
		unsigned int INP720         : 1;
		unsigned int                : 1;
	} B;
	int I;
	unsigned int U;

} USB_EPIC0_type;
#define USB_EPIC0	(*( USB_EPIC0_type *) 0xF00E2018u)	/* Endpoint 0 Interrupt Control register */

typedef volatile union
{
	struct
	{ 
		unsigned int WRN0           : 13;
		unsigned int                : 3;
		unsigned int NEB0           : 13;
		unsigned int                : 3;
	} B;
	int I;
	unsigned int U;

} USB_EPBC0_type;
#define USB_EPBC0	(*( USB_EPBC0_type *) 0xF00E201Cu)	/* Endpoint 0 Buffer Control register */

typedef volatile union
{
	struct
	{ 
		unsigned int PSZ1           : 3;
		unsigned int BSP1           : 13;
		unsigned int UAP1           : 16;
	} B;
	int I;
	unsigned int U;

} USB_EPUP1_type;
#define USB_EPUP1	(*( USB_EPUP1_type *) 0xF00E2020u)	/* Endpoint 1 USB pointer register */

typedef volatile union
{
	struct
	{ 
		unsigned int UAVM1          : 1;
		unsigned int                : 2;
		unsigned int BSZ1           : 13;
		unsigned int CAP1           : 16;
	} B;
	int I;
	unsigned int U;

} USB_EPCP1_type;
#define USB_EPCP1	(*( USB_EPCP1_type *) 0xF00E2024u)	/* Endpoint 1 CPU pointer register */

typedef volatile union
{
	struct
	{ 
		unsigned int ACKE1          : 1;
		unsigned int NACKE1         : 1;
		unsigned int BNRE1          : 1;
		unsigned int WNIE1          : 1;
		unsigned int TRIE1          : 1;
		unsigned int                : 11;
		unsigned int INP401         : 1;
		unsigned int INP411         : 1;
		unsigned int INP421         : 1;
		unsigned int                : 1;
		unsigned int INP501         : 1;
		unsigned int INP511         : 1;
		unsigned int INP521         : 1;
		unsigned int                : 1;
		unsigned int INP601         : 1;
		unsigned int INP611         : 1;
		unsigned int INP621         : 1;
		unsigned int                : 1;
		unsigned int INP701         : 1;
		unsigned int INP711         : 1;
		unsigned int INP721         : 1;
		unsigned int                : 1;
	} B;
	int I;
	unsigned int U;

} USB_EPIC1_type;
#define USB_EPIC1	(*( USB_EPIC1_type *) 0xF00E2028u)	/* Endpoint 1 Interrupt Control register */

typedef volatile union
{
	struct
	{ 
		unsigned int WRN1           : 13;
		unsigned int                : 3;
		unsigned int NEB1           : 13;
		unsigned int                : 3;
	} B;
	int I;
	unsigned int U;

} USB_EPBC1_type;
#define USB_EPBC1	(*( USB_EPBC1_type *) 0xF00E202Cu)	/* Endpoint 1 Buffer Control register */

typedef volatile union
{
	struct
	{ 
		unsigned int PSZ2           : 3;
		unsigned int BSP2           : 13;
		unsigned int UAP2           : 16;
	} B;
	int I;
	unsigned int U;

} USB_EPUP2_type;
#define USB_EPUP2	(*( USB_EPUP2_type *) 0xF00E2030u)	/* Endpoint 2 USB pointer register */

typedef volatile union
{
	struct
	{ 
		unsigned int UAVM2          : 1;
		unsigned int                : 2;
		unsigned int BSZ2           : 13;
		unsigned int CAP2           : 16;
	} B;
	int I;
	unsigned int U;

} USB_EPCP2_type;
#define USB_EPCP2	(*( USB_EPCP2_type *) 0xF00E2034u)	/* Endpoint 2 CPU Pointer Register */

typedef volatile union
{
	struct
	{ 
		unsigned int ACKE2          : 1;
		unsigned int NACKE2         : 1;
		unsigned int BNRE2          : 1;
		unsigned int WNIE2          : 1;
		unsigned int TRIE2          : 1;
		unsigned int                : 11;
		unsigned int INP402         : 1;
		unsigned int INP412         : 1;
		unsigned int INP422         : 1;
		unsigned int                : 1;
		unsigned int INP502         : 1;
		unsigned int INP512         : 1;
		unsigned int INP522         : 1;
		unsigned int                : 1;
		unsigned int INP602         : 1;
		unsigned int INP612         : 1;
		unsigned int INP622         : 1;
		unsigned int                : 1;
		unsigned int INP702         : 1;
		unsigned int INP712         : 1;
		unsigned int INP722         : 1;
		unsigned int                : 1;
	} B;
	int I;
	unsigned int U;

} USB_EPIC2_type;
#define USB_EPIC2	(*( USB_EPIC2_type *) 0xF00E2038u)	/* Endpoint 2 Interrupt Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int WRN2           : 13;
		unsigned int                : 3;
		unsigned int NEB2           : 13;
		unsigned int                : 3;
	} B;
	int I;
	unsigned int U;

} USB_EPBC2_type;
#define USB_EPBC2	(*( USB_EPBC2_type *) 0xF00E203Cu)	/* Endpoint 2 Buffer Control register */

typedef volatile union
{
	struct
	{ 
		unsigned int PSZ3           : 3;
		unsigned int BSP3           : 13;
		unsigned int UAP3           : 16;
	} B;
	int I;
	unsigned int U;

} USB_EPUP3_type;
#define USB_EPUP3	(*( USB_EPUP3_type *) 0xF00E2040u)	/* Endpoint 3 USB pointer register */

typedef volatile union
{
	struct
	{ 
		unsigned int UAVM3          : 1;
		unsigned int                : 2;
		unsigned int BSZ3           : 13;
		unsigned int CAP3           : 16;
	} B;
	int I;
	unsigned int U;

} USB_EPCP3_type;
#define USB_EPCP3	(*( USB_EPCP3_type *) 0xF00E2044u)	/* Endpoint 3 CPU Pointer Register */

typedef volatile union
{
	struct
	{ 
		unsigned int ACKE3          : 1;
		unsigned int NACKE3         : 1;
		unsigned int BNRE3          : 1;
		unsigned int WNIE3          : 1;
		unsigned int TRIE3          : 1;
		unsigned int                : 11;
		unsigned int INP403         : 1;
		unsigned int INP413         : 1;
		unsigned int INP423         : 1;
		unsigned int                : 1;
		unsigned int INP503         : 1;
		unsigned int INP513         : 1;
		unsigned int INP523         : 1;
		unsigned int                : 1;
		unsigned int INP603         : 1;
		unsigned int INP613         : 1;
		unsigned int INP623         : 1;
		unsigned int                : 1;
		unsigned int INP703         : 1;
		unsigned int INP713         : 1;
		unsigned int INP723         : 1;
		unsigned int                : 1;
	} B;
	int I;
	unsigned int U;

} USB_EPIC3_type;
#define USB_EPIC3	(*( USB_EPIC3_type *) 0xF00E2048u)	/* Endpoint 3 Interrupt Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int WRN3           : 13;
		unsigned int                : 3;
		unsigned int NEB3           : 13;
		unsigned int                : 3;
	} B;
	int I;
	unsigned int U;

} USB_EPBC3_type;
#define USB_EPBC3	(*( USB_EPBC3_type *) 0xF00E204Cu)	/* Endpoint 3 Buffer Control register */

typedef volatile union
{
	struct
	{ 
		unsigned int PSZ4           : 3;
		unsigned int BSP4           : 13;
		unsigned int UAP4           : 16;
	} B;
	int I;
	unsigned int U;

} USB_EPUP4_type;
#define USB_EPUP4	(*( USB_EPUP4_type *) 0xF00E2050u)	/* Endpoint 4 USB pointer register */

typedef volatile union
{
	struct
	{ 
		unsigned int UAVM4          : 1;
		unsigned int                : 2;
		unsigned int BSZ4           : 13;
		unsigned int CAP4           : 16;
	} B;
	int I;
	unsigned int U;

} USB_EPCP4_type;
#define USB_EPCP4	(*( USB_EPCP4_type *) 0xF00E2054u)	/* Endpoint 4 CPU Pointer Register */

typedef volatile union
{
	struct
	{ 
		unsigned int ACKE4          : 1;
		unsigned int NACKE4         : 1;
		unsigned int BNRE4          : 1;
		unsigned int WNIE4          : 1;
		unsigned int TRIE4          : 1;
		unsigned int                : 11;
		unsigned int INP404         : 1;
		unsigned int INP414         : 1;
		unsigned int INP424         : 1;
		unsigned int                : 1;
		unsigned int INP504         : 1;
		unsigned int INP514         : 1;
		unsigned int INP524         : 1;
		unsigned int                : 1;
		unsigned int INP604         : 1;
		unsigned int INP614         : 1;
		unsigned int INP624         : 1;
		unsigned int                : 1;
		unsigned int INP704         : 1;
		unsigned int INP714         : 1;
		unsigned int INP724         : 1;
		unsigned int                : 1;
	} B;
	int I;
	unsigned int U;

} USB_EPIC4_type;
#define USB_EPIC4	(*( USB_EPIC4_type *) 0xF00E2058u)	/* Endpoint 4 Interrupt Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int WRN4           : 13;
		unsigned int                : 3;
		unsigned int NEB4           : 13;
		unsigned int                : 3;
	} B;
	int I;
	unsigned int U;

} USB_EPBC4_type;
#define USB_EPBC4	(*( USB_EPBC4_type *) 0xF00E205Cu)	/* Endpoint 4 Buffer Control register */

typedef volatile union
{
	struct
	{ 
		unsigned int PSZ5           : 3;
		unsigned int BSP5           : 13;
		unsigned int UAP5           : 16;
	} B;
	int I;
	unsigned int U;

} USB_EPUP5_type;
#define USB_EPUP5	(*( USB_EPUP5_type *) 0xF00E2060u)	/* Endpoint 5 USB pointer register */

typedef volatile union
{
	struct
	{ 
		unsigned int UAVM5          : 1;
		unsigned int                : 2;
		unsigned int BSZ5           : 13;
		unsigned int CAP5           : 16;
	} B;
	int I;
	unsigned int U;

} USB_EPCP5_type;
#define USB_EPCP5	(*( USB_EPCP5_type *) 0xF00E2064u)	/* Endpoint 5 CPU Pointer Register */

typedef volatile union
{
	struct
	{ 
		unsigned int ACKE5          : 1;
		unsigned int NACKE5         : 1;
		unsigned int BNRE5          : 1;
		unsigned int WNIE5          : 1;
		unsigned int TRIE5          : 1;
		unsigned int                : 11;
		unsigned int INP405         : 1;
		unsigned int INP415         : 1;
		unsigned int INP425         : 1;
		unsigned int                : 1;
		unsigned int INP505         : 1;
		unsigned int INP515         : 1;
		unsigned int INP525         : 1;
		unsigned int                : 1;
		unsigned int INP605         : 1;
		unsigned int INP615         : 1;
		unsigned int INP625         : 1;
		unsigned int                : 1;
		unsigned int INP705         : 1;
		unsigned int INP715         : 1;
		unsigned int INP725         : 1;
		unsigned int                : 1;
	} B;
	int I;
	unsigned int U;

} USB_EPIC5_type;
#define USB_EPIC5	(*( USB_EPIC5_type *) 0xF00E2068u)	/* Endpoint 5 Interrupt Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int WRN5           : 13;
		unsigned int                : 3;
		unsigned int NEB5           : 13;
		unsigned int                : 3;
	} B;
	int I;
	unsigned int U;

} USB_EPBC5_type;
#define USB_EPBC5	(*( USB_EPBC5_type *) 0xF00E206Cu)	/* Endpoint 5 Buffer Control register */

typedef volatile union
{
	struct
	{ 
		unsigned int PSZ6           : 3;
		unsigned int BSP6           : 13;
		unsigned int UAP6           : 16;
	} B;
	int I;
	unsigned int U;

} USB_EPUP6_type;
#define USB_EPUP6	(*( USB_EPUP6_type *) 0xF00E2070u)	/* Endpoint 6 USB pointer register */

typedef volatile union
{
	struct
	{ 
		unsigned int UAVM6          : 1;
		unsigned int                : 2;
		unsigned int BSZ6           : 13;
		unsigned int CAP6           : 16;
	} B;
	int I;
	unsigned int U;

} USB_EPCP6_type;
#define USB_EPCP6	(*( USB_EPCP6_type *) 0xF00E2074u)	/* Endpoint 6 CPU Pointer Register */

typedef volatile union
{
	struct
	{ 
		unsigned int ACKE6          : 1;
		unsigned int NACKE6         : 1;
		unsigned int BNRE6          : 1;
		unsigned int WNIE6          : 1;
		unsigned int TRIE6          : 1;
		unsigned int                : 11;
		unsigned int INP406         : 1;
		unsigned int INP416         : 1;
		unsigned int INP426         : 1;
		unsigned int                : 1;
		unsigned int INP506         : 1;
		unsigned int INP516         : 1;
		unsigned int INP526         : 1;
		unsigned int                : 1;
		unsigned int INP606         : 1;
		unsigned int INP616         : 1;
		unsigned int INP626         : 1;
		unsigned int                : 1;
		unsigned int INP706         : 1;
		unsigned int INP716         : 1;
		unsigned int INP726         : 1;
		unsigned int                : 1;
	} B;
	int I;
	unsigned int U;

} USB_EPIC6_type;
#define USB_EPIC6	(*( USB_EPIC6_type *) 0xF00E2078u)	/* Endpoint 6 Interrupt Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int WRN6           : 13;
		unsigned int                : 3;
		unsigned int NEB6           : 13;
		unsigned int                : 3;
	} B;
	int I;
	unsigned int U;

} USB_EPBC6_type;
#define USB_EPBC6	(*( USB_EPBC6_type *) 0xF00E207Cu)	/* Endpoint 6 Buffer Control register */

typedef volatile union
{
	struct
	{ 
		unsigned int PSZ7           : 3;
		unsigned int BSP7           : 13;
		unsigned int UAP7           : 16;
	} B;
	int I;
	unsigned int U;

} USB_EPUP7_type;
#define USB_EPUP7	(*( USB_EPUP7_type *) 0xF00E2080u)	/* Endpoint 7 USB pointer register */

typedef volatile union
{
	struct
	{ 
		unsigned int UAVM7          : 1;
		unsigned int                : 2;
		unsigned int BSZ7           : 13;
		unsigned int CAP7           : 16;
	} B;
	int I;
	unsigned int U;

} USB_EPCP7_type;
#define USB_EPCP7	(*( USB_EPCP7_type *) 0xF00E2084u)	/* Endpoint 7 CPU Pointer Register */

typedef volatile union
{
	struct
	{ 
		unsigned int ACKE7          : 1;
		unsigned int NACKE7         : 1;
		unsigned int BNRE7          : 1;
		unsigned int WNIE7          : 1;
		unsigned int TRIE7          : 1;
		unsigned int                : 11;
		unsigned int INP407         : 1;
		unsigned int INP417         : 1;
		unsigned int INP427         : 1;
		unsigned int                : 1;
		unsigned int INP507         : 1;
		unsigned int INP517         : 1;
		unsigned int INP527         : 1;
		unsigned int                : 1;
		unsigned int INP607         : 1;
		unsigned int INP617         : 1;
		unsigned int INP627         : 1;
		unsigned int                : 1;
		unsigned int INP707         : 1;
		unsigned int INP717         : 1;
		unsigned int INP727         : 1;
		unsigned int                : 1;
	} B;
	int I;
	unsigned int U;

} USB_EPIC7_type;
#define USB_EPIC7	(*( USB_EPIC7_type *) 0xF00E2088u)	/* Endpoint 7 Interrupt Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int WRN7           : 13;
		unsigned int                : 3;
		unsigned int NEB7           : 13;
		unsigned int                : 3;
	} B;
	int I;
	unsigned int U;

} USB_EPBC7_type;
#define USB_EPBC7	(*( USB_EPBC7_type *) 0xF00E208Cu)	/* Endpoint 7 Buffer Control register */

typedef volatile union
{
	struct
	{ 
		unsigned int PSZ8           : 3;
		unsigned int BSP8           : 13;
		unsigned int UAP8           : 16;
	} B;
	int I;
	unsigned int U;

} USB_EPUP8_type;
#define USB_EPUP8	(*( USB_EPUP8_type *) 0xF00E2090u)	/* Endpoint 8 USB pointer register */

typedef volatile union
{
	struct
	{ 
		unsigned int UAVM8          : 1;
		unsigned int                : 2;
		unsigned int BSZ8           : 13;
		unsigned int CAP8           : 16;
	} B;
	int I;
	unsigned int U;

} USB_EPCP8_type;
#define USB_EPCP8	(*( USB_EPCP8_type *) 0xF00E2094u)	/* Endpoint 8 CPU Pointer Register */

typedef volatile union
{
	struct
	{ 
		unsigned int ACKE8          : 1;
		unsigned int NACKE8         : 1;
		unsigned int BNRE8          : 1;
		unsigned int WNIE8          : 1;
		unsigned int TRIE8          : 1;
		unsigned int                : 11;
		unsigned int INP408         : 1;
		unsigned int INP418         : 1;
		unsigned int INP428         : 1;
		unsigned int                : 1;
		unsigned int INP508         : 1;
		unsigned int INP518         : 1;
		unsigned int INP528         : 1;
		unsigned int                : 1;
		unsigned int INP608         : 1;
		unsigned int INP618         : 1;
		unsigned int INP628         : 1;
		unsigned int                : 1;
		unsigned int INP708         : 1;
		unsigned int INP718         : 1;
		unsigned int INP728         : 1;
		unsigned int                : 1;
	} B;
	int I;
	unsigned int U;

} USB_EPIC8_type;
#define USB_EPIC8	(*( USB_EPIC8_type *) 0xF00E2098u)	/* Endpoint 8 Interrupt Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int WRN8           : 13;
		unsigned int                : 3;
		unsigned int NEB8           : 13;
		unsigned int                : 3;
	} B;
	int I;
	unsigned int U;

} USB_EPBC8_type;
#define USB_EPBC8	(*( USB_EPBC8_type *) 0xF00E209Cu)	/* Endpoint 8 Buffer Control register */

typedef volatile union
{
	struct
	{ 
		unsigned int PSZ9           : 3;
		unsigned int BSP9           : 13;
		unsigned int UAP9           : 16;
	} B;
	int I;
	unsigned int U;

} USB_EPUP9_type;
#define USB_EPUP9	(*( USB_EPUP9_type *) 0xF00E20A0u)	/* Endpoint 9 USB pointer register */

typedef volatile union
{
	struct
	{ 
		unsigned int UAVM9          : 1;
		unsigned int                : 2;
		unsigned int BSZ9           : 13;
		unsigned int CAP9           : 16;
	} B;
	int I;
	unsigned int U;

} USB_EPCP9_type;
#define USB_EPCP9	(*( USB_EPCP9_type *) 0xF00E20A4u)	/* Endpoint 9 CPU Pointer Register */

typedef volatile union
{
	struct
	{ 
		unsigned int ACKE9          : 1;
		unsigned int NACKE9         : 1;
		unsigned int BNRE9          : 1;
		unsigned int WNIE9          : 1;
		unsigned int TRIE9          : 1;
		unsigned int                : 11;
		unsigned int INP409         : 1;
		unsigned int INP419         : 1;
		unsigned int INP429         : 1;
		unsigned int                : 1;
		unsigned int INP509         : 1;
		unsigned int INP519         : 1;
		unsigned int INP529         : 1;
		unsigned int                : 1;
		unsigned int INP609         : 1;
		unsigned int INP619         : 1;
		unsigned int INP629         : 1;
		unsigned int                : 1;
		unsigned int INP709         : 1;
		unsigned int INP719         : 1;
		unsigned int INP729         : 1;
		unsigned int                : 1;
	} B;
	int I;
	unsigned int U;

} USB_EPIC9_type;
#define USB_EPIC9	(*( USB_EPIC9_type *) 0xF00E20A8u)	/* Endpoint 9 Interrupt Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int WRN9           : 13;
		unsigned int                : 3;
		unsigned int NEB9           : 13;
		unsigned int                : 3;
	} B;
	int I;
	unsigned int U;

} USB_EPBC9_type;
#define USB_EPBC9	(*( USB_EPBC9_type *) 0xF00E20ACu)	/* Endpoint 9 Buffer Control register */

typedef volatile union
{
	struct
	{ 
		unsigned int PSZ10          : 3;
		unsigned int BSP10          : 13;
		unsigned int UAP10          : 16;
	} B;
	int I;
	unsigned int U;

} USB_EPUP10_type;
#define USB_EPUP10	(*( USB_EPUP10_type *) 0xF00E20B0u)	/* Endpoint 10 USB pointer register */

typedef volatile union
{
	struct
	{ 
		unsigned int UAVM10         : 1;
		unsigned int                : 2;
		unsigned int BSZ10          : 13;
		unsigned int CAP10          : 16;
	} B;
	int I;
	unsigned int U;

} USB_EPCP10_type;
#define USB_EPCP10	(*( USB_EPCP10_type *) 0xF00E20B4u)	/* Endpoint 10 CPU Pointer Register */

typedef volatile union
{
	struct
	{ 
		unsigned int ACKE10         : 1;
		unsigned int NACKE10        : 1;
		unsigned int BNRE10         : 1;
		unsigned int WNIE10         : 1;
		unsigned int TRIE10         : 1;
		unsigned int                : 11;
		unsigned int INP4010        : 1;
		unsigned int INP4110        : 1;
		unsigned int INP4210        : 1;
		unsigned int                : 1;
		unsigned int INP5010        : 1;
		unsigned int INP5110        : 1;
		unsigned int INP5210        : 1;
		unsigned int                : 1;
		unsigned int INP6010        : 1;
		unsigned int INP6110        : 1;
		unsigned int INP6210        : 1;
		unsigned int                : 1;
		unsigned int INP7010        : 1;
		unsigned int INP7110        : 1;
		unsigned int INP7210        : 1;
		unsigned int                : 1;
	} B;
	int I;
	unsigned int U;

} USB_EPIC10_type;
#define USB_EPIC10	(*( USB_EPIC10_type *) 0xF00E20B8u)	/* Endpoint 10 Interrupt Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int WRN10          : 13;
		unsigned int                : 3;
		unsigned int NEB10          : 13;
		unsigned int                : 3;
	} B;
	int I;
	unsigned int U;

} USB_EPBC10_type;
#define USB_EPBC10	(*( USB_EPBC10_type *) 0xF00E20BCu)	/* Endpoint 10 Buffer Control register */

typedef volatile union
{
	struct
	{ 
		unsigned int PSZ11          : 3;
		unsigned int BSP11          : 13;
		unsigned int UAP11          : 16;
	} B;
	int I;
	unsigned int U;

} USB_EPUP11_type;
#define USB_EPUP11	(*( USB_EPUP11_type *) 0xF00E20C0u)	/* Endpoint 11 USB pointer register */

typedef volatile union
{
	struct
	{ 
		unsigned int UAVM11         : 1;
		unsigned int                : 2;
		unsigned int BSZ11          : 13;
		unsigned int CAP11          : 16;
	} B;
	int I;
	unsigned int U;

} USB_EPCP11_type;
#define USB_EPCP11	(*( USB_EPCP11_type *) 0xF00E20C4u)	/* Endpoint 11 CPU Pointer Register */

typedef volatile union
{
	struct
	{ 
		unsigned int ACKE11         : 1;
		unsigned int NACKE11        : 1;
		unsigned int BNRE11         : 1;
		unsigned int WNIE11         : 1;
		unsigned int TRIE11         : 1;
		unsigned int                : 11;
		unsigned int INP4011        : 1;
		unsigned int INP4111        : 1;
		unsigned int INP4211        : 1;
		unsigned int                : 1;
		unsigned int INP5011        : 1;
		unsigned int INP5111        : 1;
		unsigned int INP5211        : 1;
		unsigned int                : 1;
		unsigned int INP6011        : 1;
		unsigned int INP6111        : 1;
		unsigned int INP6211        : 1;
		unsigned int                : 1;
		unsigned int INP7011        : 1;
		unsigned int INP7111        : 1;
		unsigned int INP7211        : 1;
		unsigned int                : 1;
	} B;
	int I;
	unsigned int U;

} USB_EPIC11_type;
#define USB_EPIC11	(*( USB_EPIC11_type *) 0xF00E20C8u)	/* Endpoint 11 Interrupt Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int WRN11          : 13;
		unsigned int                : 3;
		unsigned int NEB11          : 13;
		unsigned int                : 3;
	} B;
	int I;
	unsigned int U;

} USB_EPBC11_type;
#define USB_EPBC11	(*( USB_EPBC11_type *) 0xF00E20CCu)	/* Endpoint 11 Buffer Control register */

typedef volatile union
{
	struct
	{ 
		unsigned int PSZ12          : 3;
		unsigned int BSP12          : 13;
		unsigned int UAP12          : 16;
	} B;
	int I;
	unsigned int U;

} USB_EPUP12_type;
#define USB_EPUP12	(*( USB_EPUP12_type *) 0xF00E20D0u)	/* Endpoint 12 USB pointer register */

typedef volatile union
{
	struct
	{ 
		unsigned int UAVM12         : 1;
		unsigned int                : 2;
		unsigned int BSZ12          : 13;
		unsigned int CAP12          : 16;
	} B;
	int I;
	unsigned int U;

} USB_EPCP12_type;
#define USB_EPCP12	(*( USB_EPCP12_type *) 0xF00E20D4u)	/* Endpoint 12 CPU Pointer Register */

typedef volatile union
{
	struct
	{ 
		unsigned int ACKE12         : 1;
		unsigned int NACKE12        : 1;
		unsigned int BNRE12         : 1;
		unsigned int WNIE12         : 1;
		unsigned int TRIE12         : 1;
		unsigned int                : 11;
		unsigned int INP4012        : 1;
		unsigned int INP4112        : 1;
		unsigned int INP4212        : 1;
		unsigned int                : 1;
		unsigned int INP5012        : 1;
		unsigned int INP5112        : 1;
		unsigned int INP5212        : 1;
		unsigned int                : 1;
		unsigned int INP6012        : 1;
		unsigned int INP6112        : 1;
		unsigned int INP6212        : 1;
		unsigned int                : 1;
		unsigned int INP7012        : 1;
		unsigned int INP7112        : 1;
		unsigned int INP7212        : 1;
		unsigned int                : 1;
	} B;
	int I;
	unsigned int U;

} USB_EPIC12_type;
#define USB_EPIC12	(*( USB_EPIC12_type *) 0xF00E20D8u)	/* Endpoint 12 Interrupt Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int WRN12          : 13;
		unsigned int                : 3;
		unsigned int NEB12          : 13;
		unsigned int                : 3;
	} B;
	int I;
	unsigned int U;

} USB_EPBC12_type;
#define USB_EPBC12	(*( USB_EPBC12_type *) 0xF00E20DCu)	/* Endpoint 12 Buffer Control register */

typedef volatile union
{
	struct
	{ 
		unsigned int PSZ13          : 3;
		unsigned int BSP13          : 13;
		unsigned int UAP13          : 16;
	} B;
	int I;
	unsigned int U;

} USB_EPUP13_type;
#define USB_EPUP13	(*( USB_EPUP13_type *) 0xF00E20E0u)	/* Endpoint 13 USB pointer register */

typedef volatile union
{
	struct
	{ 
		unsigned int UAVM13         : 1;
		unsigned int                : 2;
		unsigned int BSZ13          : 13;
		unsigned int CAP13          : 16;
	} B;
	int I;
	unsigned int U;

} USB_EPCP13_type;
#define USB_EPCP13	(*( USB_EPCP13_type *) 0xF00E20E4u)	/* Endpoint 13 CPU Pointer Register */

typedef volatile union
{
	struct
	{ 
		unsigned int ACKE13         : 1;
		unsigned int NACKE13        : 1;
		unsigned int BNRE13         : 1;
		unsigned int WNIE13         : 1;
		unsigned int TRIE13         : 1;
		unsigned int                : 11;
		unsigned int INP4013        : 1;
		unsigned int INP4113        : 1;
		unsigned int INP4213        : 1;
		unsigned int                : 1;
		unsigned int INP5013        : 1;
		unsigned int INP5113        : 1;
		unsigned int INP5213        : 1;
		unsigned int                : 1;
		unsigned int INP6013        : 1;
		unsigned int INP6113        : 1;
		unsigned int INP6213        : 1;
		unsigned int                : 1;
		unsigned int INP7013        : 1;
		unsigned int INP7113        : 1;
		unsigned int INP7213        : 1;
		unsigned int                : 1;
	} B;
	int I;
	unsigned int U;

} USB_EPIC13_type;
#define USB_EPIC13	(*( USB_EPIC13_type *) 0xF00E20E8u)	/* Endpoint 13 Interrupt Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int WRN13          : 13;
		unsigned int                : 3;
		unsigned int NEB13          : 13;
		unsigned int                : 3;
	} B;
	int I;
	unsigned int U;

} USB_EPBC13_type;
#define USB_EPBC13	(*( USB_EPBC13_type *) 0xF00E20ECu)	/* Endpoint 13 Buffer Control register */

typedef volatile union
{
	struct
	{ 
		unsigned int PSZ14          : 3;
		unsigned int BSP14          : 13;
		unsigned int UAP14          : 16;
	} B;
	int I;
	unsigned int U;

} USB_EPUP14_type;
#define USB_EPUP14	(*( USB_EPUP14_type *) 0xF00E20F0u)	/* Endpoint 14 USB pointer register */

typedef volatile union
{
	struct
	{ 
		unsigned int UAVM14         : 1;
		unsigned int                : 2;
		unsigned int BSZ14          : 13;
		unsigned int CAP14          : 16;
	} B;
	int I;
	unsigned int U;

} USB_EPCP14_type;
#define USB_EPCP14	(*( USB_EPCP14_type *) 0xF00E20F4u)	/* Endpoint 14 CPU Pointer Register */

typedef volatile union
{
	struct
	{ 
		unsigned int ACKE14         : 1;
		unsigned int NACKE14        : 1;
		unsigned int BNRE14         : 1;
		unsigned int WNIE14         : 1;
		unsigned int TRIE14         : 1;
		unsigned int                : 11;
		unsigned int INP4014        : 1;
		unsigned int INP4114        : 1;
		unsigned int INP4214        : 1;
		unsigned int                : 1;
		unsigned int INP5014        : 1;
		unsigned int INP5114        : 1;
		unsigned int INP5214        : 1;
		unsigned int                : 1;
		unsigned int INP6014        : 1;
		unsigned int INP6114        : 1;
		unsigned int INP6214        : 1;
		unsigned int                : 1;
		unsigned int INP7014        : 1;
		unsigned int INP7114        : 1;
		unsigned int INP7214        : 1;
		unsigned int                : 1;
	} B;
	int I;
	unsigned int U;

} USB_EPIC14_type;
#define USB_EPIC14	(*( USB_EPIC14_type *) 0xF00E20F8u)	/* Endpoint 14 Interrupt Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int WRN14          : 13;
		unsigned int                : 3;
		unsigned int NEB14          : 13;
		unsigned int                : 3;
	} B;
	int I;
	unsigned int U;

} USB_EPBC14_type;
#define USB_EPBC14	(*( USB_EPBC14_type *) 0xF00E20FCu)	/* Endpoint 14 Buffer Control register */

typedef volatile union
{
	struct
	{ 
		unsigned int PSZ15          : 3;
		unsigned int BSP15          : 13;
		unsigned int UAP15          : 16;
	} B;
	int I;
	unsigned int U;

} USB_EPUP15_type;
#define USB_EPUP15	(*( USB_EPUP15_type *) 0xF00E2100u)	/* Endpoint 15 USB pointer register */

typedef volatile union
{
	struct
	{ 
		unsigned int UAVM15         : 1;
		unsigned int                : 2;
		unsigned int BSZ15          : 13;
		unsigned int CAP15          : 16;
	} B;
	int I;
	unsigned int U;

} USB_EPCP15_type;
#define USB_EPCP15	(*( USB_EPCP15_type *) 0xF00E2104u)	/* Endpoint 15 CPU Pointer Register */

typedef volatile union
{
	struct
	{ 
		unsigned int ACKE15         : 1;
		unsigned int NACKE15        : 1;
		unsigned int BNRE15         : 1;
		unsigned int WNIE15         : 1;
		unsigned int TRIE15         : 1;
		unsigned int                : 11;
		unsigned int INP4015        : 1;
		unsigned int INP4115        : 1;
		unsigned int INP4215        : 1;
		unsigned int                : 1;
		unsigned int INP5015        : 1;
		unsigned int INP5115        : 1;
		unsigned int INP5215        : 1;
		unsigned int                : 1;
		unsigned int INP6015        : 1;
		unsigned int INP6115        : 1;
		unsigned int INP6215        : 1;
		unsigned int                : 1;
		unsigned int INP7015        : 1;
		unsigned int INP7115        : 1;
		unsigned int INP7215        : 1;
		unsigned int                : 1;
	} B;
	int I;
	unsigned int U;

} USB_EPIC15_type;
#define USB_EPIC15	(*( USB_EPIC15_type *) 0xF00E2108u)	/* Endpoint 15 Interrupt Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int WRN15          : 13;
		unsigned int                : 3;
		unsigned int NEB15          : 13;
		unsigned int                : 3;
	} B;
	int I;
	unsigned int U;

} USB_EPBC15_type;
#define USB_EPBC15	(*( USB_EPBC15_type *) 0xF00E210Cu)	/* Endpoint 15 Buffer Control register */


/* USB */
typedef volatile union
{
	struct
	{ 
		unsigned int DISR           : 1;
		/* const */ unsigned int DISS           : 1;
		unsigned int SPEN           : 1;
		unsigned int EDIS           : 1;
		unsigned int SBWE           : 1;
		unsigned int FSOE           : 1;
		unsigned int                : 2;
		unsigned int RMC            : 8;
		unsigned int SMC            : 8;
		unsigned int                : 8;
	} B;
	int I;
	unsigned int U;

} USB_CLC_type;
#define USB_CLC	(*( USB_CLC_type *) 0xF00E2800u)	/* USB Clock Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int VPIS           : 1;
		unsigned int VMIS           : 1;
		unsigned int RCVIS          : 1;
		unsigned int                : 29;
	} B;
	int I;
	unsigned int U;

} USB_PISEL_type;
#define USB_PISEL	(*( USB_PISEL_type *) 0xF00E2804u)	/* USB Input Port Selection Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int REV            : 8;
		/* const */ unsigned int ID             : 8;
		/* const */ unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} USB_ID_type;
#define USB_ID	(*( USB_ID_type *) 0xF00E2808u)	/* USB Module Identification Register */

typedef volatile union
{
	struct
	{ 
		unsigned int RPWDS          : 1;
		unsigned int RPWDR          : 1;
		unsigned int TPWDS          : 1;
		unsigned int TPWDR          : 1;
		unsigned int UCLKS          : 1;
		unsigned int UCLKR          : 1;
		unsigned int RSM            : 1;
		unsigned int EOID           : 1;
		unsigned int SWRS           : 1;
		unsigned int SPEEDS         : 1;
		unsigned int DADDIDIS       : 1;
		unsigned int DADDIEN        : 1;
		unsigned int                : 2;
		unsigned int CPUSRL         : 1;
		unsigned int USBSRL         : 1;
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} USB_DCR_type;
#define USB_DCR	(*( USB_DCR_type *) 0xF00E2810u)	/* Device Control Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int RPWD           : 1;
		/* const */ unsigned int                : 1;
		/* const */ unsigned int TPWD           : 1;
		/* const */ unsigned int                : 1;
		/* const */ unsigned int UCLK           : 1;
		/* const */ unsigned int                : 1;
		/* const */ unsigned int SUSP           : 1;
		/* const */ unsigned int DINIT          : 1;
		/* const */ unsigned int SWR            : 1;
		/* const */ unsigned int SPEED          : 1;
		/* const */ unsigned int                : 1;
		/* const */ unsigned int DA             : 1;
		/* const */ unsigned int DIR            : 1;
		/* const */ unsigned int DADDIDIS       : 1;
		/* const */ unsigned int                : 2;
		/* const */ unsigned int UEP            : 4;
		/* const */ unsigned int                : 3;
		/* const */ unsigned int TIP            : 1;
		/* const */ unsigned int                : 8;
	} B;
	int I;
	unsigned int U;

} USB_DSR_type;
#define USB_DSR	(*( USB_DSR_type *) 0xF00E2814u)	/* Device Status Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int STL0           : 1;
		/* const */ unsigned int STL1           : 1;
		/* const */ unsigned int STL2           : 1;
		/* const */ unsigned int STL3           : 1;
		/* const */ unsigned int STL4           : 1;
		/* const */ unsigned int STL5           : 1;
		/* const */ unsigned int STL6           : 1;
		/* const */ unsigned int STL7           : 1;
		/* const */ unsigned int STL8           : 1;
		/* const */ unsigned int STL9           : 1;
		/* const */ unsigned int STL10          : 1;
		/* const */ unsigned int STL11          : 1;
		/* const */ unsigned int STL12          : 1;
		/* const */ unsigned int STL13          : 1;
		/* const */ unsigned int STL14          : 1;
		/* const */ unsigned int STL15          : 1;
		/* const */ unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} USB_EPSTL_type;
#define USB_EPSTL	(*( USB_EPSTL_type *) 0xF00E2818u)	/* Endpoint Stall Register */

typedef volatile union
{
	struct
	{ 
		unsigned int STLS0          : 1;
		unsigned int STLS1          : 1;
		unsigned int STLS2          : 1;
		unsigned int STLS3          : 1;
		unsigned int STLS4          : 1;
		unsigned int STLS5          : 1;
		unsigned int STLS6          : 1;
		unsigned int STLS7          : 1;
		unsigned int STLS8          : 1;
		unsigned int STLS9          : 1;
		unsigned int STLS10         : 1;
		unsigned int STLS11         : 1;
		unsigned int STLS12         : 1;
		unsigned int STLS13         : 1;
		unsigned int STLS14         : 1;
		unsigned int STLS15         : 1;
		unsigned int STLR0          : 1;
		unsigned int STLR1          : 1;
		unsigned int STLR2          : 1;
		unsigned int STLR3          : 1;
		unsigned int STLR4          : 1;
		unsigned int STLR5          : 1;
		unsigned int STLR6          : 1;
		unsigned int STLR7          : 1;
		unsigned int STLR8          : 1;
		unsigned int STLR9          : 1;
		unsigned int STLR10         : 1;
		unsigned int STLR11         : 1;
		unsigned int STLR12         : 1;
		unsigned int STLR13         : 1;
		unsigned int STLR14         : 1;
		unsigned int STLR15         : 1;
	} B;
	int I;
	unsigned int U;

} USB_EPSSR_type;
#define USB_EPSSR	(*( USB_EPSSR_type *) 0xF00E281Cu)	/* Endpoint Stall Set / Reset Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int AS0            : 1;
		/* const */ unsigned int AS1            : 1;
		/* const */ unsigned int AS2            : 1;
		/* const */ unsigned int AS3            : 1;
		/* const */ unsigned int IF0            : 1;
		/* const */ unsigned int IF1            : 1;
		/* const */ unsigned int IF2            : 1;
		/* const */ unsigned int IF3            : 1;
		/* const */ unsigned int                : 4;
		/* const */ unsigned int CF0            : 1;
		/* const */ unsigned int CF1            : 1;
		/* const */ unsigned int CF2            : 1;
		/* const */ unsigned int CF3            : 1;
		/* const */ unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} USB_CNFR_type;
#define USB_CNFR	(*( USB_CNFR_type *) 0xF00E2820u)	/* Configuration Request Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int FNR0           : 1;
		/* const */ unsigned int FNR1           : 1;
		/* const */ unsigned int FNR2           : 1;
		/* const */ unsigned int FNR3           : 1;
		/* const */ unsigned int FNR4           : 1;
		/* const */ unsigned int FNR5           : 1;
		/* const */ unsigned int FNR6           : 1;
		/* const */ unsigned int FNR7           : 1;
		/* const */ unsigned int FNR8           : 1;
		/* const */ unsigned int FNR9           : 1;
		/* const */ unsigned int FNR10          : 1;
		/* const */ unsigned int                : 21;
	} B;
	int I;
	unsigned int U;

} USB_FNR_type;
#define USB_FNR	(*( USB_FNR_type *) 0xF00E2824u)	/* Frame Number Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int DIR0           : 1;
		/* const */ unsigned int DIR1           : 1;
		/* const */ unsigned int DIR2           : 1;
		/* const */ unsigned int DIR3           : 1;
		/* const */ unsigned int DIR4           : 1;
		/* const */ unsigned int DIR5           : 1;
		/* const */ unsigned int DIR6           : 1;
		/* const */ unsigned int DIR7           : 1;
		/* const */ unsigned int DIR8           : 1;
		/* const */ unsigned int DIR9           : 1;
		/* const */ unsigned int DIR10          : 1;
		/* const */ unsigned int DIR11          : 1;
		/* const */ unsigned int DIR12          : 1;
		/* const */ unsigned int DIR13          : 1;
		/* const */ unsigned int DIR14          : 1;
		/* const */ unsigned int DIR15          : 1;
		/* const */ unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} USB_EPDIR_type;
#define USB_EPDIR	(*( USB_EPDIR_type *) 0xF00E2828u)	/* Endpoint Direction Register */

typedef volatile union
{
	struct
	{ 
		unsigned int DIRS0          : 1;
		unsigned int DIRS1          : 1;
		unsigned int DIRS2          : 1;
		unsigned int DIRS3          : 1;
		unsigned int DIRS4          : 1;
		unsigned int DIRS5          : 1;
		unsigned int DIRS6          : 1;
		unsigned int DIRS7          : 1;
		unsigned int DIRS8          : 1;
		unsigned int DIRS9          : 1;
		unsigned int DIRS10         : 1;
		unsigned int DIRS11         : 1;
		unsigned int DIRS12         : 1;
		unsigned int DIRS13         : 1;
		unsigned int DIRS14         : 1;
		unsigned int DIRS15         : 1;
		unsigned int DIRR0          : 1;
		unsigned int DIRR1          : 1;
		unsigned int DIRR2          : 1;
		unsigned int DIRR3          : 1;
		unsigned int DIRR4          : 1;
		unsigned int DIRR5          : 1;
		unsigned int DIRR6          : 1;
		unsigned int DIRR7          : 1;
		unsigned int DIRR8          : 1;
		unsigned int DIRR9          : 1;
		unsigned int DIRR10         : 1;
		unsigned int DIRR11         : 1;
		unsigned int DIRR12         : 1;
		unsigned int DIRR13         : 1;
		unsigned int DIRR14         : 1;
		unsigned int DIRR15         : 1;
	} B;
	int I;
	unsigned int U;

} USB_EPDSR_type;
#define USB_EPDSR	(*( USB_EPDSR_type *) 0xF00E282Cu)	/* Endpoint Direction Set/Reset Register */

typedef volatile union
{
	struct
	{ 
		unsigned int CEPS           : 4;
		unsigned int                : 4;
		/* const */ unsigned int FVLD           : 1;
		unsigned int DONE           : 1;
		unsigned int CLREP          : 1;
		unsigned int                : 5;
		/* const */ unsigned int EPFVLD0        : 1;
		/* const */ unsigned int EPFVLD1        : 1;
		/* const */ unsigned int EPFVLD2        : 1;
		/* const */ unsigned int EPFVLD3        : 1;
		/* const */ unsigned int EPFVLD4        : 1;
		/* const */ unsigned int EPFVLD5        : 1;
		/* const */ unsigned int EPFVLD6        : 1;
		/* const */ unsigned int EPFVLD7        : 1;
		/* const */ unsigned int EPFVLD8        : 1;
		/* const */ unsigned int EPFVLD9        : 1;
		/* const */ unsigned int EPFVLD10       : 1;
		/* const */ unsigned int EPFVLD11       : 1;
		/* const */ unsigned int EPFVLD12       : 1;
		/* const */ unsigned int EPFVLD13       : 1;
		/* const */ unsigned int EPFVLD14       : 1;
		/* const */ unsigned int EPFVLD15       : 1;
	} B;
	int I;
	unsigned int U;

} USB_FCON_type;
#define USB_FCON	(*( USB_FCON_type *) 0xF00E2830u)	/* FIFO Control Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int                : 3;
		/* const */ unsigned int CAPL           : 13;
		/* const */ unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} USB_CPLPR_type;
#define USB_CPLPR	(*( USB_CPLPR_type *) 0xF00E2834u)	/* CPU Local Pointer Register */

typedef volatile union
{
	struct
	{ 
		unsigned int DAT32          : 32;
	} B;
	int I;
	unsigned int U;

} USB_DATA32_type;
#define USB_DATA32	(*( USB_DATA32_type *) 0xF00E2838u)	/* Data Register for 32bit Accesses */

typedef volatile union
{
	struct
	{ 
		unsigned int DAT16          : 16;
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} USB_DATA16_type;
#define USB_DATA16	(*( USB_DATA16_type *) 0xF00E283Cu)	/* Data Register for 16bit Accesses */

typedef volatile union
{
	struct
	{ 
		unsigned int DAT8           : 8;
		unsigned int                : 24;
	} B;
	int I;
	unsigned int U;

} USB_DATA8_type;
#define USB_DATA8	(*( USB_DATA8_type *) 0xF00E2840u)	/* Data Register for 8bit Accesses */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int EPV0           : 1;
		/* const */ unsigned int EPV1           : 1;
		/* const */ unsigned int EPV2           : 1;
		/* const */ unsigned int EPV3           : 1;
		/* const */ unsigned int EPV4           : 1;
		/* const */ unsigned int EPV5           : 1;
		/* const */ unsigned int EPV6           : 1;
		/* const */ unsigned int EPV7           : 1;
		/* const */ unsigned int EPV8           : 1;
		/* const */ unsigned int EPV9           : 1;
		/* const */ unsigned int EPV10          : 1;
		/* const */ unsigned int EPV11          : 1;
		/* const */ unsigned int EPV12          : 1;
		/* const */ unsigned int EPV13          : 1;
		/* const */ unsigned int EPV14          : 1;
		/* const */ unsigned int EPV15          : 1;
		/* const */ unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} USB_EPVLD_type;
#define USB_EPVLD	(*( USB_EPVLD_type *) 0xF00E2844u)	/* Endpoint Valid Register */

typedef volatile union
{
	struct
	{ 
		unsigned int EPVS0          : 1;
		unsigned int EPVS1          : 1;
		unsigned int EPVS2          : 1;
		unsigned int EPVS3          : 1;
		unsigned int EPVS4          : 1;
		unsigned int EPVS5          : 1;
		unsigned int EPVS6          : 1;
		unsigned int EPVS7          : 1;
		unsigned int EPVS8          : 1;
		unsigned int EPVS9          : 1;
		unsigned int EPVS10         : 1;
		unsigned int EPVS11         : 1;
		unsigned int EPVS12         : 1;
		unsigned int EPVS13         : 1;
		unsigned int EPVS14         : 1;
		unsigned int EPVS15         : 1;
		unsigned int EPVR0          : 1;
		unsigned int EPVR1          : 1;
		unsigned int EPVR2          : 1;
		unsigned int EPVR3          : 1;
		unsigned int EPVR4          : 1;
		unsigned int EPVR5          : 1;
		unsigned int EPVR6          : 1;
		unsigned int EPVR7          : 1;
		unsigned int EPVR8          : 1;
		unsigned int EPVR9          : 1;
		unsigned int EPVR10         : 1;
		unsigned int EPVR11         : 1;
		unsigned int EPVR12         : 1;
		unsigned int EPVR13         : 1;
		unsigned int EPVR14         : 1;
		unsigned int EPVR15         : 1;
	} B;
	int I;
	unsigned int U;

} USB_EVSR_type;
#define USB_EVSR	(*( USB_EVSR_type *) 0xF00E2848u)	/* Endpoint Valid Set/Reset Register */

typedef volatile union
{
	struct
	{ 
		unsigned int DAIE           : 1;
		unsigned int DDIE           : 1;
		unsigned int SBIE           : 1;
		unsigned int SEIE           : 1;
		unsigned int SE0IE          : 1;
		unsigned int                : 3;
		unsigned int STIE           : 1;
		unsigned int SUIE           : 1;
		unsigned int CFIE           : 1;
		unsigned int SOFIE          : 1;
		unsigned int EDIIE          : 1;
		unsigned int FRIE           : 1;
		unsigned int FNRIE          : 1;
		unsigned int                : 17;
	} B;
	int I;
	unsigned int U;

} USB_DIER_type;
#define USB_DIER	(*( USB_DIER_type *) 0xF00E284Cu)	/* Device Interrupt Enable Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int DAI            : 1;
		/* const */ unsigned int DDI            : 1;
		/* const */ unsigned int SBI            : 1;
		/* const */ unsigned int SEI            : 1;
		/* const */ unsigned int SE0I           : 1;
		/* const */ unsigned int                : 3;
		/* const */ unsigned int STI            : 1;
		/* const */ unsigned int SUI            : 1;
		/* const */ unsigned int CFI            : 1;
		/* const */ unsigned int SOFI           : 1;
		/* const */ unsigned int EDII           : 1;
		/* const */ unsigned int FRI            : 1;
		/* const */ unsigned int FNRI           : 1;
		/* const */ unsigned int                : 17;
	} B;
	int I;
	unsigned int U;

} USB_DIRR_type;
#define USB_DIRR	(*( USB_DIRR_type *) 0xF00E2850u)	/* Device Interrupt Request Register */

typedef volatile union
{
	struct
	{ 
		unsigned int DAIR           : 1;
		unsigned int DDIR           : 1;
		unsigned int SBIR           : 1;
		unsigned int SEIR           : 1;
		unsigned int SE0IR          : 1;
		unsigned int                : 3;
		unsigned int STIR           : 1;
		unsigned int SUIR           : 1;
		unsigned int CFIR           : 1;
		unsigned int SOFIR          : 1;
		unsigned int EDIIR          : 1;
		unsigned int FRR            : 1;
		unsigned int FNRR           : 1;
		unsigned int                : 17;
	} B;
	int I;
	unsigned int U;

} USB_DIRST_type;
#define USB_DIRST	(*( USB_DIRST_type *) 0xF00E2854u)	/* Device Interrupt Reset Register */

typedef volatile union
{
	struct
	{ 
		unsigned int INP00          : 1;
		unsigned int INP01          : 1;
		unsigned int INP02          : 1;
		unsigned int                : 1;
		unsigned int INP10          : 1;
		unsigned int INP11          : 1;
		unsigned int INP12          : 1;
		unsigned int                : 1;
		unsigned int INP20          : 1;
		unsigned int INP21          : 1;
		unsigned int INP22          : 1;
		unsigned int                : 1;
		unsigned int INP30          : 1;
		unsigned int INP31          : 1;
		unsigned int INP32          : 1;
		unsigned int                : 17;
	} B;
	int I;
	unsigned int U;

} USB_DINP_type;
#define USB_DINP	(*( USB_DINP_type *) 0xF00E2858u)	/* Device Interrupt Node Pointer Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int ACK00          : 1;
		/* const */ unsigned int NACK00         : 1;
		/* const */ unsigned int BNR00          : 1;
		/* const */ unsigned int WNI00          : 1;
		/* const */ unsigned int TRI00          : 1;
		/* const */ unsigned int                : 3;
		/* const */ unsigned int ACK01          : 1;
		/* const */ unsigned int NACK01         : 1;
		/* const */ unsigned int BNR01          : 1;
		/* const */ unsigned int WNI01          : 1;
		/* const */ unsigned int TRI01          : 1;
		/* const */ unsigned int                : 3;
		/* const */ unsigned int ACK02          : 1;
		/* const */ unsigned int NACK02         : 1;
		/* const */ unsigned int BNR02          : 1;
		/* const */ unsigned int WNI02          : 1;
		/* const */ unsigned int TRI02          : 1;
		/* const */ unsigned int                : 3;
		/* const */ unsigned int ACK03          : 1;
		/* const */ unsigned int NACK03         : 1;
		/* const */ unsigned int BNR03          : 1;
		/* const */ unsigned int WNI03          : 1;
		/* const */ unsigned int TRI03          : 1;
		/* const */ unsigned int                : 3;
	} B;
	int I;
	unsigned int U;

} USB_EPIR0_type;
#define USB_EPIR0	(*( USB_EPIR0_type *) 0xF00E285Cu)	/* Endpoint Interrupt Request Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int ACK10          : 1;
		/* const */ unsigned int NACK10         : 1;
		/* const */ unsigned int BNR10          : 1;
		/* const */ unsigned int WNI10          : 1;
		/* const */ unsigned int TRI10          : 1;
		/* const */ unsigned int                : 3;
		/* const */ unsigned int ACK11          : 1;
		/* const */ unsigned int NACK11         : 1;
		/* const */ unsigned int BNR11          : 1;
		/* const */ unsigned int WNI11          : 1;
		/* const */ unsigned int TRI11          : 1;
		/* const */ unsigned int                : 3;
		/* const */ unsigned int ACK12          : 1;
		/* const */ unsigned int NACK12         : 1;
		/* const */ unsigned int BNR12          : 1;
		/* const */ unsigned int WNI12          : 1;
		/* const */ unsigned int TRI12          : 1;
		/* const */ unsigned int                : 3;
		/* const */ unsigned int ACK13          : 1;
		/* const */ unsigned int NACK13         : 1;
		/* const */ unsigned int BNR13          : 1;
		/* const */ unsigned int WNI13          : 1;
		/* const */ unsigned int TRI13          : 1;
		/* const */ unsigned int                : 3;
	} B;
	int I;
	unsigned int U;

} USB_EPIR1_type;
#define USB_EPIR1	(*( USB_EPIR1_type *) 0xF00E2860u)	/* Endpoint Interrupt Request Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int ACK20          : 1;
		/* const */ unsigned int NACK20         : 1;
		/* const */ unsigned int BNR20          : 1;
		/* const */ unsigned int WNI20          : 1;
		/* const */ unsigned int TRI20          : 1;
		/* const */ unsigned int                : 3;
		/* const */ unsigned int ACK21          : 1;
		/* const */ unsigned int NACK21         : 1;
		/* const */ unsigned int BNR21          : 1;
		/* const */ unsigned int WNI21          : 1;
		/* const */ unsigned int TRI21          : 1;
		/* const */ unsigned int                : 3;
		/* const */ unsigned int ACK22          : 1;
		/* const */ unsigned int NACK22         : 1;
		/* const */ unsigned int BNR22          : 1;
		/* const */ unsigned int WNI22          : 1;
		/* const */ unsigned int TRI22          : 1;
		/* const */ unsigned int                : 3;
		/* const */ unsigned int ACK23          : 1;
		/* const */ unsigned int NACK23         : 1;
		/* const */ unsigned int BNR23          : 1;
		/* const */ unsigned int WNI23          : 1;
		/* const */ unsigned int TRI23          : 1;
		/* const */ unsigned int                : 3;
	} B;
	int I;
	unsigned int U;

} USB_EPIR2_type;
#define USB_EPIR2	(*( USB_EPIR2_type *) 0xF00E2864u)	/* Endpoint  Interrupt Request Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int ACK30          : 1;
		/* const */ unsigned int NACK30         : 1;
		/* const */ unsigned int BNR30          : 1;
		/* const */ unsigned int WNI30          : 1;
		/* const */ unsigned int TRI30          : 1;
		/* const */ unsigned int                : 3;
		/* const */ unsigned int ACK31          : 1;
		/* const */ unsigned int NACK31         : 1;
		/* const */ unsigned int BNR31          : 1;
		/* const */ unsigned int WNI31          : 1;
		/* const */ unsigned int TRI31          : 1;
		/* const */ unsigned int                : 3;
		/* const */ unsigned int ACK32          : 1;
		/* const */ unsigned int NACK32         : 1;
		/* const */ unsigned int BNR32          : 1;
		/* const */ unsigned int WNI32          : 1;
		/* const */ unsigned int TRI32          : 1;
		/* const */ unsigned int                : 3;
		/* const */ unsigned int ACK33          : 1;
		/* const */ unsigned int NACK33         : 1;
		/* const */ unsigned int BNR33          : 1;
		/* const */ unsigned int WNI33          : 1;
		/* const */ unsigned int TRI33          : 1;
		/* const */ unsigned int                : 3;
	} B;
	int I;
	unsigned int U;

} USB_EPIR3_type;
#define USB_EPIR3	(*( USB_EPIR3_type *) 0xF00E2868u)	/* Endpoint  Interrupt Request Register */

typedef volatile union
{
	struct
	{ 
		unsigned int ACKR00         : 1;
		unsigned int NACKR00        : 1;
		unsigned int BNRR00         : 1;
		unsigned int WNIR00         : 1;
		unsigned int TRIR00         : 1;
		unsigned int                : 3;
		unsigned int ACKR01         : 1;
		unsigned int NACKR01        : 1;
		unsigned int BNRR01         : 1;
		unsigned int WNIR01         : 1;
		unsigned int TRIR01         : 1;
		unsigned int                : 3;
		unsigned int ACKR02         : 1;
		unsigned int NACKR02        : 1;
		unsigned int BNRR02         : 1;
		unsigned int WNIR02         : 1;
		unsigned int TRIR02         : 1;
		unsigned int                : 3;
		unsigned int ACKR03         : 1;
		unsigned int NACKR03        : 1;
		unsigned int BNRR03         : 1;
		unsigned int WNIR03         : 1;
		unsigned int TRIR03         : 1;
		unsigned int                : 3;
	} B;
	int I;
	unsigned int U;

} USB_EPIRST0_type;
#define USB_EPIRST0	(*( USB_EPIRST0_type *) 0xF00E286Cu)	/* Endpoint Interrupt Reset Register */

typedef volatile union
{
	struct
	{ 
		unsigned int ACKR10         : 1;
		unsigned int NACKR10        : 1;
		unsigned int BNRR10         : 1;
		unsigned int WNIR10         : 1;
		unsigned int TRIR10         : 1;
		unsigned int                : 3;
		unsigned int ACKR11         : 1;
		unsigned int NACKR11        : 1;
		unsigned int BNRR11         : 1;
		unsigned int WNIR11         : 1;
		unsigned int TRIR11         : 1;
		unsigned int                : 3;
		unsigned int ACKR12         : 1;
		unsigned int NACKR12        : 1;
		unsigned int BNRR12         : 1;
		unsigned int WNIR12         : 1;
		unsigned int TRIR12         : 1;
		unsigned int                : 3;
		unsigned int ACKR13         : 1;
		unsigned int NACKR13        : 1;
		unsigned int BNRR13         : 1;
		unsigned int WNIR13         : 1;
		unsigned int TRIR13         : 1;
		unsigned int                : 3;
	} B;
	int I;
	unsigned int U;

} USB_EPIRST1_type;
#define USB_EPIRST1	(*( USB_EPIRST1_type *) 0xF00E2870u)	/* Endpoint Interrupt Reset Register */

typedef volatile union
{
	struct
	{ 
		unsigned int ACKR20         : 1;
		unsigned int NACKR20        : 1;
		unsigned int BNRR20         : 1;
		unsigned int WNIR20         : 1;
		unsigned int TRIR20         : 1;
		unsigned int                : 3;
		unsigned int ACKR21         : 1;
		unsigned int NACKR21        : 1;
		unsigned int BNRR21         : 1;
		unsigned int WNIR21         : 1;
		unsigned int TRIR21         : 1;
		unsigned int                : 3;
		unsigned int ACKR22         : 1;
		unsigned int NACKR22        : 1;
		unsigned int BNRR22         : 1;
		unsigned int WNIR22         : 1;
		unsigned int TRIR22         : 1;
		unsigned int                : 3;
		unsigned int ACKR23         : 1;
		unsigned int NACKR23        : 1;
		unsigned int BNRR23         : 1;
		unsigned int WNIR23         : 1;
		unsigned int TRIR23         : 1;
		unsigned int                : 3;
	} B;
	int I;
	unsigned int U;

} USB_EPIRST2_type;
#define USB_EPIRST2	(*( USB_EPIRST2_type *) 0xF00E2874u)	/* Endpoint Interrupt Reset Register */

typedef volatile union
{
	struct
	{ 
		unsigned int ACKR30         : 1;
		unsigned int NACKR30        : 1;
		unsigned int BNRR30         : 1;
		unsigned int WNIR30         : 1;
		unsigned int TRIR30         : 1;
		unsigned int                : 3;
		unsigned int ACKR31         : 1;
		unsigned int NACKR31        : 1;
		unsigned int BNRR31         : 1;
		unsigned int WNIR31         : 1;
		unsigned int TRIR31         : 1;
		unsigned int                : 3;
		unsigned int ACKR32         : 1;
		unsigned int NACKR32        : 1;
		unsigned int BNRR32         : 1;
		unsigned int WNIR32         : 1;
		unsigned int TRIR32         : 1;
		unsigned int                : 3;
		unsigned int ACKR33         : 1;
		unsigned int NACKR33        : 1;
		unsigned int BNRR33         : 1;
		unsigned int WNIR33         : 1;
		unsigned int TRIR33         : 1;
		unsigned int                : 3;
	} B;
	int I;
	unsigned int U;

} USB_EPIRST3_type;
#define USB_EPIRST3	(*( USB_EPIRST3_type *) 0xF00E2878u)	/* Endpoint Interrupt Reset Register */

typedef volatile union
{
	struct
	{ 
		unsigned int ACKT00         : 1;
		unsigned int NACKT00        : 1;
		unsigned int BNRT00         : 1;
		unsigned int WNIT00         : 1;
		unsigned int TRIT00         : 1;
		unsigned int                : 3;
		unsigned int ACKT01         : 1;
		unsigned int NACKT01        : 1;
		unsigned int BNRT01         : 1;
		unsigned int WNIT01         : 1;
		unsigned int TRIT01         : 1;
		unsigned int                : 3;
		unsigned int ACKT02         : 1;
		unsigned int NACKT02        : 1;
		unsigned int BNRT02         : 1;
		unsigned int WNIT02         : 1;
		unsigned int TRIT02         : 1;
		unsigned int                : 3;
		unsigned int ACKT03         : 1;
		unsigned int NACKT03        : 1;
		unsigned int BNRT03         : 1;
		unsigned int WNIT03         : 1;
		unsigned int TRIT03         : 1;
		unsigned int                : 3;
	} B;
	int I;
	unsigned int U;

} USB_EPIT0_type;
#define USB_EPIT0	(*( USB_EPIT0_type *) 0xF00E287Cu)	/* Endpoint Interrupt Test Register */

typedef volatile union
{
	struct
	{ 
		unsigned int ACKT10         : 1;
		unsigned int NACKT10        : 1;
		unsigned int BNRT10         : 1;
		unsigned int WNIT10         : 1;
		unsigned int TRIT10         : 1;
		unsigned int                : 3;
		unsigned int ACKT11         : 1;
		unsigned int NACKT11        : 1;
		unsigned int BNRT11         : 1;
		unsigned int WNIT11         : 1;
		unsigned int TRIT11         : 1;
		unsigned int                : 3;
		unsigned int ACKT12         : 1;
		unsigned int NACKT12        : 1;
		unsigned int BNRT12         : 1;
		unsigned int WNIT12         : 1;
		unsigned int TRIT12         : 1;
		unsigned int                : 3;
		unsigned int ACKT13         : 1;
		unsigned int NACKT13        : 1;
		unsigned int BNRT13         : 1;
		unsigned int WNIT13         : 1;
		unsigned int TRIT13         : 1;
		unsigned int                : 3;
	} B;
	int I;
	unsigned int U;

} USB_EPIT1_type;
#define USB_EPIT1	(*( USB_EPIT1_type *) 0xF00E2880u)	/* Endpoint Interrupt Test Register */

typedef volatile union
{
	struct
	{ 
		unsigned int ACKT20         : 1;
		unsigned int NACKT20        : 1;
		unsigned int BNRT20         : 1;
		unsigned int WNIT20         : 1;
		unsigned int TRIT20         : 1;
		unsigned int                : 3;
		unsigned int ACKT21         : 1;
		unsigned int NACKT21        : 1;
		unsigned int BNRT21         : 1;
		unsigned int WNIT21         : 1;
		unsigned int TRIT21         : 1;
		unsigned int                : 3;
		unsigned int ACKT22         : 1;
		unsigned int NACKT22        : 1;
		unsigned int BNRT22         : 1;
		unsigned int WNIT22         : 1;
		unsigned int TRIT22         : 1;
		unsigned int                : 3;
		unsigned int ACKT23         : 1;
		unsigned int NACKT23        : 1;
		unsigned int BNRT23         : 1;
		unsigned int WNIT23         : 1;
		unsigned int TRIT23         : 1;
		unsigned int                : 3;
	} B;
	int I;
	unsigned int U;

} USB_EPIT2_type;
#define USB_EPIT2	(*( USB_EPIT2_type *) 0xF00E2884u)	/* Endpoint Interrupt Test Register */

typedef volatile union
{
	struct
	{ 
		unsigned int ACKT30         : 1;
		unsigned int NACKT30        : 1;
		unsigned int BNRT30         : 1;
		unsigned int WNIT30         : 1;
		unsigned int TRIT30         : 1;
		unsigned int                : 3;
		unsigned int ACKT31         : 1;
		unsigned int NACKT31        : 1;
		unsigned int BNRT31         : 1;
		unsigned int WNIT31         : 1;
		unsigned int TRIT31         : 1;
		unsigned int                : 3;
		unsigned int ACKT32         : 1;
		unsigned int NACKT32        : 1;
		unsigned int BNRT32         : 1;
		unsigned int WNIT32         : 1;
		unsigned int TRIT32         : 1;
		unsigned int                : 3;
		unsigned int ACKT33         : 1;
		unsigned int NACKT33        : 1;
		unsigned int BNRT33         : 1;
		unsigned int WNIT33         : 1;
		unsigned int TRIT33         : 1;
		unsigned int                : 3;
	} B;
	int I;
	unsigned int U;

} USB_EPIT3_type;
#define USB_EPIT3	(*( USB_EPIT3_type *) 0xF00E2888u)	/* Endpoint Interrupt Test Register */

typedef volatile union
{
	struct
	{ 
		unsigned int DAIT           : 1;
		unsigned int DDIT           : 1;
		unsigned int SBIT           : 1;
		unsigned int SEIT           : 1;
		unsigned int SE0IT          : 1;
		unsigned int                : 3;
		unsigned int STIT           : 1;
		unsigned int SUIT           : 1;
		unsigned int CFIT           : 1;
		unsigned int SOFIT          : 1;
		unsigned int EDIIT          : 1;
		unsigned int FRT            : 1;
		unsigned int FNRT           : 1;
		unsigned int                : 17;
	} B;
	int I;
	unsigned int U;

} USB_DIT_type;
#define USB_DIT	(*( USB_DIT_type *) 0xF00E288Cu)	/* Device Interrupt Test Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int ZLP0           : 1;
		/* const */ unsigned int ZLP1           : 1;
		/* const */ unsigned int ZLP2           : 1;
		/* const */ unsigned int ZLP3           : 1;
		/* const */ unsigned int ZLP4           : 1;
		/* const */ unsigned int ZLP5           : 1;
		/* const */ unsigned int ZLP6           : 1;
		/* const */ unsigned int ZLP7           : 1;
		/* const */ unsigned int ZLP8           : 1;
		/* const */ unsigned int ZLP9           : 1;
		/* const */ unsigned int ZLP10          : 1;
		/* const */ unsigned int ZLP11          : 1;
		/* const */ unsigned int ZLP12          : 1;
		/* const */ unsigned int ZLP13          : 1;
		/* const */ unsigned int ZLP14          : 1;
		/* const */ unsigned int ZLP15          : 1;
		/* const */ unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} USB_ZLPEN_type;
#define USB_ZLPEN	(*( USB_ZLPEN_type *) 0xF00E2890u)	/* Zero-Length-Package Enable Register */

typedef volatile union
{
	struct
	{ 
		unsigned int ZLPS0          : 1;
		unsigned int ZLPS1          : 1;
		unsigned int ZLPS2          : 1;
		unsigned int ZLPS3          : 1;
		unsigned int ZLPS4          : 1;
		unsigned int ZLPS5          : 1;
		unsigned int ZLPS6          : 1;
		unsigned int ZLPS7          : 1;
		unsigned int ZLPS8          : 1;
		unsigned int ZLPS9          : 1;
		unsigned int ZLPS10         : 1;
		unsigned int ZLPS11         : 1;
		unsigned int ZLPS12         : 1;
		unsigned int ZLPS13         : 1;
		unsigned int ZLPS14         : 1;
		unsigned int ZLPS15         : 1;
		unsigned int ZLPR0          : 1;
		unsigned int ZLPR1          : 1;
		unsigned int ZLPR2          : 1;
		unsigned int ZLPR3          : 1;
		unsigned int ZLPR4          : 1;
		unsigned int ZLPR5          : 1;
		unsigned int ZLPR6          : 1;
		unsigned int ZLPR7          : 1;
		unsigned int ZLPR8          : 1;
		unsigned int ZLPR9          : 1;
		unsigned int ZLPR10         : 1;
		unsigned int ZLPR11         : 1;
		unsigned int ZLPR12         : 1;
		unsigned int ZLPR13         : 1;
		unsigned int ZLPR14         : 1;
		unsigned int ZLPR15         : 1;
	} B;
	int I;
	unsigned int U;

} USB_ZLPSR_type;
#define USB_ZLPSR	(*( USB_ZLPSR_type *) 0xF00E2894u)	/* Zero-Length-Package Set/Reset Register */

typedef volatile union
{
	struct
	{ 
		unsigned int SRPN           : 8;
		unsigned int                : 2;
		unsigned int TOS            : 1;
		unsigned int                : 1;
		unsigned int SRE            : 1;
		/* const */ unsigned int SRR            : 1;
		unsigned int CLRR           : 1;
		unsigned int SETR           : 1;
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} USB_SRC7_type;
#define USB_SRC7	(*( USB_SRC7_type *) 0xF00E28E0u)	/* Service Request Control Register 7 */

typedef volatile union
{
	struct
	{ 
		unsigned int SRPN           : 8;
		unsigned int                : 2;
		unsigned int TOS            : 1;
		unsigned int                : 1;
		unsigned int SRE            : 1;
		/* const */ unsigned int SRR            : 1;
		unsigned int CLRR           : 1;
		unsigned int SETR           : 1;
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} USB_SRC6_type;
#define USB_SRC6	(*( USB_SRC6_type *) 0xF00E28E4u)	/* Service Request Control Register 6 */

typedef volatile union
{
	struct
	{ 
		unsigned int SRPN           : 8;
		unsigned int                : 2;
		unsigned int TOS            : 1;
		unsigned int                : 1;
		unsigned int SRE            : 1;
		/* const */ unsigned int SRR            : 1;
		unsigned int CLRR           : 1;
		unsigned int SETR           : 1;
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} USB_SRC5_type;
#define USB_SRC5	(*( USB_SRC5_type *) 0xF00E28E8u)	/* Service Request Control Register 5 */

typedef volatile union
{
	struct
	{ 
		unsigned int SRPN           : 8;
		unsigned int                : 2;
		unsigned int TOS            : 1;
		unsigned int                : 1;
		unsigned int SRE            : 1;
		/* const */ unsigned int SRR            : 1;
		unsigned int CLRR           : 1;
		unsigned int SETR           : 1;
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} USB_SRC4_type;
#define USB_SRC4	(*( USB_SRC4_type *) 0xF00E28ECu)	/* Service Request Control Register 4 */

typedef volatile union
{
	struct
	{ 
		unsigned int SRPN           : 8;
		unsigned int                : 2;
		unsigned int TOS            : 1;
		unsigned int                : 1;
		unsigned int SRE            : 1;
		/* const */ unsigned int SRR            : 1;
		unsigned int CLRR           : 1;
		unsigned int SETR           : 1;
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} USB_SRC3_type;
#define USB_SRC3	(*( USB_SRC3_type *) 0xF00E28F0u)	/* Service Request Control Register 3 */

typedef volatile union
{
	struct
	{ 
		unsigned int SRPN           : 8;
		unsigned int                : 2;
		unsigned int TOS            : 1;
		unsigned int                : 1;
		unsigned int SRE            : 1;
		/* const */ unsigned int SRR            : 1;
		unsigned int CLRR           : 1;
		unsigned int SETR           : 1;
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} USB_SRC2_type;
#define USB_SRC2	(*( USB_SRC2_type *) 0xF00E28F4u)	/* Service Request Control Register 2 */

typedef volatile union
{
	struct
	{ 
		unsigned int SRPN           : 8;
		unsigned int                : 2;
		unsigned int TOS            : 1;
		unsigned int                : 1;
		unsigned int SRE            : 1;
		/* const */ unsigned int SRR            : 1;
		unsigned int CLRR           : 1;
		unsigned int SETR           : 1;
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} USB_SRC1_type;
#define USB_SRC1	(*( USB_SRC1_type *) 0xF00E28F8u)	/* Service Request Control Register 1 */

typedef volatile union
{
	struct
	{ 
		unsigned int SRPN           : 8;
		unsigned int                : 2;
		unsigned int TOS            : 1;
		unsigned int                : 1;
		unsigned int SRE            : 1;
		/* const */ unsigned int SRR            : 1;
		unsigned int CLRR           : 1;
		unsigned int SETR           : 1;
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} USB_SRC0_type;
#define USB_SRC0	(*( USB_SRC0_type *) 0xF00E28FCu)	/* Service Request Control Register 0 */


/* SSC00 */
typedef volatile union
{
	struct
	{ 
		unsigned int DISR           : 1;
		/* const */ unsigned int DISS           : 1;
		unsigned int SPEN           : 1;
		unsigned int EDIS           : 1;
		unsigned int SBWE           : 1;
		unsigned int FSOE           : 1;
		unsigned int                : 26;
	} B;
	int I;
	unsigned int U;

} SSC0_CLC_type;
#define SSC0_CLC	(*( SSC0_CLC_type *) 0xF0100100u)	/* SSC Clock Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int MRIS           : 1;
		unsigned int SRIS           : 1;
		unsigned int SCIS           : 1;
		unsigned int SLSIS          : 3;
		unsigned int                : 2;
		unsigned int STIP           : 1;
		unsigned int                : 23;
	} B;
	int I;
	unsigned int U;

} SSC0_PISEL_type;
#define SSC0_PISEL	(*( SSC0_PISEL_type *) 0xF0100104u)	/* SSC Port Input Select Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int MOD_REV        : 8;
		/* const */ unsigned int MOD_TYPE       : 8;
		/* const */ unsigned int MOD_NUMBER     : 16;
	} B;
	int I;
	unsigned int U;

} SSC0_ID_type;
#define SSC0_ID	(*( SSC0_ID_type *) 0xF0100108u)	/* SSC0 Module Identification Register */

typedef volatile union
{
	struct
	{ 
		unsigned int STEP           : 10;
		unsigned int                : 2;
		unsigned int SC             : 2;
		unsigned int DM             : 2;
		/* const */ unsigned int RESULT         : 10;
		unsigned int                : 2;
		/* const */ unsigned int SUSACK         : 1;
		/* const */ unsigned int SUSREQ         : 1;
		unsigned int ENHW           : 1;
		unsigned int DISCLK         : 1;
	} B;
	int I;
	unsigned int U;

} SSC0_FDR_type;
#define SSC0_FDR	(*( SSC0_FDR_type *) 0xF010010Cu)	/* SSC Fractional Divider Register */

typedef volatile union
{
	struct
	{ 
		unsigned int BM             : 4;
		unsigned int HB             : 1;
		unsigned int PH             : 1;
		unsigned int PO             : 1;
		unsigned int LB             : 1;
		unsigned int TEN            : 1;
		unsigned int REN            : 1;
		unsigned int PEN            : 1;
		unsigned int BEN            : 1;
		unsigned int AREN           : 1;
		unsigned int                : 1;
		unsigned int MS             : 1;
		unsigned int EN             : 1;
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} SSC0_CON_type;
#define SSC0_CON	(*( SSC0_CON_type *) 0xF0100110u)	/* SSC Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int BR_VALUE       : 16;
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} SSC0_BR_type;
#define SSC0_BR	(*( SSC0_BR_type *) 0xF0100114u)	/* SSC Baudrate Timer Reload Register */

typedef volatile union
{
	struct
	{ 
		unsigned int AOL0           : 1;
		unsigned int AOL1           : 1;
		unsigned int AOL2           : 1;
		unsigned int AOL3           : 1;
		unsigned int AOL4           : 1;
		unsigned int AOL5           : 1;
		unsigned int AOL6           : 1;
		unsigned int AOL7           : 1;
		unsigned int OEN0           : 1;
		unsigned int OEN1           : 1;
		unsigned int OEN2           : 1;
		unsigned int OEN3           : 1;
		unsigned int OEN4           : 1;
		unsigned int OEN5           : 1;
		unsigned int OEN6           : 1;
		unsigned int OEN7           : 1;
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} SSC0_SSOC_type;
#define SSC0_SSOC	(*( SSC0_SSOC_type *) 0xF0100118u)	/* Slave Select Output Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int LEAD           : 2;
		unsigned int TRAIL          : 2;
		unsigned int INACT          : 2;
		unsigned int                : 2;
		unsigned int SLSO7MOD       : 1;
		unsigned int                : 23;
	} B;
	int I;
	unsigned int U;

} SSC0_SSOTC_type;
#define SSC0_SSOTC	(*( SSC0_SSOTC_type *) 0xF010011Cu)	/* Slave Select Output Timing Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int TB_VALUE       : 16;
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} SSC0_TB_type;
#define SSC0_TB	(*( SSC0_TB_type *) 0xF0100120u)	/* SSC Transmit Buffer Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int RB_VALUE       : 16;
		/* const */ unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} SSC0_RB_type;
#define SSC0_RB	(*( SSC0_RB_type *) 0xF0100124u)	/* SSC Receive Buffer Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int BC             : 4;
		/* const */ unsigned int                : 4;
		/* const */ unsigned int TE             : 1;
		/* const */ unsigned int RE             : 1;
		/* const */ unsigned int PE             : 1;
		/* const */ unsigned int BE             : 1;
		/* const */ unsigned int BSY            : 1;
		/* const */ unsigned int                : 19;
	} B;
	int I;
	unsigned int U;

} SSC0_STAT_type;
#define SSC0_STAT	(*( SSC0_STAT_type *) 0xF0100128u)	/* SSC Status Register */

typedef volatile union
{
	struct
	{ 
		unsigned int                : 8;
		unsigned int CLRTE          : 1;
		unsigned int CLRRE          : 1;
		unsigned int CLRPE          : 1;
		unsigned int CLRBE          : 1;
		unsigned int SETTE          : 1;
		unsigned int SETRE          : 1;
		unsigned int SETPE          : 1;
		unsigned int SETBE          : 1;
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} SSC0_EFM_type;
#define SSC0_EFM	(*( SSC0_EFM_type *) 0xF010012Cu)	/* SSC Error Flag Modification Register */

typedef volatile union
{
	struct
	{ 
		unsigned int RXFEN          : 1;
		unsigned int RXFFLU         : 1;
		unsigned int RXTMEN         : 1;
		unsigned int                : 5;
		unsigned int RXFITL         : 4;
		unsigned int                : 20;
	} B;
	int I;
	unsigned int U;

} SSC0_RXFCON_type;
#define SSC0_RXFCON	(*( SSC0_RXFCON_type *) 0xF0100130u)	/* SSC Receive FIFO Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int TXFEN          : 1;
		unsigned int TXFFLU         : 1;
		unsigned int TXTMEN         : 1;
		unsigned int                : 5;
		unsigned int TXFITL         : 4;
		unsigned int                : 20;
	} B;
	int I;
	unsigned int U;

} SSC0_TXFCON_type;
#define SSC0_TXFCON	(*( SSC0_TXFCON_type *) 0xF0100134u)	/* SSC Transmit FIFO Control Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int RXFFL          : 4;
		/* const */ unsigned int                : 4;
		/* const */ unsigned int TXFFL          : 4;
		/* const */ unsigned int                : 20;
	} B;
	int I;
	unsigned int U;

} SSC0_FSTAT_type;
#define SSC0_FSTAT	(*( SSC0_FSTAT_type *) 0xF0100138u)	/* SSC FIFO Status Register */

typedef volatile union
{
	struct
	{ 
		unsigned int SRPN           : 8;
		unsigned int                : 2;
		unsigned int TOS            : 1;
		unsigned int                : 1;
		unsigned int SRE            : 1;
		/* const */ unsigned int SRR            : 1;
		unsigned int CLRR           : 1;
		unsigned int SETR           : 1;
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} SSC0_TSRC_type;
#define SSC0_TSRC	(*( SSC0_TSRC_type *) 0xF01001F4u)	/* SSC Transmit Interrupt Service Request Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int SRPN           : 8;
		unsigned int                : 2;
		unsigned int TOS            : 1;
		unsigned int                : 1;
		unsigned int SRE            : 1;
		/* const */ unsigned int SRR            : 1;
		unsigned int CLRR           : 1;
		unsigned int SETR           : 1;
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} SSC0_RSRC_type;
#define SSC0_RSRC	(*( SSC0_RSRC_type *) 0xF01001F8u)	/* SSC Receive Interrupt Service Request Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int SRPN           : 8;
		unsigned int                : 2;
		unsigned int TOS            : 1;
		unsigned int                : 1;
		unsigned int SRE            : 1;
		/* const */ unsigned int SRR            : 1;
		unsigned int CLRR           : 1;
		unsigned int SETR           : 1;
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} SSC0_ESRC_type;
#define SSC0_ESRC	(*( SSC0_ESRC_type *) 0xF01001FCu)	/* SSC Error Interrupt Service Request Control Register */


/* SSC01 */
typedef volatile union
{
	struct
	{ 
		unsigned int DISR           : 1;
		/* const */ unsigned int DISS           : 1;
		unsigned int SPEN           : 1;
		unsigned int EDIS           : 1;
		unsigned int SBWE           : 1;
		unsigned int FSOE           : 1;
		unsigned int                : 26;
	} B;
	int I;
	unsigned int U;

} SSC1_CLC_type;
#define SSC1_CLC	(*( SSC1_CLC_type *) 0xF0100200u)	/* SSC Clock Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int MRIS           : 1;
		unsigned int SRIS           : 1;
		unsigned int SCIS           : 1;
		unsigned int SLSIS          : 3;
		unsigned int                : 2;
		unsigned int STIP           : 1;
		unsigned int                : 23;
	} B;
	int I;
	unsigned int U;

} SSC1_PISEL_type;
#define SSC1_PISEL	(*( SSC1_PISEL_type *) 0xF0100204u)	/* SSC Port Input Select Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int MOD_REV        : 8;
		/* const */ unsigned int MOD_TYPE       : 8;
		/* const */ unsigned int MOD_NUMBER     : 16;
	} B;
	int I;
	unsigned int U;

} SSC1_ID_type;
#define SSC1_ID	(*( SSC1_ID_type *) 0xF0100208u)	/* SSC0 Module Identification Register */

typedef volatile union
{
	struct
	{ 
		unsigned int STEP           : 10;
		unsigned int                : 2;
		unsigned int SC             : 2;
		unsigned int DM             : 2;
		/* const */ unsigned int RESULT         : 10;
		unsigned int                : 2;
		/* const */ unsigned int SUSACK         : 1;
		/* const */ unsigned int SUSREQ         : 1;
		unsigned int ENHW           : 1;
		unsigned int DISCLK         : 1;
	} B;
	int I;
	unsigned int U;

} SSC1_FDR_type;
#define SSC1_FDR	(*( SSC1_FDR_type *) 0xF010020Cu)	/* SSC Fractional Divider Register */

typedef volatile union
{
	struct
	{ 
		unsigned int BM             : 4;
		unsigned int HB             : 1;
		unsigned int PH             : 1;
		unsigned int PO             : 1;
		unsigned int LB             : 1;
		unsigned int TEN            : 1;
		unsigned int REN            : 1;
		unsigned int PEN            : 1;
		unsigned int BEN            : 1;
		unsigned int AREN           : 1;
		unsigned int                : 1;
		unsigned int MS             : 1;
		unsigned int EN             : 1;
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} SSC1_CON_type;
#define SSC1_CON	(*( SSC1_CON_type *) 0xF0100210u)	/* SSC Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int BR_VALUE       : 16;
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} SSC1_BR_type;
#define SSC1_BR	(*( SSC1_BR_type *) 0xF0100214u)	/* SSC Baudrate Timer Reload Register */

typedef volatile union
{
	struct
	{ 
		unsigned int AOL0           : 1;
		unsigned int AOL1           : 1;
		unsigned int AOL2           : 1;
		unsigned int AOL3           : 1;
		unsigned int AOL4           : 1;
		unsigned int AOL5           : 1;
		unsigned int AOL6           : 1;
		unsigned int AOL7           : 1;
		unsigned int OEN0           : 1;
		unsigned int OEN1           : 1;
		unsigned int OEN2           : 1;
		unsigned int OEN3           : 1;
		unsigned int OEN4           : 1;
		unsigned int OEN5           : 1;
		unsigned int OEN6           : 1;
		unsigned int OEN7           : 1;
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} SSC1_SSOC_type;
#define SSC1_SSOC	(*( SSC1_SSOC_type *) 0xF0100218u)	/* Slave Select Output Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int LEAD           : 2;
		unsigned int TRAIL          : 2;
		unsigned int INACT          : 2;
		unsigned int                : 2;
		unsigned int SLSO7MOD       : 1;
		unsigned int                : 23;
	} B;
	int I;
	unsigned int U;

} SSC1_SSOTC_type;
#define SSC1_SSOTC	(*( SSC1_SSOTC_type *) 0xF010021Cu)	/* Slave Select Output Timing Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int TB_VALUE       : 16;
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} SSC1_TB_type;
#define SSC1_TB	(*( SSC1_TB_type *) 0xF0100220u)	/* SSC Transmit Buffer Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int RB_VALUE       : 16;
		/* const */ unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} SSC1_RB_type;
#define SSC1_RB	(*( SSC1_RB_type *) 0xF0100224u)	/* SSC Receive Buffer Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int BC             : 4;
		/* const */ unsigned int                : 4;
		/* const */ unsigned int TE             : 1;
		/* const */ unsigned int RE             : 1;
		/* const */ unsigned int PE             : 1;
		/* const */ unsigned int BE             : 1;
		/* const */ unsigned int BSY            : 1;
		/* const */ unsigned int                : 19;
	} B;
	int I;
	unsigned int U;

} SSC1_STAT_type;
#define SSC1_STAT	(*( SSC1_STAT_type *) 0xF0100228u)	/* SSC Status Register */

typedef volatile union
{
	struct
	{ 
		unsigned int                : 8;
		unsigned int CLRTE          : 1;
		unsigned int CLRRE          : 1;
		unsigned int CLRPE          : 1;
		unsigned int CLRBE          : 1;
		unsigned int SETTE          : 1;
		unsigned int SETRE          : 1;
		unsigned int SETPE          : 1;
		unsigned int SETBE          : 1;
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} SSC1_EFM_type;
#define SSC1_EFM	(*( SSC1_EFM_type *) 0xF010022Cu)	/* SSC Error Flag Modification Register */

typedef volatile union
{
	struct
	{ 
		unsigned int RXFEN          : 1;
		unsigned int RXFFLU         : 1;
		unsigned int RXTMEN         : 1;
		unsigned int                : 5;
		unsigned int RXFITL         : 4;
		unsigned int                : 20;
	} B;
	int I;
	unsigned int U;

} SSC1_RXFCON_type;
#define SSC1_RXFCON	(*( SSC1_RXFCON_type *) 0xF0100230u)	/* SSC Receive FIFO Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int TXFEN          : 1;
		unsigned int TXFFLU         : 1;
		unsigned int TXTMEN         : 1;
		unsigned int                : 5;
		unsigned int TXFITL         : 4;
		unsigned int                : 20;
	} B;
	int I;
	unsigned int U;

} SSC1_TXFCON_type;
#define SSC1_TXFCON	(*( SSC1_TXFCON_type *) 0xF0100234u)	/* SSC Transmit FIFO Control Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int RXFFL          : 4;
		/* const */ unsigned int                : 4;
		/* const */ unsigned int TXFFL          : 4;
		/* const */ unsigned int                : 20;
	} B;
	int I;
	unsigned int U;

} SSC1_FSTAT_type;
#define SSC1_FSTAT	(*( SSC1_FSTAT_type *) 0xF0100238u)	/* SSC FIFO Status Register */

typedef volatile union
{
	struct
	{ 
		unsigned int SRPN           : 8;
		unsigned int                : 2;
		unsigned int TOS            : 1;
		unsigned int                : 1;
		unsigned int SRE            : 1;
		/* const */ unsigned int SRR            : 1;
		unsigned int CLRR           : 1;
		unsigned int SETR           : 1;
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} SSC1_TSRC_type;
#define SSC1_TSRC	(*( SSC1_TSRC_type *) 0xF01002F4u)	/* SSC Transmit Interrupt Service Request Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int SRPN           : 8;
		unsigned int                : 2;
		unsigned int TOS            : 1;
		unsigned int                : 1;
		unsigned int SRE            : 1;
		/* const */ unsigned int SRR            : 1;
		unsigned int CLRR           : 1;
		unsigned int SETR           : 1;
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} SSC1_RSRC_type;
#define SSC1_RSRC	(*( SSC1_RSRC_type *) 0xF01002F8u)	/* SSC Receive Interrupt Service Request Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int SRPN           : 8;
		unsigned int                : 2;
		unsigned int TOS            : 1;
		unsigned int                : 1;
		unsigned int SRE            : 1;
		/* const */ unsigned int SRR            : 1;
		unsigned int CLRR           : 1;
		unsigned int SETR           : 1;
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} SSC1_ESRC_type;
#define SSC1_ESRC	(*( SSC1_ESRC_type *) 0xF01002FCu)	/* SSC Error Interrupt Service Request Control Register */


/* ASC CD0 */
typedef volatile union
{
	struct
	{ 
		unsigned int DISR           : 1;
		/* const */ unsigned int DISS           : 1;
		unsigned int SPEN           : 1;
		unsigned int EDIS           : 1;
		unsigned int SBWE           : 1;
		unsigned int FSOE           : 1;
		unsigned int                : 2;
		unsigned int RMC            : 8;
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} ASC0_CLC_type;
#define ASC0_CLC	(*( ASC0_CLC_type *) 0xF0100300u)	/* ASC Clock Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int RIS            : 1;
		unsigned int                : 31;
	} B;
	int I;
	unsigned int U;

} ASC0_PISEL_type;
#define ASC0_PISEL	(*( ASC0_PISEL_type *) 0xF0100304u)	/* ASC Peripheral Input Select Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int MOD_REV        : 8;
		/* const */ unsigned int MOD_NUMBER     : 8;
		/* const */ unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} ASC0_ID_type;
#define ASC0_ID	(*( ASC0_ID_type *) 0xF0100308u)	/* ASC Module Identification Register */

typedef volatile union
{
	struct
	{ 
		unsigned int M              : 3;
		unsigned int STP            : 1;
		unsigned int REN            : 1;
		unsigned int PEN            : 1;
		unsigned int FEN            : 1;
		unsigned int OEN            : 1;
		unsigned int PE             : 1;
		unsigned int FE             : 1;
		unsigned int OE             : 1;
		unsigned int FDE            : 1;
		unsigned int ODD            : 1;
		unsigned int BRS            : 1;
		unsigned int LB             : 1;
		unsigned int R              : 1;
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} ASC0_CON_type;
#define ASC0_CON	(*( ASC0_CON_type *) 0xF0100310u)	/* ASC Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int BR_VALUE       : 13;
		unsigned int                : 19;
	} B;
	int I;
	unsigned int U;

} ASC0_BG_type;
#define ASC0_BG	(*( ASC0_BG_type *) 0xF0100314u)	/* ASC Baudrate Timer Reload Register */

typedef volatile union
{
	struct
	{ 
		unsigned int FD_VALUE       : 9;
		unsigned int                : 23;
	} B;
	int I;
	unsigned int U;

} ASC0_FDV_type;
#define ASC0_FDV	(*( ASC0_FDV_type *) 0xF0100318u)	/* ASC Fractional Divider Register */

typedef volatile union
{
	struct
	{ 
		unsigned int PW_VALUE       : 8;
		unsigned int IRPW           : 1;
		unsigned int                : 23;
	} B;
	int I;
	unsigned int U;

} ASC0_PMW_type;
#define ASC0_PMW	(*( ASC0_PMW_type *) 0xF010031Cu)	/* ASC IrDA Pulse Mode/Widdth Register */

typedef volatile union
{
	struct
	{ 
		unsigned int TD_VALUE       : 9;
		unsigned int                : 23;
	} B;
	int I;
	unsigned int U;

} ASC0_TBUF_type;
#define ASC0_TBUF	(*( ASC0_TBUF_type *) 0xF0100320u)	/* ASC Transmit Buffer Register */

typedef volatile union
{
	struct
	{ 
		unsigned int RD_VALUE       : 9;
		unsigned int                : 23;
	} B;
	int I;
	unsigned int U;

} ASC0_RBUF_type;
#define ASC0_RBUF	(*( ASC0_RBUF_type *) 0xF0100324u)	/* ASC Receive Buffer Register */

typedef volatile union
{
	struct
	{ 
		unsigned int RXFEN          : 1;
		unsigned int RXFLU          : 1;
		unsigned int RXTMEN         : 1;
		unsigned int                : 5;
		unsigned int RXFITL         : 4;
		unsigned int                : 20;
	} B;
	int I;
	unsigned int U;

} ASC0_RXFCON_type;
#define ASC0_RXFCON	(*( ASC0_RXFCON_type *) 0xF0100340u)	/* SSC Receive FIFO Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int TXFEN          : 1;
		unsigned int TXFLU          : 1;
		unsigned int TXTMEN         : 1;
		unsigned int                : 5;
		unsigned int TXFITL         : 4;
		unsigned int                : 20;
	} B;
	int I;
	unsigned int U;

} ASC0_TXFCON_type;
#define ASC0_TXFCON	(*( ASC0_TXFCON_type *) 0xF0100344u)	/* SSC Transmit FIFO Control Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int RXFFL          : 4;
		/* const */ unsigned int                : 4;
		/* const */ unsigned int TXFFL          : 4;
		/* const */ unsigned int                : 20;
	} B;
	int I;
	unsigned int U;

} ASC0_FSTAT_type;
#define ASC0_FSTAT	(*( ASC0_FSTAT_type *) 0xF0100348u)	/* ASC FIFO Status Register */

typedef volatile union
{
	struct
	{ 
		unsigned int                : 4;
		unsigned int CLRREN         : 1;
		unsigned int SETREN         : 1;
		unsigned int                : 2;
		unsigned int CLRPE          : 1;
		unsigned int CLRFE          : 1;
		unsigned int CLROE          : 1;
		unsigned int SETPE          : 1;
		unsigned int SETFE          : 1;
		unsigned int SETOE          : 1;
		unsigned int                : 18;
	} B;
	int I;
	unsigned int U;

} ASC0_WHBCON_type;
#define ASC0_WHBCON	(*( ASC0_WHBCON_type *) 0xF0100350u)	/* ASC Hardware Bits Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int SRPN           : 8;
		unsigned int                : 2;
		unsigned int TOS            : 1;
		unsigned int                : 1;
		unsigned int SRE            : 1;
		/* const */ unsigned int SRR            : 1;
		unsigned int CLRR           : 1;
		unsigned int SETR           : 1;
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} ASC0_TSRC_type;
#define ASC0_TSRC	(*( ASC0_TSRC_type *) 0xF01003F0u)	/* ASC Transmit Interrupt Service Request Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int SRPN           : 8;
		unsigned int                : 2;
		unsigned int TOS            : 1;
		unsigned int                : 1;
		unsigned int SRE            : 1;
		/* const */ unsigned int SRR            : 1;
		unsigned int CLRR           : 1;
		unsigned int SETR           : 1;
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} ASC0_RSRC_type;
#define ASC0_RSRC	(*( ASC0_RSRC_type *) 0xF01003F4u)	/* ASC Receive Interrupt Service Request Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int SRPN           : 8;
		unsigned int                : 2;
		unsigned int TOS            : 1;
		unsigned int                : 1;
		unsigned int SRE            : 1;
		/* const */ unsigned int SRR            : 1;
		unsigned int CLRR           : 1;
		unsigned int SETR           : 1;
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} ASC0_ESRC_type;
#define ASC0_ESRC	(*( ASC0_ESRC_type *) 0xF01003F8u)	/* ASC Error Interrupt Service Request Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int SRPN           : 8;
		unsigned int                : 2;
		unsigned int TOS            : 1;
		unsigned int                : 1;
		unsigned int SRE            : 1;
		/* const */ unsigned int SRR            : 1;
		unsigned int CLRR           : 1;
		unsigned int SETR           : 1;
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} ASC0_TBSRC_type;
#define ASC0_TBSRC	(*( ASC0_TBSRC_type *) 0xF01003FCu)	/* ASC Transmit Buffer Service Request Control Register */


/* ASC CD1 */
typedef volatile union
{
	struct
	{ 
		unsigned int DISR           : 1;
		/* const */ unsigned int DISS           : 1;
		unsigned int SPEN           : 1;
		unsigned int EDIS           : 1;
		unsigned int SBWE           : 1;
		unsigned int FSOE           : 1;
		unsigned int                : 2;
		unsigned int RMC            : 8;
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} ASC1_CLC_type;
#define ASC1_CLC	(*( ASC1_CLC_type *) 0xF0100400u)	/* ASC Clock Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int RIS            : 1;
		unsigned int                : 31;
	} B;
	int I;
	unsigned int U;

} ASC1_PISEL_type;
#define ASC1_PISEL	(*( ASC1_PISEL_type *) 0xF0100404u)	/* ASC Peripheral Input Select Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int MOD_REV        : 8;
		/* const */ unsigned int MOD_NUMBER     : 8;
		/* const */ unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} ASC1_ID_type;
#define ASC1_ID	(*( ASC1_ID_type *) 0xF0100408u)	/* ASC Module Identification Register */

typedef volatile union
{
	struct
	{ 
		unsigned int M              : 3;
		unsigned int STP            : 1;
		unsigned int REN            : 1;
		unsigned int PEN            : 1;
		unsigned int FEN            : 1;
		unsigned int OEN            : 1;
		unsigned int PE             : 1;
		unsigned int FE             : 1;
		unsigned int OE             : 1;
		unsigned int FDE            : 1;
		unsigned int ODD            : 1;
		unsigned int BRS            : 1;
		unsigned int LB             : 1;
		unsigned int R              : 1;
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} ASC1_CON_type;
#define ASC1_CON	(*( ASC1_CON_type *) 0xF0100410u)	/* ASC Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int BR_VALUE       : 13;
		unsigned int                : 19;
	} B;
	int I;
	unsigned int U;

} ASC1_BG_type;
#define ASC1_BG	(*( ASC1_BG_type *) 0xF0100414u)	/* ASC Baudrate Timer Reload Register */

typedef volatile union
{
	struct
	{ 
		unsigned int FD_VALUE       : 9;
		unsigned int                : 23;
	} B;
	int I;
	unsigned int U;

} ASC1_FDV_type;
#define ASC1_FDV	(*( ASC1_FDV_type *) 0xF0100418u)	/* ASC Fractional Divider Register */

typedef volatile union
{
	struct
	{ 
		unsigned int PW_VALUE       : 8;
		unsigned int IRPW           : 1;
		unsigned int                : 23;
	} B;
	int I;
	unsigned int U;

} ASC1_PMW_type;
#define ASC1_PMW	(*( ASC1_PMW_type *) 0xF010041Cu)	/* ASC IrDA Pulse Mode/Widdth Register */

typedef volatile union
{
	struct
	{ 
		unsigned int TD_VALUE       : 9;
		unsigned int                : 23;
	} B;
	int I;
	unsigned int U;

} ASC1_TBUF_type;
#define ASC1_TBUF	(*( ASC1_TBUF_type *) 0xF0100420u)	/* ASC Transmit Buffer Register */

typedef volatile union
{
	struct
	{ 
		unsigned int RD_VALUE       : 9;
		unsigned int                : 23;
	} B;
	int I;
	unsigned int U;

} ASC1_RBUF_type;
#define ASC1_RBUF	(*( ASC1_RBUF_type *) 0xF0100424u)	/* ASC Receive Buffer Register */

typedef volatile union
{
	struct
	{ 
		unsigned int RXFEN          : 1;
		unsigned int RXFLU          : 1;
		unsigned int RXTMEN         : 1;
		unsigned int                : 5;
		unsigned int RXFITL         : 4;
		unsigned int                : 20;
	} B;
	int I;
	unsigned int U;

} ASC1_RXFCON_type;
#define ASC1_RXFCON	(*( ASC1_RXFCON_type *) 0xF0100440u)	/* SSC Receive FIFO Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int TXFEN          : 1;
		unsigned int TXFLU          : 1;
		unsigned int TXTMEN         : 1;
		unsigned int                : 5;
		unsigned int TXFITL         : 4;
		unsigned int                : 20;
	} B;
	int I;
	unsigned int U;

} ASC1_TXFCON_type;
#define ASC1_TXFCON	(*( ASC1_TXFCON_type *) 0xF0100444u)	/* SSC Transmit FIFO Control Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int RXFFL          : 4;
		/* const */ unsigned int                : 4;
		/* const */ unsigned int TXFFL          : 4;
		/* const */ unsigned int                : 20;
	} B;
	int I;
	unsigned int U;

} ASC1_FSTAT_type;
#define ASC1_FSTAT	(*( ASC1_FSTAT_type *) 0xF0100448u)	/* ASC FIFO Status Register */

typedef volatile union
{
	struct
	{ 
		unsigned int                : 4;
		unsigned int CLRREN         : 1;
		unsigned int SETREN         : 1;
		unsigned int                : 2;
		unsigned int CLRPE          : 1;
		unsigned int CLRFE          : 1;
		unsigned int CLROE          : 1;
		unsigned int SETPE          : 1;
		unsigned int SETFE          : 1;
		unsigned int SETOE          : 1;
		unsigned int                : 18;
	} B;
	int I;
	unsigned int U;

} ASC1_WHBCON_type;
#define ASC1_WHBCON	(*( ASC1_WHBCON_type *) 0xF0100450u)	/* ASC Hardware Bits Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int SRPN           : 8;
		unsigned int                : 2;
		unsigned int TOS            : 1;
		unsigned int                : 1;
		unsigned int SRE            : 1;
		/* const */ unsigned int SRR            : 1;
		unsigned int CLRR           : 1;
		unsigned int SETR           : 1;
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} ASC1_TSRC_type;
#define ASC1_TSRC	(*( ASC1_TSRC_type *) 0xF01004F0u)	/* ASC Transmit Interrupt Service Request Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int SRPN           : 8;
		unsigned int                : 2;
		unsigned int TOS            : 1;
		unsigned int                : 1;
		unsigned int SRE            : 1;
		/* const */ unsigned int SRR            : 1;
		unsigned int CLRR           : 1;
		unsigned int SETR           : 1;
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} ASC1_RSRC_type;
#define ASC1_RSRC	(*( ASC1_RSRC_type *) 0xF01004F4u)	/* ASC Receive Interrupt Service Request Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int SRPN           : 8;
		unsigned int                : 2;
		unsigned int TOS            : 1;
		unsigned int                : 1;
		unsigned int SRE            : 1;
		/* const */ unsigned int SRR            : 1;
		unsigned int CLRR           : 1;
		unsigned int SETR           : 1;
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} ASC1_ESRC_type;
#define ASC1_ESRC	(*( ASC1_ESRC_type *) 0xF01004F8u)	/* ASC Error Interrupt Service Request Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int SRPN           : 8;
		unsigned int                : 2;
		unsigned int TOS            : 1;
		unsigned int                : 1;
		unsigned int SRE            : 1;
		/* const */ unsigned int SRR            : 1;
		unsigned int CLRR           : 1;
		unsigned int SETR           : 1;
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} ASC1_TBSRC_type;
#define ASC1_TBSRC	(*( ASC1_TBSRC_type *) 0xF01004FCu)	/* ASC Transmit Buffer Service Request Control Register */


/* ASC CD2 */
typedef volatile union
{
	struct
	{ 
		unsigned int DISR           : 1;
		/* const */ unsigned int DISS           : 1;
		unsigned int SPEN           : 1;
		unsigned int EDIS           : 1;
		unsigned int SBWE           : 1;
		unsigned int FSOE           : 1;
		unsigned int                : 2;
		unsigned int RMC            : 8;
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} ASC2_CLC_type;
#define ASC2_CLC	(*( ASC2_CLC_type *) 0xF0100500u)	/* ASC Clock Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int RIS            : 1;
		unsigned int                : 31;
	} B;
	int I;
	unsigned int U;

} ASC2_PISEL_type;
#define ASC2_PISEL	(*( ASC2_PISEL_type *) 0xF0100504u)	/* ASC Peripheral Input Select Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int MOD_REV        : 8;
		/* const */ unsigned int MOD_NUMBER     : 8;
		/* const */ unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} ASC2_ID_type;
#define ASC2_ID	(*( ASC2_ID_type *) 0xF0100508u)	/* ASC Module Identification Register */

typedef volatile union
{
	struct
	{ 
		unsigned int M              : 3;
		unsigned int STP            : 1;
		unsigned int REN            : 1;
		unsigned int PEN            : 1;
		unsigned int FEN            : 1;
		unsigned int OEN            : 1;
		unsigned int PE             : 1;
		unsigned int FE             : 1;
		unsigned int OE             : 1;
		unsigned int FDE            : 1;
		unsigned int ODD            : 1;
		unsigned int BRS            : 1;
		unsigned int LB             : 1;
		unsigned int R              : 1;
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} ASC2_CON_type;
#define ASC2_CON	(*( ASC2_CON_type *) 0xF0100510u)	/* ASC Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int BR_VALUE       : 13;
		unsigned int                : 19;
	} B;
	int I;
	unsigned int U;

} ASC2_BG_type;
#define ASC2_BG	(*( ASC2_BG_type *) 0xF0100514u)	/* ASC Baudrate Timer Reload Register */

typedef volatile union
{
	struct
	{ 
		unsigned int FD_VALUE       : 9;
		unsigned int                : 23;
	} B;
	int I;
	unsigned int U;

} ASC2_FDV_type;
#define ASC2_FDV	(*( ASC2_FDV_type *) 0xF0100518u)	/* ASC Fractional Divider Register */

typedef volatile union
{
	struct
	{ 
		unsigned int PW_VALUE       : 8;
		unsigned int IRPW           : 1;
		unsigned int                : 23;
	} B;
	int I;
	unsigned int U;

} ASC2_PMW_type;
#define ASC2_PMW	(*( ASC2_PMW_type *) 0xF010051Cu)	/* ASC IrDA Pulse Mode/Widdth Register */

typedef volatile union
{
	struct
	{ 
		unsigned int TD_VALUE       : 9;
		unsigned int                : 23;
	} B;
	int I;
	unsigned int U;

} ASC2_TBUF_type;
#define ASC2_TBUF	(*( ASC2_TBUF_type *) 0xF0100520u)	/* ASC Transmit Buffer Register */

typedef volatile union
{
	struct
	{ 
		unsigned int RD_VALUE       : 9;
		unsigned int                : 23;
	} B;
	int I;
	unsigned int U;

} ASC2_RBUF_type;
#define ASC2_RBUF	(*( ASC2_RBUF_type *) 0xF0100524u)	/* ASC Receive Buffer Register */

typedef volatile union
{
	struct
	{ 
		unsigned int RXFEN          : 1;
		unsigned int RXFLU          : 1;
		unsigned int RXTMEN         : 1;
		unsigned int                : 5;
		unsigned int RXFITL         : 4;
		unsigned int                : 20;
	} B;
	int I;
	unsigned int U;

} ASC2_RXFCON_type;
#define ASC2_RXFCON	(*( ASC2_RXFCON_type *) 0xF0100540u)	/* SSC Receive FIFO Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int TXFEN          : 1;
		unsigned int TXFLU          : 1;
		unsigned int TXTMEN         : 1;
		unsigned int                : 5;
		unsigned int TXFITL         : 4;
		unsigned int                : 20;
	} B;
	int I;
	unsigned int U;

} ASC2_TXFCON_type;
#define ASC2_TXFCON	(*( ASC2_TXFCON_type *) 0xF0100544u)	/* SSC Transmit FIFO Control Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int RXFFL          : 4;
		/* const */ unsigned int                : 4;
		/* const */ unsigned int TXFFL          : 4;
		/* const */ unsigned int                : 20;
	} B;
	int I;
	unsigned int U;

} ASC2_FSTAT_type;
#define ASC2_FSTAT	(*( ASC2_FSTAT_type *) 0xF0100548u)	/* ASC FIFO Status Register */

typedef volatile union
{
	struct
	{ 
		unsigned int                : 4;
		unsigned int CLRREN         : 1;
		unsigned int SETREN         : 1;
		unsigned int                : 2;
		unsigned int CLRPE          : 1;
		unsigned int CLRFE          : 1;
		unsigned int CLROE          : 1;
		unsigned int SETPE          : 1;
		unsigned int SETFE          : 1;
		unsigned int SETOE          : 1;
		unsigned int                : 18;
	} B;
	int I;
	unsigned int U;

} ASC2_WHBCON_type;
#define ASC2_WHBCON	(*( ASC2_WHBCON_type *) 0xF0100550u)	/* ASC Hardware Bits Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int SRPN           : 8;
		unsigned int                : 2;
		unsigned int TOS            : 1;
		unsigned int                : 1;
		unsigned int SRE            : 1;
		/* const */ unsigned int SRR            : 1;
		unsigned int CLRR           : 1;
		unsigned int SETR           : 1;
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} ASC2_TSRC_type;
#define ASC2_TSRC	(*( ASC2_TSRC_type *) 0xF01005F0u)	/* ASC Transmit Interrupt Service Request Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int SRPN           : 8;
		unsigned int                : 2;
		unsigned int TOS            : 1;
		unsigned int                : 1;
		unsigned int SRE            : 1;
		/* const */ unsigned int SRR            : 1;
		unsigned int CLRR           : 1;
		unsigned int SETR           : 1;
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} ASC2_RSRC_type;
#define ASC2_RSRC	(*( ASC2_RSRC_type *) 0xF01005F4u)	/* ASC Receive Interrupt Service Request Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int SRPN           : 8;
		unsigned int                : 2;
		unsigned int TOS            : 1;
		unsigned int                : 1;
		unsigned int SRE            : 1;
		/* const */ unsigned int SRR            : 1;
		unsigned int CLRR           : 1;
		unsigned int SETR           : 1;
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} ASC2_ESRC_type;
#define ASC2_ESRC	(*( ASC2_ESRC_type *) 0xF01005F8u)	/* ASC Error Interrupt Service Request Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int SRPN           : 8;
		unsigned int                : 2;
		unsigned int TOS            : 1;
		unsigned int                : 1;
		unsigned int SRE            : 1;
		/* const */ unsigned int SRR            : 1;
		unsigned int CLRR           : 1;
		unsigned int SETR           : 1;
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} ASC2_TBSRC_type;
#define ASC2_TBSRC	(*( ASC2_TBSRC_type *) 0xF01005FCu)	/* ASC Transmit Buffer Service Request Control Register */


/* IIC CD */
typedef volatile union
{
	struct
	{ 
		unsigned int DISR           : 1;
		/* const */ unsigned int DISS           : 1;
		unsigned int SPEN           : 1;
		unsigned int EDIS           : 1;
		unsigned int SBWE           : 1;
		unsigned int FSOE           : 1;
		unsigned int                : 2;
		unsigned int RMC            : 8;
		unsigned int SMC            : 8;
		unsigned int                : 8;
	} B;
	int I;
	unsigned int U;

} IIC_CLC_type;
#define IIC_CLC	(*( IIC_CLC_type *) 0xF0100600u)	/* IIC Clock Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int SCLIS0         : 1;
		unsigned int SCLIS1         : 1;
		unsigned int                : 2;
		unsigned int SDAIS0         : 1;
		unsigned int SDAIS1         : 1;
		unsigned int                : 26;
	} B;
	int I;
	unsigned int U;

} IIC_PISEL_type;
#define IIC_PISEL	(*( IIC_PISEL_type *) 0xF0100604u)	/* IIC Input Select Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int REV            : 8;
		/* const */ unsigned int ID             : 8;
		/* const */ unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} IIC_ID_type;
#define IIC_ID	(*( IIC_ID_type *) 0xF0100608u)	/* IIC Module Identification Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int ADR            : 1;
		unsigned int AL             : 1;
		/* const */ unsigned int SLA            : 1;
		/* const */ unsigned int LRB            : 1;
		/* const */ unsigned int BB             : 1;
		unsigned int IRQD           : 1;
		unsigned int IRQP           : 1;
		unsigned int IRQE           : 1;
		/* const */ unsigned int CO             : 3;
		unsigned int                : 4;
		unsigned int RMEN           : 1;
		unsigned int M10            : 1;
		unsigned int RSC            : 1;
		unsigned int MOD            : 2;
		unsigned int BUM            : 1;
		unsigned int ACKDIS         : 1;
		unsigned int INT            : 1;
		unsigned int TRX            : 1;
		unsigned int IGE            : 1;
		unsigned int STP            : 1;
		unsigned int CI             : 2;
		unsigned int                : 3;
		unsigned int WMEN           : 1;
	} B;
	int I;
	unsigned int U;

} IIC_SYSCON_type;
#define IIC_SYSCON	(*( IIC_SYSCON_type *) 0xF0100610u)	/* System Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int SDAEN0         : 1;
		unsigned int SDAEN1         : 1;
		unsigned int                : 2;
		unsigned int SCLEN0         : 1;
		unsigned int SCLEN1         : 1;
		unsigned int                : 2;
		unsigned int BRP            : 8;
		unsigned int ICA0           : 1;
		unsigned int ICA7           : 7;
		unsigned int ICA8           : 1;
		unsigned int ICA9           : 1;
		unsigned int                : 3;
		unsigned int PREDIV         : 2;
		unsigned int BRPMOD         : 1;
	} B;
	int I;
	unsigned int U;

} IIC_BUSCON_type;
#define IIC_BUSCON	(*( IIC_BUSCON_type *) 0xF0100614u)	/* IIC BUS Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int RTB0           : 8;
		unsigned int RTB1           : 8;
		unsigned int RTB2           : 8;
		unsigned int RTB3           : 8;
	} B;
	int I;
	unsigned int U;

} IIC_RTB_type;
#define IIC_RTB	(*( IIC_RTB_type *) 0xF0100618u)	/* Reset Transmit Buffer */

typedef volatile union
{
	struct
	{ 
		unsigned int                : 1;
		unsigned int CLRAL          : 1;
		unsigned int SETAL          : 1;
		unsigned int                : 2;
		unsigned int CLRIRQD        : 1;
		unsigned int CLRIRQP        : 1;
		unsigned int CLRIRQE        : 1;
		unsigned int SETIRQD        : 1;
		unsigned int SETIRQP        : 1;
		unsigned int SETIRQE        : 1;
		unsigned int                : 3;
		unsigned int CLRRMEN        : 1;
		unsigned int SETRMEN        : 1;
		unsigned int CLRRSC         : 1;
		unsigned int SETRSC         : 1;
		unsigned int                : 1;
		unsigned int CLRBUM         : 1;
		unsigned int SETBUM         : 1;
		unsigned int CLRACKDIS      : 1;
		unsigned int SETACKDIS      : 1;
		unsigned int CLRTRX         : 1;
		unsigned int SETTRX         : 1;
		unsigned int CLRSTP         : 1;
		unsigned int SETSTP         : 1;
		unsigned int                : 3;
		unsigned int CLRWMEN        : 1;
		unsigned int SETWMEN        : 1;
	} B;
	int I;
	unsigned int U;

} IIC_WHBSYSCON_type;
#define IIC_WHBSYSCON	(*( IIC_WHBSYSCON_type *) 0xF0100620u)	/* IIC Write Hardware Modifiied System Control */

typedef volatile union
{
	struct
	{ 
		unsigned int SRPN           : 8;
		unsigned int                : 2;
		unsigned int TOS            : 1;
		unsigned int                : 1;
		unsigned int SRE            : 1;
		/* const */ unsigned int SRR            : 1;
		unsigned int CLRR           : 1;
		unsigned int SETR           : 1;
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} IIC_XP2SRC_type;
#define IIC_XP2SRC	(*( IIC_XP2SRC_type *) 0xF01006F4u)	/* IIC Service Request Control Register 2 */

typedef volatile union
{
	struct
	{ 
		unsigned int SRPN           : 8;
		unsigned int                : 2;
		unsigned int TOS            : 1;
		unsigned int                : 1;
		unsigned int SRE            : 1;
		/* const */ unsigned int SRR            : 1;
		unsigned int CLRR           : 1;
		unsigned int SETR           : 1;
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} IIC_XP1SRC_type;
#define IIC_XP1SRC	(*( IIC_XP1SRC_type *) 0xF01006F8u)	/* IIC Service Request Control Register 1 */

typedef volatile union
{
	struct
	{ 
		unsigned int SRPN           : 8;
		unsigned int                : 2;
		unsigned int TOS            : 1;
		unsigned int                : 1;
		unsigned int SRE            : 1;
		/* const */ unsigned int SRR            : 1;
		unsigned int CLRR           : 1;
		unsigned int SETR           : 1;
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} IIC_XP0SRC_type;
#define IIC_XP0SRC	(*( IIC_XP0SRC_type *) 0xF01006FCu)	/* IIC Service Request Control Register 0 */


/* MLI0 */
typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int MOD_REV        : 8;
		/* const */ unsigned int MOD_TYPE       : 8;
		/* const */ unsigned int MOD_NUMBER     : 16;
	} B;
	int I;
	unsigned int U;

} MLI0_ID_type;
#define MLI0_ID	(*( MLI0_ID_type *) 0xF010C008u)	/* MLI Module Identification Register */

typedef volatile union
{
	struct
	{ 
		unsigned int STEP           : 10;
		unsigned int                : 1;
		unsigned int SM             : 1;
		unsigned int SC             : 2;
		unsigned int DM             : 2;
		/* const */ unsigned int RESULT         : 10;
		unsigned int                : 2;
		/* const */ unsigned int SUSACK         : 1;
		/* const */ unsigned int SUSREQ         : 1;
		unsigned int ENHW           : 1;
		unsigned int DISCLK         : 1;
	} B;
	int I;
	unsigned int U;

} MLI0_FDR_type;
#define MLI0_FDR	(*( MLI0_FDR_type *) 0xF010C00Cu)	/* MLI Fractional Divider Register */

typedef volatile union
{
	struct
	{ 
		unsigned int MOD            : 1;
		unsigned int DNT            : 1;
		unsigned int RTY            : 1;
		unsigned int                : 1;
		unsigned int MPE            : 4;
		unsigned int MNAE           : 2;
		unsigned int MDP            : 4;
		unsigned int NO             : 1;
		unsigned int TP             : 1;
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} MLI0_TCR_type;
#define MLI0_TCR	(*( MLI0_TCR_type *) 0xF010C010u)	/* Transmitter Control Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int RDC            : 5;
		/* const */ unsigned int APN            : 2;
		/* const */ unsigned int PE             : 1;
		/* const */ unsigned int NAE            : 1;
		/* const */ unsigned int                : 23;
	} B;
	int I;
	unsigned int U;

} MLI0_TSTATR_type;
#define MLI0_TSTATR	(*( MLI0_TSTATR_type *) 0xF010C014u)	/* Transmitter Status Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int BS             : 4;
		/* const */ unsigned int DW             : 2;
		/* const */ unsigned int AP             : 10;
		/* const */ unsigned int OP             : 1;
		/* const */ unsigned int                : 15;
	} B;
	int I;
	unsigned int U;

} MLI0_TP0STATR_type;
#define MLI0_TP0STATR	(*( MLI0_TP0STATR_type *) 0xF010C018u)	/* Transmitter Pipe 0 Status Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int BS             : 4;
		/* const */ unsigned int DW             : 2;
		/* const */ unsigned int AP             : 10;
		/* const */ unsigned int OP             : 1;
		/* const */ unsigned int                : 15;
	} B;
	int I;
	unsigned int U;

} MLI0_TP1STATR_type;
#define MLI0_TP1STATR	(*( MLI0_TP1STATR_type *) 0xF010C01Cu)	/* Transmitter Pipe 1 Status Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int BS             : 4;
		/* const */ unsigned int DW             : 2;
		/* const */ unsigned int AP             : 10;
		/* const */ unsigned int OP             : 1;
		/* const */ unsigned int                : 15;
	} B;
	int I;
	unsigned int U;

} MLI0_TP2STATR_type;
#define MLI0_TP2STATR	(*( MLI0_TP2STATR_type *) 0xF010C020u)	/* Transmitter Pipe 2 Status Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int BS             : 4;
		/* const */ unsigned int DW             : 2;
		/* const */ unsigned int AP             : 10;
		/* const */ unsigned int OP             : 1;
		/* const */ unsigned int                : 15;
	} B;
	int I;
	unsigned int U;

} MLI0_TP3STATR_type;
#define MLI0_TP3STATR	(*( MLI0_TP3STATR_type *) 0xF010C024u)	/* Transmitter Pipe 3 Status Register */

typedef volatile union
{
	struct
	{ 
		unsigned int CMDP0          : 4;
		unsigned int                : 4;
		unsigned int CMDP1          : 4;
		unsigned int                : 4;
		unsigned int CMDP2          : 4;
		unsigned int                : 4;
		unsigned int CMDP3          : 4;
		unsigned int                : 4;
	} B;
	int I;
	unsigned int U;

} MLI0_TCMDR_type;
#define MLI0_TCMDR	(*( MLI0_TCMDR_type *) 0xF010C028u)	/* Transmitter Command Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int                : 4;
		/* const */ unsigned int CV0            : 1;
		/* const */ unsigned int CV1            : 1;
		/* const */ unsigned int CV2            : 1;
		/* const */ unsigned int CV3            : 1;
		/* const */ unsigned int AV             : 1;
		/* const */ unsigned int BAV            : 1;
		/* const */ unsigned int                : 6;
		/* const */ unsigned int DV0            : 1;
		/* const */ unsigned int DV1            : 1;
		/* const */ unsigned int DV2            : 1;
		/* const */ unsigned int DV3            : 1;
		/* const */ unsigned int RP0            : 1;
		/* const */ unsigned int RP1            : 1;
		/* const */ unsigned int RP2            : 1;
		/* const */ unsigned int RP3            : 1;
		/* const */ unsigned int PN             : 2;
		/* const */ unsigned int                : 6;
	} B;
	int I;
	unsigned int U;

} MLI0_TRSTATR_type;
#define MLI0_TRSTATR	(*( MLI0_TRSTATR_type *) 0xF010C02Cu)	/* Transmitter Registers Status Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int AOFF           : 16;
		/* const */ unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} MLI0_TP0AOFR_type;
#define MLI0_TP0AOFR	(*( MLI0_TP0AOFR_type *) 0xF010C030u)	/* Transmitter Pipe 0 Address Offset Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int AOFF           : 16;
		/* const */ unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} MLI0_TP1AOFR_type;
#define MLI0_TP1AOFR	(*( MLI0_TP1AOFR_type *) 0xF010C034u)	/* Transmitter Pipe 1 Address Offset Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int AOFF           : 16;
		/* const */ unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} MLI0_TP2AOFR_type;
#define MLI0_TP2AOFR	(*( MLI0_TP2AOFR_type *) 0xF010C038u)	/* Transmitter Pipe 2 Address Offset Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int AOFF           : 16;
		/* const */ unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} MLI0_TP3AOFR_type;
#define MLI0_TP3AOFR	(*( MLI0_TP3AOFR_type *) 0xF010C03Cu)	/* Transmitter Pipe 3 Address Offset Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int DATA           : 32;
	} B;
	int I;
	unsigned int U;

} MLI0_TP0DATAR_type;
#define MLI0_TP0DATAR	(*( MLI0_TP0DATAR_type *) 0xF010C040u)	/* Transmitter Pipe 0 Data Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int DATA           : 32;
	} B;
	int I;
	unsigned int U;

} MLI0_TP1DATAR_type;
#define MLI0_TP1DATAR	(*( MLI0_TP1DATAR_type *) 0xF010C044u)	/* Transmitter Pipe 1 Data Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int DATA           : 32;
	} B;
	int I;
	unsigned int U;

} MLI0_TP2DATAR_type;
#define MLI0_TP2DATAR	(*( MLI0_TP2DATAR_type *) 0xF010C048u)	/* Transmitter Pipe 2 Data Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int DATA           : 32;
	} B;
	int I;
	unsigned int U;

} MLI0_TP3DATAR_type;
#define MLI0_TP3DATAR	(*( MLI0_TP3DATAR_type *) 0xF010C04Cu)	/* Transmitter Pipe 3 Data Register */

typedef volatile union
{
	struct
	{ 
		unsigned int DATA           : 32;
	} B;
	int I;
	unsigned int U;

} MLI0_TDRAR_type;
#define MLI0_TDRAR	(*( MLI0_TDRAR_type *) 0xF010C050u)	/* Transmitter Data Read Answer Register */

typedef volatile union
{
	struct
	{ 
		unsigned int BS             : 4;
		unsigned int ADDR           : 28;
	} B;
	int I;
	unsigned int U;

} MLI0_TP0BAR_type;
#define MLI0_TP0BAR	(*( MLI0_TP0BAR_type *) 0xF010C054u)	/* Transmitter Pipe 0 Base Address Register */

typedef volatile union
{
	struct
	{ 
		unsigned int BS             : 4;
		unsigned int ADDR           : 28;
	} B;
	int I;
	unsigned int U;

} MLI0_TP1BAR_type;
#define MLI0_TP1BAR	(*( MLI0_TP1BAR_type *) 0xF010C058u)	/* Transmitter Pipe 1 Base Address Register */

typedef volatile union
{
	struct
	{ 
		unsigned int BS             : 4;
		unsigned int ADDR           : 28;
	} B;
	int I;
	unsigned int U;

} MLI0_TP2BAR_type;
#define MLI0_TP2BAR	(*( MLI0_TP2BAR_type *) 0xF010C05Cu)	/* Transmitter Pipe 2 Base Address Register */

typedef volatile union
{
	struct
	{ 
		unsigned int BS             : 4;
		unsigned int ADDR           : 28;
	} B;
	int I;
	unsigned int U;

} MLI0_TP3BAR_type;
#define MLI0_TP3BAR	(*( MLI0_TP3BAR_type *) 0xF010C060u)	/* Transmitter Pipe 3 Base Address Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int                : 4;
		/* const */ unsigned int ADDR           : 28;
	} B;
	int I;
	unsigned int U;

} MLI0_TCBAR_type;
#define MLI0_TCBAR	(*( MLI0_TCBAR_type *) 0xF010C064u)	/* Transmitter Copy Base Address Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int DPE            : 4;
		/* const */ unsigned int CMDP3          : 4;
		/* const */ unsigned int MOD            : 1;
		/* const */ unsigned int DW             : 2;
		/* const */ unsigned int TF             : 2;
		/* const */ unsigned int PE             : 1;
		/* const */ unsigned int RPN            : 2;
		unsigned int MPE            : 4;
		unsigned int BEN            : 1;
		unsigned int                : 3;
		unsigned int RCVRST         : 1;
		unsigned int                : 7;
	} B;
	int I;
	unsigned int U;

} MLI0_RCR_type;
#define MLI0_RCR	(*( MLI0_RCR_type *) 0xF010C068u)	/* Receiver Control Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int                : 4;
		/* const */ unsigned int ADDR           : 28;
	} B;
	int I;
	unsigned int U;

} MLI0_RP0BAR_type;
#define MLI0_RP0BAR	(*( MLI0_RP0BAR_type *) 0xF010C06Cu)	/* Receiver Pipe 0 Base Address Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int                : 4;
		/* const */ unsigned int ADDR           : 28;
	} B;
	int I;
	unsigned int U;

} MLI0_RP1BAR_type;
#define MLI0_RP1BAR	(*( MLI0_RP1BAR_type *) 0xF010C070u)	/* Receiver Pipe 1 Base Address Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int                : 4;
		/* const */ unsigned int ADDR           : 28;
	} B;
	int I;
	unsigned int U;

} MLI0_RP2BAR_type;
#define MLI0_RP2BAR	(*( MLI0_RP2BAR_type *) 0xF010C074u)	/* Receiver Pipe 2 Base Address Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int                : 4;
		/* const */ unsigned int ADDR           : 28;
	} B;
	int I;
	unsigned int U;

} MLI0_RP3BAR_type;
#define MLI0_RP3BAR	(*( MLI0_RP3BAR_type *) 0xF010C078u)	/* Receiver Pipe 3 Base Address Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int BS             : 4;
		/* const */ unsigned int                : 2;
		/* const */ unsigned int AP             : 10;
		/* const */ unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} MLI0_RP0STATR_type;
#define MLI0_RP0STATR	(*( MLI0_RP0STATR_type *) 0xF010C07Cu)	/* Receiver Pipe 0 Status Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int BS             : 4;
		/* const */ unsigned int                : 2;
		/* const */ unsigned int AP             : 10;
		/* const */ unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} MLI0_RP1STATR_type;
#define MLI0_RP1STATR	(*( MLI0_RP1STATR_type *) 0xF010C080u)	/* Receiver Pipe 1 Status Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int BS             : 4;
		/* const */ unsigned int                : 2;
		/* const */ unsigned int AP             : 10;
		/* const */ unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} MLI0_RP2STATR_type;
#define MLI0_RP2STATR	(*( MLI0_RP2STATR_type *) 0xF010C084u)	/* Receiver Pipe 2 Status Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int BS             : 4;
		/* const */ unsigned int                : 2;
		/* const */ unsigned int AP             : 10;
		/* const */ unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} MLI0_RP3STATR_type;
#define MLI0_RP3STATR	(*( MLI0_RP3STATR_type *) 0xF010C088u)	/* Receiver Pipe 3 Status Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int ADDR           : 32;
	} B;
	int I;
	unsigned int U;

} MLI0_RADRR_type;
#define MLI0_RADRR	(*( MLI0_RADRR_type *) 0xF010C08Cu)	/* Receiver Address Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int DATA           : 32;
	} B;
	int I;
	unsigned int U;

} MLI0_RDATAR_type;
#define MLI0_RDATAR	(*( MLI0_RDATAR_type *) 0xF010C090u)	/* Receiver Data Register */

typedef volatile union
{
	struct
	{ 
		unsigned int SCV0           : 1;
		unsigned int SCV1           : 1;
		unsigned int SCV2           : 1;
		unsigned int SCV3           : 1;
		unsigned int SMOD           : 1;
		unsigned int                : 3;
		unsigned int CDV0           : 1;
		unsigned int CDV1           : 1;
		unsigned int CDV2           : 1;
		unsigned int CDV3           : 1;
		unsigned int CCV0           : 1;
		unsigned int CCV1           : 1;
		unsigned int CCV2           : 1;
		unsigned int CCV3           : 1;
		unsigned int CMOD           : 1;
		unsigned int CBAV           : 1;
		unsigned int                : 6;
		unsigned int CAV            : 1;
		unsigned int CRPE           : 1;
		unsigned int CTPE           : 1;
		unsigned int CNAE           : 1;
		unsigned int CCIV0          : 1;
		unsigned int CCIV1          : 1;
		unsigned int CCIV2          : 1;
		unsigned int CCIV3          : 1;
	} B;
	int I;
	unsigned int U;

} MLI0_SCR_type;
#define MLI0_SCR	(*( MLI0_SCR_type *) 0xF010C094u)	/* Set Clear Register */

typedef volatile union
{
	struct
	{ 
		unsigned int NFSIE0         : 1;
		unsigned int NFSIE1         : 1;
		unsigned int NFSIE2         : 1;
		unsigned int NFSIE3         : 1;
		unsigned int CFSIE0         : 1;
		unsigned int CFSIE1         : 1;
		unsigned int CFSIE2         : 1;
		unsigned int CFSIE3         : 1;
		unsigned int PEIE           : 1;
		unsigned int TEIE           : 1;
		unsigned int                : 6;
		unsigned int NFSIR0         : 1;
		unsigned int NFSIR1         : 1;
		unsigned int NFSIR2         : 1;
		unsigned int NFSIR3         : 1;
		unsigned int CFSIR0         : 1;
		unsigned int CFSIR1         : 1;
		unsigned int CFSIR2         : 1;
		unsigned int CFSIR3         : 1;
		unsigned int PEIR           : 1;
		unsigned int TEIR           : 1;
		unsigned int                : 6;
	} B;
	int I;
	unsigned int U;

} MLI0_TIER_type;
#define MLI0_TIER	(*( MLI0_TIER_type *) 0xF010C098u)	/* Transmitter Interrupt Enable Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int NFSI0          : 1;
		/* const */ unsigned int NFSI1          : 1;
		/* const */ unsigned int NFSI2          : 1;
		/* const */ unsigned int NFSI3          : 1;
		/* const */ unsigned int CFSI0          : 1;
		/* const */ unsigned int CFSI1          : 1;
		/* const */ unsigned int CFSI2          : 1;
		/* const */ unsigned int CFSI3          : 1;
		/* const */ unsigned int PEI            : 1;
		/* const */ unsigned int TEI            : 1;
		/* const */ unsigned int                : 22;
	} B;
	int I;
	unsigned int U;

} MLI0_TISR_type;
#define MLI0_TISR	(*( MLI0_TISR_type *) 0xF010C09Cu)	/* Transmitter Interrupt Status Register */

typedef volatile union
{
	struct
	{ 
		unsigned int NFSIP0         : 3;
		unsigned int                : 1;
		unsigned int NFSIP1         : 3;
		unsigned int                : 1;
		unsigned int NFSIP2         : 3;
		unsigned int                : 1;
		unsigned int NFSIP3         : 3;
		unsigned int                : 1;
		unsigned int CFSIP          : 3;
		unsigned int                : 1;
		unsigned int PTEIP          : 3;
		unsigned int                : 9;
	} B;
	int I;
	unsigned int U;

} MLI0_TINPR_type;
#define MLI0_TINPR	(*( MLI0_TINPR_type *) 0xF010C0A0u)	/* Transmitter Interrupt Node Pointer Register */

typedef volatile union
{
	struct
	{ 
		unsigned int NFRIE          : 2;
		unsigned int CFRIE0         : 1;
		unsigned int CFRIE1         : 1;
		unsigned int CFRIE2         : 1;
		unsigned int CFRIE3         : 1;
		unsigned int ICE            : 1;
		unsigned int PEIE           : 1;
		unsigned int MPEIE          : 1;
		unsigned int DRAIE          : 1;
		unsigned int                : 6;
		unsigned int NFRIR          : 1;
		unsigned int MEIR           : 1;
		unsigned int CFRIR0         : 1;
		unsigned int CFRIR1         : 1;
		unsigned int CFRIR2         : 1;
		unsigned int CFRIR3         : 1;
		unsigned int ICER           : 1;
		unsigned int PEIR           : 1;
		unsigned int MPEIR          : 1;
		unsigned int DRAIR          : 1;
		unsigned int                : 6;
	} B;
	int I;
	unsigned int U;

} MLI0_RIER_type;
#define MLI0_RIER	(*( MLI0_RIER_type *) 0xF010C0A4u)	/* Receiver Interrupt Enable Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int NFRI           : 1;
		/* const */ unsigned int MEI            : 1;
		/* const */ unsigned int CFRI0          : 1;
		/* const */ unsigned int CFRI1          : 1;
		/* const */ unsigned int CFRI2          : 1;
		/* const */ unsigned int CFRI3          : 1;
		/* const */ unsigned int IC             : 1;
		/* const */ unsigned int PEI            : 1;
		/* const */ unsigned int MPEI           : 1;
		/* const */ unsigned int DRAI           : 1;
		/* const */ unsigned int                : 22;
	} B;
	int I;
	unsigned int U;

} MLI0_RISR_type;
#define MLI0_RISR	(*( MLI0_RISR_type *) 0xF010C0A8u)	/* Receiver Interrupt Status Register */

typedef volatile union
{
	struct
	{ 
		unsigned int NFRIP          : 3;
		unsigned int                : 1;
		unsigned int CFRIP          : 3;
		unsigned int                : 1;
		unsigned int MPPEIP         : 3;
		unsigned int                : 1;
		unsigned int DRAIP          : 3;
		unsigned int                : 17;
	} B;
	int I;
	unsigned int U;

} MLI0_RINPR_type;
#define MLI0_RINPR	(*( MLI0_RINPR_type *) 0xF010C0ACu)	/* Receiver Interrupt Node Pointer Register */

typedef volatile union
{
	struct
	{ 
		unsigned int SIMLI0         : 1;
		unsigned int SIMLI1         : 1;
		unsigned int SIMLI2         : 1;
		unsigned int SIMLI3         : 1;
		unsigned int SIMLI4         : 1;
		unsigned int SIMLI5         : 1;
		unsigned int SIMLI6         : 1;
		unsigned int SIMLI7         : 1;
		unsigned int                : 24;
	} B;
	int I;
	unsigned int U;

} MLI0_GINTR_type;
#define MLI0_GINTR	(*( MLI0_GINTR_type *) 0xF010C0B0u)	/* MLI Global Interrupt Set Register */

typedef volatile union
{
	struct
	{ 
		unsigned int TVEA           : 1;
		unsigned int TVEB           : 1;
		unsigned int TVEC           : 1;
		unsigned int TVED           : 1;
		unsigned int TVPA           : 1;
		unsigned int TVPB           : 1;
		unsigned int TVPC           : 1;
		unsigned int TVPD           : 1;
		unsigned int TRS            : 2;
		unsigned int TRP            : 1;
		unsigned int TRE            : 1;
		unsigned int TCE            : 1;
		unsigned int TCP            : 1;
		unsigned int TDP            : 1;
		unsigned int RVE            : 1;
		unsigned int RRS            : 2;
		unsigned int RRPA           : 1;
		unsigned int RRPB           : 1;
		unsigned int RRPC           : 1;
		unsigned int RRPD           : 1;
		unsigned int RVS            : 2;
		unsigned int RVP            : 1;
		unsigned int RCS            : 2;
		unsigned int RCP            : 1;
		unsigned int RCE            : 1;
		unsigned int RDS            : 2;
		unsigned int RDP            : 1;
	} B;
	int I;
	unsigned int U;

} MLI0_OICR_type;
#define MLI0_OICR	(*( MLI0_OICR_type *) 0xF010C0B4u)	/* Output Input Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int AEN0           : 1;
		unsigned int AEN1           : 1;
		unsigned int AEN2           : 1;
		unsigned int AEN3           : 1;
		unsigned int AEN4           : 1;
		unsigned int AEN5           : 1;
		unsigned int AEN6           : 1;
		unsigned int AEN7           : 1;
		unsigned int AEN8           : 1;
		unsigned int AEN9           : 1;
		unsigned int AEN10          : 1;
		unsigned int AEN11          : 1;
		unsigned int AEN12          : 1;
		unsigned int AEN13          : 1;
		unsigned int AEN14          : 1;
		unsigned int AEN15          : 1;
		unsigned int AEN16          : 1;
		unsigned int AEN17          : 1;
		unsigned int AEN18          : 1;
		unsigned int AEN19          : 1;
		unsigned int AEN20          : 1;
		unsigned int AEN21          : 1;
		unsigned int AEN22          : 1;
		unsigned int AEN23          : 1;
		unsigned int AEN24          : 1;
		unsigned int AEN25          : 1;
		unsigned int AEN26          : 1;
		unsigned int AEN27          : 1;
		unsigned int AEN28          : 1;
		unsigned int AEN29          : 1;
		unsigned int AEN30          : 1;
		unsigned int AEN31          : 1;
	} B;
	int I;
	unsigned int U;

} MLI0_AER_type;
#define MLI0_AER	(*( MLI0_AER_type *) 0xF010C0B8u)	/* Access Enable Register */

typedef volatile union
{
	struct
	{ 
		unsigned int SLICE0         : 5;
		unsigned int SIZE0          : 3;
		unsigned int SLICE1         : 5;
		unsigned int SIZE1          : 3;
		unsigned int SLICE2         : 5;
		unsigned int SIZE2          : 3;
		unsigned int SLICE3         : 5;
		unsigned int SIZE3          : 3;
	} B;
	int I;
	unsigned int U;

} MLI0_ARR_type;
#define MLI0_ARR	(*( MLI0_ARR_type *) 0xF010C0BCu)	/* Access Range Register */


/* MLI1 */
typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int MOD_REV        : 8;
		/* const */ unsigned int MOD_TYPE       : 8;
		/* const */ unsigned int MOD_NUMBER     : 16;
	} B;
	int I;
	unsigned int U;

} MLI1_ID_type;
#define MLI1_ID	(*( MLI1_ID_type *) 0xF010C108u)	/* MLI Module Identification Register */

typedef volatile union
{
	struct
	{ 
		unsigned int STEP           : 10;
		unsigned int                : 1;
		unsigned int SM             : 1;
		unsigned int SC             : 2;
		unsigned int DM             : 2;
		/* const */ unsigned int RESULT         : 10;
		unsigned int                : 2;
		/* const */ unsigned int SUSACK         : 1;
		/* const */ unsigned int SUSREQ         : 1;
		unsigned int ENHW           : 1;
		unsigned int DISCLK         : 1;
	} B;
	int I;
	unsigned int U;

} MLI1_FDR_type;
#define MLI1_FDR	(*( MLI1_FDR_type *) 0xF010C10Cu)	/* MLI Fractional Divider Register */

typedef volatile union
{
	struct
	{ 
		unsigned int MOD            : 1;
		unsigned int DNT            : 1;
		unsigned int RTY            : 1;
		unsigned int                : 1;
		unsigned int MPE            : 4;
		unsigned int MNAE           : 2;
		unsigned int MDP            : 4;
		unsigned int NO             : 1;
		unsigned int TP             : 1;
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} MLI1_TCR_type;
#define MLI1_TCR	(*( MLI1_TCR_type *) 0xF010C110u)	/* Transmitter Control Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int RDC            : 5;
		/* const */ unsigned int APN            : 2;
		/* const */ unsigned int PE             : 1;
		/* const */ unsigned int NAE            : 1;
		/* const */ unsigned int                : 23;
	} B;
	int I;
	unsigned int U;

} MLI1_TSTATR_type;
#define MLI1_TSTATR	(*( MLI1_TSTATR_type *) 0xF010C114u)	/* Transmitter Status Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int BS             : 4;
		/* const */ unsigned int DW             : 2;
		/* const */ unsigned int AP             : 10;
		/* const */ unsigned int OP             : 1;
		/* const */ unsigned int                : 15;
	} B;
	int I;
	unsigned int U;

} MLI1_TP0STATR_type;
#define MLI1_TP0STATR	(*( MLI1_TP0STATR_type *) 0xF010C118u)	/* Transmitter Pipe 0 Status Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int BS             : 4;
		/* const */ unsigned int DW             : 2;
		/* const */ unsigned int AP             : 10;
		/* const */ unsigned int OP             : 1;
		/* const */ unsigned int                : 15;
	} B;
	int I;
	unsigned int U;

} MLI1_TP1STATR_type;
#define MLI1_TP1STATR	(*( MLI1_TP1STATR_type *) 0xF010C11Cu)	/* Transmitter Pipe 1 Status Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int BS             : 4;
		/* const */ unsigned int DW             : 2;
		/* const */ unsigned int AP             : 10;
		/* const */ unsigned int OP             : 1;
		/* const */ unsigned int                : 15;
	} B;
	int I;
	unsigned int U;

} MLI1_TP2STATR_type;
#define MLI1_TP2STATR	(*( MLI1_TP2STATR_type *) 0xF010C120u)	/* Transmitter Pipe 2 Status Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int BS             : 4;
		/* const */ unsigned int DW             : 2;
		/* const */ unsigned int AP             : 10;
		/* const */ unsigned int OP             : 1;
		/* const */ unsigned int                : 15;
	} B;
	int I;
	unsigned int U;

} MLI1_TP3STATR_type;
#define MLI1_TP3STATR	(*( MLI1_TP3STATR_type *) 0xF010C124u)	/* Transmitter Pipe 3 Status Register */

typedef volatile union
{
	struct
	{ 
		unsigned int CMDP0          : 4;
		unsigned int                : 4;
		unsigned int CMDP1          : 4;
		unsigned int                : 4;
		unsigned int CMDP2          : 4;
		unsigned int                : 4;
		unsigned int CMDP3          : 4;
		unsigned int                : 4;
	} B;
	int I;
	unsigned int U;

} MLI1_TCMDR_type;
#define MLI1_TCMDR	(*( MLI1_TCMDR_type *) 0xF010C128u)	/* Transmitter Command Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int                : 4;
		/* const */ unsigned int CV0            : 1;
		/* const */ unsigned int CV1            : 1;
		/* const */ unsigned int CV2            : 1;
		/* const */ unsigned int CV3            : 1;
		/* const */ unsigned int AV             : 1;
		/* const */ unsigned int BAV            : 1;
		/* const */ unsigned int                : 6;
		/* const */ unsigned int DV0            : 1;
		/* const */ unsigned int DV1            : 1;
		/* const */ unsigned int DV2            : 1;
		/* const */ unsigned int DV3            : 1;
		/* const */ unsigned int RP0            : 1;
		/* const */ unsigned int RP1            : 1;
		/* const */ unsigned int RP2            : 1;
		/* const */ unsigned int RP3            : 1;
		/* const */ unsigned int PN             : 2;
		/* const */ unsigned int                : 6;
	} B;
	int I;
	unsigned int U;

} MLI1_TRSTATR_type;
#define MLI1_TRSTATR	(*( MLI1_TRSTATR_type *) 0xF010C12Cu)	/* Transmitter Registers Status Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int AOFF           : 16;
		/* const */ unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} MLI1_TP0AOFR_type;
#define MLI1_TP0AOFR	(*( MLI1_TP0AOFR_type *) 0xF010C130u)	/* Transmitter Pipe 0 Address Offset Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int AOFF           : 16;
		/* const */ unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} MLI1_TP1AOFR_type;
#define MLI1_TP1AOFR	(*( MLI1_TP1AOFR_type *) 0xF010C134u)	/* Transmitter Pipe 1 Address Offset Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int AOFF           : 16;
		/* const */ unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} MLI1_TP2AOFR_type;
#define MLI1_TP2AOFR	(*( MLI1_TP2AOFR_type *) 0xF010C138u)	/* Transmitter Pipe 2 Address Offset Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int AOFF           : 16;
		/* const */ unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} MLI1_TP3AOFR_type;
#define MLI1_TP3AOFR	(*( MLI1_TP3AOFR_type *) 0xF010C13Cu)	/* Transmitter Pipe 3 Address Offset Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int DATA           : 32;
	} B;
	int I;
	unsigned int U;

} MLI1_TP0DATAR_type;
#define MLI1_TP0DATAR	(*( MLI1_TP0DATAR_type *) 0xF010C140u)	/* Transmitter Pipe 0 Data Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int DATA           : 32;
	} B;
	int I;
	unsigned int U;

} MLI1_TP1DATAR_type;
#define MLI1_TP1DATAR	(*( MLI1_TP1DATAR_type *) 0xF010C144u)	/* Transmitter Pipe 1 Data Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int DATA           : 32;
	} B;
	int I;
	unsigned int U;

} MLI1_TP2DATAR_type;
#define MLI1_TP2DATAR	(*( MLI1_TP2DATAR_type *) 0xF010C148u)	/* Transmitter Pipe 2 Data Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int DATA           : 32;
	} B;
	int I;
	unsigned int U;

} MLI1_TP3DATAR_type;
#define MLI1_TP3DATAR	(*( MLI1_TP3DATAR_type *) 0xF010C14Cu)	/* Transmitter Pipe 3 Data Register */

typedef volatile union
{
	struct
	{ 
		unsigned int DATA           : 32;
	} B;
	int I;
	unsigned int U;

} MLI1_TDRAR_type;
#define MLI1_TDRAR	(*( MLI1_TDRAR_type *) 0xF010C150u)	/* Transmitter Data Read Answer Register */

typedef volatile union
{
	struct
	{ 
		unsigned int BS             : 4;
		unsigned int ADDR           : 28;
	} B;
	int I;
	unsigned int U;

} MLI1_TP0BAR_type;
#define MLI1_TP0BAR	(*( MLI1_TP0BAR_type *) 0xF010C154u)	/* Transmitter Pipe 0 Base Address Register */

typedef volatile union
{
	struct
	{ 
		unsigned int BS             : 4;
		unsigned int ADDR           : 28;
	} B;
	int I;
	unsigned int U;

} MLI1_TP1BAR_type;
#define MLI1_TP1BAR	(*( MLI1_TP1BAR_type *) 0xF010C158u)	/* Transmitter Pipe 1 Base Address Register */

typedef volatile union
{
	struct
	{ 
		unsigned int BS             : 4;
		unsigned int ADDR           : 28;
	} B;
	int I;
	unsigned int U;

} MLI1_TP2BAR_type;
#define MLI1_TP2BAR	(*( MLI1_TP2BAR_type *) 0xF010C15Cu)	/* Transmitter Pipe 2 Base Address Register */

typedef volatile union
{
	struct
	{ 
		unsigned int BS             : 4;
		unsigned int ADDR           : 28;
	} B;
	int I;
	unsigned int U;

} MLI1_TP3BAR_type;
#define MLI1_TP3BAR	(*( MLI1_TP3BAR_type *) 0xF010C160u)	/* Transmitter Pipe 3 Base Address Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int                : 4;
		/* const */ unsigned int ADDR           : 28;
	} B;
	int I;
	unsigned int U;

} MLI1_TCBAR_type;
#define MLI1_TCBAR	(*( MLI1_TCBAR_type *) 0xF010C164u)	/* Transmitter Copy Base Address Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int DPE            : 4;
		/* const */ unsigned int CMDP3          : 4;
		/* const */ unsigned int MOD            : 1;
		/* const */ unsigned int DW             : 2;
		/* const */ unsigned int TF             : 2;
		/* const */ unsigned int PE             : 1;
		/* const */ unsigned int RPN            : 2;
		unsigned int MPE            : 4;
		unsigned int BEN            : 1;
		unsigned int                : 3;
		unsigned int RCVRST         : 1;
		unsigned int                : 7;
	} B;
	int I;
	unsigned int U;

} MLI1_RCR_type;
#define MLI1_RCR	(*( MLI1_RCR_type *) 0xF010C168u)	/* Receiver Control Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int                : 4;
		/* const */ unsigned int ADDR           : 28;
	} B;
	int I;
	unsigned int U;

} MLI1_RP0BAR_type;
#define MLI1_RP0BAR	(*( MLI1_RP0BAR_type *) 0xF010C16Cu)	/* Receiver Pipe 0 Base Address Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int                : 4;
		/* const */ unsigned int ADDR           : 28;
	} B;
	int I;
	unsigned int U;

} MLI1_RP1BAR_type;
#define MLI1_RP1BAR	(*( MLI1_RP1BAR_type *) 0xF010C170u)	/* Receiver Pipe 1 Base Address Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int                : 4;
		/* const */ unsigned int ADDR           : 28;
	} B;
	int I;
	unsigned int U;

} MLI1_RP2BAR_type;
#define MLI1_RP2BAR	(*( MLI1_RP2BAR_type *) 0xF010C174u)	/* Receiver Pipe 2 Base Address Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int                : 4;
		/* const */ unsigned int ADDR           : 28;
	} B;
	int I;
	unsigned int U;

} MLI1_RP3BAR_type;
#define MLI1_RP3BAR	(*( MLI1_RP3BAR_type *) 0xF010C178u)	/* Receiver Pipe 3 Base Address Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int BS             : 4;
		/* const */ unsigned int                : 2;
		/* const */ unsigned int AP             : 10;
		/* const */ unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} MLI1_RP0STATR_type;
#define MLI1_RP0STATR	(*( MLI1_RP0STATR_type *) 0xF010C17Cu)	/* Receiver Pipe 0 Status Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int BS             : 4;
		/* const */ unsigned int                : 2;
		/* const */ unsigned int AP             : 10;
		/* const */ unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} MLI1_RP1STATR_type;
#define MLI1_RP1STATR	(*( MLI1_RP1STATR_type *) 0xF010C180u)	/* Receiver Pipe 1 Status Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int BS             : 4;
		/* const */ unsigned int                : 2;
		/* const */ unsigned int AP             : 10;
		/* const */ unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} MLI1_RP2STATR_type;
#define MLI1_RP2STATR	(*( MLI1_RP2STATR_type *) 0xF010C184u)	/* Receiver Pipe 2 Status Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int BS             : 4;
		/* const */ unsigned int                : 2;
		/* const */ unsigned int AP             : 10;
		/* const */ unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} MLI1_RP3STATR_type;
#define MLI1_RP3STATR	(*( MLI1_RP3STATR_type *) 0xF010C188u)	/* Receiver Pipe 3 Status Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int ADDR           : 32;
	} B;
	int I;
	unsigned int U;

} MLI1_RADRR_type;
#define MLI1_RADRR	(*( MLI1_RADRR_type *) 0xF010C18Cu)	/* Receiver Address Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int DATA           : 32;
	} B;
	int I;
	unsigned int U;

} MLI1_RDATAR_type;
#define MLI1_RDATAR	(*( MLI1_RDATAR_type *) 0xF010C190u)	/* Receiver Data Register */

typedef volatile union
{
	struct
	{ 
		unsigned int SCV0           : 1;
		unsigned int SCV1           : 1;
		unsigned int SCV2           : 1;
		unsigned int SCV3           : 1;
		unsigned int SMOD           : 1;
		unsigned int                : 3;
		unsigned int CDV0           : 1;
		unsigned int CDV1           : 1;
		unsigned int CDV2           : 1;
		unsigned int CDV3           : 1;
		unsigned int CCV0           : 1;
		unsigned int CCV1           : 1;
		unsigned int CCV2           : 1;
		unsigned int CCV3           : 1;
		unsigned int CMOD           : 1;
		unsigned int CBAV           : 1;
		unsigned int                : 6;
		unsigned int CAV            : 1;
		unsigned int CRPE           : 1;
		unsigned int CTPE           : 1;
		unsigned int CNAE           : 1;
		unsigned int CCIV0          : 1;
		unsigned int CCIV1          : 1;
		unsigned int CCIV2          : 1;
		unsigned int CCIV3          : 1;
	} B;
	int I;
	unsigned int U;

} MLI1_SCR_type;
#define MLI1_SCR	(*( MLI1_SCR_type *) 0xF010C194u)	/* Set Clear Register */

typedef volatile union
{
	struct
	{ 
		unsigned int NFSIE0         : 1;
		unsigned int NFSIE1         : 1;
		unsigned int NFSIE2         : 1;
		unsigned int NFSIE3         : 1;
		unsigned int CFSIE0         : 1;
		unsigned int CFSIE1         : 1;
		unsigned int CFSIE2         : 1;
		unsigned int CFSIE3         : 1;
		unsigned int PEIE           : 1;
		unsigned int TEIE           : 1;
		unsigned int                : 6;
		unsigned int NFSIR0         : 1;
		unsigned int NFSIR1         : 1;
		unsigned int NFSIR2         : 1;
		unsigned int NFSIR3         : 1;
		unsigned int CFSIR0         : 1;
		unsigned int CFSIR1         : 1;
		unsigned int CFSIR2         : 1;
		unsigned int CFSIR3         : 1;
		unsigned int PEIR           : 1;
		unsigned int TEIR           : 1;
		unsigned int                : 6;
	} B;
	int I;
	unsigned int U;

} MLI1_TIER_type;
#define MLI1_TIER	(*( MLI1_TIER_type *) 0xF010C198u)	/* Transmitter Interrupt Enable Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int NFSI0          : 1;
		/* const */ unsigned int NFSI1          : 1;
		/* const */ unsigned int NFSI2          : 1;
		/* const */ unsigned int NFSI3          : 1;
		/* const */ unsigned int CFSI0          : 1;
		/* const */ unsigned int CFSI1          : 1;
		/* const */ unsigned int CFSI2          : 1;
		/* const */ unsigned int CFSI3          : 1;
		/* const */ unsigned int PEI            : 1;
		/* const */ unsigned int TEI            : 1;
		/* const */ unsigned int                : 22;
	} B;
	int I;
	unsigned int U;

} MLI1_TISR_type;
#define MLI1_TISR	(*( MLI1_TISR_type *) 0xF010C19Cu)	/* Transmitter Interrupt Status Register */

typedef volatile union
{
	struct
	{ 
		unsigned int NFSIP0         : 3;
		unsigned int                : 1;
		unsigned int NFSIP1         : 3;
		unsigned int                : 1;
		unsigned int NFSIP2         : 3;
		unsigned int                : 1;
		unsigned int NFSIP3         : 3;
		unsigned int                : 1;
		unsigned int CFSIP          : 3;
		unsigned int                : 1;
		unsigned int PTEIP          : 3;
		unsigned int                : 9;
	} B;
	int I;
	unsigned int U;

} MLI1_TINPR_type;
#define MLI1_TINPR	(*( MLI1_TINPR_type *) 0xF010C1A0u)	/* Transmitter Interrupt Node Pointer Register */

typedef volatile union
{
	struct
	{ 
		unsigned int NFRIE          : 2;
		unsigned int CFRIE0         : 1;
		unsigned int CFRIE1         : 1;
		unsigned int CFRIE2         : 1;
		unsigned int CFRIE3         : 1;
		unsigned int ICE            : 1;
		unsigned int PEIE           : 1;
		unsigned int MPEIE          : 1;
		unsigned int DRAIE          : 1;
		unsigned int                : 6;
		unsigned int NFRIR          : 1;
		unsigned int MEIR           : 1;
		unsigned int CFRIR0         : 1;
		unsigned int CFRIR1         : 1;
		unsigned int CFRIR2         : 1;
		unsigned int CFRIR3         : 1;
		unsigned int ICER           : 1;
		unsigned int PEIR           : 1;
		unsigned int MPEIR          : 1;
		unsigned int DRAIR          : 1;
		unsigned int                : 6;
	} B;
	int I;
	unsigned int U;

} MLI1_RIER_type;
#define MLI1_RIER	(*( MLI1_RIER_type *) 0xF010C1A4u)	/* Receiver Interrupt Enable Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int NFRI           : 1;
		/* const */ unsigned int MEI            : 1;
		/* const */ unsigned int CFRI0          : 1;
		/* const */ unsigned int CFRI1          : 1;
		/* const */ unsigned int CFRI2          : 1;
		/* const */ unsigned int CFRI3          : 1;
		/* const */ unsigned int IC             : 1;
		/* const */ unsigned int PEI            : 1;
		/* const */ unsigned int MPEI           : 1;
		/* const */ unsigned int DRAI           : 1;
		/* const */ unsigned int                : 22;
	} B;
	int I;
	unsigned int U;

} MLI1_RISR_type;
#define MLI1_RISR	(*( MLI1_RISR_type *) 0xF010C1A8u)	/* Receiver Interrupt Status Register */

typedef volatile union
{
	struct
	{ 
		unsigned int NFRIP          : 3;
		unsigned int                : 1;
		unsigned int CFRIP          : 3;
		unsigned int                : 1;
		unsigned int MPPEIP         : 3;
		unsigned int                : 1;
		unsigned int DRAIP          : 3;
		unsigned int                : 17;
	} B;
	int I;
	unsigned int U;

} MLI1_RINPR_type;
#define MLI1_RINPR	(*( MLI1_RINPR_type *) 0xF010C1ACu)	/* Receiver Interrupt Node Pointer Register */

typedef volatile union
{
	struct
	{ 
		unsigned int SIMLI0         : 1;
		unsigned int SIMLI1         : 1;
		unsigned int SIMLI2         : 1;
		unsigned int SIMLI3         : 1;
		unsigned int SIMLI4         : 1;
		unsigned int SIMLI5         : 1;
		unsigned int SIMLI6         : 1;
		unsigned int SIMLI7         : 1;
		unsigned int                : 24;
	} B;
	int I;
	unsigned int U;

} MLI1_GINTR_type;
#define MLI1_GINTR	(*( MLI1_GINTR_type *) 0xF010C1B0u)	/* MLI Global Interrupt Set Register */

typedef volatile union
{
	struct
	{ 
		unsigned int TVEA           : 1;
		unsigned int TVEB           : 1;
		unsigned int TVEC           : 1;
		unsigned int TVED           : 1;
		unsigned int TVPA           : 1;
		unsigned int TVPB           : 1;
		unsigned int TVPC           : 1;
		unsigned int TVPD           : 1;
		unsigned int TRS            : 2;
		unsigned int TRP            : 1;
		unsigned int TRE            : 1;
		unsigned int TCE            : 1;
		unsigned int TCP            : 1;
		unsigned int TDP            : 1;
		unsigned int RVE            : 1;
		unsigned int RRS            : 2;
		unsigned int RRPA           : 1;
		unsigned int RRPB           : 1;
		unsigned int RRPC           : 1;
		unsigned int RRPD           : 1;
		unsigned int RVS            : 2;
		unsigned int RVP            : 1;
		unsigned int RCS            : 2;
		unsigned int RCP            : 1;
		unsigned int RCE            : 1;
		unsigned int RDS            : 2;
		unsigned int RDP            : 1;
	} B;
	int I;
	unsigned int U;

} MLI1_OICR_type;
#define MLI1_OICR	(*( MLI1_OICR_type *) 0xF010C1B4u)	/* Output Input Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int AEN0           : 1;
		unsigned int AEN1           : 1;
		unsigned int AEN2           : 1;
		unsigned int AEN3           : 1;
		unsigned int AEN4           : 1;
		unsigned int AEN5           : 1;
		unsigned int AEN6           : 1;
		unsigned int AEN7           : 1;
		unsigned int AEN8           : 1;
		unsigned int AEN9           : 1;
		unsigned int AEN10          : 1;
		unsigned int AEN11          : 1;
		unsigned int AEN12          : 1;
		unsigned int AEN13          : 1;
		unsigned int AEN14          : 1;
		unsigned int AEN15          : 1;
		unsigned int AEN16          : 1;
		unsigned int AEN17          : 1;
		unsigned int AEN18          : 1;
		unsigned int AEN19          : 1;
		unsigned int AEN20          : 1;
		unsigned int AEN21          : 1;
		unsigned int AEN22          : 1;
		unsigned int AEN23          : 1;
		unsigned int AEN24          : 1;
		unsigned int AEN25          : 1;
		unsigned int AEN26          : 1;
		unsigned int AEN27          : 1;
		unsigned int AEN28          : 1;
		unsigned int AEN29          : 1;
		unsigned int AEN30          : 1;
		unsigned int AEN31          : 1;
	} B;
	int I;
	unsigned int U;

} MLI1_AER_type;
#define MLI1_AER	(*( MLI1_AER_type *) 0xF010C1B8u)	/* Access Enable Register */

typedef volatile union
{
	struct
	{ 
		unsigned int SLICE0         : 5;
		unsigned int SIZE0          : 3;
		unsigned int SLICE1         : 5;
		unsigned int SIZE1          : 3;
		unsigned int SLICE2         : 5;
		unsigned int SIZE2          : 3;
		unsigned int SLICE3         : 5;
		unsigned int SIZE3          : 3;
	} B;
	int I;
	unsigned int U;

} MLI1_ARR_type;
#define MLI1_ARR	(*( MLI1_ARR_type *) 0xF010C1BCu)	/* Access Range Register */


/* MCHK */
typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int MOD_REV        : 8;
		/* const */ unsigned int MOD_TYPE       : 8;
		/* const */ unsigned int MOD_NUMBER     : 16;
	} B;
	int I;
	unsigned int U;

} MCHK_ID_type;
#define MCHK_ID	(*( MCHK_ID_type *) 0xF010C208u)	/* MCHK Module Identification Register */

typedef volatile union
{
	struct
	{ 
		unsigned int MCHKIN         : 32;
	} B;
	int I;
	unsigned int U;

} MCHK_IR_type;
#define MCHK_IR	(*( MCHK_IR_type *) 0xF010C210u)	/* MCHK Memory Checker Input Register */

typedef volatile union
{
	struct
	{ 
		unsigned int MCHKR          : 32;
	} B;
	int I;
	unsigned int U;

} MCHK_RR_type;
#define MCHK_RR	(*( MCHK_RR_type *) 0xF010C214u)	/* Memory Checker Result Register */

typedef volatile union
{
	struct
	{ 
		unsigned int WO             : 31;
		unsigned int                : 1;
	} B;
	int I;
	unsigned int U;

} MCHK_WR_type;
#define MCHK_WR	(*( MCHK_WR_type *) 0xF010C220u)	/* Write Register */


/* Data Mgmt Unit Receive */
typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 CHNO           : 2;
		unsigned __sfrbit32                : 5;
		unsigned __sfrbit32 SD             : 1;
		unsigned __sfrbit32 ILEN           : 1;
		unsigned __sfrbit32 CRC            : 1;
		unsigned __sfrbit32 RFOD           : 1;
		unsigned __sfrbit32 MFL            : 1;
		unsigned __sfrbit32 HRAB           : 1;
		unsigned __sfrbit32 FE             : 1;
		unsigned __sfrbit32 RAB            : 1;
		unsigned __sfrbit32 HI             : 1;
		unsigned __sfrbit32 DESCRID        : 6;
		unsigned __sfrbit32                : 5;
		unsigned __sfrbit32 FORMAT         : 5;
	} B;
	int I;
	unsigned int U;

} ETHERNET_DRISFIFO_type;
#define ETHERNET_DRISFIFO	(*( ETHERNET_DRISFIFO_type *) 0xF2000118u)	/* DR Interrupt Status FIFO */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned __sfrbit32 CNT            : 32;
	} B;
	int I;
	unsigned int U;

} ETHERNET_DRFFCR_type;
#define ETHERNET_DRFFCR	(*( ETHERNET_DRFFCR_type *) 0xF200011Cu)	/* DR FIFO Full Counter Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 CHNO           : 2;
		unsigned __sfrbit32                : 14;
		unsigned __sfrbit32 CMDREC         : 8;
		unsigned __sfrbit32                : 8;
	} B;
	int I;
	unsigned int U;

} ETHERNET_DRCMD_type;
#define ETHERNET_DRCMD	(*( ETHERNET_DRCMD_type *) 0xF2000120u)	/* DR Command Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 FM             : 2;
		unsigned __sfrbit32                : 30;
	} B;
	int I;
	unsigned int U;

} ETHERNET_DRMOD_type;
#define ETHERNET_DRMOD	(*( ETHERNET_DRMOD_type *) 0xF2000124u)	/* DR Mode Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32                : 30;
		unsigned __sfrbit32 FRDA           : 2;
	} B;
	int I;
	unsigned int U;

} ETHERNET_DRFRDA_type;
#define ETHERNET_DRFRDA	(*( ETHERNET_DRFRDA_type *) 0xF200012Cu)	/* DR First Rx Descriptor Address Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 CMDC           : 1;
		unsigned __sfrbit32                : 1;
		unsigned __sfrbit32 SD             : 1;
		unsigned __sfrbit32                : 5;
		unsigned __sfrbit32 ILEN           : 1;
		unsigned __sfrbit32 CRC            : 1;
		unsigned __sfrbit32 RFOD           : 1;
		unsigned __sfrbit32 MFL            : 1;
		unsigned __sfrbit32 HRAB           : 1;
		unsigned __sfrbit32 FE             : 1;
		unsigned __sfrbit32 RAB            : 1;
		unsigned __sfrbit32                : 17;
	} B;
	int I;
	unsigned int U;

} ETHERNET_DRIMR_type;
#define ETHERNET_DRIMR	(*( ETHERNET_DRIMR_type *) 0xF2000130u)	/* DR Interrupt Mask Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 ENA            : 1;
		unsigned __sfrbit32 LBE            : 1;
		unsigned __sfrbit32                : 30;
	} B;
	int I;
	unsigned int U;

} ETHERNET_DRCONF_type;
#define ETHERNET_DRCONF	(*( ETHERNET_DRCONF_type *) 0xF2000134u)	/* DR Configuration Register */


/* Data Mgmt Unit Transmit */
typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 CHNO           : 2;
		unsigned __sfrbit32                : 22;
		unsigned __sfrbit32 CMDX           : 8;
	} B;
	int I;
	unsigned int U;

} ETHERNET_DTCMD_type;
#define ETHERNET_DTCMD	(*( ETHERNET_DTCMD_type *) 0xF2000218u)	/* DT Command Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned __sfrbit32                : 2;
		/* const */ unsigned __sfrbit32 FTDA           : 30;
	} B;
	int I;
	unsigned int U;

} ETHERNET_DTFTDA_type;
#define ETHERNET_DTFTDA	(*( ETHERNET_DTFTDA_type *) 0xF2000220u)	/* DT First Tx Descriptor Address Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 CMDC           : 1;
		unsigned __sfrbit32 TAB            : 1;
		unsigned __sfrbit32 HTAB           : 1;
		unsigned __sfrbit32                : 29;
	} B;
	int I;
	unsigned int U;

} ETHERNET_DTIMR_type;
#define ETHERNET_DTIMR	(*( ETHERNET_DTIMR_type *) 0xF2000224u)	/* DT Interrupt Mask Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32                : 1;
		unsigned __sfrbit32 LBE            : 1;
		unsigned __sfrbit32                : 30;
	} B;
	int I;
	unsigned int U;

} ETHERNET_DTCONF_type;
#define ETHERNET_DTCONF	(*( ETHERNET_DTCONF_type *) 0xF2000228u)	/* DT Configuration Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32                : 16;
		unsigned __sfrbit32 BL             : 4;
		unsigned __sfrbit32                : 12;
	} B;
	int I;
	unsigned int U;

} ETHERNET_DTCONF3_type;
#define ETHERNET_DTCONF3	(*( ETHERNET_DTCONF3_type *) 0xF200022Cu)	/* DT Configuration 3 Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 CHNO           : 2;
		unsigned __sfrbit32 HTAB           : 1;
		unsigned __sfrbit32 TAB            : 1;
		unsigned __sfrbit32 HI             : 1;
		unsigned __sfrbit32 DESCRID        : 6;
		unsigned __sfrbit32 FORMAT         : 5;
		unsigned __sfrbit32                : 16;
	} B;
	int I;
	unsigned int U;

} ETHERNET_DTISFIFO_type;
#define ETHERNET_DTISFIFO	(*( ETHERNET_DTISFIFO_type *) 0xF2000238u)	/* DT Interrupt Status FIFO */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned __sfrbit32 CNT            : 32;
	} B;
	int I;
	unsigned int U;

} ETHERNET_DTFFCR_type;
#define ETHERNET_DTFFCR	(*( ETHERNET_DTFFCR_type *) 0xF200023Cu)	/* DT FIFO Full Counter Register */


/* MAC Controller */
typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 HLTREQ         : 1;
		unsigned __sfrbit32 HLTIMM         : 1;
		unsigned __sfrbit32 RESET          : 1;
		unsigned __sfrbit32 FULLDUP        : 1;
		unsigned __sfrbit32 MACLP          : 1;
		unsigned __sfrbit32                : 5;
		unsigned __sfrbit32 MROLL          : 1;
		unsigned __sfrbit32                : 21;
	} B;
	int I;
	unsigned int U;

} ETHERNET_MACCTRL_type;
#define ETHERNET_MACCTRL	(*( ETHERNET_MACCTRL_type *) 0xF2000310u)	/* MAC Ctrl Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 STACC          : 1;
		unsigned __sfrbit32 GRPACC         : 1;
		unsigned __sfrbit32 BRDACC         : 1;
		unsigned __sfrbit32 NEGCAM         : 1;
		unsigned __sfrbit32 CMPEN          : 1;
		unsigned __sfrbit32                : 27;
	} B;
	int I;
	unsigned int U;

} ETHERNET_MACCAMCTRL0_type;
#define ETHERNET_MACCAMCTRL0	(*( ETHERNET_MACCAMCTRL0_type *) 0xF2000314u)	/* MAC CAM Ctrl Register 0 */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 TXEN           : 1;
		unsigned __sfrbit32 TXHLT          : 1;
		unsigned __sfrbit32 NOPAD          : 1;
		unsigned __sfrbit32 NOCRC          : 1;
		unsigned __sfrbit32                : 1;
		unsigned __sfrbit32 NODEF          : 1;
		unsigned __sfrbit32 SDPSE          : 1;
		unsigned __sfrbit32 MII10          : 1;
		unsigned __sfrbit32                : 24;
	} B;
	int I;
	unsigned int U;

} ETHERNET_MACTXCTRL_type;
#define ETHERNET_MACTXCTRL	(*( ETHERNET_MACTXCTRL_type *) 0xF2000318u)	/* MAC Transmit Ctrl Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned __sfrbit32 TXCOLCNT       : 4;
		/* const */ unsigned __sfrbit32 XCOL           : 1;
		/* const */ unsigned __sfrbit32 TXDEF          : 1;
		/* const */ unsigned __sfrbit32 PSE            : 1;
		/* const */ unsigned __sfrbit32                : 1;
		/* const */ unsigned __sfrbit32 UNDER          : 1;
		/* const */ unsigned __sfrbit32 XDEF           : 1;
		/* const */ unsigned __sfrbit32 LCAR           : 1;
		/* const */ unsigned __sfrbit32                : 1;
		/* const */ unsigned __sfrbit32 LCOL           : 1;
		/* const */ unsigned __sfrbit32 TXP            : 1;
		/* const */ unsigned __sfrbit32 CMP            : 1;
		/* const */ unsigned __sfrbit32 TXHLTD         : 1;
		/* const */ unsigned __sfrbit32 SQERR          : 1;
		/* const */ unsigned __sfrbit32                : 15;
	} B;
	int I;
	unsigned int U;

} ETHERNET_MACTXSTAT_type;
#define ETHERNET_MACTXSTAT	(*( ETHERNET_MACTXSTAT_type *) 0xF200031Cu)	/* MAC Transmit Status Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 RXEN           : 1;
		unsigned __sfrbit32 RXHLT          : 1;
		unsigned __sfrbit32 LOEN           : 1;
		unsigned __sfrbit32 SHEN           : 1;
		unsigned __sfrbit32 STRCRC         : 1;
		unsigned __sfrbit32 PCTLP          : 1;
		unsigned __sfrbit32 IGNCRC         : 1;
		unsigned __sfrbit32                : 25;
	} B;
	int I;
	unsigned int U;

} ETHERNET_MACRXCTRL_type;
#define ETHERNET_MACRXCTRL	(*( ETHERNET_MACRXCTRL_type *) 0xF2000320u)	/* MAC Receive Ctrl Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32                : 5;
		unsigned __sfrbit32 CTLFRX         : 1;
		unsigned __sfrbit32                : 2;
		unsigned __sfrbit32 ALIGNE         : 1;
		unsigned __sfrbit32 CRCE           : 1;
		unsigned __sfrbit32 OVER           : 1;
		unsigned __sfrbit32 LOE            : 1;
		unsigned __sfrbit32                : 1;
		unsigned __sfrbit32 RXPE           : 1;
		unsigned __sfrbit32 GOOD           : 1;
		unsigned __sfrbit32 RXHLTD         : 1;
		unsigned __sfrbit32                : 16;
	} B;
	int I;
	unsigned int U;

} ETHERNET_MACRXSTAT_type;
#define ETHERNET_MACRXSTAT	(*( ETHERNET_MACRXSTAT_type *) 0xF2000324u)	/* MAC Receive Status Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 SMD            : 16;
		unsigned __sfrbit32                : 16;
	} B;
	int I;
	unsigned int U;

} ETHERNET_MACSMDATA_type;
#define ETHERNET_MACSMDATA	(*( ETHERNET_MACSMDATA_type *) 0xF2000328u)	/* MAC Station Management Data Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 ADDR           : 5;
		unsigned __sfrbit32 PHYADDR        : 5;
		unsigned __sfrbit32 WR             : 1;
		unsigned __sfrbit32 BUSY           : 1;
		unsigned __sfrbit32                : 20;
	} B;
	int I;
	unsigned int U;

} ETHERNET_MACSMCTRL_type;
#define ETHERNET_MACSMCTRL	(*( ETHERNET_MACSMCTRL_type *) 0xF200032Cu)	/* MAC Station Management Ctrl Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 ADDR           : 6;
		unsigned __sfrbit32                : 25;
		unsigned __sfrbit32 CAW            : 1;
	} B;
	int I;
	unsigned int U;

} ETHERNET_MACCAMADDR_type;
#define ETHERNET_MACCAMADDR	(*( ETHERNET_MACCAMADDR_type *) 0xF2000330u)	/* MAC CAM Address Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 CAMDAT         : 32;
	} B;
	int I;
	unsigned int U;

} ETHERNET_MACCAMDATA_type;
#define ETHERNET_MACCAMDATA	(*( ETHERNET_MACCAMDATA_type *) 0xF2000334u)	/* MAC Cam Data Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 CEE            : 22;
		unsigned __sfrbit32                : 10;
	} B;
	int I;
	unsigned int U;

} ETHERNET_MACCAMCTRL1_type;
#define ETHERNET_MACCAMCTRL1	(*( ETHERNET_MACCAMCTRL1_type *) 0xF2000338u)	/* MAC CAM Ctrl Register 1 */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 MERRCNT        : 16;
		unsigned __sfrbit32                : 16;
	} B;
	int I;
	unsigned int U;

} ETHERNET_MACMERRCNT_type;
#define ETHERNET_MACMERRCNT	(*( ETHERNET_MACMERRCNT_type *) 0xF200033Cu)	/* MAC Missed Error Count Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 PSECNT         : 16;
		unsigned __sfrbit32                : 16;
	} B;
	int I;
	unsigned int U;

} ETHERNET_MACPSECNT_type;
#define ETHERNET_MACPSECNT	(*( ETHERNET_MACPSECNT_type *) 0xF2000340u)	/* MAC Pause Count Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 RPSECNT        : 16;
		unsigned __sfrbit32                : 16;
	} B;
	int I;
	unsigned int U;

} ETHERNET_MACRPSECNT_type;
#define ETHERNET_MACRPSECNT	(*( ETHERNET_MACRPSECNT_type *) 0xF2000344u)	/* MAC Remote Pause Count Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32                : 4;
		unsigned __sfrbit32 XCOL           : 1;
		unsigned __sfrbit32                : 1;
		unsigned __sfrbit32 TXDEF          : 1;
		unsigned __sfrbit32 PSE            : 1;
		unsigned __sfrbit32 UNDER          : 1;
		unsigned __sfrbit32 XDEF           : 1;
		unsigned __sfrbit32 LCAR           : 1;
		unsigned __sfrbit32 LCOL           : 1;
		unsigned __sfrbit32 TXP            : 1;
		unsigned __sfrbit32 CMP            : 1;
		unsigned __sfrbit32 TXHLTD         : 1;
		unsigned __sfrbit32 SQERR          : 1;
		unsigned __sfrbit32                : 16;
	} B;
	int I;
	unsigned int U;

} ETHERNET_MACTX0IMR_type;
#define ETHERNET_MACTX0IMR	(*( ETHERNET_MACTX0IMR_type *) 0xF2000348u)	/* MAC Transmit 0 Interrupt Mask Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 TXCOLCNT       : 4;
		unsigned __sfrbit32 XCOL           : 1;
		unsigned __sfrbit32                : 1;
		unsigned __sfrbit32 TXDEF          : 1;
		unsigned __sfrbit32 PSE            : 1;
		unsigned __sfrbit32 UNDER          : 1;
		unsigned __sfrbit32 XDEF           : 1;
		unsigned __sfrbit32 LCAR           : 1;
		unsigned __sfrbit32 LCOL           : 1;
		unsigned __sfrbit32 TXP            : 1;
		unsigned __sfrbit32 CMP            : 1;
		unsigned __sfrbit32 TXHLTD         : 1;
		unsigned __sfrbit32 SQERR          : 1;
		unsigned __sfrbit32                : 16;
	} B;
	int I;
	unsigned int U;

} ETHERNET_MACTX0ISR_type;
#define ETHERNET_MACTX0ISR	(*( ETHERNET_MACTX0ISR_type *) 0xF200034Cu)	/* MAC Transmit 0 Interrupt Status Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32                : 4;
		unsigned __sfrbit32 XCOL           : 1;
		unsigned __sfrbit32                : 1;
		unsigned __sfrbit32 TXDEF          : 1;
		unsigned __sfrbit32 PSE            : 1;
		unsigned __sfrbit32 UNDER          : 1;
		unsigned __sfrbit32 XDEF           : 1;
		unsigned __sfrbit32 LCAR           : 1;
		unsigned __sfrbit32 LCOL           : 1;
		unsigned __sfrbit32 TXP            : 1;
		unsigned __sfrbit32 CMP            : 1;
		unsigned __sfrbit32 TXHLTD         : 1;
		unsigned __sfrbit32 SQERR          : 1;
		unsigned __sfrbit32                : 16;
	} B;
	int I;
	unsigned int U;

} ETHERNET_MACTX1IMR_type;
#define ETHERNET_MACTX1IMR	(*( ETHERNET_MACTX1IMR_type *) 0xF2000350u)	/* MAC Transmit 1 Interrupt Mask Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 TXCOLCNT       : 4;
		unsigned __sfrbit32 XCOL           : 1;
		unsigned __sfrbit32                : 1;
		unsigned __sfrbit32 TXDEF          : 1;
		unsigned __sfrbit32 PSE            : 1;
		unsigned __sfrbit32 UNDER          : 1;
		unsigned __sfrbit32 XDEF           : 1;
		unsigned __sfrbit32 LCAR           : 1;
		unsigned __sfrbit32 LCOL           : 1;
		unsigned __sfrbit32 TXP            : 1;
		unsigned __sfrbit32 CMP            : 1;
		unsigned __sfrbit32 TXHLTD         : 1;
		unsigned __sfrbit32 SQERR          : 1;
		unsigned __sfrbit32                : 16;
	} B;
	int I;
	unsigned int U;

} ETHERNET_MACTX1ISR_type;
#define ETHERNET_MACTX1ISR	(*( ETHERNET_MACTX1ISR_type *) 0xF2000354u)	/* MAC Transmit 1 Interrupt Status Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32                : 23;
		unsigned __sfrbit32 MROLL          : 1;
		unsigned __sfrbit32 CTLFRX         : 1;
		unsigned __sfrbit32 ALIGNE         : 1;
		unsigned __sfrbit32 CRCE           : 1;
		unsigned __sfrbit32 OVER           : 1;
		unsigned __sfrbit32 LOE            : 1;
		unsigned __sfrbit32 RXPE           : 1;
		unsigned __sfrbit32 GOOD           : 1;
		unsigned __sfrbit32 RXHLTD         : 1;
	} B;
	int I;
	unsigned int U;

} ETHERNET_MACRX0IMR_type;
#define ETHERNET_MACRX0IMR	(*( ETHERNET_MACRX0IMR_type *) 0xF2000368u)	/* MAC Receive 0 Interrupt Mask Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32                : 23;
		unsigned __sfrbit32 MROLL          : 1;
		unsigned __sfrbit32 CTLFRX         : 1;
		unsigned __sfrbit32 ALIGNE         : 1;
		unsigned __sfrbit32 CRCE           : 1;
		unsigned __sfrbit32 OVER           : 1;
		unsigned __sfrbit32 LOE            : 1;
		unsigned __sfrbit32 RXPE           : 1;
		unsigned __sfrbit32 GOOD           : 1;
		unsigned __sfrbit32 RXHLTD         : 1;
	} B;
	int I;
	unsigned int U;

} ETHERNET_MACRX0ISR_type;
#define ETHERNET_MACRX0ISR	(*( ETHERNET_MACRX0ISR_type *) 0xF200036Cu)	/* MAC Receive 0 Interrupt Status Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32                : 23;
		unsigned __sfrbit32 MROLL          : 1;
		unsigned __sfrbit32 CTLFRX         : 1;
		unsigned __sfrbit32 ALIGNE         : 1;
		unsigned __sfrbit32 CRCE           : 1;
		unsigned __sfrbit32 OVER           : 1;
		unsigned __sfrbit32 LOE            : 1;
		unsigned __sfrbit32 RXPE           : 1;
		unsigned __sfrbit32 GOOD           : 1;
		unsigned __sfrbit32 RXHLTD         : 1;
	} B;
	int I;
	unsigned int U;

} ETHERNET_MACRX1IMR_type;
#define ETHERNET_MACRX1IMR	(*( ETHERNET_MACRX1IMR_type *) 0xF2000370u)	/* MAC Receive 1 Interrupt Mask Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32                : 23;
		unsigned __sfrbit32 MROLL          : 1;
		unsigned __sfrbit32 CTLFRX         : 1;
		unsigned __sfrbit32 ALIGNE         : 1;
		unsigned __sfrbit32 CRCE           : 1;
		unsigned __sfrbit32 OVER           : 1;
		unsigned __sfrbit32 LOE            : 1;
		unsigned __sfrbit32 RXPE           : 1;
		unsigned __sfrbit32 GOOD           : 1;
		unsigned __sfrbit32 RXHLTD         : 1;
	} B;
	int I;
	unsigned int U;

} ETHERNET_MACRX1ISR_type;
#define ETHERNET_MACRX1ISR	(*( ETHERNET_MACRX1ISR_type *) 0xF2000374u)	/* MAC Receive 1 Interrupt Status Register */


/* Receive Buffer */
typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 CHID           : 2;
		unsigned __sfrbit32                : 14;
		unsigned __sfrbit32 CMD            : 8;
		unsigned __sfrbit32                : 8;
	} B;
	int I;
	unsigned int U;

} ETHERNET_RBCC_type;
#define ETHERNET_RBCC	(*( ETHERNET_RBCC_type *) 0xF2000418u)	/* RB Channel Command Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 FTC            : 2;
		unsigned __sfrbit32                : 30;
	} B;
	int I;
	unsigned int U;

} ETHERNET_RBCBL_type;
#define ETHERNET_RBCBL	(*( ETHERNET_RBCBL_type *) 0xF200041Cu)	/* RB Channel Burst Length Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32                : 2;
		unsigned __sfrbit32 FPMM           : 1;
		unsigned __sfrbit32                : 2;
		unsigned __sfrbit32 IM             : 1;
		unsigned __sfrbit32                : 26;
	} B;
	int I;
	unsigned int U;

} ETHERNET_RBFPM_type;
#define ETHERNET_RBFPM	(*( ETHERNET_RBFPM_type *) 0xF2000420u)	/* Free Pool Monitor Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 RBDBTH         : 8;
		unsigned __sfrbit32                : 8;
		unsigned __sfrbit32 RBAQTH         : 6;
		unsigned __sfrbit32                : 10;
	} B;
	int I;
	unsigned int U;

} ETHERNET_RBFPTH_type;
#define ETHERNET_RBFPTH	(*( ETHERNET_RBFPTH_type *) 0xF2000424u)	/* RB Free Pool Threshold Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned __sfrbit32 RBFPC          : 8;
		/* const */ unsigned __sfrbit32                : 8;
		/* const */ unsigned __sfrbit32 RBAQC          : 6;
		/* const */ unsigned __sfrbit32                : 10;
	} B;
	int I;
	unsigned int U;

} ETHERNET_RBFPCNT_type;
#define ETHERNET_RBFPCNT	(*( ETHERNET_RBFPCNT_type *) 0xF2000430u)	/* RB Free Pool Count Register */


/* Transmit Buffer */
typedef volatile union
{
	struct
	{ 
		/* const */ unsigned __sfrbit32 CHID           : 2;
		/* const */ unsigned __sfrbit32                : 15;
		/* const */ unsigned __sfrbit32 CMDF           : 1;
		/* const */ unsigned __sfrbit32                : 14;
	} B;
	int I;
	unsigned int U;

} ETHERNET_TBISR_type;
#define ETHERNET_TBISR	(*( ETHERNET_TBISR_type *) 0xF2000514u)	/* TB Interrupt Status Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 CHID           : 2;
		unsigned __sfrbit32                : 22;
		unsigned __sfrbit32 CMD            : 8;
	} B;
	int I;
	unsigned int U;

} ETHERNET_TBCC_type;
#define ETHERNET_TBCC	(*( ETHERNET_TBCC_type *) 0xF2000518u)	/* TB Channel Command Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32                : 8;
		unsigned __sfrbit32 RTC            : 3;
		unsigned __sfrbit32                : 1;
		unsigned __sfrbit32 FTC            : 3;
		unsigned __sfrbit32                : 1;
		unsigned __sfrbit32 ITBS           : 8;
		unsigned __sfrbit32                : 8;
	} B;
	int I;
	unsigned int U;

} ETHERNET_TBCPR_type;
#define ETHERNET_TBCPR	(*( ETHERNET_TBCPR_type *) 0xF200051Cu)	/* TB Channel Parameter Register */


/* CPS */
typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int MOD_REV        : 8;
		/* const */ unsigned int MOD_TYPE       : 8;
		/* const */ unsigned int MOD_NUMBER     : 16;
	} B;
	int I;
	unsigned int U;

} CPS_ID_type;
#define CPS_ID	(*( CPS_ID_type *) 0xF7E0FF08u)	/* CPS Module Identification Register */

typedef volatile union
{
	struct
	{ 
		unsigned int SRPN           : 8;
		unsigned int                : 2;
		unsigned int TOS            : 1;
		unsigned int                : 1;
		unsigned int SRE            : 1;
		/* const */ unsigned int SRR            : 1;
		unsigned int CLRR           : 1;
		unsigned int SETR           : 1;
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} CPU_SBSRC_type;
#define CPU_SBSRC	(*( CPU_SBSRC_type *) 0xF7E0FFBCu)	/* Software Break Service Request Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int SRPN           : 8;
		unsigned int                : 2;
		unsigned int TOS            : 1;
		unsigned int                : 1;
		unsigned int SRE            : 1;
		/* const */ unsigned int SRR            : 1;
		unsigned int CLRR           : 1;
		unsigned int SETR           : 1;
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} CPU_SRC3_type;
#define CPU_SRC3	(*( CPU_SRC3_type *) 0xF7E0FFF0u)	/* CPU Service Request Control Register 3 */

typedef volatile union
{
	struct
	{ 
		unsigned int SRPN           : 8;
		unsigned int                : 2;
		unsigned int TOS            : 1;
		unsigned int                : 1;
		unsigned int SRE            : 1;
		/* const */ unsigned int SRR            : 1;
		unsigned int CLRR           : 1;
		unsigned int SETR           : 1;
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} CPU_SRC2_type;
#define CPU_SRC2	(*( CPU_SRC2_type *) 0xF7E0FFF4u)	/* CPU Service Request Control Register 2 */

typedef volatile union
{
	struct
	{ 
		unsigned int SRPN           : 8;
		unsigned int                : 2;
		unsigned int TOS            : 1;
		unsigned int                : 1;
		unsigned int SRE            : 1;
		/* const */ unsigned int SRR            : 1;
		unsigned int CLRR           : 1;
		unsigned int SETR           : 1;
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} CPU_SRC1_type;
#define CPU_SRC1	(*( CPU_SRC1_type *) 0xF7E0FFF8u)	/* CPU Service Request Control Register 1 */

typedef volatile union
{
	struct
	{ 
		unsigned int SRPN           : 8;
		unsigned int                : 2;
		unsigned int TOS            : 1;
		unsigned int                : 1;
		unsigned int SRE            : 1;
		/* const */ unsigned int SRR            : 1;
		unsigned int CLRR           : 1;
		unsigned int SETR           : 1;
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} CPU_SRC0_type;
#define CPU_SRC0	(*( CPU_SRC0_type *) 0xF7E0FFFCu)	/* CPU Service Request Control Register 0 */


/* EBU_LMB4 */
typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 AALIGN         : 1;	/* Address alignment */
		unsigned __sfrbit32                : 1;
		unsigned __sfrbit32 WAITRDC        : 3;	/* Read access wait states */
		unsigned __sfrbit32 ADDRC          : 2;	/* Address Cycles */
		unsigned __sfrbit32 WAITINV        : 1;	/* WAIT Level */
		unsigned __sfrbit32 WAIT           : 2;	/* Variable wait-state insertion */
		unsigned __sfrbit32 BCGEN          : 2;	/* Byte control signal timing */
		unsigned __sfrbit32 CMULT          : 3;	/* Wait cycle multiplier */
		unsigned __sfrbit32 CFG32          : 1;	/* Boot memory data width */
		unsigned __sfrbit32                : 16;
	} B;
	int I;
	unsigned int U;

} EBU_BOOTCFG_type;
#define EBU_BOOTCFG	(*( EBU_BOOTCFG_type *) 0xA0000004u)	/* External Boot Memory Configuration Word */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 DISR           : 1;	/* EBU module */
		/* const */ unsigned __sfrbit32 DISS           : 1;	/* EBU disable status bit */
		/* const */ unsigned __sfrbit32                : 30;
	} B;
	int I;
	unsigned int U;

} EBU_CLC_type;
#define EBU_CLC	(*( EBU_CLC_type *) 0xF8000000u)	/* EBU Clock Control Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned __sfrbit32 REVNUM         : 8;
		/* const */ unsigned __sfrbit32 ID32BIT        : 8;
		/* const */ unsigned __sfrbit32 MODNUM         : 16;
	} B;
	int I;
	unsigned int U;

} EBU_ID_type;
#define EBU_ID	(*( EBU_ID_type *) 0xF8000008u)	/* EBU Module Identification Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32                : 1;
		unsigned __sfrbit32 EXTRECON       : 1;	/* External reconfiguration */
		unsigned __sfrbit32 EXTSVM         : 1;	/* Perform master in */
		unsigned __sfrbit32 EXTACC         : 1;	/* External access FPI-bus */
		unsigned __sfrbit32 EXTLOCK        : 1;	/* Lock external bus */
		unsigned __sfrbit32 ARBSYNC        : 1;	/* Arbitration evaluation */
		unsigned __sfrbit32 ARBMODE        : 2;	/* Arbitration mode */
		unsigned __sfrbit32 TIMEOUTC       : 8;	/* Time-out control */
		unsigned __sfrbit32 GLOBALCS       : 8;	/* Global chip select signal */
		unsigned __sfrbit32 BUSCLK         : 2;	/* SDRAM clock generation */
		unsigned __sfrbit32 SDCMSEL        : 1;	/* SDRAM clock mode select */
		unsigned __sfrbit32 CS0FAM         : 1;	/* CS0 fills address map */
		unsigned __sfrbit32 EMUFAM         : 1;	/* CSEMU fills address map */
		unsigned __sfrbit32 BFSSS          : 1;	/* Stage synchronization */
		unsigned __sfrbit32                : 2;
	} B;
	int I;
	unsigned int U;

} EBU_CON_type;
#define EBU_CON	(*( EBU_CON_type *) 0xF8000010u)	/* EBU Global Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 FETBLEN0       : 4;	/* Fetch burst length (type 0) */
		unsigned __sfrbit32 FBBMSEL0       : 1;	/* Flash burst buffer (type 0) */
		unsigned __sfrbit32 WAITFUNC0      : 1;	/* Function of WAIT input (type 0) */
		unsigned __sfrbit32 EXTCLOCK       : 2;	/* Frequency of external clock */
		unsigned __sfrbit32 BFCMSEL        : 1;	/* Burst flash clock */
		unsigned __sfrbit32 EBSE0          : 1;	/* Early burst signal (type 0) */
		unsigned __sfrbit32 DBA0           : 1;	/* Burst Address Wrapping (type 0) */
		unsigned __sfrbit32 FDBKEN         : 1;	/* Burst flash clock feedback */
		unsigned __sfrbit32 DTALTNCY       : 4;	/* Latency cycles */
		unsigned __sfrbit32 FETBLEN1       : 4;	/* Fetch burst length (type 1) */
		unsigned __sfrbit32 FBBMSEL1       : 1;	/* Flash burst buffer (type 1) */
		unsigned __sfrbit32 WAITFUNC1      : 1;	/* Function of WAIT input (type 1) */
		unsigned __sfrbit32                : 3;
		unsigned __sfrbit32 EBSE1          : 1;	/* Early burst signal (type 1) */
		unsigned __sfrbit32 DBA1           : 1;	/* Burst Address Wrapping (type 1) */
		unsigned __sfrbit32                : 5;
	} B;
	int I;
	unsigned int U;

} EBU_BFCON_type;
#define EBU_BFCON	(*( EBU_BFCON_type *) 0xF8000020u)	/* Burst Flash Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 REFRESHC       : 6;	/* Refresh counter period */
		unsigned __sfrbit32 REFRESHR       : 3;	/* Number of refresh commands */
		/* const */ unsigned __sfrbit32 SELFREXST      : 1;	/* Self refresh exit status */
		unsigned __sfrbit32 SELFREX        : 1;	/* Self refresh exit */
		/* const */ unsigned __sfrbit32 SELFRENST      : 1;	/* Self refresh entry status */
		unsigned __sfrbit32 SELFREN        : 1;	/* Self refresh entry */
		unsigned __sfrbit32 AUTOSELFR      : 1;	/* Automatic self refresh */
		unsigned __sfrbit32                : 18;
	} B;
	int I;
	unsigned int U;

} EBU_SDRMREF0_type;
#define EBU_SDRMREF0	(*( EBU_SDRMREF0_type *) 0xF8000040u)	/* SDRAM Refresh Register 0 */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 REFRESHC       : 6;	/* Refresh counter period */
		unsigned __sfrbit32 REFRESHR       : 3;	/* Number of refresh commands */
		/* const */ unsigned __sfrbit32 SELFREXST      : 1;	/* Self refresh exit status */
		unsigned __sfrbit32 SELFREX        : 1;	/* Self refresh exit */
		/* const */ unsigned __sfrbit32 SELFRENST      : 1;	/* Self refresh entry status */
		unsigned __sfrbit32 SELFREN        : 1;	/* Self refresh entry */
		unsigned __sfrbit32 AUTOSELFR      : 1;	/* Automatic self refresh */
		unsigned __sfrbit32                : 18;
	} B;
	int I;
	unsigned int U;

} EBU_SDRMREF1_type;
#define EBU_SDRMREF1	(*( EBU_SDRMREF1_type *) 0xF8000048u)	/* SDRAM Refresh Register 0 */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 CRAS           : 4;	/* Row to precharge delay counter */
		unsigned __sfrbit32 CRFSH          : 4;	/* Refresh commands counter */
		unsigned __sfrbit32 CRSC           : 2;	/* Mode register setup time */
		unsigned __sfrbit32 CRP            : 2;	/* Row precharge time counter */
		unsigned __sfrbit32 AWIDTH         : 2;	/* Width of column address */
		unsigned __sfrbit32 CRCD           : 2;	/* Row to column delay counter */
		unsigned __sfrbit32 CRC            : 3;	/* Row cycle time counter */
		unsigned __sfrbit32 PAGEM          : 3;	/* Mask for page tag */
		unsigned __sfrbit32 BANKM          : 3;	/* Mask for bank tag */
		unsigned __sfrbit32                : 3;
		unsigned __sfrbit32 DTALTNCY       : 4;	/* Latency cycle control */
	} B;
	int I;
	unsigned int U;

} EBU_SDRMCON0_type;
#define EBU_SDRMCON0	(*( EBU_SDRMCON0_type *) 0xF8000050u)	/* SDRAM Control Register 0 */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 CRAS           : 4;	/* Row to precharge delay counter */
		unsigned __sfrbit32 CRFSH          : 4;	/* Refresh commands counter */
		unsigned __sfrbit32 CRSC           : 2;	/* Mode register setup time */
		unsigned __sfrbit32 CRP            : 2;	/* Row precharge time counter */
		unsigned __sfrbit32 AWIDTH         : 2;	/* Width of column address */
		unsigned __sfrbit32 CRCD           : 2;	/* Row to column delay counter */
		unsigned __sfrbit32 CRC            : 3;	/* Row cycle time counter */
		unsigned __sfrbit32 PAGEM          : 3;	/* Mask for page tag */
		unsigned __sfrbit32 BANKM          : 3;	/* Mask for bank tag */
		unsigned __sfrbit32                : 3;
		unsigned __sfrbit32 DTALTNCY       : 4;	/* Latency cycle control */
	} B;
	int I;
	unsigned int U;

} EBU_SDRMCON1_type;
#define EBU_SDRMCON1	(*( EBU_SDRMCON1_type *) 0xF8000058u)	/* SDRAM Control Register 1 */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 BURSTL         : 3;	/* Burst length */
		unsigned __sfrbit32 BTYP           : 1;	/* Burst type */
		unsigned __sfrbit32 CASLAT         : 3;	/* CAS latency */
		unsigned __sfrbit32 OPMODE         : 7;	/* Operation Mode */
		unsigned __sfrbit32                : 18;
	} B;
	int I;
	unsigned int U;

} EBU_SDRMOD0_type;
#define EBU_SDRMOD0	(*( EBU_SDRMOD0_type *) 0xF8000060u)	/* SDRAM Mode Register 0 */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 BURSTL         : 3;	/* Burst length */
		unsigned __sfrbit32 BTYP           : 1;	/* Burst type */
		unsigned __sfrbit32 CASLAT         : 3;	/* CAS latency */
		unsigned __sfrbit32 OPMODE         : 7;	/* Operation Mode */
		unsigned __sfrbit32                : 18;
	} B;
	int I;
	unsigned int U;

} EBU_SDRMOD1_type;
#define EBU_SDRMOD1	(*( EBU_SDRMOD1_type *) 0xF8000068u)	/* SDRAM Mode Register 1 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned __sfrbit32 REFERR         : 1;
		/* const */ unsigned __sfrbit32 SDRMBUSY       : 1;
		/* const */ unsigned __sfrbit32                : 30;
	} B;
	int I;
	unsigned int U;

} EBU_SDRSTAT0_type;
#define EBU_SDRSTAT0	(*( EBU_SDRSTAT0_type *) 0xF8000070u)	/* EBU_LMB SDRAM Status Register 0 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned __sfrbit32 REFERR         : 1;
		/* const */ unsigned __sfrbit32 SDRMBUSY       : 1;
		/* const */ unsigned __sfrbit32                : 30;
	} B;
	int I;
	unsigned int U;

} EBU_SDRSTAT1_type;
#define EBU_SDRSTAT1	(*( EBU_SDRSTAT1_type *) 0xF8000078u)	/* EBU_LMB SDRAM Status Register 1 */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 REGENAB        : 1;	/* Memory Region */
		unsigned __sfrbit32 ALTENAB        : 1;	/* Alternate Segment Comparison */
		unsigned __sfrbit32                : 2;
		unsigned __sfrbit32 MASK           : 4;	/* Address Mask */
		unsigned __sfrbit32 ALTSEG         : 4;	/* Alternate Segment */
		unsigned __sfrbit32 BASE           : 20;	/* Base Address */
	} B;
	int I;
	unsigned int U;

} EBU_ADDRSEL0_type;
#define EBU_ADDRSEL0	(*( EBU_ADDRSEL0_type *) 0xF8000080u)	/* Address Select Register 0 */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 REGENAB        : 1;	/* Memory Region */
		unsigned __sfrbit32 ALTENAB        : 1;	/* Alternate Segment Comparison */
		unsigned __sfrbit32                : 2;
		unsigned __sfrbit32 MASK           : 4;	/* Address Mask */
		unsigned __sfrbit32 ALTSEG         : 4;	/* Alternate Segment */
		unsigned __sfrbit32 BASE           : 20;	/* Base Address */
	} B;
	int I;
	unsigned int U;

} EBU_ADDRSEL1_type;
#define EBU_ADDRSEL1	(*( EBU_ADDRSEL1_type *) 0xF8000088u)	/* Address Select Register 1 */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 REGENAB        : 1;	/* Memory Region */
		unsigned __sfrbit32 ALTENAB        : 1;	/* Alternate Segment Comparison */
		unsigned __sfrbit32                : 2;
		unsigned __sfrbit32 MASK           : 4;	/* Address Mask */
		unsigned __sfrbit32 ALTSEG         : 4;	/* Alternate Segment */
		unsigned __sfrbit32 BASE           : 20;	/* Base Address */
	} B;
	int I;
	unsigned int U;

} EBU_ADDRSEL2_type;
#define EBU_ADDRSEL2	(*( EBU_ADDRSEL2_type *) 0xF8000090u)	/* Address Select Register 2 */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 REGENAB        : 1;	/* Memory Region */
		unsigned __sfrbit32 ALTENAB        : 1;	/* Alternate Segment Comparison */
		unsigned __sfrbit32                : 2;
		unsigned __sfrbit32 MASK           : 4;	/* Address Mask */
		unsigned __sfrbit32 ALTSEG         : 4;	/* Alternate Segment */
		unsigned __sfrbit32 BASE           : 20;	/* Base Address */
	} B;
	int I;
	unsigned int U;

} EBU_ADDRSEL3_type;
#define EBU_ADDRSEL3	(*( EBU_ADDRSEL3_type *) 0xF8000098u)	/* Address Select Register 3 */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 MULTMAP        : 7;	/* Multiplier map */
		unsigned __sfrbit32                : 1;
		unsigned __sfrbit32 WEAKPREFETCH   : 1;	/* Weak prefetch */
		unsigned __sfrbit32 AALIGN         : 1;	/* Address alignment */
		unsigned __sfrbit32 CTYPE          : 2;	/* Cycle type */
		unsigned __sfrbit32                : 1;
		unsigned __sfrbit32 CMULT          : 3;	/* Cycle multiplier */
		unsigned __sfrbit32                : 1;
		unsigned __sfrbit32 DLOAD          : 1;	/* Data upload */
		unsigned __sfrbit32 PREFETCH       : 1;	/* Prefetch mechanism */
		unsigned __sfrbit32 WAITINV        : 1;	/* Reversed polarity at WAIT */
		unsigned __sfrbit32 BCGEN          : 2;	/* Signal timing mode */
		unsigned __sfrbit32 PORTW          : 2;	/* Port width */
		unsigned __sfrbit32 WAIT           : 2;	/* External wait state */
		unsigned __sfrbit32 XCMDDELAY      : 2;	/* External command delay */
		unsigned __sfrbit32 AGEN           : 3;	/* Address generation */
		unsigned __sfrbit32 WRITE          : 1;	/* Write protection */
	} B;
	int I;
	unsigned int U;

} EBU_BUSCON0_type;
#define EBU_BUSCON0	(*( EBU_BUSCON0_type *) 0xF80000C0u)	/* Bus Configuration Register 0 */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 MULTMAP        : 7;	/* Multiplier map */
		unsigned __sfrbit32                : 1;
		unsigned __sfrbit32 WEAKPREFETCH   : 1;	/* Weak prefetch */
		unsigned __sfrbit32 AALIGN         : 1;	/* Address alignment */
		unsigned __sfrbit32 CTYPE          : 2;	/* Cycle type */
		unsigned __sfrbit32                : 1;
		unsigned __sfrbit32 CMULT          : 3;	/* Cycle multiplier */
		unsigned __sfrbit32                : 1;
		unsigned __sfrbit32 DLOAD          : 1;	/* Data upload */
		unsigned __sfrbit32 PREFETCH       : 1;	/* Prefetch mechanism */
		unsigned __sfrbit32 WAITINV        : 1;	/* Reversed polarity at WAIT */
		unsigned __sfrbit32 BCGEN          : 2;	/* Signal timing mode */
		unsigned __sfrbit32 PORTW          : 2;	/* Port width */
		unsigned __sfrbit32 WAIT           : 2;	/* External wait state */
		unsigned __sfrbit32 XCMDDELAY      : 2;	/* External command delay */
		unsigned __sfrbit32 AGEN           : 3;	/* Address generation */
		unsigned __sfrbit32 WRITE          : 1;	/* Write protection */
	} B;
	int I;
	unsigned int U;

} EBU_BUSCON1_type;
#define EBU_BUSCON1	(*( EBU_BUSCON1_type *) 0xF80000C8u)	/* Bus Configuration Register 1 */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 MULTMAP        : 7;	/* Multiplier map */
		unsigned __sfrbit32                : 1;
		unsigned __sfrbit32 WEAKPREFETCH   : 1;	/* Weak prefetch */
		unsigned __sfrbit32 AALIGN         : 1;	/* Address alignment */
		unsigned __sfrbit32 CTYPE          : 2;	/* Cycle type */
		unsigned __sfrbit32                : 1;
		unsigned __sfrbit32 CMULT          : 3;	/* Cycle multiplier */
		unsigned __sfrbit32                : 1;
		unsigned __sfrbit32 DLOAD          : 1;	/* Data upload */
		unsigned __sfrbit32 PREFETCH       : 1;	/* Prefetch mechanism */
		unsigned __sfrbit32 WAITINV        : 1;	/* Reversed polarity at WAIT */
		unsigned __sfrbit32 BCGEN          : 2;	/* Signal timing mode */
		unsigned __sfrbit32 PORTW          : 2;	/* Port width */
		unsigned __sfrbit32 WAIT           : 2;	/* External wait state */
		unsigned __sfrbit32 XCMDDELAY      : 2;	/* External command delay */
		unsigned __sfrbit32 AGEN           : 3;	/* Address generation */
		unsigned __sfrbit32 WRITE          : 1;	/* Write protection */
	} B;
	int I;
	unsigned int U;

} EBU_BUSCON2_type;
#define EBU_BUSCON2	(*( EBU_BUSCON2_type *) 0xF80000D0u)	/* Bus Configuration Register 2 */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 MULTMAP        : 7;	/* Multiplier map */
		unsigned __sfrbit32                : 1;
		unsigned __sfrbit32 WEAKPREFETCH   : 1;	/* Weak prefetch */
		unsigned __sfrbit32 AALIGN         : 1;	/* Address alignment */
		unsigned __sfrbit32 CTYPE          : 2;	/* Cycle type */
		unsigned __sfrbit32                : 1;
		unsigned __sfrbit32 CMULT          : 3;	/* Cycle multiplier */
		unsigned __sfrbit32                : 1;
		unsigned __sfrbit32 DLOAD          : 1;	/* Data upload */
		unsigned __sfrbit32 PREFETCH       : 1;	/* Prefetch mechanism */
		unsigned __sfrbit32 WAITINV        : 1;	/* Reversed polarity at WAIT */
		unsigned __sfrbit32 BCGEN          : 2;	/* Signal timing mode */
		unsigned __sfrbit32 PORTW          : 2;	/* Port width */
		unsigned __sfrbit32 WAIT           : 2;	/* External wait state */
		unsigned __sfrbit32 XCMDDELAY      : 2;	/* External command delay */
		unsigned __sfrbit32 AGEN           : 3;	/* Address generation */
		unsigned __sfrbit32 WRITE          : 1;	/* Write protection */
	} B;
	int I;
	unsigned int U;

} EBU_BUSCON3_type;
#define EBU_BUSCON3	(*( EBU_BUSCON3_type *) 0xF80000D8u)	/* Bus Configuration Register 3 */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 DTACS          : 4;	/* Between different regions */
		unsigned __sfrbit32 DTARDWR        : 4;	/* Between read and write accesses */
		unsigned __sfrbit32 WRRECOVC       : 3;	/* After write accesses */
		unsigned __sfrbit32 RDRECOVC       : 3;	/* After read accesses */
		unsigned __sfrbit32 DATAC          : 2;	/* Write accesses */
		unsigned __sfrbit32 BURSTC         : 3;	/* During burst accesses */
		unsigned __sfrbit32 WAITWRC        : 3;	/* Programmed for wait accesses */
		unsigned __sfrbit32 WAITRDC        : 3;	/* Programmed for read accesses */
		unsigned __sfrbit32 CMDDELAY       : 3;	/* Programmed command */
		unsigned __sfrbit32 AHOLDC         : 2;	/* Multiplexed accesses */
		unsigned __sfrbit32 ADDRC          : 2;	/* Address Cycles */
	} B;
	int I;
	unsigned int U;

} EBU_BUSAP0_type;
#define EBU_BUSAP0	(*( EBU_BUSAP0_type *) 0xF8000100u)	/* Bus Access Parameter Register 0 */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 DTACS          : 4;	/* Between different regions */
		unsigned __sfrbit32 DTARDWR        : 4;	/* Between read and write accesses */
		unsigned __sfrbit32 WRRECOVC       : 3;	/* After write accesses */
		unsigned __sfrbit32 RDRECOVC       : 3;	/* After read accesses */
		unsigned __sfrbit32 DATAC          : 2;	/* Write accesses */
		unsigned __sfrbit32 BURSTC         : 3;	/* During burst accesses */
		unsigned __sfrbit32 WAITWRC        : 3;	/* Programmed for wait accesses */
		unsigned __sfrbit32 WAITRDC        : 3;	/* Programmed for read accesses */
		unsigned __sfrbit32 CMDDELAY       : 3;	/* Programmed command */
		unsigned __sfrbit32 AHOLDC         : 2;	/* Multiplexed accesses */
		unsigned __sfrbit32 ADDRC          : 2;	/* Address Cycles */
	} B;
	int I;
	unsigned int U;

} EBU_BUSAP1_type;
#define EBU_BUSAP1	(*( EBU_BUSAP1_type *) 0xF8000108u)	/* Bus Access Parameter Register 1 */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 DTACS          : 4;	/* Between different regions */
		unsigned __sfrbit32 DTARDWR        : 4;	/* Between read and write accesses */
		unsigned __sfrbit32 WRRECOVC       : 3;	/* After write accesses */
		unsigned __sfrbit32 RDRECOVC       : 3;	/* After read accesses */
		unsigned __sfrbit32 DATAC          : 2;	/* Write accesses */
		unsigned __sfrbit32 BURSTC         : 3;	/* During burst accesses */
		unsigned __sfrbit32 WAITWRC        : 3;	/* Programmed for wait accesses */
		unsigned __sfrbit32 WAITRDC        : 3;	/* Programmed for read accesses */
		unsigned __sfrbit32 CMDDELAY       : 3;	/* Programmed command */
		unsigned __sfrbit32 AHOLDC         : 2;	/* Multiplexed accesses */
		unsigned __sfrbit32 ADDRC          : 2;	/* Address Cycles */
	} B;
	int I;
	unsigned int U;

} EBU_BUSAP2_type;
#define EBU_BUSAP2	(*( EBU_BUSAP2_type *) 0xF8000110u)	/* Bus Access Parameter Register 2 */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 DTACS          : 4;	/* Between different regions */
		unsigned __sfrbit32 DTARDWR        : 4;	/* Between read and write accesses */
		unsigned __sfrbit32 WRRECOVC       : 3;	/* After write accesses */
		unsigned __sfrbit32 RDRECOVC       : 3;	/* After read accesses */
		unsigned __sfrbit32 DATAC          : 2;	/* Write accesses */
		unsigned __sfrbit32 BURSTC         : 3;	/* During burst accesses */
		unsigned __sfrbit32 WAITWRC        : 3;	/* Programmed for wait accesses */
		unsigned __sfrbit32 WAITRDC        : 3;	/* Programmed for read accesses */
		unsigned __sfrbit32 CMDDELAY       : 3;	/* Programmed command */
		unsigned __sfrbit32 AHOLDC         : 2;	/* Multiplexed accesses */
		unsigned __sfrbit32 ADDRC          : 2;	/* Address Cycles */
	} B;
	int I;
	unsigned int U;

} EBU_BUSAP3_type;
#define EBU_BUSAP3	(*( EBU_BUSAP3_type *) 0xF8000118u)	/* Bus Access Parameter Register 3 */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 REGENAB        : 1;	/* Memory region */
		unsigned __sfrbit32 ALTENAB        : 1;	/* Alternate segment comparison */
		unsigned __sfrbit32                : 2;
		unsigned __sfrbit32 MASK           : 4;	/* Address mask */
		unsigned __sfrbit32 ALTSEG         : 4;	/* Alternate segment */
		unsigned __sfrbit32 BASE           : 20;	/* Base address */
	} B;
	int I;
	unsigned int U;

} EBU_EMUAS_type;
#define EBU_EMUAS	(*( EBU_EMUAS_type *) 0xF8000160u)	/* Emulator Address Select Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 MULTMAP        : 7;	/* Multiplier map */
		unsigned __sfrbit32                : 1;
		unsigned __sfrbit32 WEAKPREFETCH   : 1;	/* Weak prefetch */
		unsigned __sfrbit32 AALIGN         : 1;	/* Address alignment */
		unsigned __sfrbit32 CTYPE          : 2;	/* Cycle type */
		unsigned __sfrbit32                : 1;
		unsigned __sfrbit32 CMULT          : 3;	/* Cycle multiplier */
		unsigned __sfrbit32                : 1;
		unsigned __sfrbit32 DLOAD          : 1;	/* Data upload */
		unsigned __sfrbit32 PREFETCH       : 1;	/* Prefetch mechanism */
		unsigned __sfrbit32 WAITINV        : 1;	/* Reversed polarity at WAIT */
		unsigned __sfrbit32 BCGEN          : 2;	/* Signal timing mode */
		unsigned __sfrbit32 PORTW          : 2;	/* Port width */
		unsigned __sfrbit32 WAIT           : 2;	/* External wait state */
		unsigned __sfrbit32 XCMDDELAY      : 2;	/* External command delay */
		unsigned __sfrbit32 AGEN           : 3;	/* Address generation */
		unsigned __sfrbit32 WRITE          : 1;	/* Write protection */
	} B;
	int I;
	unsigned int U;

} EBU_EMUBC_type;
#define EBU_EMUBC	(*( EBU_EMUBC_type *) 0xF8000168u)	/* Emulator Bus Configuration Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 DTACS          : 4;	/* Between different regions */
		unsigned __sfrbit32 DTARDWR        : 4;	/* Between read and write accesses */
		unsigned __sfrbit32 WRRECOVC       : 3;	/* After write accesses */
		unsigned __sfrbit32 RDRECOVC       : 3;	/* After read accesses */
		unsigned __sfrbit32 DATAC          : 2;	/* Write accesses */
		unsigned __sfrbit32 BURSTC         : 3;	/* During burst accesses */
		unsigned __sfrbit32 WAITWRC        : 3;	/* Programmed for wait accesses */
		unsigned __sfrbit32 WAITRDC        : 3;	/* Programmed for read accesses */
		unsigned __sfrbit32 CMDDELAY       : 3;	/* Programmed command */
		unsigned __sfrbit32 AHOLDC         : 2;	/* Multiplexed accesses */
		unsigned __sfrbit32 ADDRC          : 2;	/* Address Cycles */
	} B;
	int I;
	unsigned int U;

} EBU_EMUBAP_type;
#define EBU_EMUBAP	(*( EBU_EMUBAP_type *) 0xF8000170u)	/* Emulator Bus Access Parameter Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 OVERLAY        : 8;	/* Overlay chip select */
		unsigned __sfrbit32                : 24;
	} B;
	int I;
	unsigned int U;

} EBU_EMUOVL_type;
#define EBU_EMUOVL	(*( EBU_EMUOVL_type *) 0xF8000178u)	/* Emulator Overlay Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 DIP            : 1;
		unsigned __sfrbit32                : 31;
	} B;
	int I;
	unsigned int U;

} EBU_USERCON_type;
#define EBU_USERCON	(*( EBU_USERCON_type *) 0xF8000190u)	/* Test/Configuration Register */


/* DMU */
typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int MOD_REV        : 8;
		/* const */ unsigned int MOD_TYPE       : 8;
		/* const */ unsigned int MOD_NUMBER     : 16;
	} B;
	int I;
	unsigned int U;

} DMU_ID_type;
#define DMU_ID	(*( DMU_ID_type *) 0xF8000408u)	/* DMU Module Identification Register */

typedef volatile union
{
	struct
	{ 
		unsigned int FADDR          : 14;
		/* const */ unsigned int VA             : 1;
		/* const */ unsigned int                : 17;
	} B;
	int I;
	unsigned int U;

} DMU_SRAR0_type;
#define DMU_SRAR0	(*( DMU_SRAR0_type *) 0xF8000410u)	/* SRAM Redundancy Address */

typedef volatile union
{
	struct
	{ 
		unsigned int FADDR          : 14;
		/* const */ unsigned int VA             : 1;
		/* const */ unsigned int                : 17;
	} B;
	int I;
	unsigned int U;

} DMU_SRAR1_type;
#define DMU_SRAR1	(*( DMU_SRAR1_type *) 0xF8000418u)	/* SRAM Redundancy Address */

typedef volatile union
{
	struct
	{ 
		unsigned int FADDR          : 14;
		/* const */ unsigned int VA             : 1;
		/* const */ unsigned int                : 17;
	} B;
	int I;
	unsigned int U;

} DMU_SRAR2_type;
#define DMU_SRAR2	(*( DMU_SRAR2_type *) 0xF8000420u)	/* SRAM Redundancy Address */

typedef volatile union
{
	struct
	{ 
		unsigned int FADDR          : 14;
		/* const */ unsigned int VA             : 1;
		/* const */ unsigned int                : 17;
	} B;
	int I;
	unsigned int U;

} DMU_SRAR3_type;
#define DMU_SRAR3	(*( DMU_SRAR3_type *) 0xF8000428u)	/* SRAM Redundancy Address */

typedef volatile union
{
	struct
	{ 
		unsigned int FADDR          : 14;
		/* const */ unsigned int VA             : 1;
		/* const */ unsigned int                : 17;
	} B;
	int I;
	unsigned int U;

} DMU_SRAR4_type;
#define DMU_SRAR4	(*( DMU_SRAR4_type *) 0xF8000430u)	/* SRAM Redundancy Address */

typedef volatile union
{
	struct
	{ 
		unsigned int FADDR          : 14;
		/* const */ unsigned int VA             : 1;
		/* const */ unsigned int                : 17;
	} B;
	int I;
	unsigned int U;

} DMU_SRAR5_type;
#define DMU_SRAR5	(*( DMU_SRAR5_type *) 0xF8000438u)	/* SRAM Redundancy Address */

typedef volatile union
{
	struct
	{ 
		unsigned int FADDR          : 14;
		/* const */ unsigned int VA             : 1;
		/* const */ unsigned int                : 17;
	} B;
	int I;
	unsigned int U;

} DMU_SRAR6_type;
#define DMU_SRAR6	(*( DMU_SRAR6_type *) 0xF8000440u)	/* SRAM Redundancy Address */

typedef volatile union
{
	struct
	{ 
		unsigned int FADDR          : 14;
		/* const */ unsigned int VA             : 1;
		/* const */ unsigned int                : 17;
	} B;
	int I;
	unsigned int U;

} DMU_SRAR7_type;
#define DMU_SRAR7	(*( DMU_SRAR7_type *) 0xF8000448u)	/* SRAM Redundancy Address */

typedef volatile union
{
	struct
	{ 
		unsigned int FADDR          : 14;
		/* const */ unsigned int VA             : 1;
		/* const */ unsigned int                : 17;
	} B;
	int I;
	unsigned int U;

} DMU_SRAR8_type;
#define DMU_SRAR8	(*( DMU_SRAR8_type *) 0xF8000450u)	/* SRAM Redundancy Address */

typedef volatile union
{
	struct
	{ 
		unsigned int FADDR          : 14;
		/* const */ unsigned int VA             : 1;
		/* const */ unsigned int                : 17;
	} B;
	int I;
	unsigned int U;

} DMU_SRAR9_type;
#define DMU_SRAR9	(*( DMU_SRAR9_type *) 0xF8000458u)	/* SRAM Redundancy Address */

typedef volatile union
{
	struct
	{ 
		unsigned int FADDR          : 14;
		/* const */ unsigned int VA             : 1;
		/* const */ unsigned int                : 17;
	} B;
	int I;
	unsigned int U;

} DMU_SRAR10_type;
#define DMU_SRAR10	(*( DMU_SRAR10_type *) 0xF8000460u)	/* SRAM Redundancy Address */

typedef volatile union
{
	struct
	{ 
		unsigned int FADDR          : 14;
		/* const */ unsigned int VA             : 1;
		/* const */ unsigned int                : 17;
	} B;
	int I;
	unsigned int U;

} DMU_SRAR11_type;
#define DMU_SRAR11	(*( DMU_SRAR11_type *) 0xF8000468u)	/* SRAM Redundancy Address */

typedef volatile union
{
	struct
	{ 
		unsigned int FADDR          : 14;
		/* const */ unsigned int VA             : 1;
		/* const */ unsigned int                : 17;
	} B;
	int I;
	unsigned int U;

} DMU_SRAR12_type;
#define DMU_SRAR12	(*( DMU_SRAR12_type *) 0xF8000470u)	/* SRAM Redundancy Address */

typedef volatile union
{
	struct
	{ 
		unsigned int FADDR          : 14;
		/* const */ unsigned int VA             : 1;
		/* const */ unsigned int                : 17;
	} B;
	int I;
	unsigned int U;

} DMU_SRAR13_type;
#define DMU_SRAR13	(*( DMU_SRAR13_type *) 0xF8000478u)	/* SRAM Redundancy Address */

typedef volatile union
{
	struct
	{ 
		unsigned int FADDR          : 14;
		/* const */ unsigned int VA             : 1;
		/* const */ unsigned int                : 17;
	} B;
	int I;
	unsigned int U;

} DMU_SRAR14_type;
#define DMU_SRAR14	(*( DMU_SRAR14_type *) 0xF8000480u)	/* SRAM Redundancy Address */

typedef volatile union
{
	struct
	{ 
		unsigned int FADDR          : 14;
		/* const */ unsigned int VA             : 1;
		/* const */ unsigned int                : 17;
	} B;
	int I;
	unsigned int U;

} DMU_SRAR15_type;
#define DMU_SRAR15	(*( DMU_SRAR15_type *) 0xF8000488u)	/* SRAM Redundancy Address */

typedef volatile union
{
	struct
	{ 
		unsigned int CA0EN          : 1;
		unsigned int CA1EN          : 1;
		unsigned int CA2EN          : 1;
		unsigned int                : 13;
		unsigned int BCCH           : 4;
		unsigned int                : 12;
	} B;
	int I;
	unsigned int U;

} DMU_CSCACTL_type;
#define DMU_CSCACTL	(*( DMU_CSCACTL_type *) 0xF8000490u)	/* CPU SRAM Configuration Bit Chain Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int DICH           : 16;
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} DMU_CSCADIN_type;
#define DMU_CSCADIN	(*( DMU_CSCADIN_type *) 0xF8000498u)	/* CPU SRAM Configuration Bit Chain Data In Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int DOCH           : 16;
		/* const */ unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} DMU_CSCADOUT_type;
#define DMU_CSCADOUT	(*( DMU_CSCADOUT_type *) 0xF80004A0u)	/* CPU SRAM Configuration Bit Chain Data Out Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int SETADDR        : 32;
	} B;
	int I;
	unsigned int U;

} DMU_SETA_type;
#define DMU_SETA	(*( DMU_SETA_type *) 0xF80004A8u)	/* Soft-Error Trapped Address */


/* DMI */
typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int MOD_REV        : 8;
		/* const */ unsigned int MOD_TYPE       : 8;
		/* const */ unsigned int MOD_NUMBER     : 16;
	} B;
	int I;
	unsigned int U;

} DMI_ID_type;
#define DMI_ID	(*( DMI_ID_type *) 0xF87FFC08u)	/* DMI Module Identification Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int DCSZ           : 2;
		/* const */ unsigned int                : 2;
		/* const */ unsigned int DMEMSZ         : 3;
		/* const */ unsigned int                : 25;
	} B;
	int I;
	unsigned int U;

} DMI_CON_type;
#define DMI_CON	(*( DMI_CON_type *) 0xF87FFC10u)	/* DMI Control Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int LRESTF         : 1;
		/* const */ unsigned int SRESTF         : 1;
		/* const */ unsigned int LFESTF         : 1;
		/* const */ unsigned int SFESTF         : 1;
		/* const */ unsigned int LCESTF         : 1;
		/* const */ unsigned int SCESTF         : 1;
		/* const */ unsigned int CRLESTF        : 1;
		/* const */ unsigned int CRSESTF        : 1;
		/* const */ unsigned int CWLESTF        : 1;
		/* const */ unsigned int CWSESTF        : 1;
		/* const */ unsigned int CFESTF         : 1;
		/* const */ unsigned int CMESTF         : 1;
		/* const */ unsigned int                : 20;
	} B;
	int I;
	unsigned int U;

} DMI_STR_type;
#define DMI_STR	(*( DMI_STR_type *) 0xF87FFC18u)	/* DMI Synchronous Trap Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int LREATF         : 1;
		/* const */ unsigned int SREATF         : 1;
		/* const */ unsigned int LFEATF         : 1;
		/* const */ unsigned int SFEATF         : 1;
		/* const */ unsigned int LCEATF         : 1;
		/* const */ unsigned int SCEATF         : 1;
		/* const */ unsigned int CRLEATF        : 1;
		/* const */ unsigned int CRSEATF        : 1;
		/* const */ unsigned int CWLEATF        : 1;
		/* const */ unsigned int CWSEATF        : 1;
		/* const */ unsigned int CFEATF         : 1;
		/* const */ unsigned int CMEATF         : 1;
		/* const */ unsigned int                : 20;
	} B;
	int I;
	unsigned int U;

} DMI_ATR_type;
#define DMI_ATR	(*( DMI_ATR_type *) 0xF87FFC20u)	/* DMI Asynchronous Trap Register */

typedef volatile union
{
	struct
	{ 
		unsigned int DC2SPR         : 1;
		unsigned int                : 31;
	} B;
	int I;
	unsigned int U;

} DMI_CON1_type;
#define DMI_CON1	(*( DMI_CON1_type *) 0xF87FFC28u)	/* DMI Control Register 1 */

#define DMU_CON	DMI_CON

/* PMI */
typedef volatile union
{
	struct
	{ 
		/* const */ unsigned __sfrbit32 MOD_REV        : 8;
		/* const */ unsigned __sfrbit32 MOD_TYPE       : 8;
		/* const */ unsigned __sfrbit32 MOD_NUMBER     : 16;
	} B;
	int I;
	unsigned int U;

} PMI_ID_type;
#define PMI_ID	(*( PMI_ID_type *) 0xF87FFD08u)	/* PMI Module Identification Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32                : 1;
		unsigned __sfrbit32 CCBYP          : 1;	/* Instruction Cache Bypass */
		unsigned __sfrbit32                : 30;
	} B;
	int I;
	unsigned int U;

} PMI_CON0_type;
#define PMI_CON0	(*( PMI_CON0_type *) 0xF87FFD10u)	/* PMI Control Register 0 */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 CCINV          : 1;
		unsigned __sfrbit32                : 31;
	} B;
	int I;
	unsigned int U;

} PMI_CON1_type;
#define PMI_CON1	(*( PMI_CON1_type *) 0xF87FFD14u)	/* PMI Control Register 1 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned __sfrbit32 PCSZ           : 2;	/* 16KB Instruction cache */
		/* const */ unsigned __sfrbit32                : 2;
		/* const */ unsigned __sfrbit32 PMEMSZ         : 3;	/* 48KB Program memory */
		/* const */ unsigned __sfrbit32                : 25;
	} B;
	int I;
	unsigned int U;

} PMI_CON2_type;
#define PMI_CON2	(*( PMI_CON2_type *) 0xF87FFD18u)	/* PMI Control Register 2 */


/* LBCU LL */
typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int REV            : 8;
		/* const */ unsigned int MOD_32B        : 8;
		/* const */ unsigned int MOD            : 16;
	} B;
	int I;
	unsigned int U;

} LBCU_ID_type;
#define LBCU_ID	(*( LBCU_ID_type *) 0xF87FFE08u)	/* LBCU Module Identification Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 LEC            : 1;
		/* const */ unsigned __sfrbit32                : 3;
		/* const */ unsigned __sfrbit32 USER_ATT       : 8;
		/* const */ unsigned __sfrbit32                : 2;
		/* const */ unsigned __sfrbit32 NOS            : 1;
		/* const */ unsigned __sfrbit32 LOC            : 1;
		/* const */ unsigned __sfrbit32 ACK            : 3;
		/* const */ unsigned __sfrbit32 UIS            : 1;
		/* const */ unsigned __sfrbit32                : 1;
		/* const */ unsigned __sfrbit32 SVM            : 1;
		/* const */ unsigned __sfrbit32 WR             : 1;
		/* const */ unsigned __sfrbit32 RD             : 1;
		/* const */ unsigned __sfrbit32 TAG            : 3;
		/* const */ unsigned __sfrbit32                : 1;
		/* const */ unsigned __sfrbit32 OPC            : 4;
	} B;
	int I;
	unsigned int U;

} LBCU_LEATT_type;
#define LBCU_LEATT	(*( LBCU_LEATT_type *) 0xF87FFE20u)	/* LMB Error Attributes Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned __sfrbit32 LEADDR         : 32;
	} B;
	int I;
	unsigned int U;

} LBCU_LEADDR_type;
#define LBCU_LEADDR	(*( LBCU_LEADDR_type *) 0xF87FFE24u)	/* LMB Error Addres Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned __sfrbit32 LEDAT          : 32;
	} B;
	int I;
	unsigned int U;

} LBCU_LEDATL_type;
#define LBCU_LEDATL	(*( LBCU_LEDATL_type *) 0xF87FFE28u)	/* LMB Error Data Register (32 LSB's) */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned __sfrbit32 LEDAT          : 32;
	} B;
	int I;
	unsigned int U;

} LBCU_LEDATH_type;
#define LBCU_LEDATH	(*( LBCU_LEDATH_type *) 0xF87FFE2Cu)	/* LMB Error Data Register (32 MSB's) */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 SRPN           : 8;
		unsigned __sfrbit32                : 2;
		/* const */ unsigned __sfrbit32 TOS            : 1;
		unsigned __sfrbit32                : 1;
		unsigned __sfrbit32 SRE            : 1;
		/* const */ unsigned __sfrbit32 SRR            : 1;
		unsigned __sfrbit32 CLRR           : 1;
		unsigned __sfrbit32 SETR           : 1;
		unsigned __sfrbit32                : 16;
	} B;
	int I;
	unsigned int U;

} LBCU_SRC_type;
#define LBCU_SRC	(*( LBCU_SRC_type *) 0xF87FFEFCu)	/* PBCU Service Request Control Register */


/* LFI */
typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int REV            : 8;
		/* const */ unsigned int MOD_32B        : 8;
		/* const */ unsigned int MOD            : 16;
	} B;
	int I;
	unsigned int U;

} LFI_ID_type;
#define LFI_ID	(*( LFI_ID_type *) 0xF87FFF08u)	/* LFI Module Identification Register */

typedef volatile union
{
	struct
	{ 
		unsigned int SPT            : 1;
		/* const */ unsigned int EBL            : 1;
		/* const */ unsigned int EBF            : 1;
		/* const */ unsigned int                : 1;
		/* const */ unsigned int LTAG           : 3;
		/* const */ unsigned int                : 1;
		/* const */ unsigned int FTAG           : 4;
		/* const */ unsigned int                : 20;
	} B;
	int I;
	unsigned int U;

} LFI_CON_type;
#define LFI_CON	(*( LFI_CON_type *) 0xF87FFF10u)	/* LFI Configuration Register */

#endif /*_REGTC1130_H*/
