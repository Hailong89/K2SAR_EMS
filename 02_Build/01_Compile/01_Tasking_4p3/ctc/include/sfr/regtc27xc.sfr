/**************************************************************************
**
** Version: @(#)regtc27xc.xml	1.1 13/12/03
** Generated by @(#)XmlSfrfilePrinter.java	1.48 13/06/07
** 
** This file contains all SFR and BIT names and on-chip register definitions
** It is based on the following document(s):
** - mira/tc27xC_um_v1.5_SFR.xml (UM_V1.5)
** 
** Copyright 2002-2014 Altium BV
**
**************************************************************************/
#ifndef _REGTC27XC_H
#define _REGTC27XC_H

/* Core Base */
#define core_base	0xf881	/* The base address off the memory for the CSFR's */
#define core_base_0	0xf881	/* The base address off the memory for the CSFR's CPU0 */
#define core_base_1	0xf883	/* The base address off the memory for the CSFR's CPU1 */
#define core_base_2	0xf885	/* The base address off the memory for the CSFR's CPU2 */

/* Core Special Function Registers (CSFR). Macros, such as TASK_ASI, that expand to a 16-bit number do not directly represent a memory address.
   They are intended to be used with the intrinsic functions __mfcr(...) and __mtcr(...). */
#define TASK_ASI	0x8004	/* CPUn Task Address Space Identifier Register */
#define PMA0	0x8100	/* Data Access CacheabilityRegister */
#define PMA1	0x8104	/* Code Access CacheabilityRegister */
#define PMA2	0x8108	/* Peripheral Space Identifier register */
#define SMACON	0x900c	/* SIST Mode Access Control Register */
#define DIEAR	0x9020	/* Data Integrity Error Address Register */
#define DIETR	0x9024	/* Data Integrity Error Trap Register */
#define PCON1	0x9204	/* Program Control 1 */
#define PCON2	0x9208	/* Program Control 2 */
#define PCON0	0x920c	/* Program Control 0 */
#define PSTR	0x9200	/* Program Synchronous Trap Register */
#define DCON0	0x9040	/* Data Memory Control Register */
#define DCON2	0x9000	/* Data Control Register 2 */
#define DSTR	0x9010	/* Data Synchronous Trap Register */
#define DATR	0x9018	/* Data Asynchronous Trap Register */
#define DEADD	0x901c	/* Data Error Address Register */
#define PIEAR	0x9210	/* Program Integrity Error Address Register */
#define PIETR	0x9214	/* Program Integrity Error Trap Register */
#define COMPAT	0x9400	/* Compatibility Control Register */
#define FPU_TRAP_CON	0xa000	/* CPUn Trap Control Register */
#define FPU_TRAP_PC	0xa004	/* CPUn Trapping Instruction Program Counter Register */
#define FPU_TRAP_OPC	0xa008	/* CPUn Trapping Instruction Opcode Register */
#define FPU_TRAP_SRC1	0xa010	/* CPUn Trapping Instruction Operand Register */
#define FPU_TRAP_SRC2	0xa014	/* CPUn Trapping Instruction Operand Register */
#define FPU_TRAP_SRC3	0xa018	/* Trapping Instruction Operand Register */
#define DPR0_L	0xc000	/* CPUn Data Protection Range 0, Lower Bound Register */
#define DPR1_L	0xc008	/* CPUn Data Protection Range 1, Lower Bound Register */
#define DPR2_L	0xc010	/* CPUn Data Protection Range 2, Lower Bound Register */
#define DPR3_L	0xc018	/* CPUn Data Protection Range 3, Lower Bound Register */
#define DPR4_L	0xc020	/* CPUn Data Protection Range 4, Lower Bound Register */
#define DPR5_L	0xc028	/* CPUn Data Protection Range 5, Lower Bound Register */
#define DPR6_L	0xc030	/* CPUn Data Protection Range 6, Lower Bound Register */
#define DPR7_L	0xc038	/* CPUn Data Protection Range 7, Lower Bound Register */
#define DPR8_L	0xc040	/* CPUn Data Protection Range 8, Lower Bound Register */
#define DPR9_L	0xc048	/* CPUn Data Protection Range 9, Lower Bound Register */
#define DPR10_L	0xc050	/* CPUn Data Protection Range 10, Lower Bound Register */
#define DPR11_L	0xc058	/* CPUn Data Protection Range 11, Lower Bound Register */
#define DPR12_L	0xc060	/* CPUn Data Protection Range 12, Lower Bound Register */
#define DPR13_L	0xc068	/* CPUn Data Protection Range 13, Lower Bound Register */
#define DPR14_L	0xc070	/* CPUn Data Protection Range 14, Lower Bound Register */
#define DPR15_L	0xc078	/* CPUn Data Protection Range 15, Lower Bound Register */
#define DPR0_U	0xc004	/* CPUn Data Protection Range 0, Upper Bound Register */
#define DPR1_U	0xc00c	/* CPUn Data Protection Range 1, Upper Bound Register */
#define DPR2_U	0xc014	/* CPUn Data Protection Range 2, Upper Bound Register */
#define DPR3_U	0xc01c	/* CPUn Data Protection Range 3, Upper Bound Register */
#define DPR4_U	0xc024	/* CPUn Data Protection Range 4, Upper Bound Register */
#define DPR5_U	0xc02c	/* CPUn Data Protection Range 5, Upper Bound Register */
#define DPR6_U	0xc034	/* CPUn Data Protection Range 6, Upper Bound Register */
#define DPR7_U	0xc03c	/* CPUn Data Protection Range 7, Upper Bound Register */
#define DPR8_U	0xc044	/* CPUn Data Protection Range 8, Upper Bound Register */
#define DPR9_U	0xc04c	/* CPUn Data Protection Range 9, Upper Bound Register */
#define DPR10_U	0xc054	/* CPUn Data Protection Range 10, Upper Bound Register */
#define DPR11_U	0xc05c	/* CPUn Data Protection Range 11, Upper Bound Register */
#define DPR12_U	0xc064	/* CPUn Data Protection Range 12, Upper Bound Register */
#define DPR13_U	0xc06c	/* CPUn Data Protection Range 13, Upper Bound Register */
#define DPR14_U	0xc074	/* CPUn Data Protection Range 14, Upper Bound Register */
#define DPR15_U	0xc07c	/* CPUn Data Protection Range 15, Upper Bound Register */
#define CPR0_L	0xd000	/* CPUnCode Protection Range 0 Lower Bound Register */
#define CPR1_L	0xd008	/* CPUnCode Protection Range 1 Lower Bound Register */
#define CPR2_L	0xd010	/* CPUnCode Protection Range 2 Lower Bound Register */
#define CPR3_L	0xd018	/* CPUnCode Protection Range 3 Lower Bound Register */
#define CPR4_L	0xd020	/* CPUnCode Protection Range 4 Lower Bound Register */
#define CPR5_L	0xd028	/* CPUnCode Protection Range 5 Lower Bound Register */
#define CPR6_L	0xd030	/* CPUnCode Protection Range 6 Lower Bound Register */
#define CPR7_L	0xd038	/* CPUnCode Protection Range 7 Lower Bound Register */
#define CPR0_U	0xd004	/* CPUn Code Protection Range 0 Upper Bound Register */
#define CPR1_U	0xd00c	/* CPUn Code Protection Range 1 Upper Bound Register */
#define CPR2_U	0xd014	/* CPUn Code Protection Range 2 Upper Bound Register */
#define CPR3_U	0xd01c	/* CPUn Code Protection Range 3 Upper Bound Register */
#define CPR4_U	0xd024	/* CPUn Code Protection Range 4 Upper Bound Register */
#define CPR5_U	0xd02c	/* CPUn Code Protection Range 5 Upper Bound Register */
#define CPR6_U	0xd034	/* CPUn Code Protection Range 6 Upper Bound Register */
#define CPR7_U	0xd03c	/* CPUn Code Protection Range 7 Upper Bound Register */
#define DPRE_0	0xe010	/* CPUn Data Protection Read Enable Register Set 0 */
#define DPRE_1	0xe014	/* CPUn Data Protection Read Enable Register Set 1 */
#define DPRE_2	0xe018	/* CPUn Data Protection Read Enable Register Set 2 */
#define DPRE_3	0xe01c	/* CPUn Data Protection Read Enable Register Set 3 */
#define DPWE_0	0xe020	/* CPUn Data Protection Write Enable Register Set 0 */
#define DPWE_1	0xe024	/* CPUn Data Protection Write Enable Register Set 1 */
#define DPWE_2	0xe028	/* CPUn Data Protection Write Enable Register Set 2 */
#define DPWE_3	0xe02c	/* CPUn Data Protection Write Enable Register Set 3 */
#define CPXE_0	0xe000	/* CPUn Code Protection Execute Enable Register Set 0 */
#define CPXE_1	0xe004	/* CPUn Code Protection Execute Enable Register Set 1 */
#define CPXE_2	0xe008	/* CPUn Code Protection Execute Enable Register Set 2 */
#define CPXE_3	0xe00c	/* CPUn Code Protection Execute Enable Register Set 3 */
#define TPS_TIMER0	0xe404	/* CPUn Temporal Protection System Timer Register 0 */
#define TPS_TIMER1	0xe408	/* CPUn Temporal Protection System Timer Register 0 */
#define TPS_TIMER2	0xe40c	/* CPUn Temporal Protection System Timer Register 0 */
#define TPS_CON	0xe400	/* CPUn Temporal Protection System Control Register */
#define DBGSR	0xfd00	/* Debug Status Register */
#define EXEVT	0xfd08	/* External Event Register */
#define CREVT	0xfd0c	/* Core Register Access Event */
#define SWEVT	0xfd10	/* Software Debug Event */
#define TR0EVT	0xf000	/* Trigger Event 0 */
#define TR1EVT	0xf008	/* Trigger Event 1 */
#define TR2EVT	0xf010	/* Trigger Event 2 */
#define TR3EVT	0xf018	/* Trigger Event 3 */
#define TR4EVT	0xf020	/* Trigger Event 4 */
#define TR5EVT	0xf028	/* Trigger Event 5 */
#define TR6EVT	0xf030	/* Trigger Event 6 */
#define TR7EVT	0xf038	/* Trigger Event 7 */
#define TR0ADR	0xf004	/* Trigger Address 0 */
#define TR1ADR	0xf00c	/* Trigger Address 1 */
#define TR2ADR	0xf014	/* Trigger Address 2 */
#define TR3ADR	0xf01c	/* Trigger Address 3 */
#define TR4ADR	0xf024	/* Trigger Address 4 */
#define TR5ADR	0xf02c	/* Trigger Address 5 */
#define TR6ADR	0xf034	/* Trigger Address 6 */
#define TR7ADR	0xf03c	/* Trigger Address 7 */
#define TRIG_ACC	0xfd30	/* CPUn Trigger Address x */
#define DMS	0xfd40	/* CPUn Debug Monitor Start Address */
#define DCX	0xfd44	/* CPUn Debug Context Save Area Pointer */
#define DBGTCR	0xfd48	/* Debug Trap Control Register */
#define CCTRL	0xfc00	/* Counter Control */
#define CCNT	0xfc04	/* CPU Clock Cycle Count */
#define ICNT	0xfc08	/* Instruction Count */
#define M1CNT	0xfc0c	/* Multi-Count Register 1 */
#define M2CNT	0xfc10	/* Multi-Count Register 2 */
#define M3CNT	0xfc14	/* Multi-Count Register 3 */
#define PCXI	0xfe00	/* Previous Context Information Register */
#define PSW	0xfe04	/* Program Status Word */
#define PC	0xfe08	/* Program Counter */
#define SYSCON	0xfe14	/* System Configuration Register */
#define CORE_ID	0xfe1c	/* CPUn Core Identification Register */
#define CPU_ID	0xfe18	/* CPUn Identification Register TC1.6P */
#define CUS_ID	0xfe50	/* CPUn Customer ID register */
#define BIV	0xfe20	/* Base Interrupt Vector Table Pointer */
#define BTV	0xfe24	/* Base Trap Vector Table Pointer */
#define ISP	0xfe28	/* Interrupt Stack Pointer */
#define ICR	0xfe2c	/* Interrupt Control Register */
#define FCX	0xfe38	/* Free CSA List Head Pointer */
#define LCX	0xfe3c	/* Free CSA List Limit Pointer */
#define SEGEN	0x1030	/* SRI Error Generation Register */

/* BUS */
typedef volatile union
{
	struct
	{ 
		unsigned int EN0            : 1;	/* Access Enable for Master TAG ID 0 */
		unsigned int EN1            : 1;	/* Access Enable for Master TAG ID 1 */
		unsigned int EN2            : 1;	/* Access Enable for Master TAG ID 2 */
		unsigned int EN3            : 1;	/* Access Enable for Master TAG ID 3 */
		unsigned int EN4            : 1;	/* Access Enable for Master TAG ID 4 */
		unsigned int EN5            : 1;	/* Access Enable for Master TAG ID 5 */
		unsigned int EN6            : 1;	/* Access Enable for Master TAG ID 6 */
		unsigned int EN7            : 1;	/* Access Enable for Master TAG ID 7 */
		unsigned int EN8            : 1;	/* Access Enable for Master TAG ID 8 */
		unsigned int EN9            : 1;	/* Access Enable for Master TAG ID 9 */
		unsigned int EN10           : 1;	/* Access Enable for Master TAG ID 10 */
		unsigned int EN11           : 1;	/* Access Enable for Master TAG ID 11 */
		unsigned int EN12           : 1;	/* Access Enable for Master TAG ID 12 */
		unsigned int EN13           : 1;	/* Access Enable for Master TAG ID 13 */
		unsigned int EN14           : 1;	/* Access Enable for Master TAG ID 14 */
		unsigned int EN15           : 1;	/* Access Enable for Master TAG ID 15 */
		unsigned int EN16           : 1;	/* Access Enable for Master TAG ID 16 */
		unsigned int EN17           : 1;	/* Access Enable for Master TAG ID 17 */
		unsigned int EN18           : 1;	/* Access Enable for Master TAG ID 18 */
		unsigned int EN19           : 1;	/* Access Enable for Master TAG ID 19 */
		unsigned int EN20           : 1;	/* Access Enable for Master TAG ID 20 */
		unsigned int EN21           : 1;	/* Access Enable for Master TAG ID 21 */
		unsigned int EN22           : 1;	/* Access Enable for Master TAG ID 22 */
		unsigned int EN23           : 1;	/* Access Enable for Master TAG ID 23 */
		unsigned int EN24           : 1;	/* Access Enable for Master TAG ID 24 */
		unsigned int EN25           : 1;	/* Access Enable for Master TAG ID 25 */
		unsigned int EN26           : 1;	/* Access Enable for Master TAG ID 26 */
		unsigned int EN27           : 1;	/* Access Enable for Master TAG ID 27 */
		unsigned int EN28           : 1;	/* Access Enable for Master TAG ID 28 */
		unsigned int EN29           : 1;	/* Access Enable for Master TAG ID 29 */
		unsigned int EN30           : 1;	/* Access Enable for Master TAG ID 30 */
		unsigned int EN31           : 1;	/* Access Enable for Master TAG ID 31 */
	} B;
	int I;
	unsigned int U;

} SBCU_ACCEN0_type;
#define SBCU_ACCEN0	(*( SBCU_ACCEN0_type *) 0xf00300fcu)	/* Access Enable Register 0 */
#define XBAR_ACCEN0	(*( SBCU_ACCEN0_type *) 0xf87004fcu)	/* Access Enable Register 0 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int Reserved       : 32;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} SBCU_ACCEN1_type;
#define SBCU_ACCEN1	(*( SBCU_ACCEN1_type *) 0xf00300f8u)	/* Access Enable Register 1 */

typedef volatile union
{
	struct
	{ 
		unsigned int TOUT           : 16;	/* SBCU Bus Time-Out Value */
		unsigned int DBG            : 1;	/* SBCU Debug Trace Enable */
		unsigned int                : 2;
		/* const */ unsigned int ONE            : 1;	/* Reserved */
		unsigned int                : 4;
		unsigned int SPC            : 8;	/* Starvation Period Control */
	} B;
	int I;
	unsigned int U;

} SBCU_CON_type;
#define SBCU_CON	(*( SBCU_CON_type *) 0xf0030010u)	/* SBCU Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int ADR1           : 32;	/* Debug Trigger Address 1 */
	} B;
	int I;
	unsigned int U;

} SBCU_DBADR1_type;
#define SBCU_DBADR1	(*( SBCU_DBADR1_type *) 0xf0030038u)	/* SBCU Debug Address 1 Register */

typedef volatile union
{
	struct
	{ 
		unsigned int ADR2           : 32;	/* Debug Trigger Address 2 */
	} B;
	int I;
	unsigned int U;

} SBCU_DBADR2_type;
#define SBCU_DBADR2	(*( SBCU_DBADR2_type *) 0xf003003cu)	/* SBCU Debug Address 2 Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int FPIADR         : 32;	/* FPI Bus Address Status */
	} B;
	int I;
	unsigned int U;

} SBCU_DBADRT_type;
#define SBCU_DBADRT	(*( SBCU_DBADRT_type *) 0xf0030048u)	/* SBCU Debug Trapped Address Register */

typedef volatile union
{
	struct
	{ 
		unsigned int OPC            : 4;	/* Opcode for Signal Status Debug Trigger */
		unsigned int SVM            : 1;	/* SVM Signal for Status Debug Trigger */
		unsigned int                : 3;
		unsigned int WR             : 1;	/* Write Signal for Status Debug Trigger */
		unsigned int                : 3;
		unsigned int RD             : 1;	/* Write Signal for Status Debug Trigger */
		unsigned int                : 19;
	} B;
	int I;
	unsigned int U;

} SBCU_DBBOS_type;
#define SBCU_DBBOS	(*( SBCU_DBBOS_type *) 0xf0030040u)	/* SBCU Debug Bus Operation Signals Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int FPIOPC         : 4;	/* FPI Bus Opcode Status */
		/* const */ unsigned int FPISVM         : 1;	/* FPI Bus Supervisor Mode Status */
		/* const */ unsigned int FPIACK         : 2;	/* FPI Bus Acknowledge Status */
		/* const */ unsigned int FPIRDY         : 1;	/* FPI Bus Ready Status */
		/* const */ unsigned int FPIWR          : 1;	/* FPI Bus Write Indication Status */
		/* const */ unsigned int FPIRST         : 2;	/* FPI Bus Reset Status */
		/* const */ unsigned int FPIOPS         : 1;	/* FPI Bus OCDS Suspend Status */
		/* const */ unsigned int FPIRD          : 1;	/* FPI Bus Read Indication Status */
		/* const */ unsigned int FPIABORT       : 1;	/* FPI Bus Abort Status */
		/* const */ unsigned int FPITOUT        : 1;	/* FPI Bus Time-out Status */
		/* const */ unsigned int ENDINIT        : 1;	/* FPI Bus Endinit Status */
		/* const */ unsigned int FPITAG         : 6;	/* FPI Bus Master TAG Status */
		/* const */ unsigned int                : 10;
	} B;
	int I;
	unsigned int U;

} SBCU_DBBOST_type;
#define SBCU_DBBOST	(*( SBCU_DBBOST_type *) 0xf003004cu)	/* SBCU Debug Trapped Bus Operation Signals Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int EO             : 1;	/* Status of SBCU Debug Support Enable */
		/* const */ unsigned int OA             : 1;	/* Status of SBCU Breakpoint Logic */
		unsigned int                : 2;
		unsigned int RA             : 1;	/* Rearm SBCU Breakpoint Logic */
		unsigned int                : 7;
		unsigned int CONCOM0        : 1;	/* Grant and Address Trigger Relation */
		unsigned int CONCOM1        : 1;	/* Address 1 and Address 2 Trigger Relation */
		unsigned int CONCOM2        : 1;	/* Address and Signal Trigger Relation */
		unsigned int                : 1;
		unsigned int ONG            : 1;	/* Grant Trigger Enable */
		unsigned int                : 3;
		unsigned int ONA1           : 2;	/* Address 1 Trigger Control */
		unsigned int                : 2;
		unsigned int ONA2           : 2;	/* Address 2 Trigger Control */
		unsigned int                : 2;
		unsigned int ONBOS0         : 1;	/* Opcode Signal Status Trigger Condition */
		unsigned int ONBOS1         : 1;	/* Supervisor Mode Signal Trigger Condition */
		unsigned int ONBOS2         : 1;	/* Write Signal Trigger Condition */
		unsigned int ONBOS3         : 1;	/* Read Signal Trigger Condition */
	} B;
	int I;
	unsigned int U;

} SBCU_DBCNTL_type;
#define SBCU_DBCNTL	(*( SBCU_DBCNTL_type *) 0xf0030030u)	/* SBCU Debug Control Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int FPIDATA        : 32;	/* FPI Bus Data Status */
	} B;
	int I;
	unsigned int U;

} SBCU_DBDAT_type;
#define SBCU_DBDAT	(*( SBCU_DBDAT_type *) 0xf0030050u)	/* SBCU Debug Data Status Register */

typedef volatile union
{
	struct
	{ 
		unsigned int DMAH           : 1;	/* High-Priority DMA FPI Bus Master Status */
		unsigned int ONE0           : 1;	/* Reserved */
		unsigned int ETH            : 1;	/* Ethernet FPI Bus Master Status */
		unsigned int HSSL           : 1;	/* HSSL FPI Bus Master Status */
		unsigned int ONE1           : 1;	/* Reserved */
		unsigned int DMAM           : 1;	/* Medium-Priority DMA FPI Bus Master Status */
		unsigned int ONE2           : 1;	/* Reserved */
		unsigned int CPU0           : 1;	/* CPU0 FPI Bus Master Status */
		unsigned int CPU1           : 1;	/* CPU1 FPI Bus Master Status */
		unsigned int CPU2           : 1;	/* CPU2 Grant Trigger Enable */
		unsigned int ONE3           : 2;	/* Reserved */
		unsigned int HSMRMI         : 1;	/* HSM Register FPI Bus Master Interface Status */
		unsigned int HSMCMI         : 1;	/* HSM Cache FPI Bus Master Interface Status */
		unsigned int ONE4           : 1;	/* Reserved */
		unsigned int DMAL           : 1;	/* Low-Priority DMA FPI Bus Master Status */
		unsigned int DMACHNR        : 8;	/* DMA-FPI Channel Grant Status */
		unsigned int ONE5           : 8;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} SBCU_DBGNTT_type;
#define SBCU_DBGNTT	(*( SBCU_DBGNTT_type *) 0xf0030044u)	/* SBCU Debug Trapped Master Register */

typedef volatile union
{
	struct
	{ 
		unsigned int DMAH           : 1;	/* DMA High Priority Trigger Enable */
		unsigned int ONE0           : 1;	/* Reserved */
		unsigned int ETH            : 1;	/* Ethernet Trigger Enable */
		unsigned int HSSL           : 1;	/* HSSL Trigger Enable */
		unsigned int ONE1           : 1;	/* Reserved */
		unsigned int DMAM           : 1;	/* DMA Grant Trigger Enable, Medium Priority */
		unsigned int ONE2           : 1;	/* Reserved */
		unsigned int CPU0           : 1;	/* CPU0 Grant Trigger Enable */
		unsigned int CPU1           : 1;	/* CPU1 Grant Trigger Enable */
		unsigned int CPU2           : 1;	/* CPU2 Grant Trigger Enable */
		unsigned int ONE3           : 2;	/* Reserved */
		unsigned int HSMRMI         : 1;	/* HSM Register Master Interface Grant Trigger Enable */
		unsigned int HSMCMI         : 1;	/* HSM Cache Master Interface Grant Trigger Enable */
		unsigned int ONE4           : 1;	/* Reserved */
		unsigned int DMAL           : 1;	/* DMA Grant Trigger Enable, Low Priority */
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} SBCU_DBGRNT_type;
#define SBCU_DBGRNT	(*( SBCU_DBGRNT_type *) 0xf0030034u)	/* SBCU Debug Grant Mask Register */

typedef volatile union
{
	struct
	{ 
		unsigned int FPIADR         : 32;	/* Captured FPI Bus Address */
	} B;
	int I;
	unsigned int U;

} SBCU_EADD_type;
#define SBCU_EADD	(*( SBCU_EADD_type *) 0xf0030024u)	/* SBCU Error Address Capture Register */

typedef volatile union
{
	struct
	{ 
		unsigned int ERRCNT         : 14;	/* FPI Bus Error Counter */
		unsigned int TOUT           : 1;	/* State of FPI Bus Time-Out Signal */
		unsigned int RDY            : 1;	/* State of FPI Bus Ready Signal */
		unsigned int ABT            : 1;	/* State of FPI Bus Abort Signal */
		unsigned int ACK            : 2;	/* State of FPI Bus Acknowledge Signals */
		unsigned int SVM            : 1;	/* State of FPI Bus Supervisor Mode Signal */
		unsigned int WRN            : 1;	/* State of FPI Bus Write Signal */
		unsigned int RDN            : 1;	/* State of FPI Bus Read Signal */
		unsigned int TAG            : 6;	/* FPI Bus Master Tag Number Signals */
		unsigned int OPC            : 4;	/* FPI Bus Operation Code Signals */
	} B;
	int I;
	unsigned int U;

} SBCU_ECON_type;
#define SBCU_ECON	(*( SBCU_ECON_type *) 0xf0030020u)	/* SBCU Error Control Capture Register */

typedef volatile union
{
	struct
	{ 
		unsigned int FPIDAT         : 32;	/* Captured FPI Bus Data */
	} B;
	int I;
	unsigned int U;

} SBCU_EDAT_type;
#define SBCU_EDAT	(*( SBCU_EDAT_type *) 0xf0030028u)	/* SBCU Error Data Capture Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int MOD_REV        : 8;	/* Module Revision Number */
		/* const */ unsigned int MOD_NUMBER     : 8;	/* Module Number Value */
		/* const */ unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} SBCU_ID_type;
#define SBCU_ID	(*( SBCU_ID_type *) 0xf0030008u)	/* Module Identification Register */

typedef volatile union
{
	struct
	{ 
		unsigned int CPU1           : 4;	/* Master 8 Priority */
		unsigned int CPU2           : 4;	/* Master 9 Priority */
		unsigned int RESERVEDA      : 4;	/* Reserved */
		unsigned int RESERVEDB      : 4;	/* Reserved */
		unsigned int HSMRMI         : 4;	/* Master 12 Priority */
		unsigned int HSMCMI         : 4;	/* Master 13 Priority */
		unsigned int RESERVEDE      : 4;	/* Reserved */
		unsigned int DMAL           : 4;	/* Master 15 Priority */
	} B;
	int I;
	unsigned int U;

} SBCU_PRIOH_type;
#define SBCU_PRIOH	(*( SBCU_PRIOH_type *) 0xf0030014u)	/* Arbiter Priority Register High */

typedef volatile union
{
	struct
	{ 
		unsigned int DMAH           : 4;	/* Master 0 Priority */
		unsigned int RESERVED1      : 4;	/* Reserved */
		unsigned int ETH            : 4;	/* Master 2 Priority */
		unsigned int HSSL           : 4;	/* Master 3 Priority */
		unsigned int RESERVED4      : 4;	/* Reserved */
		unsigned int DMAM           : 4;	/* Master 5 Priority */
		unsigned int RESERVED6      : 4;	/* Reserved */
		unsigned int CPU0           : 4;	/* Master 7 Priority */
	} B;
	int I;
	unsigned int U;

} SBCU_PRIOL_type;
#define SBCU_PRIOL	(*( SBCU_PRIOL_type *) 0xf0030018u)	/* Arbiter Priority Register Low */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned __sfrbit32 Reserved       : 32;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} XBAR_ACCEN1_type;
#define XBAR_ACCEN1	(*( XBAR_ACCEN1_type *) 0xf87004f8u)	/* Access Enable Register 1 */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 PRERREN        : 1;	/* SRI Protocol Error Enable */
		unsigned __sfrbit32 SCERREN        : 1;	/* SRI Starvation Error Enable */
		unsigned __sfrbit32 SETPRINT       : 1;	/* Set SRI Protocol Interrupt */
		unsigned __sfrbit32 SETSCINT       : 1;	/* Set SRI Starvation Interrupt */
		unsigned __sfrbit32 INTACK         : 1;	/* Interrupt Acknowledge */
		unsigned __sfrbit32                : 15;
		unsigned __sfrbit32 SPC            : 12;	/* Starvation Protection Counter Reload Value */
	} B;
	int I;
	unsigned int U;

} XBAR_ARBCON0_type;
#define XBAR_ARBCON0	(*( XBAR_ARBCON0_type *) 0xf8700044u)	/* Arbiter Control Register 0 */
#define XBAR_ARBCON1	(*( XBAR_ARBCON0_type *) 0xf8700084u)	/* Arbiter Control Register 1 */
#define XBAR_ARBCON2	(*( XBAR_ARBCON0_type *) 0xf87000c4u)	/* Arbiter Control Register 2 */
#define XBAR_ARBCON4	(*( XBAR_ARBCON0_type *) 0xf8700144u)	/* Arbiter Control Register 4 */
#define XBAR_ARBCON6	(*( XBAR_ARBCON0_type *) 0xf87001c4u)	/* Arbiter Control Register 6 */
#define XBAR_ARBCON7	(*( XBAR_ARBCON0_type *) 0xf8700204u)	/* Arbiter Control Register 7 */
#define XBAR_ARBCON8	(*( XBAR_ARBCON0_type *) 0xf8700244u)	/* Arbiter Control Register 8 */
#define XBAR_ARBCOND	(*( XBAR_ARBCON0_type *) 0xf8700004u)	/* Arbiter Control Register D */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32                : 2;
		unsigned __sfrbit32 ADDRESS        : 19;	/* Debug Address Boundary */
		unsigned __sfrbit32                : 2;
		unsigned __sfrbit32 ADDRESS_2      : 1;	/* Debug Address Boundary */
		unsigned __sfrbit32                : 3;
		unsigned __sfrbit32 ADDRESS_3      : 1;	/* Debug Address Boundary */
		/* const */ unsigned __sfrbit32 ONE            : 3;	/* Reserved */
		unsigned __sfrbit32 ADDRESS_5      : 1;	/* Debug Address Boundary */
	} B;
	int I;
	unsigned int U;

} XBAR_DBADD0_type;
#define XBAR_DBADD0	(*( XBAR_DBADD0_type *) 0xf870005cu)	/* Debug Address Register 0 */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32                : 2;
		unsigned __sfrbit32 ADDRESS        : 19;	/* Debug Address Boundary */
		unsigned __sfrbit32                : 2;
		unsigned __sfrbit32 ADDRESS_2      : 1;	/* Debug Address Boundary */
		unsigned __sfrbit32                : 3;
		unsigned __sfrbit32 ADDRESS_3      : 2;	/* Debug Address Boundary */
		/* const */ unsigned __sfrbit32 ONE            : 2;	/* Reserved */
		unsigned __sfrbit32 ADDRESS_5      : 1;	/* Debug Address Boundary */
	} B;
	int I;
	unsigned int U;

} XBAR_DBADD1_type;
#define XBAR_DBADD1	(*( XBAR_DBADD1_type *) 0xf870009cu)	/* Debug Address Register 1 */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32                : 2;
		unsigned __sfrbit32 ADDRESS0       : 19;	/* Debug Address Boundary */
		unsigned __sfrbit32                : 2;
		unsigned __sfrbit32 ADDRESS1       : 1;	/* Debug Address Boundary */
		unsigned __sfrbit32                : 3;
		unsigned __sfrbit32 ADDRESS2       : 1;	/* Debug Address Boundary */
		/* const */ unsigned __sfrbit32 ONE0           : 1;	/* Reserved */
		unsigned __sfrbit32 ADDRESS3       : 1;	/* Debug Address Boundary */
		/* const */ unsigned __sfrbit32 ONE1           : 1;	/* Reserved */
		unsigned __sfrbit32 ADDRESS4       : 1;	/* Debug Address Boundary */
	} B;
	int I;
	unsigned int U;

} XBAR_DBADD2_type;
#define XBAR_DBADD2	(*( XBAR_DBADD2_type *) 0xf87000dcu)	/* Debug Address Register 2 */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32                : 2;
		unsigned __sfrbit32 ADDRESS        : 29;	/* Debug Address Boundary */
		/* const */ unsigned __sfrbit32 ONE            : 1;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} XBAR_DBADD4_type;
#define XBAR_DBADD4	(*( XBAR_DBADD4_type *) 0xf870015cu)	/* Debug Address Register 4 */
#define XBAR_DBMADD4	(*( XBAR_DBADD4_type *) 0xf8700160u)	/* Debug Mask Address Register 4 */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32                : 2;
		unsigned __sfrbit32 ADDRESS0       : 25;	/* Debug Address Boundary */
		/* const */ unsigned __sfrbit32 ONE0           : 1;	/* Reserved */
		unsigned __sfrbit32 ADDRESS1       : 3;	/* Debug Address Boundary */
		/* const */ unsigned __sfrbit32 ONE1           : 1;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} XBAR_DBADD6_type;
#define XBAR_DBADD6	(*( XBAR_DBADD6_type *) 0xf87001dcu)	/* Debug Address Register 6 */
#define XBAR_DBMADD6	(*( XBAR_DBADD6_type *) 0xf87001e0u)	/* Debug Mask Address Register 6 */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32                : 2;
		unsigned __sfrbit32 ADDRESS0       : 19;	/* Debug Address Boundary */
		unsigned __sfrbit32                : 8;
		unsigned __sfrbit32 ADDRESS1       : 1;	/* Debug Address Boundary */
		unsigned __sfrbit32                : 1;
		/* const */ unsigned __sfrbit32 ONE            : 1;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} XBAR_DBADD7_type;
#define XBAR_DBADD7	(*( XBAR_DBADD7_type *) 0xf870021cu)	/* Debug Address Register 7 */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32                : 2;
		unsigned __sfrbit32 ADDRESS0       : 19;	/* Debug Address Boundary */
		/* const */ unsigned __sfrbit32 ONE0           : 1;	/* Reserved */
		unsigned __sfrbit32                : 7;
		unsigned __sfrbit32 ADDRESS1       : 1;	/* Debug Address Boundary */
		unsigned __sfrbit32                : 1;
		/* const */ unsigned __sfrbit32 ONE1           : 1;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} XBAR_DBADD8_type;
#define XBAR_DBADD8	(*( XBAR_DBADD8_type *) 0xf870025cu)	/* Debug Address Register 8 */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32                : 2;
		unsigned __sfrbit32 ADDRESS        : 30;	/* Debug Address Boundary */
	} B;
	int I;
	unsigned int U;

} XBAR_DBADDD_type;
#define XBAR_DBADDD	(*( XBAR_DBADDD_type *) 0xf870001cu)	/* Debug Address Register D */
#define XBAR_DBMADDD	(*( XBAR_DBADDD_type *) 0xf8700020u)	/* Debug Mask Address Register D */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned __sfrbit32 DBEN           : 1;	/* Status of OCDS Enable Signal */
		/* const */ unsigned __sfrbit32 DBSAT          : 1;	/* Debug (OCDS) Trigger Status */
		unsigned __sfrbit32 REARM          : 1;	/* Rearm Debug (OCDS) Trigger */
		unsigned __sfrbit32 SETDBEVT       : 1;	/* Set Debug Event */
		unsigned __sfrbit32                : 12;
		unsigned __sfrbit32 RDEN           : 1;	/* Read Trigger Enable */
		unsigned __sfrbit32 WREN           : 1;	/* Write Trigger Enable */
		unsigned __sfrbit32 SVMEN          : 1;	/* SVM Trigger Enable */
		unsigned __sfrbit32 ADDEN          : 1;	/* Address Trigger Enable */
		unsigned __sfrbit32 ERREN          : 1;	/* Error Trigger Enable */
		unsigned __sfrbit32                : 2;
		unsigned __sfrbit32 MASEN          : 1;	/* Master Trigger Enable */
		unsigned __sfrbit32 MASTER         : 6;	/* Master TAG ID Trigger Selector */
		unsigned __sfrbit32                : 2;
	} B;
	int I;
	unsigned int U;

} XBAR_DBCON0_type;
#define XBAR_DBCON0	(*( XBAR_DBCON0_type *) 0xf8700058u)	/* Debug Control Register 0 */
#define XBAR_DBCON1	(*( XBAR_DBCON0_type *) 0xf8700098u)	/* Debug Control Register 1 */
#define XBAR_DBCON2	(*( XBAR_DBCON0_type *) 0xf87000d8u)	/* Debug Control Register 2 */
#define XBAR_DBCON4	(*( XBAR_DBCON0_type *) 0xf8700158u)	/* Debug Control Register 4 */
#define XBAR_DBCON6	(*( XBAR_DBCON0_type *) 0xf87001d8u)	/* Debug Control Register 6 */
#define XBAR_DBCON7	(*( XBAR_DBCON0_type *) 0xf8700218u)	/* Debug Control Register 7 */
#define XBAR_DBCON8	(*( XBAR_DBCON0_type *) 0xf8700258u)	/* Debug Control Register 8 */
#define XBAR_DBCOND	(*( XBAR_DBCON0_type *) 0xf8700018u)	/* Debug Control Register D */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32                : 2;
		unsigned __sfrbit32 ADDRESS        : 19;	/* Debug Address Boundary */
		/* const */ unsigned __sfrbit32 ONE            : 2;	/* Reserved */
		unsigned __sfrbit32 ADDRESS_3      : 1;	/* Debug Address Boundary */
		/* const */ unsigned __sfrbit32 ONE_4          : 3;	/* Reserved */
		unsigned __sfrbit32 ADDRESS_5      : 1;	/* Debug Address Boundary */
		/* const */ unsigned __sfrbit32 ONE_6          : 3;	/* Reserved */
		unsigned __sfrbit32 ADDRESS_7      : 1;	/* Debug Address Boundary */
	} B;
	int I;
	unsigned int U;

} XBAR_DBMADD0_type;
#define XBAR_DBMADD0	(*( XBAR_DBMADD0_type *) 0xf8700060u)	/* Debug Mask Address Register 0 */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32                : 2;
		unsigned __sfrbit32 ADDRESS        : 19;	/* Debug Address Boundary */
		/* const */ unsigned __sfrbit32 ONE            : 2;	/* Reserved */
		unsigned __sfrbit32 ADDRESS_3      : 1;	/* Debug Address Boundary */
		/* const */ unsigned __sfrbit32 ONE_4          : 3;	/* Reserved */
		unsigned __sfrbit32 ADDRESS_5      : 2;	/* Debug Address Boundary */
		/* const */ unsigned __sfrbit32 ONE_6          : 2;	/* Reserved */
		unsigned __sfrbit32 ADDRESS_7      : 1;	/* Debug Address Boundary */
	} B;
	int I;
	unsigned int U;

} XBAR_DBMADD1_type;
#define XBAR_DBMADD1	(*( XBAR_DBMADD1_type *) 0xf87000a0u)	/* Debug Mask Address Register 1 */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32                : 2;
		unsigned __sfrbit32 ADDRESS0       : 19;	/* Debug Address Boundary */
		/* const */ unsigned __sfrbit32 ONE0           : 2;	/* Reserved */
		unsigned __sfrbit32 ADDRESS1       : 1;	/* Debug Address Boundary */
		/* const */ unsigned __sfrbit32 ONE1           : 3;	/* Reserved */
		unsigned __sfrbit32 ADDRESS2       : 1;	/* Debug Address Boundary */
		/* const */ unsigned __sfrbit32 ONE2           : 1;	/* Reserved */
		unsigned __sfrbit32 ADDRESS3       : 1;	/* Debug Address Boundary */
		/* const */ unsigned __sfrbit32 ONE3           : 1;	/* Reserved */
		unsigned __sfrbit32 ADDRESS4       : 1;	/* Debug Address Boundary */
	} B;
	int I;
	unsigned int U;

} XBAR_DBMADD2_type;
#define XBAR_DBMADD2	(*( XBAR_DBMADD2_type *) 0xf87000e0u)	/* Debug Mask Address Register 2 */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32                : 2;
		unsigned __sfrbit32 ADDRESS0       : 19;	/* Debug Address Boundary */
		/* const */ unsigned __sfrbit32 ONE0           : 8;	/* Reserved */
		unsigned __sfrbit32 ADDRESS1       : 1;	/* Debug Address Boundary */
		/* const */ unsigned __sfrbit32 ONE1           : 2;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} XBAR_DBMADD7_type;
#define XBAR_DBMADD7	(*( XBAR_DBMADD7_type *) 0xf8700220u)	/* Debug Mask Address Register 7 */
#define XBAR_DBMADD8	(*( XBAR_DBMADD7_type *) 0xf8700260u)	/* Debug Mask Address Register 8 */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 SCI0           : 1;	/* SCI Debug Trigger Event Status */
		unsigned __sfrbit32 SCI1           : 1;	/* SCI Debug Trigger Event Status */
		unsigned __sfrbit32 SCI2           : 1;	/* SCI Debug Trigger Event Status */
		unsigned __sfrbit32                : 1;
		unsigned __sfrbit32 SCI4           : 1;	/* SCI Debug Trigger Event Status */
		unsigned __sfrbit32                : 1;
		unsigned __sfrbit32 SCI6           : 1;	/* SCI Debug Trigger Event Status */
		unsigned __sfrbit32 SCI7           : 1;	/* SCI Debug Trigger Event Status */
		unsigned __sfrbit32 SCI8           : 1;	/* SCI Debug Trigger Event Status */
		unsigned __sfrbit32                : 6;
		unsigned __sfrbit32 SCID           : 1;	/* Default Slave Debug Trigger Event Status */
		unsigned __sfrbit32                : 16;
	} B;
	int I;
	unsigned int U;

} XBAR_DBSAT_type;
#define XBAR_DBSAT	(*( XBAR_DBSAT_type *) 0xf870040cu)	/* Debug Trigger Event Status Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned __sfrbit32 RD             : 1;	/* Read Indication Status */
		/* const */ unsigned __sfrbit32 WR             : 1;	/* Write Indication Status */
		/* const */ unsigned __sfrbit32 SVM            : 1;	/* Supervisor Mode Indication Status */
		/* const */ unsigned __sfrbit32                : 1;
		/* const */ unsigned __sfrbit32 OPC            : 4;	/* Operation Code */
		/* const */ unsigned __sfrbit32 TR_ID          : 8;	/* Transaction ID */
		/* const */ unsigned __sfrbit32 ADDR_ECC       : 8;	/* SRI Address Phase Error Detection Information */
		/* const */ unsigned __sfrbit32 MCI_SBS        : 8;	/* MCI Sideband Signals [7:0] */
	} B;
	int I;
	unsigned int U;

} XBAR_ERR0_type;
#define XBAR_ERR0	(*( XBAR_ERR0_type *) 0xf8700054u)	/* Error/Debug Capture Register 0 */
#define XBAR_ERR1	(*( XBAR_ERR0_type *) 0xf8700094u)	/* Error/Debug Capture Register 1 */
#define XBAR_ERR2	(*( XBAR_ERR0_type *) 0xf87000d4u)	/* Error/Debug Capture Register 2 */
#define XBAR_ERR4	(*( XBAR_ERR0_type *) 0xf8700154u)	/* Error/Debug Capture Register 4 */
#define XBAR_ERR6	(*( XBAR_ERR0_type *) 0xf87001d4u)	/* Error/Debug Capture Register 6 */
#define XBAR_ERR7	(*( XBAR_ERR0_type *) 0xf8700214u)	/* Error/Debug Capture Register 7 */
#define XBAR_ERR8	(*( XBAR_ERR0_type *) 0xf8700254u)	/* Error/Debug Capture Register 8 */
#define XBAR_ERRD	(*( XBAR_ERR0_type *) 0xf8700014u)	/* Error/Debug Capture Register D */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned __sfrbit32 ADDR           : 32;	/* Transaction Address */
	} B;
	int I;
	unsigned int U;

} XBAR_ERRADDR0_type;
#define XBAR_ERRADDR0	(*( XBAR_ERRADDR0_type *) 0xf8700050u)	/* Error/Debug Address Capture Register 0 */
#define XBAR_ERRADDR1	(*( XBAR_ERRADDR0_type *) 0xf8700090u)	/* Error/Debug Address Capture Register 1 */
#define XBAR_ERRADDR2	(*( XBAR_ERRADDR0_type *) 0xf87000d0u)	/* Error/Debug Address Capture Register 2 */
#define XBAR_ERRADDR4	(*( XBAR_ERRADDR0_type *) 0xf8700150u)	/* Error/Debug Address Capture Register 4 */
#define XBAR_ERRADDR6	(*( XBAR_ERRADDR0_type *) 0xf87001d0u)	/* Error/Debug Address Capture Register 6 */
#define XBAR_ERRADDR7	(*( XBAR_ERRADDR0_type *) 0xf8700210u)	/* Error/Debug Address Capture Register 7 */
#define XBAR_ERRADDR8	(*( XBAR_ERRADDR0_type *) 0xf8700250u)	/* Error/Debug Address Capture Register 8 */
#define XBAR_ERRADDRD	(*( XBAR_ERRADDR0_type *) 0xf8700010u)	/* Error/Debug Address Capture Register D */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32                : 3;
		unsigned __sfrbit32 WFWD           : 1;	/* Wait for FPI Write Data */
		unsigned __sfrbit32                : 2;
		unsigned __sfrbit32 FREQDISF       : 1;	/* Disable Fast Request Feature for FPI to SRI Transactions */
		unsigned __sfrbit32                : 2;
		unsigned __sfrbit32 NODELTR        : 1;	/* Control Signal for deferred transactions */
		unsigned __sfrbit32 NORMW          : 1;	/* Control Signal for deferred transactions */
		unsigned __sfrbit32                : 2;
		unsigned __sfrbit32 MAX_WS         : 7;	/* FPI-Bus Wait State Retry Ratio */
		unsigned __sfrbit32                : 12;
	} B;
	int I;
	unsigned int U;

} XBAR_EXTCOND_type;
#define XBAR_EXTCOND	(*( XBAR_EXTCOND_type *) 0xf8700000u)	/* External Control Register D */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned __sfrbit32 MOD_REV        : 8;	/* Module Revision Number */
		/* const */ unsigned __sfrbit32 MOD_TYPE       : 8;	/* Module Type */
		/* const */ unsigned __sfrbit32 MOD_NUMBER     : 16;	/* Module Number Value */
	} B;
	int I;
	unsigned int U;

} XBAR_ID_type;
#define XBAR_ID	(*( XBAR_ID_type *) 0xf8700408u)	/* Module Identification Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 ENSCI0         : 1;	/* Enable ID Error from SCI0 */
		unsigned __sfrbit32 ENSCI1         : 1;	/* Enable ID Error from SCI1 */
		unsigned __sfrbit32 ENSCI2         : 1;	/* Enable ID Error from SCI2 */
		unsigned __sfrbit32                : 1;
		unsigned __sfrbit32 ENSCI4         : 1;	/* Enable ID Error from SCI4 */
		unsigned __sfrbit32                : 1;
		unsigned __sfrbit32 ENSCI6         : 1;	/* Enable ID Error from SCI6 */
		unsigned __sfrbit32 ENSCI7         : 1;	/* Enable ID Error from SCI7 */
		unsigned __sfrbit32 ENSCI8         : 1;	/* Enable ID Error from SCI8 */
		unsigned __sfrbit32                : 6;
		unsigned __sfrbit32 ENSCID         : 1;	/* Enable ID Error from Default Slave */
		unsigned __sfrbit32 ENMCI0         : 1;	/* Enable ID Error from MCI0 */
		unsigned __sfrbit32                : 3;
		unsigned __sfrbit32 ENMCI4         : 1;	/* Enable ID Error from MCI4 */
		unsigned __sfrbit32 ENMCI5         : 1;	/* Enable ID Error from MCI5 */
		unsigned __sfrbit32 ENMCI6         : 1;	/* Enable ID Error from MCI6 */
		unsigned __sfrbit32                : 1;
		unsigned __sfrbit32 ENMCI8         : 1;	/* Enable ID Error from MCI8 */
		unsigned __sfrbit32 ENMCI9         : 1;	/* Enable ID Error from MCI9 */
		unsigned __sfrbit32 ENMCI10        : 1;	/* Enable ID Error from MCI10 */
		unsigned __sfrbit32 ENMCI11        : 1;	/* Enable ID Error from MCI11 */
		unsigned __sfrbit32 ENMCI12        : 1;	/* Enable ID Error from MCI12 */
		unsigned __sfrbit32 ENMCI13        : 1;	/* Enable ID Error from MCI13 */
		unsigned __sfrbit32                : 2;
	} B;
	int I;
	unsigned int U;

} XBAR_IDINTEN_type;
#define XBAR_IDINTEN	(*( XBAR_IDINTEN_type *) 0xf8700418u)	/* Transaction ID Interrupt Enable Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 IDCSCI0        : 1;	/* Transaction ID Error from SCI0 Status */
		unsigned __sfrbit32 IDCSCI1        : 1;	/* Transaction ID Error from SCI1 Status */
		unsigned __sfrbit32 IDCSCI2        : 1;	/* Transaction ID Error from SCI2 Status */
		unsigned __sfrbit32                : 1;
		unsigned __sfrbit32 IDCSCI4        : 1;	/* Transaction ID Error from SCI4 Status */
		unsigned __sfrbit32                : 1;
		unsigned __sfrbit32 IDSCI6         : 1;	/* Transaction ID Error from SCI6 Status */
		unsigned __sfrbit32 IDSCI7         : 1;	/* Transaction ID Error from SCI7 Status */
		unsigned __sfrbit32 IDSCI8         : 1;	/* Transaction ID Error from SCI8 Status */
		unsigned __sfrbit32                : 6;
		unsigned __sfrbit32 IDSCID         : 1;	/* Transaction ID Error from Default Slave Status */
		unsigned __sfrbit32 IDMCI0         : 1;	/* Transaction ID Error from MCI0 Status */
		unsigned __sfrbit32                : 3;
		unsigned __sfrbit32 IDMCI4         : 1;	/* Transaction ID Error from MCI4 Status */
		unsigned __sfrbit32 IDMCI5         : 1;	/* Transaction ID Error from MCI5 Status */
		unsigned __sfrbit32 IDMCI6         : 1;	/* Transaction ID Error from MCI6 Status */
		unsigned __sfrbit32                : 1;
		unsigned __sfrbit32 IDMCI8         : 1;	/* Transaction ID Error from MCI8 Status */
		unsigned __sfrbit32 IDMCI9         : 1;	/* Transaction ID Error from MCI9 Status */
		unsigned __sfrbit32 IDMCI10        : 1;	/* Transaction ID Error from MCI10 Status */
		unsigned __sfrbit32 IDMCI11        : 1;	/* Transaction ID Error from MCI11 Status */
		unsigned __sfrbit32 IDMCI12        : 1;	/* Transaction ID Error from MCI12 Status */
		unsigned __sfrbit32 IDMCI13        : 1;	/* Transaction ID Error from MCI13 Status */
		unsigned __sfrbit32                : 2;
	} B;
	int I;
	unsigned int U;

} XBAR_IDINTSAT_type;
#define XBAR_IDINTSAT	(*( XBAR_IDINTSAT_type *) 0xf8700414u)	/* Transaction ID Interrupt Status Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 SCSCI0         : 1;	/* Starvation Error from SCI0 Status */
		unsigned __sfrbit32 SCSCI1         : 1;	/* Starvation Error from SCI1 Status */
		unsigned __sfrbit32 SCSCI2         : 1;	/* Starvation Error from SCI2 Status */
		unsigned __sfrbit32                : 1;
		unsigned __sfrbit32 SCSCI4         : 1;	/* Starvation Error from SCI4 Status */
		unsigned __sfrbit32                : 1;
		unsigned __sfrbit32 SCSCI6         : 1;	/* Starvation Error from SCI6 Status */
		unsigned __sfrbit32 SCSCI7         : 1;	/* Starvation Error from SCI7 Status */
		unsigned __sfrbit32 SCSCI8         : 1;	/* Starvation Error from SCI8 Status */
		unsigned __sfrbit32                : 6;
		unsigned __sfrbit32 SCSCID         : 1;	/* Starvation Error from Default Slave Status */
		unsigned __sfrbit32 PRSCI0         : 1;	/* Protocol Error from SCI0 Status */
		unsigned __sfrbit32 PRSCI1         : 1;	/* Protocol Error from SCI1 Status */
		unsigned __sfrbit32 PRSCI2         : 1;	/* Protocol Error from SCI2 Status */
		unsigned __sfrbit32                : 1;
		unsigned __sfrbit32 PRSCI4         : 1;	/* Protocol Error from SCI4 Status */
		unsigned __sfrbit32                : 1;
		unsigned __sfrbit32 PRSCI6         : 1;	/* Protocol Error from SCI6 Status */
		unsigned __sfrbit32 PRSCI7         : 1;	/* Protocol Error from SCI7 Status */
		unsigned __sfrbit32 PRSCI8         : 1;	/* Protocol Error from SCI8 Status */
		unsigned __sfrbit32                : 6;
		unsigned __sfrbit32 PRSCID         : 1;	/* Protocol Error from Default Slave Status */
	} B;
	int I;
	unsigned int U;

} XBAR_INTSAT_type;
#define XBAR_INTSAT	(*( XBAR_INTSAT_type *) 0xf8700410u)	/* Arbiter Interrupt Status Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 MASTER8        : 3;	/* Master 8 Priority */
		unsigned __sfrbit32                : 1;
		unsigned __sfrbit32 MASTER9        : 3;	/* Master 9 Priority */
		unsigned __sfrbit32                : 1;
		unsigned __sfrbit32 MASTER10       : 3;	/* Master 10 Priority */
		unsigned __sfrbit32                : 1;
		unsigned __sfrbit32 MASTER11       : 3;	/* Master 11 Priority */
		unsigned __sfrbit32                : 1;
		unsigned __sfrbit32 MASTER12       : 3;	/* Master 12 Priority */
		unsigned __sfrbit32                : 1;
		unsigned __sfrbit32 MASTER13       : 3;	/* Master 13 Priority */
		unsigned __sfrbit32                : 9;
	} B;
	int I;
	unsigned int U;

} XBAR_PRIOH0_type;
#define XBAR_PRIOH0	(*( XBAR_PRIOH0_type *) 0xf8700048u)	/* Arbiter Priority Register 0 */
#define XBAR_PRIOH1	(*( XBAR_PRIOH0_type *) 0xf8700088u)	/* Arbiter Priority Register 1 */
#define XBAR_PRIOH2	(*( XBAR_PRIOH0_type *) 0xf87000c8u)	/* Arbiter Priority Register 2 */
#define XBAR_PRIOH4	(*( XBAR_PRIOH0_type *) 0xf8700148u)	/* Arbiter Priority Register 4 */
#define XBAR_PRIOH6	(*( XBAR_PRIOH0_type *) 0xf87001c8u)	/* Arbiter Priority Register 6 */
#define XBAR_PRIOH7	(*( XBAR_PRIOH0_type *) 0xf8700208u)	/* Arbiter Priority Register 7 */
#define XBAR_PRIOH8	(*( XBAR_PRIOH0_type *) 0xf8700248u)	/* Arbiter Priority Register 8 */
#define XBAR_PRIOHD	(*( XBAR_PRIOH0_type *) 0xf8700008u)	/* Arbiter Priority Register D */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 MASTER0        : 3;	/* Master 0 Priority */
		unsigned __sfrbit32                : 13;
		unsigned __sfrbit32 MASTER4        : 3;	/* Master 4 Priority */
		unsigned __sfrbit32                : 1;
		unsigned __sfrbit32 MASTER5        : 3;	/* Master 5 Priority */
		unsigned __sfrbit32                : 1;
		unsigned __sfrbit32 MASTER6        : 3;	/* Master 6 Priority */
		unsigned __sfrbit32                : 5;
	} B;
	int I;
	unsigned int U;

} XBAR_PRIOL0_type;
#define XBAR_PRIOL0	(*( XBAR_PRIOL0_type *) 0xf870004cu)	/* Arbiter Priority Register 0 */
#define XBAR_PRIOL1	(*( XBAR_PRIOL0_type *) 0xf870008cu)	/* Arbiter Priority Register 1 */
#define XBAR_PRIOL2	(*( XBAR_PRIOL0_type *) 0xf87000ccu)	/* Arbiter Priority Register 2 */
#define XBAR_PRIOL4	(*( XBAR_PRIOL0_type *) 0xf870014cu)	/* Arbiter Priority Register 4 */
#define XBAR_PRIOL6	(*( XBAR_PRIOL0_type *) 0xf87001ccu)	/* Arbiter Priority Register 6 */
#define XBAR_PRIOL7	(*( XBAR_PRIOL0_type *) 0xf870020cu)	/* Arbiter Priority Register 7 */
#define XBAR_PRIOL8	(*( XBAR_PRIOL0_type *) 0xf870024cu)	/* Arbiter Priority Register 8 */
#define XBAR_PRIOLD	(*( XBAR_PRIOL0_type *) 0xf870000cu)	/* Arbiter Priority Register D */


/* CPU */
typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 VSS            : 1;	/* Vector Spacing Select */
		unsigned __sfrbit32 bBIV           : 31;	/* Base Address of Interrupt Vector Table */
	} B;
	int I;
	unsigned int U;

} CPU0_BIV_type;
#define CPU0_BIV	(*( CPU0_BIV_type *) 0xf881fe20u)	/* Base Interrupt Vector Table Pointer */
#define CPU1_BIV	(*( CPU0_BIV_type *) 0xf883fe20u)	/* Base Interrupt Vector Table Pointer */
#define CPU2_BIV	(*( CPU0_BIV_type *) 0xf885fe20u)	/* Base Interrupt Vector Table Pointer */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned __sfrbit32 RES            : 1;	/* Reserved */
		unsigned __sfrbit32 bBTV           : 31;	/* Base Address of Trap Vector Table */
	} B;
	int I;
	unsigned int U;

} CPU0_BTV_type;
#define CPU0_BTV	(*( CPU0_BTV_type *) 0xf881fe24u)	/* Base Trap Vector Table Pointer */
#define CPU1_BTV	(*( CPU0_BTV_type *) 0xf883fe24u)	/* Base Trap Vector Table Pointer */
#define CPU2_BTV	(*( CPU0_BTV_type *) 0xf885fe24u)	/* Base Trap Vector Table Pointer */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 CountValue     : 31;	/* Count Value */
		unsigned __sfrbit32 SOvf           : 1;	/* Sticky Overflow Bit */
	} B;
	int I;
	unsigned int U;

} CPU0_CCNT_type;
#define CPU0_CCNT	(*( CPU0_CCNT_type *) 0xf881fc04u)	/* CPU Clock Cycle Count */
#define CPU0_ICNT	(*( CPU0_CCNT_type *) 0xf881fc08u)	/* Instruction Count */
#define CPU0_M1CNT	(*( CPU0_CCNT_type *) 0xf881fc0cu)	/* Multi-Count Register 1 */
#define CPU0_M2CNT	(*( CPU0_CCNT_type *) 0xf881fc10u)	/* Multi-Count Register 2 */
#define CPU0_M3CNT	(*( CPU0_CCNT_type *) 0xf881fc14u)	/* Multi-Count Register 3 */
#define CPU1_CCNT	(*( CPU0_CCNT_type *) 0xf883fc04u)	/* CPU Clock Cycle Count */
#define CPU1_ICNT	(*( CPU0_CCNT_type *) 0xf883fc08u)	/* Instruction Count */
#define CPU1_M1CNT	(*( CPU0_CCNT_type *) 0xf883fc0cu)	/* Multi-Count Register 1 */
#define CPU1_M2CNT	(*( CPU0_CCNT_type *) 0xf883fc10u)	/* Multi-Count Register 2 */
#define CPU1_M3CNT	(*( CPU0_CCNT_type *) 0xf883fc14u)	/* Multi-Count Register 3 */
#define CPU2_CCNT	(*( CPU0_CCNT_type *) 0xf885fc04u)	/* CPU Clock Cycle Count */
#define CPU2_ICNT	(*( CPU0_CCNT_type *) 0xf885fc08u)	/* Instruction Count */
#define CPU2_M1CNT	(*( CPU0_CCNT_type *) 0xf885fc0cu)	/* Multi-Count Register 1 */
#define CPU2_M2CNT	(*( CPU0_CCNT_type *) 0xf885fc10u)	/* Multi-Count Register 2 */
#define CPU2_M3CNT	(*( CPU0_CCNT_type *) 0xf885fc14u)	/* Multi-Count Register 3 */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 CM             : 1;	/* Counter Mode */
		unsigned __sfrbit32 CE             : 1;	/* Count Enable */
		unsigned __sfrbit32 M1             : 3;	/* M1CNT Configuration */
		unsigned __sfrbit32 M2             : 3;	/* M2CNT Configuration */
		unsigned __sfrbit32 M3             : 3;	/* M3CNT Configuration */
		/* const */ unsigned __sfrbit32 RES            : 21;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} CPU0_CCTRL_type;
#define CPU0_CCTRL	(*( CPU0_CCTRL_type *) 0xf881fc00u)	/* Counter Control */
#define CPU1_CCTRL	(*( CPU0_CCTRL_type *) 0xf883fc00u)	/* Counter Control */
#define CPU2_CCTRL	(*( CPU0_CCTRL_type *) 0xf885fc00u)	/* Counter Control */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned __sfrbit32 RES            : 3;	/* Reserved */
		unsigned __sfrbit32 RM             : 1;	/* Rounding Mode Compatibility */
		unsigned __sfrbit32 SP             : 1;	/* SYSCON Safety Protection Mode Compatibility */
		/* const */ unsigned __sfrbit32 RES_4          : 27;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} CPU0_COMPAT_type;
#define CPU0_COMPAT	(*( CPU0_COMPAT_type *) 0xf8819400u)	/* Compatibility Control Register */
#define CPU1_COMPAT	(*( CPU0_COMPAT_type *) 0xf8839400u)	/* Compatibility Control Register */
#define CPU2_COMPAT	(*( CPU0_COMPAT_type *) 0xf8859400u)	/* Compatibility Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 bCORE_ID       : 3;	/* Core Identification Number */
		/* const */ unsigned __sfrbit32 RES            : 29;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} CPU0_CORE_ID_type;
#define CPU0_CORE_ID	(*( CPU0_CORE_ID_type *) 0xf881fe1cu)	/* CPU0 Core Identification Register */
#define CPU1_CORE_ID	(*( CPU0_CORE_ID_type *) 0xf883fe1cu)	/* CPU1 Core Identification Register */
#define CPU2_CORE_ID	(*( CPU0_CORE_ID_type *) 0xf885fe1cu)	/* CPU2 Core Identification Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned __sfrbit32 RES            : 3;	/* Reserved */
		unsigned __sfrbit32 LOWBND         : 29;	/* CPRy Lower Boundary Address */
	} B;
	int I;
	unsigned int U;

} CPU0_CPR0_L_type;
#define CPU0_CPR0_L	(*( CPU0_CPR0_L_type *) 0xf881d000u)	/* CPU0Code Protection Range 0 Lower Bound Register */
#define CPU0_CPR1_L	(*( CPU0_CPR0_L_type *) 0xf881d008u)	/* CPU0Code Protection Range 1 Lower Bound Register */
#define CPU0_CPR2_L	(*( CPU0_CPR0_L_type *) 0xf881d010u)	/* CPU0Code Protection Range 2 Lower Bound Register */
#define CPU0_CPR3_L	(*( CPU0_CPR0_L_type *) 0xf881d018u)	/* CPU0Code Protection Range 3 Lower Bound Register */
#define CPU0_CPR4_L	(*( CPU0_CPR0_L_type *) 0xf881d020u)	/* CPU0Code Protection Range 4 Lower Bound Register */
#define CPU0_CPR5_L	(*( CPU0_CPR0_L_type *) 0xf881d028u)	/* CPU0Code Protection Range 5 Lower Bound Register */
#define CPU0_CPR6_L	(*( CPU0_CPR0_L_type *) 0xf881d030u)	/* CPU0Code Protection Range 6 Lower Bound Register */
#define CPU0_CPR7_L	(*( CPU0_CPR0_L_type *) 0xf881d038u)	/* CPU0Code Protection Range 7 Lower Bound Register */
#define CPU1_CPR0_L	(*( CPU0_CPR0_L_type *) 0xf883d000u)	/* CPU1 Code Protection Range 0 Lower Bound Register */
#define CPU1_CPR1_L	(*( CPU0_CPR0_L_type *) 0xf883d008u)	/* CPU1 Code Protection Range 1 Lower Bound Register */
#define CPU1_CPR2_L	(*( CPU0_CPR0_L_type *) 0xf883d010u)	/* CPU1 Code Protection Range 2 Lower Bound Register */
#define CPU1_CPR3_L	(*( CPU0_CPR0_L_type *) 0xf883d018u)	/* CPU1 Code Protection Range 3 Lower Bound Register */
#define CPU1_CPR4_L	(*( CPU0_CPR0_L_type *) 0xf883d020u)	/* CPU1 Code Protection Range 4 Lower Bound Register */
#define CPU1_CPR5_L	(*( CPU0_CPR0_L_type *) 0xf883d028u)	/* CPU1 Code Protection Range 5 Lower Bound Register */
#define CPU1_CPR6_L	(*( CPU0_CPR0_L_type *) 0xf883d030u)	/* CPU1 Code Protection Range 6 Lower Bound Register */
#define CPU1_CPR7_L	(*( CPU0_CPR0_L_type *) 0xf883d038u)	/* CPU1 Code Protection Range 7 Lower Bound Register */
#define CPU2_CPR0_L	(*( CPU0_CPR0_L_type *) 0xf885d000u)	/* CPU2 Code Protection Range 0 Lower Bound Register */
#define CPU2_CPR1_L	(*( CPU0_CPR0_L_type *) 0xf885d008u)	/* CPU2 Code Protection Range 1 Lower Bound Register */
#define CPU2_CPR2_L	(*( CPU0_CPR0_L_type *) 0xf885d010u)	/* CPU2 Code Protection Range 2 Lower Bound Register */
#define CPU2_CPR3_L	(*( CPU0_CPR0_L_type *) 0xf885d018u)	/* CPU2 Code Protection Range 3 Lower Bound Register */
#define CPU2_CPR4_L	(*( CPU0_CPR0_L_type *) 0xf885d020u)	/* CPU2 Code Protection Range 4 Lower Bound Register */
#define CPU2_CPR5_L	(*( CPU0_CPR0_L_type *) 0xf885d028u)	/* CPU2 Code Protection Range 5 Lower Bound Register */
#define CPU2_CPR6_L	(*( CPU0_CPR0_L_type *) 0xf885d030u)	/* CPU2 Code Protection Range 6 Lower Bound Register */
#define CPU2_CPR7_L	(*( CPU0_CPR0_L_type *) 0xf885d038u)	/* CPU2 Code Protection Range 7 Lower Bound Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned __sfrbit32 RES            : 3;	/* Reserved */
		unsigned __sfrbit32 UPPBND         : 29;	/* CPR0_m Upper Boundary Address */
	} B;
	int I;
	unsigned int U;

} CPU0_CPR0_U_type;
#define CPU0_CPR0_U	(*( CPU0_CPR0_U_type *) 0xf881d004u)	/* CPU0 Code Protection Range 0 Upper Bound Register */
#define CPU0_CPR1_U	(*( CPU0_CPR0_U_type *) 0xf881d00cu)	/* CPU0 Code Protection Range 1 Upper Bound Register */
#define CPU0_CPR2_U	(*( CPU0_CPR0_U_type *) 0xf881d014u)	/* CPU0 Code Protection Range 2 Upper Bound Register */
#define CPU0_CPR3_U	(*( CPU0_CPR0_U_type *) 0xf881d01cu)	/* CPU0 Code Protection Range 3 Upper Bound Register */
#define CPU0_CPR4_U	(*( CPU0_CPR0_U_type *) 0xf881d024u)	/* CPU0 Code Protection Range 4 Upper Bound Register */
#define CPU0_CPR5_U	(*( CPU0_CPR0_U_type *) 0xf881d02cu)	/* CPU0 Code Protection Range 5 Upper Bound Register */
#define CPU0_CPR6_U	(*( CPU0_CPR0_U_type *) 0xf881d034u)	/* CPU0 Code Protection Range 6 Upper Bound Register */
#define CPU0_CPR7_U	(*( CPU0_CPR0_U_type *) 0xf881d03cu)	/* CPU0 Code Protection Range 7 Upper Bound Register */
#define CPU1_CPR0_U	(*( CPU0_CPR0_U_type *) 0xf883d004u)	/* CPU1 Code Protection Range 0 Upper Bound Register */
#define CPU1_CPR1_U	(*( CPU0_CPR0_U_type *) 0xf883d00cu)	/* CPU1 Code Protection Range 1 Upper Bound Register */
#define CPU1_CPR2_U	(*( CPU0_CPR0_U_type *) 0xf883d014u)	/* CPU1 Code Protection Range 2 Upper Bound Register */
#define CPU1_CPR3_U	(*( CPU0_CPR0_U_type *) 0xf883d01cu)	/* CPU1 Code Protection Range 3 Upper Bound Register */
#define CPU1_CPR4_U	(*( CPU0_CPR0_U_type *) 0xf883d024u)	/* CPU1 Code Protection Range 4 Upper Bound Register */
#define CPU1_CPR5_U	(*( CPU0_CPR0_U_type *) 0xf883d02cu)	/* CPU1 Code Protection Range 5 Upper Bound Register */
#define CPU1_CPR6_U	(*( CPU0_CPR0_U_type *) 0xf883d034u)	/* CPU1 Code Protection Range 6 Upper Bound Register */
#define CPU1_CPR7_U	(*( CPU0_CPR0_U_type *) 0xf883d03cu)	/* CPU1 Code Protection Range 7 Upper Bound Register */
#define CPU2_CPR0_U	(*( CPU0_CPR0_U_type *) 0xf885d004u)	/* CPU2 Code Protection Range 0 Upper Bound Register */
#define CPU2_CPR1_U	(*( CPU0_CPR0_U_type *) 0xf885d00cu)	/* CPU2 Code Protection Range 1 Upper Bound Register */
#define CPU2_CPR2_U	(*( CPU0_CPR0_U_type *) 0xf885d014u)	/* CPU2 Code Protection Range 2 Upper Bound Register */
#define CPU2_CPR3_U	(*( CPU0_CPR0_U_type *) 0xf885d01cu)	/* CPU2 Code Protection Range 3 Upper Bound Register */
#define CPU2_CPR4_U	(*( CPU0_CPR0_U_type *) 0xf885d024u)	/* CPU2 Code Protection Range 4 Upper Bound Register */
#define CPU2_CPR5_U	(*( CPU0_CPR0_U_type *) 0xf885d02cu)	/* CPU2 Code Protection Range 5 Upper Bound Register */
#define CPU2_CPR6_U	(*( CPU0_CPR0_U_type *) 0xf885d034u)	/* CPU2 Code Protection Range 6 Upper Bound Register */
#define CPU2_CPR7_U	(*( CPU0_CPR0_U_type *) 0xf885d03cu)	/* CPU2 Code Protection Range 7 Upper Bound Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned __sfrbit32 MOD_REV        : 8;	/* Revision Number */
		/* const */ unsigned __sfrbit32 MOD_32B        : 8;	/* 32-Bit Module Enable */
		/* const */ unsigned __sfrbit32 MOD            : 16;	/* Module Identification Number */
	} B;
	int I;
	unsigned int U;

} CPU0_CPU_ID_type;
#define CPU0_CPU_ID	(*( CPU0_CPU_ID_type *) 0xf881fe18u)	/* CPU0 Identification Register TC1.6P */
#define CPU1_CPU_ID	(*( CPU0_CPU_ID_type *) 0xf883fe18u)	/* CPU1 Identification Register TC1.6P */
#define CPU2_CPU_ID	(*( CPU0_CPU_ID_type *) 0xf885fe18u)	/* CPU2 Identification Register TC1.6P */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 XE_n_          : 8;	/* Execute Enable Range select */
		/* const */ unsigned __sfrbit32 RES            : 24;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} CPU0_CPXE_0_type;
#define CPU0_CPXE_0	(*( CPU0_CPXE_0_type *) 0xf881e000u)	/* CPU0 Code Protection Execute Enable Register Set 0 */
#define CPU0_CPXE_1	(*( CPU0_CPXE_0_type *) 0xf881e004u)	/* CPU0 Code Protection Execute Enable Register Set 1 */
#define CPU0_CPXE_2	(*( CPU0_CPXE_0_type *) 0xf881e008u)	/* CPU0 Code Protection Execute Enable Register Set 2 */
#define CPU0_CPXE_3	(*( CPU0_CPXE_0_type *) 0xf881e00cu)	/* CPU0 Code Protection Execute Enable Register Set 3 */
#define CPU1_CPXE_0	(*( CPU0_CPXE_0_type *) 0xf883e000u)	/* CPU1 Code Protection Execute Enable Register Set 0 */
#define CPU1_CPXE_1	(*( CPU0_CPXE_0_type *) 0xf883e004u)	/* CPU1 Code Protection Execute Enable Register Set 1 */
#define CPU1_CPXE_2	(*( CPU0_CPXE_0_type *) 0xf883e008u)	/* CPU1 Code Protection Execute Enable Register Set 2 */
#define CPU1_CPXE_3	(*( CPU0_CPXE_0_type *) 0xf883e00cu)	/* CPU1 Code Protection Execute Enable Register Set 3 */
#define CPU2_CPXE_0	(*( CPU0_CPXE_0_type *) 0xf885e000u)	/* CPU2 Code Protection Execute Enable Register Set 0 */
#define CPU2_CPXE_1	(*( CPU0_CPXE_0_type *) 0xf885e004u)	/* CPU2 Code Protection Execute Enable Register Set 1 */
#define CPU2_CPXE_2	(*( CPU0_CPXE_0_type *) 0xf885e008u)	/* CPU2 Code Protection Execute Enable Register Set 2 */
#define CPU2_CPXE_3	(*( CPU0_CPXE_0_type *) 0xf885e00cu)	/* CPU2 Code Protection Execute Enable Register Set 3 */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 EVTA           : 3;	/* Event Associated */
		unsigned __sfrbit32 BBM            : 1;	/* Break Before Make (BBM) or Break After Make (BAM) Selection */
		unsigned __sfrbit32 BOD            : 1;	/* Breakout Disable */
		unsigned __sfrbit32 SUSP           : 1;	/* CDC Suspend-Out Signal State */
		unsigned __sfrbit32 CNT            : 2;	/* Counter */
		/* const */ unsigned __sfrbit32 RES            : 24;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} CPU0_CREVT_type;
#define CPU0_CREVT	(*( CPU0_CREVT_type *) 0xf881fd0cu)	/* Core Register Access Event */
#define CPU0_SWEVT	(*( CPU0_CREVT_type *) 0xf881fd10u)	/* Software Debug Event */
#define CPU1_CREVT	(*( CPU0_CREVT_type *) 0xf883fd0cu)	/* Core Register Access Event */
#define CPU1_SWEVT	(*( CPU0_CREVT_type *) 0xf883fd10u)	/* Software Debug Event */
#define CPU2_CREVT	(*( CPU0_CREVT_type *) 0xf885fd0cu)	/* Core Register Access Event */
#define CPU2_SWEVT	(*( CPU0_CREVT_type *) 0xf885fd10u)	/* Software Debug Event */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned __sfrbit32 CID            : 3;	/* Customer ID */
		/* const */ unsigned __sfrbit32 RES            : 29;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} CPU0_CUS_ID_type;
#define CPU0_CUS_ID	(*( CPU0_CUS_ID_type *) 0xf881fe50u)	/* CPU0 Customer ID register */
#define CPU1_CUS_ID	(*( CPU0_CUS_ID_type *) 0xf883fe50u)	/* CPU1 Customer ID register */
#define CPU2_CUS_ID	(*( CPU0_CUS_ID_type *) 0xf885fe50u)	/* CPU2 Customer ID register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned __sfrbit32 RES            : 3;	/* Reserved */
		unsigned __sfrbit32 SBE            : 1;	/* Store Bus Error */
		/* const */ unsigned __sfrbit32 RES_3          : 5;	/* Reserved */
		unsigned __sfrbit32 CWE            : 1;	/* Cache Writeback Error */
		unsigned __sfrbit32 CFE            : 1;	/* Cache Flush Error */
		/* const */ unsigned __sfrbit32 RES_6          : 3;	/* Reserved */
		unsigned __sfrbit32 SOE            : 1;	/* Store Overlay Error */
		unsigned __sfrbit32 SME            : 1;	/* Store MIST Error */
		/* const */ unsigned __sfrbit32 RES_9          : 16;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} CPU0_DATR_type;
#define CPU0_DATR	(*( CPU0_DATR_type *) 0xf8819018u)	/* Data Asynchronous Trap Register */
#define CPU1_DATR	(*( CPU0_DATR_type *) 0xf8839018u)	/* Data Asynchronous Trap Register */
#define CPU2_DATR	(*( CPU0_DATR_type *) 0xf8859018u)	/* Data Asynchronous Trap Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned __sfrbit32 DE             : 1;	/* Debug Enable */
		unsigned __sfrbit32 HALT           : 2;	/* CPU Halt Request / Status Field */
		/* const */ unsigned __sfrbit32 SIH            : 1;	/* Suspend-in Halt */
		unsigned __sfrbit32 SUSP           : 1;	/* Current State of the Core Suspend-Out Signal */
		/* const */ unsigned __sfrbit32 RES            : 1;	/* Reserved */
		/* const */ unsigned __sfrbit32 PREVSUSP       : 1;	/* Previous State of Core Suspend-Out Signal */
		unsigned __sfrbit32 PEVT           : 1;	/* Posted Event */
		/* const */ unsigned __sfrbit32 EVTSRC         : 5;	/* Event Source */
		/* const */ unsigned __sfrbit32 RES_9          : 19;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} CPU0_DBGSR_type;
#define CPU0_DBGSR	(*( CPU0_DBGSR_type *) 0xf881fd00u)	/* Debug Status Register */
#define CPU1_DBGSR	(*( CPU0_DBGSR_type *) 0xf883fd00u)	/* Debug Status Register */
#define CPU2_DBGSR	(*( CPU0_DBGSR_type *) 0xf885fd00u)	/* Debug Status Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 DTA            : 1;	/* Debug Trap Active Bit */
		/* const */ unsigned __sfrbit32 RES            : 31;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} CPU0_DBGTCR_type;
#define CPU0_DBGTCR	(*( CPU0_DBGTCR_type *) 0xf881fd48u)	/* Debug Trap Control Register */
#define CPU1_DBGTCR	(*( CPU0_DBGTCR_type *) 0xf883fd48u)	/* Debug Trap Control Register */
#define CPU2_DBGTCR	(*( CPU0_DBGTCR_type *) 0xf885fd48u)	/* Debug Trap Control Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned __sfrbit32 RES            : 1;	/* Reserved */
		unsigned __sfrbit32 DCBYP          : 1;	/* Data Cache Bypass */
		/* const */ unsigned __sfrbit32 RES_3          : 30;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} CPU0_DCON0_type;
#define CPU0_DCON0	(*( CPU0_DCON0_type *) 0xf8819040u)	/* Data Memory Control Register */
#define CPU1_DCON0	(*( CPU0_DCON0_type *) 0xf8839040u)	/* Data Memory Control Register */
#define CPU2_DCON0	(*( CPU0_DCON0_type *) 0xf8859040u)	/* Data Memory Control Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned __sfrbit32 DCACHE_SZE     : 16;	/* Data Cache Size */
		/* const */ unsigned __sfrbit32 DSCRATCH_SZE   : 16;	/* Data Scratch Size */
	} B;
	int I;
	unsigned int U;

} CPU0_DCON2_type;
#define CPU0_DCON2	(*( CPU0_DCON2_type *) 0xf8819000u)	/* Data Control Register 2 */
#define CPU1_DCON2	(*( CPU0_DCON2_type *) 0xf8839000u)	/* Data Control Register 2 */
#define CPU2_DCON2	(*( CPU0_DCON2_type *) 0xf8859000u)	/* Data Control Register 2 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned __sfrbit32 RES            : 6;	/* Reserved */
		unsigned __sfrbit32 DCXValue       : 26;	/* Debug Context Save Area Pointer */
	} B;
	int I;
	unsigned int U;

} CPU0_DCX_type;
#define CPU0_DCX	(*( CPU0_DCX_type *) 0xf881fd44u)	/* CPU0 Debug Context Save Area Pointer */
#define CPU1_DCX	(*( CPU0_DCX_type *) 0xf883fd44u)	/* CPU1 Debug Context Save Area Pointer */
#define CPU2_DCX	(*( CPU0_DCX_type *) 0xf885fd44u)	/* CPU2 Debug Context Save Area Pointer */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned __sfrbit32 ERROR_ADDRESS  : 32;	/* Error Address */
	} B;
	int I;
	unsigned int U;

} CPU0_DEADD_type;
#define CPU0_DEADD	(*( CPU0_DEADD_type *) 0xf881901cu)	/* Data Error Address Register */
#define CPU1_DEADD	(*( CPU0_DEADD_type *) 0xf883901cu)	/* Data Error Address Register */
#define CPU2_DEADD	(*( CPU0_DEADD_type *) 0xf885901cu)	/* Data Error Address Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned __sfrbit32 TA             : 32;	/* Transaction Address */
	} B;
	int I;
	unsigned int U;

} CPU0_DIEAR_type;
#define CPU0_DIEAR	(*( CPU0_DIEAR_type *) 0xf8819020u)	/* Data Integrity Error Address Register */
#define CPU0_PIEAR	(*( CPU0_DIEAR_type *) 0xf8819210u)	/* Program Integrity Error Address Register */
#define CPU1_DIEAR	(*( CPU0_DIEAR_type *) 0xf8839020u)	/* Data Integrity Error Address Register */
#define CPU1_PIEAR	(*( CPU0_DIEAR_type *) 0xf8839210u)	/* Program Integrity Error Address Register */
#define CPU2_DIEAR	(*( CPU0_DIEAR_type *) 0xf8859020u)	/* Data Integrity Error Address Register */
#define CPU2_PIEAR	(*( CPU0_DIEAR_type *) 0xf8859210u)	/* Program Integrity Error Address Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 IED            : 1;	/* Integrity Error Detected */
		/* const */ unsigned __sfrbit32 IE_T           : 1;	/* Integrity Error - Tag Memory */
		/* const */ unsigned __sfrbit32 IE_C           : 1;	/* Integrity Error - Cache Memory */
		/* const */ unsigned __sfrbit32 IE_S           : 1;	/* Integrity Error - Scratchpad Memory */
		/* const */ unsigned __sfrbit32 IE_BI          : 1;	/* Integrity Error - Bus Integrity */
		/* const */ unsigned __sfrbit32 E_INFO         : 6;	/* Error Information */
		/* const */ unsigned __sfrbit32 IE_DUAL        : 1;	/* Dual Bit Error Detected */
		/* const */ unsigned __sfrbit32 IE_SP          : 1;	/* Safety Protection Error Detected */
		/* const */ unsigned __sfrbit32 IE_BS          : 1;	/* Bus Slave Access Indicator */
		/* const */ unsigned __sfrbit32 RES            : 18;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} CPU0_DIETR_type;
#define CPU0_DIETR	(*( CPU0_DIETR_type *) 0xf8819024u)	/* Data Integrity Error Trap Register */
#define CPU1_DIETR	(*( CPU0_DIETR_type *) 0xf8839024u)	/* Data Integrity Error Trap Register */
#define CPU2_DIETR	(*( CPU0_DIETR_type *) 0xf8859024u)	/* Data Integrity Error Trap Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned __sfrbit32 RES            : 1;	/* Reserved */
		unsigned __sfrbit32 DMSValue       : 31;	/* Debug Monitor Start Address */
	} B;
	int I;
	unsigned int U;

} CPU0_DMS_type;
#define CPU0_DMS	(*( CPU0_DMS_type *) 0xf881fd40u)	/* CPU0 Debug Monitor Start Address */
#define CPU1_DMS	(*( CPU0_DMS_type *) 0xf883fd40u)	/* CPU1 Debug Monitor Start Address */
#define CPU2_DMS	(*( CPU0_DMS_type *) 0xf885fd40u)	/* CPU2 Debug Monitor Start Address */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned __sfrbit32 RES            : 3;	/* Reserved */
		unsigned __sfrbit32 LOWBND         : 29;	/* DPRy Lower Boundary Address */
	} B;
	int I;
	unsigned int U;

} CPU0_DPR0_L_type;
#define CPU0_DPR0_L	(*( CPU0_DPR0_L_type *) 0xf881c000u)	/* CPU0 Data Protection Range 0, Lower Bound Register */
#define CPU0_DPR10_L	(*( CPU0_DPR0_L_type *) 0xf881c050u)	/* CPU0 Data Protection Range 10, Lower Bound Register */
#define CPU0_DPR11_L	(*( CPU0_DPR0_L_type *) 0xf881c058u)	/* CPU0 Data Protection Range 11, Lower Bound Register */
#define CPU0_DPR12_L	(*( CPU0_DPR0_L_type *) 0xf881c060u)	/* CPU0 Data Protection Range 12, Lower Bound Register */
#define CPU0_DPR13_L	(*( CPU0_DPR0_L_type *) 0xf881c068u)	/* CPU0 Data Protection Range 13, Lower Bound Register */
#define CPU0_DPR14_L	(*( CPU0_DPR0_L_type *) 0xf881c070u)	/* CPU0 Data Protection Range 14, Lower Bound Register */
#define CPU0_DPR15_L	(*( CPU0_DPR0_L_type *) 0xf881c078u)	/* CPU0 Data Protection Range 15, Lower Bound Register */
#define CPU0_DPR1_L	(*( CPU0_DPR0_L_type *) 0xf881c008u)	/* CPU0 Data Protection Range 1, Lower Bound Register */
#define CPU0_DPR2_L	(*( CPU0_DPR0_L_type *) 0xf881c010u)	/* CPU0 Data Protection Range 2, Lower Bound Register */
#define CPU0_DPR3_L	(*( CPU0_DPR0_L_type *) 0xf881c018u)	/* CPU0 Data Protection Range 3, Lower Bound Register */
#define CPU0_DPR4_L	(*( CPU0_DPR0_L_type *) 0xf881c020u)	/* CPU0 Data Protection Range 4, Lower Bound Register */
#define CPU0_DPR5_L	(*( CPU0_DPR0_L_type *) 0xf881c028u)	/* CPU0 Data Protection Range 5, Lower Bound Register */
#define CPU0_DPR6_L	(*( CPU0_DPR0_L_type *) 0xf881c030u)	/* CPU0 Data Protection Range 6, Lower Bound Register */
#define CPU0_DPR7_L	(*( CPU0_DPR0_L_type *) 0xf881c038u)	/* CPU0 Data Protection Range 7, Lower Bound Register */
#define CPU0_DPR8_L	(*( CPU0_DPR0_L_type *) 0xf881c040u)	/* CPU0 Data Protection Range 8, Lower Bound Register */
#define CPU0_DPR9_L	(*( CPU0_DPR0_L_type *) 0xf881c048u)	/* CPU0 Data Protection Range 9, Lower Bound Register */
#define CPU1_DPR0_L	(*( CPU0_DPR0_L_type *) 0xf883c000u)	/* CPU1 Data Protection Range 0, Lower Bound Register */
#define CPU1_DPR10_L	(*( CPU0_DPR0_L_type *) 0xf883c050u)	/* CPU1 Data Protection Range 10, Lower Bound Register */
#define CPU1_DPR11_L	(*( CPU0_DPR0_L_type *) 0xf883c058u)	/* CPU1 Data Protection Range 11, Lower Bound Register */
#define CPU1_DPR12_L	(*( CPU0_DPR0_L_type *) 0xf883c060u)	/* CPU1 Data Protection Range 12, Lower Bound Register */
#define CPU1_DPR13_L	(*( CPU0_DPR0_L_type *) 0xf883c068u)	/* CPU1 Data Protection Range 13, Lower Bound Register */
#define CPU1_DPR14_L	(*( CPU0_DPR0_L_type *) 0xf883c070u)	/* CPU1 Data Protection Range 14, Lower Bound Register */
#define CPU1_DPR15_L	(*( CPU0_DPR0_L_type *) 0xf883c078u)	/* CPU1 Data Protection Range 15, Lower Bound Register */
#define CPU1_DPR1_L	(*( CPU0_DPR0_L_type *) 0xf883c008u)	/* CPU1 Data Protection Range 1, Lower Bound Register */
#define CPU1_DPR2_L	(*( CPU0_DPR0_L_type *) 0xf883c010u)	/* CPU1 Data Protection Range 2, Lower Bound Register */
#define CPU1_DPR3_L	(*( CPU0_DPR0_L_type *) 0xf883c018u)	/* CPU1 Data Protection Range 3, Lower Bound Register */
#define CPU1_DPR4_L	(*( CPU0_DPR0_L_type *) 0xf883c020u)	/* CPU1 Data Protection Range 4, Lower Bound Register */
#define CPU1_DPR5_L	(*( CPU0_DPR0_L_type *) 0xf883c028u)	/* CPU1 Data Protection Range 5, Lower Bound Register */
#define CPU1_DPR6_L	(*( CPU0_DPR0_L_type *) 0xf883c030u)	/* CPU1 Data Protection Range 6, Lower Bound Register */
#define CPU1_DPR7_L	(*( CPU0_DPR0_L_type *) 0xf883c038u)	/* CPU1 Data Protection Range 7, Lower Bound Register */
#define CPU1_DPR8_L	(*( CPU0_DPR0_L_type *) 0xf883c040u)	/* CPU1 Data Protection Range 8, Lower Bound Register */
#define CPU1_DPR9_L	(*( CPU0_DPR0_L_type *) 0xf883c048u)	/* CPU1 Data Protection Range 9, Lower Bound Register */
#define CPU2_DPR0_L	(*( CPU0_DPR0_L_type *) 0xf885c000u)	/* CPU2 Data Protection Range 0, Lower Bound Register */
#define CPU2_DPR10_L	(*( CPU0_DPR0_L_type *) 0xf885c050u)	/* CPU2 Data Protection Range 10, Lower Bound Register */
#define CPU2_DPR11_L	(*( CPU0_DPR0_L_type *) 0xf885c058u)	/* CPU2 Data Protection Range 11, Lower Bound Register */
#define CPU2_DPR12_L	(*( CPU0_DPR0_L_type *) 0xf885c060u)	/* CPU2 Data Protection Range 12, Lower Bound Register */
#define CPU2_DPR13_L	(*( CPU0_DPR0_L_type *) 0xf885c068u)	/* CPU2 Data Protection Range 13, Lower Bound Register */
#define CPU2_DPR14_L	(*( CPU0_DPR0_L_type *) 0xf885c070u)	/* CPU2 Data Protection Range 14, Lower Bound Register */
#define CPU2_DPR15_L	(*( CPU0_DPR0_L_type *) 0xf885c078u)	/* CPU2 Data Protection Range 15, Lower Bound Register */
#define CPU2_DPR1_L	(*( CPU0_DPR0_L_type *) 0xf885c008u)	/* CPU2 Data Protection Range 1, Lower Bound Register */
#define CPU2_DPR2_L	(*( CPU0_DPR0_L_type *) 0xf885c010u)	/* CPU2 Data Protection Range 2, Lower Bound Register */
#define CPU2_DPR3_L	(*( CPU0_DPR0_L_type *) 0xf885c018u)	/* CPU2 Data Protection Range 3, Lower Bound Register */
#define CPU2_DPR4_L	(*( CPU0_DPR0_L_type *) 0xf885c020u)	/* CPU2 Data Protection Range 4, Lower Bound Register */
#define CPU2_DPR5_L	(*( CPU0_DPR0_L_type *) 0xf885c028u)	/* CPU2 Data Protection Range 5, Lower Bound Register */
#define CPU2_DPR6_L	(*( CPU0_DPR0_L_type *) 0xf885c030u)	/* CPU2 Data Protection Range 6, Lower Bound Register */
#define CPU2_DPR7_L	(*( CPU0_DPR0_L_type *) 0xf885c038u)	/* CPU2 Data Protection Range 7, Lower Bound Register */
#define CPU2_DPR8_L	(*( CPU0_DPR0_L_type *) 0xf885c040u)	/* CPU2 Data Protection Range 8, Lower Bound Register */
#define CPU2_DPR9_L	(*( CPU0_DPR0_L_type *) 0xf885c048u)	/* CPU2 Data Protection Range 9, Lower Bound Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned __sfrbit32 RES            : 3;	/* Reserved */
		unsigned __sfrbit32 UPPBND         : 29;	/* DPRy Upper Boundary Address */
	} B;
	int I;
	unsigned int U;

} CPU0_DPR0_U_type;
#define CPU0_DPR0_U	(*( CPU0_DPR0_U_type *) 0xf881c004u)	/* CPU0 Data Protection Range 0, Upper Bound Register */
#define CPU0_DPR10_U	(*( CPU0_DPR0_U_type *) 0xf881c054u)	/* CPU0 Data Protection Range 10, Upper Bound Register */
#define CPU0_DPR11_U	(*( CPU0_DPR0_U_type *) 0xf881c05cu)	/* CPU0 Data Protection Range 11, Upper Bound Register */
#define CPU0_DPR12_U	(*( CPU0_DPR0_U_type *) 0xf881c064u)	/* CPU0 Data Protection Range 12, Upper Bound Register */
#define CPU0_DPR13_U	(*( CPU0_DPR0_U_type *) 0xf881c06cu)	/* CPU0 Data Protection Range 13, Upper Bound Register */
#define CPU0_DPR14_U	(*( CPU0_DPR0_U_type *) 0xf881c074u)	/* CPU0 Data Protection Range 14, Upper Bound Register */
#define CPU0_DPR15_U	(*( CPU0_DPR0_U_type *) 0xf881c07cu)	/* CPU0 Data Protection Range 15, Upper Bound Register */
#define CPU0_DPR1_U	(*( CPU0_DPR0_U_type *) 0xf881c00cu)	/* CPU0 Data Protection Range 1, Upper Bound Register */
#define CPU0_DPR2_U	(*( CPU0_DPR0_U_type *) 0xf881c014u)	/* CPU0 Data Protection Range 2, Upper Bound Register */
#define CPU0_DPR3_U	(*( CPU0_DPR0_U_type *) 0xf881c01cu)	/* CPU0 Data Protection Range 3, Upper Bound Register */
#define CPU0_DPR4_U	(*( CPU0_DPR0_U_type *) 0xf881c024u)	/* CPU0 Data Protection Range 4, Upper Bound Register */
#define CPU0_DPR5_U	(*( CPU0_DPR0_U_type *) 0xf881c02cu)	/* CPU0 Data Protection Range 5, Upper Bound Register */
#define CPU0_DPR6_U	(*( CPU0_DPR0_U_type *) 0xf881c034u)	/* CPU0 Data Protection Range 6, Upper Bound Register */
#define CPU0_DPR7_U	(*( CPU0_DPR0_U_type *) 0xf881c03cu)	/* CPU0 Data Protection Range 7, Upper Bound Register */
#define CPU0_DPR8_U	(*( CPU0_DPR0_U_type *) 0xf881c044u)	/* CPU0 Data Protection Range 8, Upper Bound Register */
#define CPU0_DPR9_U	(*( CPU0_DPR0_U_type *) 0xf881c04cu)	/* CPU0 Data Protection Range 9, Upper Bound Register */
#define CPU1_DPR0_U	(*( CPU0_DPR0_U_type *) 0xf883c004u)	/* CPU1 Data Protection Range 0, Upper Bound Register */
#define CPU1_DPR10_U	(*( CPU0_DPR0_U_type *) 0xf883c054u)	/* CPU1 Data Protection Range 10, Upper Bound Register */
#define CPU1_DPR11_U	(*( CPU0_DPR0_U_type *) 0xf883c05cu)	/* CPU1 Data Protection Range 11, Upper Bound Register */
#define CPU1_DPR12_U	(*( CPU0_DPR0_U_type *) 0xf883c064u)	/* CPU1 Data Protection Range 12, Upper Bound Register */
#define CPU1_DPR13_U	(*( CPU0_DPR0_U_type *) 0xf883c06cu)	/* CPU1 Data Protection Range 13, Upper Bound Register */
#define CPU1_DPR14_U	(*( CPU0_DPR0_U_type *) 0xf883c074u)	/* CPU1 Data Protection Range 14, Upper Bound Register */
#define CPU1_DPR15_U	(*( CPU0_DPR0_U_type *) 0xf883c07cu)	/* CPU1 Data Protection Range 15, Upper Bound Register */
#define CPU1_DPR1_U	(*( CPU0_DPR0_U_type *) 0xf883c00cu)	/* CPU1 Data Protection Range 1, Upper Bound Register */
#define CPU1_DPR2_U	(*( CPU0_DPR0_U_type *) 0xf883c014u)	/* CPU1 Data Protection Range 2, Upper Bound Register */
#define CPU1_DPR3_U	(*( CPU0_DPR0_U_type *) 0xf883c01cu)	/* CPU1 Data Protection Range 3, Upper Bound Register */
#define CPU1_DPR4_U	(*( CPU0_DPR0_U_type *) 0xf883c024u)	/* CPU1 Data Protection Range 4, Upper Bound Register */
#define CPU1_DPR5_U	(*( CPU0_DPR0_U_type *) 0xf883c02cu)	/* CPU1 Data Protection Range 5, Upper Bound Register */
#define CPU1_DPR6_U	(*( CPU0_DPR0_U_type *) 0xf883c034u)	/* CPU1 Data Protection Range 6, Upper Bound Register */
#define CPU1_DPR7_U	(*( CPU0_DPR0_U_type *) 0xf883c03cu)	/* CPU1 Data Protection Range 7, Upper Bound Register */
#define CPU1_DPR8_U	(*( CPU0_DPR0_U_type *) 0xf883c044u)	/* CPU1 Data Protection Range 8, Upper Bound Register */
#define CPU1_DPR9_U	(*( CPU0_DPR0_U_type *) 0xf883c04cu)	/* CPU1 Data Protection Range 9, Upper Bound Register */
#define CPU2_DPR0_U	(*( CPU0_DPR0_U_type *) 0xf885c004u)	/* CPU2 Data Protection Range 0, Upper Bound Register */
#define CPU2_DPR10_U	(*( CPU0_DPR0_U_type *) 0xf885c054u)	/* CPU2 Data Protection Range 10, Upper Bound Register */
#define CPU2_DPR11_U	(*( CPU0_DPR0_U_type *) 0xf885c05cu)	/* CPU2 Data Protection Range 11, Upper Bound Register */
#define CPU2_DPR12_U	(*( CPU0_DPR0_U_type *) 0xf885c064u)	/* CPU2 Data Protection Range 12, Upper Bound Register */
#define CPU2_DPR13_U	(*( CPU0_DPR0_U_type *) 0xf885c06cu)	/* CPU2 Data Protection Range 13, Upper Bound Register */
#define CPU2_DPR14_U	(*( CPU0_DPR0_U_type *) 0xf885c074u)	/* CPU2 Data Protection Range 14, Upper Bound Register */
#define CPU2_DPR15_U	(*( CPU0_DPR0_U_type *) 0xf885c07cu)	/* CPU2 Data Protection Range 15, Upper Bound Register */
#define CPU2_DPR1_U	(*( CPU0_DPR0_U_type *) 0xf885c00cu)	/* CPU2 Data Protection Range 1, Upper Bound Register */
#define CPU2_DPR2_U	(*( CPU0_DPR0_U_type *) 0xf885c014u)	/* CPU2 Data Protection Range 2, Upper Bound Register */
#define CPU2_DPR3_U	(*( CPU0_DPR0_U_type *) 0xf885c01cu)	/* CPU2 Data Protection Range 3, Upper Bound Register */
#define CPU2_DPR4_U	(*( CPU0_DPR0_U_type *) 0xf885c024u)	/* CPU2 Data Protection Range 4, Upper Bound Register */
#define CPU2_DPR5_U	(*( CPU0_DPR0_U_type *) 0xf885c02cu)	/* CPU2 Data Protection Range 5, Upper Bound Register */
#define CPU2_DPR6_U	(*( CPU0_DPR0_U_type *) 0xf885c034u)	/* CPU2 Data Protection Range 6, Upper Bound Register */
#define CPU2_DPR7_U	(*( CPU0_DPR0_U_type *) 0xf885c03cu)	/* CPU2 Data Protection Range 7, Upper Bound Register */
#define CPU2_DPR8_U	(*( CPU0_DPR0_U_type *) 0xf885c044u)	/* CPU2 Data Protection Range 8, Upper Bound Register */
#define CPU2_DPR9_U	(*( CPU0_DPR0_U_type *) 0xf885c04cu)	/* CPU2 Data Protection Range 9, Upper Bound Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 RE_n_          : 16;	/* Read Enable Range Select */
		/* const */ unsigned __sfrbit32 RES            : 16;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} CPU0_DPRE_0_type;
#define CPU0_DPRE_0	(*( CPU0_DPRE_0_type *) 0xf881e010u)	/* CPU0 Data Protection Read Enable Register Set 0 */
#define CPU0_DPRE_1	(*( CPU0_DPRE_0_type *) 0xf881e014u)	/* CPU0 Data Protection Read Enable Register Set 1 */
#define CPU0_DPRE_2	(*( CPU0_DPRE_0_type *) 0xf881e018u)	/* CPU0 Data Protection Read Enable Register Set 2 */
#define CPU0_DPRE_3	(*( CPU0_DPRE_0_type *) 0xf881e01cu)	/* CPU0 Data Protection Read Enable Register Set 3 */
#define CPU1_DPRE_0	(*( CPU0_DPRE_0_type *) 0xf883e010u)	/* CPU1 Data Protection Read Enable Register Set 0 */
#define CPU1_DPRE_1	(*( CPU0_DPRE_0_type *) 0xf883e014u)	/* CPU1 Data Protection Read Enable Register Set 1 */
#define CPU1_DPRE_2	(*( CPU0_DPRE_0_type *) 0xf883e018u)	/* CPU1 Data Protection Read Enable Register Set 2 */
#define CPU1_DPRE_3	(*( CPU0_DPRE_0_type *) 0xf883e01cu)	/* CPU1 Data Protection Read Enable Register Set 3 */
#define CPU2_DPRE_0	(*( CPU0_DPRE_0_type *) 0xf885e010u)	/* CPU2 Data Protection Read Enable Register Set 0 */
#define CPU2_DPRE_1	(*( CPU0_DPRE_0_type *) 0xf885e014u)	/* CPU2 Data Protection Read Enable Register Set 1 */
#define CPU2_DPRE_2	(*( CPU0_DPRE_0_type *) 0xf885e018u)	/* CPU2 Data Protection Read Enable Register Set 2 */
#define CPU2_DPRE_3	(*( CPU0_DPRE_0_type *) 0xf885e01cu)	/* CPU2 Data Protection Read Enable Register Set 3 */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 WE_n_          : 16;	/* Write Enable Range Select */
		/* const */ unsigned __sfrbit32 RES            : 16;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} CPU0_DPWE_0_type;
#define CPU0_DPWE_0	(*( CPU0_DPWE_0_type *) 0xf881e020u)	/* CPU0 Data Protection Write Enable Register Set 0 */
#define CPU0_DPWE_1	(*( CPU0_DPWE_0_type *) 0xf881e024u)	/* CPU0 Data Protection Write Enable Register Set 1 */
#define CPU0_DPWE_2	(*( CPU0_DPWE_0_type *) 0xf881e028u)	/* CPU0 Data Protection Write Enable Register Set 2 */
#define CPU0_DPWE_3	(*( CPU0_DPWE_0_type *) 0xf881e02cu)	/* CPU0 Data Protection Write Enable Register Set 3 */
#define CPU1_DPWE_0	(*( CPU0_DPWE_0_type *) 0xf883e020u)	/* CPU1 Data Protection Write Enable Register Set 0 */
#define CPU1_DPWE_1	(*( CPU0_DPWE_0_type *) 0xf883e024u)	/* CPU1 Data Protection Write Enable Register Set 1 */
#define CPU1_DPWE_2	(*( CPU0_DPWE_0_type *) 0xf883e028u)	/* CPU1 Data Protection Write Enable Register Set 2 */
#define CPU1_DPWE_3	(*( CPU0_DPWE_0_type *) 0xf883e02cu)	/* CPU1 Data Protection Write Enable Register Set 3 */
#define CPU2_DPWE_0	(*( CPU0_DPWE_0_type *) 0xf885e020u)	/* CPU2 Data Protection Write Enable Register Set 0 */
#define CPU2_DPWE_1	(*( CPU0_DPWE_0_type *) 0xf885e024u)	/* CPU2 Data Protection Write Enable Register Set 1 */
#define CPU2_DPWE_2	(*( CPU0_DPWE_0_type *) 0xf885e028u)	/* CPU2 Data Protection Write Enable Register Set 2 */
#define CPU2_DPWE_3	(*( CPU0_DPWE_0_type *) 0xf885e02cu)	/* CPU2 Data Protection Write Enable Register Set 3 */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 SRE            : 1;	/* Scratch Range Error */
		unsigned __sfrbit32 GAE            : 1;	/* Global Address Error */
		unsigned __sfrbit32 LBE            : 1;	/* Load Bus Error */
		/* const */ unsigned __sfrbit32 RES            : 3;	/* Reserved */
		unsigned __sfrbit32 CRE            : 1;	/* Cache Refill Error */
		/* const */ unsigned __sfrbit32 RES_6          : 7;	/* Reserved */
		unsigned __sfrbit32 DTME           : 1;	/* DTAG MSIST Error */
		unsigned __sfrbit32 LOE            : 1;	/* Load Overlay Error */
		unsigned __sfrbit32 SDE            : 1;	/* Segment Difference Error */
		unsigned __sfrbit32 SCE            : 1;	/* Segment Crossing Error */
		unsigned __sfrbit32 CAC            : 1;	/* CSFR Access Error */
		unsigned __sfrbit32 MPE            : 1;	/* Memory Protection Error */
		unsigned __sfrbit32 CLE            : 1;	/* Context Location Error */
		/* const */ unsigned __sfrbit32 RES_14         : 3;	/* Reserved */
		unsigned __sfrbit32 ALN            : 1;	/* Alignment Error */
		/* const */ unsigned __sfrbit32 RES_16         : 7;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} CPU0_DSTR_type;
#define CPU0_DSTR	(*( CPU0_DSTR_type *) 0xf8819010u)	/* Data Synchronous Trap Register */
#define CPU1_DSTR	(*( CPU0_DSTR_type *) 0xf8839010u)	/* Data Synchronous Trap Register */
#define CPU2_DSTR	(*( CPU0_DSTR_type *) 0xf8859010u)	/* Data Synchronous Trap Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 EVTA           : 3;	/* Event Associated */
		unsigned __sfrbit32 BBM            : 1;	/* Break Before Make (BBM) or Break After Make (BAM) Selection */
		unsigned __sfrbit32 BOD            : 1;	/* Breakout Disable */
		unsigned __sfrbit32 SUSP           : 1;	/* CDC Suspend-Out Signal State */
		unsigned __sfrbit32 CNT            : 2;	/* Counter */
		/* const */ unsigned __sfrbit32 RES            : 24;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} CPU0_EXEVT_type;
#define CPU0_EXEVT	(*( CPU0_EXEVT_type *) 0xf881fd08u)	/* External Event Register */
#define CPU1_EXEVT	(*( CPU0_EXEVT_type *) 0xf883fd08u)	/* External Event Register */
#define CPU2_EXEVT	(*( CPU0_EXEVT_type *) 0xf885fd08u)	/* External Event Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 FCXO           : 16;	/* FCX Offset Address Field */
		unsigned __sfrbit32 FCXS           : 4;	/* FCX Segment Address Field */
		/* const */ unsigned __sfrbit32 RES            : 12;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} CPU0_FCX_type;
#define CPU0_FCX	(*( CPU0_FCX_type *) 0xf881fe38u)	/* Free CSA List Head Pointer */
#define CPU1_FCX	(*( CPU0_FCX_type *) 0xf883fe38u)	/* Free CSA List Head Pointer */
#define CPU2_FCX	(*( CPU0_FCX_type *) 0xf885fe38u)	/* Free CSA List Head Pointer */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned __sfrbit32 TST            : 1;	/* Trap Status */
		unsigned __sfrbit32 TCL            : 1;	/* Trap Clear */
		/* const */ unsigned __sfrbit32 RES            : 6;	/* Reserved */
		/* const */ unsigned __sfrbit32 RM             : 2;	/* Captured Rounding Mode */
		/* const */ unsigned __sfrbit32 RES_5          : 8;	/* Reserved */
		unsigned __sfrbit32 FXE            : 1;	/* FX Trap Enable */
		unsigned __sfrbit32 FUE            : 1;	/* FU Trap Enable */
		unsigned __sfrbit32 FZE            : 1;	/* FZ Trap Enable */
		unsigned __sfrbit32 FVE            : 1;	/* FV Trap Enable */
		unsigned __sfrbit32 FIE            : 1;	/* FI Trap Enable */
		/* const */ unsigned __sfrbit32 RES_11         : 3;	/* Reserved */
		/* const */ unsigned __sfrbit32 FX             : 1;	/* Captured FX */
		/* const */ unsigned __sfrbit32 FU             : 1;	/* Captured FU */
		/* const */ unsigned __sfrbit32 FZ             : 1;	/* Captured FZ */
		/* const */ unsigned __sfrbit32 FV             : 1;	/* Captured FV */
		/* const */ unsigned __sfrbit32 FI             : 1;	/* Captured FI */
		/* const */ unsigned __sfrbit32 RES_17         : 1;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} CPU0_FPU_TRAP_CON_type;
#define CPU0_FPU_TRAP_CON	(*( CPU0_FPU_TRAP_CON_type *) 0xf881a000u)	/* CPU0 Trap Control Register */
#define CPU1_FPU_TRAP_CON	(*( CPU0_FPU_TRAP_CON_type *) 0xf883a000u)	/* CPU1 Trap Control Register */
#define CPU2_FPU_TRAP_CON	(*( CPU0_FPU_TRAP_CON_type *) 0xf885a000u)	/* CPU2 Trap Control Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned __sfrbit32 OPC            : 8;	/* Captured Opcode */
		/* const */ unsigned __sfrbit32 FMT            : 1;	/* Captured Instruction Format */
		/* const */ unsigned __sfrbit32 RES            : 7;	/* Reserved */
		/* const */ unsigned __sfrbit32 DREG           : 4;	/* Captured Destination Register */
		/* const */ unsigned __sfrbit32 RES_5          : 12;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} CPU0_FPU_TRAP_OPC_type;
#define CPU0_FPU_TRAP_OPC	(*( CPU0_FPU_TRAP_OPC_type *) 0xf881a008u)	/* CPU0 Trapping Instruction Opcode Register */
#define CPU1_FPU_TRAP_OPC	(*( CPU0_FPU_TRAP_OPC_type *) 0xf883a008u)	/* CPU1 Trapping Instruction Opcode Register */
#define CPU2_FPU_TRAP_OPC	(*( CPU0_FPU_TRAP_OPC_type *) 0xf885a008u)	/* CPU2 Trapping Instruction Opcode Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned __sfrbit32 bPC            : 32;	/* Captured Program Counter */
	} B;
	int I;
	unsigned int U;

} CPU0_FPU_TRAP_PC_type;
#define CPU0_FPU_TRAP_PC	(*( CPU0_FPU_TRAP_PC_type *) 0xf881a004u)	/* CPU0 Trapping Instruction Program Counter Register */
#define CPU1_FPU_TRAP_PC	(*( CPU0_FPU_TRAP_PC_type *) 0xf883a004u)	/* CPU1 Trapping Instruction Program Counter Register */
#define CPU2_FPU_TRAP_PC	(*( CPU0_FPU_TRAP_PC_type *) 0xf885a004u)	/* CPU2 Trapping Instruction Program Counter Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned __sfrbit32 SRC1           : 32;	/* Captured SRC1 Operand */
	} B;
	int I;
	unsigned int U;

} CPU0_FPU_TRAP_SRC1_type;
#define CPU0_FPU_TRAP_SRC1	(*( CPU0_FPU_TRAP_SRC1_type *) 0xf881a010u)	/* CPU0 Trapping Instruction Operand Register */
#define CPU1_FPU_TRAP_SRC1	(*( CPU0_FPU_TRAP_SRC1_type *) 0xf883a010u)	/* CPU1 Trapping Instruction Operand Register */
#define CPU2_FPU_TRAP_SRC1	(*( CPU0_FPU_TRAP_SRC1_type *) 0xf885a010u)	/* CPU2 Trapping Instruction Operand Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned __sfrbit32 SRC2           : 32;	/* Captured SRC2 Operand */
	} B;
	int I;
	unsigned int U;

} CPU0_FPU_TRAP_SRC2_type;
#define CPU0_FPU_TRAP_SRC2	(*( CPU0_FPU_TRAP_SRC2_type *) 0xf881a014u)	/* CPU0 Trapping Instruction Operand Register */
#define CPU1_FPU_TRAP_SRC2	(*( CPU0_FPU_TRAP_SRC2_type *) 0xf883a014u)	/* CPU1 Trapping Instruction Operand Register */
#define CPU2_FPU_TRAP_SRC2	(*( CPU0_FPU_TRAP_SRC2_type *) 0xf885a014u)	/* CPU2 Trapping Instruction Operand Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned __sfrbit32 SRC3           : 32;	/* Captured SRC3 Operand */
	} B;
	int I;
	unsigned int U;

} CPU0_FPU_TRAP_SRC3_type;
#define CPU0_FPU_TRAP_SRC3	(*( CPU0_FPU_TRAP_SRC3_type *) 0xf881a018u)	/* Trapping Instruction Operand Register */
#define CPU1_FPU_TRAP_SRC3	(*( CPU0_FPU_TRAP_SRC3_type *) 0xf883a018u)	/* Trapping Instruction Operand Register */
#define CPU2_FPU_TRAP_SRC3	(*( CPU0_FPU_TRAP_SRC3_type *) 0xf885a018u)	/* Trapping Instruction Operand Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 CCPN           : 10;	/* Current CPU Priority Number */
		/* const */ unsigned __sfrbit32 RES            : 5;	/* Reserved */
		unsigned __sfrbit32 IE             : 1;	/* Global Interrupt Enable Bit */
		/* const */ unsigned __sfrbit32 PIPN           : 10;	/* Pending Interrupt Priority Number */
		/* const */ unsigned __sfrbit32 RES_5          : 6;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} CPU0_ICR_type;
#define CPU0_ICR	(*( CPU0_ICR_type *) 0xf881fe2cu)	/* Interrupt Control Register */
#define CPU1_ICR	(*( CPU0_ICR_type *) 0xf883fe2cu)	/* Interrupt Control Register */
#define CPU2_ICR	(*( CPU0_ICR_type *) 0xf885fe2cu)	/* Interrupt Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 bISP           : 32;	/* Interrupt Stack Pointer */
	} B;
	int I;
	unsigned int U;

} CPU0_ISP_type;
#define CPU0_ISP	(*( CPU0_ISP_type *) 0xf881fe28u)	/* Interrupt Stack Pointer */
#define CPU1_ISP	(*( CPU0_ISP_type *) 0xf883fe28u)	/* Interrupt Stack Pointer */
#define CPU2_ISP	(*( CPU0_ISP_type *) 0xf885fe28u)	/* Interrupt Stack Pointer */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 LCXO           : 16;	/* LCX Offset Field */
		unsigned __sfrbit32 LCXS           : 4;	/* LCX Segment Address */
		/* const */ unsigned __sfrbit32 RES            : 12;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} CPU0_LCX_type;
#define CPU0_LCX	(*( CPU0_LCX_type *) 0xf881fe3cu)	/* Free CSA List Limit Pointer */
#define CPU1_LCX	(*( CPU0_LCX_type *) 0xf883fe3cu)	/* Free CSA List Limit Pointer */
#define CPU2_LCX	(*( CPU0_LCX_type *) 0xf885fe3cu)	/* Free CSA List Limit Pointer */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned __sfrbit32 RES            : 1;	/* Reserved */
		/* const */ unsigned __sfrbit32 bPC            : 31;	/* Program Counter */
	} B;
	int I;
	unsigned int U;

} CPU0_PC_type;
#define CPU0_PC	(*( CPU0_PC_type *) 0xf881fe08u)	/* Program Counter */
#define CPU1_PC	(*( CPU0_PC_type *) 0xf883fe08u)	/* Program Counter */
#define CPU2_PC	(*( CPU0_PC_type *) 0xf885fe08u)	/* Program Counter */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned __sfrbit32 RES            : 1;	/* Reserved */
		unsigned __sfrbit32 PCBYP          : 1;	/* Program Cache Bypass */
		/* const */ unsigned __sfrbit32 RES_3          : 30;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} CPU0_PCON0_type;
#define CPU0_PCON0	(*( CPU0_PCON0_type *) 0xf881920cu)	/* Program Control 0 */
#define CPU1_PCON0	(*( CPU0_PCON0_type *) 0xf883920cu)	/* Program Control 0 */
#define CPU2_PCON0	(*( CPU0_PCON0_type *) 0xf885920cu)	/* Program Control 0 */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 PCINV          : 1;	/* Program Cache Invalidate */
		unsigned __sfrbit32 PBINV          : 1;	/* Program Buffer Invalidate */
		/* const */ unsigned __sfrbit32 RES            : 30;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} CPU0_PCON1_type;
#define CPU0_PCON1	(*( CPU0_PCON1_type *) 0xf8819204u)	/* Program Control 1 */
#define CPU1_PCON1	(*( CPU0_PCON1_type *) 0xf8839204u)	/* Program Control 1 */
#define CPU2_PCON1	(*( CPU0_PCON1_type *) 0xf8859204u)	/* Program Control 1 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned __sfrbit32 PCACHE_SZE     : 16;	/* Program Cache Size (ICACHE) in KBytes */
		/* const */ unsigned __sfrbit32 PSCRATCH_SZE   : 16;	/* Program Scratch Size in KBytes */
	} B;
	int I;
	unsigned int U;

} CPU0_PCON2_type;
#define CPU0_PCON2	(*( CPU0_PCON2_type *) 0xf8819208u)	/* Program Control 2 */
#define CPU1_PCON2	(*( CPU0_PCON2_type *) 0xf8839208u)	/* Program Control 2 */
#define CPU2_PCON2	(*( CPU0_PCON2_type *) 0xf8859208u)	/* Program Control 2 */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 PCXO           : 16;	/* Previous Context Pointer Offset Field */
		unsigned __sfrbit32 PCXS           : 4;	/* Previous Context Pointer Segment Address */
		unsigned __sfrbit32 UL             : 1;	/* Upper or Lower Context Tag */
		unsigned __sfrbit32 PIE            : 1;	/* Previous Interrupt Enable */
		unsigned __sfrbit32 PCPN           : 10;	/* Previous CPU Priority Number */
	} B;
	int I;
	unsigned int U;

} CPU0_PCXI_type;
#define CPU0_PCXI	(*( CPU0_PCXI_type *) 0xf881fe00u)	/* Previous Context Information Register */
#define CPU1_PCXI	(*( CPU0_PCXI_type *) 0xf883fe00u)	/* Previous Context Information Register */
#define CPU2_PCXI	(*( CPU0_PCXI_type *) 0xf885fe00u)	/* Previous Context Information Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 IED            : 1;	/* Integrity Error Detected */
		/* const */ unsigned __sfrbit32 IE_T           : 1;	/* Integrity Error - Tag Memory */
		/* const */ unsigned __sfrbit32 IE_C           : 1;	/* Integrity Error - Cache Memory */
		/* const */ unsigned __sfrbit32 IE_S           : 1;	/* Integrity Error - Scratchpad Memory */
		/* const */ unsigned __sfrbit32 IE_BI          : 1;	/* Integrity Error - Bus Interface */
		/* const */ unsigned __sfrbit32 E_INFO         : 6;	/* Error Information */
		/* const */ unsigned __sfrbit32 IE_DUAL        : 1;	/* Integrity Error - Dual Error Detected */
		/* const */ unsigned __sfrbit32 IE_SP          : 1;	/* Safety Protection Error Detected */
		/* const */ unsigned __sfrbit32 IE_BS          : 1;	/* Bus Slave Access Indicator */
		/* const */ unsigned __sfrbit32 RES            : 18;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} CPU0_PIETR_type;
#define CPU0_PIETR	(*( CPU0_PIETR_type *) 0xf8819214u)	/* Program Integrity Error Trap Register */
#define CPU1_PIETR	(*( CPU0_PIETR_type *) 0xf8839214u)	/* Program Integrity Error Trap Register */
#define CPU2_PIETR	(*( CPU0_PIETR_type *) 0xf8859214u)	/* Program Integrity Error Trap Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 DAC            : 10;	/* Data Access Cacheability Segments 9H-0H */
		/* const */ unsigned __sfrbit32 DAC_2          : 1;	/* Data Access Cacheability Segments AH */
		unsigned __sfrbit32 DAC_3          : 2;	/* Data Access Cacheability Segments CH,BH */
		/* const */ unsigned __sfrbit32 DAC_4          : 3;	/* Data Access Cacheability Segments FH,EH,DH */
		/* const */ unsigned __sfrbit32 RES            : 16;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} CPU0_PMA0_type;
#define CPU0_PMA0	(*( CPU0_PMA0_type *) 0xf8818100u)	/* Data Access CacheabilityRegister */
#define CPU1_PMA0	(*( CPU0_PMA0_type *) 0xf8838100u)	/* Data Access CacheabilityRegister */
#define CPU2_PMA0	(*( CPU0_PMA0_type *) 0xf8858100u)	/* Data Access CacheabilityRegister */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 CAC            : 10;	/* Code Access Cacheability Segments 9H-0H */
		/* const */ unsigned __sfrbit32 CAC_2          : 1;	/* Code Access Cacheability Segments AH */
		unsigned __sfrbit32 CAC_3          : 1;	/* Code Access Cacheability Segments BH */
		/* const */ unsigned __sfrbit32 CAC_4          : 1;	/* Code Access Cacheability Segments CH */
		unsigned __sfrbit32 CAC_5          : 1;	/* Code Access Cacheability Segments DH */
		/* const */ unsigned __sfrbit32 CAC_6          : 2;	/* Code Access Cacheability Segments FH,EH */
		/* const */ unsigned __sfrbit32 RES            : 16;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} CPU0_PMA1_type;
#define CPU0_PMA1	(*( CPU0_PMA1_type *) 0xf8818104u)	/* Code Access CacheabilityRegister */
#define CPU1_PMA1	(*( CPU0_PMA1_type *) 0xf8838104u)	/* Code Access CacheabilityRegister */
#define CPU2_PMA1	(*( CPU0_PMA1_type *) 0xf8858104u)	/* Code Access CacheabilityRegister */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned __sfrbit32 PSI            : 16;	/* Peripheral Space Identifier Segments FH-0H */
		/* const */ unsigned __sfrbit32 RES            : 16;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} CPU0_PMA2_type;
#define CPU0_PMA2	(*( CPU0_PMA2_type *) 0xf8818108u)	/* Peripheral Space Identifier register */
#define CPU1_PMA2	(*( CPU0_PMA2_type *) 0xf8838108u)	/* Peripheral Space Identifier register */
#define CPU2_PMA2	(*( CPU0_PMA2_type *) 0xf8858108u)	/* Peripheral Space Identifier register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 FRE            : 1;	/* Fetch Range Error */
		/* const */ unsigned __sfrbit32 RES            : 1;	/* Reserved */
		unsigned __sfrbit32 FBE            : 1;	/* Fetch Bus Error */
		/* const */ unsigned __sfrbit32 RES_4          : 9;	/* Reserved */
		unsigned __sfrbit32 FPE            : 1;	/* Fetch Peripheral Error */
		/* const */ unsigned __sfrbit32 RES_6          : 1;	/* Reserved */
		unsigned __sfrbit32 FME            : 1;	/* Fetch MSIST Error */
		/* const */ unsigned __sfrbit32 RES_8          : 17;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} CPU0_PSTR_type;
#define CPU0_PSTR	(*( CPU0_PSTR_type *) 0xf8819200u)	/* Program Synchronous Trap Register */
#define CPU1_PSTR	(*( CPU0_PSTR_type *) 0xf8839200u)	/* Program Synchronous Trap Register */
#define CPU2_PSTR	(*( CPU0_PSTR_type *) 0xf8859200u)	/* Program Synchronous Trap Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 CDC            : 7;	/* Call Depth Counter */
		unsigned __sfrbit32 CDE            : 1;	/* Call Depth Count Enable */
		unsigned __sfrbit32 GW             : 1;	/* Global Address Register Write Permission */
		unsigned __sfrbit32 IS             : 1;	/* Interrupt Stack Control */
		unsigned __sfrbit32 IO             : 2;	/* Access Privilege Level Control (I/O Privilege) */
		unsigned __sfrbit32 PRS            : 2;	/* Protection Register Set */
		unsigned __sfrbit32 S              : 1;	/* Safe Task Identifier */
		/* const */ unsigned __sfrbit32 RES            : 12;	/* Reserved */
		unsigned __sfrbit32 SAV            : 1;	/* Sticky Advance Overflow Flag */
		unsigned __sfrbit32 AV             : 1;	/* Advance Overflow Flag */
		unsigned __sfrbit32 SV             : 1;	/* Sticky Overflow Flag */
		unsigned __sfrbit32 V              : 1;	/* Overflow Flag */
		unsigned __sfrbit32 C              : 1;	/* Carry Flag */
	} B;
	int I;
	unsigned int U;

} CPU0_PSW_type;
#define CPU0_PSW	(*( CPU0_PSW_type *) 0xf881fe04u)	/* Program Status Word */
#define CPU1_PSW	(*( CPU0_PSW_type *) 0xf883fe04u)	/* Program Status Word */
#define CPU2_PSW	(*( CPU0_PSW_type *) 0xf885fe04u)	/* Program Status Word */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 ADFLIP         : 8;	/* Address ECC Bit Flip */
		unsigned __sfrbit32 ADTYPE         : 2;	/* Type of error */
		/* const */ unsigned __sfrbit32 RES            : 21;	/* Reserved */
		unsigned __sfrbit32 AE             : 1;	/* Activate Error Enable */
	} B;
	int I;
	unsigned int U;

} CPU0_SEGEN_type;
#define CPU0_SEGEN	(*( CPU0_SEGEN_type *) 0xf8811030u)	/* SRI Error Generation Register */
#define CPU1_SEGEN	(*( CPU0_SEGEN_type *) 0xf8831030u)	/* SRI Error Generation Register */
#define CPU2_SEGEN	(*( CPU0_SEGEN_type *) 0xf8851030u)	/* SRI Error Generation Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 bPC            : 1;	/* Instruction Cache Memory SIST Mode Access Control */
		/* const */ unsigned __sfrbit32 RES            : 1;	/* Reserved */
		unsigned __sfrbit32 PT             : 1;	/* Program Tag Memory SIST Mode Access Control */
		/* const */ unsigned __sfrbit32 RES_4          : 5;	/* Reserved */
		unsigned __sfrbit32 DC             : 1;	/* Data Cache Memory SIST Mode Access Control */
		/* const */ unsigned __sfrbit32 RES_6          : 1;	/* Reserved */
		unsigned __sfrbit32 DT             : 1;	/* Data Tag Memory SIST Mode Access Control */
		/* const */ unsigned __sfrbit32 RES_8          : 5;	/* Reserved */
		/* const */ unsigned __sfrbit32 RES_9          : 8;	/* Reserved */
		unsigned __sfrbit32 IODT           : 1;	/* In-Order Data Transactions */
		/* const */ unsigned __sfrbit32 RES_11         : 7;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} CPU0_SMACON_type;
#define CPU0_SMACON	(*( CPU0_SMACON_type *) 0xf881900cu)	/* SIST Mode Access Control Register */
#define CPU1_SMACON	(*( CPU0_SMACON_type *) 0xf883900cu)	/* SIST Mode Access Control Register */
#define CPU2_SMACON	(*( CPU0_SMACON_type *) 0xf885900cu)	/* SIST Mode Access Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 FCDSF          : 1;	/* Free Context List Depleted Sticky Flag */
		unsigned __sfrbit32 PROTEN         : 1;	/* Memory Protection Enable */
		unsigned __sfrbit32 TPROTEN        : 1;	/* Temporal Protection Enable */
		unsigned __sfrbit32 IS             : 1;	/* Initial State */
		unsigned __sfrbit32 IT             : 1;	/* Initial State */
		/* const */ unsigned __sfrbit32 RES            : 27;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} CPU0_SYSCON_type;
#define CPU0_SYSCON	(*( CPU0_SYSCON_type *) 0xf881fe14u)	/* System Configuration Register */
#define CPU1_SYSCON	(*( CPU0_SYSCON_type *) 0xf883fe14u)	/* System Configuration Register */
#define CPU2_SYSCON	(*( CPU0_SYSCON_type *) 0xf885fe14u)	/* System Configuration Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 ASI            : 5;	/* Address Space Identifier */
		/* const */ unsigned __sfrbit32 RES            : 27;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} CPU0_TASK_ASI_type;
#define CPU0_TASK_ASI	(*( CPU0_TASK_ASI_type *) 0xf8818004u)	/* CPU0 Task Address Space Identifier Register */
#define CPU1_TASK_ASI	(*( CPU0_TASK_ASI_type *) 0xf8838004u)	/* CPU1 Task Address Space Identifier Register */
#define CPU2_TASK_ASI	(*( CPU0_TASK_ASI_type *) 0xf8858004u)	/* CPU2 Task Address Space Identifier Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned __sfrbit32 TEXP0          : 1;	/* Timer0 Expired Flag */
		/* const */ unsigned __sfrbit32 TEXP1          : 1;	/* Timer1 Expired Flag */
		/* const */ unsigned __sfrbit32 TEXP2          : 1;	/* Timer1 Expired Flag */
		/* const */ unsigned __sfrbit32 RES            : 13;	/* Reserved */
		/* const */ unsigned __sfrbit32 TTRAP          : 1;	/* Temporal Protection Trap */
		/* const */ unsigned __sfrbit32 RES_6          : 15;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} CPU0_TPS_CON_type;
#define CPU0_TPS_CON	(*( CPU0_TPS_CON_type *) 0xf881e400u)	/* CPU0 Temporal Protection System Control Register */
#define CPU1_TPS_CON	(*( CPU0_TPS_CON_type *) 0xf883e400u)	/* CPU1 Temporal Protection System Control Register */
#define CPU2_TPS_CON	(*( CPU0_TPS_CON_type *) 0xf885e400u)	/* CPU2 Temporal Protection System Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 Timer          : 32;	/* Temporal Protection Timer */
	} B;
	int I;
	unsigned int U;

} CPU0_TPS_TIMER0_type;
#define CPU0_TPS_TIMER0	(*( CPU0_TPS_TIMER0_type *) 0xf881e404u)	/* CPU0 Temporal Protection System Timer Register 0 */
#define CPU0_TPS_TIMER1	(*( CPU0_TPS_TIMER0_type *) 0xf881e408u)	/* CPU0 Temporal Protection System Timer Register 0 */
#define CPU0_TPS_TIMER2	(*( CPU0_TPS_TIMER0_type *) 0xf881e40cu)	/* CPU0 Temporal Protection System Timer Register 0 */
#define CPU1_TPS_TIMER0	(*( CPU0_TPS_TIMER0_type *) 0xf883e404u)	/* CPU1 Temporal Protection System Timer Register 1 */
#define CPU1_TPS_TIMER1	(*( CPU0_TPS_TIMER0_type *) 0xf883e408u)	/* CPU1 Temporal Protection System Timer Register 1 */
#define CPU1_TPS_TIMER2	(*( CPU0_TPS_TIMER0_type *) 0xf883e40cu)	/* CPU1 Temporal Protection System Timer Register 1 */
#define CPU2_TPS_TIMER0	(*( CPU0_TPS_TIMER0_type *) 0xf885e404u)	/* CPU2 Temporal Protection System Timer Register 2 */
#define CPU2_TPS_TIMER1	(*( CPU0_TPS_TIMER0_type *) 0xf885e408u)	/* CPU2 Temporal Protection System Timer Register 2 */
#define CPU2_TPS_TIMER2	(*( CPU0_TPS_TIMER0_type *) 0xf885e40cu)	/* CPU2 Temporal Protection System Timer Register 2 */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 ADDR           : 32;	/* Comparison Address */
	} B;
	int I;
	unsigned int U;

} CPU0_TR0ADR_type;
#define CPU0_TR0ADR	(*( CPU0_TR0ADR_type *) 0xf881f004u)	/* Trigger Address 0 */
#define CPU0_TR1ADR	(*( CPU0_TR0ADR_type *) 0xf881f00cu)	/* Trigger Address 1 */
#define CPU0_TR2ADR	(*( CPU0_TR0ADR_type *) 0xf881f014u)	/* Trigger Address 2 */
#define CPU0_TR3ADR	(*( CPU0_TR0ADR_type *) 0xf881f01cu)	/* Trigger Address 3 */
#define CPU0_TR4ADR	(*( CPU0_TR0ADR_type *) 0xf881f024u)	/* Trigger Address 4 */
#define CPU0_TR5ADR	(*( CPU0_TR0ADR_type *) 0xf881f02cu)	/* Trigger Address 5 */
#define CPU0_TR6ADR	(*( CPU0_TR0ADR_type *) 0xf881f034u)	/* Trigger Address 6 */
#define CPU0_TR7ADR	(*( CPU0_TR0ADR_type *) 0xf881f03cu)	/* Trigger Address 7 */
#define CPU1_TR0ADR	(*( CPU0_TR0ADR_type *) 0xf883f004u)	/* Trigger Address 0 */
#define CPU1_TR1ADR	(*( CPU0_TR0ADR_type *) 0xf883f00cu)	/* Trigger Address 1 */
#define CPU1_TR2ADR	(*( CPU0_TR0ADR_type *) 0xf883f014u)	/* Trigger Address 2 */
#define CPU1_TR3ADR	(*( CPU0_TR0ADR_type *) 0xf883f01cu)	/* Trigger Address 3 */
#define CPU1_TR4ADR	(*( CPU0_TR0ADR_type *) 0xf883f024u)	/* Trigger Address 4 */
#define CPU1_TR5ADR	(*( CPU0_TR0ADR_type *) 0xf883f02cu)	/* Trigger Address 5 */
#define CPU1_TR6ADR	(*( CPU0_TR0ADR_type *) 0xf883f034u)	/* Trigger Address 6 */
#define CPU1_TR7ADR	(*( CPU0_TR0ADR_type *) 0xf883f03cu)	/* Trigger Address 7 */
#define CPU2_TR0ADR	(*( CPU0_TR0ADR_type *) 0xf885f004u)	/* Trigger Address 0 */
#define CPU2_TR1ADR	(*( CPU0_TR0ADR_type *) 0xf885f00cu)	/* Trigger Address 1 */
#define CPU2_TR2ADR	(*( CPU0_TR0ADR_type *) 0xf885f014u)	/* Trigger Address 2 */
#define CPU2_TR3ADR	(*( CPU0_TR0ADR_type *) 0xf885f01cu)	/* Trigger Address 3 */
#define CPU2_TR4ADR	(*( CPU0_TR0ADR_type *) 0xf885f024u)	/* Trigger Address 4 */
#define CPU2_TR5ADR	(*( CPU0_TR0ADR_type *) 0xf885f02cu)	/* Trigger Address 5 */
#define CPU2_TR6ADR	(*( CPU0_TR0ADR_type *) 0xf885f034u)	/* Trigger Address 6 */
#define CPU2_TR7ADR	(*( CPU0_TR0ADR_type *) 0xf885f03cu)	/* Trigger Address 7 */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 EVTA           : 3;	/* Event Associated */
		unsigned __sfrbit32 BBM            : 1;	/* Break Before Make (BBM) or Break After Make (BAM) Selection */
		unsigned __sfrbit32 BOD            : 1;	/* Breakout Disable */
		unsigned __sfrbit32 SUSP           : 1;	/* CDC Suspend-Out Signal State */
		unsigned __sfrbit32 CNT            : 2;	/* Counter */
		/* const */ unsigned __sfrbit32 RES            : 4;	/* Reserved */
		unsigned __sfrbit32 TYP            : 1;	/* Input Selection */
		unsigned __sfrbit32 RNG            : 1;	/* Compare Type */
		/* const */ unsigned __sfrbit32 RES_9          : 1;	/* Reserved */
		unsigned __sfrbit32 ASI_EN         : 1;	/* Enable ASI Comparison */
		unsigned __sfrbit32 ASI            : 5;	/* Address Space Identifier */
		/* const */ unsigned __sfrbit32 RES_12         : 6;	/* Reserved */
		unsigned __sfrbit32 AST            : 1;	/* Address Store */
		unsigned __sfrbit32 ALD            : 1;	/* Address Load */
		/* const */ unsigned __sfrbit32 RES_15         : 3;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} CPU0_TR0EVT_type;
#define CPU0_TR0EVT	(*( CPU0_TR0EVT_type *) 0xf881f000u)	/* Trigger Event 0 */
#define CPU0_TR1EVT	(*( CPU0_TR0EVT_type *) 0xf881f008u)	/* Trigger Event 1 */
#define CPU0_TR2EVT	(*( CPU0_TR0EVT_type *) 0xf881f010u)	/* Trigger Event 2 */
#define CPU0_TR3EVT	(*( CPU0_TR0EVT_type *) 0xf881f018u)	/* Trigger Event 3 */
#define CPU0_TR4EVT	(*( CPU0_TR0EVT_type *) 0xf881f020u)	/* Trigger Event 4 */
#define CPU0_TR5EVT	(*( CPU0_TR0EVT_type *) 0xf881f028u)	/* Trigger Event 5 */
#define CPU0_TR6EVT	(*( CPU0_TR0EVT_type *) 0xf881f030u)	/* Trigger Event 6 */
#define CPU0_TR7EVT	(*( CPU0_TR0EVT_type *) 0xf881f038u)	/* Trigger Event 7 */
#define CPU1_TR0EVT	(*( CPU0_TR0EVT_type *) 0xf883f000u)	/* Trigger Event 0 */
#define CPU1_TR1EVT	(*( CPU0_TR0EVT_type *) 0xf883f008u)	/* Trigger Event 1 */
#define CPU1_TR2EVT	(*( CPU0_TR0EVT_type *) 0xf883f010u)	/* Trigger Event 2 */
#define CPU1_TR3EVT	(*( CPU0_TR0EVT_type *) 0xf883f018u)	/* Trigger Event 3 */
#define CPU1_TR4EVT	(*( CPU0_TR0EVT_type *) 0xf883f020u)	/* Trigger Event 4 */
#define CPU1_TR5EVT	(*( CPU0_TR0EVT_type *) 0xf883f028u)	/* Trigger Event 5 */
#define CPU1_TR6EVT	(*( CPU0_TR0EVT_type *) 0xf883f030u)	/* Trigger Event 6 */
#define CPU1_TR7EVT	(*( CPU0_TR0EVT_type *) 0xf883f038u)	/* Trigger Event 7 */
#define CPU2_TR0EVT	(*( CPU0_TR0EVT_type *) 0xf885f000u)	/* Trigger Event 0 */
#define CPU2_TR1EVT	(*( CPU0_TR0EVT_type *) 0xf885f008u)	/* Trigger Event 1 */
#define CPU2_TR2EVT	(*( CPU0_TR0EVT_type *) 0xf885f010u)	/* Trigger Event 2 */
#define CPU2_TR3EVT	(*( CPU0_TR0EVT_type *) 0xf885f018u)	/* Trigger Event 3 */
#define CPU2_TR4EVT	(*( CPU0_TR0EVT_type *) 0xf885f020u)	/* Trigger Event 4 */
#define CPU2_TR5EVT	(*( CPU0_TR0EVT_type *) 0xf885f028u)	/* Trigger Event 5 */
#define CPU2_TR6EVT	(*( CPU0_TR0EVT_type *) 0xf885f030u)	/* Trigger Event 6 */
#define CPU2_TR7EVT	(*( CPU0_TR0EVT_type *) 0xf885f038u)	/* Trigger Event 7 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned __sfrbit32 T0             : 1;	/* Trigger-0 */
		/* const */ unsigned __sfrbit32 T1             : 1;	/* Trigger-1 */
		/* const */ unsigned __sfrbit32 T2             : 1;	/* Trigger-2 */
		/* const */ unsigned __sfrbit32 T3             : 1;	/* Trigger-3 */
		/* const */ unsigned __sfrbit32 T4             : 1;	/* Trigger-4 */
		/* const */ unsigned __sfrbit32 T5             : 1;	/* Trigger-5 */
		/* const */ unsigned __sfrbit32 T6             : 1;	/* Trigger-6 */
		/* const */ unsigned __sfrbit32 T7             : 1;	/* Trigger-7 */
		/* const */ unsigned __sfrbit32 RES            : 24;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} CPU0_TRIG_ACC_type;
#define CPU0_TRIG_ACC	(*( CPU0_TRIG_ACC_type *) 0xf881fd30u)	/* CPU0 Trigger Address x */
#define CPU1_TRIG_ACC	(*( CPU0_TRIG_ACC_type *) 0xf883fd30u)	/* CPU1 Trigger Address x */
#define CPU2_TRIG_ACC	(*( CPU0_TRIG_ACC_type *) 0xf885fd30u)	/* CPU2 Trigger Address x */


/* SPROT */
typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 EN             : 32;	/* Access Enable for Master TAG ID n (n= 0-31) */
	} B;
	int I;
	unsigned int U;

} CPU0_SPROT_ACCENA_type;
#define CPU0_SPROT_ACCENA	(*( CPU0_SPROT_ACCENA_type *) 0xf880e100u)	/* CPU0 Safety Protection Register Access Enable Register A */
#define CPU1_SPROT_ACCENA	(*( CPU0_SPROT_ACCENA_type *) 0xf882e100u)	/* CPU1 Safety Protection Register Access Enable Register A */
#define CPU2_SPROT_ACCENA	(*( CPU0_SPROT_ACCENA_type *) 0xf884e100u)	/* CPU2 Safety Protection Register Access Enable Register A */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned __sfrbit32 RES            : 32;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} CPU0_SPROT_ACCENB_type;
#define CPU0_SPROT_ACCENB	(*( CPU0_SPROT_ACCENB_type *) 0xf880e104u)	/* CPU0 Safety Protection Region Access Enable Register B */
#define CPU0_SPROT_RGNACCENB0	(*( CPU0_SPROT_ACCENB_type *) 0xf880e00cu)	/* CPU0 Safety Protection Region Access Enable Register B */
#define CPU0_SPROT_RGNACCENB1	(*( CPU0_SPROT_ACCENB_type *) 0xf880e01cu)	/* CPU0 Safety Protection Region Access Enable Register B */
#define CPU0_SPROT_RGNACCENB2	(*( CPU0_SPROT_ACCENB_type *) 0xf880e02cu)	/* CPU0 Safety Protection Region Access Enable Register B */
#define CPU0_SPROT_RGNACCENB3	(*( CPU0_SPROT_ACCENB_type *) 0xf880e03cu)	/* CPU0 Safety Protection Region Access Enable Register B */
#define CPU0_SPROT_RGNACCENB4	(*( CPU0_SPROT_ACCENB_type *) 0xf880e04cu)	/* CPU0 Safety Protection Region Access Enable Register B */
#define CPU0_SPROT_RGNACCENB5	(*( CPU0_SPROT_ACCENB_type *) 0xf880e05cu)	/* CPU0 Safety Protection Region Access Enable Register B */
#define CPU0_SPROT_RGNACCENB6	(*( CPU0_SPROT_ACCENB_type *) 0xf880e06cu)	/* CPU0 Safety Protection Region Access Enable Register B */
#define CPU0_SPROT_RGNACCENB7	(*( CPU0_SPROT_ACCENB_type *) 0xf880e07cu)	/* CPU0 Safety Protection Region Access Enable Register B */
#define CPU1_SPROT_ACCENB	(*( CPU0_SPROT_ACCENB_type *) 0xf882e104u)	/* CPU1 Safety Protection Region Access Enable Register B */
#define CPU1_SPROT_RGNACCENB0	(*( CPU0_SPROT_ACCENB_type *) 0xf882e00cu)	/* CPU1 Safety Protection Region Access Enable Register B */
#define CPU1_SPROT_RGNACCENB1	(*( CPU0_SPROT_ACCENB_type *) 0xf882e01cu)	/* CPU1 Safety Protection Region Access Enable Register B */
#define CPU1_SPROT_RGNACCENB2	(*( CPU0_SPROT_ACCENB_type *) 0xf882e02cu)	/* CPU1 Safety Protection Region Access Enable Register B */
#define CPU1_SPROT_RGNACCENB3	(*( CPU0_SPROT_ACCENB_type *) 0xf882e03cu)	/* CPU1 Safety Protection Region Access Enable Register B */
#define CPU1_SPROT_RGNACCENB4	(*( CPU0_SPROT_ACCENB_type *) 0xf882e04cu)	/* CPU1 Safety Protection Region Access Enable Register B */
#define CPU1_SPROT_RGNACCENB5	(*( CPU0_SPROT_ACCENB_type *) 0xf882e05cu)	/* CPU1 Safety Protection Region Access Enable Register B */
#define CPU1_SPROT_RGNACCENB6	(*( CPU0_SPROT_ACCENB_type *) 0xf882e06cu)	/* CPU1 Safety Protection Region Access Enable Register B */
#define CPU1_SPROT_RGNACCENB7	(*( CPU0_SPROT_ACCENB_type *) 0xf882e07cu)	/* CPU1 Safety Protection Region Access Enable Register B */
#define CPU2_SPROT_ACCENB	(*( CPU0_SPROT_ACCENB_type *) 0xf884e104u)	/* CPU2 Safety Protection Region Access Enable Register B */
#define CPU2_SPROT_RGNACCENB0	(*( CPU0_SPROT_ACCENB_type *) 0xf884e00cu)	/* CPU2 Safety Protection Region Access Enable Register B */
#define CPU2_SPROT_RGNACCENB1	(*( CPU0_SPROT_ACCENB_type *) 0xf884e01cu)	/* CPU2 Safety Protection Region Access Enable Register B */
#define CPU2_SPROT_RGNACCENB2	(*( CPU0_SPROT_ACCENB_type *) 0xf884e02cu)	/* CPU2 Safety Protection Region Access Enable Register B */
#define CPU2_SPROT_RGNACCENB3	(*( CPU0_SPROT_ACCENB_type *) 0xf884e03cu)	/* CPU2 Safety Protection Region Access Enable Register B */
#define CPU2_SPROT_RGNACCENB4	(*( CPU0_SPROT_ACCENB_type *) 0xf884e04cu)	/* CPU2 Safety Protection Region Access Enable Register B */
#define CPU2_SPROT_RGNACCENB5	(*( CPU0_SPROT_ACCENB_type *) 0xf884e05cu)	/* CPU2 Safety Protection Region Access Enable Register B */
#define CPU2_SPROT_RGNACCENB6	(*( CPU0_SPROT_ACCENB_type *) 0xf884e06cu)	/* CPU2 Safety Protection Region Access Enable Register B */
#define CPU2_SPROT_RGNACCENB7	(*( CPU0_SPROT_ACCENB_type *) 0xf884e07cu)	/* CPU2 Safety Protection Region Access Enable Register B */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 EN             : 32;	/* Access Enable for Master TAG ID n (n = 0-31) */
	} B;
	int I;
	unsigned int U;

} CPU0_SPROT_RGNACCENA0_type;
#define CPU0_SPROT_RGNACCENA0	(*( CPU0_SPROT_RGNACCENA0_type *) 0xf880e008u)	/* CPU0 Safety Protection Region Access Enable Register A */
#define CPU0_SPROT_RGNACCENA1	(*( CPU0_SPROT_RGNACCENA0_type *) 0xf880e018u)	/* CPU0 Safety Protection Region Access Enable Register A */
#define CPU0_SPROT_RGNACCENA2	(*( CPU0_SPROT_RGNACCENA0_type *) 0xf880e028u)	/* CPU0 Safety Protection Region Access Enable Register A */
#define CPU0_SPROT_RGNACCENA3	(*( CPU0_SPROT_RGNACCENA0_type *) 0xf880e038u)	/* CPU0 Safety Protection Region Access Enable Register A */
#define CPU0_SPROT_RGNACCENA4	(*( CPU0_SPROT_RGNACCENA0_type *) 0xf880e048u)	/* CPU0 Safety Protection Region Access Enable Register A */
#define CPU0_SPROT_RGNACCENA5	(*( CPU0_SPROT_RGNACCENA0_type *) 0xf880e058u)	/* CPU0 Safety Protection Region Access Enable Register A */
#define CPU0_SPROT_RGNACCENA6	(*( CPU0_SPROT_RGNACCENA0_type *) 0xf880e068u)	/* CPU0 Safety Protection Region Access Enable Register A */
#define CPU0_SPROT_RGNACCENA7	(*( CPU0_SPROT_RGNACCENA0_type *) 0xf880e078u)	/* CPU0 Safety Protection Region Access Enable Register A */
#define CPU1_SPROT_RGNACCENA0	(*( CPU0_SPROT_RGNACCENA0_type *) 0xf882e008u)	/* CPU1 Safety Protection Region Access Enable Register A */
#define CPU1_SPROT_RGNACCENA1	(*( CPU0_SPROT_RGNACCENA0_type *) 0xf882e018u)	/* CPU1 Safety Protection Region Access Enable Register A */
#define CPU1_SPROT_RGNACCENA2	(*( CPU0_SPROT_RGNACCENA0_type *) 0xf882e028u)	/* CPU1 Safety Protection Region Access Enable Register A */
#define CPU1_SPROT_RGNACCENA3	(*( CPU0_SPROT_RGNACCENA0_type *) 0xf882e038u)	/* CPU1 Safety Protection Region Access Enable Register A */
#define CPU1_SPROT_RGNACCENA4	(*( CPU0_SPROT_RGNACCENA0_type *) 0xf882e048u)	/* CPU1 Safety Protection Region Access Enable Register A */
#define CPU1_SPROT_RGNACCENA5	(*( CPU0_SPROT_RGNACCENA0_type *) 0xf882e058u)	/* CPU1 Safety Protection Region Access Enable Register A */
#define CPU1_SPROT_RGNACCENA6	(*( CPU0_SPROT_RGNACCENA0_type *) 0xf882e068u)	/* CPU1 Safety Protection Region Access Enable Register A */
#define CPU1_SPROT_RGNACCENA7	(*( CPU0_SPROT_RGNACCENA0_type *) 0xf882e078u)	/* CPU1 Safety Protection Region Access Enable Register A */
#define CPU2_SPROT_RGNACCENA0	(*( CPU0_SPROT_RGNACCENA0_type *) 0xf884e008u)	/* CPU2 Safety Protection Region Access Enable Register A */
#define CPU2_SPROT_RGNACCENA1	(*( CPU0_SPROT_RGNACCENA0_type *) 0xf884e018u)	/* CPU2 Safety Protection Region Access Enable Register A */
#define CPU2_SPROT_RGNACCENA2	(*( CPU0_SPROT_RGNACCENA0_type *) 0xf884e028u)	/* CPU2 Safety Protection Region Access Enable Register A */
#define CPU2_SPROT_RGNACCENA3	(*( CPU0_SPROT_RGNACCENA0_type *) 0xf884e038u)	/* CPU2 Safety Protection Region Access Enable Register A */
#define CPU2_SPROT_RGNACCENA4	(*( CPU0_SPROT_RGNACCENA0_type *) 0xf884e048u)	/* CPU2 Safety Protection Region Access Enable Register A */
#define CPU2_SPROT_RGNACCENA5	(*( CPU0_SPROT_RGNACCENA0_type *) 0xf884e058u)	/* CPU2 Safety Protection Region Access Enable Register A */
#define CPU2_SPROT_RGNACCENA6	(*( CPU0_SPROT_RGNACCENA0_type *) 0xf884e068u)	/* CPU2 Safety Protection Region Access Enable Register A */
#define CPU2_SPROT_RGNACCENA7	(*( CPU0_SPROT_RGNACCENA0_type *) 0xf884e078u)	/* CPU2 Safety Protection Region Access Enable Register A */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned __sfrbit32 RES            : 5;	/* Reserved */
		unsigned __sfrbit32 ADDR           : 27;	/* Region Lower Address */
	} B;
	int I;
	unsigned int U;

} CPU0_SPROT_RGNLA0_type;
#define CPU0_SPROT_RGNLA0	(*( CPU0_SPROT_RGNLA0_type *) 0xf880e000u)	/* CPU0_Safety Protection Region Lower Address Register */
#define CPU0_SPROT_RGNLA1	(*( CPU0_SPROT_RGNLA0_type *) 0xf880e010u)	/* CPU0_Safety Protection Region Lower Address Register */
#define CPU0_SPROT_RGNLA2	(*( CPU0_SPROT_RGNLA0_type *) 0xf880e020u)	/* CPU0_Safety Protection Region Lower Address Register */
#define CPU0_SPROT_RGNLA3	(*( CPU0_SPROT_RGNLA0_type *) 0xf880e030u)	/* CPU0_Safety Protection Region Lower Address Register */
#define CPU0_SPROT_RGNLA4	(*( CPU0_SPROT_RGNLA0_type *) 0xf880e040u)	/* CPU0_Safety Protection Region Lower Address Register */
#define CPU0_SPROT_RGNLA5	(*( CPU0_SPROT_RGNLA0_type *) 0xf880e050u)	/* CPU0_Safety Protection Region Lower Address Register */
#define CPU0_SPROT_RGNLA6	(*( CPU0_SPROT_RGNLA0_type *) 0xf880e060u)	/* CPU0_Safety Protection Region Lower Address Register */
#define CPU0_SPROT_RGNLA7	(*( CPU0_SPROT_RGNLA0_type *) 0xf880e070u)	/* CPU0_Safety Protection Region Lower Address Register */
#define CPU1_SPROT_RGNLA0	(*( CPU0_SPROT_RGNLA0_type *) 0xf882e000u)	/* CPU1 Safety Protection Region Lower Address Register */
#define CPU1_SPROT_RGNLA1	(*( CPU0_SPROT_RGNLA0_type *) 0xf882e010u)	/* CPU1 Safety Protection Region Lower Address Register */
#define CPU1_SPROT_RGNLA2	(*( CPU0_SPROT_RGNLA0_type *) 0xf882e020u)	/* CPU1 Safety Protection Region Lower Address Register */
#define CPU1_SPROT_RGNLA3	(*( CPU0_SPROT_RGNLA0_type *) 0xf882e030u)	/* CPU1 Safety Protection Region Lower Address Register */
#define CPU1_SPROT_RGNLA4	(*( CPU0_SPROT_RGNLA0_type *) 0xf882e040u)	/* CPU1 Safety Protection Region Lower Address Register */
#define CPU1_SPROT_RGNLA5	(*( CPU0_SPROT_RGNLA0_type *) 0xf882e050u)	/* CPU1 Safety Protection Region Lower Address Register */
#define CPU1_SPROT_RGNLA6	(*( CPU0_SPROT_RGNLA0_type *) 0xf882e060u)	/* CPU1 Safety Protection Region Lower Address Register */
#define CPU1_SPROT_RGNLA7	(*( CPU0_SPROT_RGNLA0_type *) 0xf882e070u)	/* CPU1 Safety Protection Region Lower Address Register */
#define CPU2_SPROT_RGNLA0	(*( CPU0_SPROT_RGNLA0_type *) 0xf884e000u)	/* CPU2 Safety Protection Region Lower Address Register */
#define CPU2_SPROT_RGNLA1	(*( CPU0_SPROT_RGNLA0_type *) 0xf884e010u)	/* CPU2 Safety Protection Region Lower Address Register */
#define CPU2_SPROT_RGNLA2	(*( CPU0_SPROT_RGNLA0_type *) 0xf884e020u)	/* CPU2 Safety Protection Region Lower Address Register */
#define CPU2_SPROT_RGNLA3	(*( CPU0_SPROT_RGNLA0_type *) 0xf884e030u)	/* CPU2 Safety Protection Region Lower Address Register */
#define CPU2_SPROT_RGNLA4	(*( CPU0_SPROT_RGNLA0_type *) 0xf884e040u)	/* CPU2 Safety Protection Region Lower Address Register */
#define CPU2_SPROT_RGNLA5	(*( CPU0_SPROT_RGNLA0_type *) 0xf884e050u)	/* CPU2 Safety Protection Region Lower Address Register */
#define CPU2_SPROT_RGNLA6	(*( CPU0_SPROT_RGNLA0_type *) 0xf884e060u)	/* CPU2 Safety Protection Region Lower Address Register */
#define CPU2_SPROT_RGNLA7	(*( CPU0_SPROT_RGNLA0_type *) 0xf884e070u)	/* CPU2 Safety Protection Region Lower Address Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned __sfrbit32 RES            : 5;	/* Reserved */
		unsigned __sfrbit32 ADDR           : 27;	/* Region Upper Address */
	} B;
	int I;
	unsigned int U;

} CPU0_SPROT_RGNUA0_type;
#define CPU0_SPROT_RGNUA0	(*( CPU0_SPROT_RGNUA0_type *) 0xf880e004u)	/* CPU0 Safety protection Region Upper Address Register */
#define CPU0_SPROT_RGNUA1	(*( CPU0_SPROT_RGNUA0_type *) 0xf880e014u)	/* CPU0 Safety protection Region Upper Address Register */
#define CPU0_SPROT_RGNUA2	(*( CPU0_SPROT_RGNUA0_type *) 0xf880e024u)	/* CPU0 Safety protection Region Upper Address Register */
#define CPU0_SPROT_RGNUA3	(*( CPU0_SPROT_RGNUA0_type *) 0xf880e034u)	/* CPU0 Safety protection Region Upper Address Register */
#define CPU0_SPROT_RGNUA4	(*( CPU0_SPROT_RGNUA0_type *) 0xf880e044u)	/* CPU0 Safety protection Region Upper Address Register */
#define CPU0_SPROT_RGNUA5	(*( CPU0_SPROT_RGNUA0_type *) 0xf880e054u)	/* CPU0 Safety protection Region Upper Address Register */
#define CPU0_SPROT_RGNUA6	(*( CPU0_SPROT_RGNUA0_type *) 0xf880e064u)	/* CPU0 Safety protection Region Upper Address Register */
#define CPU0_SPROT_RGNUA7	(*( CPU0_SPROT_RGNUA0_type *) 0xf880e074u)	/* CPU0 Safety protection Region Upper Address Register */
#define CPU1_SPROT_RGNUA0	(*( CPU0_SPROT_RGNUA0_type *) 0xf882e004u)	/* CPU1 Safety protection Region Upper Address Register */
#define CPU1_SPROT_RGNUA1	(*( CPU0_SPROT_RGNUA0_type *) 0xf882e014u)	/* CPU1 Safety protection Region Upper Address Register */
#define CPU1_SPROT_RGNUA2	(*( CPU0_SPROT_RGNUA0_type *) 0xf882e024u)	/* CPU1 Safety protection Region Upper Address Register */
#define CPU1_SPROT_RGNUA3	(*( CPU0_SPROT_RGNUA0_type *) 0xf882e034u)	/* CPU1 Safety protection Region Upper Address Register */
#define CPU1_SPROT_RGNUA4	(*( CPU0_SPROT_RGNUA0_type *) 0xf882e044u)	/* CPU1 Safety protection Region Upper Address Register */
#define CPU1_SPROT_RGNUA5	(*( CPU0_SPROT_RGNUA0_type *) 0xf882e054u)	/* CPU1 Safety protection Region Upper Address Register */
#define CPU1_SPROT_RGNUA6	(*( CPU0_SPROT_RGNUA0_type *) 0xf882e064u)	/* CPU1 Safety protection Region Upper Address Register */
#define CPU1_SPROT_RGNUA7	(*( CPU0_SPROT_RGNUA0_type *) 0xf882e074u)	/* CPU1 Safety protection Region Upper Address Register */
#define CPU2_SPROT_RGNUA0	(*( CPU0_SPROT_RGNUA0_type *) 0xf884e004u)	/* CPU2 Safety protection Region Upper Address Register */
#define CPU2_SPROT_RGNUA1	(*( CPU0_SPROT_RGNUA0_type *) 0xf884e014u)	/* CPU2 Safety protection Region Upper Address Register */
#define CPU2_SPROT_RGNUA2	(*( CPU0_SPROT_RGNUA0_type *) 0xf884e024u)	/* CPU2 Safety protection Region Upper Address Register */
#define CPU2_SPROT_RGNUA3	(*( CPU0_SPROT_RGNUA0_type *) 0xf884e034u)	/* CPU2 Safety protection Region Upper Address Register */
#define CPU2_SPROT_RGNUA4	(*( CPU0_SPROT_RGNUA0_type *) 0xf884e044u)	/* CPU2 Safety protection Region Upper Address Register */
#define CPU2_SPROT_RGNUA5	(*( CPU0_SPROT_RGNUA0_type *) 0xf884e054u)	/* CPU2 Safety protection Region Upper Address Register */
#define CPU2_SPROT_RGNUA6	(*( CPU0_SPROT_RGNUA0_type *) 0xf884e064u)	/* CPU2 Safety protection Region Upper Address Register */
#define CPU2_SPROT_RGNUA7	(*( CPU0_SPROT_RGNUA0_type *) 0xf884e074u)	/* CPU2 Safety protection Region Upper Address Register */


/* SCU */
typedef volatile union
{
	struct
	{ 
		unsigned int EN0            : 1;	/* Access Enable for Master TAG ID 0 */
		unsigned int EN1            : 1;	/* Access Enable for Master TAG ID 1 */
		unsigned int EN2            : 1;	/* Access Enable for Master TAG ID 2 */
		unsigned int EN3            : 1;	/* Access Enable for Master TAG ID 3 */
		unsigned int EN4            : 1;	/* Access Enable for Master TAG ID 4 */
		unsigned int EN5            : 1;	/* Access Enable for Master TAG ID 5 */
		unsigned int EN6            : 1;	/* Access Enable for Master TAG ID 6 */
		unsigned int EN7            : 1;	/* Access Enable for Master TAG ID 7 */
		unsigned int EN8            : 1;	/* Access Enable for Master TAG ID 8 */
		unsigned int EN9            : 1;	/* Access Enable for Master TAG ID 9 */
		unsigned int EN10           : 1;	/* Access Enable for Master TAG ID 10 */
		unsigned int EN11           : 1;	/* Access Enable for Master TAG ID 11 */
		unsigned int EN12           : 1;	/* Access Enable for Master TAG ID 12 */
		unsigned int EN13           : 1;	/* Access Enable for Master TAG ID 13 */
		unsigned int EN14           : 1;	/* Access Enable for Master TAG ID 14 */
		unsigned int EN15           : 1;	/* Access Enable for Master TAG ID 15 */
		unsigned int EN16           : 1;	/* Access Enable for Master TAG ID 16 */
		unsigned int EN17           : 1;	/* Access Enable for Master TAG ID 17 */
		unsigned int EN18           : 1;	/* Access Enable for Master TAG ID 18 */
		unsigned int EN19           : 1;	/* Access Enable for Master TAG ID 19 */
		unsigned int EN20           : 1;	/* Access Enable for Master TAG ID 20 */
		unsigned int EN21           : 1;	/* Access Enable for Master TAG ID 21 */
		unsigned int EN22           : 1;	/* Access Enable for Master TAG ID 22 */
		unsigned int EN23           : 1;	/* Access Enable for Master TAG ID 23 */
		unsigned int EN24           : 1;	/* Access Enable for Master TAG ID 24 */
		unsigned int EN25           : 1;	/* Access Enable for Master TAG ID 25 */
		unsigned int EN26           : 1;	/* Access Enable for Master TAG ID 26 */
		unsigned int EN27           : 1;	/* Access Enable for Master TAG ID 27 */
		unsigned int EN28           : 1;	/* Access Enable for Master TAG ID 28 */
		unsigned int EN29           : 1;	/* Access Enable for Master TAG ID 29 */
		unsigned int EN30           : 1;	/* Access Enable for Master TAG ID 30 */
		unsigned int EN31           : 1;	/* Access Enable for Master TAG ID 31 */
	} B;
	int I;
	unsigned int U;

} SCU_ACCEN0_type;
#define SCU_ACCEN0	(*( SCU_ACCEN0_type *) 0xf00363fcu)	/* Access Enable Register 0 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int Reserved       : 32;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} SCU_ACCEN1_type;
#define SCU_ACCEN1	(*( SCU_ACCEN1_type *) 0xf00363f8u)	/* Access Enable Register 1 */

typedef volatile union
{
	struct
	{ 
		unsigned int STM0DIS        : 1;	/* STM0 Disable Reset */
		unsigned int STM1DIS        : 1;	/* STM1 Disable Reset (If Product has STM1) */
		unsigned int STM2DIS        : 1;	/* STM2 Disable Reset (If Product has STM2) */
		unsigned int                : 29;
	} B;
	int I;
	unsigned int U;

} SCU_ARSTDIS_type;
#define SCU_ARSTDIS	(*( SCU_ARSTDIS_type *) 0xf003605cu)	/* Application Reset Disable Register */

typedef volatile union
{
	struct
	{ 
		unsigned int BAUD1DIV       : 4;	/* Baud1 Divider Reload Value */
		unsigned int BAUD2DIV       : 4;	/* Baud2 Divider Reload Value */
		unsigned int SRIDIV         : 4;	/* SRI Divider Reload Value */
		unsigned int LPDIV          : 4;	/* Low Power Divider Reload Value */
		unsigned int SPBDIV         : 4;	/* SPB Divider Reload Value */
		unsigned int FSI2DIV        : 2;	/* FSI2 Divider Reload Value */
		unsigned int                : 2;
		unsigned int FSIDIV         : 2;	/* FSI Divider Reload Value */
		unsigned int ADCCLKSEL      : 2;	/* ADC Clock Selection */
		unsigned int CLKSEL         : 2;	/* Clock Selection */
		unsigned int UP             : 1;	/* Update Request */
		/* const */ unsigned int LCK            : 1;	/* Lock Status */
	} B;
	int I;
	unsigned int U;

} SCU_CCUCON0_type;
#define SCU_CCUCON0	(*( SCU_CCUCON0_type *) 0xf0036030u)	/* CCU Clock Control Register 0 */

typedef volatile union
{
	struct
	{ 
		unsigned int CANDIV         : 4;	/* MultiCAN Divider Reload Value */
		unsigned int ERAYDIV        : 4;	/* ERAY Divider Reload Value */
		unsigned int STMDIV         : 4;	/* STM Divider Reload Value */
		unsigned int GTMDIV         : 4;	/* GTM Divider Reload Value */
		unsigned int ETHDIV         : 4;	/* Ethernet Divider Reload Value */
		unsigned int ASCLINFDIV     : 4;	/* ASCLIN Fast Divider Reload Value */
		unsigned int ASCLINSDIV     : 4;	/* ASCLIN Slow Divider Reload Value */
		unsigned int INSEL          : 2;	/* Input Selection */
		unsigned int UP             : 1;	/* Update Request */
		/* const */ unsigned int LCK            : 1;	/* Lock Status */
	} B;
	int I;
	unsigned int U;

} SCU_CCUCON1_type;
#define SCU_CCUCON1	(*( SCU_CCUCON1_type *) 0xf0036034u)	/* CCU Clock Control Register 1 */

typedef volatile union
{
	struct
	{ 
		unsigned int BBBDIV         : 4;	/* BBB Divider Reload Value */
		unsigned int                : 26;
		unsigned int UP             : 1;	/* Update Request */
		/* const */ unsigned int LCK            : 1;	/* Lock Status */
	} B;
	int I;
	unsigned int U;

} SCU_CCUCON2_type;
#define SCU_CCUCON2	(*( SCU_CCUCON2_type *) 0xf0036040u)	/* CCU Clock Control Register 2 */

typedef volatile union
{
	struct
	{ 
		unsigned int PLLDIV         : 6;	/* PLL Divider Value */
		unsigned int PLLSEL         : 2;	/* PLL Target Monitoring Frequency Selection */
		unsigned int PLLERAYDIV     : 6;	/* PLL_ERAY Divider Value */
		unsigned int PLLERAYSEL     : 2;	/* PLL_ERAY Target Monitoring Frequency Selection */
		unsigned int SRIDIV         : 6;	/* SRI Divider Value */
		unsigned int SRISEL         : 2;	/* SRI Target Monitoring Frequency Selection */
		unsigned int                : 5;
		unsigned int SLCK           : 1;	/* Security Lock */
		unsigned int UP             : 1;	/* Update Request */
		/* const */ unsigned int LCK            : 1;	/* Lock Status */
	} B;
	int I;
	unsigned int U;

} SCU_CCUCON3_type;
#define SCU_CCUCON3	(*( SCU_CCUCON3_type *) 0xf0036044u)	/* CCU Clock Control Register 3 */

typedef volatile union
{
	struct
	{ 
		unsigned int SPBDIV         : 6;	/* SPB Divider Value */
		unsigned int SPBSEL         : 2;	/* SPB Target Monitoring Frequency Selection */
		unsigned int GTMDIV         : 6;	/* GTM Divider Value */
		unsigned int GTMSEL         : 2;	/* GTM Target Monitoring Frequency Selection */
		unsigned int STMDIV         : 6;	/* STM Divider Value */
		unsigned int STMSEL         : 2;	/* STM Target Monitoring Frequency Selection */
		unsigned int                : 5;
		unsigned int SLCK           : 1;	/* Security Lock */
		unsigned int UP             : 1;	/* Update Request */
		/* const */ unsigned int LCK            : 1;	/* Lock Status */
	} B;
	int I;
	unsigned int U;

} SCU_CCUCON4_type;
#define SCU_CCUCON4	(*( SCU_CCUCON4_type *) 0xf0036048u)	/* CCU Clock Control Register 4 */

typedef volatile union
{
	struct
	{ 
		unsigned int MAXDIV         : 4;	/* Max Divider Reload Value */
		unsigned int                : 26;
		unsigned int UP             : 1;	/* Update Request */
		/* const */ unsigned int LCK            : 1;	/* Lock Status */
	} B;
	int I;
	unsigned int U;

} SCU_CCUCON5_type;
#define SCU_CCUCON5	(*( SCU_CCUCON5_type *) 0xf003604cu)	/* CCU Clock Control Register 5 */

typedef volatile union
{
	struct
	{ 
		unsigned int CPU0DIV        : 6;	/* CPU0 Divider Reload Value */
		unsigned int                : 26;
	} B;
	int I;
	unsigned int U;

} SCU_CCUCON6_type;
#define SCU_CCUCON6	(*( SCU_CCUCON6_type *) 0xf0036080u)	/* CCU Clock Control Register 6 */

typedef volatile union
{
	struct
	{ 
		unsigned int CPU1DIV        : 6;	/* CPU1 Divider Reload Value */
		unsigned int                : 26;
	} B;
	int I;
	unsigned int U;

} SCU_CCUCON7_type;
#define SCU_CCUCON7	(*( SCU_CCUCON7_type *) 0xf0036084u)	/* CCU Clock Control Register 7 */

typedef volatile union
{
	struct
	{ 
		unsigned int CPU2DIV        : 6;	/* CPU2 Divider Reload Value */
		unsigned int                : 26;
	} B;
	int I;
	unsigned int U;

} SCU_CCUCON8_type;
#define SCU_CCUCON8	(*( SCU_CCUCON8_type *) 0xf0036088u)	/* CCU Clock Control Register 8 */

typedef volatile union
{
	struct
	{ 
		unsigned int ADCDIV         : 6;	/* ADC Divider Value */
		unsigned int ADCSEL         : 2;	/* ADC Target Monitoring Frequency Selection */
		unsigned int                : 21;
		unsigned int SLCK           : 1;	/* Security Lock */
		unsigned int UP             : 1;	/* Update Request */
		/* const */ unsigned int LCK            : 1;	/* Lock Status */
	} B;
	int I;
	unsigned int U;

} SCU_CCUCON9_type;
#define SCU_CCUCON9	(*( SCU_CCUCON9_type *) 0xf003608cu)	/* CCU Clock Control Register 9 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int CHREV          : 6;	/* Chip Revision Number */
		/* const */ unsigned int CHTEC          : 2;	/* Chip Family */
		unsigned int CHID           : 8;	/* Chip Identification Number */
		/* const */ unsigned int EEA            : 1;	/* Emulation Extension Available */
		unsigned int UCODE          : 7;	/* ?Code Version */
		unsigned int FSIZE          : 4;	/* Program Flash Size */
		unsigned int SP             : 2;	/* Speed */
		unsigned int SEC            : 1;	/* Security Device */
		unsigned int                : 1;
	} B;
	int I;
	unsigned int U;

} SCU_CHIPID_type;
#define SCU_CHIPID	(*( SCU_CHIPID_type *) 0xf0036140u)	/* Chip Identification Register */

typedef volatile union
{
	struct
	{ 
		unsigned int PWD            : 1;	/* Sensor Power Down */
		unsigned int START          : 1;	/* Sensor Measurement Start */
		unsigned int                : 2;
		unsigned int CAL            : 20;	/* Calibration Value */
		unsigned int                : 7;
		unsigned int SLCK           : 1;	/* Security Lock */
	} B;
	int I;
	unsigned int U;

} SCU_DTSCON_type;
#define SCU_DTSCON	(*( SCU_DTSCON_type *) 0xf00360e4u)	/* Die Temperature Sensor Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int LOWER          : 10;	/* Lower Limit */
		unsigned int                : 5;
		unsigned int LLU            : 1;	/* Lower Limit Underflow */
		unsigned int UPPER          : 10;	/* Upper Limit */
		unsigned int                : 4;
		unsigned int SLCK           : 1;	/* Security Lock */
		/* const */ unsigned int UOF            : 1;	/* Upper Limit Overflow */
	} B;
	int I;
	unsigned int U;

} SCU_DTSLIM_type;
#define SCU_DTSLIM	(*( SCU_DTSLIM_type *) 0xf0036240u)	/* Die Temperature Sensor Limit Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int RESULT         : 10;	/* Result of the DTS Measurement */
		/* const */ unsigned int                : 4;
		/* const */ unsigned int RDY            : 1;	/* Sensor Ready Status */
		/* const */ unsigned int BUSY           : 1;	/* Sensor Busy Status */
		/* const */ unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} SCU_DTSSTAT_type;
#define SCU_DTSSTAT	(*( SCU_DTSSTAT_type *) 0xf00360e0u)	/* Die Temperature Sensor Status Register */

typedef volatile union
{
	struct
	{ 
		unsigned int                : 4;
		unsigned int EXIS0          : 3;	/* External Input Selection 0 */
		unsigned int                : 1;
		unsigned int FEN0           : 1;	/* Falling Edge Enable 0 */
		unsigned int REN0           : 1;	/* Rising Edge Enable 0 */
		unsigned int LDEN0          : 1;	/* Level Detection Enable 0 */
		unsigned int EIEN0          : 1;	/* External Input Enable 0 */
		unsigned int INP0           : 3;	/* Input Node Pointer */
		unsigned int                : 5;
		unsigned int EXIS1          : 3;	/* External Input Selection 1 */
		unsigned int                : 1;
		unsigned int FEN1           : 1;	/* Falling Edge Enable 1 */
		unsigned int REN1           : 1;	/* Rising Edge Enable 1 */
		unsigned int LDEN1          : 1;	/* Level Detection Enable 1 */
		unsigned int EIEN1          : 1;	/* External Input Enable 1 */
		unsigned int INP1           : 3;	/* Input Node Pointer */
		unsigned int                : 1;
	} B;
	int I;
	unsigned int U;

} SCU_EICR0_type;
#define SCU_EICR0	(*( SCU_EICR0_type *) 0xf0036210u)	/* External Input Channel Register 0 */
#define SCU_EICR1	(*( SCU_EICR0_type *) 0xf0036214u)	/* External Input Channel Register 1 */
#define SCU_EICR2	(*( SCU_EICR0_type *) 0xf0036218u)	/* External Input Channel Register 2 */
#define SCU_EICR3	(*( SCU_EICR0_type *) 0xf003621cu)	/* External Input Channel Register 3 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int INTF0          : 1;	/* External Event Flag of Channel 0 */
		/* const */ unsigned int INTF1          : 1;	/* External Event Flag of Channel 1 */
		/* const */ unsigned int INTF2          : 1;	/* External Event Flag of Channel 2 */
		/* const */ unsigned int INTF3          : 1;	/* External Event Flag of Channel 3 */
		/* const */ unsigned int INTF4          : 1;	/* External Event Flag of Channel 4 */
		/* const */ unsigned int INTF5          : 1;	/* External Event Flag of Channel 5 */
		/* const */ unsigned int INTF6          : 1;	/* External Event Flag of Channel 6 */
		/* const */ unsigned int INTF7          : 1;	/* External Event Flag of Channel 7 */
		/* const */ unsigned int                : 24;
	} B;
	int I;
	unsigned int U;

} SCU_EIFR_type;
#define SCU_EIFR	(*( SCU_EIFR_type *) 0xf0036220u)	/* External Input Flag Register */

typedef volatile union
{
	struct
	{ 
		unsigned int POL            : 1;	/* Input Polarity */
		unsigned int MODE           : 1;	/* Mode Selection */
		unsigned int ENON           : 1;	/* Enable ON */
		unsigned int PSEL           : 1;	/* PORT Select */
		unsigned int                : 12;
		/* const */ unsigned int EMSF           : 1;	/* Emergency Stop Flag */
		/* const */ unsigned int SEMSF          : 1;	/* SMU Emergency Stop Flag */
		unsigned int                : 6;
		unsigned int EMSFM          : 2;	/* Emergency Stop Flag Modification */
		unsigned int SEMSFM         : 2;	/* SMU Emergency Stop Flag Modification */
		unsigned int                : 4;
	} B;
	int I;
	unsigned int U;

} SCU_EMSR_type;
#define SCU_EMSR	(*( SCU_EMSR_type *) 0xf00360fcu)	/* Emergency Stop Register */

typedef volatile union
{
	struct
	{ 
		unsigned int                : 7;
		unsigned int EDCON          : 2;	/* Edge Detection Control */
		unsigned int                : 23;
	} B;
	int I;
	unsigned int U;

} SCU_ESRCFG0_type;
#define SCU_ESRCFG0	(*( SCU_ESRCFG0_type *) 0xf0036070u)	/* ESR0 Input Configuration Register */
#define SCU_ESRCFG1	(*( SCU_ESRCFG0_type *) 0xf0036074u)	/* ESR1 Input Configuration Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int ARI            : 1;	/* Application Reset Indicator */
		unsigned int ARC            : 1;	/* Application Reset Indicator Clear */
		unsigned int                : 30;
	} B;
	int I;
	unsigned int U;

} SCU_ESROCFG_type;
#define SCU_ESROCFG	(*( SCU_ESROCFG_type *) 0xf0036078u)	/* ESR Output Configuration Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int RES            : 28;	/* Reserved */
		unsigned int EVR13OFF       : 1;	/* EVR13 Regulator Enable */
		unsigned int BPEVR13OFF     : 1;	/* Bit Protection EVR13OFF */
		/* const */ unsigned int RES_4          : 1;	/* Reserved */
		/* const */ unsigned int LCK            : 1;	/* Lock Status */
	} B;
	int I;
	unsigned int U;

} SCU_EVR13CON_type;
#define SCU_EVR13CON	(*( SCU_EVR13CON_type *) 0xf00360b8u)	/* EVR13 Control Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int RES            : 28;	/* Reserved */
		unsigned int EVR33OFF       : 1;	/* EVR33 Regulator Enable */
		unsigned int BPEVR33OFF     : 1;	/* Bit Protection EVR33OFF */
		/* const */ unsigned int RES_4          : 1;	/* Reserved */
		/* const */ unsigned int LCK            : 1;	/* Lock Status */
	} B;
	int I;
	unsigned int U;

} SCU_EVR33CON_type;
#define SCU_EVR33CON	(*( SCU_EVR33CON_type *) 0xf00360bcu)	/* EVR33 Control Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int ADC13V         : 8;	/* ADC 1.3 V Conversion Result */
		/* const */ unsigned int ADC33V         : 8;	/* ADC 3.3 V Conversion Result */
		/* const */ unsigned int ADCSWDV        : 8;	/* ADC External Supply Conversion Result */
		/* const */ unsigned int                : 7;
		/* const */ unsigned int VAL            : 1;	/* Valid Status */
	} B;
	int I;
	unsigned int U;

} SCU_EVRADCSTAT_type;
#define SCU_EVRADCSTAT	(*( SCU_EVRADCSTAT_type *) 0xf003619cu)	/* EVR ADC Status Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int DVS13TRIM      : 8;	/* 1.3 V Regulator Voltage Trim Status */
		/* const */ unsigned int                : 8;
		/* const */ unsigned int DVS33TRIM      : 8;	/* 3.3 V Regulator Voltage Trim Status */
		/* const */ unsigned int                : 7;
		/* const */ unsigned int VAL            : 1;	/* Valid Status */
	} B;
	int I;
	unsigned int U;

} SCU_EVRDVSTAT_type;
#define SCU_EVRDVSTAT	(*( SCU_EVRDVSTAT_type *) 0xf00360b4u)	/* EVR Status Register for Voltage Scaling */

typedef volatile union
{
	struct
	{ 
		unsigned int EVR13OVMOD     : 2;	/* 1.3 V Regulator Over-voltage monitoring mode */
		unsigned int                : 2;
		unsigned int EVR13UVMOD     : 2;	/* 1.3 V Regulator Under-voltage monitoring mode */
		unsigned int                : 2;
		unsigned int EVR33OVMOD     : 2;	/* 3.3 V Regulator Over-voltage monitoring mode */
		unsigned int                : 2;
		unsigned int EVR33UVMOD     : 2;	/* 3.3 V Regulator Under-voltage monitoring mode */
		unsigned int                : 2;
		unsigned int SWDOVMOD       : 2;	/* Supply monitor (SWD) Over-voltage monitoring mode */
		unsigned int                : 2;
		unsigned int SWDUVMOD       : 2;	/* Supply monitor (SWD) Under-voltage monitoring mode */
		unsigned int                : 8;
		unsigned int SLCK           : 1;	/* HSM Security Lock */
		unsigned int                : 1;
	} B;
	int I;
	unsigned int U;

} SCU_EVRMONCTRL_type;
#define SCU_EVRMONCTRL	(*( SCU_EVRMONCTRL_type *) 0xf00361a8u)	/* EVR Monitor Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int OSCTRIM        : 10;	/* OSC Trim Value */
		unsigned int OSCPTAT        : 6;	/* OSC PTAT Trim Value */
		unsigned int OSCANASEL      : 4;	/* OSC ANASEL Value */
		unsigned int HPBGTRIM       : 7;	/* High Precision Bandgap Trim Value */
		unsigned int HPBGCLKEN      : 1;	/* High Precision Bandgap Clock Enable */
		unsigned int OSC3V3         : 1;	/* Oscillator 3V3 Mode */
		unsigned int                : 2;
		/* const */ unsigned int LCK            : 1;	/* Lock Status */
	} B;
	int I;
	unsigned int U;

} SCU_EVROSCCTRL_type;
#define SCU_EVROSCCTRL	(*( SCU_EVROSCCTRL_type *) 0xf00361d8u)	/* EVR Oscillator 'and' Bandgap Register */

typedef volatile union
{
	struct
	{ 
		unsigned int EVR13OVVAL     : 8;	/* 1.3 V Regulator Over-voltage threshold */
		unsigned int EVR33OVVAL     : 8;	/* 3.3 V Regulator Over-voltage threshold */
		unsigned int SWDOVVAL       : 8;	/* Supply monitor (SWD) Over-voltage threshold value */
		unsigned int                : 6;
		unsigned int SLCK           : 1;	/* HSM Security Lock */
		/* const */ unsigned int LCK            : 1;	/* Lock Status */
	} B;
	int I;
	unsigned int U;

} SCU_EVROVMON_type;
#define SCU_EVROVMON	(*( SCU_EVROVMON_type *) 0xf00361a4u)	/* EVR Over-voltage Configuration Register */

typedef volatile union
{
	struct
	{ 
		unsigned int RST13TRIM      : 8;	/* 1.3 V Regulator Reset Trim Value */
		/* const */ unsigned int RES            : 16;	/* Reserved */
		unsigned int RST13OFF       : 1;	/* EVR13 Reset Enable */
		unsigned int BPRST13OFF     : 1;	/* Bit Protection RST13OFF */
		unsigned int RST33OFF       : 1;	/* EVR33 Reset Enable */
		unsigned int BPRST33OFF     : 1;	/* Bit Protection RST33OFF */
		unsigned int RSTSWDOFF      : 1;	/* EVR SWD Reset Enable */
		unsigned int BPRSTSWDOFF    : 1;	/* Bit Protection RSTSWDOFF */
		unsigned int SLCK           : 1;	/* HSM Security Lock */
		/* const */ unsigned int LCK            : 1;	/* Lock Status */
	} B;
	int I;
	unsigned int U;

} SCU_EVRRSTCON_type;
#define SCU_EVRRSTCON	(*( SCU_EVRRSTCON_type *) 0xf003606cu)	/* EVR Reset Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int SD5P           : 8;	/* P Coefficient */
		unsigned int SD5I           : 8;	/* I Coefficient */
		unsigned int SD5D           : 8;	/* D Coefficient */
		unsigned int                : 7;
		/* const */ unsigned int LCK            : 1;	/* Lock Status */
	} B;
	int I;
	unsigned int U;

} SCU_EVRSDCOEFF1_type;
#define SCU_EVRSDCOEFF1	(*( SCU_EVRSDCOEFF1_type *) 0xf00361c0u)	/* EVR13 SD Coefficient Register 1 */

typedef volatile union
{
	struct
	{ 
		unsigned int SD33P          : 8;	/* P Coefficient */
		unsigned int SD33I          : 8;	/* I Coefficient */
		unsigned int SD33D          : 8;	/* D Coefficient */
		unsigned int                : 7;
		/* const */ unsigned int LCK            : 1;	/* Lock Status */
	} B;
	int I;
	unsigned int U;

} SCU_EVRSDCOEFF2_type;
#define SCU_EVRSDCOEFF2	(*( SCU_EVRSDCOEFF2_type *) 0xf00361c4u)	/* EVR13 SD Coefficient Register 2 */

typedef volatile union
{
	struct
	{ 
		unsigned int CT5REG0        : 8;	/* Commutation trimming */
		unsigned int CT5REG1        : 8;	/* Commutation trimming */
		unsigned int CT5REG2        : 8;	/* Commutation trimming */
		unsigned int                : 7;
		/* const */ unsigned int LCK            : 1;	/* Lock Status */
	} B;
	int I;
	unsigned int U;

} SCU_EVRSDCOEFF3_type;
#define SCU_EVRSDCOEFF3	(*( SCU_EVRSDCOEFF3_type *) 0xf00361c8u)	/* EVR13 SD Coefficient Register 3 */

typedef volatile union
{
	struct
	{ 
		unsigned int CT5REG3        : 8;	/* Commutation trimming */
		unsigned int CT5REG4        : 8;	/* Commutation trimming */
		unsigned int                : 15;
		/* const */ unsigned int LCK            : 1;	/* Lock Status */
	} B;
	int I;
	unsigned int U;

} SCU_EVRSDCOEFF4_type;
#define SCU_EVRSDCOEFF4	(*( SCU_EVRSDCOEFF4_type *) 0xf00361ccu)	/* EVR13 SD Coefficient Register 4 */

typedef volatile union
{
	struct
	{ 
		unsigned int CT33REG0       : 8;	/* Commutation trimming */
		unsigned int CT33REG1       : 8;	/* Commutation trimming */
		unsigned int CT33REG2       : 8;	/* Commutation trimming */
		unsigned int                : 7;
		/* const */ unsigned int LCK            : 1;	/* Lock Status */
	} B;
	int I;
	unsigned int U;

} SCU_EVRSDCOEFF5_type;
#define SCU_EVRSDCOEFF5	(*( SCU_EVRSDCOEFF5_type *) 0xf00361d0u)	/* EVR13 SD Coefficient Register 5 */

typedef volatile union
{
	struct
	{ 
		unsigned int CT33REG3       : 8;	/* Commutation trimming */
		unsigned int CT33REG4       : 8;	/* Commutation trimming */
		unsigned int                : 15;
		/* const */ unsigned int LCK            : 1;	/* Lock Status */
	} B;
	int I;
	unsigned int U;

} SCU_EVRSDCOEFF6_type;
#define SCU_EVRSDCOEFF6	(*( SCU_EVRSDCOEFF6_type *) 0xf00361d4u)	/* EVR13 SD Coefficient Register 6 */

typedef volatile union
{
	struct
	{ 
		unsigned int SDFREQSPRD     : 16;	/* Frequency Spread Threshold */
		unsigned int SDFREQ         : 8;	/* Regulator Switching Frequency */
		unsigned int SDSTEP         : 4;	/* Droop Voltage Step */
		unsigned int                : 2;
		unsigned int SDSAMPLE       : 1;	/* ADC Sampling Scheme */
		/* const */ unsigned int LCK            : 1;	/* Lock Status */
	} B;
	int I;
	unsigned int U;

} SCU_EVRSDCTRL1_type;
#define SCU_EVRSDCTRL1	(*( SCU_EVRSDCTRL1_type *) 0xf00361b0u)	/* EVR13 SD Control Register 1 */

typedef volatile union
{
	struct
	{ 
		unsigned int DRVP           : 8;	/* P-Driver Setting */
		unsigned int SDMINMAXDC     : 8;	/* Minimum Duty Cycle */
		unsigned int DRVN           : 8;	/* N-Driver Setting */
		unsigned int SDLUT          : 6;	/* Non-linear Starting Point */
		unsigned int                : 1;
		/* const */ unsigned int LCK            : 1;	/* Lock Status */
	} B;
	int I;
	unsigned int U;

} SCU_EVRSDCTRL2_type;
#define SCU_EVRSDCTRL2	(*( SCU_EVRSDCTRL2_type *) 0xf00361b4u)	/* EVR13 SD Control Register 2 */

typedef volatile union
{
	struct
	{ 
		unsigned int SDPWMPRE       : 8;	/* PWM Preset Value */
		unsigned int SDPID          : 8;	/* PID Control */
		unsigned int SDVOKLVL       : 8;	/* Configuration of Voltage OK Signal */
		unsigned int                : 7;
		/* const */ unsigned int LCK            : 1;	/* Lock Status */
	} B;
	int I;
	unsigned int U;

} SCU_EVRSDCTRL3_type;
#define SCU_EVRSDCTRL3	(*( SCU_EVRSDCTRL3_type *) 0xf00361b8u)	/* EVR13 SD Control Register 3 */

typedef volatile union
{
	struct
	{ 
		unsigned int                : 8;
		unsigned int SYNCDIV        : 3;	/* Clock Divider Ratio for external DCDC SYNC signal */
		unsigned int                : 20;
		/* const */ unsigned int LCK            : 1;	/* Lock Status */
	} B;
	int I;
	unsigned int U;

} SCU_EVRSDCTRL4_type;
#define SCU_EVRSDCTRL4	(*( SCU_EVRSDCTRL4_type *) 0xf00361bcu)	/* EVR13 SD Control Register 4 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int EVR13          : 1;	/* EVR13 status */
		/* const */ unsigned int OV13           : 1;	/* EVR13 Regulator Over-voltage event flag */
		/* const */ unsigned int EVR33          : 1;	/* EVR33 status */
		/* const */ unsigned int OV33           : 1;	/* EVR33 Regulator Over-voltage event flag */
		/* const */ unsigned int OVSWD          : 1;	/* Supply Watchdog (SWD) Over-voltage event flag */
		/* const */ unsigned int UV13           : 1;	/* EVR13 Regulator Under-voltage event flag */
		/* const */ unsigned int UV33           : 1;	/* EVR33 Regulator Under-voltage event flag */
		/* const */ unsigned int UVSWD          : 1;	/* Supply Watchdog (SWD) Under-voltage event flag */
		/* const */ unsigned int EXTPASS13      : 1;	/* External Pass Device for EVR13 */
		/* const */ unsigned int EXTPASS33      : 1;	/* External Pass Device for EVR33 */
		/* const */ unsigned int BGPROK         : 1;	/* Primary Bandgap status */
		/* const */ unsigned int                : 21;
	} B;
	int I;
	unsigned int U;

} SCU_EVRSTAT_type;
#define SCU_EVRSTAT	(*( SCU_EVRSTAT_type *) 0xf00360b0u)	/* EVR Status Register */

typedef volatile union
{
	struct
	{ 
		unsigned int EVR13TRIM      : 8;	/* 1.3 V Regulator Voltage Trim Value */
		/* const */ unsigned int RES            : 22;	/* Reserved */
		unsigned int SLCK           : 1;	/* HSM Security Lock */
		/* const */ unsigned int LCK            : 1;	/* Lock Status */
	} B;
	int I;
	unsigned int U;

} SCU_EVRTRIM_type;
#define SCU_EVRTRIM	(*( SCU_EVRTRIM_type *) 0xf0036198u)	/* EVR Trim Register */

typedef volatile union
{
	struct
	{ 
		unsigned int EVR13UVVAL     : 8;	/* 1.3 V Regulator Under-voltage threshold */
		unsigned int EVR33UVVAL     : 8;	/* 3.3 V Regulator Under-voltage threshold */
		unsigned int SWDUVVAL       : 8;	/* Supply monitor (SWD) Under-voltage threshold value */
		unsigned int                : 6;
		unsigned int SLCK           : 1;	/* HSM Security Lock */
		/* const */ unsigned int LCK            : 1;	/* Lock Status */
	} B;
	int I;
	unsigned int U;

} SCU_EVRUVMON_type;
#define SCU_EVRUVMON	(*( SCU_EVRUVMON_type *) 0xf00361a0u)	/* EVR Under-voltage Configuration Register */

typedef volatile union
{
	struct
	{ 
		unsigned int EN0            : 1;	/* External Clock Enable for EXTCLK0 */
		unsigned int                : 1;
		unsigned int SEL0           : 4;	/* External Clock Select for EXTCLK0 */
		unsigned int                : 10;
		unsigned int EN1            : 1;	/* External Clock Enable for EXTCLK1 */
		unsigned int NSEL           : 1;	/* Negation Selection */
		unsigned int SEL1           : 4;	/* External Clock Select for EXTCLK1 */
		unsigned int                : 2;
		unsigned int DIV1           : 8;	/* External Clock Divider for EXTCLK1 */
	} B;
	int I;
	unsigned int U;

} SCU_EXTCON_type;
#define SCU_EXTCON	(*( SCU_EXTCON_type *) 0xf003603cu)	/* External Clock Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int STEP           : 10;	/* Step Value */
		unsigned int                : 4;
		unsigned int DM             : 2;	/* Divider Mode */
		/* const */ unsigned int RESULT         : 10;	/* Result Value */
		unsigned int                : 5;
		unsigned int DISCLK         : 1;	/* Disable Clock */
	} B;
	int I;
	unsigned int U;

} SCU_FDR_type;
#define SCU_FDR	(*( SCU_FDR_type *) 0xf0036038u)	/* Fractional Divider Register */

typedef volatile union
{
	struct
	{ 
		unsigned int FS0            : 1;	/* Set Flag INTF0 for Channel 0 */
		unsigned int FS1            : 1;	/* Set Flag INTF1 for Channel 1 */
		unsigned int FS2            : 1;	/* Set Flag INTF2 for Channel 2 */
		unsigned int FS3            : 1;	/* Set Flag INTF3 for Channel 3 */
		unsigned int FS4            : 1;	/* Set Flag INTF4 for Channel 4 */
		unsigned int FS5            : 1;	/* Set Flag INTF5 for Channel 5 */
		unsigned int FS6            : 1;	/* Set Flag INTF6 for Channel 6 */
		unsigned int FS7            : 1;	/* Set Flag INTF7 for Channel 7 */
		unsigned int                : 8;
		unsigned int FC0            : 1;	/* Clear Flag INTF0 for Channel 0 */
		unsigned int FC1            : 1;	/* Clear Flag INTF1 for Channel 1 */
		unsigned int FC2            : 1;	/* Clear Flag INTF2 for Channel 2 */
		unsigned int FC3            : 1;	/* Clear Flag INTF3 for Channel 3 */
		unsigned int FC4            : 1;	/* Clear Flag INTF4 for Channel 4 */
		unsigned int FC5            : 1;	/* Clear Flag INTF5 for Channel 5 */
		unsigned int FC6            : 1;	/* Clear Flag INTF6 for Channel 6 */
		unsigned int FC7            : 1;	/* Clear Flag INTF7 for Channel 7 */
		unsigned int                : 8;
	} B;
	int I;
	unsigned int U;

} SCU_FMR_type;
#define SCU_FMR	(*( SCU_FMR_type *) 0xf0036224u)	/* Flag Modification Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int MODREV         : 8;	/* Module Revision Number */
		/* const */ unsigned int MODTYPE        : 8;	/* Module Type */
		/* const */ unsigned int MODNUMBER      : 16;	/* Module Number */
	} B;
	int I;
	unsigned int U;

} SCU_ID_type;
#define SCU_ID	(*( SCU_ID_type *) 0xf0036008u)	/* Identification Register */

typedef volatile union
{
	struct
	{ 
		unsigned int IPEN00         : 1;	/* Flag Pattern Enable for Channel 0 */
		unsigned int IPEN01         : 1;	/* Flag Pattern Enable for Channel 0 */
		unsigned int IPEN02         : 1;	/* Flag Pattern Enable for Channel 0 */
		unsigned int IPEN03         : 1;	/* Flag Pattern Enable for Channel 0 */
		unsigned int IPEN04         : 1;	/* Flag Pattern Enable for Channel 0 */
		unsigned int IPEN05         : 1;	/* Flag Pattern Enable for Channel 0 */
		unsigned int IPEN06         : 1;	/* Flag Pattern Enable for Channel 0 */
		unsigned int IPEN07         : 1;	/* Flag Pattern Enable for Channel 0 */
		unsigned int                : 5;
		unsigned int GEEN0          : 1;	/* Generate Event Enable 0 */
		unsigned int IGP0           : 2;	/* Interrupt Gating Pattern 0 */
		unsigned int IPEN10         : 1;	/* Interrupt Pattern Enable for Channel 1 */
		unsigned int IPEN11         : 1;	/* Interrupt Pattern Enable for Channel 1 */
		unsigned int IPEN12         : 1;	/* Interrupt Pattern Enable for Channel 1 */
		unsigned int IPEN13         : 1;	/* Interrupt Pattern Enable for Channel 1 */
		unsigned int IPEN14         : 1;	/* Interrupt Pattern Enable for Channel 1 */
		unsigned int IPEN15         : 1;	/* Interrupt Pattern Enable for Channel 1 */
		unsigned int IPEN16         : 1;	/* Interrupt Pattern Enable for Channel 1 */
		unsigned int IPEN17         : 1;	/* Interrupt Pattern Enable for Channel 1 */
		unsigned int                : 5;
		unsigned int GEEN1          : 1;	/* Generate Event Enable 1 */
		unsigned int IGP1           : 2;	/* Interrupt Gating Pattern 1 */
	} B;
	int I;
	unsigned int U;

} SCU_IGCR0_type;
#define SCU_IGCR0	(*( SCU_IGCR0_type *) 0xf003622cu)	/* Flag Gating Register 0 */
#define SCU_IGCR1	(*( SCU_IGCR0_type *) 0xf0036230u)	/* Flag Gating Register 1 */
#define SCU_IGCR2	(*( SCU_IGCR0_type *) 0xf0036234u)	/* Flag Gating Register 2 */
#define SCU_IGCR3	(*( SCU_IGCR0_type *) 0xf0036238u)	/* Flag Gating Register 3 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int P0             : 1;	/* Input Bit 0 */
		/* const */ unsigned int P1             : 1;	/* Input Bit 1 */
		/* const */ unsigned int                : 30;
	} B;
	int I;
	unsigned int U;

} SCU_IN_type;
#define SCU_IN	(*( SCU_IN_type *) 0xf00360acu)	/* ESR Input Register */

typedef volatile union
{
	struct
	{ 
		unsigned int                : 4;
		unsigned int PC0            : 4;	/* Control for ESR Pin x */
		unsigned int                : 4;
		unsigned int PC1            : 4;	/* Control for ESR Pin x */
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} SCU_IOCR_type;
#define SCU_IOCR	(*( SCU_IOCR_type *) 0xf00360a0u)	/* Input/Output Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int LBISTREQ       : 1;	/* LBIST Request */
		unsigned int LBISTREQP      : 1;	/* LBIST Request Protection Bit */
		unsigned int PATTERNS       : 14;	/* LBIST Pattern Number */
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} SCU_LBISTCTRL0_type;
#define SCU_LBISTCTRL0	(*( SCU_LBISTCTRL0_type *) 0xf0036164u)	/* Logic BIST Control 0 Register */

typedef volatile union
{
	struct
	{ 
		unsigned int SEED           : 23;	/* LBIST Seed */
		unsigned int                : 1;
		unsigned int SPLITSH        : 3;	/* LBIST Split-Shift Selection */
		unsigned int BODY           : 1;	/* Body Application Indicator */
		unsigned int LBISTFREQU     : 4;	/* LBIST Frequency Selection */
	} B;
	int I;
	unsigned int U;

} SCU_LBISTCTRL1_type;
#define SCU_LBISTCTRL1	(*( SCU_LBISTCTRL1_type *) 0xf0036168u)	/* Logic BIST Control 1 Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int SIGNATURE      : 24;	/* LBIST Signature */
		/* const */ unsigned int                : 7;
		/* const */ unsigned int LBISTDONE      : 1;	/* LBIST Execution Indicator */
	} B;
	int I;
	unsigned int U;

} SCU_LBISTCTRL2_type;
#define SCU_LBISTCTRL2	(*( SCU_LBISTCTRL2_type *) 0xf003616cu)	/* Logic BIST Control 2 Register */

typedef volatile union
{
	struct
	{ 
		unsigned int                : 16;
		/* const */ unsigned int LS             : 1;	/* Lockstep Mode Status */
		unsigned int                : 14;
		unsigned int LSEN           : 1;	/* Lockstep Enable */
	} B;
	int I;
	unsigned int U;

} SCU_LCLCON0_type;
#define SCU_LCLCON0	(*( SCU_LCLCON0_type *) 0xf0036134u)	/* LCL CPU0 Control Register */
#define SCU_LCLCON1	(*( SCU_LCLCON0_type *) 0xf0036138u)	/* LCL CPU1 Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int LCLT0          : 1;	/* LCL0 Lockstep Test */
		unsigned int LCLT1          : 1;	/* LCL1 Lockstep Test */
		unsigned int                : 30;
	} B;
	int I;
	unsigned int U;

} SCU_LCLTEST_type;
#define SCU_LCLTEST	(*( SCU_LCLTEST_type *) 0xf003613cu)	/* LCL Test Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int DEPT           : 5;	/* Department Identification Number */
		/* const */ unsigned int MANUF          : 11;	/* Manufacturer Identification Number */
		/* const */ unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} SCU_MANID_type;
#define SCU_MANID	(*( SCU_MANID_type *) 0xf0036144u)	/* Manufacturer Identification Register */

typedef volatile union
{
	struct
	{ 
		unsigned int PS0            : 1;	/* ESR0 Pin Set Bit 0 */
		unsigned int PS1            : 1;	/* ESR1 Pin Set Bit 1 */
		unsigned int                : 14;
		unsigned int PCL0           : 1;	/* ESR0 Pin Clear Bit 0 */
		unsigned int PCL1           : 1;	/* ESR1 Pin Clear Bit 1 */
		unsigned int                : 14;
	} B;
	int I;
	unsigned int U;

} SCU_OMR_type;
#define SCU_OMR	(*( SCU_OMR_type *) 0xf00360a8u)	/* ESR Output Modification Register */

typedef volatile union
{
	struct
	{ 
		unsigned int                : 1;
		/* const */ unsigned int PLLLV          : 1;	/* Oscillator for PLL Valid Low Status Bit */
		unsigned int OSCRES         : 1;	/* Oscillator Watchdog Reset */
		unsigned int GAINSEL        : 2;	/* Oscillator Gain Selection */
		unsigned int MODE           : 2;	/* Oscillator Mode */
		unsigned int SHBY           : 1;	/* Shaper Bypass */
		/* const */ unsigned int PLLHV          : 1;	/* Oscillator for PLL Valid High Status Bit */
		unsigned int                : 1;
		/* const */ unsigned int X1D            : 1;	/* XTAL1 Data Value */
		unsigned int X1DEN          : 1;	/* XTAL1 Data Enable */
		unsigned int                : 4;
		unsigned int OSCVAL         : 5;	/* OSC Frequency Value */
		unsigned int                : 2;
		unsigned int APREN          : 1;	/* Amplitude Regulation Enable */
		unsigned int CAP0EN         : 1;	/* Capacitance 0 Enable */
		unsigned int CAP1EN         : 1;	/* Capacitance 1 Enable */
		unsigned int CAP2EN         : 1;	/* Capacitance 2 Enable */
		unsigned int CAP3EN         : 1;	/* Capacitance 3 Enable */
		unsigned int                : 4;
	} B;
	int I;
	unsigned int U;

} SCU_OSCCON_type;
#define SCU_OSCCON	(*( SCU_OSCCON_type *) 0xf0036010u)	/* OSC Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int P0             : 1;	/* Output Bit 0 */
		unsigned int P1             : 1;	/* Output Bit 1 */
		unsigned int                : 30;
	} B;
	int I;
	unsigned int U;

} SCU_OUT_type;
#define SCU_OUT	(*( SCU_OUT_type *) 0xf00360a4u)	/* ESR Output Register */

typedef volatile union
{
	struct
	{ 
		unsigned int CSEL0          : 1;	/* CPU Select 0 */
		unsigned int CSEL1          : 1;	/* CPU Select 1 */
		unsigned int CSEL2          : 1;	/* CPU Select 2 */
		unsigned int                : 13;
		unsigned int OVSTRT         : 1;	/* Overlay Start */
		unsigned int OVSTP          : 1;	/* Overlay Stop */
		unsigned int DCINVAL        : 1;	/* Data Cache Invalidate */
		unsigned int                : 5;
		unsigned int OVCONF         : 1;	/* Overlay Configured */
		unsigned int POVCONF        : 1;	/* Write Protection for OVCONF */
		unsigned int                : 6;
	} B;
	int I;
	unsigned int U;

} SCU_OVCCON_type;
#define SCU_OVCCON	(*( SCU_OVCCON_type *) 0xf00361e4u)	/* Overlay Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int OVEN0          : 1;	/* Overlay Enable 0 */
		unsigned int OVEN1          : 1;	/* Overlay Enable 1 */
		unsigned int OVEN2          : 1;	/* Overlay Enable 1 */
		unsigned int                : 29;
	} B;
	int I;
	unsigned int U;

} SCU_OVCENABLE_type;
#define SCU_OVCENABLE	(*( SCU_OVCENABLE_type *) 0xf00361e0u)	/* Overlay Enable Register */

typedef volatile union
{
	struct
	{ 
		unsigned int PDIS0          : 1;	/* Pad Disable for ESR Pin 0 */
		unsigned int PDIS1          : 1;	/* Pad Disable for ESR Pin 1 */
		unsigned int                : 30;
	} B;
	int I;
	unsigned int U;

} SCU_PDISC_type;
#define SCU_PDISC	(*( SCU_PDISC_type *) 0xf003618cu)	/* Pad Disable Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int PD0            : 3;	/* Pad Driver Mode for ESR Pins 0 and 1 */
		unsigned int PL0            : 1;	/* Pad Level Selection for ESR Pins 0 and 1 */
		unsigned int PD1            : 3;	/* Pad Driver Mode for ESR Pins 0 and 1 */
		unsigned int PL1            : 1;	/* Pad Level Selection for ESR Pins 0 and 1 */
		unsigned int                : 24;
	} B;
	int I;
	unsigned int U;

} SCU_PDR_type;
#define SCU_PDR	(*( SCU_PDR_type *) 0xf003609cu)	/* ESR Pad Driver Mode Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int PDR0           : 1;	/* Pattern Detection Result of Channel 0 */
		/* const */ unsigned int PDR1           : 1;	/* Pattern Detection Result of Channel 1 */
		/* const */ unsigned int PDR2           : 1;	/* Pattern Detection Result of Channel 2 */
		/* const */ unsigned int PDR3           : 1;	/* Pattern Detection Result of Channel 3 */
		/* const */ unsigned int PDR4           : 1;	/* Pattern Detection Result of Channel 4 */
		/* const */ unsigned int PDR5           : 1;	/* Pattern Detection Result of Channel 5 */
		/* const */ unsigned int PDR6           : 1;	/* Pattern Detection Result of Channel 6 */
		/* const */ unsigned int PDR7           : 1;	/* Pattern Detection Result of Channel 7 */
		/* const */ unsigned int                : 24;
	} B;
	int I;
	unsigned int U;

} SCU_PDRR_type;
#define SCU_PDRR	(*( SCU_PDRR_type *) 0xf0036228u)	/* Pattern Detection Result Register */

typedef volatile union
{
	struct
	{ 
		unsigned int VCOBYP         : 1;	/* VCO Bypass */
		unsigned int VCOPWD         : 1;	/* VCO Power Saving Mode */
		unsigned int MODEN          : 1;	/* Modulation Enable */
		unsigned int                : 1;
		unsigned int SETFINDIS      : 1;	/* Set Status Bit PLLSTAT.FINDIS */
		unsigned int CLRFINDIS      : 1;	/* Clear Status Bit PLLSTAT.FINDIS */
		unsigned int OSCDISCDIS     : 1;	/* Oscillator Disconnect Disable */
		unsigned int                : 2;
		unsigned int NDIV           : 7;	/* N-Divider Value */
		unsigned int PLLPWD         : 1;	/* PLL Power Saving Mode */
		unsigned int                : 1;
		unsigned int RESLD          : 1;	/* Restart VCO Lock Detection */
		unsigned int                : 5;
		unsigned int PDIV           : 4;	/* P-Divider Value */
		unsigned int                : 4;
	} B;
	int I;
	unsigned int U;

} SCU_PLLCON0_type;
#define SCU_PLLCON0	(*( SCU_PLLCON0_type *) 0xf0036018u)	/* PLL Configuration 0 Register */

typedef volatile union
{
	struct
	{ 
		unsigned int K2DIV          : 7;	/* K2-Divider Value */
		unsigned int                : 1;
		unsigned int K3DIV          : 7;	/* K3-Divider Value */
		unsigned int                : 1;
		unsigned int K1DIV          : 7;	/* K1-Divider Value */
		unsigned int                : 9;
	} B;
	int I;
	unsigned int U;

} SCU_PLLCON1_type;
#define SCU_PLLCON1	(*( SCU_PLLCON1_type *) 0xf003601cu)	/* PLL Configuration 1 Register */

typedef volatile union
{
	struct
	{ 
		unsigned int MODCFG         : 16;	/* Modulation Configuration */
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} SCU_PLLCON2_type;
#define SCU_PLLCON2	(*( SCU_PLLCON2_type *) 0xf0036020u)	/* PLL Configuration 2 Register */

typedef volatile union
{
	struct
	{ 
		unsigned int VCOBYP         : 1;	/* VCO Bypass */
		unsigned int VCOPWD         : 1;	/* VCO Power Saving Mode */
		unsigned int                : 2;
		unsigned int SETFINDIS      : 1;	/* Set Status Bit PLLERAYSTAT.FINDIS */
		unsigned int CLRFINDIS      : 1;	/* Clear Status Bit PLLERAYSTAT.FINDIS */
		unsigned int OSCDISCDIS     : 1;	/* Oscillator Disconnect Disable */
		unsigned int                : 2;
		unsigned int NDIV           : 5;	/* N-Divider Value */
		unsigned int                : 2;
		unsigned int PLLPWD         : 1;	/* PLL Power Saving Mode */
		unsigned int                : 1;
		unsigned int RESLD          : 1;	/* Restart VCO Lock Detection */
		unsigned int                : 5;
		unsigned int PDIV           : 4;	/* P-Divider Value */
		unsigned int                : 4;
	} B;
	int I;
	unsigned int U;

} SCU_PLLERAYCON0_type;
#define SCU_PLLERAYCON0	(*( SCU_PLLERAYCON0_type *) 0xf0036028u)	/* PLL_ERAY Configuration 0 Register */

typedef volatile union
{
	struct
	{ 
		unsigned int K2DIV          : 7;	/* K2-Divider Value */
		unsigned int                : 1;
		unsigned int K3DIV          : 4;	/* K3-Divider Value */
		unsigned int                : 4;
		unsigned int K1DIV          : 7;	/* K1-Divider Value */
		unsigned int                : 9;
	} B;
	int I;
	unsigned int U;

} SCU_PLLERAYCON1_type;
#define SCU_PLLERAYCON1	(*( SCU_PLLERAYCON1_type *) 0xf003602cu)	/* PLL_ERAY Configuration 1 Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int VCOBYST        : 1;	/* VCO Bypass Status */
		/* const */ unsigned int PWDSTAT        : 1;	/* PLL_ERAY Power-saving Mode Status */
		/* const */ unsigned int VCOLOCK        : 1;	/* PLL VCO Lock Status */
		/* const */ unsigned int FINDIS         : 1;	/* Input Clock Disconnect Select Status */
		/* const */ unsigned int K1RDY          : 1;	/* K1 Divider Ready Status */
		/* const */ unsigned int K2RDY          : 1;	/* K2 Divider Ready Status */
		/* const */ unsigned int                : 26;
	} B;
	int I;
	unsigned int U;

} SCU_PLLERAYSTAT_type;
#define SCU_PLLERAYSTAT	(*( SCU_PLLERAYSTAT_type *) 0xf0036024u)	/* PLL_ERAY Status Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int VCOBYST        : 1;	/* VCO Bypass Status */
		/* const */ unsigned int                : 1;
		/* const */ unsigned int VCOLOCK        : 1;	/* PLL VCO Lock Status */
		/* const */ unsigned int FINDIS         : 1;	/* Input Clock Disconnect Select Status */
		/* const */ unsigned int K1RDY          : 1;	/* K1 Divider Ready Status */
		/* const */ unsigned int K2RDY          : 1;	/* K2 Divider Ready Status */
		/* const */ unsigned int                : 1;
		/* const */ unsigned int MODRUN         : 1;	/* Modulation Run */
		/* const */ unsigned int                : 24;
	} B;
	int I;
	unsigned int U;

} SCU_PLLSTAT_type;
#define SCU_PLLSTAT	(*( SCU_PLLSTAT_type *) 0xf0036014u)	/* PLL Status Register */

typedef volatile union
{
	struct
	{ 
		unsigned int REQSLP         : 2;	/* Idle Mode and Sleep Mode Request */
		unsigned int SMUSLP         : 1;	/* SMU CPU Idle Request */
		unsigned int                : 5;
		/* const */ unsigned int PMST           : 3;	/* Power management Status */
		unsigned int                : 21;
	} B;
	int I;
	unsigned int U;

} SCU_PMCSR0_type;
#define SCU_PMCSR0	(*( SCU_PMCSR0_type *) 0xf00360d4u)	/* Power Management Control and Status Register */
#define SCU_PMCSR1	(*( SCU_PMCSR0_type *) 0xf00360d8u)	/* Power Management Control and Status Register */
#define SCU_PMCSR2	(*( SCU_PMCSR0_type *) 0xf00360dcu)	/* Power Management Control and Status Register */

typedef volatile union
{
	struct
	{ 
		unsigned int                : 1;
		unsigned int ESR1WKEN       : 1;	/* ESR1 Wake-up enable from Standby */
		unsigned int PINAWKEN       : 1;	/* Pin A Wake-up enable from Standby */
		unsigned int PINBWKEN       : 1;	/* Pin B Wake-up enable from Standby */
		unsigned int ESR0DFEN       : 1;	/* Digital Filter Enable */
		unsigned int ESR0EDCON      : 2;	/* Edge Detection Control */
		unsigned int ESR1DFEN       : 1;	/* Digital Filter Enable */
		unsigned int ESR1EDCON      : 2;	/* Edge Detection Control */
		unsigned int PINADFEN       : 1;	/* Digital Filter Enable */
		unsigned int PINAEDCON      : 2;	/* Edge Detection Control */
		unsigned int PINBDFEN       : 1;	/* Digital Filter Enable */
		unsigned int PINBEDCON      : 2;	/* Edge Detection Control */
		unsigned int                : 1;
		unsigned int STBYRAMSEL     : 2;	/* Standby RAM supply in Standby Mode */
		unsigned int                : 2;
		unsigned int TRISTEN        : 1;	/* Bit protection for Tristate request bit (TRISTREQ) */
		unsigned int TRISTREQ       : 1;	/* Tristate enable */
		unsigned int PORSTDF        : 1;	/* PORST Digital Filter enable */
		unsigned int PWRWKEN        : 1;	/* Wake-up Enable on VEXT Supply ramp-up */
		unsigned int DCDCSYNC       : 1;	/* DC-DC Synchronisation Enable */
		unsigned int BLNKFIL        : 3;	/* Blanking Filter delay for VEXT Supply Wake-up */
		unsigned int ESR0TRIST      : 1;	/* ESR0 Tristate enable */
		unsigned int                : 1;
		/* const */ unsigned int LCK            : 1;	/* Lock Status */
	} B;
	int I;
	unsigned int U;

} SCU_PMSWCR0_type;
#define SCU_PMSWCR0	(*( SCU_PMSWCR0_type *) 0xf00360c8u)	/* Standby and Wake-up Control Register 0 */

typedef volatile union
{
	struct
	{ 
		unsigned int                : 8;
		unsigned int CPUIDLSEL      : 3;	/* CPU selection for Idle mode */
		unsigned int                : 1;
		unsigned int IRADIS         : 1;	/* Idle-Request-Acknowledge Sequence Disable */
		unsigned int                : 11;
		unsigned int CPUSEL         : 3;	/* CPU selection for Sleep and Standby mode */
		unsigned int STBYEVEN       : 1;	/* Standby Entry Event configuration enable */
		unsigned int STBYEV         : 3;	/* Standby Entry Event Configuration */
		unsigned int                : 1;
	} B;
	int I;
	unsigned int U;

} SCU_PMSWCR1_type;
#define SCU_PMSWCR1	(*( SCU_PMSWCR1_type *) 0xf00360e8u)	/* Standby and Wake-up Control Register 1 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int                : 2;
		/* const */ unsigned int ESR1WKP        : 1;	/* ESR1 Wake-up flag */
		/* const */ unsigned int ESR1OVRUN      : 1;	/* ESR1 Overrun status flag */
		/* const */ unsigned int PINAWKP        : 1;	/* Pin A (P14.1) Wake-up flag */
		/* const */ unsigned int PINAOVRUN      : 1;	/* Pin A Overrun status flag */
		/* const */ unsigned int PINBWKP        : 1;	/* Pin B (P15.1) Wake-up flag */
		/* const */ unsigned int PINBOVRUN      : 1;	/* Pin B Overrun status flag */
		/* const */ unsigned int PWRWKP         : 1;	/* Wake-up event on VEXT Supply ramp-up */
		/* const */ unsigned int PORSTDF        : 1;	/* PORST Digital Filter status */
		/* const */ unsigned int HWCFGEVR       : 3;	/* EVR Hardware Configuration */
		/* const */ unsigned int STBYRAM        : 2;	/* Standby RAM Supply status */
		/* const */ unsigned int TRIST          : 1;	/* Pad Tristate / Pull-up status */
		/* const */ unsigned int                : 4;
		/* const */ unsigned int ESR1WKEN       : 1;	/* ESR1 Wake-up enable status */
		/* const */ unsigned int PINAWKEN       : 1;	/* Pin A Wake-up enable status */
		/* const */ unsigned int PINBWKEN       : 1;	/* Pin B Wake-up enable status */
		/* const */ unsigned int PWRWKEN        : 1;	/* Wake-up Enable status on VEXT Supply ramp-up */
		/* const */ unsigned int BLNKFIL        : 3;	/* Blanking Filter Delay for VEXT Supply Wake-up */
		/* const */ unsigned int ESR0TRIST      : 1;	/* ESR0 pin status during Standby */
		/* const */ unsigned int                : 4;
	} B;
	int I;
	unsigned int U;

} SCU_PMSWSTAT_type;
#define SCU_PMSWSTAT	(*( SCU_PMSWSTAT_type *) 0xf00360ccu)	/* Standby and Wake-up Status Flag Register */

typedef volatile union
{
	struct
	{ 
		unsigned int                : 2;
		unsigned int ESR1WKPCLR     : 1;	/* ESR1 Wake-up indication flag clear */
		unsigned int ESR1OVRUNCLR   : 1;	/* ESR1 Overrun status indication flag clear */
		unsigned int PINAWKPCLR     : 1;	/* PINA Wake-up indication flag clear */
		unsigned int PINAOVRUNCLR   : 1;	/* PINA Overrun status indication flag clear */
		unsigned int PINBWKPCLR     : 1;	/* PINB Wake-up indication flag clear */
		unsigned int PINBOVRUNCLR   : 1;	/* PINB Overrun status indication flag clear */
		unsigned int PWRWKPCLR      : 1;	/* PWRWKP Wake-up indication flag clear */
		unsigned int                : 23;
	} B;
	int I;
	unsigned int U;

} SCU_PMSWSTATCLR_type;
#define SCU_PMSWSTATCLR	(*( SCU_PMSWSTATCLR_type *) 0xf00360d0u)	/* Standby and Wake-up Status Clear Register */

typedef volatile union
{
	struct
	{ 
		unsigned int ESR0           : 2;	/* ESR0 Reset Request Trigger Reset Configuration */
		unsigned int ESR1           : 2;	/* ESR1 Reset Request Trigger Reset Configuration */
		unsigned int                : 2;
		unsigned int SMU            : 2;	/* SMU Reset Request Trigger Reset Configuration */
		unsigned int SW             : 2;	/* SW Reset Request Trigger Reset Configuration */
		unsigned int STM0           : 2;	/* STM0 Reset Request Trigger Reset Configuration */
		unsigned int STM1           : 2;	/* STM1 Reset Request Trigger Reset Configuration (If Product has STM1) */
		unsigned int STM2           : 2;	/* STM2 Reset Request Trigger Reset Configuration (If Product has STM2) */
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} SCU_RSTCON_type;
#define SCU_RSTCON	(*( SCU_RSTCON_type *) 0xf0036058u)	/* Reset Configuration Register */

typedef volatile union
{
	struct
	{ 
		unsigned int                : 1;
		unsigned int CLRC           : 1;	/* Clear Cold Reset Status */
		/* const */ unsigned int Reserved       : 10;	/* Reserved */
		/* const */ unsigned int CSS0           : 1;	/* CPU0 Safe State Reached */
		/* const */ unsigned int CSS1           : 1;	/* CPU1 Safe State Reached */
		/* const */ unsigned int CSS2           : 1;	/* CPU2 Safe State Reached */
		/* const */ unsigned int Reserved_6     : 1;	/* Reserved */
		unsigned int USRINFO        : 16;	/* User Information */
	} B;
	int I;
	unsigned int U;

} SCU_RSTCON2_type;
#define SCU_RSTCON2	(*( SCU_RSTCON2_type *) 0xf0036064u)	/* Additional Reset Control Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int ESR0           : 1;	/* Reset Request Trigger Reset Status for ESR0 */
		/* const */ unsigned int ESR1           : 1;	/* Reset Request Trigger Reset Status for ESR1 */
		/* const */ unsigned int                : 1;
		/* const */ unsigned int SMU            : 1;	/* Reset Request Trigger Reset Status for SMU */
		/* const */ unsigned int SW             : 1;	/* Reset Request Trigger Reset Status for SW */
		/* const */ unsigned int STM0           : 1;	/* Reset Request Trigger Reset Status for STM0 Compare Match */
		/* const */ unsigned int STM1           : 1;	/* Reset Request Trigger Reset Status for STM1 Compare Match (If Product has STM1) */
		/* const */ unsigned int STM2           : 1;	/* Reset Request Trigger Reset Status for STM2 Compare Match (If Product has STM2) */
		/* const */ unsigned int                : 8;
		/* const */ unsigned int PORST          : 1;	/* Reset Request Trigger Reset Status for PORST */
		/* const */ unsigned int                : 1;
		/* const */ unsigned int CB0            : 1;	/* Reset Request Trigger Reset Status for Cerberus System Reset */
		/* const */ unsigned int CB1            : 1;	/* Reset Request Trigger Reset Status for Cerberus Debug Reset */
		/* const */ unsigned int CB3            : 1;	/* Reset Request Trigger Reset Status for Cerberus Application Reset */
		/* const */ unsigned int                : 2;
		/* const */ unsigned int EVR13          : 1;	/* Reset Request Trigger Reset Status for EVR13 */
		/* const */ unsigned int EVR33          : 1;	/* Reset Request Trigger Reset Status for EVR33 */
		/* const */ unsigned int SWD            : 1;	/* Reset Request Trigger Reset Status for Supply Watchdog (SWD) */
		/* const */ unsigned int                : 2;
		/* const */ unsigned int STBYR          : 1;	/* Reset Request Trigger Reset Status for Standby Regulator Watchdog (STBYR) */
		/* const */ unsigned int                : 3;
	} B;
	int I;
	unsigned int U;

} SCU_RSTSTAT_type;
#define SCU_RSTSTAT	(*( SCU_RSTSTAT_type *) 0xf0036050u)	/* Reset Status Register */

typedef volatile union
{
	struct
	{ 
		unsigned int HBT            : 1;	/* Heartbeat */
		unsigned int Res            : 31;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} SCU_SAFECON_type;
#define SCU_SAFECON	(*( SCU_SAFECON_type *) 0xf0036150u)	/* Safety Heartbeat Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int HWCFG          : 8;	/* Hardware Configuration Setting */
		/* const */ unsigned int FTM            : 7;	/* Firmware Test Setting */
		/* const */ unsigned int MODE           : 1;	/* MODE */
		/* const */ unsigned int FCBAE          : 1;	/* Flash Config. Sector Access Enable */
		/* const */ unsigned int LUDIS          : 1;	/* Latch Update Disable */
		/* const */ unsigned int Res            : 1;	/* Reserved */
		/* const */ unsigned int TRSTL          : 1;	/* TRSTL Status */
		/* const */ unsigned int SPDEN          : 1;	/* Single Pin DAP Mode Enable */
		/* const */ unsigned int Res_9          : 3;	/* Reserved */
		/* const */ unsigned int RAMINT         : 1;	/* RAM Content Security Integrity */
		/* const */ unsigned int Res_11         : 7;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} SCU_STSTAT_type;
#define SCU_STSTAT	(*( SCU_STSTAT_type *) 0xf00360c0u)	/* Start-up Status Register */

typedef volatile union
{
	struct
	{ 
		unsigned int                : 1;
		unsigned int SWRSTREQ       : 1;	/* Software Reset Request */
		unsigned int                : 6;
		unsigned int RES            : 8;	/* Reserved */
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} SCU_SWRSTCON_type;
#define SCU_SWRSTCON	(*( SCU_SWRSTCON_type *) 0xf0036060u)	/* Software Reset Configuration Register */

typedef volatile union
{
	struct
	{ 
		unsigned int CCTRIG0        : 1;	/* Capture Compare Trigger 0 */
		unsigned int                : 1;
		unsigned int RAMINTM        : 2;	/* RAM Integrity Modify */
		unsigned int SETLUDIS       : 1;	/* Set Latch Update Disable */
		unsigned int                : 3;
		unsigned int DATM           : 1;	/* Disable Application Test Mode (ATM) */
		unsigned int                : 23;
	} B;
	int I;
	unsigned int U;

} SCU_SYSCON_type;
#define SCU_SYSCON	(*( SCU_SYSCON_type *) 0xf003607cu)	/* System Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int ESR0T          : 1;	/* Clear Trap Request Flag ESR0T */
		unsigned int ESR1T          : 1;	/* Clear Trap Request Flag ESR1T */
		unsigned int                : 1;
		unsigned int SMUT           : 1;	/* Clear Trap Request Flag SMUT */
		unsigned int                : 28;
	} B;
	int I;
	unsigned int U;

} SCU_TRAPCLR_type;
#define SCU_TRAPCLR	(*( SCU_TRAPCLR_type *) 0xf003612cu)	/* Trap Clear Register */

typedef volatile union
{
	struct
	{ 
		unsigned int ESR0T          : 1;	/* Disable Trap Request ESR0T */
		unsigned int ESR1T          : 1;	/* Disable Trap Request ESR1T */
		unsigned int                : 1;
		unsigned int SMUT           : 1;	/* Disable Trap Request SMUT */
		unsigned int                : 28;
	} B;
	int I;
	unsigned int U;

} SCU_TRAPDIS_type;
#define SCU_TRAPDIS	(*( SCU_TRAPDIS_type *) 0xf0036130u)	/* Trap Disable Register */

typedef volatile union
{
	struct
	{ 
		unsigned int ESR0T          : 1;	/* Set Trap Request Flag ESR0T */
		unsigned int ESR1T          : 1;	/* Set Trap Request Flag ESR1T */
		unsigned int                : 1;
		unsigned int SMUT           : 1;	/* Set Trap Request Flag SMUT */
		unsigned int                : 28;
	} B;
	int I;
	unsigned int U;

} SCU_TRAPSET_type;
#define SCU_TRAPSET	(*( SCU_TRAPSET_type *) 0xf0036128u)	/* Trap Set Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int ESR0T          : 1;	/* ESR0 Trap Request Flag */
		/* const */ unsigned int ESR1T          : 1;	/* ESR1 Trap Request Flag */
		/* const */ unsigned int                : 1;
		/* const */ unsigned int SMUT           : 1;	/* SMU Alarm Trap Request Flag */
		/* const */ unsigned int                : 28;
	} B;
	int I;
	unsigned int U;

} SCU_TRAPSTAT_type;
#define SCU_TRAPSTAT	(*( SCU_TRAPSTAT_type *) 0xf0036124u)	/* Trap Status Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 ENDINIT        : 1;	/* End-of-Initialization Control Bit */
		unsigned __sfrbit32 LCK            : 1;	/* Lock Bit to Control Access to WDTxCON0 */
		unsigned __sfrbit32 PW             : 14;	/* User-Definable Password Field for Access to WDTxCON0 */
		unsigned __sfrbit32 REL            : 16;	/* Reload Value for the WDT (also Time Check Value) */
	} B;
	int I;
	unsigned int U;

} SCU_WDTCPU0CON0_type;
#define SCU_WDTCPU0CON0	(*( SCU_WDTCPU0CON0_type *) 0xf0036100u)	/* CPU0 WDT Control Register 0 */
#define SCU_WDTCPU1CON0	(*( SCU_WDTCPU0CON0_type *) 0xf003610cu)	/* CPU1 WDT Control Register 0 */
#define SCU_WDTCPU2CON0	(*( SCU_WDTCPU0CON0_type *) 0xf0036118u)	/* CPU2 WDT Control Register 0 */
#define SCU_WDTSCON0	(*( SCU_WDTCPU0CON0_type *) 0xf00360f0u)	/* Safety WDT Control Register 0 */

typedef volatile union
{
	struct
	{ 
		unsigned int                : 2;
		unsigned int IR0            : 1;	/* Input Frequency Request Control */
		unsigned int DR             : 1;	/* Disable Request Control Bit */
		unsigned int                : 1;
		unsigned int IR1            : 1;	/* Input Frequency Request Control */
		unsigned int UR             : 1;	/* Unlock Restriction Request Control Bit */
		unsigned int PAR            : 1;	/* Password Auto-sequence Request Bit */
		unsigned int TCR            : 1;	/* Counter Check Request Bit */
		unsigned int TCTR           : 7;	/* Timer Check Tolerance Request */
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} SCU_WDTCPU0CON1_type;
#define SCU_WDTCPU0CON1	(*( SCU_WDTCPU0CON1_type *) 0xf0036104u)	/* CPU0 WDT Control Register 1 */
#define SCU_WDTCPU1CON1	(*( SCU_WDTCPU0CON1_type *) 0xf0036110u)	/* CPU1 WDT Control Register 1 */
#define SCU_WDTCPU2CON1	(*( SCU_WDTCPU0CON1_type *) 0xf003611cu)	/* CPU2 WDT Control Register 1 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int AE             : 1;	/* Watchdog Access Error Status Flag */
		/* const */ unsigned int OE             : 1;	/* Watchdog Overflow Error Status Flag */
		/* const */ unsigned int IS0            : 1;	/* Watchdog Input Clock Status */
		/* const */ unsigned int DS             : 1;	/* Watchdog Enable/Disable Status Flag */
		/* const */ unsigned int TO             : 1;	/* Watchdog Time-Out Mode Flag */
		/* const */ unsigned int IS1            : 1;	/* Watchdog Input Clock Status */
		/* const */ unsigned int US             : 1;	/* SMU Unlock Restriction Status Flag */
		/* const */ unsigned int PAS            : 1;	/* Password Auto-sequence Status Flag */
		/* const */ unsigned int TCS            : 1;	/* Timer Check Status Flag */
		/* const */ unsigned int TCT            : 7;	/* Timer Check Tolerance */
		/* const */ unsigned int TIM            : 16;	/* Timer Value */
	} B;
	int I;
	unsigned int U;

} SCU_WDTCPU0SR_type;
#define SCU_WDTCPU0SR	(*( SCU_WDTCPU0SR_type *) 0xf0036108u)	/* CPU0 WDT Status Register */
#define SCU_WDTCPU1SR	(*( SCU_WDTCPU0SR_type *) 0xf0036114u)	/* CPU1 WDT Status Register */
#define SCU_WDTCPU2SR	(*( SCU_WDTCPU0SR_type *) 0xf0036120u)	/* CPU2 WDT Status Register */
#define SCU_WDTSSR	(*( SCU_WDTCPU0SR_type *) 0xf00360f8u)	/* Safety WDT Status Register */

typedef volatile union
{
	struct
	{ 
		unsigned int CLRIRF         : 1;	/* Clear Internal Reset Flag */
		unsigned int                : 1;
		unsigned int IR0            : 1;	/* Input Frequency Request Control */
		unsigned int DR             : 1;	/* Disable Request Control Bit */
		unsigned int                : 1;
		unsigned int IR1            : 1;	/* Input Frequency Request Control */
		unsigned int UR             : 1;	/* Unlock Restriction Request Control Bit */
		unsigned int PAR            : 1;	/* Password Auto-sequence Request Bit */
		unsigned int TCR            : 1;	/* Counter Check Request Bit */
		unsigned int TCTR           : 7;	/* Timer Check Tolerance Request */
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} SCU_WDTSCON1_type;
#define SCU_WDTSCON1	(*( SCU_WDTSCON1_type *) 0xf00360f4u)	/* Safety WDT Control Register 1 */


/* MTU */
typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit16 ACCSTYPE       : 8;	/* Access type */
		/* const */ unsigned __sfrbit16 Res            : 4;	/* Reserved */
		unsigned __sfrbit16 NUMACCS        : 4;	/* Number of accesses per address */
	} B;
	short S;
	unsigned short US;

} MC0_CONFIG0_type;
#define MC0_CONFIG0	(*( MC0_CONFIG0_type *) 0xf0061000u)	/* Configuration Register 0 */
#define MC10_CONFIG0	(*( MC0_CONFIG0_type *) 0xf0061a00u)	/* Configuration Register 0 */
#define MC11_CONFIG0	(*( MC0_CONFIG0_type *) 0xf0061b00u)	/* Configuration Register 0 */
#define MC12_CONFIG0	(*( MC0_CONFIG0_type *) 0xf0061c00u)	/* Configuration Register 0 */
#define MC13_CONFIG0	(*( MC0_CONFIG0_type *) 0xf0061d00u)	/* Configuration Register 0 */
#define MC14_CONFIG0	(*( MC0_CONFIG0_type *) 0xf0061e00u)	/* Configuration Register 0 */
#define MC15_CONFIG0	(*( MC0_CONFIG0_type *) 0xf0061f00u)	/* Configuration Register 0 */
#define MC16_CONFIG0	(*( MC0_CONFIG0_type *) 0xf0062000u)	/* Configuration Register 0 */
#define MC17_CONFIG0	(*( MC0_CONFIG0_type *) 0xf0062100u)	/* Configuration Register 0 */
#define MC18_CONFIG0	(*( MC0_CONFIG0_type *) 0xf0062200u)	/* Configuration Register 0 */
#define MC19_CONFIG0	(*( MC0_CONFIG0_type *) 0xf0062300u)	/* Configuration Register 0 */
#define MC1_CONFIG0	(*( MC0_CONFIG0_type *) 0xf0061100u)	/* Configuration Register 0 */
#define MC20_CONFIG0	(*( MC0_CONFIG0_type *) 0xf0062400u)	/* Configuration Register 0 */
#define MC21_CONFIG0	(*( MC0_CONFIG0_type *) 0xf0062500u)	/* Configuration Register 0 */
#define MC22_CONFIG0	(*( MC0_CONFIG0_type *) 0xf0062600u)	/* Configuration Register 0 */
#define MC23_CONFIG0	(*( MC0_CONFIG0_type *) 0xf0062700u)	/* Configuration Register 0 */
#define MC24_CONFIG0	(*( MC0_CONFIG0_type *) 0xf0062800u)	/* Configuration Register 0 */
#define MC25_CONFIG0	(*( MC0_CONFIG0_type *) 0xf0062900u)	/* Configuration Register 0 */
#define MC26_CONFIG0	(*( MC0_CONFIG0_type *) 0xf0062a00u)	/* Configuration Register 0 */
#define MC27_CONFIG0	(*( MC0_CONFIG0_type *) 0xf0062b00u)	/* Configuration Register 0 */
#define MC28_CONFIG0	(*( MC0_CONFIG0_type *) 0xf0062c00u)	/* Configuration Register 0 */
#define MC29_CONFIG0	(*( MC0_CONFIG0_type *) 0xf0062d00u)	/* Configuration Register 0 */
#define MC2_CONFIG0	(*( MC0_CONFIG0_type *) 0xf0061200u)	/* Configuration Register 0 */
#define MC30_CONFIG0	(*( MC0_CONFIG0_type *) 0xf0062e00u)	/* Configuration Register 0 */
#define MC31_CONFIG0	(*( MC0_CONFIG0_type *) 0xf0062f00u)	/* Configuration Register 0 */
#define MC32_CONFIG0	(*( MC0_CONFIG0_type *) 0xf0063000u)	/* Configuration Register 0 */
#define MC33_CONFIG0	(*( MC0_CONFIG0_type *) 0xf0063100u)	/* Configuration Register 0 */
#define MC34_CONFIG0	(*( MC0_CONFIG0_type *) 0xf0063200u)	/* Configuration Register 0 */
#define MC35_CONFIG0	(*( MC0_CONFIG0_type *) 0xf0063300u)	/* Configuration Register 0 */
#define MC36_CONFIG0	(*( MC0_CONFIG0_type *) 0xf0063400u)	/* Configuration Register 0 */
#define MC37_CONFIG0	(*( MC0_CONFIG0_type *) 0xf0063500u)	/* Configuration Register 0 */
#define MC38_CONFIG0	(*( MC0_CONFIG0_type *) 0xf0063600u)	/* Configuration Register 0 */
#define MC39_CONFIG0	(*( MC0_CONFIG0_type *) 0xf0063700u)	/* Configuration Register 0 */
#define MC3_CONFIG0	(*( MC0_CONFIG0_type *) 0xf0061300u)	/* Configuration Register 0 */
#define MC40_CONFIG0	(*( MC0_CONFIG0_type *) 0xf0063800u)	/* Configuration Register 0 */
#define MC41_CONFIG0	(*( MC0_CONFIG0_type *) 0xf0063900u)	/* Configuration Register 0 */
#define MC42_CONFIG0	(*( MC0_CONFIG0_type *) 0xf0063a00u)	/* Configuration Register 0 */
#define MC43_CONFIG0	(*( MC0_CONFIG0_type *) 0xf0063b00u)	/* Configuration Register 0 */
#define MC44_CONFIG0	(*( MC0_CONFIG0_type *) 0xf0063c00u)	/* Configuration Register 0 */
#define MC45_CONFIG0	(*( MC0_CONFIG0_type *) 0xf0063d00u)	/* Configuration Register 0 */
#define MC46_CONFIG0	(*( MC0_CONFIG0_type *) 0xf0063e00u)	/* Configuration Register 0 */
#define MC47_CONFIG0	(*( MC0_CONFIG0_type *) 0xf0063f00u)	/* Configuration Register 0 */
#define MC48_CONFIG0	(*( MC0_CONFIG0_type *) 0xf0064000u)	/* Configuration Register 0 */
#define MC49_CONFIG0	(*( MC0_CONFIG0_type *) 0xf0064100u)	/* Configuration Register 0 */
#define MC4_CONFIG0	(*( MC0_CONFIG0_type *) 0xf0061400u)	/* Configuration Register 0 */
#define MC50_CONFIG0	(*( MC0_CONFIG0_type *) 0xf0064200u)	/* Configuration Register 0 */
#define MC51_CONFIG0	(*( MC0_CONFIG0_type *) 0xf0064300u)	/* Configuration Register 0 */
#define MC52_CONFIG0	(*( MC0_CONFIG0_type *) 0xf0064400u)	/* Configuration Register 0 */
#define MC53_CONFIG0	(*( MC0_CONFIG0_type *) 0xf0064500u)	/* Configuration Register 0 */
#define MC54_CONFIG0	(*( MC0_CONFIG0_type *) 0xf0064600u)	/* Configuration Register 0 */
#define MC55_CONFIG0	(*( MC0_CONFIG0_type *) 0xf0064700u)	/* Configuration Register 0 */
#define MC56_CONFIG0	(*( MC0_CONFIG0_type *) 0xf0064800u)	/* Configuration Register 0 */
#define MC57_CONFIG0	(*( MC0_CONFIG0_type *) 0xf0064900u)	/* Configuration Register 0 */
#define MC58_CONFIG0	(*( MC0_CONFIG0_type *) 0xf0064a00u)	/* Configuration Register 0 */
#define MC59_CONFIG0	(*( MC0_CONFIG0_type *) 0xf0064b00u)	/* Configuration Register 0 */
#define MC5_CONFIG0	(*( MC0_CONFIG0_type *) 0xf0061500u)	/* Configuration Register 0 */
#define MC60_CONFIG0	(*( MC0_CONFIG0_type *) 0xf0064c00u)	/* Configuration Register 0 */
#define MC61_CONFIG0	(*( MC0_CONFIG0_type *) 0xf0064d00u)	/* Configuration Register 0 */
#define MC62_CONFIG0	(*( MC0_CONFIG0_type *) 0xf0064e00u)	/* Configuration Register 0 */
#define MC63_CONFIG0	(*( MC0_CONFIG0_type *) 0xf0064f00u)	/* Configuration Register 0 */
#define MC64_CONFIG0	(*( MC0_CONFIG0_type *) 0xf0065000u)	/* Configuration Register 0 */
#define MC65_CONFIG0	(*( MC0_CONFIG0_type *) 0xf0065100u)	/* Configuration Register 0 */
#define MC66_CONFIG0	(*( MC0_CONFIG0_type *) 0xf0065200u)	/* Configuration Register 0 */
#define MC67_CONFIG0	(*( MC0_CONFIG0_type *) 0xf0065300u)	/* Configuration Register 0 */
#define MC68_CONFIG0	(*( MC0_CONFIG0_type *) 0xf0065400u)	/* Configuration Register 0 */
#define MC69_CONFIG0	(*( MC0_CONFIG0_type *) 0xf0065500u)	/* Configuration Register 0 */
#define MC6_CONFIG0	(*( MC0_CONFIG0_type *) 0xf0061600u)	/* Configuration Register 0 */
#define MC70_CONFIG0	(*( MC0_CONFIG0_type *) 0xf0065600u)	/* Configuration Register 0 */
#define MC71_CONFIG0	(*( MC0_CONFIG0_type *) 0xf0065700u)	/* Configuration Register 0 */
#define MC72_CONFIG0	(*( MC0_CONFIG0_type *) 0xf0065800u)	/* Configuration Register 0 */
#define MC73_CONFIG0	(*( MC0_CONFIG0_type *) 0xf0065900u)	/* Configuration Register 0 */
#define MC74_CONFIG0	(*( MC0_CONFIG0_type *) 0xf0065a00u)	/* Configuration Register 0 */
#define MC75_CONFIG0	(*( MC0_CONFIG0_type *) 0xf0065b00u)	/* Configuration Register 0 */
#define MC76_CONFIG0	(*( MC0_CONFIG0_type *) 0xf0065c00u)	/* Configuration Register 0 */
#define MC77_CONFIG0	(*( MC0_CONFIG0_type *) 0xf0065d00u)	/* Configuration Register 0 */
#define MC78_CONFIG0	(*( MC0_CONFIG0_type *) 0xf0065e00u)	/* Configuration Register 0 */
#define MC79_CONFIG0	(*( MC0_CONFIG0_type *) 0xf0065f00u)	/* Configuration Register 0 */
#define MC7_CONFIG0	(*( MC0_CONFIG0_type *) 0xf0061700u)	/* Configuration Register 0 */
#define MC80_CONFIG0	(*( MC0_CONFIG0_type *) 0xf0066000u)	/* Configuration Register 0 */
#define MC81_CONFIG0	(*( MC0_CONFIG0_type *) 0xf0066100u)	/* Configuration Register 0 */
#define MC82_CONFIG0	(*( MC0_CONFIG0_type *) 0xf0066200u)	/* Configuration Register 0 */
#define MC83_CONFIG0	(*( MC0_CONFIG0_type *) 0xf0066300u)	/* Configuration Register 0 */
#define MC84_CONFIG0	(*( MC0_CONFIG0_type *) 0xf0066400u)	/* Configuration Register 0 */
#define MC85_CONFIG0	(*( MC0_CONFIG0_type *) 0xf0066500u)	/* Configuration Register 0 */
#define MC86_CONFIG0	(*( MC0_CONFIG0_type *) 0xf0066600u)	/* Configuration Register 0 */
#define MC87_CONFIG0	(*( MC0_CONFIG0_type *) 0xf0066700u)	/* Configuration Register 0 */
#define MC8_CONFIG0	(*( MC0_CONFIG0_type *) 0xf0061800u)	/* Configuration Register 0 */
#define MC9_CONFIG0	(*( MC0_CONFIG0_type *) 0xf0061900u)	/* Configuration Register 0 */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit16 ACCSPAT        : 8;	/* Access pattern */
		unsigned __sfrbit16 SELFASTB       : 4;	/* Select Fast Bit */
		unsigned __sfrbit16 AG_MOD         : 4;	/* Address Generator Mode */
	} B;
	short S;
	unsigned short US;

} MC0_CONFIG1_type;
#define MC0_CONFIG1	(*( MC0_CONFIG1_type *) 0xf0061002u)	/* Configuration Register 1 */
#define MC10_CONFIG1	(*( MC0_CONFIG1_type *) 0xf0061a02u)	/* Configuration Register 1 */
#define MC11_CONFIG1	(*( MC0_CONFIG1_type *) 0xf0061b02u)	/* Configuration Register 1 */
#define MC12_CONFIG1	(*( MC0_CONFIG1_type *) 0xf0061c02u)	/* Configuration Register 1 */
#define MC13_CONFIG1	(*( MC0_CONFIG1_type *) 0xf0061d02u)	/* Configuration Register 1 */
#define MC14_CONFIG1	(*( MC0_CONFIG1_type *) 0xf0061e02u)	/* Configuration Register 1 */
#define MC15_CONFIG1	(*( MC0_CONFIG1_type *) 0xf0061f02u)	/* Configuration Register 1 */
#define MC16_CONFIG1	(*( MC0_CONFIG1_type *) 0xf0062002u)	/* Configuration Register 1 */
#define MC17_CONFIG1	(*( MC0_CONFIG1_type *) 0xf0062102u)	/* Configuration Register 1 */
#define MC18_CONFIG1	(*( MC0_CONFIG1_type *) 0xf0062202u)	/* Configuration Register 1 */
#define MC19_CONFIG1	(*( MC0_CONFIG1_type *) 0xf0062302u)	/* Configuration Register 1 */
#define MC1_CONFIG1	(*( MC0_CONFIG1_type *) 0xf0061102u)	/* Configuration Register 1 */
#define MC20_CONFIG1	(*( MC0_CONFIG1_type *) 0xf0062402u)	/* Configuration Register 1 */
#define MC21_CONFIG1	(*( MC0_CONFIG1_type *) 0xf0062502u)	/* Configuration Register 1 */
#define MC22_CONFIG1	(*( MC0_CONFIG1_type *) 0xf0062602u)	/* Configuration Register 1 */
#define MC23_CONFIG1	(*( MC0_CONFIG1_type *) 0xf0062702u)	/* Configuration Register 1 */
#define MC24_CONFIG1	(*( MC0_CONFIG1_type *) 0xf0062802u)	/* Configuration Register 1 */
#define MC25_CONFIG1	(*( MC0_CONFIG1_type *) 0xf0062902u)	/* Configuration Register 1 */
#define MC26_CONFIG1	(*( MC0_CONFIG1_type *) 0xf0062a02u)	/* Configuration Register 1 */
#define MC27_CONFIG1	(*( MC0_CONFIG1_type *) 0xf0062b02u)	/* Configuration Register 1 */
#define MC28_CONFIG1	(*( MC0_CONFIG1_type *) 0xf0062c02u)	/* Configuration Register 1 */
#define MC29_CONFIG1	(*( MC0_CONFIG1_type *) 0xf0062d02u)	/* Configuration Register 1 */
#define MC2_CONFIG1	(*( MC0_CONFIG1_type *) 0xf0061202u)	/* Configuration Register 1 */
#define MC30_CONFIG1	(*( MC0_CONFIG1_type *) 0xf0062e02u)	/* Configuration Register 1 */
#define MC31_CONFIG1	(*( MC0_CONFIG1_type *) 0xf0062f02u)	/* Configuration Register 1 */
#define MC32_CONFIG1	(*( MC0_CONFIG1_type *) 0xf0063002u)	/* Configuration Register 1 */
#define MC33_CONFIG1	(*( MC0_CONFIG1_type *) 0xf0063102u)	/* Configuration Register 1 */
#define MC34_CONFIG1	(*( MC0_CONFIG1_type *) 0xf0063202u)	/* Configuration Register 1 */
#define MC35_CONFIG1	(*( MC0_CONFIG1_type *) 0xf0063302u)	/* Configuration Register 1 */
#define MC36_CONFIG1	(*( MC0_CONFIG1_type *) 0xf0063402u)	/* Configuration Register 1 */
#define MC37_CONFIG1	(*( MC0_CONFIG1_type *) 0xf0063502u)	/* Configuration Register 1 */
#define MC38_CONFIG1	(*( MC0_CONFIG1_type *) 0xf0063602u)	/* Configuration Register 1 */
#define MC39_CONFIG1	(*( MC0_CONFIG1_type *) 0xf0063702u)	/* Configuration Register 1 */
#define MC3_CONFIG1	(*( MC0_CONFIG1_type *) 0xf0061302u)	/* Configuration Register 1 */
#define MC40_CONFIG1	(*( MC0_CONFIG1_type *) 0xf0063802u)	/* Configuration Register 1 */
#define MC41_CONFIG1	(*( MC0_CONFIG1_type *) 0xf0063902u)	/* Configuration Register 1 */
#define MC42_CONFIG1	(*( MC0_CONFIG1_type *) 0xf0063a02u)	/* Configuration Register 1 */
#define MC43_CONFIG1	(*( MC0_CONFIG1_type *) 0xf0063b02u)	/* Configuration Register 1 */
#define MC44_CONFIG1	(*( MC0_CONFIG1_type *) 0xf0063c02u)	/* Configuration Register 1 */
#define MC45_CONFIG1	(*( MC0_CONFIG1_type *) 0xf0063d02u)	/* Configuration Register 1 */
#define MC46_CONFIG1	(*( MC0_CONFIG1_type *) 0xf0063e02u)	/* Configuration Register 1 */
#define MC47_CONFIG1	(*( MC0_CONFIG1_type *) 0xf0063f02u)	/* Configuration Register 1 */
#define MC48_CONFIG1	(*( MC0_CONFIG1_type *) 0xf0064002u)	/* Configuration Register 1 */
#define MC49_CONFIG1	(*( MC0_CONFIG1_type *) 0xf0064102u)	/* Configuration Register 1 */
#define MC4_CONFIG1	(*( MC0_CONFIG1_type *) 0xf0061402u)	/* Configuration Register 1 */
#define MC50_CONFIG1	(*( MC0_CONFIG1_type *) 0xf0064202u)	/* Configuration Register 1 */
#define MC51_CONFIG1	(*( MC0_CONFIG1_type *) 0xf0064302u)	/* Configuration Register 1 */
#define MC52_CONFIG1	(*( MC0_CONFIG1_type *) 0xf0064402u)	/* Configuration Register 1 */
#define MC53_CONFIG1	(*( MC0_CONFIG1_type *) 0xf0064502u)	/* Configuration Register 1 */
#define MC54_CONFIG1	(*( MC0_CONFIG1_type *) 0xf0064602u)	/* Configuration Register 1 */
#define MC55_CONFIG1	(*( MC0_CONFIG1_type *) 0xf0064702u)	/* Configuration Register 1 */
#define MC56_CONFIG1	(*( MC0_CONFIG1_type *) 0xf0064802u)	/* Configuration Register 1 */
#define MC57_CONFIG1	(*( MC0_CONFIG1_type *) 0xf0064902u)	/* Configuration Register 1 */
#define MC58_CONFIG1	(*( MC0_CONFIG1_type *) 0xf0064a02u)	/* Configuration Register 1 */
#define MC59_CONFIG1	(*( MC0_CONFIG1_type *) 0xf0064b02u)	/* Configuration Register 1 */
#define MC5_CONFIG1	(*( MC0_CONFIG1_type *) 0xf0061502u)	/* Configuration Register 1 */
#define MC60_CONFIG1	(*( MC0_CONFIG1_type *) 0xf0064c02u)	/* Configuration Register 1 */
#define MC61_CONFIG1	(*( MC0_CONFIG1_type *) 0xf0064d02u)	/* Configuration Register 1 */
#define MC62_CONFIG1	(*( MC0_CONFIG1_type *) 0xf0064e02u)	/* Configuration Register 1 */
#define MC63_CONFIG1	(*( MC0_CONFIG1_type *) 0xf0064f02u)	/* Configuration Register 1 */
#define MC64_CONFIG1	(*( MC0_CONFIG1_type *) 0xf0065002u)	/* Configuration Register 1 */
#define MC65_CONFIG1	(*( MC0_CONFIG1_type *) 0xf0065102u)	/* Configuration Register 1 */
#define MC66_CONFIG1	(*( MC0_CONFIG1_type *) 0xf0065202u)	/* Configuration Register 1 */
#define MC67_CONFIG1	(*( MC0_CONFIG1_type *) 0xf0065302u)	/* Configuration Register 1 */
#define MC68_CONFIG1	(*( MC0_CONFIG1_type *) 0xf0065402u)	/* Configuration Register 1 */
#define MC69_CONFIG1	(*( MC0_CONFIG1_type *) 0xf0065502u)	/* Configuration Register 1 */
#define MC6_CONFIG1	(*( MC0_CONFIG1_type *) 0xf0061602u)	/* Configuration Register 1 */
#define MC70_CONFIG1	(*( MC0_CONFIG1_type *) 0xf0065602u)	/* Configuration Register 1 */
#define MC71_CONFIG1	(*( MC0_CONFIG1_type *) 0xf0065702u)	/* Configuration Register 1 */
#define MC72_CONFIG1	(*( MC0_CONFIG1_type *) 0xf0065802u)	/* Configuration Register 1 */
#define MC73_CONFIG1	(*( MC0_CONFIG1_type *) 0xf0065902u)	/* Configuration Register 1 */
#define MC74_CONFIG1	(*( MC0_CONFIG1_type *) 0xf0065a02u)	/* Configuration Register 1 */
#define MC75_CONFIG1	(*( MC0_CONFIG1_type *) 0xf0065b02u)	/* Configuration Register 1 */
#define MC76_CONFIG1	(*( MC0_CONFIG1_type *) 0xf0065c02u)	/* Configuration Register 1 */
#define MC77_CONFIG1	(*( MC0_CONFIG1_type *) 0xf0065d02u)	/* Configuration Register 1 */
#define MC78_CONFIG1	(*( MC0_CONFIG1_type *) 0xf0065e02u)	/* Configuration Register 1 */
#define MC79_CONFIG1	(*( MC0_CONFIG1_type *) 0xf0065f02u)	/* Configuration Register 1 */
#define MC7_CONFIG1	(*( MC0_CONFIG1_type *) 0xf0061702u)	/* Configuration Register 1 */
#define MC80_CONFIG1	(*( MC0_CONFIG1_type *) 0xf0066002u)	/* Configuration Register 1 */
#define MC81_CONFIG1	(*( MC0_CONFIG1_type *) 0xf0066102u)	/* Configuration Register 1 */
#define MC82_CONFIG1	(*( MC0_CONFIG1_type *) 0xf0066202u)	/* Configuration Register 1 */
#define MC83_CONFIG1	(*( MC0_CONFIG1_type *) 0xf0066302u)	/* Configuration Register 1 */
#define MC84_CONFIG1	(*( MC0_CONFIG1_type *) 0xf0066402u)	/* Configuration Register 1 */
#define MC85_CONFIG1	(*( MC0_CONFIG1_type *) 0xf0066502u)	/* Configuration Register 1 */
#define MC86_CONFIG1	(*( MC0_CONFIG1_type *) 0xf0066602u)	/* Configuration Register 1 */
#define MC87_CONFIG1	(*( MC0_CONFIG1_type *) 0xf0066702u)	/* Configuration Register 1 */
#define MC8_CONFIG1	(*( MC0_CONFIG1_type *) 0xf0061802u)	/* Configuration Register 1 */
#define MC9_CONFIG1	(*( MC0_CONFIG1_type *) 0xf0061902u)	/* Configuration Register 1 */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit16 SERR           : 1;	/* Error Detected */
		unsigned __sfrbit16 CERR           : 1;	/* Correctable Error Detected */
		unsigned __sfrbit16 UERR           : 1;	/* Uncorrectable Error Detected */
		unsigned __sfrbit16 AERR           : 1;	/* Address Error Detected */
		unsigned __sfrbit16 TRC            : 1;	/* Tracking Clear */
		/* const */ unsigned __sfrbit16 VAL            : 5;	/* Valid Bits */
		unsigned __sfrbit16 RARVAL         : 1;	/* RAR Valid */
		unsigned __sfrbit16 CENE           : 1;	/* Correctable Error Notification Enable */
		unsigned __sfrbit16 UENE           : 1;	/* Uncorrectable Error Notification Enable */
		unsigned __sfrbit16 AENE           : 1;	/* Address Error Notification Enable */
		unsigned __sfrbit16 ECE            : 1;	/* Error Correction Enable */
		/* const */ unsigned __sfrbit16 EOV            : 1;	/* Error Overflow */
	} B;
	short S;
	unsigned short US;

} MC0_ECCD_type;
#define MC0_ECCD	(*( MC0_ECCD_type *) 0xf0061010u)	/* Memory ECC Detection Register */
#define MC10_ECCD	(*( MC0_ECCD_type *) 0xf0061a10u)	/* Memory ECC Detection Register */
#define MC11_ECCD	(*( MC0_ECCD_type *) 0xf0061b10u)	/* Memory ECC Detection Register */
#define MC12_ECCD	(*( MC0_ECCD_type *) 0xf0061c10u)	/* Memory ECC Detection Register */
#define MC13_ECCD	(*( MC0_ECCD_type *) 0xf0061d10u)	/* Memory ECC Detection Register */
#define MC14_ECCD	(*( MC0_ECCD_type *) 0xf0061e10u)	/* Memory ECC Detection Register */
#define MC15_ECCD	(*( MC0_ECCD_type *) 0xf0061f10u)	/* Memory ECC Detection Register */
#define MC16_ECCD	(*( MC0_ECCD_type *) 0xf0062010u)	/* Memory ECC Detection Register */
#define MC17_ECCD	(*( MC0_ECCD_type *) 0xf0062110u)	/* Memory ECC Detection Register */
#define MC18_ECCD	(*( MC0_ECCD_type *) 0xf0062210u)	/* Memory ECC Detection Register */
#define MC19_ECCD	(*( MC0_ECCD_type *) 0xf0062310u)	/* Memory ECC Detection Register */
#define MC1_ECCD	(*( MC0_ECCD_type *) 0xf0061110u)	/* Memory ECC Detection Register */
#define MC20_ECCD	(*( MC0_ECCD_type *) 0xf0062410u)	/* Memory ECC Detection Register */
#define MC21_ECCD	(*( MC0_ECCD_type *) 0xf0062510u)	/* Memory ECC Detection Register */
#define MC22_ECCD	(*( MC0_ECCD_type *) 0xf0062610u)	/* Memory ECC Detection Register */
#define MC23_ECCD	(*( MC0_ECCD_type *) 0xf0062710u)	/* Memory ECC Detection Register */
#define MC24_ECCD	(*( MC0_ECCD_type *) 0xf0062810u)	/* Memory ECC Detection Register */
#define MC25_ECCD	(*( MC0_ECCD_type *) 0xf0062910u)	/* Memory ECC Detection Register */
#define MC26_ECCD	(*( MC0_ECCD_type *) 0xf0062a10u)	/* Memory ECC Detection Register */
#define MC27_ECCD	(*( MC0_ECCD_type *) 0xf0062b10u)	/* Memory ECC Detection Register */
#define MC28_ECCD	(*( MC0_ECCD_type *) 0xf0062c10u)	/* Memory ECC Detection Register */
#define MC29_ECCD	(*( MC0_ECCD_type *) 0xf0062d10u)	/* Memory ECC Detection Register */
#define MC2_ECCD	(*( MC0_ECCD_type *) 0xf0061210u)	/* Memory ECC Detection Register */
#define MC30_ECCD	(*( MC0_ECCD_type *) 0xf0062e10u)	/* Memory ECC Detection Register */
#define MC31_ECCD	(*( MC0_ECCD_type *) 0xf0062f10u)	/* Memory ECC Detection Register */
#define MC32_ECCD	(*( MC0_ECCD_type *) 0xf0063010u)	/* Memory ECC Detection Register */
#define MC33_ECCD	(*( MC0_ECCD_type *) 0xf0063110u)	/* Memory ECC Detection Register */
#define MC34_ECCD	(*( MC0_ECCD_type *) 0xf0063210u)	/* Memory ECC Detection Register */
#define MC35_ECCD	(*( MC0_ECCD_type *) 0xf0063310u)	/* Memory ECC Detection Register */
#define MC36_ECCD	(*( MC0_ECCD_type *) 0xf0063410u)	/* Memory ECC Detection Register */
#define MC37_ECCD	(*( MC0_ECCD_type *) 0xf0063510u)	/* Memory ECC Detection Register */
#define MC38_ECCD	(*( MC0_ECCD_type *) 0xf0063610u)	/* Memory ECC Detection Register */
#define MC39_ECCD	(*( MC0_ECCD_type *) 0xf0063710u)	/* Memory ECC Detection Register */
#define MC3_ECCD	(*( MC0_ECCD_type *) 0xf0061310u)	/* Memory ECC Detection Register */
#define MC40_ECCD	(*( MC0_ECCD_type *) 0xf0063810u)	/* Memory ECC Detection Register */
#define MC41_ECCD	(*( MC0_ECCD_type *) 0xf0063910u)	/* Memory ECC Detection Register */
#define MC42_ECCD	(*( MC0_ECCD_type *) 0xf0063a10u)	/* Memory ECC Detection Register */
#define MC43_ECCD	(*( MC0_ECCD_type *) 0xf0063b10u)	/* Memory ECC Detection Register */
#define MC44_ECCD	(*( MC0_ECCD_type *) 0xf0063c10u)	/* Memory ECC Detection Register */
#define MC45_ECCD	(*( MC0_ECCD_type *) 0xf0063d10u)	/* Memory ECC Detection Register */
#define MC46_ECCD	(*( MC0_ECCD_type *) 0xf0063e10u)	/* Memory ECC Detection Register */
#define MC47_ECCD	(*( MC0_ECCD_type *) 0xf0063f10u)	/* Memory ECC Detection Register */
#define MC48_ECCD	(*( MC0_ECCD_type *) 0xf0064010u)	/* Memory ECC Detection Register */
#define MC49_ECCD	(*( MC0_ECCD_type *) 0xf0064110u)	/* Memory ECC Detection Register */
#define MC4_ECCD	(*( MC0_ECCD_type *) 0xf0061410u)	/* Memory ECC Detection Register */
#define MC50_ECCD	(*( MC0_ECCD_type *) 0xf0064210u)	/* Memory ECC Detection Register */
#define MC51_ECCD	(*( MC0_ECCD_type *) 0xf0064310u)	/* Memory ECC Detection Register */
#define MC52_ECCD	(*( MC0_ECCD_type *) 0xf0064410u)	/* Memory ECC Detection Register */
#define MC53_ECCD	(*( MC0_ECCD_type *) 0xf0064510u)	/* Memory ECC Detection Register */
#define MC54_ECCD	(*( MC0_ECCD_type *) 0xf0064610u)	/* Memory ECC Detection Register */
#define MC55_ECCD	(*( MC0_ECCD_type *) 0xf0064710u)	/* Memory ECC Detection Register */
#define MC56_ECCD	(*( MC0_ECCD_type *) 0xf0064810u)	/* Memory ECC Detection Register */
#define MC57_ECCD	(*( MC0_ECCD_type *) 0xf0064910u)	/* Memory ECC Detection Register */
#define MC58_ECCD	(*( MC0_ECCD_type *) 0xf0064a10u)	/* Memory ECC Detection Register */
#define MC59_ECCD	(*( MC0_ECCD_type *) 0xf0064b10u)	/* Memory ECC Detection Register */
#define MC5_ECCD	(*( MC0_ECCD_type *) 0xf0061510u)	/* Memory ECC Detection Register */
#define MC60_ECCD	(*( MC0_ECCD_type *) 0xf0064c10u)	/* Memory ECC Detection Register */
#define MC61_ECCD	(*( MC0_ECCD_type *) 0xf0064d10u)	/* Memory ECC Detection Register */
#define MC62_ECCD	(*( MC0_ECCD_type *) 0xf0064e10u)	/* Memory ECC Detection Register */
#define MC63_ECCD	(*( MC0_ECCD_type *) 0xf0064f10u)	/* Memory ECC Detection Register */
#define MC64_ECCD	(*( MC0_ECCD_type *) 0xf0065010u)	/* Memory ECC Detection Register */
#define MC65_ECCD	(*( MC0_ECCD_type *) 0xf0065110u)	/* Memory ECC Detection Register */
#define MC66_ECCD	(*( MC0_ECCD_type *) 0xf0065210u)	/* Memory ECC Detection Register */
#define MC67_ECCD	(*( MC0_ECCD_type *) 0xf0065310u)	/* Memory ECC Detection Register */
#define MC68_ECCD	(*( MC0_ECCD_type *) 0xf0065410u)	/* Memory ECC Detection Register */
#define MC69_ECCD	(*( MC0_ECCD_type *) 0xf0065510u)	/* Memory ECC Detection Register */
#define MC6_ECCD	(*( MC0_ECCD_type *) 0xf0061610u)	/* Memory ECC Detection Register */
#define MC70_ECCD	(*( MC0_ECCD_type *) 0xf0065610u)	/* Memory ECC Detection Register */
#define MC71_ECCD	(*( MC0_ECCD_type *) 0xf0065710u)	/* Memory ECC Detection Register */
#define MC72_ECCD	(*( MC0_ECCD_type *) 0xf0065810u)	/* Memory ECC Detection Register */
#define MC73_ECCD	(*( MC0_ECCD_type *) 0xf0065910u)	/* Memory ECC Detection Register */
#define MC74_ECCD	(*( MC0_ECCD_type *) 0xf0065a10u)	/* Memory ECC Detection Register */
#define MC75_ECCD	(*( MC0_ECCD_type *) 0xf0065b10u)	/* Memory ECC Detection Register */
#define MC76_ECCD	(*( MC0_ECCD_type *) 0xf0065c10u)	/* Memory ECC Detection Register */
#define MC77_ECCD	(*( MC0_ECCD_type *) 0xf0065d10u)	/* Memory ECC Detection Register */
#define MC78_ECCD	(*( MC0_ECCD_type *) 0xf0065e10u)	/* Memory ECC Detection Register */
#define MC79_ECCD	(*( MC0_ECCD_type *) 0xf0065f10u)	/* Memory ECC Detection Register */
#define MC7_ECCD	(*( MC0_ECCD_type *) 0xf0061710u)	/* Memory ECC Detection Register */
#define MC80_ECCD	(*( MC0_ECCD_type *) 0xf0066010u)	/* Memory ECC Detection Register */
#define MC81_ECCD	(*( MC0_ECCD_type *) 0xf0066110u)	/* Memory ECC Detection Register */
#define MC82_ECCD	(*( MC0_ECCD_type *) 0xf0066210u)	/* Memory ECC Detection Register */
#define MC83_ECCD	(*( MC0_ECCD_type *) 0xf0066310u)	/* Memory ECC Detection Register */
#define MC84_ECCD	(*( MC0_ECCD_type *) 0xf0066410u)	/* Memory ECC Detection Register */
#define MC85_ECCD	(*( MC0_ECCD_type *) 0xf0066510u)	/* Memory ECC Detection Register */
#define MC86_ECCD	(*( MC0_ECCD_type *) 0xf0066610u)	/* Memory ECC Detection Register */
#define MC87_ECCD	(*( MC0_ECCD_type *) 0xf0066710u)	/* Memory ECC Detection Register */
#define MC8_ECCD	(*( MC0_ECCD_type *) 0xf0061810u)	/* Memory ECC Detection Register */
#define MC9_ECCD	(*( MC0_ECCD_type *) 0xf0061910u)	/* Memory ECC Detection Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit16 CENE           : 1;	/* Correctable Error Notification Enable */
		unsigned __sfrbit16 UENE           : 1;	/* Uncorrectable Error Notification Enable */
		unsigned __sfrbit16 AENE           : 1;	/* Address Error Notification Enable */
		unsigned __sfrbit16 ECE            : 1;	/* Error Correction Enable */
		unsigned __sfrbit16 TRE            : 1;	/* Tracking Enable */
		unsigned __sfrbit16 BFLE           : 1;	/* Bit Flip Enable */
		unsigned __sfrbit16 SFLE           : 2;	/* Signature Bit Flip Enables */
		unsigned __sfrbit16 ECCMAP         : 2;	/* ECC Bit Mapping Mode */
		unsigned __sfrbit16 TC_WAY_SEL     : 2;	/* TriCore Cache Way Select */
		/* const */ unsigned __sfrbit16 Res            : 4;	/* Reserved */
	} B;
	short S;
	unsigned short US;

} MC0_ECCS_type;
#define MC0_ECCS	(*( MC0_ECCS_type *) 0xf006100eu)	/* ECC Safety Register */
#define MC10_ECCS	(*( MC0_ECCS_type *) 0xf0061a0eu)	/* ECC Safety Register */
#define MC11_ECCS	(*( MC0_ECCS_type *) 0xf0061b0eu)	/* ECC Safety Register */
#define MC12_ECCS	(*( MC0_ECCS_type *) 0xf0061c0eu)	/* ECC Safety Register */
#define MC13_ECCS	(*( MC0_ECCS_type *) 0xf0061d0eu)	/* ECC Safety Register */
#define MC14_ECCS	(*( MC0_ECCS_type *) 0xf0061e0eu)	/* ECC Safety Register */
#define MC15_ECCS	(*( MC0_ECCS_type *) 0xf0061f0eu)	/* ECC Safety Register */
#define MC16_ECCS	(*( MC0_ECCS_type *) 0xf006200eu)	/* ECC Safety Register */
#define MC17_ECCS	(*( MC0_ECCS_type *) 0xf006210eu)	/* ECC Safety Register */
#define MC18_ECCS	(*( MC0_ECCS_type *) 0xf006220eu)	/* ECC Safety Register */
#define MC19_ECCS	(*( MC0_ECCS_type *) 0xf006230eu)	/* ECC Safety Register */
#define MC1_ECCS	(*( MC0_ECCS_type *) 0xf006110eu)	/* ECC Safety Register */
#define MC20_ECCS	(*( MC0_ECCS_type *) 0xf006240eu)	/* ECC Safety Register */
#define MC21_ECCS	(*( MC0_ECCS_type *) 0xf006250eu)	/* ECC Safety Register */
#define MC22_ECCS	(*( MC0_ECCS_type *) 0xf006260eu)	/* ECC Safety Register */
#define MC23_ECCS	(*( MC0_ECCS_type *) 0xf006270eu)	/* ECC Safety Register */
#define MC24_ECCS	(*( MC0_ECCS_type *) 0xf006280eu)	/* ECC Safety Register */
#define MC25_ECCS	(*( MC0_ECCS_type *) 0xf006290eu)	/* ECC Safety Register */
#define MC26_ECCS	(*( MC0_ECCS_type *) 0xf0062a0eu)	/* ECC Safety Register */
#define MC27_ECCS	(*( MC0_ECCS_type *) 0xf0062b0eu)	/* ECC Safety Register */
#define MC28_ECCS	(*( MC0_ECCS_type *) 0xf0062c0eu)	/* ECC Safety Register */
#define MC29_ECCS	(*( MC0_ECCS_type *) 0xf0062d0eu)	/* ECC Safety Register */
#define MC2_ECCS	(*( MC0_ECCS_type *) 0xf006120eu)	/* ECC Safety Register */
#define MC30_ECCS	(*( MC0_ECCS_type *) 0xf0062e0eu)	/* ECC Safety Register */
#define MC31_ECCS	(*( MC0_ECCS_type *) 0xf0062f0eu)	/* ECC Safety Register */
#define MC32_ECCS	(*( MC0_ECCS_type *) 0xf006300eu)	/* ECC Safety Register */
#define MC33_ECCS	(*( MC0_ECCS_type *) 0xf006310eu)	/* ECC Safety Register */
#define MC34_ECCS	(*( MC0_ECCS_type *) 0xf006320eu)	/* ECC Safety Register */
#define MC35_ECCS	(*( MC0_ECCS_type *) 0xf006330eu)	/* ECC Safety Register */
#define MC36_ECCS	(*( MC0_ECCS_type *) 0xf006340eu)	/* ECC Safety Register */
#define MC37_ECCS	(*( MC0_ECCS_type *) 0xf006350eu)	/* ECC Safety Register */
#define MC38_ECCS	(*( MC0_ECCS_type *) 0xf006360eu)	/* ECC Safety Register */
#define MC39_ECCS	(*( MC0_ECCS_type *) 0xf006370eu)	/* ECC Safety Register */
#define MC3_ECCS	(*( MC0_ECCS_type *) 0xf006130eu)	/* ECC Safety Register */
#define MC40_ECCS	(*( MC0_ECCS_type *) 0xf006380eu)	/* ECC Safety Register */
#define MC41_ECCS	(*( MC0_ECCS_type *) 0xf006390eu)	/* ECC Safety Register */
#define MC42_ECCS	(*( MC0_ECCS_type *) 0xf0063a0eu)	/* ECC Safety Register */
#define MC43_ECCS	(*( MC0_ECCS_type *) 0xf0063b0eu)	/* ECC Safety Register */
#define MC44_ECCS	(*( MC0_ECCS_type *) 0xf0063c0eu)	/* ECC Safety Register */
#define MC45_ECCS	(*( MC0_ECCS_type *) 0xf0063d0eu)	/* ECC Safety Register */
#define MC46_ECCS	(*( MC0_ECCS_type *) 0xf0063e0eu)	/* ECC Safety Register */
#define MC47_ECCS	(*( MC0_ECCS_type *) 0xf0063f0eu)	/* ECC Safety Register */
#define MC48_ECCS	(*( MC0_ECCS_type *) 0xf006400eu)	/* ECC Safety Register */
#define MC49_ECCS	(*( MC0_ECCS_type *) 0xf006410eu)	/* ECC Safety Register */
#define MC4_ECCS	(*( MC0_ECCS_type *) 0xf006140eu)	/* ECC Safety Register */
#define MC50_ECCS	(*( MC0_ECCS_type *) 0xf006420eu)	/* ECC Safety Register */
#define MC51_ECCS	(*( MC0_ECCS_type *) 0xf006430eu)	/* ECC Safety Register */
#define MC52_ECCS	(*( MC0_ECCS_type *) 0xf006440eu)	/* ECC Safety Register */
#define MC53_ECCS	(*( MC0_ECCS_type *) 0xf006450eu)	/* ECC Safety Register */
#define MC54_ECCS	(*( MC0_ECCS_type *) 0xf006460eu)	/* ECC Safety Register */
#define MC55_ECCS	(*( MC0_ECCS_type *) 0xf006470eu)	/* ECC Safety Register */
#define MC56_ECCS	(*( MC0_ECCS_type *) 0xf006480eu)	/* ECC Safety Register */
#define MC57_ECCS	(*( MC0_ECCS_type *) 0xf006490eu)	/* ECC Safety Register */
#define MC58_ECCS	(*( MC0_ECCS_type *) 0xf0064a0eu)	/* ECC Safety Register */
#define MC59_ECCS	(*( MC0_ECCS_type *) 0xf0064b0eu)	/* ECC Safety Register */
#define MC5_ECCS	(*( MC0_ECCS_type *) 0xf006150eu)	/* ECC Safety Register */
#define MC60_ECCS	(*( MC0_ECCS_type *) 0xf0064c0eu)	/* ECC Safety Register */
#define MC61_ECCS	(*( MC0_ECCS_type *) 0xf0064d0eu)	/* ECC Safety Register */
#define MC62_ECCS	(*( MC0_ECCS_type *) 0xf0064e0eu)	/* ECC Safety Register */
#define MC63_ECCS	(*( MC0_ECCS_type *) 0xf0064f0eu)	/* ECC Safety Register */
#define MC64_ECCS	(*( MC0_ECCS_type *) 0xf006500eu)	/* ECC Safety Register */
#define MC65_ECCS	(*( MC0_ECCS_type *) 0xf006510eu)	/* ECC Safety Register */
#define MC66_ECCS	(*( MC0_ECCS_type *) 0xf006520eu)	/* ECC Safety Register */
#define MC67_ECCS	(*( MC0_ECCS_type *) 0xf006530eu)	/* ECC Safety Register */
#define MC68_ECCS	(*( MC0_ECCS_type *) 0xf006540eu)	/* ECC Safety Register */
#define MC69_ECCS	(*( MC0_ECCS_type *) 0xf006550eu)	/* ECC Safety Register */
#define MC6_ECCS	(*( MC0_ECCS_type *) 0xf006160eu)	/* ECC Safety Register */
#define MC70_ECCS	(*( MC0_ECCS_type *) 0xf006560eu)	/* ECC Safety Register */
#define MC71_ECCS	(*( MC0_ECCS_type *) 0xf006570eu)	/* ECC Safety Register */
#define MC72_ECCS	(*( MC0_ECCS_type *) 0xf006580eu)	/* ECC Safety Register */
#define MC73_ECCS	(*( MC0_ECCS_type *) 0xf006590eu)	/* ECC Safety Register */
#define MC74_ECCS	(*( MC0_ECCS_type *) 0xf0065a0eu)	/* ECC Safety Register */
#define MC75_ECCS	(*( MC0_ECCS_type *) 0xf0065b0eu)	/* ECC Safety Register */
#define MC76_ECCS	(*( MC0_ECCS_type *) 0xf0065c0eu)	/* ECC Safety Register */
#define MC77_ECCS	(*( MC0_ECCS_type *) 0xf0065d0eu)	/* ECC Safety Register */
#define MC78_ECCS	(*( MC0_ECCS_type *) 0xf0065e0eu)	/* ECC Safety Register */
#define MC79_ECCS	(*( MC0_ECCS_type *) 0xf0065f0eu)	/* ECC Safety Register */
#define MC7_ECCS	(*( MC0_ECCS_type *) 0xf006170eu)	/* ECC Safety Register */
#define MC80_ECCS	(*( MC0_ECCS_type *) 0xf006600eu)	/* ECC Safety Register */
#define MC81_ECCS	(*( MC0_ECCS_type *) 0xf006610eu)	/* ECC Safety Register */
#define MC82_ECCS	(*( MC0_ECCS_type *) 0xf006620eu)	/* ECC Safety Register */
#define MC83_ECCS	(*( MC0_ECCS_type *) 0xf006630eu)	/* ECC Safety Register */
#define MC84_ECCS	(*( MC0_ECCS_type *) 0xf006640eu)	/* ECC Safety Register */
#define MC85_ECCS	(*( MC0_ECCS_type *) 0xf006650eu)	/* ECC Safety Register */
#define MC86_ECCS	(*( MC0_ECCS_type *) 0xf006660eu)	/* ECC Safety Register */
#define MC87_ECCS	(*( MC0_ECCS_type *) 0xf006670eu)	/* ECC Safety Register */
#define MC8_ECCS	(*( MC0_ECCS_type *) 0xf006180eu)	/* ECC Safety Register */
#define MC9_ECCS	(*( MC0_ECCS_type *) 0xf006190eu)	/* ECC Safety Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned __sfrbit16 ADDR           : 13;	/* Address of Error(i) */
		/* const */ unsigned __sfrbit16 MBI            : 3;	/* Memory Block Index of Error(i) */
	} B;
	short S;
	unsigned short US;

} MC0_ETRR0_type;
#define MC0_ETRR0	(*( MC0_ETRR0_type *) 0xf0061012u)	/* Error Tracking Register 0 */
#define MC0_ETRR1	(*( MC0_ETRR0_type *) 0xf0061014u)	/* Error Tracking Register 1 */
#define MC0_ETRR2	(*( MC0_ETRR0_type *) 0xf0061016u)	/* Error Tracking Register 2 */
#define MC0_ETRR3	(*( MC0_ETRR0_type *) 0xf0061018u)	/* Error Tracking Register 3 */
#define MC0_ETRR4	(*( MC0_ETRR0_type *) 0xf006101au)	/* Error Tracking Register 4 */
#define MC10_ETRR0	(*( MC0_ETRR0_type *) 0xf0061a12u)	/* Error Tracking Register 0 */
#define MC10_ETRR1	(*( MC0_ETRR0_type *) 0xf0061a14u)	/* Error Tracking Register 1 */
#define MC10_ETRR2	(*( MC0_ETRR0_type *) 0xf0061a16u)	/* Error Tracking Register 2 */
#define MC10_ETRR3	(*( MC0_ETRR0_type *) 0xf0061a18u)	/* Error Tracking Register 3 */
#define MC10_ETRR4	(*( MC0_ETRR0_type *) 0xf0061a1au)	/* Error Tracking Register 4 */
#define MC11_ETRR0	(*( MC0_ETRR0_type *) 0xf0061b12u)	/* Error Tracking Register 0 */
#define MC11_ETRR1	(*( MC0_ETRR0_type *) 0xf0061b14u)	/* Error Tracking Register 1 */
#define MC11_ETRR2	(*( MC0_ETRR0_type *) 0xf0061b16u)	/* Error Tracking Register 2 */
#define MC11_ETRR3	(*( MC0_ETRR0_type *) 0xf0061b18u)	/* Error Tracking Register 3 */
#define MC11_ETRR4	(*( MC0_ETRR0_type *) 0xf0061b1au)	/* Error Tracking Register 4 */
#define MC12_ETRR0	(*( MC0_ETRR0_type *) 0xf0061c12u)	/* Error Tracking Register 0 */
#define MC12_ETRR1	(*( MC0_ETRR0_type *) 0xf0061c14u)	/* Error Tracking Register 1 */
#define MC12_ETRR2	(*( MC0_ETRR0_type *) 0xf0061c16u)	/* Error Tracking Register 2 */
#define MC12_ETRR3	(*( MC0_ETRR0_type *) 0xf0061c18u)	/* Error Tracking Register 3 */
#define MC12_ETRR4	(*( MC0_ETRR0_type *) 0xf0061c1au)	/* Error Tracking Register 4 */
#define MC13_ETRR0	(*( MC0_ETRR0_type *) 0xf0061d12u)	/* Error Tracking Register 0 */
#define MC13_ETRR1	(*( MC0_ETRR0_type *) 0xf0061d14u)	/* Error Tracking Register 1 */
#define MC13_ETRR2	(*( MC0_ETRR0_type *) 0xf0061d16u)	/* Error Tracking Register 2 */
#define MC13_ETRR3	(*( MC0_ETRR0_type *) 0xf0061d18u)	/* Error Tracking Register 3 */
#define MC13_ETRR4	(*( MC0_ETRR0_type *) 0xf0061d1au)	/* Error Tracking Register 4 */
#define MC14_ETRR0	(*( MC0_ETRR0_type *) 0xf0061e12u)	/* Error Tracking Register 0 */
#define MC14_ETRR1	(*( MC0_ETRR0_type *) 0xf0061e14u)	/* Error Tracking Register 1 */
#define MC14_ETRR2	(*( MC0_ETRR0_type *) 0xf0061e16u)	/* Error Tracking Register 2 */
#define MC14_ETRR3	(*( MC0_ETRR0_type *) 0xf0061e18u)	/* Error Tracking Register 3 */
#define MC14_ETRR4	(*( MC0_ETRR0_type *) 0xf0061e1au)	/* Error Tracking Register 4 */
#define MC15_ETRR0	(*( MC0_ETRR0_type *) 0xf0061f12u)	/* Error Tracking Register 0 */
#define MC15_ETRR1	(*( MC0_ETRR0_type *) 0xf0061f14u)	/* Error Tracking Register 1 */
#define MC15_ETRR2	(*( MC0_ETRR0_type *) 0xf0061f16u)	/* Error Tracking Register 2 */
#define MC15_ETRR3	(*( MC0_ETRR0_type *) 0xf0061f18u)	/* Error Tracking Register 3 */
#define MC15_ETRR4	(*( MC0_ETRR0_type *) 0xf0061f1au)	/* Error Tracking Register 4 */
#define MC16_ETRR0	(*( MC0_ETRR0_type *) 0xf0062012u)	/* Error Tracking Register 0 */
#define MC16_ETRR1	(*( MC0_ETRR0_type *) 0xf0062014u)	/* Error Tracking Register 1 */
#define MC16_ETRR2	(*( MC0_ETRR0_type *) 0xf0062016u)	/* Error Tracking Register 2 */
#define MC16_ETRR3	(*( MC0_ETRR0_type *) 0xf0062018u)	/* Error Tracking Register 3 */
#define MC16_ETRR4	(*( MC0_ETRR0_type *) 0xf006201au)	/* Error Tracking Register 4 */
#define MC17_ETRR0	(*( MC0_ETRR0_type *) 0xf0062112u)	/* Error Tracking Register 0 */
#define MC17_ETRR1	(*( MC0_ETRR0_type *) 0xf0062114u)	/* Error Tracking Register 1 */
#define MC17_ETRR2	(*( MC0_ETRR0_type *) 0xf0062116u)	/* Error Tracking Register 2 */
#define MC17_ETRR3	(*( MC0_ETRR0_type *) 0xf0062118u)	/* Error Tracking Register 3 */
#define MC17_ETRR4	(*( MC0_ETRR0_type *) 0xf006211au)	/* Error Tracking Register 4 */
#define MC18_ETRR0	(*( MC0_ETRR0_type *) 0xf0062212u)	/* Error Tracking Register 0 */
#define MC18_ETRR1	(*( MC0_ETRR0_type *) 0xf0062214u)	/* Error Tracking Register 1 */
#define MC18_ETRR2	(*( MC0_ETRR0_type *) 0xf0062216u)	/* Error Tracking Register 2 */
#define MC18_ETRR3	(*( MC0_ETRR0_type *) 0xf0062218u)	/* Error Tracking Register 3 */
#define MC18_ETRR4	(*( MC0_ETRR0_type *) 0xf006221au)	/* Error Tracking Register 4 */
#define MC19_ETRR0	(*( MC0_ETRR0_type *) 0xf0062312u)	/* Error Tracking Register 0 */
#define MC19_ETRR1	(*( MC0_ETRR0_type *) 0xf0062314u)	/* Error Tracking Register 1 */
#define MC19_ETRR2	(*( MC0_ETRR0_type *) 0xf0062316u)	/* Error Tracking Register 2 */
#define MC19_ETRR3	(*( MC0_ETRR0_type *) 0xf0062318u)	/* Error Tracking Register 3 */
#define MC19_ETRR4	(*( MC0_ETRR0_type *) 0xf006231au)	/* Error Tracking Register 4 */
#define MC1_ETRR0	(*( MC0_ETRR0_type *) 0xf0061112u)	/* Error Tracking Register 0 */
#define MC1_ETRR1	(*( MC0_ETRR0_type *) 0xf0061114u)	/* Error Tracking Register 1 */
#define MC1_ETRR2	(*( MC0_ETRR0_type *) 0xf0061116u)	/* Error Tracking Register 2 */
#define MC1_ETRR3	(*( MC0_ETRR0_type *) 0xf0061118u)	/* Error Tracking Register 3 */
#define MC1_ETRR4	(*( MC0_ETRR0_type *) 0xf006111au)	/* Error Tracking Register 4 */
#define MC20_ETRR0	(*( MC0_ETRR0_type *) 0xf0062412u)	/* Error Tracking Register 0 */
#define MC20_ETRR1	(*( MC0_ETRR0_type *) 0xf0062414u)	/* Error Tracking Register 1 */
#define MC20_ETRR2	(*( MC0_ETRR0_type *) 0xf0062416u)	/* Error Tracking Register 2 */
#define MC20_ETRR3	(*( MC0_ETRR0_type *) 0xf0062418u)	/* Error Tracking Register 3 */
#define MC20_ETRR4	(*( MC0_ETRR0_type *) 0xf006241au)	/* Error Tracking Register 4 */
#define MC21_ETRR0	(*( MC0_ETRR0_type *) 0xf0062512u)	/* Error Tracking Register 0 */
#define MC21_ETRR1	(*( MC0_ETRR0_type *) 0xf0062514u)	/* Error Tracking Register 1 */
#define MC21_ETRR2	(*( MC0_ETRR0_type *) 0xf0062516u)	/* Error Tracking Register 2 */
#define MC21_ETRR3	(*( MC0_ETRR0_type *) 0xf0062518u)	/* Error Tracking Register 3 */
#define MC21_ETRR4	(*( MC0_ETRR0_type *) 0xf006251au)	/* Error Tracking Register 4 */
#define MC22_ETRR0	(*( MC0_ETRR0_type *) 0xf0062612u)	/* Error Tracking Register 0 */
#define MC22_ETRR1	(*( MC0_ETRR0_type *) 0xf0062614u)	/* Error Tracking Register 1 */
#define MC22_ETRR2	(*( MC0_ETRR0_type *) 0xf0062616u)	/* Error Tracking Register 2 */
#define MC22_ETRR3	(*( MC0_ETRR0_type *) 0xf0062618u)	/* Error Tracking Register 3 */
#define MC22_ETRR4	(*( MC0_ETRR0_type *) 0xf006261au)	/* Error Tracking Register 4 */
#define MC23_ETRR0	(*( MC0_ETRR0_type *) 0xf0062712u)	/* Error Tracking Register 0 */
#define MC23_ETRR1	(*( MC0_ETRR0_type *) 0xf0062714u)	/* Error Tracking Register 1 */
#define MC23_ETRR2	(*( MC0_ETRR0_type *) 0xf0062716u)	/* Error Tracking Register 2 */
#define MC23_ETRR3	(*( MC0_ETRR0_type *) 0xf0062718u)	/* Error Tracking Register 3 */
#define MC23_ETRR4	(*( MC0_ETRR0_type *) 0xf006271au)	/* Error Tracking Register 4 */
#define MC24_ETRR0	(*( MC0_ETRR0_type *) 0xf0062812u)	/* Error Tracking Register 0 */
#define MC24_ETRR1	(*( MC0_ETRR0_type *) 0xf0062814u)	/* Error Tracking Register 1 */
#define MC24_ETRR2	(*( MC0_ETRR0_type *) 0xf0062816u)	/* Error Tracking Register 2 */
#define MC24_ETRR3	(*( MC0_ETRR0_type *) 0xf0062818u)	/* Error Tracking Register 3 */
#define MC24_ETRR4	(*( MC0_ETRR0_type *) 0xf006281au)	/* Error Tracking Register 4 */
#define MC25_ETRR0	(*( MC0_ETRR0_type *) 0xf0062912u)	/* Error Tracking Register 0 */
#define MC25_ETRR1	(*( MC0_ETRR0_type *) 0xf0062914u)	/* Error Tracking Register 1 */
#define MC25_ETRR2	(*( MC0_ETRR0_type *) 0xf0062916u)	/* Error Tracking Register 2 */
#define MC25_ETRR3	(*( MC0_ETRR0_type *) 0xf0062918u)	/* Error Tracking Register 3 */
#define MC25_ETRR4	(*( MC0_ETRR0_type *) 0xf006291au)	/* Error Tracking Register 4 */
#define MC26_ETRR0	(*( MC0_ETRR0_type *) 0xf0062a12u)	/* Error Tracking Register 0 */
#define MC26_ETRR1	(*( MC0_ETRR0_type *) 0xf0062a14u)	/* Error Tracking Register 1 */
#define MC26_ETRR2	(*( MC0_ETRR0_type *) 0xf0062a16u)	/* Error Tracking Register 2 */
#define MC26_ETRR3	(*( MC0_ETRR0_type *) 0xf0062a18u)	/* Error Tracking Register 3 */
#define MC26_ETRR4	(*( MC0_ETRR0_type *) 0xf0062a1au)	/* Error Tracking Register 4 */
#define MC27_ETRR0	(*( MC0_ETRR0_type *) 0xf0062b12u)	/* Error Tracking Register 0 */
#define MC27_ETRR1	(*( MC0_ETRR0_type *) 0xf0062b14u)	/* Error Tracking Register 1 */
#define MC27_ETRR2	(*( MC0_ETRR0_type *) 0xf0062b16u)	/* Error Tracking Register 2 */
#define MC27_ETRR3	(*( MC0_ETRR0_type *) 0xf0062b18u)	/* Error Tracking Register 3 */
#define MC27_ETRR4	(*( MC0_ETRR0_type *) 0xf0062b1au)	/* Error Tracking Register 4 */
#define MC28_ETRR0	(*( MC0_ETRR0_type *) 0xf0062c12u)	/* Error Tracking Register 0 */
#define MC28_ETRR1	(*( MC0_ETRR0_type *) 0xf0062c14u)	/* Error Tracking Register 1 */
#define MC28_ETRR2	(*( MC0_ETRR0_type *) 0xf0062c16u)	/* Error Tracking Register 2 */
#define MC28_ETRR3	(*( MC0_ETRR0_type *) 0xf0062c18u)	/* Error Tracking Register 3 */
#define MC28_ETRR4	(*( MC0_ETRR0_type *) 0xf0062c1au)	/* Error Tracking Register 4 */
#define MC29_ETRR0	(*( MC0_ETRR0_type *) 0xf0062d12u)	/* Error Tracking Register 0 */
#define MC29_ETRR1	(*( MC0_ETRR0_type *) 0xf0062d14u)	/* Error Tracking Register 1 */
#define MC29_ETRR2	(*( MC0_ETRR0_type *) 0xf0062d16u)	/* Error Tracking Register 2 */
#define MC29_ETRR3	(*( MC0_ETRR0_type *) 0xf0062d18u)	/* Error Tracking Register 3 */
#define MC29_ETRR4	(*( MC0_ETRR0_type *) 0xf0062d1au)	/* Error Tracking Register 4 */
#define MC2_ETRR0	(*( MC0_ETRR0_type *) 0xf0061212u)	/* Error Tracking Register 0 */
#define MC2_ETRR1	(*( MC0_ETRR0_type *) 0xf0061214u)	/* Error Tracking Register 1 */
#define MC2_ETRR2	(*( MC0_ETRR0_type *) 0xf0061216u)	/* Error Tracking Register 2 */
#define MC2_ETRR3	(*( MC0_ETRR0_type *) 0xf0061218u)	/* Error Tracking Register 3 */
#define MC2_ETRR4	(*( MC0_ETRR0_type *) 0xf006121au)	/* Error Tracking Register 4 */
#define MC30_ETRR0	(*( MC0_ETRR0_type *) 0xf0062e12u)	/* Error Tracking Register 0 */
#define MC30_ETRR1	(*( MC0_ETRR0_type *) 0xf0062e14u)	/* Error Tracking Register 1 */
#define MC30_ETRR2	(*( MC0_ETRR0_type *) 0xf0062e16u)	/* Error Tracking Register 2 */
#define MC30_ETRR3	(*( MC0_ETRR0_type *) 0xf0062e18u)	/* Error Tracking Register 3 */
#define MC30_ETRR4	(*( MC0_ETRR0_type *) 0xf0062e1au)	/* Error Tracking Register 4 */
#define MC31_ETRR0	(*( MC0_ETRR0_type *) 0xf0062f12u)	/* Error Tracking Register 0 */
#define MC31_ETRR1	(*( MC0_ETRR0_type *) 0xf0062f14u)	/* Error Tracking Register 1 */
#define MC31_ETRR2	(*( MC0_ETRR0_type *) 0xf0062f16u)	/* Error Tracking Register 2 */
#define MC31_ETRR3	(*( MC0_ETRR0_type *) 0xf0062f18u)	/* Error Tracking Register 3 */
#define MC31_ETRR4	(*( MC0_ETRR0_type *) 0xf0062f1au)	/* Error Tracking Register 4 */
#define MC32_ETRR0	(*( MC0_ETRR0_type *) 0xf0063012u)	/* Error Tracking Register 0 */
#define MC32_ETRR1	(*( MC0_ETRR0_type *) 0xf0063014u)	/* Error Tracking Register 1 */
#define MC32_ETRR2	(*( MC0_ETRR0_type *) 0xf0063016u)	/* Error Tracking Register 2 */
#define MC32_ETRR3	(*( MC0_ETRR0_type *) 0xf0063018u)	/* Error Tracking Register 3 */
#define MC32_ETRR4	(*( MC0_ETRR0_type *) 0xf006301au)	/* Error Tracking Register 4 */
#define MC33_ETRR0	(*( MC0_ETRR0_type *) 0xf0063112u)	/* Error Tracking Register 0 */
#define MC33_ETRR1	(*( MC0_ETRR0_type *) 0xf0063114u)	/* Error Tracking Register 1 */
#define MC33_ETRR2	(*( MC0_ETRR0_type *) 0xf0063116u)	/* Error Tracking Register 2 */
#define MC33_ETRR3	(*( MC0_ETRR0_type *) 0xf0063118u)	/* Error Tracking Register 3 */
#define MC33_ETRR4	(*( MC0_ETRR0_type *) 0xf006311au)	/* Error Tracking Register 4 */
#define MC34_ETRR0	(*( MC0_ETRR0_type *) 0xf0063212u)	/* Error Tracking Register 0 */
#define MC34_ETRR1	(*( MC0_ETRR0_type *) 0xf0063214u)	/* Error Tracking Register 1 */
#define MC34_ETRR2	(*( MC0_ETRR0_type *) 0xf0063216u)	/* Error Tracking Register 2 */
#define MC34_ETRR3	(*( MC0_ETRR0_type *) 0xf0063218u)	/* Error Tracking Register 3 */
#define MC34_ETRR4	(*( MC0_ETRR0_type *) 0xf006321au)	/* Error Tracking Register 4 */
#define MC35_ETRR0	(*( MC0_ETRR0_type *) 0xf0063312u)	/* Error Tracking Register 0 */
#define MC35_ETRR1	(*( MC0_ETRR0_type *) 0xf0063314u)	/* Error Tracking Register 1 */
#define MC35_ETRR2	(*( MC0_ETRR0_type *) 0xf0063316u)	/* Error Tracking Register 2 */
#define MC35_ETRR3	(*( MC0_ETRR0_type *) 0xf0063318u)	/* Error Tracking Register 3 */
#define MC35_ETRR4	(*( MC0_ETRR0_type *) 0xf006331au)	/* Error Tracking Register 4 */
#define MC36_ETRR0	(*( MC0_ETRR0_type *) 0xf0063412u)	/* Error Tracking Register 0 */
#define MC36_ETRR1	(*( MC0_ETRR0_type *) 0xf0063414u)	/* Error Tracking Register 1 */
#define MC36_ETRR2	(*( MC0_ETRR0_type *) 0xf0063416u)	/* Error Tracking Register 2 */
#define MC36_ETRR3	(*( MC0_ETRR0_type *) 0xf0063418u)	/* Error Tracking Register 3 */
#define MC36_ETRR4	(*( MC0_ETRR0_type *) 0xf006341au)	/* Error Tracking Register 4 */
#define MC37_ETRR0	(*( MC0_ETRR0_type *) 0xf0063512u)	/* Error Tracking Register 0 */
#define MC37_ETRR1	(*( MC0_ETRR0_type *) 0xf0063514u)	/* Error Tracking Register 1 */
#define MC37_ETRR2	(*( MC0_ETRR0_type *) 0xf0063516u)	/* Error Tracking Register 2 */
#define MC37_ETRR3	(*( MC0_ETRR0_type *) 0xf0063518u)	/* Error Tracking Register 3 */
#define MC37_ETRR4	(*( MC0_ETRR0_type *) 0xf006351au)	/* Error Tracking Register 4 */
#define MC38_ETRR0	(*( MC0_ETRR0_type *) 0xf0063612u)	/* Error Tracking Register 0 */
#define MC38_ETRR1	(*( MC0_ETRR0_type *) 0xf0063614u)	/* Error Tracking Register 1 */
#define MC38_ETRR2	(*( MC0_ETRR0_type *) 0xf0063616u)	/* Error Tracking Register 2 */
#define MC38_ETRR3	(*( MC0_ETRR0_type *) 0xf0063618u)	/* Error Tracking Register 3 */
#define MC38_ETRR4	(*( MC0_ETRR0_type *) 0xf006361au)	/* Error Tracking Register 4 */
#define MC39_ETRR0	(*( MC0_ETRR0_type *) 0xf0063712u)	/* Error Tracking Register 0 */
#define MC39_ETRR1	(*( MC0_ETRR0_type *) 0xf0063714u)	/* Error Tracking Register 1 */
#define MC39_ETRR2	(*( MC0_ETRR0_type *) 0xf0063716u)	/* Error Tracking Register 2 */
#define MC39_ETRR3	(*( MC0_ETRR0_type *) 0xf0063718u)	/* Error Tracking Register 3 */
#define MC39_ETRR4	(*( MC0_ETRR0_type *) 0xf006371au)	/* Error Tracking Register 4 */
#define MC3_ETRR0	(*( MC0_ETRR0_type *) 0xf0061312u)	/* Error Tracking Register 0 */
#define MC3_ETRR1	(*( MC0_ETRR0_type *) 0xf0061314u)	/* Error Tracking Register 1 */
#define MC3_ETRR2	(*( MC0_ETRR0_type *) 0xf0061316u)	/* Error Tracking Register 2 */
#define MC3_ETRR3	(*( MC0_ETRR0_type *) 0xf0061318u)	/* Error Tracking Register 3 */
#define MC3_ETRR4	(*( MC0_ETRR0_type *) 0xf006131au)	/* Error Tracking Register 4 */
#define MC40_ETRR0	(*( MC0_ETRR0_type *) 0xf0063812u)	/* Error Tracking Register 0 */
#define MC40_ETRR1	(*( MC0_ETRR0_type *) 0xf0063814u)	/* Error Tracking Register 1 */
#define MC40_ETRR2	(*( MC0_ETRR0_type *) 0xf0063816u)	/* Error Tracking Register 2 */
#define MC40_ETRR3	(*( MC0_ETRR0_type *) 0xf0063818u)	/* Error Tracking Register 3 */
#define MC40_ETRR4	(*( MC0_ETRR0_type *) 0xf006381au)	/* Error Tracking Register 4 */
#define MC41_ETRR0	(*( MC0_ETRR0_type *) 0xf0063912u)	/* Error Tracking Register 0 */
#define MC41_ETRR1	(*( MC0_ETRR0_type *) 0xf0063914u)	/* Error Tracking Register 1 */
#define MC41_ETRR2	(*( MC0_ETRR0_type *) 0xf0063916u)	/* Error Tracking Register 2 */
#define MC41_ETRR3	(*( MC0_ETRR0_type *) 0xf0063918u)	/* Error Tracking Register 3 */
#define MC41_ETRR4	(*( MC0_ETRR0_type *) 0xf006391au)	/* Error Tracking Register 4 */
#define MC42_ETRR0	(*( MC0_ETRR0_type *) 0xf0063a12u)	/* Error Tracking Register 0 */
#define MC42_ETRR1	(*( MC0_ETRR0_type *) 0xf0063a14u)	/* Error Tracking Register 1 */
#define MC42_ETRR2	(*( MC0_ETRR0_type *) 0xf0063a16u)	/* Error Tracking Register 2 */
#define MC42_ETRR3	(*( MC0_ETRR0_type *) 0xf0063a18u)	/* Error Tracking Register 3 */
#define MC42_ETRR4	(*( MC0_ETRR0_type *) 0xf0063a1au)	/* Error Tracking Register 4 */
#define MC43_ETRR0	(*( MC0_ETRR0_type *) 0xf0063b12u)	/* Error Tracking Register 0 */
#define MC43_ETRR1	(*( MC0_ETRR0_type *) 0xf0063b14u)	/* Error Tracking Register 1 */
#define MC43_ETRR2	(*( MC0_ETRR0_type *) 0xf0063b16u)	/* Error Tracking Register 2 */
#define MC43_ETRR3	(*( MC0_ETRR0_type *) 0xf0063b18u)	/* Error Tracking Register 3 */
#define MC43_ETRR4	(*( MC0_ETRR0_type *) 0xf0063b1au)	/* Error Tracking Register 4 */
#define MC44_ETRR0	(*( MC0_ETRR0_type *) 0xf0063c12u)	/* Error Tracking Register 0 */
#define MC44_ETRR1	(*( MC0_ETRR0_type *) 0xf0063c14u)	/* Error Tracking Register 1 */
#define MC44_ETRR2	(*( MC0_ETRR0_type *) 0xf0063c16u)	/* Error Tracking Register 2 */
#define MC44_ETRR3	(*( MC0_ETRR0_type *) 0xf0063c18u)	/* Error Tracking Register 3 */
#define MC44_ETRR4	(*( MC0_ETRR0_type *) 0xf0063c1au)	/* Error Tracking Register 4 */
#define MC45_ETRR0	(*( MC0_ETRR0_type *) 0xf0063d12u)	/* Error Tracking Register 0 */
#define MC45_ETRR1	(*( MC0_ETRR0_type *) 0xf0063d14u)	/* Error Tracking Register 1 */
#define MC45_ETRR2	(*( MC0_ETRR0_type *) 0xf0063d16u)	/* Error Tracking Register 2 */
#define MC45_ETRR3	(*( MC0_ETRR0_type *) 0xf0063d18u)	/* Error Tracking Register 3 */
#define MC45_ETRR4	(*( MC0_ETRR0_type *) 0xf0063d1au)	/* Error Tracking Register 4 */
#define MC46_ETRR0	(*( MC0_ETRR0_type *) 0xf0063e12u)	/* Error Tracking Register 0 */
#define MC46_ETRR1	(*( MC0_ETRR0_type *) 0xf0063e14u)	/* Error Tracking Register 1 */
#define MC46_ETRR2	(*( MC0_ETRR0_type *) 0xf0063e16u)	/* Error Tracking Register 2 */
#define MC46_ETRR3	(*( MC0_ETRR0_type *) 0xf0063e18u)	/* Error Tracking Register 3 */
#define MC46_ETRR4	(*( MC0_ETRR0_type *) 0xf0063e1au)	/* Error Tracking Register 4 */
#define MC47_ETRR0	(*( MC0_ETRR0_type *) 0xf0063f12u)	/* Error Tracking Register 0 */
#define MC47_ETRR1	(*( MC0_ETRR0_type *) 0xf0063f14u)	/* Error Tracking Register 1 */
#define MC47_ETRR2	(*( MC0_ETRR0_type *) 0xf0063f16u)	/* Error Tracking Register 2 */
#define MC47_ETRR3	(*( MC0_ETRR0_type *) 0xf0063f18u)	/* Error Tracking Register 3 */
#define MC47_ETRR4	(*( MC0_ETRR0_type *) 0xf0063f1au)	/* Error Tracking Register 4 */
#define MC48_ETRR0	(*( MC0_ETRR0_type *) 0xf0064012u)	/* Error Tracking Register 0 */
#define MC48_ETRR1	(*( MC0_ETRR0_type *) 0xf0064014u)	/* Error Tracking Register 1 */
#define MC48_ETRR2	(*( MC0_ETRR0_type *) 0xf0064016u)	/* Error Tracking Register 2 */
#define MC48_ETRR3	(*( MC0_ETRR0_type *) 0xf0064018u)	/* Error Tracking Register 3 */
#define MC48_ETRR4	(*( MC0_ETRR0_type *) 0xf006401au)	/* Error Tracking Register 4 */
#define MC49_ETRR0	(*( MC0_ETRR0_type *) 0xf0064112u)	/* Error Tracking Register 0 */
#define MC49_ETRR1	(*( MC0_ETRR0_type *) 0xf0064114u)	/* Error Tracking Register 1 */
#define MC49_ETRR2	(*( MC0_ETRR0_type *) 0xf0064116u)	/* Error Tracking Register 2 */
#define MC49_ETRR3	(*( MC0_ETRR0_type *) 0xf0064118u)	/* Error Tracking Register 3 */
#define MC49_ETRR4	(*( MC0_ETRR0_type *) 0xf006411au)	/* Error Tracking Register 4 */
#define MC4_ETRR0	(*( MC0_ETRR0_type *) 0xf0061412u)	/* Error Tracking Register 0 */
#define MC4_ETRR1	(*( MC0_ETRR0_type *) 0xf0061414u)	/* Error Tracking Register 1 */
#define MC4_ETRR2	(*( MC0_ETRR0_type *) 0xf0061416u)	/* Error Tracking Register 2 */
#define MC4_ETRR3	(*( MC0_ETRR0_type *) 0xf0061418u)	/* Error Tracking Register 3 */
#define MC4_ETRR4	(*( MC0_ETRR0_type *) 0xf006141au)	/* Error Tracking Register 4 */
#define MC50_ETRR0	(*( MC0_ETRR0_type *) 0xf0064212u)	/* Error Tracking Register 0 */
#define MC50_ETRR1	(*( MC0_ETRR0_type *) 0xf0064214u)	/* Error Tracking Register 1 */
#define MC50_ETRR2	(*( MC0_ETRR0_type *) 0xf0064216u)	/* Error Tracking Register 2 */
#define MC50_ETRR3	(*( MC0_ETRR0_type *) 0xf0064218u)	/* Error Tracking Register 3 */
#define MC50_ETRR4	(*( MC0_ETRR0_type *) 0xf006421au)	/* Error Tracking Register 4 */
#define MC51_ETRR0	(*( MC0_ETRR0_type *) 0xf0064312u)	/* Error Tracking Register 0 */
#define MC51_ETRR1	(*( MC0_ETRR0_type *) 0xf0064314u)	/* Error Tracking Register 1 */
#define MC51_ETRR2	(*( MC0_ETRR0_type *) 0xf0064316u)	/* Error Tracking Register 2 */
#define MC51_ETRR3	(*( MC0_ETRR0_type *) 0xf0064318u)	/* Error Tracking Register 3 */
#define MC51_ETRR4	(*( MC0_ETRR0_type *) 0xf006431au)	/* Error Tracking Register 4 */
#define MC52_ETRR0	(*( MC0_ETRR0_type *) 0xf0064412u)	/* Error Tracking Register 0 */
#define MC52_ETRR1	(*( MC0_ETRR0_type *) 0xf0064414u)	/* Error Tracking Register 1 */
#define MC52_ETRR2	(*( MC0_ETRR0_type *) 0xf0064416u)	/* Error Tracking Register 2 */
#define MC52_ETRR3	(*( MC0_ETRR0_type *) 0xf0064418u)	/* Error Tracking Register 3 */
#define MC52_ETRR4	(*( MC0_ETRR0_type *) 0xf006441au)	/* Error Tracking Register 4 */
#define MC53_ETRR0	(*( MC0_ETRR0_type *) 0xf0064512u)	/* Error Tracking Register 0 */
#define MC53_ETRR1	(*( MC0_ETRR0_type *) 0xf0064514u)	/* Error Tracking Register 1 */
#define MC53_ETRR2	(*( MC0_ETRR0_type *) 0xf0064516u)	/* Error Tracking Register 2 */
#define MC53_ETRR3	(*( MC0_ETRR0_type *) 0xf0064518u)	/* Error Tracking Register 3 */
#define MC53_ETRR4	(*( MC0_ETRR0_type *) 0xf006451au)	/* Error Tracking Register 4 */
#define MC54_ETRR0	(*( MC0_ETRR0_type *) 0xf0064612u)	/* Error Tracking Register 0 */
#define MC54_ETRR1	(*( MC0_ETRR0_type *) 0xf0064614u)	/* Error Tracking Register 1 */
#define MC54_ETRR2	(*( MC0_ETRR0_type *) 0xf0064616u)	/* Error Tracking Register 2 */
#define MC54_ETRR3	(*( MC0_ETRR0_type *) 0xf0064618u)	/* Error Tracking Register 3 */
#define MC54_ETRR4	(*( MC0_ETRR0_type *) 0xf006461au)	/* Error Tracking Register 4 */
#define MC55_ETRR0	(*( MC0_ETRR0_type *) 0xf0064712u)	/* Error Tracking Register 0 */
#define MC55_ETRR1	(*( MC0_ETRR0_type *) 0xf0064714u)	/* Error Tracking Register 1 */
#define MC55_ETRR2	(*( MC0_ETRR0_type *) 0xf0064716u)	/* Error Tracking Register 2 */
#define MC55_ETRR3	(*( MC0_ETRR0_type *) 0xf0064718u)	/* Error Tracking Register 3 */
#define MC55_ETRR4	(*( MC0_ETRR0_type *) 0xf006471au)	/* Error Tracking Register 4 */
#define MC56_ETRR0	(*( MC0_ETRR0_type *) 0xf0064812u)	/* Error Tracking Register 0 */
#define MC56_ETRR1	(*( MC0_ETRR0_type *) 0xf0064814u)	/* Error Tracking Register 1 */
#define MC56_ETRR2	(*( MC0_ETRR0_type *) 0xf0064816u)	/* Error Tracking Register 2 */
#define MC56_ETRR3	(*( MC0_ETRR0_type *) 0xf0064818u)	/* Error Tracking Register 3 */
#define MC56_ETRR4	(*( MC0_ETRR0_type *) 0xf006481au)	/* Error Tracking Register 4 */
#define MC57_ETRR0	(*( MC0_ETRR0_type *) 0xf0064912u)	/* Error Tracking Register 0 */
#define MC57_ETRR1	(*( MC0_ETRR0_type *) 0xf0064914u)	/* Error Tracking Register 1 */
#define MC57_ETRR2	(*( MC0_ETRR0_type *) 0xf0064916u)	/* Error Tracking Register 2 */
#define MC57_ETRR3	(*( MC0_ETRR0_type *) 0xf0064918u)	/* Error Tracking Register 3 */
#define MC57_ETRR4	(*( MC0_ETRR0_type *) 0xf006491au)	/* Error Tracking Register 4 */
#define MC58_ETRR0	(*( MC0_ETRR0_type *) 0xf0064a12u)	/* Error Tracking Register 0 */
#define MC58_ETRR1	(*( MC0_ETRR0_type *) 0xf0064a14u)	/* Error Tracking Register 1 */
#define MC58_ETRR2	(*( MC0_ETRR0_type *) 0xf0064a16u)	/* Error Tracking Register 2 */
#define MC58_ETRR3	(*( MC0_ETRR0_type *) 0xf0064a18u)	/* Error Tracking Register 3 */
#define MC58_ETRR4	(*( MC0_ETRR0_type *) 0xf0064a1au)	/* Error Tracking Register 4 */
#define MC59_ETRR0	(*( MC0_ETRR0_type *) 0xf0064b12u)	/* Error Tracking Register 0 */
#define MC59_ETRR1	(*( MC0_ETRR0_type *) 0xf0064b14u)	/* Error Tracking Register 1 */
#define MC59_ETRR2	(*( MC0_ETRR0_type *) 0xf0064b16u)	/* Error Tracking Register 2 */
#define MC59_ETRR3	(*( MC0_ETRR0_type *) 0xf0064b18u)	/* Error Tracking Register 3 */
#define MC59_ETRR4	(*( MC0_ETRR0_type *) 0xf0064b1au)	/* Error Tracking Register 4 */
#define MC5_ETRR0	(*( MC0_ETRR0_type *) 0xf0061512u)	/* Error Tracking Register 0 */
#define MC5_ETRR1	(*( MC0_ETRR0_type *) 0xf0061514u)	/* Error Tracking Register 1 */
#define MC5_ETRR2	(*( MC0_ETRR0_type *) 0xf0061516u)	/* Error Tracking Register 2 */
#define MC5_ETRR3	(*( MC0_ETRR0_type *) 0xf0061518u)	/* Error Tracking Register 3 */
#define MC5_ETRR4	(*( MC0_ETRR0_type *) 0xf006151au)	/* Error Tracking Register 4 */
#define MC60_ETRR0	(*( MC0_ETRR0_type *) 0xf0064c12u)	/* Error Tracking Register 0 */
#define MC60_ETRR1	(*( MC0_ETRR0_type *) 0xf0064c14u)	/* Error Tracking Register 1 */
#define MC60_ETRR2	(*( MC0_ETRR0_type *) 0xf0064c16u)	/* Error Tracking Register 2 */
#define MC60_ETRR3	(*( MC0_ETRR0_type *) 0xf0064c18u)	/* Error Tracking Register 3 */
#define MC60_ETRR4	(*( MC0_ETRR0_type *) 0xf0064c1au)	/* Error Tracking Register 4 */
#define MC61_ETRR0	(*( MC0_ETRR0_type *) 0xf0064d12u)	/* Error Tracking Register 0 */
#define MC61_ETRR1	(*( MC0_ETRR0_type *) 0xf0064d14u)	/* Error Tracking Register 1 */
#define MC61_ETRR2	(*( MC0_ETRR0_type *) 0xf0064d16u)	/* Error Tracking Register 2 */
#define MC61_ETRR3	(*( MC0_ETRR0_type *) 0xf0064d18u)	/* Error Tracking Register 3 */
#define MC61_ETRR4	(*( MC0_ETRR0_type *) 0xf0064d1au)	/* Error Tracking Register 4 */
#define MC62_ETRR0	(*( MC0_ETRR0_type *) 0xf0064e12u)	/* Error Tracking Register 0 */
#define MC62_ETRR1	(*( MC0_ETRR0_type *) 0xf0064e14u)	/* Error Tracking Register 1 */
#define MC62_ETRR2	(*( MC0_ETRR0_type *) 0xf0064e16u)	/* Error Tracking Register 2 */
#define MC62_ETRR3	(*( MC0_ETRR0_type *) 0xf0064e18u)	/* Error Tracking Register 3 */
#define MC62_ETRR4	(*( MC0_ETRR0_type *) 0xf0064e1au)	/* Error Tracking Register 4 */
#define MC63_ETRR0	(*( MC0_ETRR0_type *) 0xf0064f12u)	/* Error Tracking Register 0 */
#define MC63_ETRR1	(*( MC0_ETRR0_type *) 0xf0064f14u)	/* Error Tracking Register 1 */
#define MC63_ETRR2	(*( MC0_ETRR0_type *) 0xf0064f16u)	/* Error Tracking Register 2 */
#define MC63_ETRR3	(*( MC0_ETRR0_type *) 0xf0064f18u)	/* Error Tracking Register 3 */
#define MC63_ETRR4	(*( MC0_ETRR0_type *) 0xf0064f1au)	/* Error Tracking Register 4 */
#define MC64_ETRR0	(*( MC0_ETRR0_type *) 0xf0065012u)	/* Error Tracking Register 0 */
#define MC64_ETRR1	(*( MC0_ETRR0_type *) 0xf0065014u)	/* Error Tracking Register 1 */
#define MC64_ETRR2	(*( MC0_ETRR0_type *) 0xf0065016u)	/* Error Tracking Register 2 */
#define MC64_ETRR3	(*( MC0_ETRR0_type *) 0xf0065018u)	/* Error Tracking Register 3 */
#define MC64_ETRR4	(*( MC0_ETRR0_type *) 0xf006501au)	/* Error Tracking Register 4 */
#define MC65_ETRR0	(*( MC0_ETRR0_type *) 0xf0065112u)	/* Error Tracking Register 0 */
#define MC65_ETRR1	(*( MC0_ETRR0_type *) 0xf0065114u)	/* Error Tracking Register 1 */
#define MC65_ETRR2	(*( MC0_ETRR0_type *) 0xf0065116u)	/* Error Tracking Register 2 */
#define MC65_ETRR3	(*( MC0_ETRR0_type *) 0xf0065118u)	/* Error Tracking Register 3 */
#define MC65_ETRR4	(*( MC0_ETRR0_type *) 0xf006511au)	/* Error Tracking Register 4 */
#define MC66_ETRR0	(*( MC0_ETRR0_type *) 0xf0065212u)	/* Error Tracking Register 0 */
#define MC66_ETRR1	(*( MC0_ETRR0_type *) 0xf0065214u)	/* Error Tracking Register 1 */
#define MC66_ETRR2	(*( MC0_ETRR0_type *) 0xf0065216u)	/* Error Tracking Register 2 */
#define MC66_ETRR3	(*( MC0_ETRR0_type *) 0xf0065218u)	/* Error Tracking Register 3 */
#define MC66_ETRR4	(*( MC0_ETRR0_type *) 0xf006521au)	/* Error Tracking Register 4 */
#define MC67_ETRR0	(*( MC0_ETRR0_type *) 0xf0065312u)	/* Error Tracking Register 0 */
#define MC67_ETRR1	(*( MC0_ETRR0_type *) 0xf0065314u)	/* Error Tracking Register 1 */
#define MC67_ETRR2	(*( MC0_ETRR0_type *) 0xf0065316u)	/* Error Tracking Register 2 */
#define MC67_ETRR3	(*( MC0_ETRR0_type *) 0xf0065318u)	/* Error Tracking Register 3 */
#define MC67_ETRR4	(*( MC0_ETRR0_type *) 0xf006531au)	/* Error Tracking Register 4 */
#define MC68_ETRR0	(*( MC0_ETRR0_type *) 0xf0065412u)	/* Error Tracking Register 0 */
#define MC68_ETRR1	(*( MC0_ETRR0_type *) 0xf0065414u)	/* Error Tracking Register 1 */
#define MC68_ETRR2	(*( MC0_ETRR0_type *) 0xf0065416u)	/* Error Tracking Register 2 */
#define MC68_ETRR3	(*( MC0_ETRR0_type *) 0xf0065418u)	/* Error Tracking Register 3 */
#define MC68_ETRR4	(*( MC0_ETRR0_type *) 0xf006541au)	/* Error Tracking Register 4 */
#define MC69_ETRR0	(*( MC0_ETRR0_type *) 0xf0065512u)	/* Error Tracking Register 0 */
#define MC69_ETRR1	(*( MC0_ETRR0_type *) 0xf0065514u)	/* Error Tracking Register 1 */
#define MC69_ETRR2	(*( MC0_ETRR0_type *) 0xf0065516u)	/* Error Tracking Register 2 */
#define MC69_ETRR3	(*( MC0_ETRR0_type *) 0xf0065518u)	/* Error Tracking Register 3 */
#define MC69_ETRR4	(*( MC0_ETRR0_type *) 0xf006551au)	/* Error Tracking Register 4 */
#define MC6_ETRR0	(*( MC0_ETRR0_type *) 0xf0061612u)	/* Error Tracking Register 0 */
#define MC6_ETRR1	(*( MC0_ETRR0_type *) 0xf0061614u)	/* Error Tracking Register 1 */
#define MC6_ETRR2	(*( MC0_ETRR0_type *) 0xf0061616u)	/* Error Tracking Register 2 */
#define MC6_ETRR3	(*( MC0_ETRR0_type *) 0xf0061618u)	/* Error Tracking Register 3 */
#define MC6_ETRR4	(*( MC0_ETRR0_type *) 0xf006161au)	/* Error Tracking Register 4 */
#define MC70_ETRR0	(*( MC0_ETRR0_type *) 0xf0065612u)	/* Error Tracking Register 0 */
#define MC70_ETRR1	(*( MC0_ETRR0_type *) 0xf0065614u)	/* Error Tracking Register 1 */
#define MC70_ETRR2	(*( MC0_ETRR0_type *) 0xf0065616u)	/* Error Tracking Register 2 */
#define MC70_ETRR3	(*( MC0_ETRR0_type *) 0xf0065618u)	/* Error Tracking Register 3 */
#define MC70_ETRR4	(*( MC0_ETRR0_type *) 0xf006561au)	/* Error Tracking Register 4 */
#define MC71_ETRR0	(*( MC0_ETRR0_type *) 0xf0065712u)	/* Error Tracking Register 0 */
#define MC71_ETRR1	(*( MC0_ETRR0_type *) 0xf0065714u)	/* Error Tracking Register 1 */
#define MC71_ETRR2	(*( MC0_ETRR0_type *) 0xf0065716u)	/* Error Tracking Register 2 */
#define MC71_ETRR3	(*( MC0_ETRR0_type *) 0xf0065718u)	/* Error Tracking Register 3 */
#define MC71_ETRR4	(*( MC0_ETRR0_type *) 0xf006571au)	/* Error Tracking Register 4 */
#define MC72_ETRR0	(*( MC0_ETRR0_type *) 0xf0065812u)	/* Error Tracking Register 0 */
#define MC72_ETRR1	(*( MC0_ETRR0_type *) 0xf0065814u)	/* Error Tracking Register 1 */
#define MC72_ETRR2	(*( MC0_ETRR0_type *) 0xf0065816u)	/* Error Tracking Register 2 */
#define MC72_ETRR3	(*( MC0_ETRR0_type *) 0xf0065818u)	/* Error Tracking Register 3 */
#define MC72_ETRR4	(*( MC0_ETRR0_type *) 0xf006581au)	/* Error Tracking Register 4 */
#define MC73_ETRR0	(*( MC0_ETRR0_type *) 0xf0065912u)	/* Error Tracking Register 0 */
#define MC73_ETRR1	(*( MC0_ETRR0_type *) 0xf0065914u)	/* Error Tracking Register 1 */
#define MC73_ETRR2	(*( MC0_ETRR0_type *) 0xf0065916u)	/* Error Tracking Register 2 */
#define MC73_ETRR3	(*( MC0_ETRR0_type *) 0xf0065918u)	/* Error Tracking Register 3 */
#define MC73_ETRR4	(*( MC0_ETRR0_type *) 0xf006591au)	/* Error Tracking Register 4 */
#define MC74_ETRR0	(*( MC0_ETRR0_type *) 0xf0065a12u)	/* Error Tracking Register 0 */
#define MC74_ETRR1	(*( MC0_ETRR0_type *) 0xf0065a14u)	/* Error Tracking Register 1 */
#define MC74_ETRR2	(*( MC0_ETRR0_type *) 0xf0065a16u)	/* Error Tracking Register 2 */
#define MC74_ETRR3	(*( MC0_ETRR0_type *) 0xf0065a18u)	/* Error Tracking Register 3 */
#define MC74_ETRR4	(*( MC0_ETRR0_type *) 0xf0065a1au)	/* Error Tracking Register 4 */
#define MC75_ETRR0	(*( MC0_ETRR0_type *) 0xf0065b12u)	/* Error Tracking Register 0 */
#define MC75_ETRR1	(*( MC0_ETRR0_type *) 0xf0065b14u)	/* Error Tracking Register 1 */
#define MC75_ETRR2	(*( MC0_ETRR0_type *) 0xf0065b16u)	/* Error Tracking Register 2 */
#define MC75_ETRR3	(*( MC0_ETRR0_type *) 0xf0065b18u)	/* Error Tracking Register 3 */
#define MC75_ETRR4	(*( MC0_ETRR0_type *) 0xf0065b1au)	/* Error Tracking Register 4 */
#define MC76_ETRR0	(*( MC0_ETRR0_type *) 0xf0065c12u)	/* Error Tracking Register 0 */
#define MC76_ETRR1	(*( MC0_ETRR0_type *) 0xf0065c14u)	/* Error Tracking Register 1 */
#define MC76_ETRR2	(*( MC0_ETRR0_type *) 0xf0065c16u)	/* Error Tracking Register 2 */
#define MC76_ETRR3	(*( MC0_ETRR0_type *) 0xf0065c18u)	/* Error Tracking Register 3 */
#define MC76_ETRR4	(*( MC0_ETRR0_type *) 0xf0065c1au)	/* Error Tracking Register 4 */
#define MC77_ETRR0	(*( MC0_ETRR0_type *) 0xf0065d12u)	/* Error Tracking Register 0 */
#define MC77_ETRR1	(*( MC0_ETRR0_type *) 0xf0065d14u)	/* Error Tracking Register 1 */
#define MC77_ETRR2	(*( MC0_ETRR0_type *) 0xf0065d16u)	/* Error Tracking Register 2 */
#define MC77_ETRR3	(*( MC0_ETRR0_type *) 0xf0065d18u)	/* Error Tracking Register 3 */
#define MC77_ETRR4	(*( MC0_ETRR0_type *) 0xf0065d1au)	/* Error Tracking Register 4 */
#define MC78_ETRR0	(*( MC0_ETRR0_type *) 0xf0065e12u)	/* Error Tracking Register 0 */
#define MC78_ETRR1	(*( MC0_ETRR0_type *) 0xf0065e14u)	/* Error Tracking Register 1 */
#define MC78_ETRR2	(*( MC0_ETRR0_type *) 0xf0065e16u)	/* Error Tracking Register 2 */
#define MC78_ETRR3	(*( MC0_ETRR0_type *) 0xf0065e18u)	/* Error Tracking Register 3 */
#define MC78_ETRR4	(*( MC0_ETRR0_type *) 0xf0065e1au)	/* Error Tracking Register 4 */
#define MC79_ETRR0	(*( MC0_ETRR0_type *) 0xf0065f12u)	/* Error Tracking Register 0 */
#define MC79_ETRR1	(*( MC0_ETRR0_type *) 0xf0065f14u)	/* Error Tracking Register 1 */
#define MC79_ETRR2	(*( MC0_ETRR0_type *) 0xf0065f16u)	/* Error Tracking Register 2 */
#define MC79_ETRR3	(*( MC0_ETRR0_type *) 0xf0065f18u)	/* Error Tracking Register 3 */
#define MC79_ETRR4	(*( MC0_ETRR0_type *) 0xf0065f1au)	/* Error Tracking Register 4 */
#define MC7_ETRR0	(*( MC0_ETRR0_type *) 0xf0061712u)	/* Error Tracking Register 0 */
#define MC7_ETRR1	(*( MC0_ETRR0_type *) 0xf0061714u)	/* Error Tracking Register 1 */
#define MC7_ETRR2	(*( MC0_ETRR0_type *) 0xf0061716u)	/* Error Tracking Register 2 */
#define MC7_ETRR3	(*( MC0_ETRR0_type *) 0xf0061718u)	/* Error Tracking Register 3 */
#define MC7_ETRR4	(*( MC0_ETRR0_type *) 0xf006171au)	/* Error Tracking Register 4 */
#define MC80_ETRR0	(*( MC0_ETRR0_type *) 0xf0066012u)	/* Error Tracking Register 0 */
#define MC80_ETRR1	(*( MC0_ETRR0_type *) 0xf0066014u)	/* Error Tracking Register 1 */
#define MC80_ETRR2	(*( MC0_ETRR0_type *) 0xf0066016u)	/* Error Tracking Register 2 */
#define MC80_ETRR3	(*( MC0_ETRR0_type *) 0xf0066018u)	/* Error Tracking Register 3 */
#define MC80_ETRR4	(*( MC0_ETRR0_type *) 0xf006601au)	/* Error Tracking Register 4 */
#define MC81_ETRR0	(*( MC0_ETRR0_type *) 0xf0066112u)	/* Error Tracking Register 0 */
#define MC81_ETRR1	(*( MC0_ETRR0_type *) 0xf0066114u)	/* Error Tracking Register 1 */
#define MC81_ETRR2	(*( MC0_ETRR0_type *) 0xf0066116u)	/* Error Tracking Register 2 */
#define MC81_ETRR3	(*( MC0_ETRR0_type *) 0xf0066118u)	/* Error Tracking Register 3 */
#define MC81_ETRR4	(*( MC0_ETRR0_type *) 0xf006611au)	/* Error Tracking Register 4 */
#define MC82_ETRR0	(*( MC0_ETRR0_type *) 0xf0066212u)	/* Error Tracking Register 0 */
#define MC82_ETRR1	(*( MC0_ETRR0_type *) 0xf0066214u)	/* Error Tracking Register 1 */
#define MC82_ETRR2	(*( MC0_ETRR0_type *) 0xf0066216u)	/* Error Tracking Register 2 */
#define MC82_ETRR3	(*( MC0_ETRR0_type *) 0xf0066218u)	/* Error Tracking Register 3 */
#define MC82_ETRR4	(*( MC0_ETRR0_type *) 0xf006621au)	/* Error Tracking Register 4 */
#define MC83_ETRR0	(*( MC0_ETRR0_type *) 0xf0066312u)	/* Error Tracking Register 0 */
#define MC83_ETRR1	(*( MC0_ETRR0_type *) 0xf0066314u)	/* Error Tracking Register 1 */
#define MC83_ETRR2	(*( MC0_ETRR0_type *) 0xf0066316u)	/* Error Tracking Register 2 */
#define MC83_ETRR3	(*( MC0_ETRR0_type *) 0xf0066318u)	/* Error Tracking Register 3 */
#define MC83_ETRR4	(*( MC0_ETRR0_type *) 0xf006631au)	/* Error Tracking Register 4 */
#define MC84_ETRR0	(*( MC0_ETRR0_type *) 0xf0066412u)	/* Error Tracking Register 0 */
#define MC84_ETRR1	(*( MC0_ETRR0_type *) 0xf0066414u)	/* Error Tracking Register 1 */
#define MC84_ETRR2	(*( MC0_ETRR0_type *) 0xf0066416u)	/* Error Tracking Register 2 */
#define MC84_ETRR3	(*( MC0_ETRR0_type *) 0xf0066418u)	/* Error Tracking Register 3 */
#define MC84_ETRR4	(*( MC0_ETRR0_type *) 0xf006641au)	/* Error Tracking Register 4 */
#define MC85_ETRR0	(*( MC0_ETRR0_type *) 0xf0066512u)	/* Error Tracking Register 0 */
#define MC85_ETRR1	(*( MC0_ETRR0_type *) 0xf0066514u)	/* Error Tracking Register 1 */
#define MC85_ETRR2	(*( MC0_ETRR0_type *) 0xf0066516u)	/* Error Tracking Register 2 */
#define MC85_ETRR3	(*( MC0_ETRR0_type *) 0xf0066518u)	/* Error Tracking Register 3 */
#define MC85_ETRR4	(*( MC0_ETRR0_type *) 0xf006651au)	/* Error Tracking Register 4 */
#define MC86_ETRR0	(*( MC0_ETRR0_type *) 0xf0066612u)	/* Error Tracking Register 0 */
#define MC86_ETRR1	(*( MC0_ETRR0_type *) 0xf0066614u)	/* Error Tracking Register 1 */
#define MC86_ETRR2	(*( MC0_ETRR0_type *) 0xf0066616u)	/* Error Tracking Register 2 */
#define MC86_ETRR3	(*( MC0_ETRR0_type *) 0xf0066618u)	/* Error Tracking Register 3 */
#define MC86_ETRR4	(*( MC0_ETRR0_type *) 0xf006661au)	/* Error Tracking Register 4 */
#define MC87_ETRR0	(*( MC0_ETRR0_type *) 0xf0066712u)	/* Error Tracking Register 0 */
#define MC87_ETRR1	(*( MC0_ETRR0_type *) 0xf0066714u)	/* Error Tracking Register 1 */
#define MC87_ETRR2	(*( MC0_ETRR0_type *) 0xf0066716u)	/* Error Tracking Register 2 */
#define MC87_ETRR3	(*( MC0_ETRR0_type *) 0xf0066718u)	/* Error Tracking Register 3 */
#define MC87_ETRR4	(*( MC0_ETRR0_type *) 0xf006671au)	/* Error Tracking Register 4 */
#define MC8_ETRR0	(*( MC0_ETRR0_type *) 0xf0061812u)	/* Error Tracking Register 0 */
#define MC8_ETRR1	(*( MC0_ETRR0_type *) 0xf0061814u)	/* Error Tracking Register 1 */
#define MC8_ETRR2	(*( MC0_ETRR0_type *) 0xf0061816u)	/* Error Tracking Register 2 */
#define MC8_ETRR3	(*( MC0_ETRR0_type *) 0xf0061818u)	/* Error Tracking Register 3 */
#define MC8_ETRR4	(*( MC0_ETRR0_type *) 0xf006181au)	/* Error Tracking Register 4 */
#define MC9_ETRR0	(*( MC0_ETRR0_type *) 0xf0061912u)	/* Error Tracking Register 0 */
#define MC9_ETRR1	(*( MC0_ETRR0_type *) 0xf0061914u)	/* Error Tracking Register 1 */
#define MC9_ETRR2	(*( MC0_ETRR0_type *) 0xf0061916u)	/* Error Tracking Register 2 */
#define MC9_ETRR3	(*( MC0_ETRR0_type *) 0xf0061918u)	/* Error Tracking Register 3 */
#define MC9_ETRR4	(*( MC0_ETRR0_type *) 0xf006191au)	/* Error Tracking Register 4 */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit16 START          : 1;	/* START */
		unsigned __sfrbit16 RESUME         : 1;	/* Resume failed test */
		unsigned __sfrbit16 ESTF           : 1;	/* Enable Sticky Fail Bit */
		unsigned __sfrbit16 DIR            : 1;	/* Direction Select */
		unsigned __sfrbit16 DINIT          : 1;	/* Data Initialization Enable */
		unsigned __sfrbit16 RCADR          : 1;	/* Fast Row / Fast Column Addressing Scheme Select */
		unsigned __sfrbit16 ROWTOG         : 1;	/* Row toggling */
		unsigned __sfrbit16 BITTOG         : 1;	/* Bit toggling */
		unsigned __sfrbit16 GP_BASE        : 1;	/* Galpat Base */
		unsigned __sfrbit16 FAILDMP        : 1;	/* Fail bitmap dump */
		/* const */ unsigned __sfrbit16 Res            : 5;	/* Reserved */
		/* const */ unsigned __sfrbit16 Res_12         : 1;	/* Reserved */
	} B;
	short S;
	unsigned short US;

} MC0_MCONTROL_type;
#define MC0_MCONTROL	(*( MC0_MCONTROL_type *) 0xf0061004u)	/* MBIST Control Register */
#define MC10_MCONTROL	(*( MC0_MCONTROL_type *) 0xf0061a04u)	/* MBIST Control Register */
#define MC11_MCONTROL	(*( MC0_MCONTROL_type *) 0xf0061b04u)	/* MBIST Control Register */
#define MC12_MCONTROL	(*( MC0_MCONTROL_type *) 0xf0061c04u)	/* MBIST Control Register */
#define MC13_MCONTROL	(*( MC0_MCONTROL_type *) 0xf0061d04u)	/* MBIST Control Register */
#define MC14_MCONTROL	(*( MC0_MCONTROL_type *) 0xf0061e04u)	/* MBIST Control Register */
#define MC15_MCONTROL	(*( MC0_MCONTROL_type *) 0xf0061f04u)	/* MBIST Control Register */
#define MC16_MCONTROL	(*( MC0_MCONTROL_type *) 0xf0062004u)	/* MBIST Control Register */
#define MC17_MCONTROL	(*( MC0_MCONTROL_type *) 0xf0062104u)	/* MBIST Control Register */
#define MC18_MCONTROL	(*( MC0_MCONTROL_type *) 0xf0062204u)	/* MBIST Control Register */
#define MC19_MCONTROL	(*( MC0_MCONTROL_type *) 0xf0062304u)	/* MBIST Control Register */
#define MC1_MCONTROL	(*( MC0_MCONTROL_type *) 0xf0061104u)	/* MBIST Control Register */
#define MC20_MCONTROL	(*( MC0_MCONTROL_type *) 0xf0062404u)	/* MBIST Control Register */
#define MC21_MCONTROL	(*( MC0_MCONTROL_type *) 0xf0062504u)	/* MBIST Control Register */
#define MC22_MCONTROL	(*( MC0_MCONTROL_type *) 0xf0062604u)	/* MBIST Control Register */
#define MC23_MCONTROL	(*( MC0_MCONTROL_type *) 0xf0062704u)	/* MBIST Control Register */
#define MC24_MCONTROL	(*( MC0_MCONTROL_type *) 0xf0062804u)	/* MBIST Control Register */
#define MC25_MCONTROL	(*( MC0_MCONTROL_type *) 0xf0062904u)	/* MBIST Control Register */
#define MC26_MCONTROL	(*( MC0_MCONTROL_type *) 0xf0062a04u)	/* MBIST Control Register */
#define MC27_MCONTROL	(*( MC0_MCONTROL_type *) 0xf0062b04u)	/* MBIST Control Register */
#define MC28_MCONTROL	(*( MC0_MCONTROL_type *) 0xf0062c04u)	/* MBIST Control Register */
#define MC29_MCONTROL	(*( MC0_MCONTROL_type *) 0xf0062d04u)	/* MBIST Control Register */
#define MC2_MCONTROL	(*( MC0_MCONTROL_type *) 0xf0061204u)	/* MBIST Control Register */
#define MC30_MCONTROL	(*( MC0_MCONTROL_type *) 0xf0062e04u)	/* MBIST Control Register */
#define MC31_MCONTROL	(*( MC0_MCONTROL_type *) 0xf0062f04u)	/* MBIST Control Register */
#define MC32_MCONTROL	(*( MC0_MCONTROL_type *) 0xf0063004u)	/* MBIST Control Register */
#define MC33_MCONTROL	(*( MC0_MCONTROL_type *) 0xf0063104u)	/* MBIST Control Register */
#define MC34_MCONTROL	(*( MC0_MCONTROL_type *) 0xf0063204u)	/* MBIST Control Register */
#define MC35_MCONTROL	(*( MC0_MCONTROL_type *) 0xf0063304u)	/* MBIST Control Register */
#define MC36_MCONTROL	(*( MC0_MCONTROL_type *) 0xf0063404u)	/* MBIST Control Register */
#define MC37_MCONTROL	(*( MC0_MCONTROL_type *) 0xf0063504u)	/* MBIST Control Register */
#define MC38_MCONTROL	(*( MC0_MCONTROL_type *) 0xf0063604u)	/* MBIST Control Register */
#define MC39_MCONTROL	(*( MC0_MCONTROL_type *) 0xf0063704u)	/* MBIST Control Register */
#define MC3_MCONTROL	(*( MC0_MCONTROL_type *) 0xf0061304u)	/* MBIST Control Register */
#define MC40_MCONTROL	(*( MC0_MCONTROL_type *) 0xf0063804u)	/* MBIST Control Register */
#define MC41_MCONTROL	(*( MC0_MCONTROL_type *) 0xf0063904u)	/* MBIST Control Register */
#define MC42_MCONTROL	(*( MC0_MCONTROL_type *) 0xf0063a04u)	/* MBIST Control Register */
#define MC43_MCONTROL	(*( MC0_MCONTROL_type *) 0xf0063b04u)	/* MBIST Control Register */
#define MC44_MCONTROL	(*( MC0_MCONTROL_type *) 0xf0063c04u)	/* MBIST Control Register */
#define MC45_MCONTROL	(*( MC0_MCONTROL_type *) 0xf0063d04u)	/* MBIST Control Register */
#define MC46_MCONTROL	(*( MC0_MCONTROL_type *) 0xf0063e04u)	/* MBIST Control Register */
#define MC47_MCONTROL	(*( MC0_MCONTROL_type *) 0xf0063f04u)	/* MBIST Control Register */
#define MC48_MCONTROL	(*( MC0_MCONTROL_type *) 0xf0064004u)	/* MBIST Control Register */
#define MC49_MCONTROL	(*( MC0_MCONTROL_type *) 0xf0064104u)	/* MBIST Control Register */
#define MC4_MCONTROL	(*( MC0_MCONTROL_type *) 0xf0061404u)	/* MBIST Control Register */
#define MC50_MCONTROL	(*( MC0_MCONTROL_type *) 0xf0064204u)	/* MBIST Control Register */
#define MC51_MCONTROL	(*( MC0_MCONTROL_type *) 0xf0064304u)	/* MBIST Control Register */
#define MC52_MCONTROL	(*( MC0_MCONTROL_type *) 0xf0064404u)	/* MBIST Control Register */
#define MC53_MCONTROL	(*( MC0_MCONTROL_type *) 0xf0064504u)	/* MBIST Control Register */
#define MC54_MCONTROL	(*( MC0_MCONTROL_type *) 0xf0064604u)	/* MBIST Control Register */
#define MC55_MCONTROL	(*( MC0_MCONTROL_type *) 0xf0064704u)	/* MBIST Control Register */
#define MC56_MCONTROL	(*( MC0_MCONTROL_type *) 0xf0064804u)	/* MBIST Control Register */
#define MC57_MCONTROL	(*( MC0_MCONTROL_type *) 0xf0064904u)	/* MBIST Control Register */
#define MC58_MCONTROL	(*( MC0_MCONTROL_type *) 0xf0064a04u)	/* MBIST Control Register */
#define MC59_MCONTROL	(*( MC0_MCONTROL_type *) 0xf0064b04u)	/* MBIST Control Register */
#define MC5_MCONTROL	(*( MC0_MCONTROL_type *) 0xf0061504u)	/* MBIST Control Register */
#define MC60_MCONTROL	(*( MC0_MCONTROL_type *) 0xf0064c04u)	/* MBIST Control Register */
#define MC61_MCONTROL	(*( MC0_MCONTROL_type *) 0xf0064d04u)	/* MBIST Control Register */
#define MC62_MCONTROL	(*( MC0_MCONTROL_type *) 0xf0064e04u)	/* MBIST Control Register */
#define MC63_MCONTROL	(*( MC0_MCONTROL_type *) 0xf0064f04u)	/* MBIST Control Register */
#define MC64_MCONTROL	(*( MC0_MCONTROL_type *) 0xf0065004u)	/* MBIST Control Register */
#define MC65_MCONTROL	(*( MC0_MCONTROL_type *) 0xf0065104u)	/* MBIST Control Register */
#define MC66_MCONTROL	(*( MC0_MCONTROL_type *) 0xf0065204u)	/* MBIST Control Register */
#define MC67_MCONTROL	(*( MC0_MCONTROL_type *) 0xf0065304u)	/* MBIST Control Register */
#define MC68_MCONTROL	(*( MC0_MCONTROL_type *) 0xf0065404u)	/* MBIST Control Register */
#define MC69_MCONTROL	(*( MC0_MCONTROL_type *) 0xf0065504u)	/* MBIST Control Register */
#define MC6_MCONTROL	(*( MC0_MCONTROL_type *) 0xf0061604u)	/* MBIST Control Register */
#define MC70_MCONTROL	(*( MC0_MCONTROL_type *) 0xf0065604u)	/* MBIST Control Register */
#define MC71_MCONTROL	(*( MC0_MCONTROL_type *) 0xf0065704u)	/* MBIST Control Register */
#define MC72_MCONTROL	(*( MC0_MCONTROL_type *) 0xf0065804u)	/* MBIST Control Register */
#define MC73_MCONTROL	(*( MC0_MCONTROL_type *) 0xf0065904u)	/* MBIST Control Register */
#define MC74_MCONTROL	(*( MC0_MCONTROL_type *) 0xf0065a04u)	/* MBIST Control Register */
#define MC75_MCONTROL	(*( MC0_MCONTROL_type *) 0xf0065b04u)	/* MBIST Control Register */
#define MC76_MCONTROL	(*( MC0_MCONTROL_type *) 0xf0065c04u)	/* MBIST Control Register */
#define MC77_MCONTROL	(*( MC0_MCONTROL_type *) 0xf0065d04u)	/* MBIST Control Register */
#define MC78_MCONTROL	(*( MC0_MCONTROL_type *) 0xf0065e04u)	/* MBIST Control Register */
#define MC79_MCONTROL	(*( MC0_MCONTROL_type *) 0xf0065f04u)	/* MBIST Control Register */
#define MC7_MCONTROL	(*( MC0_MCONTROL_type *) 0xf0061704u)	/* MBIST Control Register */
#define MC80_MCONTROL	(*( MC0_MCONTROL_type *) 0xf0066004u)	/* MBIST Control Register */
#define MC81_MCONTROL	(*( MC0_MCONTROL_type *) 0xf0066104u)	/* MBIST Control Register */
#define MC82_MCONTROL	(*( MC0_MCONTROL_type *) 0xf0066204u)	/* MBIST Control Register */
#define MC83_MCONTROL	(*( MC0_MCONTROL_type *) 0xf0066304u)	/* MBIST Control Register */
#define MC84_MCONTROL	(*( MC0_MCONTROL_type *) 0xf0066404u)	/* MBIST Control Register */
#define MC85_MCONTROL	(*( MC0_MCONTROL_type *) 0xf0066504u)	/* MBIST Control Register */
#define MC86_MCONTROL	(*( MC0_MCONTROL_type *) 0xf0066604u)	/* MBIST Control Register */
#define MC87_MCONTROL	(*( MC0_MCONTROL_type *) 0xf0066704u)	/* MBIST Control Register */
#define MC8_MCONTROL	(*( MC0_MCONTROL_type *) 0xf0061804u)	/* MBIST Control Register */
#define MC9_MCONTROL	(*( MC0_MCONTROL_type *) 0xf0061904u)	/* MBIST Control Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned __sfrbit16 DONE           : 1;	/* DONE */
		/* const */ unsigned __sfrbit16 FAIL           : 1;	/* FAIL */
		/* const */ unsigned __sfrbit16 FDA            : 1;	/* Fail Dump Available */
		/* const */ unsigned __sfrbit16 SFAIL          : 1;	/* Sticky Fail Bit */
		/* const */ unsigned __sfrbit16 Res            : 12;	/* Reserved */
	} B;
	short S;
	unsigned short US;

} MC0_MSTATUS_type;
#define MC0_MSTATUS	(*( MC0_MSTATUS_type *) 0xf0061006u)	/* Status Register */
#define MC10_MSTATUS	(*( MC0_MSTATUS_type *) 0xf0061a06u)	/* Status Register */
#define MC11_MSTATUS	(*( MC0_MSTATUS_type *) 0xf0061b06u)	/* Status Register */
#define MC12_MSTATUS	(*( MC0_MSTATUS_type *) 0xf0061c06u)	/* Status Register */
#define MC13_MSTATUS	(*( MC0_MSTATUS_type *) 0xf0061d06u)	/* Status Register */
#define MC14_MSTATUS	(*( MC0_MSTATUS_type *) 0xf0061e06u)	/* Status Register */
#define MC15_MSTATUS	(*( MC0_MSTATUS_type *) 0xf0061f06u)	/* Status Register */
#define MC16_MSTATUS	(*( MC0_MSTATUS_type *) 0xf0062006u)	/* Status Register */
#define MC17_MSTATUS	(*( MC0_MSTATUS_type *) 0xf0062106u)	/* Status Register */
#define MC18_MSTATUS	(*( MC0_MSTATUS_type *) 0xf0062206u)	/* Status Register */
#define MC19_MSTATUS	(*( MC0_MSTATUS_type *) 0xf0062306u)	/* Status Register */
#define MC1_MSTATUS	(*( MC0_MSTATUS_type *) 0xf0061106u)	/* Status Register */
#define MC20_MSTATUS	(*( MC0_MSTATUS_type *) 0xf0062406u)	/* Status Register */
#define MC21_MSTATUS	(*( MC0_MSTATUS_type *) 0xf0062506u)	/* Status Register */
#define MC22_MSTATUS	(*( MC0_MSTATUS_type *) 0xf0062606u)	/* Status Register */
#define MC23_MSTATUS	(*( MC0_MSTATUS_type *) 0xf0062706u)	/* Status Register */
#define MC24_MSTATUS	(*( MC0_MSTATUS_type *) 0xf0062806u)	/* Status Register */
#define MC25_MSTATUS	(*( MC0_MSTATUS_type *) 0xf0062906u)	/* Status Register */
#define MC26_MSTATUS	(*( MC0_MSTATUS_type *) 0xf0062a06u)	/* Status Register */
#define MC27_MSTATUS	(*( MC0_MSTATUS_type *) 0xf0062b06u)	/* Status Register */
#define MC28_MSTATUS	(*( MC0_MSTATUS_type *) 0xf0062c06u)	/* Status Register */
#define MC29_MSTATUS	(*( MC0_MSTATUS_type *) 0xf0062d06u)	/* Status Register */
#define MC2_MSTATUS	(*( MC0_MSTATUS_type *) 0xf0061206u)	/* Status Register */
#define MC30_MSTATUS	(*( MC0_MSTATUS_type *) 0xf0062e06u)	/* Status Register */
#define MC31_MSTATUS	(*( MC0_MSTATUS_type *) 0xf0062f06u)	/* Status Register */
#define MC32_MSTATUS	(*( MC0_MSTATUS_type *) 0xf0063006u)	/* Status Register */
#define MC33_MSTATUS	(*( MC0_MSTATUS_type *) 0xf0063106u)	/* Status Register */
#define MC34_MSTATUS	(*( MC0_MSTATUS_type *) 0xf0063206u)	/* Status Register */
#define MC35_MSTATUS	(*( MC0_MSTATUS_type *) 0xf0063306u)	/* Status Register */
#define MC36_MSTATUS	(*( MC0_MSTATUS_type *) 0xf0063406u)	/* Status Register */
#define MC37_MSTATUS	(*( MC0_MSTATUS_type *) 0xf0063506u)	/* Status Register */
#define MC38_MSTATUS	(*( MC0_MSTATUS_type *) 0xf0063606u)	/* Status Register */
#define MC39_MSTATUS	(*( MC0_MSTATUS_type *) 0xf0063706u)	/* Status Register */
#define MC3_MSTATUS	(*( MC0_MSTATUS_type *) 0xf0061306u)	/* Status Register */
#define MC40_MSTATUS	(*( MC0_MSTATUS_type *) 0xf0063806u)	/* Status Register */
#define MC41_MSTATUS	(*( MC0_MSTATUS_type *) 0xf0063906u)	/* Status Register */
#define MC42_MSTATUS	(*( MC0_MSTATUS_type *) 0xf0063a06u)	/* Status Register */
#define MC43_MSTATUS	(*( MC0_MSTATUS_type *) 0xf0063b06u)	/* Status Register */
#define MC44_MSTATUS	(*( MC0_MSTATUS_type *) 0xf0063c06u)	/* Status Register */
#define MC45_MSTATUS	(*( MC0_MSTATUS_type *) 0xf0063d06u)	/* Status Register */
#define MC46_MSTATUS	(*( MC0_MSTATUS_type *) 0xf0063e06u)	/* Status Register */
#define MC47_MSTATUS	(*( MC0_MSTATUS_type *) 0xf0063f06u)	/* Status Register */
#define MC48_MSTATUS	(*( MC0_MSTATUS_type *) 0xf0064006u)	/* Status Register */
#define MC49_MSTATUS	(*( MC0_MSTATUS_type *) 0xf0064106u)	/* Status Register */
#define MC4_MSTATUS	(*( MC0_MSTATUS_type *) 0xf0061406u)	/* Status Register */
#define MC50_MSTATUS	(*( MC0_MSTATUS_type *) 0xf0064206u)	/* Status Register */
#define MC51_MSTATUS	(*( MC0_MSTATUS_type *) 0xf0064306u)	/* Status Register */
#define MC52_MSTATUS	(*( MC0_MSTATUS_type *) 0xf0064406u)	/* Status Register */
#define MC53_MSTATUS	(*( MC0_MSTATUS_type *) 0xf0064506u)	/* Status Register */
#define MC54_MSTATUS	(*( MC0_MSTATUS_type *) 0xf0064606u)	/* Status Register */
#define MC55_MSTATUS	(*( MC0_MSTATUS_type *) 0xf0064706u)	/* Status Register */
#define MC56_MSTATUS	(*( MC0_MSTATUS_type *) 0xf0064806u)	/* Status Register */
#define MC57_MSTATUS	(*( MC0_MSTATUS_type *) 0xf0064906u)	/* Status Register */
#define MC58_MSTATUS	(*( MC0_MSTATUS_type *) 0xf0064a06u)	/* Status Register */
#define MC59_MSTATUS	(*( MC0_MSTATUS_type *) 0xf0064b06u)	/* Status Register */
#define MC5_MSTATUS	(*( MC0_MSTATUS_type *) 0xf0061506u)	/* Status Register */
#define MC60_MSTATUS	(*( MC0_MSTATUS_type *) 0xf0064c06u)	/* Status Register */
#define MC61_MSTATUS	(*( MC0_MSTATUS_type *) 0xf0064d06u)	/* Status Register */
#define MC62_MSTATUS	(*( MC0_MSTATUS_type *) 0xf0064e06u)	/* Status Register */
#define MC63_MSTATUS	(*( MC0_MSTATUS_type *) 0xf0064f06u)	/* Status Register */
#define MC64_MSTATUS	(*( MC0_MSTATUS_type *) 0xf0065006u)	/* Status Register */
#define MC65_MSTATUS	(*( MC0_MSTATUS_type *) 0xf0065106u)	/* Status Register */
#define MC66_MSTATUS	(*( MC0_MSTATUS_type *) 0xf0065206u)	/* Status Register */
#define MC67_MSTATUS	(*( MC0_MSTATUS_type *) 0xf0065306u)	/* Status Register */
#define MC68_MSTATUS	(*( MC0_MSTATUS_type *) 0xf0065406u)	/* Status Register */
#define MC69_MSTATUS	(*( MC0_MSTATUS_type *) 0xf0065506u)	/* Status Register */
#define MC6_MSTATUS	(*( MC0_MSTATUS_type *) 0xf0061606u)	/* Status Register */
#define MC70_MSTATUS	(*( MC0_MSTATUS_type *) 0xf0065606u)	/* Status Register */
#define MC71_MSTATUS	(*( MC0_MSTATUS_type *) 0xf0065706u)	/* Status Register */
#define MC72_MSTATUS	(*( MC0_MSTATUS_type *) 0xf0065806u)	/* Status Register */
#define MC73_MSTATUS	(*( MC0_MSTATUS_type *) 0xf0065906u)	/* Status Register */
#define MC74_MSTATUS	(*( MC0_MSTATUS_type *) 0xf0065a06u)	/* Status Register */
#define MC75_MSTATUS	(*( MC0_MSTATUS_type *) 0xf0065b06u)	/* Status Register */
#define MC76_MSTATUS	(*( MC0_MSTATUS_type *) 0xf0065c06u)	/* Status Register */
#define MC77_MSTATUS	(*( MC0_MSTATUS_type *) 0xf0065d06u)	/* Status Register */
#define MC78_MSTATUS	(*( MC0_MSTATUS_type *) 0xf0065e06u)	/* Status Register */
#define MC79_MSTATUS	(*( MC0_MSTATUS_type *) 0xf0065f06u)	/* Status Register */
#define MC7_MSTATUS	(*( MC0_MSTATUS_type *) 0xf0061706u)	/* Status Register */
#define MC80_MSTATUS	(*( MC0_MSTATUS_type *) 0xf0066006u)	/* Status Register */
#define MC81_MSTATUS	(*( MC0_MSTATUS_type *) 0xf0066106u)	/* Status Register */
#define MC82_MSTATUS	(*( MC0_MSTATUS_type *) 0xf0066206u)	/* Status Register */
#define MC83_MSTATUS	(*( MC0_MSTATUS_type *) 0xf0066306u)	/* Status Register */
#define MC84_MSTATUS	(*( MC0_MSTATUS_type *) 0xf0066406u)	/* Status Register */
#define MC85_MSTATUS	(*( MC0_MSTATUS_type *) 0xf0066506u)	/* Status Register */
#define MC86_MSTATUS	(*( MC0_MSTATUS_type *) 0xf0066606u)	/* Status Register */
#define MC87_MSTATUS	(*( MC0_MSTATUS_type *) 0xf0066706u)	/* Status Register */
#define MC8_MSTATUS	(*( MC0_MSTATUS_type *) 0xf0061806u)	/* Status Register */
#define MC9_MSTATUS	(*( MC0_MSTATUS_type *) 0xf0061906u)	/* Status Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit16 ADDR           : 15;	/* Address */
		unsigned __sfrbit16 RAEN           : 1;	/* Range Enable */
	} B;
	short S;
	unsigned short US;

} MC0_RANGE_type;
#define MC0_RANGE	(*( MC0_RANGE_type *) 0xf0061008u)	/* Range Register, single address mode */
#define MC10_RANGE	(*( MC0_RANGE_type *) 0xf0061a08u)	/* Range Register, single address mode */
#define MC11_RANGE	(*( MC0_RANGE_type *) 0xf0061b08u)	/* Range Register, single address mode */
#define MC12_RANGE	(*( MC0_RANGE_type *) 0xf0061c08u)	/* Range Register, single address mode */
#define MC13_RANGE	(*( MC0_RANGE_type *) 0xf0061d08u)	/* Range Register, single address mode */
#define MC14_RANGE	(*( MC0_RANGE_type *) 0xf0061e08u)	/* Range Register, single address mode */
#define MC15_RANGE	(*( MC0_RANGE_type *) 0xf0061f08u)	/* Range Register, single address mode */
#define MC16_RANGE	(*( MC0_RANGE_type *) 0xf0062008u)	/* Range Register, single address mode */
#define MC17_RANGE	(*( MC0_RANGE_type *) 0xf0062108u)	/* Range Register, single address mode */
#define MC18_RANGE	(*( MC0_RANGE_type *) 0xf0062208u)	/* Range Register, single address mode */
#define MC19_RANGE	(*( MC0_RANGE_type *) 0xf0062308u)	/* Range Register, single address mode */
#define MC1_RANGE	(*( MC0_RANGE_type *) 0xf0061108u)	/* Range Register, single address mode */
#define MC20_RANGE	(*( MC0_RANGE_type *) 0xf0062408u)	/* Range Register, single address mode */
#define MC21_RANGE	(*( MC0_RANGE_type *) 0xf0062508u)	/* Range Register, single address mode */
#define MC22_RANGE	(*( MC0_RANGE_type *) 0xf0062608u)	/* Range Register, single address mode */
#define MC23_RANGE	(*( MC0_RANGE_type *) 0xf0062708u)	/* Range Register, single address mode */
#define MC24_RANGE	(*( MC0_RANGE_type *) 0xf0062808u)	/* Range Register, single address mode */
#define MC25_RANGE	(*( MC0_RANGE_type *) 0xf0062908u)	/* Range Register, single address mode */
#define MC26_RANGE	(*( MC0_RANGE_type *) 0xf0062a08u)	/* Range Register, single address mode */
#define MC27_RANGE	(*( MC0_RANGE_type *) 0xf0062b08u)	/* Range Register, single address mode */
#define MC28_RANGE	(*( MC0_RANGE_type *) 0xf0062c08u)	/* Range Register, single address mode */
#define MC29_RANGE	(*( MC0_RANGE_type *) 0xf0062d08u)	/* Range Register, single address mode */
#define MC2_RANGE	(*( MC0_RANGE_type *) 0xf0061208u)	/* Range Register, single address mode */
#define MC30_RANGE	(*( MC0_RANGE_type *) 0xf0062e08u)	/* Range Register, single address mode */
#define MC31_RANGE	(*( MC0_RANGE_type *) 0xf0062f08u)	/* Range Register, single address mode */
#define MC32_RANGE	(*( MC0_RANGE_type *) 0xf0063008u)	/* Range Register, single address mode */
#define MC33_RANGE	(*( MC0_RANGE_type *) 0xf0063108u)	/* Range Register, single address mode */
#define MC34_RANGE	(*( MC0_RANGE_type *) 0xf0063208u)	/* Range Register, single address mode */
#define MC35_RANGE	(*( MC0_RANGE_type *) 0xf0063308u)	/* Range Register, single address mode */
#define MC36_RANGE	(*( MC0_RANGE_type *) 0xf0063408u)	/* Range Register, single address mode */
#define MC37_RANGE	(*( MC0_RANGE_type *) 0xf0063508u)	/* Range Register, single address mode */
#define MC38_RANGE	(*( MC0_RANGE_type *) 0xf0063608u)	/* Range Register, single address mode */
#define MC39_RANGE	(*( MC0_RANGE_type *) 0xf0063708u)	/* Range Register, single address mode */
#define MC3_RANGE	(*( MC0_RANGE_type *) 0xf0061308u)	/* Range Register, single address mode */
#define MC40_RANGE	(*( MC0_RANGE_type *) 0xf0063808u)	/* Range Register, single address mode */
#define MC41_RANGE	(*( MC0_RANGE_type *) 0xf0063908u)	/* Range Register, single address mode */
#define MC42_RANGE	(*( MC0_RANGE_type *) 0xf0063a08u)	/* Range Register, single address mode */
#define MC43_RANGE	(*( MC0_RANGE_type *) 0xf0063b08u)	/* Range Register, single address mode */
#define MC44_RANGE	(*( MC0_RANGE_type *) 0xf0063c08u)	/* Range Register, single address mode */
#define MC45_RANGE	(*( MC0_RANGE_type *) 0xf0063d08u)	/* Range Register, single address mode */
#define MC46_RANGE	(*( MC0_RANGE_type *) 0xf0063e08u)	/* Range Register, single address mode */
#define MC47_RANGE	(*( MC0_RANGE_type *) 0xf0063f08u)	/* Range Register, single address mode */
#define MC48_RANGE	(*( MC0_RANGE_type *) 0xf0064008u)	/* Range Register, single address mode */
#define MC49_RANGE	(*( MC0_RANGE_type *) 0xf0064108u)	/* Range Register, single address mode */
#define MC4_RANGE	(*( MC0_RANGE_type *) 0xf0061408u)	/* Range Register, single address mode */
#define MC50_RANGE	(*( MC0_RANGE_type *) 0xf0064208u)	/* Range Register, single address mode */
#define MC51_RANGE	(*( MC0_RANGE_type *) 0xf0064308u)	/* Range Register, single address mode */
#define MC52_RANGE	(*( MC0_RANGE_type *) 0xf0064408u)	/* Range Register, single address mode */
#define MC53_RANGE	(*( MC0_RANGE_type *) 0xf0064508u)	/* Range Register, single address mode */
#define MC54_RANGE	(*( MC0_RANGE_type *) 0xf0064608u)	/* Range Register, single address mode */
#define MC55_RANGE	(*( MC0_RANGE_type *) 0xf0064708u)	/* Range Register, single address mode */
#define MC56_RANGE	(*( MC0_RANGE_type *) 0xf0064808u)	/* Range Register, single address mode */
#define MC57_RANGE	(*( MC0_RANGE_type *) 0xf0064908u)	/* Range Register, single address mode */
#define MC58_RANGE	(*( MC0_RANGE_type *) 0xf0064a08u)	/* Range Register, single address mode */
#define MC59_RANGE	(*( MC0_RANGE_type *) 0xf0064b08u)	/* Range Register, single address mode */
#define MC5_RANGE	(*( MC0_RANGE_type *) 0xf0061508u)	/* Range Register, single address mode */
#define MC60_RANGE	(*( MC0_RANGE_type *) 0xf0064c08u)	/* Range Register, single address mode */
#define MC61_RANGE	(*( MC0_RANGE_type *) 0xf0064d08u)	/* Range Register, single address mode */
#define MC62_RANGE	(*( MC0_RANGE_type *) 0xf0064e08u)	/* Range Register, single address mode */
#define MC63_RANGE	(*( MC0_RANGE_type *) 0xf0064f08u)	/* Range Register, single address mode */
#define MC64_RANGE	(*( MC0_RANGE_type *) 0xf0065008u)	/* Range Register, single address mode */
#define MC65_RANGE	(*( MC0_RANGE_type *) 0xf0065108u)	/* Range Register, single address mode */
#define MC66_RANGE	(*( MC0_RANGE_type *) 0xf0065208u)	/* Range Register, single address mode */
#define MC67_RANGE	(*( MC0_RANGE_type *) 0xf0065308u)	/* Range Register, single address mode */
#define MC68_RANGE	(*( MC0_RANGE_type *) 0xf0065408u)	/* Range Register, single address mode */
#define MC69_RANGE	(*( MC0_RANGE_type *) 0xf0065508u)	/* Range Register, single address mode */
#define MC6_RANGE	(*( MC0_RANGE_type *) 0xf0061608u)	/* Range Register, single address mode */
#define MC70_RANGE	(*( MC0_RANGE_type *) 0xf0065608u)	/* Range Register, single address mode */
#define MC71_RANGE	(*( MC0_RANGE_type *) 0xf0065708u)	/* Range Register, single address mode */
#define MC72_RANGE	(*( MC0_RANGE_type *) 0xf0065808u)	/* Range Register, single address mode */
#define MC73_RANGE	(*( MC0_RANGE_type *) 0xf0065908u)	/* Range Register, single address mode */
#define MC74_RANGE	(*( MC0_RANGE_type *) 0xf0065a08u)	/* Range Register, single address mode */
#define MC75_RANGE	(*( MC0_RANGE_type *) 0xf0065b08u)	/* Range Register, single address mode */
#define MC76_RANGE	(*( MC0_RANGE_type *) 0xf0065c08u)	/* Range Register, single address mode */
#define MC77_RANGE	(*( MC0_RANGE_type *) 0xf0065d08u)	/* Range Register, single address mode */
#define MC78_RANGE	(*( MC0_RANGE_type *) 0xf0065e08u)	/* Range Register, single address mode */
#define MC79_RANGE	(*( MC0_RANGE_type *) 0xf0065f08u)	/* Range Register, single address mode */
#define MC7_RANGE	(*( MC0_RANGE_type *) 0xf0061708u)	/* Range Register, single address mode */
#define MC80_RANGE	(*( MC0_RANGE_type *) 0xf0066008u)	/* Range Register, single address mode */
#define MC81_RANGE	(*( MC0_RANGE_type *) 0xf0066108u)	/* Range Register, single address mode */
#define MC82_RANGE	(*( MC0_RANGE_type *) 0xf0066208u)	/* Range Register, single address mode */
#define MC83_RANGE	(*( MC0_RANGE_type *) 0xf0066308u)	/* Range Register, single address mode */
#define MC84_RANGE	(*( MC0_RANGE_type *) 0xf0066408u)	/* Range Register, single address mode */
#define MC85_RANGE	(*( MC0_RANGE_type *) 0xf0066508u)	/* Range Register, single address mode */
#define MC86_RANGE	(*( MC0_RANGE_type *) 0xf0066608u)	/* Range Register, single address mode */
#define MC87_RANGE	(*( MC0_RANGE_type *) 0xf0066708u)	/* Range Register, single address mode */
#define MC8_RANGE	(*( MC0_RANGE_type *) 0xf0061808u)	/* Range Register, single address mode */
#define MC9_RANGE	(*( MC0_RANGE_type *) 0xf0061908u)	/* Range Register, single address mode */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit16 WDATA          : 16;	/* Word Data */
	} B;
	short S;
	unsigned short US;

} MC0_RDBFL0_type;
#define MC0_RDBFL0	(*( MC0_RDBFL0_type *) 0xf00610a0u)	/* Read Data and Bit Flip Register 0 */
#define MC0_RDBFL1	(*( MC0_RDBFL0_type *) 0xf00610a2u)	/* Read Data and Bit Flip Register 1 */
#define MC0_RDBFL10	(*( MC0_RDBFL0_type *) 0xf00610b4u)	/* Read Data and Bit Flip Register 10 */
#define MC0_RDBFL11	(*( MC0_RDBFL0_type *) 0xf00610b6u)	/* Read Data and Bit Flip Register 11 */
#define MC0_RDBFL12	(*( MC0_RDBFL0_type *) 0xf00610b8u)	/* Read Data and Bit Flip Register 12 */
#define MC0_RDBFL13	(*( MC0_RDBFL0_type *) 0xf00610bau)	/* Read Data and Bit Flip Register 13 */
#define MC0_RDBFL14	(*( MC0_RDBFL0_type *) 0xf00610bcu)	/* Read Data and Bit Flip Register 14 */
#define MC0_RDBFL15	(*( MC0_RDBFL0_type *) 0xf00610beu)	/* Read Data and Bit Flip Register 15 */
#define MC0_RDBFL16	(*( MC0_RDBFL0_type *) 0xf00610c0u)	/* Read Data and Bit Flip Register 16 */
#define MC0_RDBFL17	(*( MC0_RDBFL0_type *) 0xf00610c2u)	/* Read Data and Bit Flip Register 17 */
#define MC0_RDBFL18	(*( MC0_RDBFL0_type *) 0xf00610c4u)	/* Read Data and Bit Flip Register 18 */
#define MC0_RDBFL19	(*( MC0_RDBFL0_type *) 0xf00610c6u)	/* Read Data and Bit Flip Register 19 */
#define MC0_RDBFL2	(*( MC0_RDBFL0_type *) 0xf00610a4u)	/* Read Data and Bit Flip Register 2 */
#define MC0_RDBFL20	(*( MC0_RDBFL0_type *) 0xf00610c8u)	/* Read Data and Bit Flip Register 20 */
#define MC0_RDBFL21	(*( MC0_RDBFL0_type *) 0xf00610cau)	/* Read Data and Bit Flip Register 21 */
#define MC0_RDBFL22	(*( MC0_RDBFL0_type *) 0xf00610ccu)	/* Read Data and Bit Flip Register 22 */
#define MC0_RDBFL23	(*( MC0_RDBFL0_type *) 0xf00610ceu)	/* Read Data and Bit Flip Register 23 */
#define MC0_RDBFL24	(*( MC0_RDBFL0_type *) 0xf00610d0u)	/* Read Data and Bit Flip Register 24 */
#define MC0_RDBFL25	(*( MC0_RDBFL0_type *) 0xf00610d2u)	/* Read Data and Bit Flip Register 25 */
#define MC0_RDBFL26	(*( MC0_RDBFL0_type *) 0xf00610d4u)	/* Read Data and Bit Flip Register 26 */
#define MC0_RDBFL27	(*( MC0_RDBFL0_type *) 0xf00610d6u)	/* Read Data and Bit Flip Register 27 */
#define MC0_RDBFL28	(*( MC0_RDBFL0_type *) 0xf00610d8u)	/* Read Data and Bit Flip Register 28 */
#define MC0_RDBFL29	(*( MC0_RDBFL0_type *) 0xf00610dau)	/* Read Data and Bit Flip Register 29 */
#define MC0_RDBFL3	(*( MC0_RDBFL0_type *) 0xf00610a6u)	/* Read Data and Bit Flip Register 3 */
#define MC0_RDBFL30	(*( MC0_RDBFL0_type *) 0xf00610dcu)	/* Read Data and Bit Flip Register 30 */
#define MC0_RDBFL31	(*( MC0_RDBFL0_type *) 0xf00610deu)	/* Read Data and Bit Flip Register 31 */
#define MC0_RDBFL32	(*( MC0_RDBFL0_type *) 0xf00610e0u)	/* Read Data and Bit Flip Register 32 */
#define MC0_RDBFL33	(*( MC0_RDBFL0_type *) 0xf00610e2u)	/* Read Data and Bit Flip Register 33 */
#define MC0_RDBFL34	(*( MC0_RDBFL0_type *) 0xf00610e4u)	/* Read Data and Bit Flip Register 34 */
#define MC0_RDBFL35	(*( MC0_RDBFL0_type *) 0xf00610e6u)	/* Read Data and Bit Flip Register 35 */
#define MC0_RDBFL36	(*( MC0_RDBFL0_type *) 0xf00610e8u)	/* Read Data and Bit Flip Register 36 */
#define MC0_RDBFL37	(*( MC0_RDBFL0_type *) 0xf00610eau)	/* Read Data and Bit Flip Register 37 */
#define MC0_RDBFL38	(*( MC0_RDBFL0_type *) 0xf00610ecu)	/* Read Data and Bit Flip Register 38 */
#define MC0_RDBFL39	(*( MC0_RDBFL0_type *) 0xf00610eeu)	/* Read Data and Bit Flip Register 39 */
#define MC0_RDBFL4	(*( MC0_RDBFL0_type *) 0xf00610a8u)	/* Read Data and Bit Flip Register 4 */
#define MC0_RDBFL5	(*( MC0_RDBFL0_type *) 0xf00610aau)	/* Read Data and Bit Flip Register 5 */
#define MC0_RDBFL6	(*( MC0_RDBFL0_type *) 0xf00610acu)	/* Read Data and Bit Flip Register 6 */
#define MC0_RDBFL7	(*( MC0_RDBFL0_type *) 0xf00610aeu)	/* Read Data and Bit Flip Register 7 */
#define MC0_RDBFL8	(*( MC0_RDBFL0_type *) 0xf00610b0u)	/* Read Data and Bit Flip Register 8 */
#define MC0_RDBFL9	(*( MC0_RDBFL0_type *) 0xf00610b2u)	/* Read Data and Bit Flip Register 9 */
#define MC10_RDBFL0	(*( MC0_RDBFL0_type *) 0xf0061aa0u)	/* Read Data and Bit Flip Register 0 */
#define MC10_RDBFL1	(*( MC0_RDBFL0_type *) 0xf0061aa2u)	/* Read Data and Bit Flip Register 1 */
#define MC10_RDBFL10	(*( MC0_RDBFL0_type *) 0xf0061ab4u)	/* Read Data and Bit Flip Register 10 */
#define MC10_RDBFL11	(*( MC0_RDBFL0_type *) 0xf0061ab6u)	/* Read Data and Bit Flip Register 11 */
#define MC10_RDBFL12	(*( MC0_RDBFL0_type *) 0xf0061ab8u)	/* Read Data and Bit Flip Register 12 */
#define MC10_RDBFL13	(*( MC0_RDBFL0_type *) 0xf0061abau)	/* Read Data and Bit Flip Register 13 */
#define MC10_RDBFL14	(*( MC0_RDBFL0_type *) 0xf0061abcu)	/* Read Data and Bit Flip Register 14 */
#define MC10_RDBFL15	(*( MC0_RDBFL0_type *) 0xf0061abeu)	/* Read Data and Bit Flip Register 15 */
#define MC10_RDBFL16	(*( MC0_RDBFL0_type *) 0xf0061ac0u)	/* Read Data and Bit Flip Register 16 */
#define MC10_RDBFL17	(*( MC0_RDBFL0_type *) 0xf0061ac2u)	/* Read Data and Bit Flip Register 17 */
#define MC10_RDBFL18	(*( MC0_RDBFL0_type *) 0xf0061ac4u)	/* Read Data and Bit Flip Register 18 */
#define MC10_RDBFL19	(*( MC0_RDBFL0_type *) 0xf0061ac6u)	/* Read Data and Bit Flip Register 19 */
#define MC10_RDBFL2	(*( MC0_RDBFL0_type *) 0xf0061aa4u)	/* Read Data and Bit Flip Register 2 */
#define MC10_RDBFL20	(*( MC0_RDBFL0_type *) 0xf0061ac8u)	/* Read Data and Bit Flip Register 20 */
#define MC10_RDBFL21	(*( MC0_RDBFL0_type *) 0xf0061acau)	/* Read Data and Bit Flip Register 21 */
#define MC10_RDBFL22	(*( MC0_RDBFL0_type *) 0xf0061accu)	/* Read Data and Bit Flip Register 22 */
#define MC10_RDBFL23	(*( MC0_RDBFL0_type *) 0xf0061aceu)	/* Read Data and Bit Flip Register 23 */
#define MC10_RDBFL24	(*( MC0_RDBFL0_type *) 0xf0061ad0u)	/* Read Data and Bit Flip Register 24 */
#define MC10_RDBFL25	(*( MC0_RDBFL0_type *) 0xf0061ad2u)	/* Read Data and Bit Flip Register 25 */
#define MC10_RDBFL26	(*( MC0_RDBFL0_type *) 0xf0061ad4u)	/* Read Data and Bit Flip Register 26 */
#define MC10_RDBFL27	(*( MC0_RDBFL0_type *) 0xf0061ad6u)	/* Read Data and Bit Flip Register 27 */
#define MC10_RDBFL28	(*( MC0_RDBFL0_type *) 0xf0061ad8u)	/* Read Data and Bit Flip Register 28 */
#define MC10_RDBFL29	(*( MC0_RDBFL0_type *) 0xf0061adau)	/* Read Data and Bit Flip Register 29 */
#define MC10_RDBFL3	(*( MC0_RDBFL0_type *) 0xf0061aa6u)	/* Read Data and Bit Flip Register 3 */
#define MC10_RDBFL30	(*( MC0_RDBFL0_type *) 0xf0061adcu)	/* Read Data and Bit Flip Register 30 */
#define MC10_RDBFL31	(*( MC0_RDBFL0_type *) 0xf0061adeu)	/* Read Data and Bit Flip Register 31 */
#define MC10_RDBFL32	(*( MC0_RDBFL0_type *) 0xf0061ae0u)	/* Read Data and Bit Flip Register 32 */
#define MC10_RDBFL33	(*( MC0_RDBFL0_type *) 0xf0061ae2u)	/* Read Data and Bit Flip Register 33 */
#define MC10_RDBFL34	(*( MC0_RDBFL0_type *) 0xf0061ae4u)	/* Read Data and Bit Flip Register 34 */
#define MC10_RDBFL35	(*( MC0_RDBFL0_type *) 0xf0061ae6u)	/* Read Data and Bit Flip Register 35 */
#define MC10_RDBFL36	(*( MC0_RDBFL0_type *) 0xf0061ae8u)	/* Read Data and Bit Flip Register 36 */
#define MC10_RDBFL37	(*( MC0_RDBFL0_type *) 0xf0061aeau)	/* Read Data and Bit Flip Register 37 */
#define MC10_RDBFL38	(*( MC0_RDBFL0_type *) 0xf0061aecu)	/* Read Data and Bit Flip Register 38 */
#define MC10_RDBFL39	(*( MC0_RDBFL0_type *) 0xf0061aeeu)	/* Read Data and Bit Flip Register 39 */
#define MC10_RDBFL4	(*( MC0_RDBFL0_type *) 0xf0061aa8u)	/* Read Data and Bit Flip Register 4 */
#define MC10_RDBFL5	(*( MC0_RDBFL0_type *) 0xf0061aaau)	/* Read Data and Bit Flip Register 5 */
#define MC10_RDBFL6	(*( MC0_RDBFL0_type *) 0xf0061aacu)	/* Read Data and Bit Flip Register 6 */
#define MC10_RDBFL7	(*( MC0_RDBFL0_type *) 0xf0061aaeu)	/* Read Data and Bit Flip Register 7 */
#define MC10_RDBFL8	(*( MC0_RDBFL0_type *) 0xf0061ab0u)	/* Read Data and Bit Flip Register 8 */
#define MC10_RDBFL9	(*( MC0_RDBFL0_type *) 0xf0061ab2u)	/* Read Data and Bit Flip Register 9 */
#define MC11_RDBFL0	(*( MC0_RDBFL0_type *) 0xf0061ba0u)	/* Read Data and Bit Flip Register 0 */
#define MC11_RDBFL1	(*( MC0_RDBFL0_type *) 0xf0061ba2u)	/* Read Data and Bit Flip Register 1 */
#define MC11_RDBFL10	(*( MC0_RDBFL0_type *) 0xf0061bb4u)	/* Read Data and Bit Flip Register 10 */
#define MC11_RDBFL11	(*( MC0_RDBFL0_type *) 0xf0061bb6u)	/* Read Data and Bit Flip Register 11 */
#define MC11_RDBFL12	(*( MC0_RDBFL0_type *) 0xf0061bb8u)	/* Read Data and Bit Flip Register 12 */
#define MC11_RDBFL13	(*( MC0_RDBFL0_type *) 0xf0061bbau)	/* Read Data and Bit Flip Register 13 */
#define MC11_RDBFL14	(*( MC0_RDBFL0_type *) 0xf0061bbcu)	/* Read Data and Bit Flip Register 14 */
#define MC11_RDBFL15	(*( MC0_RDBFL0_type *) 0xf0061bbeu)	/* Read Data and Bit Flip Register 15 */
#define MC11_RDBFL16	(*( MC0_RDBFL0_type *) 0xf0061bc0u)	/* Read Data and Bit Flip Register 16 */
#define MC11_RDBFL17	(*( MC0_RDBFL0_type *) 0xf0061bc2u)	/* Read Data and Bit Flip Register 17 */
#define MC11_RDBFL18	(*( MC0_RDBFL0_type *) 0xf0061bc4u)	/* Read Data and Bit Flip Register 18 */
#define MC11_RDBFL19	(*( MC0_RDBFL0_type *) 0xf0061bc6u)	/* Read Data and Bit Flip Register 19 */
#define MC11_RDBFL2	(*( MC0_RDBFL0_type *) 0xf0061ba4u)	/* Read Data and Bit Flip Register 2 */
#define MC11_RDBFL20	(*( MC0_RDBFL0_type *) 0xf0061bc8u)	/* Read Data and Bit Flip Register 20 */
#define MC11_RDBFL21	(*( MC0_RDBFL0_type *) 0xf0061bcau)	/* Read Data and Bit Flip Register 21 */
#define MC11_RDBFL22	(*( MC0_RDBFL0_type *) 0xf0061bccu)	/* Read Data and Bit Flip Register 22 */
#define MC11_RDBFL23	(*( MC0_RDBFL0_type *) 0xf0061bceu)	/* Read Data and Bit Flip Register 23 */
#define MC11_RDBFL24	(*( MC0_RDBFL0_type *) 0xf0061bd0u)	/* Read Data and Bit Flip Register 24 */
#define MC11_RDBFL25	(*( MC0_RDBFL0_type *) 0xf0061bd2u)	/* Read Data and Bit Flip Register 25 */
#define MC11_RDBFL26	(*( MC0_RDBFL0_type *) 0xf0061bd4u)	/* Read Data and Bit Flip Register 26 */
#define MC11_RDBFL27	(*( MC0_RDBFL0_type *) 0xf0061bd6u)	/* Read Data and Bit Flip Register 27 */
#define MC11_RDBFL28	(*( MC0_RDBFL0_type *) 0xf0061bd8u)	/* Read Data and Bit Flip Register 28 */
#define MC11_RDBFL29	(*( MC0_RDBFL0_type *) 0xf0061bdau)	/* Read Data and Bit Flip Register 29 */
#define MC11_RDBFL3	(*( MC0_RDBFL0_type *) 0xf0061ba6u)	/* Read Data and Bit Flip Register 3 */
#define MC11_RDBFL30	(*( MC0_RDBFL0_type *) 0xf0061bdcu)	/* Read Data and Bit Flip Register 30 */
#define MC11_RDBFL31	(*( MC0_RDBFL0_type *) 0xf0061bdeu)	/* Read Data and Bit Flip Register 31 */
#define MC11_RDBFL32	(*( MC0_RDBFL0_type *) 0xf0061be0u)	/* Read Data and Bit Flip Register 32 */
#define MC11_RDBFL33	(*( MC0_RDBFL0_type *) 0xf0061be2u)	/* Read Data and Bit Flip Register 33 */
#define MC11_RDBFL34	(*( MC0_RDBFL0_type *) 0xf0061be4u)	/* Read Data and Bit Flip Register 34 */
#define MC11_RDBFL35	(*( MC0_RDBFL0_type *) 0xf0061be6u)	/* Read Data and Bit Flip Register 35 */
#define MC11_RDBFL36	(*( MC0_RDBFL0_type *) 0xf0061be8u)	/* Read Data and Bit Flip Register 36 */
#define MC11_RDBFL37	(*( MC0_RDBFL0_type *) 0xf0061beau)	/* Read Data and Bit Flip Register 37 */
#define MC11_RDBFL38	(*( MC0_RDBFL0_type *) 0xf0061becu)	/* Read Data and Bit Flip Register 38 */
#define MC11_RDBFL39	(*( MC0_RDBFL0_type *) 0xf0061beeu)	/* Read Data and Bit Flip Register 39 */
#define MC11_RDBFL4	(*( MC0_RDBFL0_type *) 0xf0061ba8u)	/* Read Data and Bit Flip Register 4 */
#define MC11_RDBFL5	(*( MC0_RDBFL0_type *) 0xf0061baau)	/* Read Data and Bit Flip Register 5 */
#define MC11_RDBFL6	(*( MC0_RDBFL0_type *) 0xf0061bacu)	/* Read Data and Bit Flip Register 6 */
#define MC11_RDBFL7	(*( MC0_RDBFL0_type *) 0xf0061baeu)	/* Read Data and Bit Flip Register 7 */
#define MC11_RDBFL8	(*( MC0_RDBFL0_type *) 0xf0061bb0u)	/* Read Data and Bit Flip Register 8 */
#define MC11_RDBFL9	(*( MC0_RDBFL0_type *) 0xf0061bb2u)	/* Read Data and Bit Flip Register 9 */
#define MC12_RDBFL0	(*( MC0_RDBFL0_type *) 0xf0061ca0u)	/* Read Data and Bit Flip Register 0 */
#define MC12_RDBFL1	(*( MC0_RDBFL0_type *) 0xf0061ca2u)	/* Read Data and Bit Flip Register 1 */
#define MC12_RDBFL10	(*( MC0_RDBFL0_type *) 0xf0061cb4u)	/* Read Data and Bit Flip Register 10 */
#define MC12_RDBFL11	(*( MC0_RDBFL0_type *) 0xf0061cb6u)	/* Read Data and Bit Flip Register 11 */
#define MC12_RDBFL12	(*( MC0_RDBFL0_type *) 0xf0061cb8u)	/* Read Data and Bit Flip Register 12 */
#define MC12_RDBFL13	(*( MC0_RDBFL0_type *) 0xf0061cbau)	/* Read Data and Bit Flip Register 13 */
#define MC12_RDBFL14	(*( MC0_RDBFL0_type *) 0xf0061cbcu)	/* Read Data and Bit Flip Register 14 */
#define MC12_RDBFL15	(*( MC0_RDBFL0_type *) 0xf0061cbeu)	/* Read Data and Bit Flip Register 15 */
#define MC12_RDBFL16	(*( MC0_RDBFL0_type *) 0xf0061cc0u)	/* Read Data and Bit Flip Register 16 */
#define MC12_RDBFL17	(*( MC0_RDBFL0_type *) 0xf0061cc2u)	/* Read Data and Bit Flip Register 17 */
#define MC12_RDBFL18	(*( MC0_RDBFL0_type *) 0xf0061cc4u)	/* Read Data and Bit Flip Register 18 */
#define MC12_RDBFL19	(*( MC0_RDBFL0_type *) 0xf0061cc6u)	/* Read Data and Bit Flip Register 19 */
#define MC12_RDBFL2	(*( MC0_RDBFL0_type *) 0xf0061ca4u)	/* Read Data and Bit Flip Register 2 */
#define MC12_RDBFL20	(*( MC0_RDBFL0_type *) 0xf0061cc8u)	/* Read Data and Bit Flip Register 20 */
#define MC12_RDBFL21	(*( MC0_RDBFL0_type *) 0xf0061ccau)	/* Read Data and Bit Flip Register 21 */
#define MC12_RDBFL22	(*( MC0_RDBFL0_type *) 0xf0061cccu)	/* Read Data and Bit Flip Register 22 */
#define MC12_RDBFL23	(*( MC0_RDBFL0_type *) 0xf0061cceu)	/* Read Data and Bit Flip Register 23 */
#define MC12_RDBFL24	(*( MC0_RDBFL0_type *) 0xf0061cd0u)	/* Read Data and Bit Flip Register 24 */
#define MC12_RDBFL25	(*( MC0_RDBFL0_type *) 0xf0061cd2u)	/* Read Data and Bit Flip Register 25 */
#define MC12_RDBFL26	(*( MC0_RDBFL0_type *) 0xf0061cd4u)	/* Read Data and Bit Flip Register 26 */
#define MC12_RDBFL27	(*( MC0_RDBFL0_type *) 0xf0061cd6u)	/* Read Data and Bit Flip Register 27 */
#define MC12_RDBFL28	(*( MC0_RDBFL0_type *) 0xf0061cd8u)	/* Read Data and Bit Flip Register 28 */
#define MC12_RDBFL29	(*( MC0_RDBFL0_type *) 0xf0061cdau)	/* Read Data and Bit Flip Register 29 */
#define MC12_RDBFL3	(*( MC0_RDBFL0_type *) 0xf0061ca6u)	/* Read Data and Bit Flip Register 3 */
#define MC12_RDBFL30	(*( MC0_RDBFL0_type *) 0xf0061cdcu)	/* Read Data and Bit Flip Register 30 */
#define MC12_RDBFL31	(*( MC0_RDBFL0_type *) 0xf0061cdeu)	/* Read Data and Bit Flip Register 31 */
#define MC12_RDBFL32	(*( MC0_RDBFL0_type *) 0xf0061ce0u)	/* Read Data and Bit Flip Register 32 */
#define MC12_RDBFL33	(*( MC0_RDBFL0_type *) 0xf0061ce2u)	/* Read Data and Bit Flip Register 33 */
#define MC12_RDBFL34	(*( MC0_RDBFL0_type *) 0xf0061ce4u)	/* Read Data and Bit Flip Register 34 */
#define MC12_RDBFL35	(*( MC0_RDBFL0_type *) 0xf0061ce6u)	/* Read Data and Bit Flip Register 35 */
#define MC12_RDBFL36	(*( MC0_RDBFL0_type *) 0xf0061ce8u)	/* Read Data and Bit Flip Register 36 */
#define MC12_RDBFL37	(*( MC0_RDBFL0_type *) 0xf0061ceau)	/* Read Data and Bit Flip Register 37 */
#define MC12_RDBFL38	(*( MC0_RDBFL0_type *) 0xf0061cecu)	/* Read Data and Bit Flip Register 38 */
#define MC12_RDBFL39	(*( MC0_RDBFL0_type *) 0xf0061ceeu)	/* Read Data and Bit Flip Register 39 */
#define MC12_RDBFL4	(*( MC0_RDBFL0_type *) 0xf0061ca8u)	/* Read Data and Bit Flip Register 4 */
#define MC12_RDBFL5	(*( MC0_RDBFL0_type *) 0xf0061caau)	/* Read Data and Bit Flip Register 5 */
#define MC12_RDBFL6	(*( MC0_RDBFL0_type *) 0xf0061cacu)	/* Read Data and Bit Flip Register 6 */
#define MC12_RDBFL7	(*( MC0_RDBFL0_type *) 0xf0061caeu)	/* Read Data and Bit Flip Register 7 */
#define MC12_RDBFL8	(*( MC0_RDBFL0_type *) 0xf0061cb0u)	/* Read Data and Bit Flip Register 8 */
#define MC12_RDBFL9	(*( MC0_RDBFL0_type *) 0xf0061cb2u)	/* Read Data and Bit Flip Register 9 */
#define MC13_RDBFL0	(*( MC0_RDBFL0_type *) 0xf0061da0u)	/* Read Data and Bit Flip Register 0 */
#define MC13_RDBFL1	(*( MC0_RDBFL0_type *) 0xf0061da2u)	/* Read Data and Bit Flip Register 1 */
#define MC13_RDBFL10	(*( MC0_RDBFL0_type *) 0xf0061db4u)	/* Read Data and Bit Flip Register 10 */
#define MC13_RDBFL11	(*( MC0_RDBFL0_type *) 0xf0061db6u)	/* Read Data and Bit Flip Register 11 */
#define MC13_RDBFL12	(*( MC0_RDBFL0_type *) 0xf0061db8u)	/* Read Data and Bit Flip Register 12 */
#define MC13_RDBFL13	(*( MC0_RDBFL0_type *) 0xf0061dbau)	/* Read Data and Bit Flip Register 13 */
#define MC13_RDBFL14	(*( MC0_RDBFL0_type *) 0xf0061dbcu)	/* Read Data and Bit Flip Register 14 */
#define MC13_RDBFL15	(*( MC0_RDBFL0_type *) 0xf0061dbeu)	/* Read Data and Bit Flip Register 15 */
#define MC13_RDBFL16	(*( MC0_RDBFL0_type *) 0xf0061dc0u)	/* Read Data and Bit Flip Register 16 */
#define MC13_RDBFL17	(*( MC0_RDBFL0_type *) 0xf0061dc2u)	/* Read Data and Bit Flip Register 17 */
#define MC13_RDBFL18	(*( MC0_RDBFL0_type *) 0xf0061dc4u)	/* Read Data and Bit Flip Register 18 */
#define MC13_RDBFL19	(*( MC0_RDBFL0_type *) 0xf0061dc6u)	/* Read Data and Bit Flip Register 19 */
#define MC13_RDBFL2	(*( MC0_RDBFL0_type *) 0xf0061da4u)	/* Read Data and Bit Flip Register 2 */
#define MC13_RDBFL20	(*( MC0_RDBFL0_type *) 0xf0061dc8u)	/* Read Data and Bit Flip Register 20 */
#define MC13_RDBFL21	(*( MC0_RDBFL0_type *) 0xf0061dcau)	/* Read Data and Bit Flip Register 21 */
#define MC13_RDBFL22	(*( MC0_RDBFL0_type *) 0xf0061dccu)	/* Read Data and Bit Flip Register 22 */
#define MC13_RDBFL23	(*( MC0_RDBFL0_type *) 0xf0061dceu)	/* Read Data and Bit Flip Register 23 */
#define MC13_RDBFL24	(*( MC0_RDBFL0_type *) 0xf0061dd0u)	/* Read Data and Bit Flip Register 24 */
#define MC13_RDBFL25	(*( MC0_RDBFL0_type *) 0xf0061dd2u)	/* Read Data and Bit Flip Register 25 */
#define MC13_RDBFL26	(*( MC0_RDBFL0_type *) 0xf0061dd4u)	/* Read Data and Bit Flip Register 26 */
#define MC13_RDBFL27	(*( MC0_RDBFL0_type *) 0xf0061dd6u)	/* Read Data and Bit Flip Register 27 */
#define MC13_RDBFL28	(*( MC0_RDBFL0_type *) 0xf0061dd8u)	/* Read Data and Bit Flip Register 28 */
#define MC13_RDBFL29	(*( MC0_RDBFL0_type *) 0xf0061ddau)	/* Read Data and Bit Flip Register 29 */
#define MC13_RDBFL3	(*( MC0_RDBFL0_type *) 0xf0061da6u)	/* Read Data and Bit Flip Register 3 */
#define MC13_RDBFL30	(*( MC0_RDBFL0_type *) 0xf0061ddcu)	/* Read Data and Bit Flip Register 30 */
#define MC13_RDBFL31	(*( MC0_RDBFL0_type *) 0xf0061ddeu)	/* Read Data and Bit Flip Register 31 */
#define MC13_RDBFL32	(*( MC0_RDBFL0_type *) 0xf0061de0u)	/* Read Data and Bit Flip Register 32 */
#define MC13_RDBFL33	(*( MC0_RDBFL0_type *) 0xf0061de2u)	/* Read Data and Bit Flip Register 33 */
#define MC13_RDBFL34	(*( MC0_RDBFL0_type *) 0xf0061de4u)	/* Read Data and Bit Flip Register 34 */
#define MC13_RDBFL35	(*( MC0_RDBFL0_type *) 0xf0061de6u)	/* Read Data and Bit Flip Register 35 */
#define MC13_RDBFL36	(*( MC0_RDBFL0_type *) 0xf0061de8u)	/* Read Data and Bit Flip Register 36 */
#define MC13_RDBFL37	(*( MC0_RDBFL0_type *) 0xf0061deau)	/* Read Data and Bit Flip Register 37 */
#define MC13_RDBFL38	(*( MC0_RDBFL0_type *) 0xf0061decu)	/* Read Data and Bit Flip Register 38 */
#define MC13_RDBFL39	(*( MC0_RDBFL0_type *) 0xf0061deeu)	/* Read Data and Bit Flip Register 39 */
#define MC13_RDBFL4	(*( MC0_RDBFL0_type *) 0xf0061da8u)	/* Read Data and Bit Flip Register 4 */
#define MC13_RDBFL5	(*( MC0_RDBFL0_type *) 0xf0061daau)	/* Read Data and Bit Flip Register 5 */
#define MC13_RDBFL6	(*( MC0_RDBFL0_type *) 0xf0061dacu)	/* Read Data and Bit Flip Register 6 */
#define MC13_RDBFL7	(*( MC0_RDBFL0_type *) 0xf0061daeu)	/* Read Data and Bit Flip Register 7 */
#define MC13_RDBFL8	(*( MC0_RDBFL0_type *) 0xf0061db0u)	/* Read Data and Bit Flip Register 8 */
#define MC13_RDBFL9	(*( MC0_RDBFL0_type *) 0xf0061db2u)	/* Read Data and Bit Flip Register 9 */
#define MC14_RDBFL0	(*( MC0_RDBFL0_type *) 0xf0061ea0u)	/* Read Data and Bit Flip Register 0 */
#define MC14_RDBFL1	(*( MC0_RDBFL0_type *) 0xf0061ea2u)	/* Read Data and Bit Flip Register 1 */
#define MC14_RDBFL10	(*( MC0_RDBFL0_type *) 0xf0061eb4u)	/* Read Data and Bit Flip Register 10 */
#define MC14_RDBFL11	(*( MC0_RDBFL0_type *) 0xf0061eb6u)	/* Read Data and Bit Flip Register 11 */
#define MC14_RDBFL12	(*( MC0_RDBFL0_type *) 0xf0061eb8u)	/* Read Data and Bit Flip Register 12 */
#define MC14_RDBFL13	(*( MC0_RDBFL0_type *) 0xf0061ebau)	/* Read Data and Bit Flip Register 13 */
#define MC14_RDBFL14	(*( MC0_RDBFL0_type *) 0xf0061ebcu)	/* Read Data and Bit Flip Register 14 */
#define MC14_RDBFL15	(*( MC0_RDBFL0_type *) 0xf0061ebeu)	/* Read Data and Bit Flip Register 15 */
#define MC14_RDBFL16	(*( MC0_RDBFL0_type *) 0xf0061ec0u)	/* Read Data and Bit Flip Register 16 */
#define MC14_RDBFL17	(*( MC0_RDBFL0_type *) 0xf0061ec2u)	/* Read Data and Bit Flip Register 17 */
#define MC14_RDBFL18	(*( MC0_RDBFL0_type *) 0xf0061ec4u)	/* Read Data and Bit Flip Register 18 */
#define MC14_RDBFL19	(*( MC0_RDBFL0_type *) 0xf0061ec6u)	/* Read Data and Bit Flip Register 19 */
#define MC14_RDBFL2	(*( MC0_RDBFL0_type *) 0xf0061ea4u)	/* Read Data and Bit Flip Register 2 */
#define MC14_RDBFL20	(*( MC0_RDBFL0_type *) 0xf0061ec8u)	/* Read Data and Bit Flip Register 20 */
#define MC14_RDBFL21	(*( MC0_RDBFL0_type *) 0xf0061ecau)	/* Read Data and Bit Flip Register 21 */
#define MC14_RDBFL22	(*( MC0_RDBFL0_type *) 0xf0061eccu)	/* Read Data and Bit Flip Register 22 */
#define MC14_RDBFL23	(*( MC0_RDBFL0_type *) 0xf0061eceu)	/* Read Data and Bit Flip Register 23 */
#define MC14_RDBFL24	(*( MC0_RDBFL0_type *) 0xf0061ed0u)	/* Read Data and Bit Flip Register 24 */
#define MC14_RDBFL25	(*( MC0_RDBFL0_type *) 0xf0061ed2u)	/* Read Data and Bit Flip Register 25 */
#define MC14_RDBFL26	(*( MC0_RDBFL0_type *) 0xf0061ed4u)	/* Read Data and Bit Flip Register 26 */
#define MC14_RDBFL27	(*( MC0_RDBFL0_type *) 0xf0061ed6u)	/* Read Data and Bit Flip Register 27 */
#define MC14_RDBFL28	(*( MC0_RDBFL0_type *) 0xf0061ed8u)	/* Read Data and Bit Flip Register 28 */
#define MC14_RDBFL29	(*( MC0_RDBFL0_type *) 0xf0061edau)	/* Read Data and Bit Flip Register 29 */
#define MC14_RDBFL3	(*( MC0_RDBFL0_type *) 0xf0061ea6u)	/* Read Data and Bit Flip Register 3 */
#define MC14_RDBFL30	(*( MC0_RDBFL0_type *) 0xf0061edcu)	/* Read Data and Bit Flip Register 30 */
#define MC14_RDBFL31	(*( MC0_RDBFL0_type *) 0xf0061edeu)	/* Read Data and Bit Flip Register 31 */
#define MC14_RDBFL32	(*( MC0_RDBFL0_type *) 0xf0061ee0u)	/* Read Data and Bit Flip Register 32 */
#define MC14_RDBFL33	(*( MC0_RDBFL0_type *) 0xf0061ee2u)	/* Read Data and Bit Flip Register 33 */
#define MC14_RDBFL34	(*( MC0_RDBFL0_type *) 0xf0061ee4u)	/* Read Data and Bit Flip Register 34 */
#define MC14_RDBFL35	(*( MC0_RDBFL0_type *) 0xf0061ee6u)	/* Read Data and Bit Flip Register 35 */
#define MC14_RDBFL36	(*( MC0_RDBFL0_type *) 0xf0061ee8u)	/* Read Data and Bit Flip Register 36 */
#define MC14_RDBFL37	(*( MC0_RDBFL0_type *) 0xf0061eeau)	/* Read Data and Bit Flip Register 37 */
#define MC14_RDBFL38	(*( MC0_RDBFL0_type *) 0xf0061eecu)	/* Read Data and Bit Flip Register 38 */
#define MC14_RDBFL39	(*( MC0_RDBFL0_type *) 0xf0061eeeu)	/* Read Data and Bit Flip Register 39 */
#define MC14_RDBFL4	(*( MC0_RDBFL0_type *) 0xf0061ea8u)	/* Read Data and Bit Flip Register 4 */
#define MC14_RDBFL5	(*( MC0_RDBFL0_type *) 0xf0061eaau)	/* Read Data and Bit Flip Register 5 */
#define MC14_RDBFL6	(*( MC0_RDBFL0_type *) 0xf0061eacu)	/* Read Data and Bit Flip Register 6 */
#define MC14_RDBFL7	(*( MC0_RDBFL0_type *) 0xf0061eaeu)	/* Read Data and Bit Flip Register 7 */
#define MC14_RDBFL8	(*( MC0_RDBFL0_type *) 0xf0061eb0u)	/* Read Data and Bit Flip Register 8 */
#define MC14_RDBFL9	(*( MC0_RDBFL0_type *) 0xf0061eb2u)	/* Read Data and Bit Flip Register 9 */
#define MC15_RDBFL0	(*( MC0_RDBFL0_type *) 0xf0061fa0u)	/* Read Data and Bit Flip Register 0 */
#define MC15_RDBFL1	(*( MC0_RDBFL0_type *) 0xf0061fa2u)	/* Read Data and Bit Flip Register 1 */
#define MC15_RDBFL10	(*( MC0_RDBFL0_type *) 0xf0061fb4u)	/* Read Data and Bit Flip Register 10 */
#define MC15_RDBFL11	(*( MC0_RDBFL0_type *) 0xf0061fb6u)	/* Read Data and Bit Flip Register 11 */
#define MC15_RDBFL12	(*( MC0_RDBFL0_type *) 0xf0061fb8u)	/* Read Data and Bit Flip Register 12 */
#define MC15_RDBFL13	(*( MC0_RDBFL0_type *) 0xf0061fbau)	/* Read Data and Bit Flip Register 13 */
#define MC15_RDBFL14	(*( MC0_RDBFL0_type *) 0xf0061fbcu)	/* Read Data and Bit Flip Register 14 */
#define MC15_RDBFL15	(*( MC0_RDBFL0_type *) 0xf0061fbeu)	/* Read Data and Bit Flip Register 15 */
#define MC15_RDBFL16	(*( MC0_RDBFL0_type *) 0xf0061fc0u)	/* Read Data and Bit Flip Register 16 */
#define MC15_RDBFL17	(*( MC0_RDBFL0_type *) 0xf0061fc2u)	/* Read Data and Bit Flip Register 17 */
#define MC15_RDBFL18	(*( MC0_RDBFL0_type *) 0xf0061fc4u)	/* Read Data and Bit Flip Register 18 */
#define MC15_RDBFL19	(*( MC0_RDBFL0_type *) 0xf0061fc6u)	/* Read Data and Bit Flip Register 19 */
#define MC15_RDBFL2	(*( MC0_RDBFL0_type *) 0xf0061fa4u)	/* Read Data and Bit Flip Register 2 */
#define MC15_RDBFL20	(*( MC0_RDBFL0_type *) 0xf0061fc8u)	/* Read Data and Bit Flip Register 20 */
#define MC15_RDBFL21	(*( MC0_RDBFL0_type *) 0xf0061fcau)	/* Read Data and Bit Flip Register 21 */
#define MC15_RDBFL22	(*( MC0_RDBFL0_type *) 0xf0061fccu)	/* Read Data and Bit Flip Register 22 */
#define MC15_RDBFL23	(*( MC0_RDBFL0_type *) 0xf0061fceu)	/* Read Data and Bit Flip Register 23 */
#define MC15_RDBFL24	(*( MC0_RDBFL0_type *) 0xf0061fd0u)	/* Read Data and Bit Flip Register 24 */
#define MC15_RDBFL25	(*( MC0_RDBFL0_type *) 0xf0061fd2u)	/* Read Data and Bit Flip Register 25 */
#define MC15_RDBFL26	(*( MC0_RDBFL0_type *) 0xf0061fd4u)	/* Read Data and Bit Flip Register 26 */
#define MC15_RDBFL27	(*( MC0_RDBFL0_type *) 0xf0061fd6u)	/* Read Data and Bit Flip Register 27 */
#define MC15_RDBFL28	(*( MC0_RDBFL0_type *) 0xf0061fd8u)	/* Read Data and Bit Flip Register 28 */
#define MC15_RDBFL29	(*( MC0_RDBFL0_type *) 0xf0061fdau)	/* Read Data and Bit Flip Register 29 */
#define MC15_RDBFL3	(*( MC0_RDBFL0_type *) 0xf0061fa6u)	/* Read Data and Bit Flip Register 3 */
#define MC15_RDBFL30	(*( MC0_RDBFL0_type *) 0xf0061fdcu)	/* Read Data and Bit Flip Register 30 */
#define MC15_RDBFL31	(*( MC0_RDBFL0_type *) 0xf0061fdeu)	/* Read Data and Bit Flip Register 31 */
#define MC15_RDBFL32	(*( MC0_RDBFL0_type *) 0xf0061fe0u)	/* Read Data and Bit Flip Register 32 */
#define MC15_RDBFL33	(*( MC0_RDBFL0_type *) 0xf0061fe2u)	/* Read Data and Bit Flip Register 33 */
#define MC15_RDBFL34	(*( MC0_RDBFL0_type *) 0xf0061fe4u)	/* Read Data and Bit Flip Register 34 */
#define MC15_RDBFL35	(*( MC0_RDBFL0_type *) 0xf0061fe6u)	/* Read Data and Bit Flip Register 35 */
#define MC15_RDBFL36	(*( MC0_RDBFL0_type *) 0xf0061fe8u)	/* Read Data and Bit Flip Register 36 */
#define MC15_RDBFL37	(*( MC0_RDBFL0_type *) 0xf0061feau)	/* Read Data and Bit Flip Register 37 */
#define MC15_RDBFL38	(*( MC0_RDBFL0_type *) 0xf0061fecu)	/* Read Data and Bit Flip Register 38 */
#define MC15_RDBFL39	(*( MC0_RDBFL0_type *) 0xf0061feeu)	/* Read Data and Bit Flip Register 39 */
#define MC15_RDBFL4	(*( MC0_RDBFL0_type *) 0xf0061fa8u)	/* Read Data and Bit Flip Register 4 */
#define MC15_RDBFL5	(*( MC0_RDBFL0_type *) 0xf0061faau)	/* Read Data and Bit Flip Register 5 */
#define MC15_RDBFL6	(*( MC0_RDBFL0_type *) 0xf0061facu)	/* Read Data and Bit Flip Register 6 */
#define MC15_RDBFL7	(*( MC0_RDBFL0_type *) 0xf0061faeu)	/* Read Data and Bit Flip Register 7 */
#define MC15_RDBFL8	(*( MC0_RDBFL0_type *) 0xf0061fb0u)	/* Read Data and Bit Flip Register 8 */
#define MC15_RDBFL9	(*( MC0_RDBFL0_type *) 0xf0061fb2u)	/* Read Data and Bit Flip Register 9 */
#define MC16_RDBFL0	(*( MC0_RDBFL0_type *) 0xf00620a0u)	/* Read Data and Bit Flip Register 0 */
#define MC16_RDBFL1	(*( MC0_RDBFL0_type *) 0xf00620a2u)	/* Read Data and Bit Flip Register 1 */
#define MC16_RDBFL10	(*( MC0_RDBFL0_type *) 0xf00620b4u)	/* Read Data and Bit Flip Register 10 */
#define MC16_RDBFL11	(*( MC0_RDBFL0_type *) 0xf00620b6u)	/* Read Data and Bit Flip Register 11 */
#define MC16_RDBFL12	(*( MC0_RDBFL0_type *) 0xf00620b8u)	/* Read Data and Bit Flip Register 12 */
#define MC16_RDBFL13	(*( MC0_RDBFL0_type *) 0xf00620bau)	/* Read Data and Bit Flip Register 13 */
#define MC16_RDBFL14	(*( MC0_RDBFL0_type *) 0xf00620bcu)	/* Read Data and Bit Flip Register 14 */
#define MC16_RDBFL15	(*( MC0_RDBFL0_type *) 0xf00620beu)	/* Read Data and Bit Flip Register 15 */
#define MC16_RDBFL16	(*( MC0_RDBFL0_type *) 0xf00620c0u)	/* Read Data and Bit Flip Register 16 */
#define MC16_RDBFL17	(*( MC0_RDBFL0_type *) 0xf00620c2u)	/* Read Data and Bit Flip Register 17 */
#define MC16_RDBFL18	(*( MC0_RDBFL0_type *) 0xf00620c4u)	/* Read Data and Bit Flip Register 18 */
#define MC16_RDBFL19	(*( MC0_RDBFL0_type *) 0xf00620c6u)	/* Read Data and Bit Flip Register 19 */
#define MC16_RDBFL2	(*( MC0_RDBFL0_type *) 0xf00620a4u)	/* Read Data and Bit Flip Register 2 */
#define MC16_RDBFL20	(*( MC0_RDBFL0_type *) 0xf00620c8u)	/* Read Data and Bit Flip Register 20 */
#define MC16_RDBFL21	(*( MC0_RDBFL0_type *) 0xf00620cau)	/* Read Data and Bit Flip Register 21 */
#define MC16_RDBFL22	(*( MC0_RDBFL0_type *) 0xf00620ccu)	/* Read Data and Bit Flip Register 22 */
#define MC16_RDBFL23	(*( MC0_RDBFL0_type *) 0xf00620ceu)	/* Read Data and Bit Flip Register 23 */
#define MC16_RDBFL24	(*( MC0_RDBFL0_type *) 0xf00620d0u)	/* Read Data and Bit Flip Register 24 */
#define MC16_RDBFL25	(*( MC0_RDBFL0_type *) 0xf00620d2u)	/* Read Data and Bit Flip Register 25 */
#define MC16_RDBFL26	(*( MC0_RDBFL0_type *) 0xf00620d4u)	/* Read Data and Bit Flip Register 26 */
#define MC16_RDBFL27	(*( MC0_RDBFL0_type *) 0xf00620d6u)	/* Read Data and Bit Flip Register 27 */
#define MC16_RDBFL28	(*( MC0_RDBFL0_type *) 0xf00620d8u)	/* Read Data and Bit Flip Register 28 */
#define MC16_RDBFL29	(*( MC0_RDBFL0_type *) 0xf00620dau)	/* Read Data and Bit Flip Register 29 */
#define MC16_RDBFL3	(*( MC0_RDBFL0_type *) 0xf00620a6u)	/* Read Data and Bit Flip Register 3 */
#define MC16_RDBFL30	(*( MC0_RDBFL0_type *) 0xf00620dcu)	/* Read Data and Bit Flip Register 30 */
#define MC16_RDBFL31	(*( MC0_RDBFL0_type *) 0xf00620deu)	/* Read Data and Bit Flip Register 31 */
#define MC16_RDBFL32	(*( MC0_RDBFL0_type *) 0xf00620e0u)	/* Read Data and Bit Flip Register 32 */
#define MC16_RDBFL33	(*( MC0_RDBFL0_type *) 0xf00620e2u)	/* Read Data and Bit Flip Register 33 */
#define MC16_RDBFL34	(*( MC0_RDBFL0_type *) 0xf00620e4u)	/* Read Data and Bit Flip Register 34 */
#define MC16_RDBFL35	(*( MC0_RDBFL0_type *) 0xf00620e6u)	/* Read Data and Bit Flip Register 35 */
#define MC16_RDBFL36	(*( MC0_RDBFL0_type *) 0xf00620e8u)	/* Read Data and Bit Flip Register 36 */
#define MC16_RDBFL37	(*( MC0_RDBFL0_type *) 0xf00620eau)	/* Read Data and Bit Flip Register 37 */
#define MC16_RDBFL38	(*( MC0_RDBFL0_type *) 0xf00620ecu)	/* Read Data and Bit Flip Register 38 */
#define MC16_RDBFL39	(*( MC0_RDBFL0_type *) 0xf00620eeu)	/* Read Data and Bit Flip Register 39 */
#define MC16_RDBFL4	(*( MC0_RDBFL0_type *) 0xf00620a8u)	/* Read Data and Bit Flip Register 4 */
#define MC16_RDBFL5	(*( MC0_RDBFL0_type *) 0xf00620aau)	/* Read Data and Bit Flip Register 5 */
#define MC16_RDBFL6	(*( MC0_RDBFL0_type *) 0xf00620acu)	/* Read Data and Bit Flip Register 6 */
#define MC16_RDBFL7	(*( MC0_RDBFL0_type *) 0xf00620aeu)	/* Read Data and Bit Flip Register 7 */
#define MC16_RDBFL8	(*( MC0_RDBFL0_type *) 0xf00620b0u)	/* Read Data and Bit Flip Register 8 */
#define MC16_RDBFL9	(*( MC0_RDBFL0_type *) 0xf00620b2u)	/* Read Data and Bit Flip Register 9 */
#define MC17_RDBFL0	(*( MC0_RDBFL0_type *) 0xf00621a0u)	/* Read Data and Bit Flip Register 0 */
#define MC17_RDBFL1	(*( MC0_RDBFL0_type *) 0xf00621a2u)	/* Read Data and Bit Flip Register 1 */
#define MC17_RDBFL10	(*( MC0_RDBFL0_type *) 0xf00621b4u)	/* Read Data and Bit Flip Register 10 */
#define MC17_RDBFL11	(*( MC0_RDBFL0_type *) 0xf00621b6u)	/* Read Data and Bit Flip Register 11 */
#define MC17_RDBFL12	(*( MC0_RDBFL0_type *) 0xf00621b8u)	/* Read Data and Bit Flip Register 12 */
#define MC17_RDBFL13	(*( MC0_RDBFL0_type *) 0xf00621bau)	/* Read Data and Bit Flip Register 13 */
#define MC17_RDBFL14	(*( MC0_RDBFL0_type *) 0xf00621bcu)	/* Read Data and Bit Flip Register 14 */
#define MC17_RDBFL15	(*( MC0_RDBFL0_type *) 0xf00621beu)	/* Read Data and Bit Flip Register 15 */
#define MC17_RDBFL16	(*( MC0_RDBFL0_type *) 0xf00621c0u)	/* Read Data and Bit Flip Register 16 */
#define MC17_RDBFL17	(*( MC0_RDBFL0_type *) 0xf00621c2u)	/* Read Data and Bit Flip Register 17 */
#define MC17_RDBFL18	(*( MC0_RDBFL0_type *) 0xf00621c4u)	/* Read Data and Bit Flip Register 18 */
#define MC17_RDBFL19	(*( MC0_RDBFL0_type *) 0xf00621c6u)	/* Read Data and Bit Flip Register 19 */
#define MC17_RDBFL2	(*( MC0_RDBFL0_type *) 0xf00621a4u)	/* Read Data and Bit Flip Register 2 */
#define MC17_RDBFL20	(*( MC0_RDBFL0_type *) 0xf00621c8u)	/* Read Data and Bit Flip Register 20 */
#define MC17_RDBFL21	(*( MC0_RDBFL0_type *) 0xf00621cau)	/* Read Data and Bit Flip Register 21 */
#define MC17_RDBFL22	(*( MC0_RDBFL0_type *) 0xf00621ccu)	/* Read Data and Bit Flip Register 22 */
#define MC17_RDBFL23	(*( MC0_RDBFL0_type *) 0xf00621ceu)	/* Read Data and Bit Flip Register 23 */
#define MC17_RDBFL24	(*( MC0_RDBFL0_type *) 0xf00621d0u)	/* Read Data and Bit Flip Register 24 */
#define MC17_RDBFL25	(*( MC0_RDBFL0_type *) 0xf00621d2u)	/* Read Data and Bit Flip Register 25 */
#define MC17_RDBFL26	(*( MC0_RDBFL0_type *) 0xf00621d4u)	/* Read Data and Bit Flip Register 26 */
#define MC17_RDBFL27	(*( MC0_RDBFL0_type *) 0xf00621d6u)	/* Read Data and Bit Flip Register 27 */
#define MC17_RDBFL28	(*( MC0_RDBFL0_type *) 0xf00621d8u)	/* Read Data and Bit Flip Register 28 */
#define MC17_RDBFL29	(*( MC0_RDBFL0_type *) 0xf00621dau)	/* Read Data and Bit Flip Register 29 */
#define MC17_RDBFL3	(*( MC0_RDBFL0_type *) 0xf00621a6u)	/* Read Data and Bit Flip Register 3 */
#define MC17_RDBFL30	(*( MC0_RDBFL0_type *) 0xf00621dcu)	/* Read Data and Bit Flip Register 30 */
#define MC17_RDBFL31	(*( MC0_RDBFL0_type *) 0xf00621deu)	/* Read Data and Bit Flip Register 31 */
#define MC17_RDBFL32	(*( MC0_RDBFL0_type *) 0xf00621e0u)	/* Read Data and Bit Flip Register 32 */
#define MC17_RDBFL33	(*( MC0_RDBFL0_type *) 0xf00621e2u)	/* Read Data and Bit Flip Register 33 */
#define MC17_RDBFL34	(*( MC0_RDBFL0_type *) 0xf00621e4u)	/* Read Data and Bit Flip Register 34 */
#define MC17_RDBFL35	(*( MC0_RDBFL0_type *) 0xf00621e6u)	/* Read Data and Bit Flip Register 35 */
#define MC17_RDBFL36	(*( MC0_RDBFL0_type *) 0xf00621e8u)	/* Read Data and Bit Flip Register 36 */
#define MC17_RDBFL37	(*( MC0_RDBFL0_type *) 0xf00621eau)	/* Read Data and Bit Flip Register 37 */
#define MC17_RDBFL38	(*( MC0_RDBFL0_type *) 0xf00621ecu)	/* Read Data and Bit Flip Register 38 */
#define MC17_RDBFL39	(*( MC0_RDBFL0_type *) 0xf00621eeu)	/* Read Data and Bit Flip Register 39 */
#define MC17_RDBFL4	(*( MC0_RDBFL0_type *) 0xf00621a8u)	/* Read Data and Bit Flip Register 4 */
#define MC17_RDBFL5	(*( MC0_RDBFL0_type *) 0xf00621aau)	/* Read Data and Bit Flip Register 5 */
#define MC17_RDBFL6	(*( MC0_RDBFL0_type *) 0xf00621acu)	/* Read Data and Bit Flip Register 6 */
#define MC17_RDBFL7	(*( MC0_RDBFL0_type *) 0xf00621aeu)	/* Read Data and Bit Flip Register 7 */
#define MC17_RDBFL8	(*( MC0_RDBFL0_type *) 0xf00621b0u)	/* Read Data and Bit Flip Register 8 */
#define MC17_RDBFL9	(*( MC0_RDBFL0_type *) 0xf00621b2u)	/* Read Data and Bit Flip Register 9 */
#define MC18_RDBFL0	(*( MC0_RDBFL0_type *) 0xf00622a0u)	/* Read Data and Bit Flip Register 0 */
#define MC18_RDBFL1	(*( MC0_RDBFL0_type *) 0xf00622a2u)	/* Read Data and Bit Flip Register 1 */
#define MC18_RDBFL10	(*( MC0_RDBFL0_type *) 0xf00622b4u)	/* Read Data and Bit Flip Register 10 */
#define MC18_RDBFL11	(*( MC0_RDBFL0_type *) 0xf00622b6u)	/* Read Data and Bit Flip Register 11 */
#define MC18_RDBFL12	(*( MC0_RDBFL0_type *) 0xf00622b8u)	/* Read Data and Bit Flip Register 12 */
#define MC18_RDBFL13	(*( MC0_RDBFL0_type *) 0xf00622bau)	/* Read Data and Bit Flip Register 13 */
#define MC18_RDBFL14	(*( MC0_RDBFL0_type *) 0xf00622bcu)	/* Read Data and Bit Flip Register 14 */
#define MC18_RDBFL15	(*( MC0_RDBFL0_type *) 0xf00622beu)	/* Read Data and Bit Flip Register 15 */
#define MC18_RDBFL16	(*( MC0_RDBFL0_type *) 0xf00622c0u)	/* Read Data and Bit Flip Register 16 */
#define MC18_RDBFL17	(*( MC0_RDBFL0_type *) 0xf00622c2u)	/* Read Data and Bit Flip Register 17 */
#define MC18_RDBFL18	(*( MC0_RDBFL0_type *) 0xf00622c4u)	/* Read Data and Bit Flip Register 18 */
#define MC18_RDBFL19	(*( MC0_RDBFL0_type *) 0xf00622c6u)	/* Read Data and Bit Flip Register 19 */
#define MC18_RDBFL2	(*( MC0_RDBFL0_type *) 0xf00622a4u)	/* Read Data and Bit Flip Register 2 */
#define MC18_RDBFL20	(*( MC0_RDBFL0_type *) 0xf00622c8u)	/* Read Data and Bit Flip Register 20 */
#define MC18_RDBFL21	(*( MC0_RDBFL0_type *) 0xf00622cau)	/* Read Data and Bit Flip Register 21 */
#define MC18_RDBFL22	(*( MC0_RDBFL0_type *) 0xf00622ccu)	/* Read Data and Bit Flip Register 22 */
#define MC18_RDBFL23	(*( MC0_RDBFL0_type *) 0xf00622ceu)	/* Read Data and Bit Flip Register 23 */
#define MC18_RDBFL24	(*( MC0_RDBFL0_type *) 0xf00622d0u)	/* Read Data and Bit Flip Register 24 */
#define MC18_RDBFL25	(*( MC0_RDBFL0_type *) 0xf00622d2u)	/* Read Data and Bit Flip Register 25 */
#define MC18_RDBFL26	(*( MC0_RDBFL0_type *) 0xf00622d4u)	/* Read Data and Bit Flip Register 26 */
#define MC18_RDBFL27	(*( MC0_RDBFL0_type *) 0xf00622d6u)	/* Read Data and Bit Flip Register 27 */
#define MC18_RDBFL28	(*( MC0_RDBFL0_type *) 0xf00622d8u)	/* Read Data and Bit Flip Register 28 */
#define MC18_RDBFL29	(*( MC0_RDBFL0_type *) 0xf00622dau)	/* Read Data and Bit Flip Register 29 */
#define MC18_RDBFL3	(*( MC0_RDBFL0_type *) 0xf00622a6u)	/* Read Data and Bit Flip Register 3 */
#define MC18_RDBFL30	(*( MC0_RDBFL0_type *) 0xf00622dcu)	/* Read Data and Bit Flip Register 30 */
#define MC18_RDBFL31	(*( MC0_RDBFL0_type *) 0xf00622deu)	/* Read Data and Bit Flip Register 31 */
#define MC18_RDBFL32	(*( MC0_RDBFL0_type *) 0xf00622e0u)	/* Read Data and Bit Flip Register 32 */
#define MC18_RDBFL33	(*( MC0_RDBFL0_type *) 0xf00622e2u)	/* Read Data and Bit Flip Register 33 */
#define MC18_RDBFL34	(*( MC0_RDBFL0_type *) 0xf00622e4u)	/* Read Data and Bit Flip Register 34 */
#define MC18_RDBFL35	(*( MC0_RDBFL0_type *) 0xf00622e6u)	/* Read Data and Bit Flip Register 35 */
#define MC18_RDBFL36	(*( MC0_RDBFL0_type *) 0xf00622e8u)	/* Read Data and Bit Flip Register 36 */
#define MC18_RDBFL37	(*( MC0_RDBFL0_type *) 0xf00622eau)	/* Read Data and Bit Flip Register 37 */
#define MC18_RDBFL38	(*( MC0_RDBFL0_type *) 0xf00622ecu)	/* Read Data and Bit Flip Register 38 */
#define MC18_RDBFL39	(*( MC0_RDBFL0_type *) 0xf00622eeu)	/* Read Data and Bit Flip Register 39 */
#define MC18_RDBFL4	(*( MC0_RDBFL0_type *) 0xf00622a8u)	/* Read Data and Bit Flip Register 4 */
#define MC18_RDBFL5	(*( MC0_RDBFL0_type *) 0xf00622aau)	/* Read Data and Bit Flip Register 5 */
#define MC18_RDBFL6	(*( MC0_RDBFL0_type *) 0xf00622acu)	/* Read Data and Bit Flip Register 6 */
#define MC18_RDBFL7	(*( MC0_RDBFL0_type *) 0xf00622aeu)	/* Read Data and Bit Flip Register 7 */
#define MC18_RDBFL8	(*( MC0_RDBFL0_type *) 0xf00622b0u)	/* Read Data and Bit Flip Register 8 */
#define MC18_RDBFL9	(*( MC0_RDBFL0_type *) 0xf00622b2u)	/* Read Data and Bit Flip Register 9 */
#define MC19_RDBFL0	(*( MC0_RDBFL0_type *) 0xf00623a0u)	/* Read Data and Bit Flip Register 0 */
#define MC19_RDBFL1	(*( MC0_RDBFL0_type *) 0xf00623a2u)	/* Read Data and Bit Flip Register 1 */
#define MC19_RDBFL10	(*( MC0_RDBFL0_type *) 0xf00623b4u)	/* Read Data and Bit Flip Register 10 */
#define MC19_RDBFL11	(*( MC0_RDBFL0_type *) 0xf00623b6u)	/* Read Data and Bit Flip Register 11 */
#define MC19_RDBFL12	(*( MC0_RDBFL0_type *) 0xf00623b8u)	/* Read Data and Bit Flip Register 12 */
#define MC19_RDBFL13	(*( MC0_RDBFL0_type *) 0xf00623bau)	/* Read Data and Bit Flip Register 13 */
#define MC19_RDBFL14	(*( MC0_RDBFL0_type *) 0xf00623bcu)	/* Read Data and Bit Flip Register 14 */
#define MC19_RDBFL15	(*( MC0_RDBFL0_type *) 0xf00623beu)	/* Read Data and Bit Flip Register 15 */
#define MC19_RDBFL16	(*( MC0_RDBFL0_type *) 0xf00623c0u)	/* Read Data and Bit Flip Register 16 */
#define MC19_RDBFL17	(*( MC0_RDBFL0_type *) 0xf00623c2u)	/* Read Data and Bit Flip Register 17 */
#define MC19_RDBFL18	(*( MC0_RDBFL0_type *) 0xf00623c4u)	/* Read Data and Bit Flip Register 18 */
#define MC19_RDBFL19	(*( MC0_RDBFL0_type *) 0xf00623c6u)	/* Read Data and Bit Flip Register 19 */
#define MC19_RDBFL2	(*( MC0_RDBFL0_type *) 0xf00623a4u)	/* Read Data and Bit Flip Register 2 */
#define MC19_RDBFL20	(*( MC0_RDBFL0_type *) 0xf00623c8u)	/* Read Data and Bit Flip Register 20 */
#define MC19_RDBFL21	(*( MC0_RDBFL0_type *) 0xf00623cau)	/* Read Data and Bit Flip Register 21 */
#define MC19_RDBFL22	(*( MC0_RDBFL0_type *) 0xf00623ccu)	/* Read Data and Bit Flip Register 22 */
#define MC19_RDBFL23	(*( MC0_RDBFL0_type *) 0xf00623ceu)	/* Read Data and Bit Flip Register 23 */
#define MC19_RDBFL24	(*( MC0_RDBFL0_type *) 0xf00623d0u)	/* Read Data and Bit Flip Register 24 */
#define MC19_RDBFL25	(*( MC0_RDBFL0_type *) 0xf00623d2u)	/* Read Data and Bit Flip Register 25 */
#define MC19_RDBFL26	(*( MC0_RDBFL0_type *) 0xf00623d4u)	/* Read Data and Bit Flip Register 26 */
#define MC19_RDBFL27	(*( MC0_RDBFL0_type *) 0xf00623d6u)	/* Read Data and Bit Flip Register 27 */
#define MC19_RDBFL28	(*( MC0_RDBFL0_type *) 0xf00623d8u)	/* Read Data and Bit Flip Register 28 */
#define MC19_RDBFL29	(*( MC0_RDBFL0_type *) 0xf00623dau)	/* Read Data and Bit Flip Register 29 */
#define MC19_RDBFL3	(*( MC0_RDBFL0_type *) 0xf00623a6u)	/* Read Data and Bit Flip Register 3 */
#define MC19_RDBFL30	(*( MC0_RDBFL0_type *) 0xf00623dcu)	/* Read Data and Bit Flip Register 30 */
#define MC19_RDBFL31	(*( MC0_RDBFL0_type *) 0xf00623deu)	/* Read Data and Bit Flip Register 31 */
#define MC19_RDBFL32	(*( MC0_RDBFL0_type *) 0xf00623e0u)	/* Read Data and Bit Flip Register 32 */
#define MC19_RDBFL33	(*( MC0_RDBFL0_type *) 0xf00623e2u)	/* Read Data and Bit Flip Register 33 */
#define MC19_RDBFL34	(*( MC0_RDBFL0_type *) 0xf00623e4u)	/* Read Data and Bit Flip Register 34 */
#define MC19_RDBFL35	(*( MC0_RDBFL0_type *) 0xf00623e6u)	/* Read Data and Bit Flip Register 35 */
#define MC19_RDBFL36	(*( MC0_RDBFL0_type *) 0xf00623e8u)	/* Read Data and Bit Flip Register 36 */
#define MC19_RDBFL37	(*( MC0_RDBFL0_type *) 0xf00623eau)	/* Read Data and Bit Flip Register 37 */
#define MC19_RDBFL38	(*( MC0_RDBFL0_type *) 0xf00623ecu)	/* Read Data and Bit Flip Register 38 */
#define MC19_RDBFL39	(*( MC0_RDBFL0_type *) 0xf00623eeu)	/* Read Data and Bit Flip Register 39 */
#define MC19_RDBFL4	(*( MC0_RDBFL0_type *) 0xf00623a8u)	/* Read Data and Bit Flip Register 4 */
#define MC19_RDBFL5	(*( MC0_RDBFL0_type *) 0xf00623aau)	/* Read Data and Bit Flip Register 5 */
#define MC19_RDBFL6	(*( MC0_RDBFL0_type *) 0xf00623acu)	/* Read Data and Bit Flip Register 6 */
#define MC19_RDBFL7	(*( MC0_RDBFL0_type *) 0xf00623aeu)	/* Read Data and Bit Flip Register 7 */
#define MC19_RDBFL8	(*( MC0_RDBFL0_type *) 0xf00623b0u)	/* Read Data and Bit Flip Register 8 */
#define MC19_RDBFL9	(*( MC0_RDBFL0_type *) 0xf00623b2u)	/* Read Data and Bit Flip Register 9 */
#define MC1_RDBFL0	(*( MC0_RDBFL0_type *) 0xf00611a0u)	/* Read Data and Bit Flip Register 0 */
#define MC1_RDBFL1	(*( MC0_RDBFL0_type *) 0xf00611a2u)	/* Read Data and Bit Flip Register 1 */
#define MC1_RDBFL10	(*( MC0_RDBFL0_type *) 0xf00611b4u)	/* Read Data and Bit Flip Register 10 */
#define MC1_RDBFL11	(*( MC0_RDBFL0_type *) 0xf00611b6u)	/* Read Data and Bit Flip Register 11 */
#define MC1_RDBFL12	(*( MC0_RDBFL0_type *) 0xf00611b8u)	/* Read Data and Bit Flip Register 12 */
#define MC1_RDBFL13	(*( MC0_RDBFL0_type *) 0xf00611bau)	/* Read Data and Bit Flip Register 13 */
#define MC1_RDBFL14	(*( MC0_RDBFL0_type *) 0xf00611bcu)	/* Read Data and Bit Flip Register 14 */
#define MC1_RDBFL15	(*( MC0_RDBFL0_type *) 0xf00611beu)	/* Read Data and Bit Flip Register 15 */
#define MC1_RDBFL16	(*( MC0_RDBFL0_type *) 0xf00611c0u)	/* Read Data and Bit Flip Register 16 */
#define MC1_RDBFL17	(*( MC0_RDBFL0_type *) 0xf00611c2u)	/* Read Data and Bit Flip Register 17 */
#define MC1_RDBFL18	(*( MC0_RDBFL0_type *) 0xf00611c4u)	/* Read Data and Bit Flip Register 18 */
#define MC1_RDBFL19	(*( MC0_RDBFL0_type *) 0xf00611c6u)	/* Read Data and Bit Flip Register 19 */
#define MC1_RDBFL2	(*( MC0_RDBFL0_type *) 0xf00611a4u)	/* Read Data and Bit Flip Register 2 */
#define MC1_RDBFL20	(*( MC0_RDBFL0_type *) 0xf00611c8u)	/* Read Data and Bit Flip Register 20 */
#define MC1_RDBFL21	(*( MC0_RDBFL0_type *) 0xf00611cau)	/* Read Data and Bit Flip Register 21 */
#define MC1_RDBFL22	(*( MC0_RDBFL0_type *) 0xf00611ccu)	/* Read Data and Bit Flip Register 22 */
#define MC1_RDBFL23	(*( MC0_RDBFL0_type *) 0xf00611ceu)	/* Read Data and Bit Flip Register 23 */
#define MC1_RDBFL24	(*( MC0_RDBFL0_type *) 0xf00611d0u)	/* Read Data and Bit Flip Register 24 */
#define MC1_RDBFL25	(*( MC0_RDBFL0_type *) 0xf00611d2u)	/* Read Data and Bit Flip Register 25 */
#define MC1_RDBFL26	(*( MC0_RDBFL0_type *) 0xf00611d4u)	/* Read Data and Bit Flip Register 26 */
#define MC1_RDBFL27	(*( MC0_RDBFL0_type *) 0xf00611d6u)	/* Read Data and Bit Flip Register 27 */
#define MC1_RDBFL28	(*( MC0_RDBFL0_type *) 0xf00611d8u)	/* Read Data and Bit Flip Register 28 */
#define MC1_RDBFL29	(*( MC0_RDBFL0_type *) 0xf00611dau)	/* Read Data and Bit Flip Register 29 */
#define MC1_RDBFL3	(*( MC0_RDBFL0_type *) 0xf00611a6u)	/* Read Data and Bit Flip Register 3 */
#define MC1_RDBFL30	(*( MC0_RDBFL0_type *) 0xf00611dcu)	/* Read Data and Bit Flip Register 30 */
#define MC1_RDBFL31	(*( MC0_RDBFL0_type *) 0xf00611deu)	/* Read Data and Bit Flip Register 31 */
#define MC1_RDBFL32	(*( MC0_RDBFL0_type *) 0xf00611e0u)	/* Read Data and Bit Flip Register 32 */
#define MC1_RDBFL33	(*( MC0_RDBFL0_type *) 0xf00611e2u)	/* Read Data and Bit Flip Register 33 */
#define MC1_RDBFL34	(*( MC0_RDBFL0_type *) 0xf00611e4u)	/* Read Data and Bit Flip Register 34 */
#define MC1_RDBFL35	(*( MC0_RDBFL0_type *) 0xf00611e6u)	/* Read Data and Bit Flip Register 35 */
#define MC1_RDBFL36	(*( MC0_RDBFL0_type *) 0xf00611e8u)	/* Read Data and Bit Flip Register 36 */
#define MC1_RDBFL37	(*( MC0_RDBFL0_type *) 0xf00611eau)	/* Read Data and Bit Flip Register 37 */
#define MC1_RDBFL38	(*( MC0_RDBFL0_type *) 0xf00611ecu)	/* Read Data and Bit Flip Register 38 */
#define MC1_RDBFL39	(*( MC0_RDBFL0_type *) 0xf00611eeu)	/* Read Data and Bit Flip Register 39 */
#define MC1_RDBFL4	(*( MC0_RDBFL0_type *) 0xf00611a8u)	/* Read Data and Bit Flip Register 4 */
#define MC1_RDBFL5	(*( MC0_RDBFL0_type *) 0xf00611aau)	/* Read Data and Bit Flip Register 5 */
#define MC1_RDBFL6	(*( MC0_RDBFL0_type *) 0xf00611acu)	/* Read Data and Bit Flip Register 6 */
#define MC1_RDBFL7	(*( MC0_RDBFL0_type *) 0xf00611aeu)	/* Read Data and Bit Flip Register 7 */
#define MC1_RDBFL8	(*( MC0_RDBFL0_type *) 0xf00611b0u)	/* Read Data and Bit Flip Register 8 */
#define MC1_RDBFL9	(*( MC0_RDBFL0_type *) 0xf00611b2u)	/* Read Data and Bit Flip Register 9 */
#define MC20_RDBFL0	(*( MC0_RDBFL0_type *) 0xf00624a0u)	/* Read Data and Bit Flip Register 0 */
#define MC20_RDBFL1	(*( MC0_RDBFL0_type *) 0xf00624a2u)	/* Read Data and Bit Flip Register 1 */
#define MC20_RDBFL10	(*( MC0_RDBFL0_type *) 0xf00624b4u)	/* Read Data and Bit Flip Register 10 */
#define MC20_RDBFL11	(*( MC0_RDBFL0_type *) 0xf00624b6u)	/* Read Data and Bit Flip Register 11 */
#define MC20_RDBFL12	(*( MC0_RDBFL0_type *) 0xf00624b8u)	/* Read Data and Bit Flip Register 12 */
#define MC20_RDBFL13	(*( MC0_RDBFL0_type *) 0xf00624bau)	/* Read Data and Bit Flip Register 13 */
#define MC20_RDBFL14	(*( MC0_RDBFL0_type *) 0xf00624bcu)	/* Read Data and Bit Flip Register 14 */
#define MC20_RDBFL15	(*( MC0_RDBFL0_type *) 0xf00624beu)	/* Read Data and Bit Flip Register 15 */
#define MC20_RDBFL16	(*( MC0_RDBFL0_type *) 0xf00624c0u)	/* Read Data and Bit Flip Register 16 */
#define MC20_RDBFL17	(*( MC0_RDBFL0_type *) 0xf00624c2u)	/* Read Data and Bit Flip Register 17 */
#define MC20_RDBFL18	(*( MC0_RDBFL0_type *) 0xf00624c4u)	/* Read Data and Bit Flip Register 18 */
#define MC20_RDBFL19	(*( MC0_RDBFL0_type *) 0xf00624c6u)	/* Read Data and Bit Flip Register 19 */
#define MC20_RDBFL2	(*( MC0_RDBFL0_type *) 0xf00624a4u)	/* Read Data and Bit Flip Register 2 */
#define MC20_RDBFL20	(*( MC0_RDBFL0_type *) 0xf00624c8u)	/* Read Data and Bit Flip Register 20 */
#define MC20_RDBFL21	(*( MC0_RDBFL0_type *) 0xf00624cau)	/* Read Data and Bit Flip Register 21 */
#define MC20_RDBFL22	(*( MC0_RDBFL0_type *) 0xf00624ccu)	/* Read Data and Bit Flip Register 22 */
#define MC20_RDBFL23	(*( MC0_RDBFL0_type *) 0xf00624ceu)	/* Read Data and Bit Flip Register 23 */
#define MC20_RDBFL24	(*( MC0_RDBFL0_type *) 0xf00624d0u)	/* Read Data and Bit Flip Register 24 */
#define MC20_RDBFL25	(*( MC0_RDBFL0_type *) 0xf00624d2u)	/* Read Data and Bit Flip Register 25 */
#define MC20_RDBFL26	(*( MC0_RDBFL0_type *) 0xf00624d4u)	/* Read Data and Bit Flip Register 26 */
#define MC20_RDBFL27	(*( MC0_RDBFL0_type *) 0xf00624d6u)	/* Read Data and Bit Flip Register 27 */
#define MC20_RDBFL28	(*( MC0_RDBFL0_type *) 0xf00624d8u)	/* Read Data and Bit Flip Register 28 */
#define MC20_RDBFL29	(*( MC0_RDBFL0_type *) 0xf00624dau)	/* Read Data and Bit Flip Register 29 */
#define MC20_RDBFL3	(*( MC0_RDBFL0_type *) 0xf00624a6u)	/* Read Data and Bit Flip Register 3 */
#define MC20_RDBFL30	(*( MC0_RDBFL0_type *) 0xf00624dcu)	/* Read Data and Bit Flip Register 30 */
#define MC20_RDBFL31	(*( MC0_RDBFL0_type *) 0xf00624deu)	/* Read Data and Bit Flip Register 31 */
#define MC20_RDBFL32	(*( MC0_RDBFL0_type *) 0xf00624e0u)	/* Read Data and Bit Flip Register 32 */
#define MC20_RDBFL33	(*( MC0_RDBFL0_type *) 0xf00624e2u)	/* Read Data and Bit Flip Register 33 */
#define MC20_RDBFL34	(*( MC0_RDBFL0_type *) 0xf00624e4u)	/* Read Data and Bit Flip Register 34 */
#define MC20_RDBFL35	(*( MC0_RDBFL0_type *) 0xf00624e6u)	/* Read Data and Bit Flip Register 35 */
#define MC20_RDBFL36	(*( MC0_RDBFL0_type *) 0xf00624e8u)	/* Read Data and Bit Flip Register 36 */
#define MC20_RDBFL37	(*( MC0_RDBFL0_type *) 0xf00624eau)	/* Read Data and Bit Flip Register 37 */
#define MC20_RDBFL38	(*( MC0_RDBFL0_type *) 0xf00624ecu)	/* Read Data and Bit Flip Register 38 */
#define MC20_RDBFL39	(*( MC0_RDBFL0_type *) 0xf00624eeu)	/* Read Data and Bit Flip Register 39 */
#define MC20_RDBFL4	(*( MC0_RDBFL0_type *) 0xf00624a8u)	/* Read Data and Bit Flip Register 4 */
#define MC20_RDBFL5	(*( MC0_RDBFL0_type *) 0xf00624aau)	/* Read Data and Bit Flip Register 5 */
#define MC20_RDBFL6	(*( MC0_RDBFL0_type *) 0xf00624acu)	/* Read Data and Bit Flip Register 6 */
#define MC20_RDBFL7	(*( MC0_RDBFL0_type *) 0xf00624aeu)	/* Read Data and Bit Flip Register 7 */
#define MC20_RDBFL8	(*( MC0_RDBFL0_type *) 0xf00624b0u)	/* Read Data and Bit Flip Register 8 */
#define MC20_RDBFL9	(*( MC0_RDBFL0_type *) 0xf00624b2u)	/* Read Data and Bit Flip Register 9 */
#define MC21_RDBFL0	(*( MC0_RDBFL0_type *) 0xf00625a0u)	/* Read Data and Bit Flip Register 0 */
#define MC21_RDBFL1	(*( MC0_RDBFL0_type *) 0xf00625a2u)	/* Read Data and Bit Flip Register 1 */
#define MC21_RDBFL10	(*( MC0_RDBFL0_type *) 0xf00625b4u)	/* Read Data and Bit Flip Register 10 */
#define MC21_RDBFL11	(*( MC0_RDBFL0_type *) 0xf00625b6u)	/* Read Data and Bit Flip Register 11 */
#define MC21_RDBFL12	(*( MC0_RDBFL0_type *) 0xf00625b8u)	/* Read Data and Bit Flip Register 12 */
#define MC21_RDBFL13	(*( MC0_RDBFL0_type *) 0xf00625bau)	/* Read Data and Bit Flip Register 13 */
#define MC21_RDBFL14	(*( MC0_RDBFL0_type *) 0xf00625bcu)	/* Read Data and Bit Flip Register 14 */
#define MC21_RDBFL15	(*( MC0_RDBFL0_type *) 0xf00625beu)	/* Read Data and Bit Flip Register 15 */
#define MC21_RDBFL16	(*( MC0_RDBFL0_type *) 0xf00625c0u)	/* Read Data and Bit Flip Register 16 */
#define MC21_RDBFL17	(*( MC0_RDBFL0_type *) 0xf00625c2u)	/* Read Data and Bit Flip Register 17 */
#define MC21_RDBFL18	(*( MC0_RDBFL0_type *) 0xf00625c4u)	/* Read Data and Bit Flip Register 18 */
#define MC21_RDBFL19	(*( MC0_RDBFL0_type *) 0xf00625c6u)	/* Read Data and Bit Flip Register 19 */
#define MC21_RDBFL2	(*( MC0_RDBFL0_type *) 0xf00625a4u)	/* Read Data and Bit Flip Register 2 */
#define MC21_RDBFL20	(*( MC0_RDBFL0_type *) 0xf00625c8u)	/* Read Data and Bit Flip Register 20 */
#define MC21_RDBFL21	(*( MC0_RDBFL0_type *) 0xf00625cau)	/* Read Data and Bit Flip Register 21 */
#define MC21_RDBFL22	(*( MC0_RDBFL0_type *) 0xf00625ccu)	/* Read Data and Bit Flip Register 22 */
#define MC21_RDBFL23	(*( MC0_RDBFL0_type *) 0xf00625ceu)	/* Read Data and Bit Flip Register 23 */
#define MC21_RDBFL24	(*( MC0_RDBFL0_type *) 0xf00625d0u)	/* Read Data and Bit Flip Register 24 */
#define MC21_RDBFL25	(*( MC0_RDBFL0_type *) 0xf00625d2u)	/* Read Data and Bit Flip Register 25 */
#define MC21_RDBFL26	(*( MC0_RDBFL0_type *) 0xf00625d4u)	/* Read Data and Bit Flip Register 26 */
#define MC21_RDBFL27	(*( MC0_RDBFL0_type *) 0xf00625d6u)	/* Read Data and Bit Flip Register 27 */
#define MC21_RDBFL28	(*( MC0_RDBFL0_type *) 0xf00625d8u)	/* Read Data and Bit Flip Register 28 */
#define MC21_RDBFL29	(*( MC0_RDBFL0_type *) 0xf00625dau)	/* Read Data and Bit Flip Register 29 */
#define MC21_RDBFL3	(*( MC0_RDBFL0_type *) 0xf00625a6u)	/* Read Data and Bit Flip Register 3 */
#define MC21_RDBFL30	(*( MC0_RDBFL0_type *) 0xf00625dcu)	/* Read Data and Bit Flip Register 30 */
#define MC21_RDBFL31	(*( MC0_RDBFL0_type *) 0xf00625deu)	/* Read Data and Bit Flip Register 31 */
#define MC21_RDBFL32	(*( MC0_RDBFL0_type *) 0xf00625e0u)	/* Read Data and Bit Flip Register 32 */
#define MC21_RDBFL33	(*( MC0_RDBFL0_type *) 0xf00625e2u)	/* Read Data and Bit Flip Register 33 */
#define MC21_RDBFL34	(*( MC0_RDBFL0_type *) 0xf00625e4u)	/* Read Data and Bit Flip Register 34 */
#define MC21_RDBFL35	(*( MC0_RDBFL0_type *) 0xf00625e6u)	/* Read Data and Bit Flip Register 35 */
#define MC21_RDBFL36	(*( MC0_RDBFL0_type *) 0xf00625e8u)	/* Read Data and Bit Flip Register 36 */
#define MC21_RDBFL37	(*( MC0_RDBFL0_type *) 0xf00625eau)	/* Read Data and Bit Flip Register 37 */
#define MC21_RDBFL38	(*( MC0_RDBFL0_type *) 0xf00625ecu)	/* Read Data and Bit Flip Register 38 */
#define MC21_RDBFL39	(*( MC0_RDBFL0_type *) 0xf00625eeu)	/* Read Data and Bit Flip Register 39 */
#define MC21_RDBFL4	(*( MC0_RDBFL0_type *) 0xf00625a8u)	/* Read Data and Bit Flip Register 4 */
#define MC21_RDBFL5	(*( MC0_RDBFL0_type *) 0xf00625aau)	/* Read Data and Bit Flip Register 5 */
#define MC21_RDBFL6	(*( MC0_RDBFL0_type *) 0xf00625acu)	/* Read Data and Bit Flip Register 6 */
#define MC21_RDBFL7	(*( MC0_RDBFL0_type *) 0xf00625aeu)	/* Read Data and Bit Flip Register 7 */
#define MC21_RDBFL8	(*( MC0_RDBFL0_type *) 0xf00625b0u)	/* Read Data and Bit Flip Register 8 */
#define MC21_RDBFL9	(*( MC0_RDBFL0_type *) 0xf00625b2u)	/* Read Data and Bit Flip Register 9 */
#define MC22_RDBFL0	(*( MC0_RDBFL0_type *) 0xf00626a0u)	/* Read Data and Bit Flip Register 0 */
#define MC22_RDBFL1	(*( MC0_RDBFL0_type *) 0xf00626a2u)	/* Read Data and Bit Flip Register 1 */
#define MC22_RDBFL10	(*( MC0_RDBFL0_type *) 0xf00626b4u)	/* Read Data and Bit Flip Register 10 */
#define MC22_RDBFL11	(*( MC0_RDBFL0_type *) 0xf00626b6u)	/* Read Data and Bit Flip Register 11 */
#define MC22_RDBFL12	(*( MC0_RDBFL0_type *) 0xf00626b8u)	/* Read Data and Bit Flip Register 12 */
#define MC22_RDBFL13	(*( MC0_RDBFL0_type *) 0xf00626bau)	/* Read Data and Bit Flip Register 13 */
#define MC22_RDBFL14	(*( MC0_RDBFL0_type *) 0xf00626bcu)	/* Read Data and Bit Flip Register 14 */
#define MC22_RDBFL15	(*( MC0_RDBFL0_type *) 0xf00626beu)	/* Read Data and Bit Flip Register 15 */
#define MC22_RDBFL16	(*( MC0_RDBFL0_type *) 0xf00626c0u)	/* Read Data and Bit Flip Register 16 */
#define MC22_RDBFL17	(*( MC0_RDBFL0_type *) 0xf00626c2u)	/* Read Data and Bit Flip Register 17 */
#define MC22_RDBFL18	(*( MC0_RDBFL0_type *) 0xf00626c4u)	/* Read Data and Bit Flip Register 18 */
#define MC22_RDBFL19	(*( MC0_RDBFL0_type *) 0xf00626c6u)	/* Read Data and Bit Flip Register 19 */
#define MC22_RDBFL2	(*( MC0_RDBFL0_type *) 0xf00626a4u)	/* Read Data and Bit Flip Register 2 */
#define MC22_RDBFL20	(*( MC0_RDBFL0_type *) 0xf00626c8u)	/* Read Data and Bit Flip Register 20 */
#define MC22_RDBFL21	(*( MC0_RDBFL0_type *) 0xf00626cau)	/* Read Data and Bit Flip Register 21 */
#define MC22_RDBFL22	(*( MC0_RDBFL0_type *) 0xf00626ccu)	/* Read Data and Bit Flip Register 22 */
#define MC22_RDBFL23	(*( MC0_RDBFL0_type *) 0xf00626ceu)	/* Read Data and Bit Flip Register 23 */
#define MC22_RDBFL24	(*( MC0_RDBFL0_type *) 0xf00626d0u)	/* Read Data and Bit Flip Register 24 */
#define MC22_RDBFL25	(*( MC0_RDBFL0_type *) 0xf00626d2u)	/* Read Data and Bit Flip Register 25 */
#define MC22_RDBFL26	(*( MC0_RDBFL0_type *) 0xf00626d4u)	/* Read Data and Bit Flip Register 26 */
#define MC22_RDBFL27	(*( MC0_RDBFL0_type *) 0xf00626d6u)	/* Read Data and Bit Flip Register 27 */
#define MC22_RDBFL28	(*( MC0_RDBFL0_type *) 0xf00626d8u)	/* Read Data and Bit Flip Register 28 */
#define MC22_RDBFL29	(*( MC0_RDBFL0_type *) 0xf00626dau)	/* Read Data and Bit Flip Register 29 */
#define MC22_RDBFL3	(*( MC0_RDBFL0_type *) 0xf00626a6u)	/* Read Data and Bit Flip Register 3 */
#define MC22_RDBFL30	(*( MC0_RDBFL0_type *) 0xf00626dcu)	/* Read Data and Bit Flip Register 30 */
#define MC22_RDBFL31	(*( MC0_RDBFL0_type *) 0xf00626deu)	/* Read Data and Bit Flip Register 31 */
#define MC22_RDBFL32	(*( MC0_RDBFL0_type *) 0xf00626e0u)	/* Read Data and Bit Flip Register 32 */
#define MC22_RDBFL33	(*( MC0_RDBFL0_type *) 0xf00626e2u)	/* Read Data and Bit Flip Register 33 */
#define MC22_RDBFL34	(*( MC0_RDBFL0_type *) 0xf00626e4u)	/* Read Data and Bit Flip Register 34 */
#define MC22_RDBFL35	(*( MC0_RDBFL0_type *) 0xf00626e6u)	/* Read Data and Bit Flip Register 35 */
#define MC22_RDBFL36	(*( MC0_RDBFL0_type *) 0xf00626e8u)	/* Read Data and Bit Flip Register 36 */
#define MC22_RDBFL37	(*( MC0_RDBFL0_type *) 0xf00626eau)	/* Read Data and Bit Flip Register 37 */
#define MC22_RDBFL38	(*( MC0_RDBFL0_type *) 0xf00626ecu)	/* Read Data and Bit Flip Register 38 */
#define MC22_RDBFL39	(*( MC0_RDBFL0_type *) 0xf00626eeu)	/* Read Data and Bit Flip Register 39 */
#define MC22_RDBFL4	(*( MC0_RDBFL0_type *) 0xf00626a8u)	/* Read Data and Bit Flip Register 4 */
#define MC22_RDBFL5	(*( MC0_RDBFL0_type *) 0xf00626aau)	/* Read Data and Bit Flip Register 5 */
#define MC22_RDBFL6	(*( MC0_RDBFL0_type *) 0xf00626acu)	/* Read Data and Bit Flip Register 6 */
#define MC22_RDBFL7	(*( MC0_RDBFL0_type *) 0xf00626aeu)	/* Read Data and Bit Flip Register 7 */
#define MC22_RDBFL8	(*( MC0_RDBFL0_type *) 0xf00626b0u)	/* Read Data and Bit Flip Register 8 */
#define MC22_RDBFL9	(*( MC0_RDBFL0_type *) 0xf00626b2u)	/* Read Data and Bit Flip Register 9 */
#define MC23_RDBFL0	(*( MC0_RDBFL0_type *) 0xf00627a0u)	/* Read Data and Bit Flip Register 0 */
#define MC23_RDBFL1	(*( MC0_RDBFL0_type *) 0xf00627a2u)	/* Read Data and Bit Flip Register 1 */
#define MC23_RDBFL10	(*( MC0_RDBFL0_type *) 0xf00627b4u)	/* Read Data and Bit Flip Register 10 */
#define MC23_RDBFL11	(*( MC0_RDBFL0_type *) 0xf00627b6u)	/* Read Data and Bit Flip Register 11 */
#define MC23_RDBFL12	(*( MC0_RDBFL0_type *) 0xf00627b8u)	/* Read Data and Bit Flip Register 12 */
#define MC23_RDBFL13	(*( MC0_RDBFL0_type *) 0xf00627bau)	/* Read Data and Bit Flip Register 13 */
#define MC23_RDBFL14	(*( MC0_RDBFL0_type *) 0xf00627bcu)	/* Read Data and Bit Flip Register 14 */
#define MC23_RDBFL15	(*( MC0_RDBFL0_type *) 0xf00627beu)	/* Read Data and Bit Flip Register 15 */
#define MC23_RDBFL16	(*( MC0_RDBFL0_type *) 0xf00627c0u)	/* Read Data and Bit Flip Register 16 */
#define MC23_RDBFL17	(*( MC0_RDBFL0_type *) 0xf00627c2u)	/* Read Data and Bit Flip Register 17 */
#define MC23_RDBFL18	(*( MC0_RDBFL0_type *) 0xf00627c4u)	/* Read Data and Bit Flip Register 18 */
#define MC23_RDBFL19	(*( MC0_RDBFL0_type *) 0xf00627c6u)	/* Read Data and Bit Flip Register 19 */
#define MC23_RDBFL2	(*( MC0_RDBFL0_type *) 0xf00627a4u)	/* Read Data and Bit Flip Register 2 */
#define MC23_RDBFL20	(*( MC0_RDBFL0_type *) 0xf00627c8u)	/* Read Data and Bit Flip Register 20 */
#define MC23_RDBFL21	(*( MC0_RDBFL0_type *) 0xf00627cau)	/* Read Data and Bit Flip Register 21 */
#define MC23_RDBFL22	(*( MC0_RDBFL0_type *) 0xf00627ccu)	/* Read Data and Bit Flip Register 22 */
#define MC23_RDBFL23	(*( MC0_RDBFL0_type *) 0xf00627ceu)	/* Read Data and Bit Flip Register 23 */
#define MC23_RDBFL24	(*( MC0_RDBFL0_type *) 0xf00627d0u)	/* Read Data and Bit Flip Register 24 */
#define MC23_RDBFL25	(*( MC0_RDBFL0_type *) 0xf00627d2u)	/* Read Data and Bit Flip Register 25 */
#define MC23_RDBFL26	(*( MC0_RDBFL0_type *) 0xf00627d4u)	/* Read Data and Bit Flip Register 26 */
#define MC23_RDBFL27	(*( MC0_RDBFL0_type *) 0xf00627d6u)	/* Read Data and Bit Flip Register 27 */
#define MC23_RDBFL28	(*( MC0_RDBFL0_type *) 0xf00627d8u)	/* Read Data and Bit Flip Register 28 */
#define MC23_RDBFL29	(*( MC0_RDBFL0_type *) 0xf00627dau)	/* Read Data and Bit Flip Register 29 */
#define MC23_RDBFL3	(*( MC0_RDBFL0_type *) 0xf00627a6u)	/* Read Data and Bit Flip Register 3 */
#define MC23_RDBFL30	(*( MC0_RDBFL0_type *) 0xf00627dcu)	/* Read Data and Bit Flip Register 30 */
#define MC23_RDBFL31	(*( MC0_RDBFL0_type *) 0xf00627deu)	/* Read Data and Bit Flip Register 31 */
#define MC23_RDBFL32	(*( MC0_RDBFL0_type *) 0xf00627e0u)	/* Read Data and Bit Flip Register 32 */
#define MC23_RDBFL33	(*( MC0_RDBFL0_type *) 0xf00627e2u)	/* Read Data and Bit Flip Register 33 */
#define MC23_RDBFL34	(*( MC0_RDBFL0_type *) 0xf00627e4u)	/* Read Data and Bit Flip Register 34 */
#define MC23_RDBFL35	(*( MC0_RDBFL0_type *) 0xf00627e6u)	/* Read Data and Bit Flip Register 35 */
#define MC23_RDBFL36	(*( MC0_RDBFL0_type *) 0xf00627e8u)	/* Read Data and Bit Flip Register 36 */
#define MC23_RDBFL37	(*( MC0_RDBFL0_type *) 0xf00627eau)	/* Read Data and Bit Flip Register 37 */
#define MC23_RDBFL38	(*( MC0_RDBFL0_type *) 0xf00627ecu)	/* Read Data and Bit Flip Register 38 */
#define MC23_RDBFL39	(*( MC0_RDBFL0_type *) 0xf00627eeu)	/* Read Data and Bit Flip Register 39 */
#define MC23_RDBFL4	(*( MC0_RDBFL0_type *) 0xf00627a8u)	/* Read Data and Bit Flip Register 4 */
#define MC23_RDBFL5	(*( MC0_RDBFL0_type *) 0xf00627aau)	/* Read Data and Bit Flip Register 5 */
#define MC23_RDBFL6	(*( MC0_RDBFL0_type *) 0xf00627acu)	/* Read Data and Bit Flip Register 6 */
#define MC23_RDBFL7	(*( MC0_RDBFL0_type *) 0xf00627aeu)	/* Read Data and Bit Flip Register 7 */
#define MC23_RDBFL8	(*( MC0_RDBFL0_type *) 0xf00627b0u)	/* Read Data and Bit Flip Register 8 */
#define MC23_RDBFL9	(*( MC0_RDBFL0_type *) 0xf00627b2u)	/* Read Data and Bit Flip Register 9 */
#define MC24_RDBFL0	(*( MC0_RDBFL0_type *) 0xf00628a0u)	/* Read Data and Bit Flip Register 0 */
#define MC24_RDBFL1	(*( MC0_RDBFL0_type *) 0xf00628a2u)	/* Read Data and Bit Flip Register 1 */
#define MC24_RDBFL10	(*( MC0_RDBFL0_type *) 0xf00628b4u)	/* Read Data and Bit Flip Register 10 */
#define MC24_RDBFL11	(*( MC0_RDBFL0_type *) 0xf00628b6u)	/* Read Data and Bit Flip Register 11 */
#define MC24_RDBFL12	(*( MC0_RDBFL0_type *) 0xf00628b8u)	/* Read Data and Bit Flip Register 12 */
#define MC24_RDBFL13	(*( MC0_RDBFL0_type *) 0xf00628bau)	/* Read Data and Bit Flip Register 13 */
#define MC24_RDBFL14	(*( MC0_RDBFL0_type *) 0xf00628bcu)	/* Read Data and Bit Flip Register 14 */
#define MC24_RDBFL15	(*( MC0_RDBFL0_type *) 0xf00628beu)	/* Read Data and Bit Flip Register 15 */
#define MC24_RDBFL16	(*( MC0_RDBFL0_type *) 0xf00628c0u)	/* Read Data and Bit Flip Register 16 */
#define MC24_RDBFL17	(*( MC0_RDBFL0_type *) 0xf00628c2u)	/* Read Data and Bit Flip Register 17 */
#define MC24_RDBFL18	(*( MC0_RDBFL0_type *) 0xf00628c4u)	/* Read Data and Bit Flip Register 18 */
#define MC24_RDBFL19	(*( MC0_RDBFL0_type *) 0xf00628c6u)	/* Read Data and Bit Flip Register 19 */
#define MC24_RDBFL2	(*( MC0_RDBFL0_type *) 0xf00628a4u)	/* Read Data and Bit Flip Register 2 */
#define MC24_RDBFL20	(*( MC0_RDBFL0_type *) 0xf00628c8u)	/* Read Data and Bit Flip Register 20 */
#define MC24_RDBFL21	(*( MC0_RDBFL0_type *) 0xf00628cau)	/* Read Data and Bit Flip Register 21 */
#define MC24_RDBFL22	(*( MC0_RDBFL0_type *) 0xf00628ccu)	/* Read Data and Bit Flip Register 22 */
#define MC24_RDBFL23	(*( MC0_RDBFL0_type *) 0xf00628ceu)	/* Read Data and Bit Flip Register 23 */
#define MC24_RDBFL24	(*( MC0_RDBFL0_type *) 0xf00628d0u)	/* Read Data and Bit Flip Register 24 */
#define MC24_RDBFL25	(*( MC0_RDBFL0_type *) 0xf00628d2u)	/* Read Data and Bit Flip Register 25 */
#define MC24_RDBFL26	(*( MC0_RDBFL0_type *) 0xf00628d4u)	/* Read Data and Bit Flip Register 26 */
#define MC24_RDBFL27	(*( MC0_RDBFL0_type *) 0xf00628d6u)	/* Read Data and Bit Flip Register 27 */
#define MC24_RDBFL28	(*( MC0_RDBFL0_type *) 0xf00628d8u)	/* Read Data and Bit Flip Register 28 */
#define MC24_RDBFL29	(*( MC0_RDBFL0_type *) 0xf00628dau)	/* Read Data and Bit Flip Register 29 */
#define MC24_RDBFL3	(*( MC0_RDBFL0_type *) 0xf00628a6u)	/* Read Data and Bit Flip Register 3 */
#define MC24_RDBFL30	(*( MC0_RDBFL0_type *) 0xf00628dcu)	/* Read Data and Bit Flip Register 30 */
#define MC24_RDBFL31	(*( MC0_RDBFL0_type *) 0xf00628deu)	/* Read Data and Bit Flip Register 31 */
#define MC24_RDBFL32	(*( MC0_RDBFL0_type *) 0xf00628e0u)	/* Read Data and Bit Flip Register 32 */
#define MC24_RDBFL33	(*( MC0_RDBFL0_type *) 0xf00628e2u)	/* Read Data and Bit Flip Register 33 */
#define MC24_RDBFL34	(*( MC0_RDBFL0_type *) 0xf00628e4u)	/* Read Data and Bit Flip Register 34 */
#define MC24_RDBFL35	(*( MC0_RDBFL0_type *) 0xf00628e6u)	/* Read Data and Bit Flip Register 35 */
#define MC24_RDBFL36	(*( MC0_RDBFL0_type *) 0xf00628e8u)	/* Read Data and Bit Flip Register 36 */
#define MC24_RDBFL37	(*( MC0_RDBFL0_type *) 0xf00628eau)	/* Read Data and Bit Flip Register 37 */
#define MC24_RDBFL38	(*( MC0_RDBFL0_type *) 0xf00628ecu)	/* Read Data and Bit Flip Register 38 */
#define MC24_RDBFL39	(*( MC0_RDBFL0_type *) 0xf00628eeu)	/* Read Data and Bit Flip Register 39 */
#define MC24_RDBFL4	(*( MC0_RDBFL0_type *) 0xf00628a8u)	/* Read Data and Bit Flip Register 4 */
#define MC24_RDBFL5	(*( MC0_RDBFL0_type *) 0xf00628aau)	/* Read Data and Bit Flip Register 5 */
#define MC24_RDBFL6	(*( MC0_RDBFL0_type *) 0xf00628acu)	/* Read Data and Bit Flip Register 6 */
#define MC24_RDBFL7	(*( MC0_RDBFL0_type *) 0xf00628aeu)	/* Read Data and Bit Flip Register 7 */
#define MC24_RDBFL8	(*( MC0_RDBFL0_type *) 0xf00628b0u)	/* Read Data and Bit Flip Register 8 */
#define MC24_RDBFL9	(*( MC0_RDBFL0_type *) 0xf00628b2u)	/* Read Data and Bit Flip Register 9 */
#define MC25_RDBFL0	(*( MC0_RDBFL0_type *) 0xf00629a0u)	/* Read Data and Bit Flip Register 0 */
#define MC25_RDBFL1	(*( MC0_RDBFL0_type *) 0xf00629a2u)	/* Read Data and Bit Flip Register 1 */
#define MC25_RDBFL10	(*( MC0_RDBFL0_type *) 0xf00629b4u)	/* Read Data and Bit Flip Register 10 */
#define MC25_RDBFL11	(*( MC0_RDBFL0_type *) 0xf00629b6u)	/* Read Data and Bit Flip Register 11 */
#define MC25_RDBFL12	(*( MC0_RDBFL0_type *) 0xf00629b8u)	/* Read Data and Bit Flip Register 12 */
#define MC25_RDBFL13	(*( MC0_RDBFL0_type *) 0xf00629bau)	/* Read Data and Bit Flip Register 13 */
#define MC25_RDBFL14	(*( MC0_RDBFL0_type *) 0xf00629bcu)	/* Read Data and Bit Flip Register 14 */
#define MC25_RDBFL15	(*( MC0_RDBFL0_type *) 0xf00629beu)	/* Read Data and Bit Flip Register 15 */
#define MC25_RDBFL16	(*( MC0_RDBFL0_type *) 0xf00629c0u)	/* Read Data and Bit Flip Register 16 */
#define MC25_RDBFL17	(*( MC0_RDBFL0_type *) 0xf00629c2u)	/* Read Data and Bit Flip Register 17 */
#define MC25_RDBFL18	(*( MC0_RDBFL0_type *) 0xf00629c4u)	/* Read Data and Bit Flip Register 18 */
#define MC25_RDBFL19	(*( MC0_RDBFL0_type *) 0xf00629c6u)	/* Read Data and Bit Flip Register 19 */
#define MC25_RDBFL2	(*( MC0_RDBFL0_type *) 0xf00629a4u)	/* Read Data and Bit Flip Register 2 */
#define MC25_RDBFL20	(*( MC0_RDBFL0_type *) 0xf00629c8u)	/* Read Data and Bit Flip Register 20 */
#define MC25_RDBFL21	(*( MC0_RDBFL0_type *) 0xf00629cau)	/* Read Data and Bit Flip Register 21 */
#define MC25_RDBFL22	(*( MC0_RDBFL0_type *) 0xf00629ccu)	/* Read Data and Bit Flip Register 22 */
#define MC25_RDBFL23	(*( MC0_RDBFL0_type *) 0xf00629ceu)	/* Read Data and Bit Flip Register 23 */
#define MC25_RDBFL24	(*( MC0_RDBFL0_type *) 0xf00629d0u)	/* Read Data and Bit Flip Register 24 */
#define MC25_RDBFL25	(*( MC0_RDBFL0_type *) 0xf00629d2u)	/* Read Data and Bit Flip Register 25 */
#define MC25_RDBFL26	(*( MC0_RDBFL0_type *) 0xf00629d4u)	/* Read Data and Bit Flip Register 26 */
#define MC25_RDBFL27	(*( MC0_RDBFL0_type *) 0xf00629d6u)	/* Read Data and Bit Flip Register 27 */
#define MC25_RDBFL28	(*( MC0_RDBFL0_type *) 0xf00629d8u)	/* Read Data and Bit Flip Register 28 */
#define MC25_RDBFL29	(*( MC0_RDBFL0_type *) 0xf00629dau)	/* Read Data and Bit Flip Register 29 */
#define MC25_RDBFL3	(*( MC0_RDBFL0_type *) 0xf00629a6u)	/* Read Data and Bit Flip Register 3 */
#define MC25_RDBFL30	(*( MC0_RDBFL0_type *) 0xf00629dcu)	/* Read Data and Bit Flip Register 30 */
#define MC25_RDBFL31	(*( MC0_RDBFL0_type *) 0xf00629deu)	/* Read Data and Bit Flip Register 31 */
#define MC25_RDBFL32	(*( MC0_RDBFL0_type *) 0xf00629e0u)	/* Read Data and Bit Flip Register 32 */
#define MC25_RDBFL33	(*( MC0_RDBFL0_type *) 0xf00629e2u)	/* Read Data and Bit Flip Register 33 */
#define MC25_RDBFL34	(*( MC0_RDBFL0_type *) 0xf00629e4u)	/* Read Data and Bit Flip Register 34 */
#define MC25_RDBFL35	(*( MC0_RDBFL0_type *) 0xf00629e6u)	/* Read Data and Bit Flip Register 35 */
#define MC25_RDBFL36	(*( MC0_RDBFL0_type *) 0xf00629e8u)	/* Read Data and Bit Flip Register 36 */
#define MC25_RDBFL37	(*( MC0_RDBFL0_type *) 0xf00629eau)	/* Read Data and Bit Flip Register 37 */
#define MC25_RDBFL38	(*( MC0_RDBFL0_type *) 0xf00629ecu)	/* Read Data and Bit Flip Register 38 */
#define MC25_RDBFL39	(*( MC0_RDBFL0_type *) 0xf00629eeu)	/* Read Data and Bit Flip Register 39 */
#define MC25_RDBFL4	(*( MC0_RDBFL0_type *) 0xf00629a8u)	/* Read Data and Bit Flip Register 4 */
#define MC25_RDBFL5	(*( MC0_RDBFL0_type *) 0xf00629aau)	/* Read Data and Bit Flip Register 5 */
#define MC25_RDBFL6	(*( MC0_RDBFL0_type *) 0xf00629acu)	/* Read Data and Bit Flip Register 6 */
#define MC25_RDBFL7	(*( MC0_RDBFL0_type *) 0xf00629aeu)	/* Read Data and Bit Flip Register 7 */
#define MC25_RDBFL8	(*( MC0_RDBFL0_type *) 0xf00629b0u)	/* Read Data and Bit Flip Register 8 */
#define MC25_RDBFL9	(*( MC0_RDBFL0_type *) 0xf00629b2u)	/* Read Data and Bit Flip Register 9 */
#define MC26_RDBFL0	(*( MC0_RDBFL0_type *) 0xf0062aa0u)	/* Read Data and Bit Flip Register 0 */
#define MC26_RDBFL1	(*( MC0_RDBFL0_type *) 0xf0062aa2u)	/* Read Data and Bit Flip Register 1 */
#define MC26_RDBFL10	(*( MC0_RDBFL0_type *) 0xf0062ab4u)	/* Read Data and Bit Flip Register 10 */
#define MC26_RDBFL11	(*( MC0_RDBFL0_type *) 0xf0062ab6u)	/* Read Data and Bit Flip Register 11 */
#define MC26_RDBFL12	(*( MC0_RDBFL0_type *) 0xf0062ab8u)	/* Read Data and Bit Flip Register 12 */
#define MC26_RDBFL13	(*( MC0_RDBFL0_type *) 0xf0062abau)	/* Read Data and Bit Flip Register 13 */
#define MC26_RDBFL14	(*( MC0_RDBFL0_type *) 0xf0062abcu)	/* Read Data and Bit Flip Register 14 */
#define MC26_RDBFL15	(*( MC0_RDBFL0_type *) 0xf0062abeu)	/* Read Data and Bit Flip Register 15 */
#define MC26_RDBFL16	(*( MC0_RDBFL0_type *) 0xf0062ac0u)	/* Read Data and Bit Flip Register 16 */
#define MC26_RDBFL17	(*( MC0_RDBFL0_type *) 0xf0062ac2u)	/* Read Data and Bit Flip Register 17 */
#define MC26_RDBFL18	(*( MC0_RDBFL0_type *) 0xf0062ac4u)	/* Read Data and Bit Flip Register 18 */
#define MC26_RDBFL19	(*( MC0_RDBFL0_type *) 0xf0062ac6u)	/* Read Data and Bit Flip Register 19 */
#define MC26_RDBFL2	(*( MC0_RDBFL0_type *) 0xf0062aa4u)	/* Read Data and Bit Flip Register 2 */
#define MC26_RDBFL20	(*( MC0_RDBFL0_type *) 0xf0062ac8u)	/* Read Data and Bit Flip Register 20 */
#define MC26_RDBFL21	(*( MC0_RDBFL0_type *) 0xf0062acau)	/* Read Data and Bit Flip Register 21 */
#define MC26_RDBFL22	(*( MC0_RDBFL0_type *) 0xf0062accu)	/* Read Data and Bit Flip Register 22 */
#define MC26_RDBFL23	(*( MC0_RDBFL0_type *) 0xf0062aceu)	/* Read Data and Bit Flip Register 23 */
#define MC26_RDBFL24	(*( MC0_RDBFL0_type *) 0xf0062ad0u)	/* Read Data and Bit Flip Register 24 */
#define MC26_RDBFL25	(*( MC0_RDBFL0_type *) 0xf0062ad2u)	/* Read Data and Bit Flip Register 25 */
#define MC26_RDBFL26	(*( MC0_RDBFL0_type *) 0xf0062ad4u)	/* Read Data and Bit Flip Register 26 */
#define MC26_RDBFL27	(*( MC0_RDBFL0_type *) 0xf0062ad6u)	/* Read Data and Bit Flip Register 27 */
#define MC26_RDBFL28	(*( MC0_RDBFL0_type *) 0xf0062ad8u)	/* Read Data and Bit Flip Register 28 */
#define MC26_RDBFL29	(*( MC0_RDBFL0_type *) 0xf0062adau)	/* Read Data and Bit Flip Register 29 */
#define MC26_RDBFL3	(*( MC0_RDBFL0_type *) 0xf0062aa6u)	/* Read Data and Bit Flip Register 3 */
#define MC26_RDBFL30	(*( MC0_RDBFL0_type *) 0xf0062adcu)	/* Read Data and Bit Flip Register 30 */
#define MC26_RDBFL31	(*( MC0_RDBFL0_type *) 0xf0062adeu)	/* Read Data and Bit Flip Register 31 */
#define MC26_RDBFL32	(*( MC0_RDBFL0_type *) 0xf0062ae0u)	/* Read Data and Bit Flip Register 32 */
#define MC26_RDBFL33	(*( MC0_RDBFL0_type *) 0xf0062ae2u)	/* Read Data and Bit Flip Register 33 */
#define MC26_RDBFL34	(*( MC0_RDBFL0_type *) 0xf0062ae4u)	/* Read Data and Bit Flip Register 34 */
#define MC26_RDBFL35	(*( MC0_RDBFL0_type *) 0xf0062ae6u)	/* Read Data and Bit Flip Register 35 */
#define MC26_RDBFL36	(*( MC0_RDBFL0_type *) 0xf0062ae8u)	/* Read Data and Bit Flip Register 36 */
#define MC26_RDBFL37	(*( MC0_RDBFL0_type *) 0xf0062aeau)	/* Read Data and Bit Flip Register 37 */
#define MC26_RDBFL38	(*( MC0_RDBFL0_type *) 0xf0062aecu)	/* Read Data and Bit Flip Register 38 */
#define MC26_RDBFL39	(*( MC0_RDBFL0_type *) 0xf0062aeeu)	/* Read Data and Bit Flip Register 39 */
#define MC26_RDBFL4	(*( MC0_RDBFL0_type *) 0xf0062aa8u)	/* Read Data and Bit Flip Register 4 */
#define MC26_RDBFL5	(*( MC0_RDBFL0_type *) 0xf0062aaau)	/* Read Data and Bit Flip Register 5 */
#define MC26_RDBFL6	(*( MC0_RDBFL0_type *) 0xf0062aacu)	/* Read Data and Bit Flip Register 6 */
#define MC26_RDBFL7	(*( MC0_RDBFL0_type *) 0xf0062aaeu)	/* Read Data and Bit Flip Register 7 */
#define MC26_RDBFL8	(*( MC0_RDBFL0_type *) 0xf0062ab0u)	/* Read Data and Bit Flip Register 8 */
#define MC26_RDBFL9	(*( MC0_RDBFL0_type *) 0xf0062ab2u)	/* Read Data and Bit Flip Register 9 */
#define MC27_RDBFL0	(*( MC0_RDBFL0_type *) 0xf0062ba0u)	/* Read Data and Bit Flip Register 0 */
#define MC27_RDBFL1	(*( MC0_RDBFL0_type *) 0xf0062ba2u)	/* Read Data and Bit Flip Register 1 */
#define MC27_RDBFL10	(*( MC0_RDBFL0_type *) 0xf0062bb4u)	/* Read Data and Bit Flip Register 10 */
#define MC27_RDBFL11	(*( MC0_RDBFL0_type *) 0xf0062bb6u)	/* Read Data and Bit Flip Register 11 */
#define MC27_RDBFL12	(*( MC0_RDBFL0_type *) 0xf0062bb8u)	/* Read Data and Bit Flip Register 12 */
#define MC27_RDBFL13	(*( MC0_RDBFL0_type *) 0xf0062bbau)	/* Read Data and Bit Flip Register 13 */
#define MC27_RDBFL14	(*( MC0_RDBFL0_type *) 0xf0062bbcu)	/* Read Data and Bit Flip Register 14 */
#define MC27_RDBFL15	(*( MC0_RDBFL0_type *) 0xf0062bbeu)	/* Read Data and Bit Flip Register 15 */
#define MC27_RDBFL16	(*( MC0_RDBFL0_type *) 0xf0062bc0u)	/* Read Data and Bit Flip Register 16 */
#define MC27_RDBFL17	(*( MC0_RDBFL0_type *) 0xf0062bc2u)	/* Read Data and Bit Flip Register 17 */
#define MC27_RDBFL18	(*( MC0_RDBFL0_type *) 0xf0062bc4u)	/* Read Data and Bit Flip Register 18 */
#define MC27_RDBFL19	(*( MC0_RDBFL0_type *) 0xf0062bc6u)	/* Read Data and Bit Flip Register 19 */
#define MC27_RDBFL2	(*( MC0_RDBFL0_type *) 0xf0062ba4u)	/* Read Data and Bit Flip Register 2 */
#define MC27_RDBFL20	(*( MC0_RDBFL0_type *) 0xf0062bc8u)	/* Read Data and Bit Flip Register 20 */
#define MC27_RDBFL21	(*( MC0_RDBFL0_type *) 0xf0062bcau)	/* Read Data and Bit Flip Register 21 */
#define MC27_RDBFL22	(*( MC0_RDBFL0_type *) 0xf0062bccu)	/* Read Data and Bit Flip Register 22 */
#define MC27_RDBFL23	(*( MC0_RDBFL0_type *) 0xf0062bceu)	/* Read Data and Bit Flip Register 23 */
#define MC27_RDBFL24	(*( MC0_RDBFL0_type *) 0xf0062bd0u)	/* Read Data and Bit Flip Register 24 */
#define MC27_RDBFL25	(*( MC0_RDBFL0_type *) 0xf0062bd2u)	/* Read Data and Bit Flip Register 25 */
#define MC27_RDBFL26	(*( MC0_RDBFL0_type *) 0xf0062bd4u)	/* Read Data and Bit Flip Register 26 */
#define MC27_RDBFL27	(*( MC0_RDBFL0_type *) 0xf0062bd6u)	/* Read Data and Bit Flip Register 27 */
#define MC27_RDBFL28	(*( MC0_RDBFL0_type *) 0xf0062bd8u)	/* Read Data and Bit Flip Register 28 */
#define MC27_RDBFL29	(*( MC0_RDBFL0_type *) 0xf0062bdau)	/* Read Data and Bit Flip Register 29 */
#define MC27_RDBFL3	(*( MC0_RDBFL0_type *) 0xf0062ba6u)	/* Read Data and Bit Flip Register 3 */
#define MC27_RDBFL30	(*( MC0_RDBFL0_type *) 0xf0062bdcu)	/* Read Data and Bit Flip Register 30 */
#define MC27_RDBFL31	(*( MC0_RDBFL0_type *) 0xf0062bdeu)	/* Read Data and Bit Flip Register 31 */
#define MC27_RDBFL32	(*( MC0_RDBFL0_type *) 0xf0062be0u)	/* Read Data and Bit Flip Register 32 */
#define MC27_RDBFL33	(*( MC0_RDBFL0_type *) 0xf0062be2u)	/* Read Data and Bit Flip Register 33 */
#define MC27_RDBFL34	(*( MC0_RDBFL0_type *) 0xf0062be4u)	/* Read Data and Bit Flip Register 34 */
#define MC27_RDBFL35	(*( MC0_RDBFL0_type *) 0xf0062be6u)	/* Read Data and Bit Flip Register 35 */
#define MC27_RDBFL36	(*( MC0_RDBFL0_type *) 0xf0062be8u)	/* Read Data and Bit Flip Register 36 */
#define MC27_RDBFL37	(*( MC0_RDBFL0_type *) 0xf0062beau)	/* Read Data and Bit Flip Register 37 */
#define MC27_RDBFL38	(*( MC0_RDBFL0_type *) 0xf0062becu)	/* Read Data and Bit Flip Register 38 */
#define MC27_RDBFL39	(*( MC0_RDBFL0_type *) 0xf0062beeu)	/* Read Data and Bit Flip Register 39 */
#define MC27_RDBFL4	(*( MC0_RDBFL0_type *) 0xf0062ba8u)	/* Read Data and Bit Flip Register 4 */
#define MC27_RDBFL5	(*( MC0_RDBFL0_type *) 0xf0062baau)	/* Read Data and Bit Flip Register 5 */
#define MC27_RDBFL6	(*( MC0_RDBFL0_type *) 0xf0062bacu)	/* Read Data and Bit Flip Register 6 */
#define MC27_RDBFL7	(*( MC0_RDBFL0_type *) 0xf0062baeu)	/* Read Data and Bit Flip Register 7 */
#define MC27_RDBFL8	(*( MC0_RDBFL0_type *) 0xf0062bb0u)	/* Read Data and Bit Flip Register 8 */
#define MC27_RDBFL9	(*( MC0_RDBFL0_type *) 0xf0062bb2u)	/* Read Data and Bit Flip Register 9 */
#define MC28_RDBFL0	(*( MC0_RDBFL0_type *) 0xf0062ca0u)	/* Read Data and Bit Flip Register 0 */
#define MC28_RDBFL1	(*( MC0_RDBFL0_type *) 0xf0062ca2u)	/* Read Data and Bit Flip Register 1 */
#define MC28_RDBFL10	(*( MC0_RDBFL0_type *) 0xf0062cb4u)	/* Read Data and Bit Flip Register 10 */
#define MC28_RDBFL11	(*( MC0_RDBFL0_type *) 0xf0062cb6u)	/* Read Data and Bit Flip Register 11 */
#define MC28_RDBFL12	(*( MC0_RDBFL0_type *) 0xf0062cb8u)	/* Read Data and Bit Flip Register 12 */
#define MC28_RDBFL13	(*( MC0_RDBFL0_type *) 0xf0062cbau)	/* Read Data and Bit Flip Register 13 */
#define MC28_RDBFL14	(*( MC0_RDBFL0_type *) 0xf0062cbcu)	/* Read Data and Bit Flip Register 14 */
#define MC28_RDBFL15	(*( MC0_RDBFL0_type *) 0xf0062cbeu)	/* Read Data and Bit Flip Register 15 */
#define MC28_RDBFL16	(*( MC0_RDBFL0_type *) 0xf0062cc0u)	/* Read Data and Bit Flip Register 16 */
#define MC28_RDBFL17	(*( MC0_RDBFL0_type *) 0xf0062cc2u)	/* Read Data and Bit Flip Register 17 */
#define MC28_RDBFL18	(*( MC0_RDBFL0_type *) 0xf0062cc4u)	/* Read Data and Bit Flip Register 18 */
#define MC28_RDBFL19	(*( MC0_RDBFL0_type *) 0xf0062cc6u)	/* Read Data and Bit Flip Register 19 */
#define MC28_RDBFL2	(*( MC0_RDBFL0_type *) 0xf0062ca4u)	/* Read Data and Bit Flip Register 2 */
#define MC28_RDBFL20	(*( MC0_RDBFL0_type *) 0xf0062cc8u)	/* Read Data and Bit Flip Register 20 */
#define MC28_RDBFL21	(*( MC0_RDBFL0_type *) 0xf0062ccau)	/* Read Data and Bit Flip Register 21 */
#define MC28_RDBFL22	(*( MC0_RDBFL0_type *) 0xf0062cccu)	/* Read Data and Bit Flip Register 22 */
#define MC28_RDBFL23	(*( MC0_RDBFL0_type *) 0xf0062cceu)	/* Read Data and Bit Flip Register 23 */
#define MC28_RDBFL24	(*( MC0_RDBFL0_type *) 0xf0062cd0u)	/* Read Data and Bit Flip Register 24 */
#define MC28_RDBFL25	(*( MC0_RDBFL0_type *) 0xf0062cd2u)	/* Read Data and Bit Flip Register 25 */
#define MC28_RDBFL26	(*( MC0_RDBFL0_type *) 0xf0062cd4u)	/* Read Data and Bit Flip Register 26 */
#define MC28_RDBFL27	(*( MC0_RDBFL0_type *) 0xf0062cd6u)	/* Read Data and Bit Flip Register 27 */
#define MC28_RDBFL28	(*( MC0_RDBFL0_type *) 0xf0062cd8u)	/* Read Data and Bit Flip Register 28 */
#define MC28_RDBFL29	(*( MC0_RDBFL0_type *) 0xf0062cdau)	/* Read Data and Bit Flip Register 29 */
#define MC28_RDBFL3	(*( MC0_RDBFL0_type *) 0xf0062ca6u)	/* Read Data and Bit Flip Register 3 */
#define MC28_RDBFL30	(*( MC0_RDBFL0_type *) 0xf0062cdcu)	/* Read Data and Bit Flip Register 30 */
#define MC28_RDBFL31	(*( MC0_RDBFL0_type *) 0xf0062cdeu)	/* Read Data and Bit Flip Register 31 */
#define MC28_RDBFL32	(*( MC0_RDBFL0_type *) 0xf0062ce0u)	/* Read Data and Bit Flip Register 32 */
#define MC28_RDBFL33	(*( MC0_RDBFL0_type *) 0xf0062ce2u)	/* Read Data and Bit Flip Register 33 */
#define MC28_RDBFL34	(*( MC0_RDBFL0_type *) 0xf0062ce4u)	/* Read Data and Bit Flip Register 34 */
#define MC28_RDBFL35	(*( MC0_RDBFL0_type *) 0xf0062ce6u)	/* Read Data and Bit Flip Register 35 */
#define MC28_RDBFL36	(*( MC0_RDBFL0_type *) 0xf0062ce8u)	/* Read Data and Bit Flip Register 36 */
#define MC28_RDBFL37	(*( MC0_RDBFL0_type *) 0xf0062ceau)	/* Read Data and Bit Flip Register 37 */
#define MC28_RDBFL38	(*( MC0_RDBFL0_type *) 0xf0062cecu)	/* Read Data and Bit Flip Register 38 */
#define MC28_RDBFL39	(*( MC0_RDBFL0_type *) 0xf0062ceeu)	/* Read Data and Bit Flip Register 39 */
#define MC28_RDBFL4	(*( MC0_RDBFL0_type *) 0xf0062ca8u)	/* Read Data and Bit Flip Register 4 */
#define MC28_RDBFL5	(*( MC0_RDBFL0_type *) 0xf0062caau)	/* Read Data and Bit Flip Register 5 */
#define MC28_RDBFL6	(*( MC0_RDBFL0_type *) 0xf0062cacu)	/* Read Data and Bit Flip Register 6 */
#define MC28_RDBFL7	(*( MC0_RDBFL0_type *) 0xf0062caeu)	/* Read Data and Bit Flip Register 7 */
#define MC28_RDBFL8	(*( MC0_RDBFL0_type *) 0xf0062cb0u)	/* Read Data and Bit Flip Register 8 */
#define MC28_RDBFL9	(*( MC0_RDBFL0_type *) 0xf0062cb2u)	/* Read Data and Bit Flip Register 9 */
#define MC29_RDBFL0	(*( MC0_RDBFL0_type *) 0xf0062da0u)	/* Read Data and Bit Flip Register 0 */
#define MC29_RDBFL1	(*( MC0_RDBFL0_type *) 0xf0062da2u)	/* Read Data and Bit Flip Register 1 */
#define MC29_RDBFL10	(*( MC0_RDBFL0_type *) 0xf0062db4u)	/* Read Data and Bit Flip Register 10 */
#define MC29_RDBFL11	(*( MC0_RDBFL0_type *) 0xf0062db6u)	/* Read Data and Bit Flip Register 11 */
#define MC29_RDBFL12	(*( MC0_RDBFL0_type *) 0xf0062db8u)	/* Read Data and Bit Flip Register 12 */
#define MC29_RDBFL13	(*( MC0_RDBFL0_type *) 0xf0062dbau)	/* Read Data and Bit Flip Register 13 */
#define MC29_RDBFL14	(*( MC0_RDBFL0_type *) 0xf0062dbcu)	/* Read Data and Bit Flip Register 14 */
#define MC29_RDBFL15	(*( MC0_RDBFL0_type *) 0xf0062dbeu)	/* Read Data and Bit Flip Register 15 */
#define MC29_RDBFL16	(*( MC0_RDBFL0_type *) 0xf0062dc0u)	/* Read Data and Bit Flip Register 16 */
#define MC29_RDBFL17	(*( MC0_RDBFL0_type *) 0xf0062dc2u)	/* Read Data and Bit Flip Register 17 */
#define MC29_RDBFL18	(*( MC0_RDBFL0_type *) 0xf0062dc4u)	/* Read Data and Bit Flip Register 18 */
#define MC29_RDBFL19	(*( MC0_RDBFL0_type *) 0xf0062dc6u)	/* Read Data and Bit Flip Register 19 */
#define MC29_RDBFL2	(*( MC0_RDBFL0_type *) 0xf0062da4u)	/* Read Data and Bit Flip Register 2 */
#define MC29_RDBFL20	(*( MC0_RDBFL0_type *) 0xf0062dc8u)	/* Read Data and Bit Flip Register 20 */
#define MC29_RDBFL21	(*( MC0_RDBFL0_type *) 0xf0062dcau)	/* Read Data and Bit Flip Register 21 */
#define MC29_RDBFL22	(*( MC0_RDBFL0_type *) 0xf0062dccu)	/* Read Data and Bit Flip Register 22 */
#define MC29_RDBFL23	(*( MC0_RDBFL0_type *) 0xf0062dceu)	/* Read Data and Bit Flip Register 23 */
#define MC29_RDBFL24	(*( MC0_RDBFL0_type *) 0xf0062dd0u)	/* Read Data and Bit Flip Register 24 */
#define MC29_RDBFL25	(*( MC0_RDBFL0_type *) 0xf0062dd2u)	/* Read Data and Bit Flip Register 25 */
#define MC29_RDBFL26	(*( MC0_RDBFL0_type *) 0xf0062dd4u)	/* Read Data and Bit Flip Register 26 */
#define MC29_RDBFL27	(*( MC0_RDBFL0_type *) 0xf0062dd6u)	/* Read Data and Bit Flip Register 27 */
#define MC29_RDBFL28	(*( MC0_RDBFL0_type *) 0xf0062dd8u)	/* Read Data and Bit Flip Register 28 */
#define MC29_RDBFL29	(*( MC0_RDBFL0_type *) 0xf0062ddau)	/* Read Data and Bit Flip Register 29 */
#define MC29_RDBFL3	(*( MC0_RDBFL0_type *) 0xf0062da6u)	/* Read Data and Bit Flip Register 3 */
#define MC29_RDBFL30	(*( MC0_RDBFL0_type *) 0xf0062ddcu)	/* Read Data and Bit Flip Register 30 */
#define MC29_RDBFL31	(*( MC0_RDBFL0_type *) 0xf0062ddeu)	/* Read Data and Bit Flip Register 31 */
#define MC29_RDBFL32	(*( MC0_RDBFL0_type *) 0xf0062de0u)	/* Read Data and Bit Flip Register 32 */
#define MC29_RDBFL33	(*( MC0_RDBFL0_type *) 0xf0062de2u)	/* Read Data and Bit Flip Register 33 */
#define MC29_RDBFL34	(*( MC0_RDBFL0_type *) 0xf0062de4u)	/* Read Data and Bit Flip Register 34 */
#define MC29_RDBFL35	(*( MC0_RDBFL0_type *) 0xf0062de6u)	/* Read Data and Bit Flip Register 35 */
#define MC29_RDBFL36	(*( MC0_RDBFL0_type *) 0xf0062de8u)	/* Read Data and Bit Flip Register 36 */
#define MC29_RDBFL37	(*( MC0_RDBFL0_type *) 0xf0062deau)	/* Read Data and Bit Flip Register 37 */
#define MC29_RDBFL38	(*( MC0_RDBFL0_type *) 0xf0062decu)	/* Read Data and Bit Flip Register 38 */
#define MC29_RDBFL39	(*( MC0_RDBFL0_type *) 0xf0062deeu)	/* Read Data and Bit Flip Register 39 */
#define MC29_RDBFL4	(*( MC0_RDBFL0_type *) 0xf0062da8u)	/* Read Data and Bit Flip Register 4 */
#define MC29_RDBFL5	(*( MC0_RDBFL0_type *) 0xf0062daau)	/* Read Data and Bit Flip Register 5 */
#define MC29_RDBFL6	(*( MC0_RDBFL0_type *) 0xf0062dacu)	/* Read Data and Bit Flip Register 6 */
#define MC29_RDBFL7	(*( MC0_RDBFL0_type *) 0xf0062daeu)	/* Read Data and Bit Flip Register 7 */
#define MC29_RDBFL8	(*( MC0_RDBFL0_type *) 0xf0062db0u)	/* Read Data and Bit Flip Register 8 */
#define MC29_RDBFL9	(*( MC0_RDBFL0_type *) 0xf0062db2u)	/* Read Data and Bit Flip Register 9 */
#define MC2_RDBFL0	(*( MC0_RDBFL0_type *) 0xf00612a0u)	/* Read Data and Bit Flip Register 0 */
#define MC2_RDBFL1	(*( MC0_RDBFL0_type *) 0xf00612a2u)	/* Read Data and Bit Flip Register 1 */
#define MC2_RDBFL10	(*( MC0_RDBFL0_type *) 0xf00612b4u)	/* Read Data and Bit Flip Register 10 */
#define MC2_RDBFL11	(*( MC0_RDBFL0_type *) 0xf00612b6u)	/* Read Data and Bit Flip Register 11 */
#define MC2_RDBFL12	(*( MC0_RDBFL0_type *) 0xf00612b8u)	/* Read Data and Bit Flip Register 12 */
#define MC2_RDBFL13	(*( MC0_RDBFL0_type *) 0xf00612bau)	/* Read Data and Bit Flip Register 13 */
#define MC2_RDBFL14	(*( MC0_RDBFL0_type *) 0xf00612bcu)	/* Read Data and Bit Flip Register 14 */
#define MC2_RDBFL15	(*( MC0_RDBFL0_type *) 0xf00612beu)	/* Read Data and Bit Flip Register 15 */
#define MC2_RDBFL16	(*( MC0_RDBFL0_type *) 0xf00612c0u)	/* Read Data and Bit Flip Register 16 */
#define MC2_RDBFL17	(*( MC0_RDBFL0_type *) 0xf00612c2u)	/* Read Data and Bit Flip Register 17 */
#define MC2_RDBFL18	(*( MC0_RDBFL0_type *) 0xf00612c4u)	/* Read Data and Bit Flip Register 18 */
#define MC2_RDBFL19	(*( MC0_RDBFL0_type *) 0xf00612c6u)	/* Read Data and Bit Flip Register 19 */
#define MC2_RDBFL2	(*( MC0_RDBFL0_type *) 0xf00612a4u)	/* Read Data and Bit Flip Register 2 */
#define MC2_RDBFL20	(*( MC0_RDBFL0_type *) 0xf00612c8u)	/* Read Data and Bit Flip Register 20 */
#define MC2_RDBFL21	(*( MC0_RDBFL0_type *) 0xf00612cau)	/* Read Data and Bit Flip Register 21 */
#define MC2_RDBFL22	(*( MC0_RDBFL0_type *) 0xf00612ccu)	/* Read Data and Bit Flip Register 22 */
#define MC2_RDBFL23	(*( MC0_RDBFL0_type *) 0xf00612ceu)	/* Read Data and Bit Flip Register 23 */
#define MC2_RDBFL24	(*( MC0_RDBFL0_type *) 0xf00612d0u)	/* Read Data and Bit Flip Register 24 */
#define MC2_RDBFL25	(*( MC0_RDBFL0_type *) 0xf00612d2u)	/* Read Data and Bit Flip Register 25 */
#define MC2_RDBFL26	(*( MC0_RDBFL0_type *) 0xf00612d4u)	/* Read Data and Bit Flip Register 26 */
#define MC2_RDBFL27	(*( MC0_RDBFL0_type *) 0xf00612d6u)	/* Read Data and Bit Flip Register 27 */
#define MC2_RDBFL28	(*( MC0_RDBFL0_type *) 0xf00612d8u)	/* Read Data and Bit Flip Register 28 */
#define MC2_RDBFL29	(*( MC0_RDBFL0_type *) 0xf00612dau)	/* Read Data and Bit Flip Register 29 */
#define MC2_RDBFL3	(*( MC0_RDBFL0_type *) 0xf00612a6u)	/* Read Data and Bit Flip Register 3 */
#define MC2_RDBFL30	(*( MC0_RDBFL0_type *) 0xf00612dcu)	/* Read Data and Bit Flip Register 30 */
#define MC2_RDBFL31	(*( MC0_RDBFL0_type *) 0xf00612deu)	/* Read Data and Bit Flip Register 31 */
#define MC2_RDBFL32	(*( MC0_RDBFL0_type *) 0xf00612e0u)	/* Read Data and Bit Flip Register 32 */
#define MC2_RDBFL33	(*( MC0_RDBFL0_type *) 0xf00612e2u)	/* Read Data and Bit Flip Register 33 */
#define MC2_RDBFL34	(*( MC0_RDBFL0_type *) 0xf00612e4u)	/* Read Data and Bit Flip Register 34 */
#define MC2_RDBFL35	(*( MC0_RDBFL0_type *) 0xf00612e6u)	/* Read Data and Bit Flip Register 35 */
#define MC2_RDBFL36	(*( MC0_RDBFL0_type *) 0xf00612e8u)	/* Read Data and Bit Flip Register 36 */
#define MC2_RDBFL37	(*( MC0_RDBFL0_type *) 0xf00612eau)	/* Read Data and Bit Flip Register 37 */
#define MC2_RDBFL38	(*( MC0_RDBFL0_type *) 0xf00612ecu)	/* Read Data and Bit Flip Register 38 */
#define MC2_RDBFL39	(*( MC0_RDBFL0_type *) 0xf00612eeu)	/* Read Data and Bit Flip Register 39 */
#define MC2_RDBFL4	(*( MC0_RDBFL0_type *) 0xf00612a8u)	/* Read Data and Bit Flip Register 4 */
#define MC2_RDBFL5	(*( MC0_RDBFL0_type *) 0xf00612aau)	/* Read Data and Bit Flip Register 5 */
#define MC2_RDBFL6	(*( MC0_RDBFL0_type *) 0xf00612acu)	/* Read Data and Bit Flip Register 6 */
#define MC2_RDBFL7	(*( MC0_RDBFL0_type *) 0xf00612aeu)	/* Read Data and Bit Flip Register 7 */
#define MC2_RDBFL8	(*( MC0_RDBFL0_type *) 0xf00612b0u)	/* Read Data and Bit Flip Register 8 */
#define MC2_RDBFL9	(*( MC0_RDBFL0_type *) 0xf00612b2u)	/* Read Data and Bit Flip Register 9 */
#define MC30_RDBFL0	(*( MC0_RDBFL0_type *) 0xf0062ea0u)	/* Read Data and Bit Flip Register 0 */
#define MC30_RDBFL1	(*( MC0_RDBFL0_type *) 0xf0062ea2u)	/* Read Data and Bit Flip Register 1 */
#define MC30_RDBFL10	(*( MC0_RDBFL0_type *) 0xf0062eb4u)	/* Read Data and Bit Flip Register 10 */
#define MC30_RDBFL11	(*( MC0_RDBFL0_type *) 0xf0062eb6u)	/* Read Data and Bit Flip Register 11 */
#define MC30_RDBFL12	(*( MC0_RDBFL0_type *) 0xf0062eb8u)	/* Read Data and Bit Flip Register 12 */
#define MC30_RDBFL13	(*( MC0_RDBFL0_type *) 0xf0062ebau)	/* Read Data and Bit Flip Register 13 */
#define MC30_RDBFL14	(*( MC0_RDBFL0_type *) 0xf0062ebcu)	/* Read Data and Bit Flip Register 14 */
#define MC30_RDBFL15	(*( MC0_RDBFL0_type *) 0xf0062ebeu)	/* Read Data and Bit Flip Register 15 */
#define MC30_RDBFL16	(*( MC0_RDBFL0_type *) 0xf0062ec0u)	/* Read Data and Bit Flip Register 16 */
#define MC30_RDBFL17	(*( MC0_RDBFL0_type *) 0xf0062ec2u)	/* Read Data and Bit Flip Register 17 */
#define MC30_RDBFL18	(*( MC0_RDBFL0_type *) 0xf0062ec4u)	/* Read Data and Bit Flip Register 18 */
#define MC30_RDBFL19	(*( MC0_RDBFL0_type *) 0xf0062ec6u)	/* Read Data and Bit Flip Register 19 */
#define MC30_RDBFL2	(*( MC0_RDBFL0_type *) 0xf0062ea4u)	/* Read Data and Bit Flip Register 2 */
#define MC30_RDBFL20	(*( MC0_RDBFL0_type *) 0xf0062ec8u)	/* Read Data and Bit Flip Register 20 */
#define MC30_RDBFL21	(*( MC0_RDBFL0_type *) 0xf0062ecau)	/* Read Data and Bit Flip Register 21 */
#define MC30_RDBFL22	(*( MC0_RDBFL0_type *) 0xf0062eccu)	/* Read Data and Bit Flip Register 22 */
#define MC30_RDBFL23	(*( MC0_RDBFL0_type *) 0xf0062eceu)	/* Read Data and Bit Flip Register 23 */
#define MC30_RDBFL24	(*( MC0_RDBFL0_type *) 0xf0062ed0u)	/* Read Data and Bit Flip Register 24 */
#define MC30_RDBFL25	(*( MC0_RDBFL0_type *) 0xf0062ed2u)	/* Read Data and Bit Flip Register 25 */
#define MC30_RDBFL26	(*( MC0_RDBFL0_type *) 0xf0062ed4u)	/* Read Data and Bit Flip Register 26 */
#define MC30_RDBFL27	(*( MC0_RDBFL0_type *) 0xf0062ed6u)	/* Read Data and Bit Flip Register 27 */
#define MC30_RDBFL28	(*( MC0_RDBFL0_type *) 0xf0062ed8u)	/* Read Data and Bit Flip Register 28 */
#define MC30_RDBFL29	(*( MC0_RDBFL0_type *) 0xf0062edau)	/* Read Data and Bit Flip Register 29 */
#define MC30_RDBFL3	(*( MC0_RDBFL0_type *) 0xf0062ea6u)	/* Read Data and Bit Flip Register 3 */
#define MC30_RDBFL30	(*( MC0_RDBFL0_type *) 0xf0062edcu)	/* Read Data and Bit Flip Register 30 */
#define MC30_RDBFL31	(*( MC0_RDBFL0_type *) 0xf0062edeu)	/* Read Data and Bit Flip Register 31 */
#define MC30_RDBFL32	(*( MC0_RDBFL0_type *) 0xf0062ee0u)	/* Read Data and Bit Flip Register 32 */
#define MC30_RDBFL33	(*( MC0_RDBFL0_type *) 0xf0062ee2u)	/* Read Data and Bit Flip Register 33 */
#define MC30_RDBFL34	(*( MC0_RDBFL0_type *) 0xf0062ee4u)	/* Read Data and Bit Flip Register 34 */
#define MC30_RDBFL35	(*( MC0_RDBFL0_type *) 0xf0062ee6u)	/* Read Data and Bit Flip Register 35 */
#define MC30_RDBFL36	(*( MC0_RDBFL0_type *) 0xf0062ee8u)	/* Read Data and Bit Flip Register 36 */
#define MC30_RDBFL37	(*( MC0_RDBFL0_type *) 0xf0062eeau)	/* Read Data and Bit Flip Register 37 */
#define MC30_RDBFL38	(*( MC0_RDBFL0_type *) 0xf0062eecu)	/* Read Data and Bit Flip Register 38 */
#define MC30_RDBFL39	(*( MC0_RDBFL0_type *) 0xf0062eeeu)	/* Read Data and Bit Flip Register 39 */
#define MC30_RDBFL4	(*( MC0_RDBFL0_type *) 0xf0062ea8u)	/* Read Data and Bit Flip Register 4 */
#define MC30_RDBFL5	(*( MC0_RDBFL0_type *) 0xf0062eaau)	/* Read Data and Bit Flip Register 5 */
#define MC30_RDBFL6	(*( MC0_RDBFL0_type *) 0xf0062eacu)	/* Read Data and Bit Flip Register 6 */
#define MC30_RDBFL7	(*( MC0_RDBFL0_type *) 0xf0062eaeu)	/* Read Data and Bit Flip Register 7 */
#define MC30_RDBFL8	(*( MC0_RDBFL0_type *) 0xf0062eb0u)	/* Read Data and Bit Flip Register 8 */
#define MC30_RDBFL9	(*( MC0_RDBFL0_type *) 0xf0062eb2u)	/* Read Data and Bit Flip Register 9 */
#define MC31_RDBFL0	(*( MC0_RDBFL0_type *) 0xf0062fa0u)	/* Read Data and Bit Flip Register 0 */
#define MC31_RDBFL1	(*( MC0_RDBFL0_type *) 0xf0062fa2u)	/* Read Data and Bit Flip Register 1 */
#define MC31_RDBFL10	(*( MC0_RDBFL0_type *) 0xf0062fb4u)	/* Read Data and Bit Flip Register 10 */
#define MC31_RDBFL11	(*( MC0_RDBFL0_type *) 0xf0062fb6u)	/* Read Data and Bit Flip Register 11 */
#define MC31_RDBFL12	(*( MC0_RDBFL0_type *) 0xf0062fb8u)	/* Read Data and Bit Flip Register 12 */
#define MC31_RDBFL13	(*( MC0_RDBFL0_type *) 0xf0062fbau)	/* Read Data and Bit Flip Register 13 */
#define MC31_RDBFL14	(*( MC0_RDBFL0_type *) 0xf0062fbcu)	/* Read Data and Bit Flip Register 14 */
#define MC31_RDBFL15	(*( MC0_RDBFL0_type *) 0xf0062fbeu)	/* Read Data and Bit Flip Register 15 */
#define MC31_RDBFL16	(*( MC0_RDBFL0_type *) 0xf0062fc0u)	/* Read Data and Bit Flip Register 16 */
#define MC31_RDBFL17	(*( MC0_RDBFL0_type *) 0xf0062fc2u)	/* Read Data and Bit Flip Register 17 */
#define MC31_RDBFL18	(*( MC0_RDBFL0_type *) 0xf0062fc4u)	/* Read Data and Bit Flip Register 18 */
#define MC31_RDBFL19	(*( MC0_RDBFL0_type *) 0xf0062fc6u)	/* Read Data and Bit Flip Register 19 */
#define MC31_RDBFL2	(*( MC0_RDBFL0_type *) 0xf0062fa4u)	/* Read Data and Bit Flip Register 2 */
#define MC31_RDBFL20	(*( MC0_RDBFL0_type *) 0xf0062fc8u)	/* Read Data and Bit Flip Register 20 */
#define MC31_RDBFL21	(*( MC0_RDBFL0_type *) 0xf0062fcau)	/* Read Data and Bit Flip Register 21 */
#define MC31_RDBFL22	(*( MC0_RDBFL0_type *) 0xf0062fccu)	/* Read Data and Bit Flip Register 22 */
#define MC31_RDBFL23	(*( MC0_RDBFL0_type *) 0xf0062fceu)	/* Read Data and Bit Flip Register 23 */
#define MC31_RDBFL24	(*( MC0_RDBFL0_type *) 0xf0062fd0u)	/* Read Data and Bit Flip Register 24 */
#define MC31_RDBFL25	(*( MC0_RDBFL0_type *) 0xf0062fd2u)	/* Read Data and Bit Flip Register 25 */
#define MC31_RDBFL26	(*( MC0_RDBFL0_type *) 0xf0062fd4u)	/* Read Data and Bit Flip Register 26 */
#define MC31_RDBFL27	(*( MC0_RDBFL0_type *) 0xf0062fd6u)	/* Read Data and Bit Flip Register 27 */
#define MC31_RDBFL28	(*( MC0_RDBFL0_type *) 0xf0062fd8u)	/* Read Data and Bit Flip Register 28 */
#define MC31_RDBFL29	(*( MC0_RDBFL0_type *) 0xf0062fdau)	/* Read Data and Bit Flip Register 29 */
#define MC31_RDBFL3	(*( MC0_RDBFL0_type *) 0xf0062fa6u)	/* Read Data and Bit Flip Register 3 */
#define MC31_RDBFL30	(*( MC0_RDBFL0_type *) 0xf0062fdcu)	/* Read Data and Bit Flip Register 30 */
#define MC31_RDBFL31	(*( MC0_RDBFL0_type *) 0xf0062fdeu)	/* Read Data and Bit Flip Register 31 */
#define MC31_RDBFL32	(*( MC0_RDBFL0_type *) 0xf0062fe0u)	/* Read Data and Bit Flip Register 32 */
#define MC31_RDBFL33	(*( MC0_RDBFL0_type *) 0xf0062fe2u)	/* Read Data and Bit Flip Register 33 */
#define MC31_RDBFL34	(*( MC0_RDBFL0_type *) 0xf0062fe4u)	/* Read Data and Bit Flip Register 34 */
#define MC31_RDBFL35	(*( MC0_RDBFL0_type *) 0xf0062fe6u)	/* Read Data and Bit Flip Register 35 */
#define MC31_RDBFL36	(*( MC0_RDBFL0_type *) 0xf0062fe8u)	/* Read Data and Bit Flip Register 36 */
#define MC31_RDBFL37	(*( MC0_RDBFL0_type *) 0xf0062feau)	/* Read Data and Bit Flip Register 37 */
#define MC31_RDBFL38	(*( MC0_RDBFL0_type *) 0xf0062fecu)	/* Read Data and Bit Flip Register 38 */
#define MC31_RDBFL39	(*( MC0_RDBFL0_type *) 0xf0062feeu)	/* Read Data and Bit Flip Register 39 */
#define MC31_RDBFL4	(*( MC0_RDBFL0_type *) 0xf0062fa8u)	/* Read Data and Bit Flip Register 4 */
#define MC31_RDBFL5	(*( MC0_RDBFL0_type *) 0xf0062faau)	/* Read Data and Bit Flip Register 5 */
#define MC31_RDBFL6	(*( MC0_RDBFL0_type *) 0xf0062facu)	/* Read Data and Bit Flip Register 6 */
#define MC31_RDBFL7	(*( MC0_RDBFL0_type *) 0xf0062faeu)	/* Read Data and Bit Flip Register 7 */
#define MC31_RDBFL8	(*( MC0_RDBFL0_type *) 0xf0062fb0u)	/* Read Data and Bit Flip Register 8 */
#define MC31_RDBFL9	(*( MC0_RDBFL0_type *) 0xf0062fb2u)	/* Read Data and Bit Flip Register 9 */
#define MC32_RDBFL0	(*( MC0_RDBFL0_type *) 0xf00630a0u)	/* Read Data and Bit Flip Register 0 */
#define MC32_RDBFL1	(*( MC0_RDBFL0_type *) 0xf00630a2u)	/* Read Data and Bit Flip Register 1 */
#define MC32_RDBFL10	(*( MC0_RDBFL0_type *) 0xf00630b4u)	/* Read Data and Bit Flip Register 10 */
#define MC32_RDBFL11	(*( MC0_RDBFL0_type *) 0xf00630b6u)	/* Read Data and Bit Flip Register 11 */
#define MC32_RDBFL12	(*( MC0_RDBFL0_type *) 0xf00630b8u)	/* Read Data and Bit Flip Register 12 */
#define MC32_RDBFL13	(*( MC0_RDBFL0_type *) 0xf00630bau)	/* Read Data and Bit Flip Register 13 */
#define MC32_RDBFL14	(*( MC0_RDBFL0_type *) 0xf00630bcu)	/* Read Data and Bit Flip Register 14 */
#define MC32_RDBFL15	(*( MC0_RDBFL0_type *) 0xf00630beu)	/* Read Data and Bit Flip Register 15 */
#define MC32_RDBFL16	(*( MC0_RDBFL0_type *) 0xf00630c0u)	/* Read Data and Bit Flip Register 16 */
#define MC32_RDBFL17	(*( MC0_RDBFL0_type *) 0xf00630c2u)	/* Read Data and Bit Flip Register 17 */
#define MC32_RDBFL18	(*( MC0_RDBFL0_type *) 0xf00630c4u)	/* Read Data and Bit Flip Register 18 */
#define MC32_RDBFL19	(*( MC0_RDBFL0_type *) 0xf00630c6u)	/* Read Data and Bit Flip Register 19 */
#define MC32_RDBFL2	(*( MC0_RDBFL0_type *) 0xf00630a4u)	/* Read Data and Bit Flip Register 2 */
#define MC32_RDBFL20	(*( MC0_RDBFL0_type *) 0xf00630c8u)	/* Read Data and Bit Flip Register 20 */
#define MC32_RDBFL21	(*( MC0_RDBFL0_type *) 0xf00630cau)	/* Read Data and Bit Flip Register 21 */
#define MC32_RDBFL22	(*( MC0_RDBFL0_type *) 0xf00630ccu)	/* Read Data and Bit Flip Register 22 */
#define MC32_RDBFL23	(*( MC0_RDBFL0_type *) 0xf00630ceu)	/* Read Data and Bit Flip Register 23 */
#define MC32_RDBFL24	(*( MC0_RDBFL0_type *) 0xf00630d0u)	/* Read Data and Bit Flip Register 24 */
#define MC32_RDBFL25	(*( MC0_RDBFL0_type *) 0xf00630d2u)	/* Read Data and Bit Flip Register 25 */
#define MC32_RDBFL26	(*( MC0_RDBFL0_type *) 0xf00630d4u)	/* Read Data and Bit Flip Register 26 */
#define MC32_RDBFL27	(*( MC0_RDBFL0_type *) 0xf00630d6u)	/* Read Data and Bit Flip Register 27 */
#define MC32_RDBFL28	(*( MC0_RDBFL0_type *) 0xf00630d8u)	/* Read Data and Bit Flip Register 28 */
#define MC32_RDBFL29	(*( MC0_RDBFL0_type *) 0xf00630dau)	/* Read Data and Bit Flip Register 29 */
#define MC32_RDBFL3	(*( MC0_RDBFL0_type *) 0xf00630a6u)	/* Read Data and Bit Flip Register 3 */
#define MC32_RDBFL30	(*( MC0_RDBFL0_type *) 0xf00630dcu)	/* Read Data and Bit Flip Register 30 */
#define MC32_RDBFL31	(*( MC0_RDBFL0_type *) 0xf00630deu)	/* Read Data and Bit Flip Register 31 */
#define MC32_RDBFL32	(*( MC0_RDBFL0_type *) 0xf00630e0u)	/* Read Data and Bit Flip Register 32 */
#define MC32_RDBFL33	(*( MC0_RDBFL0_type *) 0xf00630e2u)	/* Read Data and Bit Flip Register 33 */
#define MC32_RDBFL34	(*( MC0_RDBFL0_type *) 0xf00630e4u)	/* Read Data and Bit Flip Register 34 */
#define MC32_RDBFL35	(*( MC0_RDBFL0_type *) 0xf00630e6u)	/* Read Data and Bit Flip Register 35 */
#define MC32_RDBFL36	(*( MC0_RDBFL0_type *) 0xf00630e8u)	/* Read Data and Bit Flip Register 36 */
#define MC32_RDBFL37	(*( MC0_RDBFL0_type *) 0xf00630eau)	/* Read Data and Bit Flip Register 37 */
#define MC32_RDBFL38	(*( MC0_RDBFL0_type *) 0xf00630ecu)	/* Read Data and Bit Flip Register 38 */
#define MC32_RDBFL39	(*( MC0_RDBFL0_type *) 0xf00630eeu)	/* Read Data and Bit Flip Register 39 */
#define MC32_RDBFL4	(*( MC0_RDBFL0_type *) 0xf00630a8u)	/* Read Data and Bit Flip Register 4 */
#define MC32_RDBFL5	(*( MC0_RDBFL0_type *) 0xf00630aau)	/* Read Data and Bit Flip Register 5 */
#define MC32_RDBFL6	(*( MC0_RDBFL0_type *) 0xf00630acu)	/* Read Data and Bit Flip Register 6 */
#define MC32_RDBFL7	(*( MC0_RDBFL0_type *) 0xf00630aeu)	/* Read Data and Bit Flip Register 7 */
#define MC32_RDBFL8	(*( MC0_RDBFL0_type *) 0xf00630b0u)	/* Read Data and Bit Flip Register 8 */
#define MC32_RDBFL9	(*( MC0_RDBFL0_type *) 0xf00630b2u)	/* Read Data and Bit Flip Register 9 */
#define MC33_RDBFL0	(*( MC0_RDBFL0_type *) 0xf00631a0u)	/* Read Data and Bit Flip Register 0 */
#define MC33_RDBFL1	(*( MC0_RDBFL0_type *) 0xf00631a2u)	/* Read Data and Bit Flip Register 1 */
#define MC33_RDBFL10	(*( MC0_RDBFL0_type *) 0xf00631b4u)	/* Read Data and Bit Flip Register 10 */
#define MC33_RDBFL11	(*( MC0_RDBFL0_type *) 0xf00631b6u)	/* Read Data and Bit Flip Register 11 */
#define MC33_RDBFL12	(*( MC0_RDBFL0_type *) 0xf00631b8u)	/* Read Data and Bit Flip Register 12 */
#define MC33_RDBFL13	(*( MC0_RDBFL0_type *) 0xf00631bau)	/* Read Data and Bit Flip Register 13 */
#define MC33_RDBFL14	(*( MC0_RDBFL0_type *) 0xf00631bcu)	/* Read Data and Bit Flip Register 14 */
#define MC33_RDBFL15	(*( MC0_RDBFL0_type *) 0xf00631beu)	/* Read Data and Bit Flip Register 15 */
#define MC33_RDBFL16	(*( MC0_RDBFL0_type *) 0xf00631c0u)	/* Read Data and Bit Flip Register 16 */
#define MC33_RDBFL17	(*( MC0_RDBFL0_type *) 0xf00631c2u)	/* Read Data and Bit Flip Register 17 */
#define MC33_RDBFL18	(*( MC0_RDBFL0_type *) 0xf00631c4u)	/* Read Data and Bit Flip Register 18 */
#define MC33_RDBFL19	(*( MC0_RDBFL0_type *) 0xf00631c6u)	/* Read Data and Bit Flip Register 19 */
#define MC33_RDBFL2	(*( MC0_RDBFL0_type *) 0xf00631a4u)	/* Read Data and Bit Flip Register 2 */
#define MC33_RDBFL20	(*( MC0_RDBFL0_type *) 0xf00631c8u)	/* Read Data and Bit Flip Register 20 */
#define MC33_RDBFL21	(*( MC0_RDBFL0_type *) 0xf00631cau)	/* Read Data and Bit Flip Register 21 */
#define MC33_RDBFL22	(*( MC0_RDBFL0_type *) 0xf00631ccu)	/* Read Data and Bit Flip Register 22 */
#define MC33_RDBFL23	(*( MC0_RDBFL0_type *) 0xf00631ceu)	/* Read Data and Bit Flip Register 23 */
#define MC33_RDBFL24	(*( MC0_RDBFL0_type *) 0xf00631d0u)	/* Read Data and Bit Flip Register 24 */
#define MC33_RDBFL25	(*( MC0_RDBFL0_type *) 0xf00631d2u)	/* Read Data and Bit Flip Register 25 */
#define MC33_RDBFL26	(*( MC0_RDBFL0_type *) 0xf00631d4u)	/* Read Data and Bit Flip Register 26 */
#define MC33_RDBFL27	(*( MC0_RDBFL0_type *) 0xf00631d6u)	/* Read Data and Bit Flip Register 27 */
#define MC33_RDBFL28	(*( MC0_RDBFL0_type *) 0xf00631d8u)	/* Read Data and Bit Flip Register 28 */
#define MC33_RDBFL29	(*( MC0_RDBFL0_type *) 0xf00631dau)	/* Read Data and Bit Flip Register 29 */
#define MC33_RDBFL3	(*( MC0_RDBFL0_type *) 0xf00631a6u)	/* Read Data and Bit Flip Register 3 */
#define MC33_RDBFL30	(*( MC0_RDBFL0_type *) 0xf00631dcu)	/* Read Data and Bit Flip Register 30 */
#define MC33_RDBFL31	(*( MC0_RDBFL0_type *) 0xf00631deu)	/* Read Data and Bit Flip Register 31 */
#define MC33_RDBFL32	(*( MC0_RDBFL0_type *) 0xf00631e0u)	/* Read Data and Bit Flip Register 32 */
#define MC33_RDBFL33	(*( MC0_RDBFL0_type *) 0xf00631e2u)	/* Read Data and Bit Flip Register 33 */
#define MC33_RDBFL34	(*( MC0_RDBFL0_type *) 0xf00631e4u)	/* Read Data and Bit Flip Register 34 */
#define MC33_RDBFL35	(*( MC0_RDBFL0_type *) 0xf00631e6u)	/* Read Data and Bit Flip Register 35 */
#define MC33_RDBFL36	(*( MC0_RDBFL0_type *) 0xf00631e8u)	/* Read Data and Bit Flip Register 36 */
#define MC33_RDBFL37	(*( MC0_RDBFL0_type *) 0xf00631eau)	/* Read Data and Bit Flip Register 37 */
#define MC33_RDBFL38	(*( MC0_RDBFL0_type *) 0xf00631ecu)	/* Read Data and Bit Flip Register 38 */
#define MC33_RDBFL39	(*( MC0_RDBFL0_type *) 0xf00631eeu)	/* Read Data and Bit Flip Register 39 */
#define MC33_RDBFL4	(*( MC0_RDBFL0_type *) 0xf00631a8u)	/* Read Data and Bit Flip Register 4 */
#define MC33_RDBFL5	(*( MC0_RDBFL0_type *) 0xf00631aau)	/* Read Data and Bit Flip Register 5 */
#define MC33_RDBFL6	(*( MC0_RDBFL0_type *) 0xf00631acu)	/* Read Data and Bit Flip Register 6 */
#define MC33_RDBFL7	(*( MC0_RDBFL0_type *) 0xf00631aeu)	/* Read Data and Bit Flip Register 7 */
#define MC33_RDBFL8	(*( MC0_RDBFL0_type *) 0xf00631b0u)	/* Read Data and Bit Flip Register 8 */
#define MC33_RDBFL9	(*( MC0_RDBFL0_type *) 0xf00631b2u)	/* Read Data and Bit Flip Register 9 */
#define MC34_RDBFL0	(*( MC0_RDBFL0_type *) 0xf00632a0u)	/* Read Data and Bit Flip Register 0 */
#define MC34_RDBFL1	(*( MC0_RDBFL0_type *) 0xf00632a2u)	/* Read Data and Bit Flip Register 1 */
#define MC34_RDBFL10	(*( MC0_RDBFL0_type *) 0xf00632b4u)	/* Read Data and Bit Flip Register 10 */
#define MC34_RDBFL11	(*( MC0_RDBFL0_type *) 0xf00632b6u)	/* Read Data and Bit Flip Register 11 */
#define MC34_RDBFL12	(*( MC0_RDBFL0_type *) 0xf00632b8u)	/* Read Data and Bit Flip Register 12 */
#define MC34_RDBFL13	(*( MC0_RDBFL0_type *) 0xf00632bau)	/* Read Data and Bit Flip Register 13 */
#define MC34_RDBFL14	(*( MC0_RDBFL0_type *) 0xf00632bcu)	/* Read Data and Bit Flip Register 14 */
#define MC34_RDBFL15	(*( MC0_RDBFL0_type *) 0xf00632beu)	/* Read Data and Bit Flip Register 15 */
#define MC34_RDBFL16	(*( MC0_RDBFL0_type *) 0xf00632c0u)	/* Read Data and Bit Flip Register 16 */
#define MC34_RDBFL17	(*( MC0_RDBFL0_type *) 0xf00632c2u)	/* Read Data and Bit Flip Register 17 */
#define MC34_RDBFL18	(*( MC0_RDBFL0_type *) 0xf00632c4u)	/* Read Data and Bit Flip Register 18 */
#define MC34_RDBFL19	(*( MC0_RDBFL0_type *) 0xf00632c6u)	/* Read Data and Bit Flip Register 19 */
#define MC34_RDBFL2	(*( MC0_RDBFL0_type *) 0xf00632a4u)	/* Read Data and Bit Flip Register 2 */
#define MC34_RDBFL20	(*( MC0_RDBFL0_type *) 0xf00632c8u)	/* Read Data and Bit Flip Register 20 */
#define MC34_RDBFL21	(*( MC0_RDBFL0_type *) 0xf00632cau)	/* Read Data and Bit Flip Register 21 */
#define MC34_RDBFL22	(*( MC0_RDBFL0_type *) 0xf00632ccu)	/* Read Data and Bit Flip Register 22 */
#define MC34_RDBFL23	(*( MC0_RDBFL0_type *) 0xf00632ceu)	/* Read Data and Bit Flip Register 23 */
#define MC34_RDBFL24	(*( MC0_RDBFL0_type *) 0xf00632d0u)	/* Read Data and Bit Flip Register 24 */
#define MC34_RDBFL25	(*( MC0_RDBFL0_type *) 0xf00632d2u)	/* Read Data and Bit Flip Register 25 */
#define MC34_RDBFL26	(*( MC0_RDBFL0_type *) 0xf00632d4u)	/* Read Data and Bit Flip Register 26 */
#define MC34_RDBFL27	(*( MC0_RDBFL0_type *) 0xf00632d6u)	/* Read Data and Bit Flip Register 27 */
#define MC34_RDBFL28	(*( MC0_RDBFL0_type *) 0xf00632d8u)	/* Read Data and Bit Flip Register 28 */
#define MC34_RDBFL29	(*( MC0_RDBFL0_type *) 0xf00632dau)	/* Read Data and Bit Flip Register 29 */
#define MC34_RDBFL3	(*( MC0_RDBFL0_type *) 0xf00632a6u)	/* Read Data and Bit Flip Register 3 */
#define MC34_RDBFL30	(*( MC0_RDBFL0_type *) 0xf00632dcu)	/* Read Data and Bit Flip Register 30 */
#define MC34_RDBFL31	(*( MC0_RDBFL0_type *) 0xf00632deu)	/* Read Data and Bit Flip Register 31 */
#define MC34_RDBFL32	(*( MC0_RDBFL0_type *) 0xf00632e0u)	/* Read Data and Bit Flip Register 32 */
#define MC34_RDBFL33	(*( MC0_RDBFL0_type *) 0xf00632e2u)	/* Read Data and Bit Flip Register 33 */
#define MC34_RDBFL34	(*( MC0_RDBFL0_type *) 0xf00632e4u)	/* Read Data and Bit Flip Register 34 */
#define MC34_RDBFL35	(*( MC0_RDBFL0_type *) 0xf00632e6u)	/* Read Data and Bit Flip Register 35 */
#define MC34_RDBFL36	(*( MC0_RDBFL0_type *) 0xf00632e8u)	/* Read Data and Bit Flip Register 36 */
#define MC34_RDBFL37	(*( MC0_RDBFL0_type *) 0xf00632eau)	/* Read Data and Bit Flip Register 37 */
#define MC34_RDBFL38	(*( MC0_RDBFL0_type *) 0xf00632ecu)	/* Read Data and Bit Flip Register 38 */
#define MC34_RDBFL39	(*( MC0_RDBFL0_type *) 0xf00632eeu)	/* Read Data and Bit Flip Register 39 */
#define MC34_RDBFL4	(*( MC0_RDBFL0_type *) 0xf00632a8u)	/* Read Data and Bit Flip Register 4 */
#define MC34_RDBFL5	(*( MC0_RDBFL0_type *) 0xf00632aau)	/* Read Data and Bit Flip Register 5 */
#define MC34_RDBFL6	(*( MC0_RDBFL0_type *) 0xf00632acu)	/* Read Data and Bit Flip Register 6 */
#define MC34_RDBFL7	(*( MC0_RDBFL0_type *) 0xf00632aeu)	/* Read Data and Bit Flip Register 7 */
#define MC34_RDBFL8	(*( MC0_RDBFL0_type *) 0xf00632b0u)	/* Read Data and Bit Flip Register 8 */
#define MC34_RDBFL9	(*( MC0_RDBFL0_type *) 0xf00632b2u)	/* Read Data and Bit Flip Register 9 */
#define MC35_RDBFL0	(*( MC0_RDBFL0_type *) 0xf00633a0u)	/* Read Data and Bit Flip Register 0 */
#define MC35_RDBFL1	(*( MC0_RDBFL0_type *) 0xf00633a2u)	/* Read Data and Bit Flip Register 1 */
#define MC35_RDBFL10	(*( MC0_RDBFL0_type *) 0xf00633b4u)	/* Read Data and Bit Flip Register 10 */
#define MC35_RDBFL11	(*( MC0_RDBFL0_type *) 0xf00633b6u)	/* Read Data and Bit Flip Register 11 */
#define MC35_RDBFL12	(*( MC0_RDBFL0_type *) 0xf00633b8u)	/* Read Data and Bit Flip Register 12 */
#define MC35_RDBFL13	(*( MC0_RDBFL0_type *) 0xf00633bau)	/* Read Data and Bit Flip Register 13 */
#define MC35_RDBFL14	(*( MC0_RDBFL0_type *) 0xf00633bcu)	/* Read Data and Bit Flip Register 14 */
#define MC35_RDBFL15	(*( MC0_RDBFL0_type *) 0xf00633beu)	/* Read Data and Bit Flip Register 15 */
#define MC35_RDBFL16	(*( MC0_RDBFL0_type *) 0xf00633c0u)	/* Read Data and Bit Flip Register 16 */
#define MC35_RDBFL17	(*( MC0_RDBFL0_type *) 0xf00633c2u)	/* Read Data and Bit Flip Register 17 */
#define MC35_RDBFL18	(*( MC0_RDBFL0_type *) 0xf00633c4u)	/* Read Data and Bit Flip Register 18 */
#define MC35_RDBFL19	(*( MC0_RDBFL0_type *) 0xf00633c6u)	/* Read Data and Bit Flip Register 19 */
#define MC35_RDBFL2	(*( MC0_RDBFL0_type *) 0xf00633a4u)	/* Read Data and Bit Flip Register 2 */
#define MC35_RDBFL20	(*( MC0_RDBFL0_type *) 0xf00633c8u)	/* Read Data and Bit Flip Register 20 */
#define MC35_RDBFL21	(*( MC0_RDBFL0_type *) 0xf00633cau)	/* Read Data and Bit Flip Register 21 */
#define MC35_RDBFL22	(*( MC0_RDBFL0_type *) 0xf00633ccu)	/* Read Data and Bit Flip Register 22 */
#define MC35_RDBFL23	(*( MC0_RDBFL0_type *) 0xf00633ceu)	/* Read Data and Bit Flip Register 23 */
#define MC35_RDBFL24	(*( MC0_RDBFL0_type *) 0xf00633d0u)	/* Read Data and Bit Flip Register 24 */
#define MC35_RDBFL25	(*( MC0_RDBFL0_type *) 0xf00633d2u)	/* Read Data and Bit Flip Register 25 */
#define MC35_RDBFL26	(*( MC0_RDBFL0_type *) 0xf00633d4u)	/* Read Data and Bit Flip Register 26 */
#define MC35_RDBFL27	(*( MC0_RDBFL0_type *) 0xf00633d6u)	/* Read Data and Bit Flip Register 27 */
#define MC35_RDBFL28	(*( MC0_RDBFL0_type *) 0xf00633d8u)	/* Read Data and Bit Flip Register 28 */
#define MC35_RDBFL29	(*( MC0_RDBFL0_type *) 0xf00633dau)	/* Read Data and Bit Flip Register 29 */
#define MC35_RDBFL3	(*( MC0_RDBFL0_type *) 0xf00633a6u)	/* Read Data and Bit Flip Register 3 */
#define MC35_RDBFL30	(*( MC0_RDBFL0_type *) 0xf00633dcu)	/* Read Data and Bit Flip Register 30 */
#define MC35_RDBFL31	(*( MC0_RDBFL0_type *) 0xf00633deu)	/* Read Data and Bit Flip Register 31 */
#define MC35_RDBFL32	(*( MC0_RDBFL0_type *) 0xf00633e0u)	/* Read Data and Bit Flip Register 32 */
#define MC35_RDBFL33	(*( MC0_RDBFL0_type *) 0xf00633e2u)	/* Read Data and Bit Flip Register 33 */
#define MC35_RDBFL34	(*( MC0_RDBFL0_type *) 0xf00633e4u)	/* Read Data and Bit Flip Register 34 */
#define MC35_RDBFL35	(*( MC0_RDBFL0_type *) 0xf00633e6u)	/* Read Data and Bit Flip Register 35 */
#define MC35_RDBFL36	(*( MC0_RDBFL0_type *) 0xf00633e8u)	/* Read Data and Bit Flip Register 36 */
#define MC35_RDBFL37	(*( MC0_RDBFL0_type *) 0xf00633eau)	/* Read Data and Bit Flip Register 37 */
#define MC35_RDBFL38	(*( MC0_RDBFL0_type *) 0xf00633ecu)	/* Read Data and Bit Flip Register 38 */
#define MC35_RDBFL39	(*( MC0_RDBFL0_type *) 0xf00633eeu)	/* Read Data and Bit Flip Register 39 */
#define MC35_RDBFL4	(*( MC0_RDBFL0_type *) 0xf00633a8u)	/* Read Data and Bit Flip Register 4 */
#define MC35_RDBFL5	(*( MC0_RDBFL0_type *) 0xf00633aau)	/* Read Data and Bit Flip Register 5 */
#define MC35_RDBFL6	(*( MC0_RDBFL0_type *) 0xf00633acu)	/* Read Data and Bit Flip Register 6 */
#define MC35_RDBFL7	(*( MC0_RDBFL0_type *) 0xf00633aeu)	/* Read Data and Bit Flip Register 7 */
#define MC35_RDBFL8	(*( MC0_RDBFL0_type *) 0xf00633b0u)	/* Read Data and Bit Flip Register 8 */
#define MC35_RDBFL9	(*( MC0_RDBFL0_type *) 0xf00633b2u)	/* Read Data and Bit Flip Register 9 */
#define MC36_RDBFL0	(*( MC0_RDBFL0_type *) 0xf00634a0u)	/* Read Data and Bit Flip Register 0 */
#define MC36_RDBFL1	(*( MC0_RDBFL0_type *) 0xf00634a2u)	/* Read Data and Bit Flip Register 1 */
#define MC36_RDBFL10	(*( MC0_RDBFL0_type *) 0xf00634b4u)	/* Read Data and Bit Flip Register 10 */
#define MC36_RDBFL11	(*( MC0_RDBFL0_type *) 0xf00634b6u)	/* Read Data and Bit Flip Register 11 */
#define MC36_RDBFL12	(*( MC0_RDBFL0_type *) 0xf00634b8u)	/* Read Data and Bit Flip Register 12 */
#define MC36_RDBFL13	(*( MC0_RDBFL0_type *) 0xf00634bau)	/* Read Data and Bit Flip Register 13 */
#define MC36_RDBFL14	(*( MC0_RDBFL0_type *) 0xf00634bcu)	/* Read Data and Bit Flip Register 14 */
#define MC36_RDBFL15	(*( MC0_RDBFL0_type *) 0xf00634beu)	/* Read Data and Bit Flip Register 15 */
#define MC36_RDBFL16	(*( MC0_RDBFL0_type *) 0xf00634c0u)	/* Read Data and Bit Flip Register 16 */
#define MC36_RDBFL17	(*( MC0_RDBFL0_type *) 0xf00634c2u)	/* Read Data and Bit Flip Register 17 */
#define MC36_RDBFL18	(*( MC0_RDBFL0_type *) 0xf00634c4u)	/* Read Data and Bit Flip Register 18 */
#define MC36_RDBFL19	(*( MC0_RDBFL0_type *) 0xf00634c6u)	/* Read Data and Bit Flip Register 19 */
#define MC36_RDBFL2	(*( MC0_RDBFL0_type *) 0xf00634a4u)	/* Read Data and Bit Flip Register 2 */
#define MC36_RDBFL20	(*( MC0_RDBFL0_type *) 0xf00634c8u)	/* Read Data and Bit Flip Register 20 */
#define MC36_RDBFL21	(*( MC0_RDBFL0_type *) 0xf00634cau)	/* Read Data and Bit Flip Register 21 */
#define MC36_RDBFL22	(*( MC0_RDBFL0_type *) 0xf00634ccu)	/* Read Data and Bit Flip Register 22 */
#define MC36_RDBFL23	(*( MC0_RDBFL0_type *) 0xf00634ceu)	/* Read Data and Bit Flip Register 23 */
#define MC36_RDBFL24	(*( MC0_RDBFL0_type *) 0xf00634d0u)	/* Read Data and Bit Flip Register 24 */
#define MC36_RDBFL25	(*( MC0_RDBFL0_type *) 0xf00634d2u)	/* Read Data and Bit Flip Register 25 */
#define MC36_RDBFL26	(*( MC0_RDBFL0_type *) 0xf00634d4u)	/* Read Data and Bit Flip Register 26 */
#define MC36_RDBFL27	(*( MC0_RDBFL0_type *) 0xf00634d6u)	/* Read Data and Bit Flip Register 27 */
#define MC36_RDBFL28	(*( MC0_RDBFL0_type *) 0xf00634d8u)	/* Read Data and Bit Flip Register 28 */
#define MC36_RDBFL29	(*( MC0_RDBFL0_type *) 0xf00634dau)	/* Read Data and Bit Flip Register 29 */
#define MC36_RDBFL3	(*( MC0_RDBFL0_type *) 0xf00634a6u)	/* Read Data and Bit Flip Register 3 */
#define MC36_RDBFL30	(*( MC0_RDBFL0_type *) 0xf00634dcu)	/* Read Data and Bit Flip Register 30 */
#define MC36_RDBFL31	(*( MC0_RDBFL0_type *) 0xf00634deu)	/* Read Data and Bit Flip Register 31 */
#define MC36_RDBFL32	(*( MC0_RDBFL0_type *) 0xf00634e0u)	/* Read Data and Bit Flip Register 32 */
#define MC36_RDBFL33	(*( MC0_RDBFL0_type *) 0xf00634e2u)	/* Read Data and Bit Flip Register 33 */
#define MC36_RDBFL34	(*( MC0_RDBFL0_type *) 0xf00634e4u)	/* Read Data and Bit Flip Register 34 */
#define MC36_RDBFL35	(*( MC0_RDBFL0_type *) 0xf00634e6u)	/* Read Data and Bit Flip Register 35 */
#define MC36_RDBFL36	(*( MC0_RDBFL0_type *) 0xf00634e8u)	/* Read Data and Bit Flip Register 36 */
#define MC36_RDBFL37	(*( MC0_RDBFL0_type *) 0xf00634eau)	/* Read Data and Bit Flip Register 37 */
#define MC36_RDBFL38	(*( MC0_RDBFL0_type *) 0xf00634ecu)	/* Read Data and Bit Flip Register 38 */
#define MC36_RDBFL39	(*( MC0_RDBFL0_type *) 0xf00634eeu)	/* Read Data and Bit Flip Register 39 */
#define MC36_RDBFL4	(*( MC0_RDBFL0_type *) 0xf00634a8u)	/* Read Data and Bit Flip Register 4 */
#define MC36_RDBFL5	(*( MC0_RDBFL0_type *) 0xf00634aau)	/* Read Data and Bit Flip Register 5 */
#define MC36_RDBFL6	(*( MC0_RDBFL0_type *) 0xf00634acu)	/* Read Data and Bit Flip Register 6 */
#define MC36_RDBFL7	(*( MC0_RDBFL0_type *) 0xf00634aeu)	/* Read Data and Bit Flip Register 7 */
#define MC36_RDBFL8	(*( MC0_RDBFL0_type *) 0xf00634b0u)	/* Read Data and Bit Flip Register 8 */
#define MC36_RDBFL9	(*( MC0_RDBFL0_type *) 0xf00634b2u)	/* Read Data and Bit Flip Register 9 */
#define MC37_RDBFL0	(*( MC0_RDBFL0_type *) 0xf00635a0u)	/* Read Data and Bit Flip Register 0 */
#define MC37_RDBFL1	(*( MC0_RDBFL0_type *) 0xf00635a2u)	/* Read Data and Bit Flip Register 1 */
#define MC37_RDBFL10	(*( MC0_RDBFL0_type *) 0xf00635b4u)	/* Read Data and Bit Flip Register 10 */
#define MC37_RDBFL11	(*( MC0_RDBFL0_type *) 0xf00635b6u)	/* Read Data and Bit Flip Register 11 */
#define MC37_RDBFL12	(*( MC0_RDBFL0_type *) 0xf00635b8u)	/* Read Data and Bit Flip Register 12 */
#define MC37_RDBFL13	(*( MC0_RDBFL0_type *) 0xf00635bau)	/* Read Data and Bit Flip Register 13 */
#define MC37_RDBFL14	(*( MC0_RDBFL0_type *) 0xf00635bcu)	/* Read Data and Bit Flip Register 14 */
#define MC37_RDBFL15	(*( MC0_RDBFL0_type *) 0xf00635beu)	/* Read Data and Bit Flip Register 15 */
#define MC37_RDBFL16	(*( MC0_RDBFL0_type *) 0xf00635c0u)	/* Read Data and Bit Flip Register 16 */
#define MC37_RDBFL17	(*( MC0_RDBFL0_type *) 0xf00635c2u)	/* Read Data and Bit Flip Register 17 */
#define MC37_RDBFL18	(*( MC0_RDBFL0_type *) 0xf00635c4u)	/* Read Data and Bit Flip Register 18 */
#define MC37_RDBFL19	(*( MC0_RDBFL0_type *) 0xf00635c6u)	/* Read Data and Bit Flip Register 19 */
#define MC37_RDBFL2	(*( MC0_RDBFL0_type *) 0xf00635a4u)	/* Read Data and Bit Flip Register 2 */
#define MC37_RDBFL20	(*( MC0_RDBFL0_type *) 0xf00635c8u)	/* Read Data and Bit Flip Register 20 */
#define MC37_RDBFL21	(*( MC0_RDBFL0_type *) 0xf00635cau)	/* Read Data and Bit Flip Register 21 */
#define MC37_RDBFL22	(*( MC0_RDBFL0_type *) 0xf00635ccu)	/* Read Data and Bit Flip Register 22 */
#define MC37_RDBFL23	(*( MC0_RDBFL0_type *) 0xf00635ceu)	/* Read Data and Bit Flip Register 23 */
#define MC37_RDBFL24	(*( MC0_RDBFL0_type *) 0xf00635d0u)	/* Read Data and Bit Flip Register 24 */
#define MC37_RDBFL25	(*( MC0_RDBFL0_type *) 0xf00635d2u)	/* Read Data and Bit Flip Register 25 */
#define MC37_RDBFL26	(*( MC0_RDBFL0_type *) 0xf00635d4u)	/* Read Data and Bit Flip Register 26 */
#define MC37_RDBFL27	(*( MC0_RDBFL0_type *) 0xf00635d6u)	/* Read Data and Bit Flip Register 27 */
#define MC37_RDBFL28	(*( MC0_RDBFL0_type *) 0xf00635d8u)	/* Read Data and Bit Flip Register 28 */
#define MC37_RDBFL29	(*( MC0_RDBFL0_type *) 0xf00635dau)	/* Read Data and Bit Flip Register 29 */
#define MC37_RDBFL3	(*( MC0_RDBFL0_type *) 0xf00635a6u)	/* Read Data and Bit Flip Register 3 */
#define MC37_RDBFL30	(*( MC0_RDBFL0_type *) 0xf00635dcu)	/* Read Data and Bit Flip Register 30 */
#define MC37_RDBFL31	(*( MC0_RDBFL0_type *) 0xf00635deu)	/* Read Data and Bit Flip Register 31 */
#define MC37_RDBFL32	(*( MC0_RDBFL0_type *) 0xf00635e0u)	/* Read Data and Bit Flip Register 32 */
#define MC37_RDBFL33	(*( MC0_RDBFL0_type *) 0xf00635e2u)	/* Read Data and Bit Flip Register 33 */
#define MC37_RDBFL34	(*( MC0_RDBFL0_type *) 0xf00635e4u)	/* Read Data and Bit Flip Register 34 */
#define MC37_RDBFL35	(*( MC0_RDBFL0_type *) 0xf00635e6u)	/* Read Data and Bit Flip Register 35 */
#define MC37_RDBFL36	(*( MC0_RDBFL0_type *) 0xf00635e8u)	/* Read Data and Bit Flip Register 36 */
#define MC37_RDBFL37	(*( MC0_RDBFL0_type *) 0xf00635eau)	/* Read Data and Bit Flip Register 37 */
#define MC37_RDBFL38	(*( MC0_RDBFL0_type *) 0xf00635ecu)	/* Read Data and Bit Flip Register 38 */
#define MC37_RDBFL39	(*( MC0_RDBFL0_type *) 0xf00635eeu)	/* Read Data and Bit Flip Register 39 */
#define MC37_RDBFL4	(*( MC0_RDBFL0_type *) 0xf00635a8u)	/* Read Data and Bit Flip Register 4 */
#define MC37_RDBFL5	(*( MC0_RDBFL0_type *) 0xf00635aau)	/* Read Data and Bit Flip Register 5 */
#define MC37_RDBFL6	(*( MC0_RDBFL0_type *) 0xf00635acu)	/* Read Data and Bit Flip Register 6 */
#define MC37_RDBFL7	(*( MC0_RDBFL0_type *) 0xf00635aeu)	/* Read Data and Bit Flip Register 7 */
#define MC37_RDBFL8	(*( MC0_RDBFL0_type *) 0xf00635b0u)	/* Read Data and Bit Flip Register 8 */
#define MC37_RDBFL9	(*( MC0_RDBFL0_type *) 0xf00635b2u)	/* Read Data and Bit Flip Register 9 */
#define MC38_RDBFL0	(*( MC0_RDBFL0_type *) 0xf00636a0u)	/* Read Data and Bit Flip Register 0 */
#define MC38_RDBFL1	(*( MC0_RDBFL0_type *) 0xf00636a2u)	/* Read Data and Bit Flip Register 1 */
#define MC38_RDBFL10	(*( MC0_RDBFL0_type *) 0xf00636b4u)	/* Read Data and Bit Flip Register 10 */
#define MC38_RDBFL11	(*( MC0_RDBFL0_type *) 0xf00636b6u)	/* Read Data and Bit Flip Register 11 */
#define MC38_RDBFL12	(*( MC0_RDBFL0_type *) 0xf00636b8u)	/* Read Data and Bit Flip Register 12 */
#define MC38_RDBFL13	(*( MC0_RDBFL0_type *) 0xf00636bau)	/* Read Data and Bit Flip Register 13 */
#define MC38_RDBFL14	(*( MC0_RDBFL0_type *) 0xf00636bcu)	/* Read Data and Bit Flip Register 14 */
#define MC38_RDBFL15	(*( MC0_RDBFL0_type *) 0xf00636beu)	/* Read Data and Bit Flip Register 15 */
#define MC38_RDBFL16	(*( MC0_RDBFL0_type *) 0xf00636c0u)	/* Read Data and Bit Flip Register 16 */
#define MC38_RDBFL17	(*( MC0_RDBFL0_type *) 0xf00636c2u)	/* Read Data and Bit Flip Register 17 */
#define MC38_RDBFL18	(*( MC0_RDBFL0_type *) 0xf00636c4u)	/* Read Data and Bit Flip Register 18 */
#define MC38_RDBFL19	(*( MC0_RDBFL0_type *) 0xf00636c6u)	/* Read Data and Bit Flip Register 19 */
#define MC38_RDBFL2	(*( MC0_RDBFL0_type *) 0xf00636a4u)	/* Read Data and Bit Flip Register 2 */
#define MC38_RDBFL20	(*( MC0_RDBFL0_type *) 0xf00636c8u)	/* Read Data and Bit Flip Register 20 */
#define MC38_RDBFL21	(*( MC0_RDBFL0_type *) 0xf00636cau)	/* Read Data and Bit Flip Register 21 */
#define MC38_RDBFL22	(*( MC0_RDBFL0_type *) 0xf00636ccu)	/* Read Data and Bit Flip Register 22 */
#define MC38_RDBFL23	(*( MC0_RDBFL0_type *) 0xf00636ceu)	/* Read Data and Bit Flip Register 23 */
#define MC38_RDBFL24	(*( MC0_RDBFL0_type *) 0xf00636d0u)	/* Read Data and Bit Flip Register 24 */
#define MC38_RDBFL25	(*( MC0_RDBFL0_type *) 0xf00636d2u)	/* Read Data and Bit Flip Register 25 */
#define MC38_RDBFL26	(*( MC0_RDBFL0_type *) 0xf00636d4u)	/* Read Data and Bit Flip Register 26 */
#define MC38_RDBFL27	(*( MC0_RDBFL0_type *) 0xf00636d6u)	/* Read Data and Bit Flip Register 27 */
#define MC38_RDBFL28	(*( MC0_RDBFL0_type *) 0xf00636d8u)	/* Read Data and Bit Flip Register 28 */
#define MC38_RDBFL29	(*( MC0_RDBFL0_type *) 0xf00636dau)	/* Read Data and Bit Flip Register 29 */
#define MC38_RDBFL3	(*( MC0_RDBFL0_type *) 0xf00636a6u)	/* Read Data and Bit Flip Register 3 */
#define MC38_RDBFL30	(*( MC0_RDBFL0_type *) 0xf00636dcu)	/* Read Data and Bit Flip Register 30 */
#define MC38_RDBFL31	(*( MC0_RDBFL0_type *) 0xf00636deu)	/* Read Data and Bit Flip Register 31 */
#define MC38_RDBFL32	(*( MC0_RDBFL0_type *) 0xf00636e0u)	/* Read Data and Bit Flip Register 32 */
#define MC38_RDBFL33	(*( MC0_RDBFL0_type *) 0xf00636e2u)	/* Read Data and Bit Flip Register 33 */
#define MC38_RDBFL34	(*( MC0_RDBFL0_type *) 0xf00636e4u)	/* Read Data and Bit Flip Register 34 */
#define MC38_RDBFL35	(*( MC0_RDBFL0_type *) 0xf00636e6u)	/* Read Data and Bit Flip Register 35 */
#define MC38_RDBFL36	(*( MC0_RDBFL0_type *) 0xf00636e8u)	/* Read Data and Bit Flip Register 36 */
#define MC38_RDBFL37	(*( MC0_RDBFL0_type *) 0xf00636eau)	/* Read Data and Bit Flip Register 37 */
#define MC38_RDBFL38	(*( MC0_RDBFL0_type *) 0xf00636ecu)	/* Read Data and Bit Flip Register 38 */
#define MC38_RDBFL39	(*( MC0_RDBFL0_type *) 0xf00636eeu)	/* Read Data and Bit Flip Register 39 */
#define MC38_RDBFL4	(*( MC0_RDBFL0_type *) 0xf00636a8u)	/* Read Data and Bit Flip Register 4 */
#define MC38_RDBFL5	(*( MC0_RDBFL0_type *) 0xf00636aau)	/* Read Data and Bit Flip Register 5 */
#define MC38_RDBFL6	(*( MC0_RDBFL0_type *) 0xf00636acu)	/* Read Data and Bit Flip Register 6 */
#define MC38_RDBFL7	(*( MC0_RDBFL0_type *) 0xf00636aeu)	/* Read Data and Bit Flip Register 7 */
#define MC38_RDBFL8	(*( MC0_RDBFL0_type *) 0xf00636b0u)	/* Read Data and Bit Flip Register 8 */
#define MC38_RDBFL9	(*( MC0_RDBFL0_type *) 0xf00636b2u)	/* Read Data and Bit Flip Register 9 */
#define MC39_RDBFL0	(*( MC0_RDBFL0_type *) 0xf00637a0u)	/* Read Data and Bit Flip Register 0 */
#define MC39_RDBFL1	(*( MC0_RDBFL0_type *) 0xf00637a2u)	/* Read Data and Bit Flip Register 1 */
#define MC39_RDBFL10	(*( MC0_RDBFL0_type *) 0xf00637b4u)	/* Read Data and Bit Flip Register 10 */
#define MC39_RDBFL11	(*( MC0_RDBFL0_type *) 0xf00637b6u)	/* Read Data and Bit Flip Register 11 */
#define MC39_RDBFL12	(*( MC0_RDBFL0_type *) 0xf00637b8u)	/* Read Data and Bit Flip Register 12 */
#define MC39_RDBFL13	(*( MC0_RDBFL0_type *) 0xf00637bau)	/* Read Data and Bit Flip Register 13 */
#define MC39_RDBFL14	(*( MC0_RDBFL0_type *) 0xf00637bcu)	/* Read Data and Bit Flip Register 14 */
#define MC39_RDBFL15	(*( MC0_RDBFL0_type *) 0xf00637beu)	/* Read Data and Bit Flip Register 15 */
#define MC39_RDBFL16	(*( MC0_RDBFL0_type *) 0xf00637c0u)	/* Read Data and Bit Flip Register 16 */
#define MC39_RDBFL17	(*( MC0_RDBFL0_type *) 0xf00637c2u)	/* Read Data and Bit Flip Register 17 */
#define MC39_RDBFL18	(*( MC0_RDBFL0_type *) 0xf00637c4u)	/* Read Data and Bit Flip Register 18 */
#define MC39_RDBFL19	(*( MC0_RDBFL0_type *) 0xf00637c6u)	/* Read Data and Bit Flip Register 19 */
#define MC39_RDBFL2	(*( MC0_RDBFL0_type *) 0xf00637a4u)	/* Read Data and Bit Flip Register 2 */
#define MC39_RDBFL20	(*( MC0_RDBFL0_type *) 0xf00637c8u)	/* Read Data and Bit Flip Register 20 */
#define MC39_RDBFL21	(*( MC0_RDBFL0_type *) 0xf00637cau)	/* Read Data and Bit Flip Register 21 */
#define MC39_RDBFL22	(*( MC0_RDBFL0_type *) 0xf00637ccu)	/* Read Data and Bit Flip Register 22 */
#define MC39_RDBFL23	(*( MC0_RDBFL0_type *) 0xf00637ceu)	/* Read Data and Bit Flip Register 23 */
#define MC39_RDBFL24	(*( MC0_RDBFL0_type *) 0xf00637d0u)	/* Read Data and Bit Flip Register 24 */
#define MC39_RDBFL25	(*( MC0_RDBFL0_type *) 0xf00637d2u)	/* Read Data and Bit Flip Register 25 */
#define MC39_RDBFL26	(*( MC0_RDBFL0_type *) 0xf00637d4u)	/* Read Data and Bit Flip Register 26 */
#define MC39_RDBFL27	(*( MC0_RDBFL0_type *) 0xf00637d6u)	/* Read Data and Bit Flip Register 27 */
#define MC39_RDBFL28	(*( MC0_RDBFL0_type *) 0xf00637d8u)	/* Read Data and Bit Flip Register 28 */
#define MC39_RDBFL29	(*( MC0_RDBFL0_type *) 0xf00637dau)	/* Read Data and Bit Flip Register 29 */
#define MC39_RDBFL3	(*( MC0_RDBFL0_type *) 0xf00637a6u)	/* Read Data and Bit Flip Register 3 */
#define MC39_RDBFL30	(*( MC0_RDBFL0_type *) 0xf00637dcu)	/* Read Data and Bit Flip Register 30 */
#define MC39_RDBFL31	(*( MC0_RDBFL0_type *) 0xf00637deu)	/* Read Data and Bit Flip Register 31 */
#define MC39_RDBFL32	(*( MC0_RDBFL0_type *) 0xf00637e0u)	/* Read Data and Bit Flip Register 32 */
#define MC39_RDBFL33	(*( MC0_RDBFL0_type *) 0xf00637e2u)	/* Read Data and Bit Flip Register 33 */
#define MC39_RDBFL34	(*( MC0_RDBFL0_type *) 0xf00637e4u)	/* Read Data and Bit Flip Register 34 */
#define MC39_RDBFL35	(*( MC0_RDBFL0_type *) 0xf00637e6u)	/* Read Data and Bit Flip Register 35 */
#define MC39_RDBFL36	(*( MC0_RDBFL0_type *) 0xf00637e8u)	/* Read Data and Bit Flip Register 36 */
#define MC39_RDBFL37	(*( MC0_RDBFL0_type *) 0xf00637eau)	/* Read Data and Bit Flip Register 37 */
#define MC39_RDBFL38	(*( MC0_RDBFL0_type *) 0xf00637ecu)	/* Read Data and Bit Flip Register 38 */
#define MC39_RDBFL39	(*( MC0_RDBFL0_type *) 0xf00637eeu)	/* Read Data and Bit Flip Register 39 */
#define MC39_RDBFL4	(*( MC0_RDBFL0_type *) 0xf00637a8u)	/* Read Data and Bit Flip Register 4 */
#define MC39_RDBFL5	(*( MC0_RDBFL0_type *) 0xf00637aau)	/* Read Data and Bit Flip Register 5 */
#define MC39_RDBFL6	(*( MC0_RDBFL0_type *) 0xf00637acu)	/* Read Data and Bit Flip Register 6 */
#define MC39_RDBFL7	(*( MC0_RDBFL0_type *) 0xf00637aeu)	/* Read Data and Bit Flip Register 7 */
#define MC39_RDBFL8	(*( MC0_RDBFL0_type *) 0xf00637b0u)	/* Read Data and Bit Flip Register 8 */
#define MC39_RDBFL9	(*( MC0_RDBFL0_type *) 0xf00637b2u)	/* Read Data and Bit Flip Register 9 */
#define MC3_RDBFL0	(*( MC0_RDBFL0_type *) 0xf00613a0u)	/* Read Data and Bit Flip Register 0 */
#define MC3_RDBFL1	(*( MC0_RDBFL0_type *) 0xf00613a2u)	/* Read Data and Bit Flip Register 1 */
#define MC3_RDBFL10	(*( MC0_RDBFL0_type *) 0xf00613b4u)	/* Read Data and Bit Flip Register 10 */
#define MC3_RDBFL11	(*( MC0_RDBFL0_type *) 0xf00613b6u)	/* Read Data and Bit Flip Register 11 */
#define MC3_RDBFL12	(*( MC0_RDBFL0_type *) 0xf00613b8u)	/* Read Data and Bit Flip Register 12 */
#define MC3_RDBFL13	(*( MC0_RDBFL0_type *) 0xf00613bau)	/* Read Data and Bit Flip Register 13 */
#define MC3_RDBFL14	(*( MC0_RDBFL0_type *) 0xf00613bcu)	/* Read Data and Bit Flip Register 14 */
#define MC3_RDBFL15	(*( MC0_RDBFL0_type *) 0xf00613beu)	/* Read Data and Bit Flip Register 15 */
#define MC3_RDBFL16	(*( MC0_RDBFL0_type *) 0xf00613c0u)	/* Read Data and Bit Flip Register 16 */
#define MC3_RDBFL17	(*( MC0_RDBFL0_type *) 0xf00613c2u)	/* Read Data and Bit Flip Register 17 */
#define MC3_RDBFL18	(*( MC0_RDBFL0_type *) 0xf00613c4u)	/* Read Data and Bit Flip Register 18 */
#define MC3_RDBFL19	(*( MC0_RDBFL0_type *) 0xf00613c6u)	/* Read Data and Bit Flip Register 19 */
#define MC3_RDBFL2	(*( MC0_RDBFL0_type *) 0xf00613a4u)	/* Read Data and Bit Flip Register 2 */
#define MC3_RDBFL20	(*( MC0_RDBFL0_type *) 0xf00613c8u)	/* Read Data and Bit Flip Register 20 */
#define MC3_RDBFL21	(*( MC0_RDBFL0_type *) 0xf00613cau)	/* Read Data and Bit Flip Register 21 */
#define MC3_RDBFL22	(*( MC0_RDBFL0_type *) 0xf00613ccu)	/* Read Data and Bit Flip Register 22 */
#define MC3_RDBFL23	(*( MC0_RDBFL0_type *) 0xf00613ceu)	/* Read Data and Bit Flip Register 23 */
#define MC3_RDBFL24	(*( MC0_RDBFL0_type *) 0xf00613d0u)	/* Read Data and Bit Flip Register 24 */
#define MC3_RDBFL25	(*( MC0_RDBFL0_type *) 0xf00613d2u)	/* Read Data and Bit Flip Register 25 */
#define MC3_RDBFL26	(*( MC0_RDBFL0_type *) 0xf00613d4u)	/* Read Data and Bit Flip Register 26 */
#define MC3_RDBFL27	(*( MC0_RDBFL0_type *) 0xf00613d6u)	/* Read Data and Bit Flip Register 27 */
#define MC3_RDBFL28	(*( MC0_RDBFL0_type *) 0xf00613d8u)	/* Read Data and Bit Flip Register 28 */
#define MC3_RDBFL29	(*( MC0_RDBFL0_type *) 0xf00613dau)	/* Read Data and Bit Flip Register 29 */
#define MC3_RDBFL3	(*( MC0_RDBFL0_type *) 0xf00613a6u)	/* Read Data and Bit Flip Register 3 */
#define MC3_RDBFL30	(*( MC0_RDBFL0_type *) 0xf00613dcu)	/* Read Data and Bit Flip Register 30 */
#define MC3_RDBFL31	(*( MC0_RDBFL0_type *) 0xf00613deu)	/* Read Data and Bit Flip Register 31 */
#define MC3_RDBFL32	(*( MC0_RDBFL0_type *) 0xf00613e0u)	/* Read Data and Bit Flip Register 32 */
#define MC3_RDBFL33	(*( MC0_RDBFL0_type *) 0xf00613e2u)	/* Read Data and Bit Flip Register 33 */
#define MC3_RDBFL34	(*( MC0_RDBFL0_type *) 0xf00613e4u)	/* Read Data and Bit Flip Register 34 */
#define MC3_RDBFL35	(*( MC0_RDBFL0_type *) 0xf00613e6u)	/* Read Data and Bit Flip Register 35 */
#define MC3_RDBFL36	(*( MC0_RDBFL0_type *) 0xf00613e8u)	/* Read Data and Bit Flip Register 36 */
#define MC3_RDBFL37	(*( MC0_RDBFL0_type *) 0xf00613eau)	/* Read Data and Bit Flip Register 37 */
#define MC3_RDBFL38	(*( MC0_RDBFL0_type *) 0xf00613ecu)	/* Read Data and Bit Flip Register 38 */
#define MC3_RDBFL39	(*( MC0_RDBFL0_type *) 0xf00613eeu)	/* Read Data and Bit Flip Register 39 */
#define MC3_RDBFL4	(*( MC0_RDBFL0_type *) 0xf00613a8u)	/* Read Data and Bit Flip Register 4 */
#define MC3_RDBFL5	(*( MC0_RDBFL0_type *) 0xf00613aau)	/* Read Data and Bit Flip Register 5 */
#define MC3_RDBFL6	(*( MC0_RDBFL0_type *) 0xf00613acu)	/* Read Data and Bit Flip Register 6 */
#define MC3_RDBFL7	(*( MC0_RDBFL0_type *) 0xf00613aeu)	/* Read Data and Bit Flip Register 7 */
#define MC3_RDBFL8	(*( MC0_RDBFL0_type *) 0xf00613b0u)	/* Read Data and Bit Flip Register 8 */
#define MC3_RDBFL9	(*( MC0_RDBFL0_type *) 0xf00613b2u)	/* Read Data and Bit Flip Register 9 */
#define MC40_RDBFL0	(*( MC0_RDBFL0_type *) 0xf00638a0u)	/* Read Data and Bit Flip Register 0 */
#define MC40_RDBFL1	(*( MC0_RDBFL0_type *) 0xf00638a2u)	/* Read Data and Bit Flip Register 1 */
#define MC40_RDBFL10	(*( MC0_RDBFL0_type *) 0xf00638b4u)	/* Read Data and Bit Flip Register 10 */
#define MC40_RDBFL11	(*( MC0_RDBFL0_type *) 0xf00638b6u)	/* Read Data and Bit Flip Register 11 */
#define MC40_RDBFL12	(*( MC0_RDBFL0_type *) 0xf00638b8u)	/* Read Data and Bit Flip Register 12 */
#define MC40_RDBFL13	(*( MC0_RDBFL0_type *) 0xf00638bau)	/* Read Data and Bit Flip Register 13 */
#define MC40_RDBFL14	(*( MC0_RDBFL0_type *) 0xf00638bcu)	/* Read Data and Bit Flip Register 14 */
#define MC40_RDBFL15	(*( MC0_RDBFL0_type *) 0xf00638beu)	/* Read Data and Bit Flip Register 15 */
#define MC40_RDBFL16	(*( MC0_RDBFL0_type *) 0xf00638c0u)	/* Read Data and Bit Flip Register 16 */
#define MC40_RDBFL17	(*( MC0_RDBFL0_type *) 0xf00638c2u)	/* Read Data and Bit Flip Register 17 */
#define MC40_RDBFL18	(*( MC0_RDBFL0_type *) 0xf00638c4u)	/* Read Data and Bit Flip Register 18 */
#define MC40_RDBFL19	(*( MC0_RDBFL0_type *) 0xf00638c6u)	/* Read Data and Bit Flip Register 19 */
#define MC40_RDBFL2	(*( MC0_RDBFL0_type *) 0xf00638a4u)	/* Read Data and Bit Flip Register 2 */
#define MC40_RDBFL20	(*( MC0_RDBFL0_type *) 0xf00638c8u)	/* Read Data and Bit Flip Register 20 */
#define MC40_RDBFL21	(*( MC0_RDBFL0_type *) 0xf00638cau)	/* Read Data and Bit Flip Register 21 */
#define MC40_RDBFL22	(*( MC0_RDBFL0_type *) 0xf00638ccu)	/* Read Data and Bit Flip Register 22 */
#define MC40_RDBFL23	(*( MC0_RDBFL0_type *) 0xf00638ceu)	/* Read Data and Bit Flip Register 23 */
#define MC40_RDBFL24	(*( MC0_RDBFL0_type *) 0xf00638d0u)	/* Read Data and Bit Flip Register 24 */
#define MC40_RDBFL25	(*( MC0_RDBFL0_type *) 0xf00638d2u)	/* Read Data and Bit Flip Register 25 */
#define MC40_RDBFL26	(*( MC0_RDBFL0_type *) 0xf00638d4u)	/* Read Data and Bit Flip Register 26 */
#define MC40_RDBFL27	(*( MC0_RDBFL0_type *) 0xf00638d6u)	/* Read Data and Bit Flip Register 27 */
#define MC40_RDBFL28	(*( MC0_RDBFL0_type *) 0xf00638d8u)	/* Read Data and Bit Flip Register 28 */
#define MC40_RDBFL29	(*( MC0_RDBFL0_type *) 0xf00638dau)	/* Read Data and Bit Flip Register 29 */
#define MC40_RDBFL3	(*( MC0_RDBFL0_type *) 0xf00638a6u)	/* Read Data and Bit Flip Register 3 */
#define MC40_RDBFL30	(*( MC0_RDBFL0_type *) 0xf00638dcu)	/* Read Data and Bit Flip Register 30 */
#define MC40_RDBFL31	(*( MC0_RDBFL0_type *) 0xf00638deu)	/* Read Data and Bit Flip Register 31 */
#define MC40_RDBFL32	(*( MC0_RDBFL0_type *) 0xf00638e0u)	/* Read Data and Bit Flip Register 32 */
#define MC40_RDBFL33	(*( MC0_RDBFL0_type *) 0xf00638e2u)	/* Read Data and Bit Flip Register 33 */
#define MC40_RDBFL34	(*( MC0_RDBFL0_type *) 0xf00638e4u)	/* Read Data and Bit Flip Register 34 */
#define MC40_RDBFL35	(*( MC0_RDBFL0_type *) 0xf00638e6u)	/* Read Data and Bit Flip Register 35 */
#define MC40_RDBFL36	(*( MC0_RDBFL0_type *) 0xf00638e8u)	/* Read Data and Bit Flip Register 36 */
#define MC40_RDBFL37	(*( MC0_RDBFL0_type *) 0xf00638eau)	/* Read Data and Bit Flip Register 37 */
#define MC40_RDBFL38	(*( MC0_RDBFL0_type *) 0xf00638ecu)	/* Read Data and Bit Flip Register 38 */
#define MC40_RDBFL39	(*( MC0_RDBFL0_type *) 0xf00638eeu)	/* Read Data and Bit Flip Register 39 */
#define MC40_RDBFL4	(*( MC0_RDBFL0_type *) 0xf00638a8u)	/* Read Data and Bit Flip Register 4 */
#define MC40_RDBFL5	(*( MC0_RDBFL0_type *) 0xf00638aau)	/* Read Data and Bit Flip Register 5 */
#define MC40_RDBFL6	(*( MC0_RDBFL0_type *) 0xf00638acu)	/* Read Data and Bit Flip Register 6 */
#define MC40_RDBFL7	(*( MC0_RDBFL0_type *) 0xf00638aeu)	/* Read Data and Bit Flip Register 7 */
#define MC40_RDBFL8	(*( MC0_RDBFL0_type *) 0xf00638b0u)	/* Read Data and Bit Flip Register 8 */
#define MC40_RDBFL9	(*( MC0_RDBFL0_type *) 0xf00638b2u)	/* Read Data and Bit Flip Register 9 */
#define MC41_RDBFL0	(*( MC0_RDBFL0_type *) 0xf00639a0u)	/* Read Data and Bit Flip Register 0 */
#define MC41_RDBFL1	(*( MC0_RDBFL0_type *) 0xf00639a2u)	/* Read Data and Bit Flip Register 1 */
#define MC41_RDBFL10	(*( MC0_RDBFL0_type *) 0xf00639b4u)	/* Read Data and Bit Flip Register 10 */
#define MC41_RDBFL11	(*( MC0_RDBFL0_type *) 0xf00639b6u)	/* Read Data and Bit Flip Register 11 */
#define MC41_RDBFL12	(*( MC0_RDBFL0_type *) 0xf00639b8u)	/* Read Data and Bit Flip Register 12 */
#define MC41_RDBFL13	(*( MC0_RDBFL0_type *) 0xf00639bau)	/* Read Data and Bit Flip Register 13 */
#define MC41_RDBFL14	(*( MC0_RDBFL0_type *) 0xf00639bcu)	/* Read Data and Bit Flip Register 14 */
#define MC41_RDBFL15	(*( MC0_RDBFL0_type *) 0xf00639beu)	/* Read Data and Bit Flip Register 15 */
#define MC41_RDBFL16	(*( MC0_RDBFL0_type *) 0xf00639c0u)	/* Read Data and Bit Flip Register 16 */
#define MC41_RDBFL17	(*( MC0_RDBFL0_type *) 0xf00639c2u)	/* Read Data and Bit Flip Register 17 */
#define MC41_RDBFL18	(*( MC0_RDBFL0_type *) 0xf00639c4u)	/* Read Data and Bit Flip Register 18 */
#define MC41_RDBFL19	(*( MC0_RDBFL0_type *) 0xf00639c6u)	/* Read Data and Bit Flip Register 19 */
#define MC41_RDBFL2	(*( MC0_RDBFL0_type *) 0xf00639a4u)	/* Read Data and Bit Flip Register 2 */
#define MC41_RDBFL20	(*( MC0_RDBFL0_type *) 0xf00639c8u)	/* Read Data and Bit Flip Register 20 */
#define MC41_RDBFL21	(*( MC0_RDBFL0_type *) 0xf00639cau)	/* Read Data and Bit Flip Register 21 */
#define MC41_RDBFL22	(*( MC0_RDBFL0_type *) 0xf00639ccu)	/* Read Data and Bit Flip Register 22 */
#define MC41_RDBFL23	(*( MC0_RDBFL0_type *) 0xf00639ceu)	/* Read Data and Bit Flip Register 23 */
#define MC41_RDBFL24	(*( MC0_RDBFL0_type *) 0xf00639d0u)	/* Read Data and Bit Flip Register 24 */
#define MC41_RDBFL25	(*( MC0_RDBFL0_type *) 0xf00639d2u)	/* Read Data and Bit Flip Register 25 */
#define MC41_RDBFL26	(*( MC0_RDBFL0_type *) 0xf00639d4u)	/* Read Data and Bit Flip Register 26 */
#define MC41_RDBFL27	(*( MC0_RDBFL0_type *) 0xf00639d6u)	/* Read Data and Bit Flip Register 27 */
#define MC41_RDBFL28	(*( MC0_RDBFL0_type *) 0xf00639d8u)	/* Read Data and Bit Flip Register 28 */
#define MC41_RDBFL29	(*( MC0_RDBFL0_type *) 0xf00639dau)	/* Read Data and Bit Flip Register 29 */
#define MC41_RDBFL3	(*( MC0_RDBFL0_type *) 0xf00639a6u)	/* Read Data and Bit Flip Register 3 */
#define MC41_RDBFL30	(*( MC0_RDBFL0_type *) 0xf00639dcu)	/* Read Data and Bit Flip Register 30 */
#define MC41_RDBFL31	(*( MC0_RDBFL0_type *) 0xf00639deu)	/* Read Data and Bit Flip Register 31 */
#define MC41_RDBFL32	(*( MC0_RDBFL0_type *) 0xf00639e0u)	/* Read Data and Bit Flip Register 32 */
#define MC41_RDBFL33	(*( MC0_RDBFL0_type *) 0xf00639e2u)	/* Read Data and Bit Flip Register 33 */
#define MC41_RDBFL34	(*( MC0_RDBFL0_type *) 0xf00639e4u)	/* Read Data and Bit Flip Register 34 */
#define MC41_RDBFL35	(*( MC0_RDBFL0_type *) 0xf00639e6u)	/* Read Data and Bit Flip Register 35 */
#define MC41_RDBFL36	(*( MC0_RDBFL0_type *) 0xf00639e8u)	/* Read Data and Bit Flip Register 36 */
#define MC41_RDBFL37	(*( MC0_RDBFL0_type *) 0xf00639eau)	/* Read Data and Bit Flip Register 37 */
#define MC41_RDBFL38	(*( MC0_RDBFL0_type *) 0xf00639ecu)	/* Read Data and Bit Flip Register 38 */
#define MC41_RDBFL39	(*( MC0_RDBFL0_type *) 0xf00639eeu)	/* Read Data and Bit Flip Register 39 */
#define MC41_RDBFL4	(*( MC0_RDBFL0_type *) 0xf00639a8u)	/* Read Data and Bit Flip Register 4 */
#define MC41_RDBFL5	(*( MC0_RDBFL0_type *) 0xf00639aau)	/* Read Data and Bit Flip Register 5 */
#define MC41_RDBFL6	(*( MC0_RDBFL0_type *) 0xf00639acu)	/* Read Data and Bit Flip Register 6 */
#define MC41_RDBFL7	(*( MC0_RDBFL0_type *) 0xf00639aeu)	/* Read Data and Bit Flip Register 7 */
#define MC41_RDBFL8	(*( MC0_RDBFL0_type *) 0xf00639b0u)	/* Read Data and Bit Flip Register 8 */
#define MC41_RDBFL9	(*( MC0_RDBFL0_type *) 0xf00639b2u)	/* Read Data and Bit Flip Register 9 */
#define MC42_RDBFL0	(*( MC0_RDBFL0_type *) 0xf0063aa0u)	/* Read Data and Bit Flip Register 0 */
#define MC42_RDBFL1	(*( MC0_RDBFL0_type *) 0xf0063aa2u)	/* Read Data and Bit Flip Register 1 */
#define MC42_RDBFL10	(*( MC0_RDBFL0_type *) 0xf0063ab4u)	/* Read Data and Bit Flip Register 10 */
#define MC42_RDBFL11	(*( MC0_RDBFL0_type *) 0xf0063ab6u)	/* Read Data and Bit Flip Register 11 */
#define MC42_RDBFL12	(*( MC0_RDBFL0_type *) 0xf0063ab8u)	/* Read Data and Bit Flip Register 12 */
#define MC42_RDBFL13	(*( MC0_RDBFL0_type *) 0xf0063abau)	/* Read Data and Bit Flip Register 13 */
#define MC42_RDBFL14	(*( MC0_RDBFL0_type *) 0xf0063abcu)	/* Read Data and Bit Flip Register 14 */
#define MC42_RDBFL15	(*( MC0_RDBFL0_type *) 0xf0063abeu)	/* Read Data and Bit Flip Register 15 */
#define MC42_RDBFL16	(*( MC0_RDBFL0_type *) 0xf0063ac0u)	/* Read Data and Bit Flip Register 16 */
#define MC42_RDBFL17	(*( MC0_RDBFL0_type *) 0xf0063ac2u)	/* Read Data and Bit Flip Register 17 */
#define MC42_RDBFL18	(*( MC0_RDBFL0_type *) 0xf0063ac4u)	/* Read Data and Bit Flip Register 18 */
#define MC42_RDBFL19	(*( MC0_RDBFL0_type *) 0xf0063ac6u)	/* Read Data and Bit Flip Register 19 */
#define MC42_RDBFL2	(*( MC0_RDBFL0_type *) 0xf0063aa4u)	/* Read Data and Bit Flip Register 2 */
#define MC42_RDBFL20	(*( MC0_RDBFL0_type *) 0xf0063ac8u)	/* Read Data and Bit Flip Register 20 */
#define MC42_RDBFL21	(*( MC0_RDBFL0_type *) 0xf0063acau)	/* Read Data and Bit Flip Register 21 */
#define MC42_RDBFL22	(*( MC0_RDBFL0_type *) 0xf0063accu)	/* Read Data and Bit Flip Register 22 */
#define MC42_RDBFL23	(*( MC0_RDBFL0_type *) 0xf0063aceu)	/* Read Data and Bit Flip Register 23 */
#define MC42_RDBFL24	(*( MC0_RDBFL0_type *) 0xf0063ad0u)	/* Read Data and Bit Flip Register 24 */
#define MC42_RDBFL25	(*( MC0_RDBFL0_type *) 0xf0063ad2u)	/* Read Data and Bit Flip Register 25 */
#define MC42_RDBFL26	(*( MC0_RDBFL0_type *) 0xf0063ad4u)	/* Read Data and Bit Flip Register 26 */
#define MC42_RDBFL27	(*( MC0_RDBFL0_type *) 0xf0063ad6u)	/* Read Data and Bit Flip Register 27 */
#define MC42_RDBFL28	(*( MC0_RDBFL0_type *) 0xf0063ad8u)	/* Read Data and Bit Flip Register 28 */
#define MC42_RDBFL29	(*( MC0_RDBFL0_type *) 0xf0063adau)	/* Read Data and Bit Flip Register 29 */
#define MC42_RDBFL3	(*( MC0_RDBFL0_type *) 0xf0063aa6u)	/* Read Data and Bit Flip Register 3 */
#define MC42_RDBFL30	(*( MC0_RDBFL0_type *) 0xf0063adcu)	/* Read Data and Bit Flip Register 30 */
#define MC42_RDBFL31	(*( MC0_RDBFL0_type *) 0xf0063adeu)	/* Read Data and Bit Flip Register 31 */
#define MC42_RDBFL32	(*( MC0_RDBFL0_type *) 0xf0063ae0u)	/* Read Data and Bit Flip Register 32 */
#define MC42_RDBFL33	(*( MC0_RDBFL0_type *) 0xf0063ae2u)	/* Read Data and Bit Flip Register 33 */
#define MC42_RDBFL34	(*( MC0_RDBFL0_type *) 0xf0063ae4u)	/* Read Data and Bit Flip Register 34 */
#define MC42_RDBFL35	(*( MC0_RDBFL0_type *) 0xf0063ae6u)	/* Read Data and Bit Flip Register 35 */
#define MC42_RDBFL36	(*( MC0_RDBFL0_type *) 0xf0063ae8u)	/* Read Data and Bit Flip Register 36 */
#define MC42_RDBFL37	(*( MC0_RDBFL0_type *) 0xf0063aeau)	/* Read Data and Bit Flip Register 37 */
#define MC42_RDBFL38	(*( MC0_RDBFL0_type *) 0xf0063aecu)	/* Read Data and Bit Flip Register 38 */
#define MC42_RDBFL39	(*( MC0_RDBFL0_type *) 0xf0063aeeu)	/* Read Data and Bit Flip Register 39 */
#define MC42_RDBFL4	(*( MC0_RDBFL0_type *) 0xf0063aa8u)	/* Read Data and Bit Flip Register 4 */
#define MC42_RDBFL5	(*( MC0_RDBFL0_type *) 0xf0063aaau)	/* Read Data and Bit Flip Register 5 */
#define MC42_RDBFL6	(*( MC0_RDBFL0_type *) 0xf0063aacu)	/* Read Data and Bit Flip Register 6 */
#define MC42_RDBFL7	(*( MC0_RDBFL0_type *) 0xf0063aaeu)	/* Read Data and Bit Flip Register 7 */
#define MC42_RDBFL8	(*( MC0_RDBFL0_type *) 0xf0063ab0u)	/* Read Data and Bit Flip Register 8 */
#define MC42_RDBFL9	(*( MC0_RDBFL0_type *) 0xf0063ab2u)	/* Read Data and Bit Flip Register 9 */
#define MC43_RDBFL0	(*( MC0_RDBFL0_type *) 0xf0063ba0u)	/* Read Data and Bit Flip Register 0 */
#define MC43_RDBFL1	(*( MC0_RDBFL0_type *) 0xf0063ba2u)	/* Read Data and Bit Flip Register 1 */
#define MC43_RDBFL10	(*( MC0_RDBFL0_type *) 0xf0063bb4u)	/* Read Data and Bit Flip Register 10 */
#define MC43_RDBFL11	(*( MC0_RDBFL0_type *) 0xf0063bb6u)	/* Read Data and Bit Flip Register 11 */
#define MC43_RDBFL12	(*( MC0_RDBFL0_type *) 0xf0063bb8u)	/* Read Data and Bit Flip Register 12 */
#define MC43_RDBFL13	(*( MC0_RDBFL0_type *) 0xf0063bbau)	/* Read Data and Bit Flip Register 13 */
#define MC43_RDBFL14	(*( MC0_RDBFL0_type *) 0xf0063bbcu)	/* Read Data and Bit Flip Register 14 */
#define MC43_RDBFL15	(*( MC0_RDBFL0_type *) 0xf0063bbeu)	/* Read Data and Bit Flip Register 15 */
#define MC43_RDBFL16	(*( MC0_RDBFL0_type *) 0xf0063bc0u)	/* Read Data and Bit Flip Register 16 */
#define MC43_RDBFL17	(*( MC0_RDBFL0_type *) 0xf0063bc2u)	/* Read Data and Bit Flip Register 17 */
#define MC43_RDBFL18	(*( MC0_RDBFL0_type *) 0xf0063bc4u)	/* Read Data and Bit Flip Register 18 */
#define MC43_RDBFL19	(*( MC0_RDBFL0_type *) 0xf0063bc6u)	/* Read Data and Bit Flip Register 19 */
#define MC43_RDBFL2	(*( MC0_RDBFL0_type *) 0xf0063ba4u)	/* Read Data and Bit Flip Register 2 */
#define MC43_RDBFL20	(*( MC0_RDBFL0_type *) 0xf0063bc8u)	/* Read Data and Bit Flip Register 20 */
#define MC43_RDBFL21	(*( MC0_RDBFL0_type *) 0xf0063bcau)	/* Read Data and Bit Flip Register 21 */
#define MC43_RDBFL22	(*( MC0_RDBFL0_type *) 0xf0063bccu)	/* Read Data and Bit Flip Register 22 */
#define MC43_RDBFL23	(*( MC0_RDBFL0_type *) 0xf0063bceu)	/* Read Data and Bit Flip Register 23 */
#define MC43_RDBFL24	(*( MC0_RDBFL0_type *) 0xf0063bd0u)	/* Read Data and Bit Flip Register 24 */
#define MC43_RDBFL25	(*( MC0_RDBFL0_type *) 0xf0063bd2u)	/* Read Data and Bit Flip Register 25 */
#define MC43_RDBFL26	(*( MC0_RDBFL0_type *) 0xf0063bd4u)	/* Read Data and Bit Flip Register 26 */
#define MC43_RDBFL27	(*( MC0_RDBFL0_type *) 0xf0063bd6u)	/* Read Data and Bit Flip Register 27 */
#define MC43_RDBFL28	(*( MC0_RDBFL0_type *) 0xf0063bd8u)	/* Read Data and Bit Flip Register 28 */
#define MC43_RDBFL29	(*( MC0_RDBFL0_type *) 0xf0063bdau)	/* Read Data and Bit Flip Register 29 */
#define MC43_RDBFL3	(*( MC0_RDBFL0_type *) 0xf0063ba6u)	/* Read Data and Bit Flip Register 3 */
#define MC43_RDBFL30	(*( MC0_RDBFL0_type *) 0xf0063bdcu)	/* Read Data and Bit Flip Register 30 */
#define MC43_RDBFL31	(*( MC0_RDBFL0_type *) 0xf0063bdeu)	/* Read Data and Bit Flip Register 31 */
#define MC43_RDBFL32	(*( MC0_RDBFL0_type *) 0xf0063be0u)	/* Read Data and Bit Flip Register 32 */
#define MC43_RDBFL33	(*( MC0_RDBFL0_type *) 0xf0063be2u)	/* Read Data and Bit Flip Register 33 */
#define MC43_RDBFL34	(*( MC0_RDBFL0_type *) 0xf0063be4u)	/* Read Data and Bit Flip Register 34 */
#define MC43_RDBFL35	(*( MC0_RDBFL0_type *) 0xf0063be6u)	/* Read Data and Bit Flip Register 35 */
#define MC43_RDBFL36	(*( MC0_RDBFL0_type *) 0xf0063be8u)	/* Read Data and Bit Flip Register 36 */
#define MC43_RDBFL37	(*( MC0_RDBFL0_type *) 0xf0063beau)	/* Read Data and Bit Flip Register 37 */
#define MC43_RDBFL38	(*( MC0_RDBFL0_type *) 0xf0063becu)	/* Read Data and Bit Flip Register 38 */
#define MC43_RDBFL39	(*( MC0_RDBFL0_type *) 0xf0063beeu)	/* Read Data and Bit Flip Register 39 */
#define MC43_RDBFL4	(*( MC0_RDBFL0_type *) 0xf0063ba8u)	/* Read Data and Bit Flip Register 4 */
#define MC43_RDBFL5	(*( MC0_RDBFL0_type *) 0xf0063baau)	/* Read Data and Bit Flip Register 5 */
#define MC43_RDBFL6	(*( MC0_RDBFL0_type *) 0xf0063bacu)	/* Read Data and Bit Flip Register 6 */
#define MC43_RDBFL7	(*( MC0_RDBFL0_type *) 0xf0063baeu)	/* Read Data and Bit Flip Register 7 */
#define MC43_RDBFL8	(*( MC0_RDBFL0_type *) 0xf0063bb0u)	/* Read Data and Bit Flip Register 8 */
#define MC43_RDBFL9	(*( MC0_RDBFL0_type *) 0xf0063bb2u)	/* Read Data and Bit Flip Register 9 */
#define MC44_RDBFL0	(*( MC0_RDBFL0_type *) 0xf0063ca0u)	/* Read Data and Bit Flip Register 0 */
#define MC44_RDBFL1	(*( MC0_RDBFL0_type *) 0xf0063ca2u)	/* Read Data and Bit Flip Register 1 */
#define MC44_RDBFL10	(*( MC0_RDBFL0_type *) 0xf0063cb4u)	/* Read Data and Bit Flip Register 10 */
#define MC44_RDBFL11	(*( MC0_RDBFL0_type *) 0xf0063cb6u)	/* Read Data and Bit Flip Register 11 */
#define MC44_RDBFL12	(*( MC0_RDBFL0_type *) 0xf0063cb8u)	/* Read Data and Bit Flip Register 12 */
#define MC44_RDBFL13	(*( MC0_RDBFL0_type *) 0xf0063cbau)	/* Read Data and Bit Flip Register 13 */
#define MC44_RDBFL14	(*( MC0_RDBFL0_type *) 0xf0063cbcu)	/* Read Data and Bit Flip Register 14 */
#define MC44_RDBFL15	(*( MC0_RDBFL0_type *) 0xf0063cbeu)	/* Read Data and Bit Flip Register 15 */
#define MC44_RDBFL16	(*( MC0_RDBFL0_type *) 0xf0063cc0u)	/* Read Data and Bit Flip Register 16 */
#define MC44_RDBFL17	(*( MC0_RDBFL0_type *) 0xf0063cc2u)	/* Read Data and Bit Flip Register 17 */
#define MC44_RDBFL18	(*( MC0_RDBFL0_type *) 0xf0063cc4u)	/* Read Data and Bit Flip Register 18 */
#define MC44_RDBFL19	(*( MC0_RDBFL0_type *) 0xf0063cc6u)	/* Read Data and Bit Flip Register 19 */
#define MC44_RDBFL2	(*( MC0_RDBFL0_type *) 0xf0063ca4u)	/* Read Data and Bit Flip Register 2 */
#define MC44_RDBFL20	(*( MC0_RDBFL0_type *) 0xf0063cc8u)	/* Read Data and Bit Flip Register 20 */
#define MC44_RDBFL21	(*( MC0_RDBFL0_type *) 0xf0063ccau)	/* Read Data and Bit Flip Register 21 */
#define MC44_RDBFL22	(*( MC0_RDBFL0_type *) 0xf0063cccu)	/* Read Data and Bit Flip Register 22 */
#define MC44_RDBFL23	(*( MC0_RDBFL0_type *) 0xf0063cceu)	/* Read Data and Bit Flip Register 23 */
#define MC44_RDBFL24	(*( MC0_RDBFL0_type *) 0xf0063cd0u)	/* Read Data and Bit Flip Register 24 */
#define MC44_RDBFL25	(*( MC0_RDBFL0_type *) 0xf0063cd2u)	/* Read Data and Bit Flip Register 25 */
#define MC44_RDBFL26	(*( MC0_RDBFL0_type *) 0xf0063cd4u)	/* Read Data and Bit Flip Register 26 */
#define MC44_RDBFL27	(*( MC0_RDBFL0_type *) 0xf0063cd6u)	/* Read Data and Bit Flip Register 27 */
#define MC44_RDBFL28	(*( MC0_RDBFL0_type *) 0xf0063cd8u)	/* Read Data and Bit Flip Register 28 */
#define MC44_RDBFL29	(*( MC0_RDBFL0_type *) 0xf0063cdau)	/* Read Data and Bit Flip Register 29 */
#define MC44_RDBFL3	(*( MC0_RDBFL0_type *) 0xf0063ca6u)	/* Read Data and Bit Flip Register 3 */
#define MC44_RDBFL30	(*( MC0_RDBFL0_type *) 0xf0063cdcu)	/* Read Data and Bit Flip Register 30 */
#define MC44_RDBFL31	(*( MC0_RDBFL0_type *) 0xf0063cdeu)	/* Read Data and Bit Flip Register 31 */
#define MC44_RDBFL32	(*( MC0_RDBFL0_type *) 0xf0063ce0u)	/* Read Data and Bit Flip Register 32 */
#define MC44_RDBFL33	(*( MC0_RDBFL0_type *) 0xf0063ce2u)	/* Read Data and Bit Flip Register 33 */
#define MC44_RDBFL34	(*( MC0_RDBFL0_type *) 0xf0063ce4u)	/* Read Data and Bit Flip Register 34 */
#define MC44_RDBFL35	(*( MC0_RDBFL0_type *) 0xf0063ce6u)	/* Read Data and Bit Flip Register 35 */
#define MC44_RDBFL36	(*( MC0_RDBFL0_type *) 0xf0063ce8u)	/* Read Data and Bit Flip Register 36 */
#define MC44_RDBFL37	(*( MC0_RDBFL0_type *) 0xf0063ceau)	/* Read Data and Bit Flip Register 37 */
#define MC44_RDBFL38	(*( MC0_RDBFL0_type *) 0xf0063cecu)	/* Read Data and Bit Flip Register 38 */
#define MC44_RDBFL39	(*( MC0_RDBFL0_type *) 0xf0063ceeu)	/* Read Data and Bit Flip Register 39 */
#define MC44_RDBFL4	(*( MC0_RDBFL0_type *) 0xf0063ca8u)	/* Read Data and Bit Flip Register 4 */
#define MC44_RDBFL5	(*( MC0_RDBFL0_type *) 0xf0063caau)	/* Read Data and Bit Flip Register 5 */
#define MC44_RDBFL6	(*( MC0_RDBFL0_type *) 0xf0063cacu)	/* Read Data and Bit Flip Register 6 */
#define MC44_RDBFL7	(*( MC0_RDBFL0_type *) 0xf0063caeu)	/* Read Data and Bit Flip Register 7 */
#define MC44_RDBFL8	(*( MC0_RDBFL0_type *) 0xf0063cb0u)	/* Read Data and Bit Flip Register 8 */
#define MC44_RDBFL9	(*( MC0_RDBFL0_type *) 0xf0063cb2u)	/* Read Data and Bit Flip Register 9 */
#define MC45_RDBFL0	(*( MC0_RDBFL0_type *) 0xf0063da0u)	/* Read Data and Bit Flip Register 0 */
#define MC45_RDBFL1	(*( MC0_RDBFL0_type *) 0xf0063da2u)	/* Read Data and Bit Flip Register 1 */
#define MC45_RDBFL10	(*( MC0_RDBFL0_type *) 0xf0063db4u)	/* Read Data and Bit Flip Register 10 */
#define MC45_RDBFL11	(*( MC0_RDBFL0_type *) 0xf0063db6u)	/* Read Data and Bit Flip Register 11 */
#define MC45_RDBFL12	(*( MC0_RDBFL0_type *) 0xf0063db8u)	/* Read Data and Bit Flip Register 12 */
#define MC45_RDBFL13	(*( MC0_RDBFL0_type *) 0xf0063dbau)	/* Read Data and Bit Flip Register 13 */
#define MC45_RDBFL14	(*( MC0_RDBFL0_type *) 0xf0063dbcu)	/* Read Data and Bit Flip Register 14 */
#define MC45_RDBFL15	(*( MC0_RDBFL0_type *) 0xf0063dbeu)	/* Read Data and Bit Flip Register 15 */
#define MC45_RDBFL16	(*( MC0_RDBFL0_type *) 0xf0063dc0u)	/* Read Data and Bit Flip Register 16 */
#define MC45_RDBFL17	(*( MC0_RDBFL0_type *) 0xf0063dc2u)	/* Read Data and Bit Flip Register 17 */
#define MC45_RDBFL18	(*( MC0_RDBFL0_type *) 0xf0063dc4u)	/* Read Data and Bit Flip Register 18 */
#define MC45_RDBFL19	(*( MC0_RDBFL0_type *) 0xf0063dc6u)	/* Read Data and Bit Flip Register 19 */
#define MC45_RDBFL2	(*( MC0_RDBFL0_type *) 0xf0063da4u)	/* Read Data and Bit Flip Register 2 */
#define MC45_RDBFL20	(*( MC0_RDBFL0_type *) 0xf0063dc8u)	/* Read Data and Bit Flip Register 20 */
#define MC45_RDBFL21	(*( MC0_RDBFL0_type *) 0xf0063dcau)	/* Read Data and Bit Flip Register 21 */
#define MC45_RDBFL22	(*( MC0_RDBFL0_type *) 0xf0063dccu)	/* Read Data and Bit Flip Register 22 */
#define MC45_RDBFL23	(*( MC0_RDBFL0_type *) 0xf0063dceu)	/* Read Data and Bit Flip Register 23 */
#define MC45_RDBFL24	(*( MC0_RDBFL0_type *) 0xf0063dd0u)	/* Read Data and Bit Flip Register 24 */
#define MC45_RDBFL25	(*( MC0_RDBFL0_type *) 0xf0063dd2u)	/* Read Data and Bit Flip Register 25 */
#define MC45_RDBFL26	(*( MC0_RDBFL0_type *) 0xf0063dd4u)	/* Read Data and Bit Flip Register 26 */
#define MC45_RDBFL27	(*( MC0_RDBFL0_type *) 0xf0063dd6u)	/* Read Data and Bit Flip Register 27 */
#define MC45_RDBFL28	(*( MC0_RDBFL0_type *) 0xf0063dd8u)	/* Read Data and Bit Flip Register 28 */
#define MC45_RDBFL29	(*( MC0_RDBFL0_type *) 0xf0063ddau)	/* Read Data and Bit Flip Register 29 */
#define MC45_RDBFL3	(*( MC0_RDBFL0_type *) 0xf0063da6u)	/* Read Data and Bit Flip Register 3 */
#define MC45_RDBFL30	(*( MC0_RDBFL0_type *) 0xf0063ddcu)	/* Read Data and Bit Flip Register 30 */
#define MC45_RDBFL31	(*( MC0_RDBFL0_type *) 0xf0063ddeu)	/* Read Data and Bit Flip Register 31 */
#define MC45_RDBFL32	(*( MC0_RDBFL0_type *) 0xf0063de0u)	/* Read Data and Bit Flip Register 32 */
#define MC45_RDBFL33	(*( MC0_RDBFL0_type *) 0xf0063de2u)	/* Read Data and Bit Flip Register 33 */
#define MC45_RDBFL34	(*( MC0_RDBFL0_type *) 0xf0063de4u)	/* Read Data and Bit Flip Register 34 */
#define MC45_RDBFL35	(*( MC0_RDBFL0_type *) 0xf0063de6u)	/* Read Data and Bit Flip Register 35 */
#define MC45_RDBFL36	(*( MC0_RDBFL0_type *) 0xf0063de8u)	/* Read Data and Bit Flip Register 36 */
#define MC45_RDBFL37	(*( MC0_RDBFL0_type *) 0xf0063deau)	/* Read Data and Bit Flip Register 37 */
#define MC45_RDBFL38	(*( MC0_RDBFL0_type *) 0xf0063decu)	/* Read Data and Bit Flip Register 38 */
#define MC45_RDBFL39	(*( MC0_RDBFL0_type *) 0xf0063deeu)	/* Read Data and Bit Flip Register 39 */
#define MC45_RDBFL4	(*( MC0_RDBFL0_type *) 0xf0063da8u)	/* Read Data and Bit Flip Register 4 */
#define MC45_RDBFL5	(*( MC0_RDBFL0_type *) 0xf0063daau)	/* Read Data and Bit Flip Register 5 */
#define MC45_RDBFL6	(*( MC0_RDBFL0_type *) 0xf0063dacu)	/* Read Data and Bit Flip Register 6 */
#define MC45_RDBFL7	(*( MC0_RDBFL0_type *) 0xf0063daeu)	/* Read Data and Bit Flip Register 7 */
#define MC45_RDBFL8	(*( MC0_RDBFL0_type *) 0xf0063db0u)	/* Read Data and Bit Flip Register 8 */
#define MC45_RDBFL9	(*( MC0_RDBFL0_type *) 0xf0063db2u)	/* Read Data and Bit Flip Register 9 */
#define MC46_RDBFL0	(*( MC0_RDBFL0_type *) 0xf0063ea0u)	/* Read Data and Bit Flip Register 0 */
#define MC46_RDBFL1	(*( MC0_RDBFL0_type *) 0xf0063ea2u)	/* Read Data and Bit Flip Register 1 */
#define MC46_RDBFL10	(*( MC0_RDBFL0_type *) 0xf0063eb4u)	/* Read Data and Bit Flip Register 10 */
#define MC46_RDBFL11	(*( MC0_RDBFL0_type *) 0xf0063eb6u)	/* Read Data and Bit Flip Register 11 */
#define MC46_RDBFL12	(*( MC0_RDBFL0_type *) 0xf0063eb8u)	/* Read Data and Bit Flip Register 12 */
#define MC46_RDBFL13	(*( MC0_RDBFL0_type *) 0xf0063ebau)	/* Read Data and Bit Flip Register 13 */
#define MC46_RDBFL14	(*( MC0_RDBFL0_type *) 0xf0063ebcu)	/* Read Data and Bit Flip Register 14 */
#define MC46_RDBFL15	(*( MC0_RDBFL0_type *) 0xf0063ebeu)	/* Read Data and Bit Flip Register 15 */
#define MC46_RDBFL16	(*( MC0_RDBFL0_type *) 0xf0063ec0u)	/* Read Data and Bit Flip Register 16 */
#define MC46_RDBFL17	(*( MC0_RDBFL0_type *) 0xf0063ec2u)	/* Read Data and Bit Flip Register 17 */
#define MC46_RDBFL18	(*( MC0_RDBFL0_type *) 0xf0063ec4u)	/* Read Data and Bit Flip Register 18 */
#define MC46_RDBFL19	(*( MC0_RDBFL0_type *) 0xf0063ec6u)	/* Read Data and Bit Flip Register 19 */
#define MC46_RDBFL2	(*( MC0_RDBFL0_type *) 0xf0063ea4u)	/* Read Data and Bit Flip Register 2 */
#define MC46_RDBFL20	(*( MC0_RDBFL0_type *) 0xf0063ec8u)	/* Read Data and Bit Flip Register 20 */
#define MC46_RDBFL21	(*( MC0_RDBFL0_type *) 0xf0063ecau)	/* Read Data and Bit Flip Register 21 */
#define MC46_RDBFL22	(*( MC0_RDBFL0_type *) 0xf0063eccu)	/* Read Data and Bit Flip Register 22 */
#define MC46_RDBFL23	(*( MC0_RDBFL0_type *) 0xf0063eceu)	/* Read Data and Bit Flip Register 23 */
#define MC46_RDBFL24	(*( MC0_RDBFL0_type *) 0xf0063ed0u)	/* Read Data and Bit Flip Register 24 */
#define MC46_RDBFL25	(*( MC0_RDBFL0_type *) 0xf0063ed2u)	/* Read Data and Bit Flip Register 25 */
#define MC46_RDBFL26	(*( MC0_RDBFL0_type *) 0xf0063ed4u)	/* Read Data and Bit Flip Register 26 */
#define MC46_RDBFL27	(*( MC0_RDBFL0_type *) 0xf0063ed6u)	/* Read Data and Bit Flip Register 27 */
#define MC46_RDBFL28	(*( MC0_RDBFL0_type *) 0xf0063ed8u)	/* Read Data and Bit Flip Register 28 */
#define MC46_RDBFL29	(*( MC0_RDBFL0_type *) 0xf0063edau)	/* Read Data and Bit Flip Register 29 */
#define MC46_RDBFL3	(*( MC0_RDBFL0_type *) 0xf0063ea6u)	/* Read Data and Bit Flip Register 3 */
#define MC46_RDBFL30	(*( MC0_RDBFL0_type *) 0xf0063edcu)	/* Read Data and Bit Flip Register 30 */
#define MC46_RDBFL31	(*( MC0_RDBFL0_type *) 0xf0063edeu)	/* Read Data and Bit Flip Register 31 */
#define MC46_RDBFL32	(*( MC0_RDBFL0_type *) 0xf0063ee0u)	/* Read Data and Bit Flip Register 32 */
#define MC46_RDBFL33	(*( MC0_RDBFL0_type *) 0xf0063ee2u)	/* Read Data and Bit Flip Register 33 */
#define MC46_RDBFL34	(*( MC0_RDBFL0_type *) 0xf0063ee4u)	/* Read Data and Bit Flip Register 34 */
#define MC46_RDBFL35	(*( MC0_RDBFL0_type *) 0xf0063ee6u)	/* Read Data and Bit Flip Register 35 */
#define MC46_RDBFL36	(*( MC0_RDBFL0_type *) 0xf0063ee8u)	/* Read Data and Bit Flip Register 36 */
#define MC46_RDBFL37	(*( MC0_RDBFL0_type *) 0xf0063eeau)	/* Read Data and Bit Flip Register 37 */
#define MC46_RDBFL38	(*( MC0_RDBFL0_type *) 0xf0063eecu)	/* Read Data and Bit Flip Register 38 */
#define MC46_RDBFL39	(*( MC0_RDBFL0_type *) 0xf0063eeeu)	/* Read Data and Bit Flip Register 39 */
#define MC46_RDBFL4	(*( MC0_RDBFL0_type *) 0xf0063ea8u)	/* Read Data and Bit Flip Register 4 */
#define MC46_RDBFL5	(*( MC0_RDBFL0_type *) 0xf0063eaau)	/* Read Data and Bit Flip Register 5 */
#define MC46_RDBFL6	(*( MC0_RDBFL0_type *) 0xf0063eacu)	/* Read Data and Bit Flip Register 6 */
#define MC46_RDBFL7	(*( MC0_RDBFL0_type *) 0xf0063eaeu)	/* Read Data and Bit Flip Register 7 */
#define MC46_RDBFL8	(*( MC0_RDBFL0_type *) 0xf0063eb0u)	/* Read Data and Bit Flip Register 8 */
#define MC46_RDBFL9	(*( MC0_RDBFL0_type *) 0xf0063eb2u)	/* Read Data and Bit Flip Register 9 */
#define MC47_RDBFL0	(*( MC0_RDBFL0_type *) 0xf0063fa0u)	/* Read Data and Bit Flip Register 0 */
#define MC47_RDBFL1	(*( MC0_RDBFL0_type *) 0xf0063fa2u)	/* Read Data and Bit Flip Register 1 */
#define MC47_RDBFL10	(*( MC0_RDBFL0_type *) 0xf0063fb4u)	/* Read Data and Bit Flip Register 10 */
#define MC47_RDBFL11	(*( MC0_RDBFL0_type *) 0xf0063fb6u)	/* Read Data and Bit Flip Register 11 */
#define MC47_RDBFL12	(*( MC0_RDBFL0_type *) 0xf0063fb8u)	/* Read Data and Bit Flip Register 12 */
#define MC47_RDBFL13	(*( MC0_RDBFL0_type *) 0xf0063fbau)	/* Read Data and Bit Flip Register 13 */
#define MC47_RDBFL14	(*( MC0_RDBFL0_type *) 0xf0063fbcu)	/* Read Data and Bit Flip Register 14 */
#define MC47_RDBFL15	(*( MC0_RDBFL0_type *) 0xf0063fbeu)	/* Read Data and Bit Flip Register 15 */
#define MC47_RDBFL16	(*( MC0_RDBFL0_type *) 0xf0063fc0u)	/* Read Data and Bit Flip Register 16 */
#define MC47_RDBFL17	(*( MC0_RDBFL0_type *) 0xf0063fc2u)	/* Read Data and Bit Flip Register 17 */
#define MC47_RDBFL18	(*( MC0_RDBFL0_type *) 0xf0063fc4u)	/* Read Data and Bit Flip Register 18 */
#define MC47_RDBFL19	(*( MC0_RDBFL0_type *) 0xf0063fc6u)	/* Read Data and Bit Flip Register 19 */
#define MC47_RDBFL2	(*( MC0_RDBFL0_type *) 0xf0063fa4u)	/* Read Data and Bit Flip Register 2 */
#define MC47_RDBFL20	(*( MC0_RDBFL0_type *) 0xf0063fc8u)	/* Read Data and Bit Flip Register 20 */
#define MC47_RDBFL21	(*( MC0_RDBFL0_type *) 0xf0063fcau)	/* Read Data and Bit Flip Register 21 */
#define MC47_RDBFL22	(*( MC0_RDBFL0_type *) 0xf0063fccu)	/* Read Data and Bit Flip Register 22 */
#define MC47_RDBFL23	(*( MC0_RDBFL0_type *) 0xf0063fceu)	/* Read Data and Bit Flip Register 23 */
#define MC47_RDBFL24	(*( MC0_RDBFL0_type *) 0xf0063fd0u)	/* Read Data and Bit Flip Register 24 */
#define MC47_RDBFL25	(*( MC0_RDBFL0_type *) 0xf0063fd2u)	/* Read Data and Bit Flip Register 25 */
#define MC47_RDBFL26	(*( MC0_RDBFL0_type *) 0xf0063fd4u)	/* Read Data and Bit Flip Register 26 */
#define MC47_RDBFL27	(*( MC0_RDBFL0_type *) 0xf0063fd6u)	/* Read Data and Bit Flip Register 27 */
#define MC47_RDBFL28	(*( MC0_RDBFL0_type *) 0xf0063fd8u)	/* Read Data and Bit Flip Register 28 */
#define MC47_RDBFL29	(*( MC0_RDBFL0_type *) 0xf0063fdau)	/* Read Data and Bit Flip Register 29 */
#define MC47_RDBFL3	(*( MC0_RDBFL0_type *) 0xf0063fa6u)	/* Read Data and Bit Flip Register 3 */
#define MC47_RDBFL30	(*( MC0_RDBFL0_type *) 0xf0063fdcu)	/* Read Data and Bit Flip Register 30 */
#define MC47_RDBFL31	(*( MC0_RDBFL0_type *) 0xf0063fdeu)	/* Read Data and Bit Flip Register 31 */
#define MC47_RDBFL32	(*( MC0_RDBFL0_type *) 0xf0063fe0u)	/* Read Data and Bit Flip Register 32 */
#define MC47_RDBFL33	(*( MC0_RDBFL0_type *) 0xf0063fe2u)	/* Read Data and Bit Flip Register 33 */
#define MC47_RDBFL34	(*( MC0_RDBFL0_type *) 0xf0063fe4u)	/* Read Data and Bit Flip Register 34 */
#define MC47_RDBFL35	(*( MC0_RDBFL0_type *) 0xf0063fe6u)	/* Read Data and Bit Flip Register 35 */
#define MC47_RDBFL36	(*( MC0_RDBFL0_type *) 0xf0063fe8u)	/* Read Data and Bit Flip Register 36 */
#define MC47_RDBFL37	(*( MC0_RDBFL0_type *) 0xf0063feau)	/* Read Data and Bit Flip Register 37 */
#define MC47_RDBFL38	(*( MC0_RDBFL0_type *) 0xf0063fecu)	/* Read Data and Bit Flip Register 38 */
#define MC47_RDBFL39	(*( MC0_RDBFL0_type *) 0xf0063feeu)	/* Read Data and Bit Flip Register 39 */
#define MC47_RDBFL4	(*( MC0_RDBFL0_type *) 0xf0063fa8u)	/* Read Data and Bit Flip Register 4 */
#define MC47_RDBFL5	(*( MC0_RDBFL0_type *) 0xf0063faau)	/* Read Data and Bit Flip Register 5 */
#define MC47_RDBFL6	(*( MC0_RDBFL0_type *) 0xf0063facu)	/* Read Data and Bit Flip Register 6 */
#define MC47_RDBFL7	(*( MC0_RDBFL0_type *) 0xf0063faeu)	/* Read Data and Bit Flip Register 7 */
#define MC47_RDBFL8	(*( MC0_RDBFL0_type *) 0xf0063fb0u)	/* Read Data and Bit Flip Register 8 */
#define MC47_RDBFL9	(*( MC0_RDBFL0_type *) 0xf0063fb2u)	/* Read Data and Bit Flip Register 9 */
#define MC48_RDBFL0	(*( MC0_RDBFL0_type *) 0xf00640a0u)	/* Read Data and Bit Flip Register 0 */
#define MC48_RDBFL1	(*( MC0_RDBFL0_type *) 0xf00640a2u)	/* Read Data and Bit Flip Register 1 */
#define MC48_RDBFL10	(*( MC0_RDBFL0_type *) 0xf00640b4u)	/* Read Data and Bit Flip Register 10 */
#define MC48_RDBFL11	(*( MC0_RDBFL0_type *) 0xf00640b6u)	/* Read Data and Bit Flip Register 11 */
#define MC48_RDBFL12	(*( MC0_RDBFL0_type *) 0xf00640b8u)	/* Read Data and Bit Flip Register 12 */
#define MC48_RDBFL13	(*( MC0_RDBFL0_type *) 0xf00640bau)	/* Read Data and Bit Flip Register 13 */
#define MC48_RDBFL14	(*( MC0_RDBFL0_type *) 0xf00640bcu)	/* Read Data and Bit Flip Register 14 */
#define MC48_RDBFL15	(*( MC0_RDBFL0_type *) 0xf00640beu)	/* Read Data and Bit Flip Register 15 */
#define MC48_RDBFL16	(*( MC0_RDBFL0_type *) 0xf00640c0u)	/* Read Data and Bit Flip Register 16 */
#define MC48_RDBFL17	(*( MC0_RDBFL0_type *) 0xf00640c2u)	/* Read Data and Bit Flip Register 17 */
#define MC48_RDBFL18	(*( MC0_RDBFL0_type *) 0xf00640c4u)	/* Read Data and Bit Flip Register 18 */
#define MC48_RDBFL19	(*( MC0_RDBFL0_type *) 0xf00640c6u)	/* Read Data and Bit Flip Register 19 */
#define MC48_RDBFL2	(*( MC0_RDBFL0_type *) 0xf00640a4u)	/* Read Data and Bit Flip Register 2 */
#define MC48_RDBFL20	(*( MC0_RDBFL0_type *) 0xf00640c8u)	/* Read Data and Bit Flip Register 20 */
#define MC48_RDBFL21	(*( MC0_RDBFL0_type *) 0xf00640cau)	/* Read Data and Bit Flip Register 21 */
#define MC48_RDBFL22	(*( MC0_RDBFL0_type *) 0xf00640ccu)	/* Read Data and Bit Flip Register 22 */
#define MC48_RDBFL23	(*( MC0_RDBFL0_type *) 0xf00640ceu)	/* Read Data and Bit Flip Register 23 */
#define MC48_RDBFL24	(*( MC0_RDBFL0_type *) 0xf00640d0u)	/* Read Data and Bit Flip Register 24 */
#define MC48_RDBFL25	(*( MC0_RDBFL0_type *) 0xf00640d2u)	/* Read Data and Bit Flip Register 25 */
#define MC48_RDBFL26	(*( MC0_RDBFL0_type *) 0xf00640d4u)	/* Read Data and Bit Flip Register 26 */
#define MC48_RDBFL27	(*( MC0_RDBFL0_type *) 0xf00640d6u)	/* Read Data and Bit Flip Register 27 */
#define MC48_RDBFL28	(*( MC0_RDBFL0_type *) 0xf00640d8u)	/* Read Data and Bit Flip Register 28 */
#define MC48_RDBFL29	(*( MC0_RDBFL0_type *) 0xf00640dau)	/* Read Data and Bit Flip Register 29 */
#define MC48_RDBFL3	(*( MC0_RDBFL0_type *) 0xf00640a6u)	/* Read Data and Bit Flip Register 3 */
#define MC48_RDBFL30	(*( MC0_RDBFL0_type *) 0xf00640dcu)	/* Read Data and Bit Flip Register 30 */
#define MC48_RDBFL31	(*( MC0_RDBFL0_type *) 0xf00640deu)	/* Read Data and Bit Flip Register 31 */
#define MC48_RDBFL32	(*( MC0_RDBFL0_type *) 0xf00640e0u)	/* Read Data and Bit Flip Register 32 */
#define MC48_RDBFL33	(*( MC0_RDBFL0_type *) 0xf00640e2u)	/* Read Data and Bit Flip Register 33 */
#define MC48_RDBFL34	(*( MC0_RDBFL0_type *) 0xf00640e4u)	/* Read Data and Bit Flip Register 34 */
#define MC48_RDBFL35	(*( MC0_RDBFL0_type *) 0xf00640e6u)	/* Read Data and Bit Flip Register 35 */
#define MC48_RDBFL36	(*( MC0_RDBFL0_type *) 0xf00640e8u)	/* Read Data and Bit Flip Register 36 */
#define MC48_RDBFL37	(*( MC0_RDBFL0_type *) 0xf00640eau)	/* Read Data and Bit Flip Register 37 */
#define MC48_RDBFL38	(*( MC0_RDBFL0_type *) 0xf00640ecu)	/* Read Data and Bit Flip Register 38 */
#define MC48_RDBFL39	(*( MC0_RDBFL0_type *) 0xf00640eeu)	/* Read Data and Bit Flip Register 39 */
#define MC48_RDBFL4	(*( MC0_RDBFL0_type *) 0xf00640a8u)	/* Read Data and Bit Flip Register 4 */
#define MC48_RDBFL5	(*( MC0_RDBFL0_type *) 0xf00640aau)	/* Read Data and Bit Flip Register 5 */
#define MC48_RDBFL6	(*( MC0_RDBFL0_type *) 0xf00640acu)	/* Read Data and Bit Flip Register 6 */
#define MC48_RDBFL7	(*( MC0_RDBFL0_type *) 0xf00640aeu)	/* Read Data and Bit Flip Register 7 */
#define MC48_RDBFL8	(*( MC0_RDBFL0_type *) 0xf00640b0u)	/* Read Data and Bit Flip Register 8 */
#define MC48_RDBFL9	(*( MC0_RDBFL0_type *) 0xf00640b2u)	/* Read Data and Bit Flip Register 9 */
#define MC49_RDBFL0	(*( MC0_RDBFL0_type *) 0xf00641a0u)	/* Read Data and Bit Flip Register 0 */
#define MC49_RDBFL1	(*( MC0_RDBFL0_type *) 0xf00641a2u)	/* Read Data and Bit Flip Register 1 */
#define MC49_RDBFL10	(*( MC0_RDBFL0_type *) 0xf00641b4u)	/* Read Data and Bit Flip Register 10 */
#define MC49_RDBFL11	(*( MC0_RDBFL0_type *) 0xf00641b6u)	/* Read Data and Bit Flip Register 11 */
#define MC49_RDBFL12	(*( MC0_RDBFL0_type *) 0xf00641b8u)	/* Read Data and Bit Flip Register 12 */
#define MC49_RDBFL13	(*( MC0_RDBFL0_type *) 0xf00641bau)	/* Read Data and Bit Flip Register 13 */
#define MC49_RDBFL14	(*( MC0_RDBFL0_type *) 0xf00641bcu)	/* Read Data and Bit Flip Register 14 */
#define MC49_RDBFL15	(*( MC0_RDBFL0_type *) 0xf00641beu)	/* Read Data and Bit Flip Register 15 */
#define MC49_RDBFL16	(*( MC0_RDBFL0_type *) 0xf00641c0u)	/* Read Data and Bit Flip Register 16 */
#define MC49_RDBFL17	(*( MC0_RDBFL0_type *) 0xf00641c2u)	/* Read Data and Bit Flip Register 17 */
#define MC49_RDBFL18	(*( MC0_RDBFL0_type *) 0xf00641c4u)	/* Read Data and Bit Flip Register 18 */
#define MC49_RDBFL19	(*( MC0_RDBFL0_type *) 0xf00641c6u)	/* Read Data and Bit Flip Register 19 */
#define MC49_RDBFL2	(*( MC0_RDBFL0_type *) 0xf00641a4u)	/* Read Data and Bit Flip Register 2 */
#define MC49_RDBFL20	(*( MC0_RDBFL0_type *) 0xf00641c8u)	/* Read Data and Bit Flip Register 20 */
#define MC49_RDBFL21	(*( MC0_RDBFL0_type *) 0xf00641cau)	/* Read Data and Bit Flip Register 21 */
#define MC49_RDBFL22	(*( MC0_RDBFL0_type *) 0xf00641ccu)	/* Read Data and Bit Flip Register 22 */
#define MC49_RDBFL23	(*( MC0_RDBFL0_type *) 0xf00641ceu)	/* Read Data and Bit Flip Register 23 */
#define MC49_RDBFL24	(*( MC0_RDBFL0_type *) 0xf00641d0u)	/* Read Data and Bit Flip Register 24 */
#define MC49_RDBFL25	(*( MC0_RDBFL0_type *) 0xf00641d2u)	/* Read Data and Bit Flip Register 25 */
#define MC49_RDBFL26	(*( MC0_RDBFL0_type *) 0xf00641d4u)	/* Read Data and Bit Flip Register 26 */
#define MC49_RDBFL27	(*( MC0_RDBFL0_type *) 0xf00641d6u)	/* Read Data and Bit Flip Register 27 */
#define MC49_RDBFL28	(*( MC0_RDBFL0_type *) 0xf00641d8u)	/* Read Data and Bit Flip Register 28 */
#define MC49_RDBFL29	(*( MC0_RDBFL0_type *) 0xf00641dau)	/* Read Data and Bit Flip Register 29 */
#define MC49_RDBFL3	(*( MC0_RDBFL0_type *) 0xf00641a6u)	/* Read Data and Bit Flip Register 3 */
#define MC49_RDBFL30	(*( MC0_RDBFL0_type *) 0xf00641dcu)	/* Read Data and Bit Flip Register 30 */
#define MC49_RDBFL31	(*( MC0_RDBFL0_type *) 0xf00641deu)	/* Read Data and Bit Flip Register 31 */
#define MC49_RDBFL32	(*( MC0_RDBFL0_type *) 0xf00641e0u)	/* Read Data and Bit Flip Register 32 */
#define MC49_RDBFL33	(*( MC0_RDBFL0_type *) 0xf00641e2u)	/* Read Data and Bit Flip Register 33 */
#define MC49_RDBFL34	(*( MC0_RDBFL0_type *) 0xf00641e4u)	/* Read Data and Bit Flip Register 34 */
#define MC49_RDBFL35	(*( MC0_RDBFL0_type *) 0xf00641e6u)	/* Read Data and Bit Flip Register 35 */
#define MC49_RDBFL36	(*( MC0_RDBFL0_type *) 0xf00641e8u)	/* Read Data and Bit Flip Register 36 */
#define MC49_RDBFL37	(*( MC0_RDBFL0_type *) 0xf00641eau)	/* Read Data and Bit Flip Register 37 */
#define MC49_RDBFL38	(*( MC0_RDBFL0_type *) 0xf00641ecu)	/* Read Data and Bit Flip Register 38 */
#define MC49_RDBFL39	(*( MC0_RDBFL0_type *) 0xf00641eeu)	/* Read Data and Bit Flip Register 39 */
#define MC49_RDBFL4	(*( MC0_RDBFL0_type *) 0xf00641a8u)	/* Read Data and Bit Flip Register 4 */
#define MC49_RDBFL5	(*( MC0_RDBFL0_type *) 0xf00641aau)	/* Read Data and Bit Flip Register 5 */
#define MC49_RDBFL6	(*( MC0_RDBFL0_type *) 0xf00641acu)	/* Read Data and Bit Flip Register 6 */
#define MC49_RDBFL7	(*( MC0_RDBFL0_type *) 0xf00641aeu)	/* Read Data and Bit Flip Register 7 */
#define MC49_RDBFL8	(*( MC0_RDBFL0_type *) 0xf00641b0u)	/* Read Data and Bit Flip Register 8 */
#define MC49_RDBFL9	(*( MC0_RDBFL0_type *) 0xf00641b2u)	/* Read Data and Bit Flip Register 9 */
#define MC4_RDBFL0	(*( MC0_RDBFL0_type *) 0xf00614a0u)	/* Read Data and Bit Flip Register 0 */
#define MC4_RDBFL1	(*( MC0_RDBFL0_type *) 0xf00614a2u)	/* Read Data and Bit Flip Register 1 */
#define MC4_RDBFL10	(*( MC0_RDBFL0_type *) 0xf00614b4u)	/* Read Data and Bit Flip Register 10 */
#define MC4_RDBFL11	(*( MC0_RDBFL0_type *) 0xf00614b6u)	/* Read Data and Bit Flip Register 11 */
#define MC4_RDBFL12	(*( MC0_RDBFL0_type *) 0xf00614b8u)	/* Read Data and Bit Flip Register 12 */
#define MC4_RDBFL13	(*( MC0_RDBFL0_type *) 0xf00614bau)	/* Read Data and Bit Flip Register 13 */
#define MC4_RDBFL14	(*( MC0_RDBFL0_type *) 0xf00614bcu)	/* Read Data and Bit Flip Register 14 */
#define MC4_RDBFL15	(*( MC0_RDBFL0_type *) 0xf00614beu)	/* Read Data and Bit Flip Register 15 */
#define MC4_RDBFL16	(*( MC0_RDBFL0_type *) 0xf00614c0u)	/* Read Data and Bit Flip Register 16 */
#define MC4_RDBFL17	(*( MC0_RDBFL0_type *) 0xf00614c2u)	/* Read Data and Bit Flip Register 17 */
#define MC4_RDBFL18	(*( MC0_RDBFL0_type *) 0xf00614c4u)	/* Read Data and Bit Flip Register 18 */
#define MC4_RDBFL19	(*( MC0_RDBFL0_type *) 0xf00614c6u)	/* Read Data and Bit Flip Register 19 */
#define MC4_RDBFL2	(*( MC0_RDBFL0_type *) 0xf00614a4u)	/* Read Data and Bit Flip Register 2 */
#define MC4_RDBFL20	(*( MC0_RDBFL0_type *) 0xf00614c8u)	/* Read Data and Bit Flip Register 20 */
#define MC4_RDBFL21	(*( MC0_RDBFL0_type *) 0xf00614cau)	/* Read Data and Bit Flip Register 21 */
#define MC4_RDBFL22	(*( MC0_RDBFL0_type *) 0xf00614ccu)	/* Read Data and Bit Flip Register 22 */
#define MC4_RDBFL23	(*( MC0_RDBFL0_type *) 0xf00614ceu)	/* Read Data and Bit Flip Register 23 */
#define MC4_RDBFL24	(*( MC0_RDBFL0_type *) 0xf00614d0u)	/* Read Data and Bit Flip Register 24 */
#define MC4_RDBFL25	(*( MC0_RDBFL0_type *) 0xf00614d2u)	/* Read Data and Bit Flip Register 25 */
#define MC4_RDBFL26	(*( MC0_RDBFL0_type *) 0xf00614d4u)	/* Read Data and Bit Flip Register 26 */
#define MC4_RDBFL27	(*( MC0_RDBFL0_type *) 0xf00614d6u)	/* Read Data and Bit Flip Register 27 */
#define MC4_RDBFL28	(*( MC0_RDBFL0_type *) 0xf00614d8u)	/* Read Data and Bit Flip Register 28 */
#define MC4_RDBFL29	(*( MC0_RDBFL0_type *) 0xf00614dau)	/* Read Data and Bit Flip Register 29 */
#define MC4_RDBFL3	(*( MC0_RDBFL0_type *) 0xf00614a6u)	/* Read Data and Bit Flip Register 3 */
#define MC4_RDBFL30	(*( MC0_RDBFL0_type *) 0xf00614dcu)	/* Read Data and Bit Flip Register 30 */
#define MC4_RDBFL31	(*( MC0_RDBFL0_type *) 0xf00614deu)	/* Read Data and Bit Flip Register 31 */
#define MC4_RDBFL32	(*( MC0_RDBFL0_type *) 0xf00614e0u)	/* Read Data and Bit Flip Register 32 */
#define MC4_RDBFL33	(*( MC0_RDBFL0_type *) 0xf00614e2u)	/* Read Data and Bit Flip Register 33 */
#define MC4_RDBFL34	(*( MC0_RDBFL0_type *) 0xf00614e4u)	/* Read Data and Bit Flip Register 34 */
#define MC4_RDBFL35	(*( MC0_RDBFL0_type *) 0xf00614e6u)	/* Read Data and Bit Flip Register 35 */
#define MC4_RDBFL36	(*( MC0_RDBFL0_type *) 0xf00614e8u)	/* Read Data and Bit Flip Register 36 */
#define MC4_RDBFL37	(*( MC0_RDBFL0_type *) 0xf00614eau)	/* Read Data and Bit Flip Register 37 */
#define MC4_RDBFL38	(*( MC0_RDBFL0_type *) 0xf00614ecu)	/* Read Data and Bit Flip Register 38 */
#define MC4_RDBFL39	(*( MC0_RDBFL0_type *) 0xf00614eeu)	/* Read Data and Bit Flip Register 39 */
#define MC4_RDBFL4	(*( MC0_RDBFL0_type *) 0xf00614a8u)	/* Read Data and Bit Flip Register 4 */
#define MC4_RDBFL5	(*( MC0_RDBFL0_type *) 0xf00614aau)	/* Read Data and Bit Flip Register 5 */
#define MC4_RDBFL6	(*( MC0_RDBFL0_type *) 0xf00614acu)	/* Read Data and Bit Flip Register 6 */
#define MC4_RDBFL7	(*( MC0_RDBFL0_type *) 0xf00614aeu)	/* Read Data and Bit Flip Register 7 */
#define MC4_RDBFL8	(*( MC0_RDBFL0_type *) 0xf00614b0u)	/* Read Data and Bit Flip Register 8 */
#define MC4_RDBFL9	(*( MC0_RDBFL0_type *) 0xf00614b2u)	/* Read Data and Bit Flip Register 9 */
#define MC50_RDBFL0	(*( MC0_RDBFL0_type *) 0xf00642a0u)	/* Read Data and Bit Flip Register 0 */
#define MC50_RDBFL1	(*( MC0_RDBFL0_type *) 0xf00642a2u)	/* Read Data and Bit Flip Register 1 */
#define MC50_RDBFL10	(*( MC0_RDBFL0_type *) 0xf00642b4u)	/* Read Data and Bit Flip Register 10 */
#define MC50_RDBFL11	(*( MC0_RDBFL0_type *) 0xf00642b6u)	/* Read Data and Bit Flip Register 11 */
#define MC50_RDBFL12	(*( MC0_RDBFL0_type *) 0xf00642b8u)	/* Read Data and Bit Flip Register 12 */
#define MC50_RDBFL13	(*( MC0_RDBFL0_type *) 0xf00642bau)	/* Read Data and Bit Flip Register 13 */
#define MC50_RDBFL14	(*( MC0_RDBFL0_type *) 0xf00642bcu)	/* Read Data and Bit Flip Register 14 */
#define MC50_RDBFL15	(*( MC0_RDBFL0_type *) 0xf00642beu)	/* Read Data and Bit Flip Register 15 */
#define MC50_RDBFL16	(*( MC0_RDBFL0_type *) 0xf00642c0u)	/* Read Data and Bit Flip Register 16 */
#define MC50_RDBFL17	(*( MC0_RDBFL0_type *) 0xf00642c2u)	/* Read Data and Bit Flip Register 17 */
#define MC50_RDBFL18	(*( MC0_RDBFL0_type *) 0xf00642c4u)	/* Read Data and Bit Flip Register 18 */
#define MC50_RDBFL19	(*( MC0_RDBFL0_type *) 0xf00642c6u)	/* Read Data and Bit Flip Register 19 */
#define MC50_RDBFL2	(*( MC0_RDBFL0_type *) 0xf00642a4u)	/* Read Data and Bit Flip Register 2 */
#define MC50_RDBFL20	(*( MC0_RDBFL0_type *) 0xf00642c8u)	/* Read Data and Bit Flip Register 20 */
#define MC50_RDBFL21	(*( MC0_RDBFL0_type *) 0xf00642cau)	/* Read Data and Bit Flip Register 21 */
#define MC50_RDBFL22	(*( MC0_RDBFL0_type *) 0xf00642ccu)	/* Read Data and Bit Flip Register 22 */
#define MC50_RDBFL23	(*( MC0_RDBFL0_type *) 0xf00642ceu)	/* Read Data and Bit Flip Register 23 */
#define MC50_RDBFL24	(*( MC0_RDBFL0_type *) 0xf00642d0u)	/* Read Data and Bit Flip Register 24 */
#define MC50_RDBFL25	(*( MC0_RDBFL0_type *) 0xf00642d2u)	/* Read Data and Bit Flip Register 25 */
#define MC50_RDBFL26	(*( MC0_RDBFL0_type *) 0xf00642d4u)	/* Read Data and Bit Flip Register 26 */
#define MC50_RDBFL27	(*( MC0_RDBFL0_type *) 0xf00642d6u)	/* Read Data and Bit Flip Register 27 */
#define MC50_RDBFL28	(*( MC0_RDBFL0_type *) 0xf00642d8u)	/* Read Data and Bit Flip Register 28 */
#define MC50_RDBFL29	(*( MC0_RDBFL0_type *) 0xf00642dau)	/* Read Data and Bit Flip Register 29 */
#define MC50_RDBFL3	(*( MC0_RDBFL0_type *) 0xf00642a6u)	/* Read Data and Bit Flip Register 3 */
#define MC50_RDBFL30	(*( MC0_RDBFL0_type *) 0xf00642dcu)	/* Read Data and Bit Flip Register 30 */
#define MC50_RDBFL31	(*( MC0_RDBFL0_type *) 0xf00642deu)	/* Read Data and Bit Flip Register 31 */
#define MC50_RDBFL32	(*( MC0_RDBFL0_type *) 0xf00642e0u)	/* Read Data and Bit Flip Register 32 */
#define MC50_RDBFL33	(*( MC0_RDBFL0_type *) 0xf00642e2u)	/* Read Data and Bit Flip Register 33 */
#define MC50_RDBFL34	(*( MC0_RDBFL0_type *) 0xf00642e4u)	/* Read Data and Bit Flip Register 34 */
#define MC50_RDBFL35	(*( MC0_RDBFL0_type *) 0xf00642e6u)	/* Read Data and Bit Flip Register 35 */
#define MC50_RDBFL36	(*( MC0_RDBFL0_type *) 0xf00642e8u)	/* Read Data and Bit Flip Register 36 */
#define MC50_RDBFL37	(*( MC0_RDBFL0_type *) 0xf00642eau)	/* Read Data and Bit Flip Register 37 */
#define MC50_RDBFL38	(*( MC0_RDBFL0_type *) 0xf00642ecu)	/* Read Data and Bit Flip Register 38 */
#define MC50_RDBFL39	(*( MC0_RDBFL0_type *) 0xf00642eeu)	/* Read Data and Bit Flip Register 39 */
#define MC50_RDBFL4	(*( MC0_RDBFL0_type *) 0xf00642a8u)	/* Read Data and Bit Flip Register 4 */
#define MC50_RDBFL5	(*( MC0_RDBFL0_type *) 0xf00642aau)	/* Read Data and Bit Flip Register 5 */
#define MC50_RDBFL6	(*( MC0_RDBFL0_type *) 0xf00642acu)	/* Read Data and Bit Flip Register 6 */
#define MC50_RDBFL7	(*( MC0_RDBFL0_type *) 0xf00642aeu)	/* Read Data and Bit Flip Register 7 */
#define MC50_RDBFL8	(*( MC0_RDBFL0_type *) 0xf00642b0u)	/* Read Data and Bit Flip Register 8 */
#define MC50_RDBFL9	(*( MC0_RDBFL0_type *) 0xf00642b2u)	/* Read Data and Bit Flip Register 9 */
#define MC51_RDBFL0	(*( MC0_RDBFL0_type *) 0xf00643a0u)	/* Read Data and Bit Flip Register 0 */
#define MC51_RDBFL1	(*( MC0_RDBFL0_type *) 0xf00643a2u)	/* Read Data and Bit Flip Register 1 */
#define MC51_RDBFL10	(*( MC0_RDBFL0_type *) 0xf00643b4u)	/* Read Data and Bit Flip Register 10 */
#define MC51_RDBFL11	(*( MC0_RDBFL0_type *) 0xf00643b6u)	/* Read Data and Bit Flip Register 11 */
#define MC51_RDBFL12	(*( MC0_RDBFL0_type *) 0xf00643b8u)	/* Read Data and Bit Flip Register 12 */
#define MC51_RDBFL13	(*( MC0_RDBFL0_type *) 0xf00643bau)	/* Read Data and Bit Flip Register 13 */
#define MC51_RDBFL14	(*( MC0_RDBFL0_type *) 0xf00643bcu)	/* Read Data and Bit Flip Register 14 */
#define MC51_RDBFL15	(*( MC0_RDBFL0_type *) 0xf00643beu)	/* Read Data and Bit Flip Register 15 */
#define MC51_RDBFL16	(*( MC0_RDBFL0_type *) 0xf00643c0u)	/* Read Data and Bit Flip Register 16 */
#define MC51_RDBFL17	(*( MC0_RDBFL0_type *) 0xf00643c2u)	/* Read Data and Bit Flip Register 17 */
#define MC51_RDBFL18	(*( MC0_RDBFL0_type *) 0xf00643c4u)	/* Read Data and Bit Flip Register 18 */
#define MC51_RDBFL19	(*( MC0_RDBFL0_type *) 0xf00643c6u)	/* Read Data and Bit Flip Register 19 */
#define MC51_RDBFL2	(*( MC0_RDBFL0_type *) 0xf00643a4u)	/* Read Data and Bit Flip Register 2 */
#define MC51_RDBFL20	(*( MC0_RDBFL0_type *) 0xf00643c8u)	/* Read Data and Bit Flip Register 20 */
#define MC51_RDBFL21	(*( MC0_RDBFL0_type *) 0xf00643cau)	/* Read Data and Bit Flip Register 21 */
#define MC51_RDBFL22	(*( MC0_RDBFL0_type *) 0xf00643ccu)	/* Read Data and Bit Flip Register 22 */
#define MC51_RDBFL23	(*( MC0_RDBFL0_type *) 0xf00643ceu)	/* Read Data and Bit Flip Register 23 */
#define MC51_RDBFL24	(*( MC0_RDBFL0_type *) 0xf00643d0u)	/* Read Data and Bit Flip Register 24 */
#define MC51_RDBFL25	(*( MC0_RDBFL0_type *) 0xf00643d2u)	/* Read Data and Bit Flip Register 25 */
#define MC51_RDBFL26	(*( MC0_RDBFL0_type *) 0xf00643d4u)	/* Read Data and Bit Flip Register 26 */
#define MC51_RDBFL27	(*( MC0_RDBFL0_type *) 0xf00643d6u)	/* Read Data and Bit Flip Register 27 */
#define MC51_RDBFL28	(*( MC0_RDBFL0_type *) 0xf00643d8u)	/* Read Data and Bit Flip Register 28 */
#define MC51_RDBFL29	(*( MC0_RDBFL0_type *) 0xf00643dau)	/* Read Data and Bit Flip Register 29 */
#define MC51_RDBFL3	(*( MC0_RDBFL0_type *) 0xf00643a6u)	/* Read Data and Bit Flip Register 3 */
#define MC51_RDBFL30	(*( MC0_RDBFL0_type *) 0xf00643dcu)	/* Read Data and Bit Flip Register 30 */
#define MC51_RDBFL31	(*( MC0_RDBFL0_type *) 0xf00643deu)	/* Read Data and Bit Flip Register 31 */
#define MC51_RDBFL32	(*( MC0_RDBFL0_type *) 0xf00643e0u)	/* Read Data and Bit Flip Register 32 */
#define MC51_RDBFL33	(*( MC0_RDBFL0_type *) 0xf00643e2u)	/* Read Data and Bit Flip Register 33 */
#define MC51_RDBFL34	(*( MC0_RDBFL0_type *) 0xf00643e4u)	/* Read Data and Bit Flip Register 34 */
#define MC51_RDBFL35	(*( MC0_RDBFL0_type *) 0xf00643e6u)	/* Read Data and Bit Flip Register 35 */
#define MC51_RDBFL36	(*( MC0_RDBFL0_type *) 0xf00643e8u)	/* Read Data and Bit Flip Register 36 */
#define MC51_RDBFL37	(*( MC0_RDBFL0_type *) 0xf00643eau)	/* Read Data and Bit Flip Register 37 */
#define MC51_RDBFL38	(*( MC0_RDBFL0_type *) 0xf00643ecu)	/* Read Data and Bit Flip Register 38 */
#define MC51_RDBFL39	(*( MC0_RDBFL0_type *) 0xf00643eeu)	/* Read Data and Bit Flip Register 39 */
#define MC51_RDBFL4	(*( MC0_RDBFL0_type *) 0xf00643a8u)	/* Read Data and Bit Flip Register 4 */
#define MC51_RDBFL5	(*( MC0_RDBFL0_type *) 0xf00643aau)	/* Read Data and Bit Flip Register 5 */
#define MC51_RDBFL6	(*( MC0_RDBFL0_type *) 0xf00643acu)	/* Read Data and Bit Flip Register 6 */
#define MC51_RDBFL7	(*( MC0_RDBFL0_type *) 0xf00643aeu)	/* Read Data and Bit Flip Register 7 */
#define MC51_RDBFL8	(*( MC0_RDBFL0_type *) 0xf00643b0u)	/* Read Data and Bit Flip Register 8 */
#define MC51_RDBFL9	(*( MC0_RDBFL0_type *) 0xf00643b2u)	/* Read Data and Bit Flip Register 9 */
#define MC52_RDBFL0	(*( MC0_RDBFL0_type *) 0xf00644a0u)	/* Read Data and Bit Flip Register 0 */
#define MC52_RDBFL1	(*( MC0_RDBFL0_type *) 0xf00644a2u)	/* Read Data and Bit Flip Register 1 */
#define MC52_RDBFL10	(*( MC0_RDBFL0_type *) 0xf00644b4u)	/* Read Data and Bit Flip Register 10 */
#define MC52_RDBFL11	(*( MC0_RDBFL0_type *) 0xf00644b6u)	/* Read Data and Bit Flip Register 11 */
#define MC52_RDBFL12	(*( MC0_RDBFL0_type *) 0xf00644b8u)	/* Read Data and Bit Flip Register 12 */
#define MC52_RDBFL13	(*( MC0_RDBFL0_type *) 0xf00644bau)	/* Read Data and Bit Flip Register 13 */
#define MC52_RDBFL14	(*( MC0_RDBFL0_type *) 0xf00644bcu)	/* Read Data and Bit Flip Register 14 */
#define MC52_RDBFL15	(*( MC0_RDBFL0_type *) 0xf00644beu)	/* Read Data and Bit Flip Register 15 */
#define MC52_RDBFL16	(*( MC0_RDBFL0_type *) 0xf00644c0u)	/* Read Data and Bit Flip Register 16 */
#define MC52_RDBFL17	(*( MC0_RDBFL0_type *) 0xf00644c2u)	/* Read Data and Bit Flip Register 17 */
#define MC52_RDBFL18	(*( MC0_RDBFL0_type *) 0xf00644c4u)	/* Read Data and Bit Flip Register 18 */
#define MC52_RDBFL19	(*( MC0_RDBFL0_type *) 0xf00644c6u)	/* Read Data and Bit Flip Register 19 */
#define MC52_RDBFL2	(*( MC0_RDBFL0_type *) 0xf00644a4u)	/* Read Data and Bit Flip Register 2 */
#define MC52_RDBFL20	(*( MC0_RDBFL0_type *) 0xf00644c8u)	/* Read Data and Bit Flip Register 20 */
#define MC52_RDBFL21	(*( MC0_RDBFL0_type *) 0xf00644cau)	/* Read Data and Bit Flip Register 21 */
#define MC52_RDBFL22	(*( MC0_RDBFL0_type *) 0xf00644ccu)	/* Read Data and Bit Flip Register 22 */
#define MC52_RDBFL23	(*( MC0_RDBFL0_type *) 0xf00644ceu)	/* Read Data and Bit Flip Register 23 */
#define MC52_RDBFL24	(*( MC0_RDBFL0_type *) 0xf00644d0u)	/* Read Data and Bit Flip Register 24 */
#define MC52_RDBFL25	(*( MC0_RDBFL0_type *) 0xf00644d2u)	/* Read Data and Bit Flip Register 25 */
#define MC52_RDBFL26	(*( MC0_RDBFL0_type *) 0xf00644d4u)	/* Read Data and Bit Flip Register 26 */
#define MC52_RDBFL27	(*( MC0_RDBFL0_type *) 0xf00644d6u)	/* Read Data and Bit Flip Register 27 */
#define MC52_RDBFL28	(*( MC0_RDBFL0_type *) 0xf00644d8u)	/* Read Data and Bit Flip Register 28 */
#define MC52_RDBFL29	(*( MC0_RDBFL0_type *) 0xf00644dau)	/* Read Data and Bit Flip Register 29 */
#define MC52_RDBFL3	(*( MC0_RDBFL0_type *) 0xf00644a6u)	/* Read Data and Bit Flip Register 3 */
#define MC52_RDBFL30	(*( MC0_RDBFL0_type *) 0xf00644dcu)	/* Read Data and Bit Flip Register 30 */
#define MC52_RDBFL31	(*( MC0_RDBFL0_type *) 0xf00644deu)	/* Read Data and Bit Flip Register 31 */
#define MC52_RDBFL32	(*( MC0_RDBFL0_type *) 0xf00644e0u)	/* Read Data and Bit Flip Register 32 */
#define MC52_RDBFL33	(*( MC0_RDBFL0_type *) 0xf00644e2u)	/* Read Data and Bit Flip Register 33 */
#define MC52_RDBFL34	(*( MC0_RDBFL0_type *) 0xf00644e4u)	/* Read Data and Bit Flip Register 34 */
#define MC52_RDBFL35	(*( MC0_RDBFL0_type *) 0xf00644e6u)	/* Read Data and Bit Flip Register 35 */
#define MC52_RDBFL36	(*( MC0_RDBFL0_type *) 0xf00644e8u)	/* Read Data and Bit Flip Register 36 */
#define MC52_RDBFL37	(*( MC0_RDBFL0_type *) 0xf00644eau)	/* Read Data and Bit Flip Register 37 */
#define MC52_RDBFL38	(*( MC0_RDBFL0_type *) 0xf00644ecu)	/* Read Data and Bit Flip Register 38 */
#define MC52_RDBFL39	(*( MC0_RDBFL0_type *) 0xf00644eeu)	/* Read Data and Bit Flip Register 39 */
#define MC52_RDBFL4	(*( MC0_RDBFL0_type *) 0xf00644a8u)	/* Read Data and Bit Flip Register 4 */
#define MC52_RDBFL5	(*( MC0_RDBFL0_type *) 0xf00644aau)	/* Read Data and Bit Flip Register 5 */
#define MC52_RDBFL6	(*( MC0_RDBFL0_type *) 0xf00644acu)	/* Read Data and Bit Flip Register 6 */
#define MC52_RDBFL7	(*( MC0_RDBFL0_type *) 0xf00644aeu)	/* Read Data and Bit Flip Register 7 */
#define MC52_RDBFL8	(*( MC0_RDBFL0_type *) 0xf00644b0u)	/* Read Data and Bit Flip Register 8 */
#define MC52_RDBFL9	(*( MC0_RDBFL0_type *) 0xf00644b2u)	/* Read Data and Bit Flip Register 9 */
#define MC53_RDBFL0	(*( MC0_RDBFL0_type *) 0xf00645a0u)	/* Read Data and Bit Flip Register 0 */
#define MC53_RDBFL1	(*( MC0_RDBFL0_type *) 0xf00645a2u)	/* Read Data and Bit Flip Register 1 */
#define MC53_RDBFL10	(*( MC0_RDBFL0_type *) 0xf00645b4u)	/* Read Data and Bit Flip Register 10 */
#define MC53_RDBFL11	(*( MC0_RDBFL0_type *) 0xf00645b6u)	/* Read Data and Bit Flip Register 11 */
#define MC53_RDBFL12	(*( MC0_RDBFL0_type *) 0xf00645b8u)	/* Read Data and Bit Flip Register 12 */
#define MC53_RDBFL13	(*( MC0_RDBFL0_type *) 0xf00645bau)	/* Read Data and Bit Flip Register 13 */
#define MC53_RDBFL14	(*( MC0_RDBFL0_type *) 0xf00645bcu)	/* Read Data and Bit Flip Register 14 */
#define MC53_RDBFL15	(*( MC0_RDBFL0_type *) 0xf00645beu)	/* Read Data and Bit Flip Register 15 */
#define MC53_RDBFL16	(*( MC0_RDBFL0_type *) 0xf00645c0u)	/* Read Data and Bit Flip Register 16 */
#define MC53_RDBFL17	(*( MC0_RDBFL0_type *) 0xf00645c2u)	/* Read Data and Bit Flip Register 17 */
#define MC53_RDBFL18	(*( MC0_RDBFL0_type *) 0xf00645c4u)	/* Read Data and Bit Flip Register 18 */
#define MC53_RDBFL19	(*( MC0_RDBFL0_type *) 0xf00645c6u)	/* Read Data and Bit Flip Register 19 */
#define MC53_RDBFL2	(*( MC0_RDBFL0_type *) 0xf00645a4u)	/* Read Data and Bit Flip Register 2 */
#define MC53_RDBFL20	(*( MC0_RDBFL0_type *) 0xf00645c8u)	/* Read Data and Bit Flip Register 20 */
#define MC53_RDBFL21	(*( MC0_RDBFL0_type *) 0xf00645cau)	/* Read Data and Bit Flip Register 21 */
#define MC53_RDBFL22	(*( MC0_RDBFL0_type *) 0xf00645ccu)	/* Read Data and Bit Flip Register 22 */
#define MC53_RDBFL23	(*( MC0_RDBFL0_type *) 0xf00645ceu)	/* Read Data and Bit Flip Register 23 */
#define MC53_RDBFL24	(*( MC0_RDBFL0_type *) 0xf00645d0u)	/* Read Data and Bit Flip Register 24 */
#define MC53_RDBFL25	(*( MC0_RDBFL0_type *) 0xf00645d2u)	/* Read Data and Bit Flip Register 25 */
#define MC53_RDBFL26	(*( MC0_RDBFL0_type *) 0xf00645d4u)	/* Read Data and Bit Flip Register 26 */
#define MC53_RDBFL27	(*( MC0_RDBFL0_type *) 0xf00645d6u)	/* Read Data and Bit Flip Register 27 */
#define MC53_RDBFL28	(*( MC0_RDBFL0_type *) 0xf00645d8u)	/* Read Data and Bit Flip Register 28 */
#define MC53_RDBFL29	(*( MC0_RDBFL0_type *) 0xf00645dau)	/* Read Data and Bit Flip Register 29 */
#define MC53_RDBFL3	(*( MC0_RDBFL0_type *) 0xf00645a6u)	/* Read Data and Bit Flip Register 3 */
#define MC53_RDBFL30	(*( MC0_RDBFL0_type *) 0xf00645dcu)	/* Read Data and Bit Flip Register 30 */
#define MC53_RDBFL31	(*( MC0_RDBFL0_type *) 0xf00645deu)	/* Read Data and Bit Flip Register 31 */
#define MC53_RDBFL32	(*( MC0_RDBFL0_type *) 0xf00645e0u)	/* Read Data and Bit Flip Register 32 */
#define MC53_RDBFL33	(*( MC0_RDBFL0_type *) 0xf00645e2u)	/* Read Data and Bit Flip Register 33 */
#define MC53_RDBFL34	(*( MC0_RDBFL0_type *) 0xf00645e4u)	/* Read Data and Bit Flip Register 34 */
#define MC53_RDBFL35	(*( MC0_RDBFL0_type *) 0xf00645e6u)	/* Read Data and Bit Flip Register 35 */
#define MC53_RDBFL36	(*( MC0_RDBFL0_type *) 0xf00645e8u)	/* Read Data and Bit Flip Register 36 */
#define MC53_RDBFL37	(*( MC0_RDBFL0_type *) 0xf00645eau)	/* Read Data and Bit Flip Register 37 */
#define MC53_RDBFL38	(*( MC0_RDBFL0_type *) 0xf00645ecu)	/* Read Data and Bit Flip Register 38 */
#define MC53_RDBFL39	(*( MC0_RDBFL0_type *) 0xf00645eeu)	/* Read Data and Bit Flip Register 39 */
#define MC53_RDBFL4	(*( MC0_RDBFL0_type *) 0xf00645a8u)	/* Read Data and Bit Flip Register 4 */
#define MC53_RDBFL5	(*( MC0_RDBFL0_type *) 0xf00645aau)	/* Read Data and Bit Flip Register 5 */
#define MC53_RDBFL6	(*( MC0_RDBFL0_type *) 0xf00645acu)	/* Read Data and Bit Flip Register 6 */
#define MC53_RDBFL7	(*( MC0_RDBFL0_type *) 0xf00645aeu)	/* Read Data and Bit Flip Register 7 */
#define MC53_RDBFL8	(*( MC0_RDBFL0_type *) 0xf00645b0u)	/* Read Data and Bit Flip Register 8 */
#define MC53_RDBFL9	(*( MC0_RDBFL0_type *) 0xf00645b2u)	/* Read Data and Bit Flip Register 9 */
#define MC54_RDBFL0	(*( MC0_RDBFL0_type *) 0xf00646a0u)	/* Read Data and Bit Flip Register 0 */
#define MC54_RDBFL1	(*( MC0_RDBFL0_type *) 0xf00646a2u)	/* Read Data and Bit Flip Register 1 */
#define MC54_RDBFL10	(*( MC0_RDBFL0_type *) 0xf00646b4u)	/* Read Data and Bit Flip Register 10 */
#define MC54_RDBFL11	(*( MC0_RDBFL0_type *) 0xf00646b6u)	/* Read Data and Bit Flip Register 11 */
#define MC54_RDBFL12	(*( MC0_RDBFL0_type *) 0xf00646b8u)	/* Read Data and Bit Flip Register 12 */
#define MC54_RDBFL13	(*( MC0_RDBFL0_type *) 0xf00646bau)	/* Read Data and Bit Flip Register 13 */
#define MC54_RDBFL14	(*( MC0_RDBFL0_type *) 0xf00646bcu)	/* Read Data and Bit Flip Register 14 */
#define MC54_RDBFL15	(*( MC0_RDBFL0_type *) 0xf00646beu)	/* Read Data and Bit Flip Register 15 */
#define MC54_RDBFL16	(*( MC0_RDBFL0_type *) 0xf00646c0u)	/* Read Data and Bit Flip Register 16 */
#define MC54_RDBFL17	(*( MC0_RDBFL0_type *) 0xf00646c2u)	/* Read Data and Bit Flip Register 17 */
#define MC54_RDBFL18	(*( MC0_RDBFL0_type *) 0xf00646c4u)	/* Read Data and Bit Flip Register 18 */
#define MC54_RDBFL19	(*( MC0_RDBFL0_type *) 0xf00646c6u)	/* Read Data and Bit Flip Register 19 */
#define MC54_RDBFL2	(*( MC0_RDBFL0_type *) 0xf00646a4u)	/* Read Data and Bit Flip Register 2 */
#define MC54_RDBFL20	(*( MC0_RDBFL0_type *) 0xf00646c8u)	/* Read Data and Bit Flip Register 20 */
#define MC54_RDBFL21	(*( MC0_RDBFL0_type *) 0xf00646cau)	/* Read Data and Bit Flip Register 21 */
#define MC54_RDBFL22	(*( MC0_RDBFL0_type *) 0xf00646ccu)	/* Read Data and Bit Flip Register 22 */
#define MC54_RDBFL23	(*( MC0_RDBFL0_type *) 0xf00646ceu)	/* Read Data and Bit Flip Register 23 */
#define MC54_RDBFL24	(*( MC0_RDBFL0_type *) 0xf00646d0u)	/* Read Data and Bit Flip Register 24 */
#define MC54_RDBFL25	(*( MC0_RDBFL0_type *) 0xf00646d2u)	/* Read Data and Bit Flip Register 25 */
#define MC54_RDBFL26	(*( MC0_RDBFL0_type *) 0xf00646d4u)	/* Read Data and Bit Flip Register 26 */
#define MC54_RDBFL27	(*( MC0_RDBFL0_type *) 0xf00646d6u)	/* Read Data and Bit Flip Register 27 */
#define MC54_RDBFL28	(*( MC0_RDBFL0_type *) 0xf00646d8u)	/* Read Data and Bit Flip Register 28 */
#define MC54_RDBFL29	(*( MC0_RDBFL0_type *) 0xf00646dau)	/* Read Data and Bit Flip Register 29 */
#define MC54_RDBFL3	(*( MC0_RDBFL0_type *) 0xf00646a6u)	/* Read Data and Bit Flip Register 3 */
#define MC54_RDBFL30	(*( MC0_RDBFL0_type *) 0xf00646dcu)	/* Read Data and Bit Flip Register 30 */
#define MC54_RDBFL31	(*( MC0_RDBFL0_type *) 0xf00646deu)	/* Read Data and Bit Flip Register 31 */
#define MC54_RDBFL32	(*( MC0_RDBFL0_type *) 0xf00646e0u)	/* Read Data and Bit Flip Register 32 */
#define MC54_RDBFL33	(*( MC0_RDBFL0_type *) 0xf00646e2u)	/* Read Data and Bit Flip Register 33 */
#define MC54_RDBFL34	(*( MC0_RDBFL0_type *) 0xf00646e4u)	/* Read Data and Bit Flip Register 34 */
#define MC54_RDBFL35	(*( MC0_RDBFL0_type *) 0xf00646e6u)	/* Read Data and Bit Flip Register 35 */
#define MC54_RDBFL36	(*( MC0_RDBFL0_type *) 0xf00646e8u)	/* Read Data and Bit Flip Register 36 */
#define MC54_RDBFL37	(*( MC0_RDBFL0_type *) 0xf00646eau)	/* Read Data and Bit Flip Register 37 */
#define MC54_RDBFL38	(*( MC0_RDBFL0_type *) 0xf00646ecu)	/* Read Data and Bit Flip Register 38 */
#define MC54_RDBFL39	(*( MC0_RDBFL0_type *) 0xf00646eeu)	/* Read Data and Bit Flip Register 39 */
#define MC54_RDBFL4	(*( MC0_RDBFL0_type *) 0xf00646a8u)	/* Read Data and Bit Flip Register 4 */
#define MC54_RDBFL5	(*( MC0_RDBFL0_type *) 0xf00646aau)	/* Read Data and Bit Flip Register 5 */
#define MC54_RDBFL6	(*( MC0_RDBFL0_type *) 0xf00646acu)	/* Read Data and Bit Flip Register 6 */
#define MC54_RDBFL7	(*( MC0_RDBFL0_type *) 0xf00646aeu)	/* Read Data and Bit Flip Register 7 */
#define MC54_RDBFL8	(*( MC0_RDBFL0_type *) 0xf00646b0u)	/* Read Data and Bit Flip Register 8 */
#define MC54_RDBFL9	(*( MC0_RDBFL0_type *) 0xf00646b2u)	/* Read Data and Bit Flip Register 9 */
#define MC55_RDBFL0	(*( MC0_RDBFL0_type *) 0xf00647a0u)	/* Read Data and Bit Flip Register 0 */
#define MC55_RDBFL1	(*( MC0_RDBFL0_type *) 0xf00647a2u)	/* Read Data and Bit Flip Register 1 */
#define MC55_RDBFL10	(*( MC0_RDBFL0_type *) 0xf00647b4u)	/* Read Data and Bit Flip Register 10 */
#define MC55_RDBFL11	(*( MC0_RDBFL0_type *) 0xf00647b6u)	/* Read Data and Bit Flip Register 11 */
#define MC55_RDBFL12	(*( MC0_RDBFL0_type *) 0xf00647b8u)	/* Read Data and Bit Flip Register 12 */
#define MC55_RDBFL13	(*( MC0_RDBFL0_type *) 0xf00647bau)	/* Read Data and Bit Flip Register 13 */
#define MC55_RDBFL14	(*( MC0_RDBFL0_type *) 0xf00647bcu)	/* Read Data and Bit Flip Register 14 */
#define MC55_RDBFL15	(*( MC0_RDBFL0_type *) 0xf00647beu)	/* Read Data and Bit Flip Register 15 */
#define MC55_RDBFL16	(*( MC0_RDBFL0_type *) 0xf00647c0u)	/* Read Data and Bit Flip Register 16 */
#define MC55_RDBFL17	(*( MC0_RDBFL0_type *) 0xf00647c2u)	/* Read Data and Bit Flip Register 17 */
#define MC55_RDBFL18	(*( MC0_RDBFL0_type *) 0xf00647c4u)	/* Read Data and Bit Flip Register 18 */
#define MC55_RDBFL19	(*( MC0_RDBFL0_type *) 0xf00647c6u)	/* Read Data and Bit Flip Register 19 */
#define MC55_RDBFL2	(*( MC0_RDBFL0_type *) 0xf00647a4u)	/* Read Data and Bit Flip Register 2 */
#define MC55_RDBFL20	(*( MC0_RDBFL0_type *) 0xf00647c8u)	/* Read Data and Bit Flip Register 20 */
#define MC55_RDBFL21	(*( MC0_RDBFL0_type *) 0xf00647cau)	/* Read Data and Bit Flip Register 21 */
#define MC55_RDBFL22	(*( MC0_RDBFL0_type *) 0xf00647ccu)	/* Read Data and Bit Flip Register 22 */
#define MC55_RDBFL23	(*( MC0_RDBFL0_type *) 0xf00647ceu)	/* Read Data and Bit Flip Register 23 */
#define MC55_RDBFL24	(*( MC0_RDBFL0_type *) 0xf00647d0u)	/* Read Data and Bit Flip Register 24 */
#define MC55_RDBFL25	(*( MC0_RDBFL0_type *) 0xf00647d2u)	/* Read Data and Bit Flip Register 25 */
#define MC55_RDBFL26	(*( MC0_RDBFL0_type *) 0xf00647d4u)	/* Read Data and Bit Flip Register 26 */
#define MC55_RDBFL27	(*( MC0_RDBFL0_type *) 0xf00647d6u)	/* Read Data and Bit Flip Register 27 */
#define MC55_RDBFL28	(*( MC0_RDBFL0_type *) 0xf00647d8u)	/* Read Data and Bit Flip Register 28 */
#define MC55_RDBFL29	(*( MC0_RDBFL0_type *) 0xf00647dau)	/* Read Data and Bit Flip Register 29 */
#define MC55_RDBFL3	(*( MC0_RDBFL0_type *) 0xf00647a6u)	/* Read Data and Bit Flip Register 3 */
#define MC55_RDBFL30	(*( MC0_RDBFL0_type *) 0xf00647dcu)	/* Read Data and Bit Flip Register 30 */
#define MC55_RDBFL31	(*( MC0_RDBFL0_type *) 0xf00647deu)	/* Read Data and Bit Flip Register 31 */
#define MC55_RDBFL32	(*( MC0_RDBFL0_type *) 0xf00647e0u)	/* Read Data and Bit Flip Register 32 */
#define MC55_RDBFL33	(*( MC0_RDBFL0_type *) 0xf00647e2u)	/* Read Data and Bit Flip Register 33 */
#define MC55_RDBFL34	(*( MC0_RDBFL0_type *) 0xf00647e4u)	/* Read Data and Bit Flip Register 34 */
#define MC55_RDBFL35	(*( MC0_RDBFL0_type *) 0xf00647e6u)	/* Read Data and Bit Flip Register 35 */
#define MC55_RDBFL36	(*( MC0_RDBFL0_type *) 0xf00647e8u)	/* Read Data and Bit Flip Register 36 */
#define MC55_RDBFL37	(*( MC0_RDBFL0_type *) 0xf00647eau)	/* Read Data and Bit Flip Register 37 */
#define MC55_RDBFL38	(*( MC0_RDBFL0_type *) 0xf00647ecu)	/* Read Data and Bit Flip Register 38 */
#define MC55_RDBFL39	(*( MC0_RDBFL0_type *) 0xf00647eeu)	/* Read Data and Bit Flip Register 39 */
#define MC55_RDBFL4	(*( MC0_RDBFL0_type *) 0xf00647a8u)	/* Read Data and Bit Flip Register 4 */
#define MC55_RDBFL5	(*( MC0_RDBFL0_type *) 0xf00647aau)	/* Read Data and Bit Flip Register 5 */
#define MC55_RDBFL6	(*( MC0_RDBFL0_type *) 0xf00647acu)	/* Read Data and Bit Flip Register 6 */
#define MC55_RDBFL7	(*( MC0_RDBFL0_type *) 0xf00647aeu)	/* Read Data and Bit Flip Register 7 */
#define MC55_RDBFL8	(*( MC0_RDBFL0_type *) 0xf00647b0u)	/* Read Data and Bit Flip Register 8 */
#define MC55_RDBFL9	(*( MC0_RDBFL0_type *) 0xf00647b2u)	/* Read Data and Bit Flip Register 9 */
#define MC56_RDBFL0	(*( MC0_RDBFL0_type *) 0xf00648a0u)	/* Read Data and Bit Flip Register 0 */
#define MC56_RDBFL1	(*( MC0_RDBFL0_type *) 0xf00648a2u)	/* Read Data and Bit Flip Register 1 */
#define MC56_RDBFL10	(*( MC0_RDBFL0_type *) 0xf00648b4u)	/* Read Data and Bit Flip Register 10 */
#define MC56_RDBFL11	(*( MC0_RDBFL0_type *) 0xf00648b6u)	/* Read Data and Bit Flip Register 11 */
#define MC56_RDBFL12	(*( MC0_RDBFL0_type *) 0xf00648b8u)	/* Read Data and Bit Flip Register 12 */
#define MC56_RDBFL13	(*( MC0_RDBFL0_type *) 0xf00648bau)	/* Read Data and Bit Flip Register 13 */
#define MC56_RDBFL14	(*( MC0_RDBFL0_type *) 0xf00648bcu)	/* Read Data and Bit Flip Register 14 */
#define MC56_RDBFL15	(*( MC0_RDBFL0_type *) 0xf00648beu)	/* Read Data and Bit Flip Register 15 */
#define MC56_RDBFL16	(*( MC0_RDBFL0_type *) 0xf00648c0u)	/* Read Data and Bit Flip Register 16 */
#define MC56_RDBFL17	(*( MC0_RDBFL0_type *) 0xf00648c2u)	/* Read Data and Bit Flip Register 17 */
#define MC56_RDBFL18	(*( MC0_RDBFL0_type *) 0xf00648c4u)	/* Read Data and Bit Flip Register 18 */
#define MC56_RDBFL19	(*( MC0_RDBFL0_type *) 0xf00648c6u)	/* Read Data and Bit Flip Register 19 */
#define MC56_RDBFL2	(*( MC0_RDBFL0_type *) 0xf00648a4u)	/* Read Data and Bit Flip Register 2 */
#define MC56_RDBFL20	(*( MC0_RDBFL0_type *) 0xf00648c8u)	/* Read Data and Bit Flip Register 20 */
#define MC56_RDBFL21	(*( MC0_RDBFL0_type *) 0xf00648cau)	/* Read Data and Bit Flip Register 21 */
#define MC56_RDBFL22	(*( MC0_RDBFL0_type *) 0xf00648ccu)	/* Read Data and Bit Flip Register 22 */
#define MC56_RDBFL23	(*( MC0_RDBFL0_type *) 0xf00648ceu)	/* Read Data and Bit Flip Register 23 */
#define MC56_RDBFL24	(*( MC0_RDBFL0_type *) 0xf00648d0u)	/* Read Data and Bit Flip Register 24 */
#define MC56_RDBFL25	(*( MC0_RDBFL0_type *) 0xf00648d2u)	/* Read Data and Bit Flip Register 25 */
#define MC56_RDBFL26	(*( MC0_RDBFL0_type *) 0xf00648d4u)	/* Read Data and Bit Flip Register 26 */
#define MC56_RDBFL27	(*( MC0_RDBFL0_type *) 0xf00648d6u)	/* Read Data and Bit Flip Register 27 */
#define MC56_RDBFL28	(*( MC0_RDBFL0_type *) 0xf00648d8u)	/* Read Data and Bit Flip Register 28 */
#define MC56_RDBFL29	(*( MC0_RDBFL0_type *) 0xf00648dau)	/* Read Data and Bit Flip Register 29 */
#define MC56_RDBFL3	(*( MC0_RDBFL0_type *) 0xf00648a6u)	/* Read Data and Bit Flip Register 3 */
#define MC56_RDBFL30	(*( MC0_RDBFL0_type *) 0xf00648dcu)	/* Read Data and Bit Flip Register 30 */
#define MC56_RDBFL31	(*( MC0_RDBFL0_type *) 0xf00648deu)	/* Read Data and Bit Flip Register 31 */
#define MC56_RDBFL32	(*( MC0_RDBFL0_type *) 0xf00648e0u)	/* Read Data and Bit Flip Register 32 */
#define MC56_RDBFL33	(*( MC0_RDBFL0_type *) 0xf00648e2u)	/* Read Data and Bit Flip Register 33 */
#define MC56_RDBFL34	(*( MC0_RDBFL0_type *) 0xf00648e4u)	/* Read Data and Bit Flip Register 34 */
#define MC56_RDBFL35	(*( MC0_RDBFL0_type *) 0xf00648e6u)	/* Read Data and Bit Flip Register 35 */
#define MC56_RDBFL36	(*( MC0_RDBFL0_type *) 0xf00648e8u)	/* Read Data and Bit Flip Register 36 */
#define MC56_RDBFL37	(*( MC0_RDBFL0_type *) 0xf00648eau)	/* Read Data and Bit Flip Register 37 */
#define MC56_RDBFL38	(*( MC0_RDBFL0_type *) 0xf00648ecu)	/* Read Data and Bit Flip Register 38 */
#define MC56_RDBFL39	(*( MC0_RDBFL0_type *) 0xf00648eeu)	/* Read Data and Bit Flip Register 39 */
#define MC56_RDBFL4	(*( MC0_RDBFL0_type *) 0xf00648a8u)	/* Read Data and Bit Flip Register 4 */
#define MC56_RDBFL5	(*( MC0_RDBFL0_type *) 0xf00648aau)	/* Read Data and Bit Flip Register 5 */
#define MC56_RDBFL6	(*( MC0_RDBFL0_type *) 0xf00648acu)	/* Read Data and Bit Flip Register 6 */
#define MC56_RDBFL7	(*( MC0_RDBFL0_type *) 0xf00648aeu)	/* Read Data and Bit Flip Register 7 */
#define MC56_RDBFL8	(*( MC0_RDBFL0_type *) 0xf00648b0u)	/* Read Data and Bit Flip Register 8 */
#define MC56_RDBFL9	(*( MC0_RDBFL0_type *) 0xf00648b2u)	/* Read Data and Bit Flip Register 9 */
#define MC57_RDBFL0	(*( MC0_RDBFL0_type *) 0xf00649a0u)	/* Read Data and Bit Flip Register 0 */
#define MC57_RDBFL1	(*( MC0_RDBFL0_type *) 0xf00649a2u)	/* Read Data and Bit Flip Register 1 */
#define MC57_RDBFL10	(*( MC0_RDBFL0_type *) 0xf00649b4u)	/* Read Data and Bit Flip Register 10 */
#define MC57_RDBFL11	(*( MC0_RDBFL0_type *) 0xf00649b6u)	/* Read Data and Bit Flip Register 11 */
#define MC57_RDBFL12	(*( MC0_RDBFL0_type *) 0xf00649b8u)	/* Read Data and Bit Flip Register 12 */
#define MC57_RDBFL13	(*( MC0_RDBFL0_type *) 0xf00649bau)	/* Read Data and Bit Flip Register 13 */
#define MC57_RDBFL14	(*( MC0_RDBFL0_type *) 0xf00649bcu)	/* Read Data and Bit Flip Register 14 */
#define MC57_RDBFL15	(*( MC0_RDBFL0_type *) 0xf00649beu)	/* Read Data and Bit Flip Register 15 */
#define MC57_RDBFL16	(*( MC0_RDBFL0_type *) 0xf00649c0u)	/* Read Data and Bit Flip Register 16 */
#define MC57_RDBFL17	(*( MC0_RDBFL0_type *) 0xf00649c2u)	/* Read Data and Bit Flip Register 17 */
#define MC57_RDBFL18	(*( MC0_RDBFL0_type *) 0xf00649c4u)	/* Read Data and Bit Flip Register 18 */
#define MC57_RDBFL19	(*( MC0_RDBFL0_type *) 0xf00649c6u)	/* Read Data and Bit Flip Register 19 */
#define MC57_RDBFL2	(*( MC0_RDBFL0_type *) 0xf00649a4u)	/* Read Data and Bit Flip Register 2 */
#define MC57_RDBFL20	(*( MC0_RDBFL0_type *) 0xf00649c8u)	/* Read Data and Bit Flip Register 20 */
#define MC57_RDBFL21	(*( MC0_RDBFL0_type *) 0xf00649cau)	/* Read Data and Bit Flip Register 21 */
#define MC57_RDBFL22	(*( MC0_RDBFL0_type *) 0xf00649ccu)	/* Read Data and Bit Flip Register 22 */
#define MC57_RDBFL23	(*( MC0_RDBFL0_type *) 0xf00649ceu)	/* Read Data and Bit Flip Register 23 */
#define MC57_RDBFL24	(*( MC0_RDBFL0_type *) 0xf00649d0u)	/* Read Data and Bit Flip Register 24 */
#define MC57_RDBFL25	(*( MC0_RDBFL0_type *) 0xf00649d2u)	/* Read Data and Bit Flip Register 25 */
#define MC57_RDBFL26	(*( MC0_RDBFL0_type *) 0xf00649d4u)	/* Read Data and Bit Flip Register 26 */
#define MC57_RDBFL27	(*( MC0_RDBFL0_type *) 0xf00649d6u)	/* Read Data and Bit Flip Register 27 */
#define MC57_RDBFL28	(*( MC0_RDBFL0_type *) 0xf00649d8u)	/* Read Data and Bit Flip Register 28 */
#define MC57_RDBFL29	(*( MC0_RDBFL0_type *) 0xf00649dau)	/* Read Data and Bit Flip Register 29 */
#define MC57_RDBFL3	(*( MC0_RDBFL0_type *) 0xf00649a6u)	/* Read Data and Bit Flip Register 3 */
#define MC57_RDBFL30	(*( MC0_RDBFL0_type *) 0xf00649dcu)	/* Read Data and Bit Flip Register 30 */
#define MC57_RDBFL31	(*( MC0_RDBFL0_type *) 0xf00649deu)	/* Read Data and Bit Flip Register 31 */
#define MC57_RDBFL32	(*( MC0_RDBFL0_type *) 0xf00649e0u)	/* Read Data and Bit Flip Register 32 */
#define MC57_RDBFL33	(*( MC0_RDBFL0_type *) 0xf00649e2u)	/* Read Data and Bit Flip Register 33 */
#define MC57_RDBFL34	(*( MC0_RDBFL0_type *) 0xf00649e4u)	/* Read Data and Bit Flip Register 34 */
#define MC57_RDBFL35	(*( MC0_RDBFL0_type *) 0xf00649e6u)	/* Read Data and Bit Flip Register 35 */
#define MC57_RDBFL36	(*( MC0_RDBFL0_type *) 0xf00649e8u)	/* Read Data and Bit Flip Register 36 */
#define MC57_RDBFL37	(*( MC0_RDBFL0_type *) 0xf00649eau)	/* Read Data and Bit Flip Register 37 */
#define MC57_RDBFL38	(*( MC0_RDBFL0_type *) 0xf00649ecu)	/* Read Data and Bit Flip Register 38 */
#define MC57_RDBFL39	(*( MC0_RDBFL0_type *) 0xf00649eeu)	/* Read Data and Bit Flip Register 39 */
#define MC57_RDBFL4	(*( MC0_RDBFL0_type *) 0xf00649a8u)	/* Read Data and Bit Flip Register 4 */
#define MC57_RDBFL5	(*( MC0_RDBFL0_type *) 0xf00649aau)	/* Read Data and Bit Flip Register 5 */
#define MC57_RDBFL6	(*( MC0_RDBFL0_type *) 0xf00649acu)	/* Read Data and Bit Flip Register 6 */
#define MC57_RDBFL7	(*( MC0_RDBFL0_type *) 0xf00649aeu)	/* Read Data and Bit Flip Register 7 */
#define MC57_RDBFL8	(*( MC0_RDBFL0_type *) 0xf00649b0u)	/* Read Data and Bit Flip Register 8 */
#define MC57_RDBFL9	(*( MC0_RDBFL0_type *) 0xf00649b2u)	/* Read Data and Bit Flip Register 9 */
#define MC58_RDBFL0	(*( MC0_RDBFL0_type *) 0xf0064aa0u)	/* Read Data and Bit Flip Register 0 */
#define MC58_RDBFL1	(*( MC0_RDBFL0_type *) 0xf0064aa2u)	/* Read Data and Bit Flip Register 1 */
#define MC58_RDBFL10	(*( MC0_RDBFL0_type *) 0xf0064ab4u)	/* Read Data and Bit Flip Register 10 */
#define MC58_RDBFL11	(*( MC0_RDBFL0_type *) 0xf0064ab6u)	/* Read Data and Bit Flip Register 11 */
#define MC58_RDBFL12	(*( MC0_RDBFL0_type *) 0xf0064ab8u)	/* Read Data and Bit Flip Register 12 */
#define MC58_RDBFL13	(*( MC0_RDBFL0_type *) 0xf0064abau)	/* Read Data and Bit Flip Register 13 */
#define MC58_RDBFL14	(*( MC0_RDBFL0_type *) 0xf0064abcu)	/* Read Data and Bit Flip Register 14 */
#define MC58_RDBFL15	(*( MC0_RDBFL0_type *) 0xf0064abeu)	/* Read Data and Bit Flip Register 15 */
#define MC58_RDBFL16	(*( MC0_RDBFL0_type *) 0xf0064ac0u)	/* Read Data and Bit Flip Register 16 */
#define MC58_RDBFL17	(*( MC0_RDBFL0_type *) 0xf0064ac2u)	/* Read Data and Bit Flip Register 17 */
#define MC58_RDBFL18	(*( MC0_RDBFL0_type *) 0xf0064ac4u)	/* Read Data and Bit Flip Register 18 */
#define MC58_RDBFL19	(*( MC0_RDBFL0_type *) 0xf0064ac6u)	/* Read Data and Bit Flip Register 19 */
#define MC58_RDBFL2	(*( MC0_RDBFL0_type *) 0xf0064aa4u)	/* Read Data and Bit Flip Register 2 */
#define MC58_RDBFL20	(*( MC0_RDBFL0_type *) 0xf0064ac8u)	/* Read Data and Bit Flip Register 20 */
#define MC58_RDBFL21	(*( MC0_RDBFL0_type *) 0xf0064acau)	/* Read Data and Bit Flip Register 21 */
#define MC58_RDBFL22	(*( MC0_RDBFL0_type *) 0xf0064accu)	/* Read Data and Bit Flip Register 22 */
#define MC58_RDBFL23	(*( MC0_RDBFL0_type *) 0xf0064aceu)	/* Read Data and Bit Flip Register 23 */
#define MC58_RDBFL24	(*( MC0_RDBFL0_type *) 0xf0064ad0u)	/* Read Data and Bit Flip Register 24 */
#define MC58_RDBFL25	(*( MC0_RDBFL0_type *) 0xf0064ad2u)	/* Read Data and Bit Flip Register 25 */
#define MC58_RDBFL26	(*( MC0_RDBFL0_type *) 0xf0064ad4u)	/* Read Data and Bit Flip Register 26 */
#define MC58_RDBFL27	(*( MC0_RDBFL0_type *) 0xf0064ad6u)	/* Read Data and Bit Flip Register 27 */
#define MC58_RDBFL28	(*( MC0_RDBFL0_type *) 0xf0064ad8u)	/* Read Data and Bit Flip Register 28 */
#define MC58_RDBFL29	(*( MC0_RDBFL0_type *) 0xf0064adau)	/* Read Data and Bit Flip Register 29 */
#define MC58_RDBFL3	(*( MC0_RDBFL0_type *) 0xf0064aa6u)	/* Read Data and Bit Flip Register 3 */
#define MC58_RDBFL30	(*( MC0_RDBFL0_type *) 0xf0064adcu)	/* Read Data and Bit Flip Register 30 */
#define MC58_RDBFL31	(*( MC0_RDBFL0_type *) 0xf0064adeu)	/* Read Data and Bit Flip Register 31 */
#define MC58_RDBFL32	(*( MC0_RDBFL0_type *) 0xf0064ae0u)	/* Read Data and Bit Flip Register 32 */
#define MC58_RDBFL33	(*( MC0_RDBFL0_type *) 0xf0064ae2u)	/* Read Data and Bit Flip Register 33 */
#define MC58_RDBFL34	(*( MC0_RDBFL0_type *) 0xf0064ae4u)	/* Read Data and Bit Flip Register 34 */
#define MC58_RDBFL35	(*( MC0_RDBFL0_type *) 0xf0064ae6u)	/* Read Data and Bit Flip Register 35 */
#define MC58_RDBFL36	(*( MC0_RDBFL0_type *) 0xf0064ae8u)	/* Read Data and Bit Flip Register 36 */
#define MC58_RDBFL37	(*( MC0_RDBFL0_type *) 0xf0064aeau)	/* Read Data and Bit Flip Register 37 */
#define MC58_RDBFL38	(*( MC0_RDBFL0_type *) 0xf0064aecu)	/* Read Data and Bit Flip Register 38 */
#define MC58_RDBFL39	(*( MC0_RDBFL0_type *) 0xf0064aeeu)	/* Read Data and Bit Flip Register 39 */
#define MC58_RDBFL4	(*( MC0_RDBFL0_type *) 0xf0064aa8u)	/* Read Data and Bit Flip Register 4 */
#define MC58_RDBFL5	(*( MC0_RDBFL0_type *) 0xf0064aaau)	/* Read Data and Bit Flip Register 5 */
#define MC58_RDBFL6	(*( MC0_RDBFL0_type *) 0xf0064aacu)	/* Read Data and Bit Flip Register 6 */
#define MC58_RDBFL7	(*( MC0_RDBFL0_type *) 0xf0064aaeu)	/* Read Data and Bit Flip Register 7 */
#define MC58_RDBFL8	(*( MC0_RDBFL0_type *) 0xf0064ab0u)	/* Read Data and Bit Flip Register 8 */
#define MC58_RDBFL9	(*( MC0_RDBFL0_type *) 0xf0064ab2u)	/* Read Data and Bit Flip Register 9 */
#define MC59_RDBFL0	(*( MC0_RDBFL0_type *) 0xf0064ba0u)	/* Read Data and Bit Flip Register 0 */
#define MC59_RDBFL1	(*( MC0_RDBFL0_type *) 0xf0064ba2u)	/* Read Data and Bit Flip Register 1 */
#define MC59_RDBFL10	(*( MC0_RDBFL0_type *) 0xf0064bb4u)	/* Read Data and Bit Flip Register 10 */
#define MC59_RDBFL11	(*( MC0_RDBFL0_type *) 0xf0064bb6u)	/* Read Data and Bit Flip Register 11 */
#define MC59_RDBFL12	(*( MC0_RDBFL0_type *) 0xf0064bb8u)	/* Read Data and Bit Flip Register 12 */
#define MC59_RDBFL13	(*( MC0_RDBFL0_type *) 0xf0064bbau)	/* Read Data and Bit Flip Register 13 */
#define MC59_RDBFL14	(*( MC0_RDBFL0_type *) 0xf0064bbcu)	/* Read Data and Bit Flip Register 14 */
#define MC59_RDBFL15	(*( MC0_RDBFL0_type *) 0xf0064bbeu)	/* Read Data and Bit Flip Register 15 */
#define MC59_RDBFL16	(*( MC0_RDBFL0_type *) 0xf0064bc0u)	/* Read Data and Bit Flip Register 16 */
#define MC59_RDBFL17	(*( MC0_RDBFL0_type *) 0xf0064bc2u)	/* Read Data and Bit Flip Register 17 */
#define MC59_RDBFL18	(*( MC0_RDBFL0_type *) 0xf0064bc4u)	/* Read Data and Bit Flip Register 18 */
#define MC59_RDBFL19	(*( MC0_RDBFL0_type *) 0xf0064bc6u)	/* Read Data and Bit Flip Register 19 */
#define MC59_RDBFL2	(*( MC0_RDBFL0_type *) 0xf0064ba4u)	/* Read Data and Bit Flip Register 2 */
#define MC59_RDBFL20	(*( MC0_RDBFL0_type *) 0xf0064bc8u)	/* Read Data and Bit Flip Register 20 */
#define MC59_RDBFL21	(*( MC0_RDBFL0_type *) 0xf0064bcau)	/* Read Data and Bit Flip Register 21 */
#define MC59_RDBFL22	(*( MC0_RDBFL0_type *) 0xf0064bccu)	/* Read Data and Bit Flip Register 22 */
#define MC59_RDBFL23	(*( MC0_RDBFL0_type *) 0xf0064bceu)	/* Read Data and Bit Flip Register 23 */
#define MC59_RDBFL24	(*( MC0_RDBFL0_type *) 0xf0064bd0u)	/* Read Data and Bit Flip Register 24 */
#define MC59_RDBFL25	(*( MC0_RDBFL0_type *) 0xf0064bd2u)	/* Read Data and Bit Flip Register 25 */
#define MC59_RDBFL26	(*( MC0_RDBFL0_type *) 0xf0064bd4u)	/* Read Data and Bit Flip Register 26 */
#define MC59_RDBFL27	(*( MC0_RDBFL0_type *) 0xf0064bd6u)	/* Read Data and Bit Flip Register 27 */
#define MC59_RDBFL28	(*( MC0_RDBFL0_type *) 0xf0064bd8u)	/* Read Data and Bit Flip Register 28 */
#define MC59_RDBFL29	(*( MC0_RDBFL0_type *) 0xf0064bdau)	/* Read Data and Bit Flip Register 29 */
#define MC59_RDBFL3	(*( MC0_RDBFL0_type *) 0xf0064ba6u)	/* Read Data and Bit Flip Register 3 */
#define MC59_RDBFL30	(*( MC0_RDBFL0_type *) 0xf0064bdcu)	/* Read Data and Bit Flip Register 30 */
#define MC59_RDBFL31	(*( MC0_RDBFL0_type *) 0xf0064bdeu)	/* Read Data and Bit Flip Register 31 */
#define MC59_RDBFL32	(*( MC0_RDBFL0_type *) 0xf0064be0u)	/* Read Data and Bit Flip Register 32 */
#define MC59_RDBFL33	(*( MC0_RDBFL0_type *) 0xf0064be2u)	/* Read Data and Bit Flip Register 33 */
#define MC59_RDBFL34	(*( MC0_RDBFL0_type *) 0xf0064be4u)	/* Read Data and Bit Flip Register 34 */
#define MC59_RDBFL35	(*( MC0_RDBFL0_type *) 0xf0064be6u)	/* Read Data and Bit Flip Register 35 */
#define MC59_RDBFL36	(*( MC0_RDBFL0_type *) 0xf0064be8u)	/* Read Data and Bit Flip Register 36 */
#define MC59_RDBFL37	(*( MC0_RDBFL0_type *) 0xf0064beau)	/* Read Data and Bit Flip Register 37 */
#define MC59_RDBFL38	(*( MC0_RDBFL0_type *) 0xf0064becu)	/* Read Data and Bit Flip Register 38 */
#define MC59_RDBFL39	(*( MC0_RDBFL0_type *) 0xf0064beeu)	/* Read Data and Bit Flip Register 39 */
#define MC59_RDBFL4	(*( MC0_RDBFL0_type *) 0xf0064ba8u)	/* Read Data and Bit Flip Register 4 */
#define MC59_RDBFL5	(*( MC0_RDBFL0_type *) 0xf0064baau)	/* Read Data and Bit Flip Register 5 */
#define MC59_RDBFL6	(*( MC0_RDBFL0_type *) 0xf0064bacu)	/* Read Data and Bit Flip Register 6 */
#define MC59_RDBFL7	(*( MC0_RDBFL0_type *) 0xf0064baeu)	/* Read Data and Bit Flip Register 7 */
#define MC59_RDBFL8	(*( MC0_RDBFL0_type *) 0xf0064bb0u)	/* Read Data and Bit Flip Register 8 */
#define MC59_RDBFL9	(*( MC0_RDBFL0_type *) 0xf0064bb2u)	/* Read Data and Bit Flip Register 9 */
#define MC5_RDBFL0	(*( MC0_RDBFL0_type *) 0xf00615a0u)	/* Read Data and Bit Flip Register 0 */
#define MC5_RDBFL1	(*( MC0_RDBFL0_type *) 0xf00615a2u)	/* Read Data and Bit Flip Register 1 */
#define MC5_RDBFL10	(*( MC0_RDBFL0_type *) 0xf00615b4u)	/* Read Data and Bit Flip Register 10 */
#define MC5_RDBFL11	(*( MC0_RDBFL0_type *) 0xf00615b6u)	/* Read Data and Bit Flip Register 11 */
#define MC5_RDBFL12	(*( MC0_RDBFL0_type *) 0xf00615b8u)	/* Read Data and Bit Flip Register 12 */
#define MC5_RDBFL13	(*( MC0_RDBFL0_type *) 0xf00615bau)	/* Read Data and Bit Flip Register 13 */
#define MC5_RDBFL14	(*( MC0_RDBFL0_type *) 0xf00615bcu)	/* Read Data and Bit Flip Register 14 */
#define MC5_RDBFL15	(*( MC0_RDBFL0_type *) 0xf00615beu)	/* Read Data and Bit Flip Register 15 */
#define MC5_RDBFL16	(*( MC0_RDBFL0_type *) 0xf00615c0u)	/* Read Data and Bit Flip Register 16 */
#define MC5_RDBFL17	(*( MC0_RDBFL0_type *) 0xf00615c2u)	/* Read Data and Bit Flip Register 17 */
#define MC5_RDBFL18	(*( MC0_RDBFL0_type *) 0xf00615c4u)	/* Read Data and Bit Flip Register 18 */
#define MC5_RDBFL19	(*( MC0_RDBFL0_type *) 0xf00615c6u)	/* Read Data and Bit Flip Register 19 */
#define MC5_RDBFL2	(*( MC0_RDBFL0_type *) 0xf00615a4u)	/* Read Data and Bit Flip Register 2 */
#define MC5_RDBFL20	(*( MC0_RDBFL0_type *) 0xf00615c8u)	/* Read Data and Bit Flip Register 20 */
#define MC5_RDBFL21	(*( MC0_RDBFL0_type *) 0xf00615cau)	/* Read Data and Bit Flip Register 21 */
#define MC5_RDBFL22	(*( MC0_RDBFL0_type *) 0xf00615ccu)	/* Read Data and Bit Flip Register 22 */
#define MC5_RDBFL23	(*( MC0_RDBFL0_type *) 0xf00615ceu)	/* Read Data and Bit Flip Register 23 */
#define MC5_RDBFL24	(*( MC0_RDBFL0_type *) 0xf00615d0u)	/* Read Data and Bit Flip Register 24 */
#define MC5_RDBFL25	(*( MC0_RDBFL0_type *) 0xf00615d2u)	/* Read Data and Bit Flip Register 25 */
#define MC5_RDBFL26	(*( MC0_RDBFL0_type *) 0xf00615d4u)	/* Read Data and Bit Flip Register 26 */
#define MC5_RDBFL27	(*( MC0_RDBFL0_type *) 0xf00615d6u)	/* Read Data and Bit Flip Register 27 */
#define MC5_RDBFL28	(*( MC0_RDBFL0_type *) 0xf00615d8u)	/* Read Data and Bit Flip Register 28 */
#define MC5_RDBFL29	(*( MC0_RDBFL0_type *) 0xf00615dau)	/* Read Data and Bit Flip Register 29 */
#define MC5_RDBFL3	(*( MC0_RDBFL0_type *) 0xf00615a6u)	/* Read Data and Bit Flip Register 3 */
#define MC5_RDBFL30	(*( MC0_RDBFL0_type *) 0xf00615dcu)	/* Read Data and Bit Flip Register 30 */
#define MC5_RDBFL31	(*( MC0_RDBFL0_type *) 0xf00615deu)	/* Read Data and Bit Flip Register 31 */
#define MC5_RDBFL32	(*( MC0_RDBFL0_type *) 0xf00615e0u)	/* Read Data and Bit Flip Register 32 */
#define MC5_RDBFL33	(*( MC0_RDBFL0_type *) 0xf00615e2u)	/* Read Data and Bit Flip Register 33 */
#define MC5_RDBFL34	(*( MC0_RDBFL0_type *) 0xf00615e4u)	/* Read Data and Bit Flip Register 34 */
#define MC5_RDBFL35	(*( MC0_RDBFL0_type *) 0xf00615e6u)	/* Read Data and Bit Flip Register 35 */
#define MC5_RDBFL36	(*( MC0_RDBFL0_type *) 0xf00615e8u)	/* Read Data and Bit Flip Register 36 */
#define MC5_RDBFL37	(*( MC0_RDBFL0_type *) 0xf00615eau)	/* Read Data and Bit Flip Register 37 */
#define MC5_RDBFL38	(*( MC0_RDBFL0_type *) 0xf00615ecu)	/* Read Data and Bit Flip Register 38 */
#define MC5_RDBFL39	(*( MC0_RDBFL0_type *) 0xf00615eeu)	/* Read Data and Bit Flip Register 39 */
#define MC5_RDBFL4	(*( MC0_RDBFL0_type *) 0xf00615a8u)	/* Read Data and Bit Flip Register 4 */
#define MC5_RDBFL5	(*( MC0_RDBFL0_type *) 0xf00615aau)	/* Read Data and Bit Flip Register 5 */
#define MC5_RDBFL6	(*( MC0_RDBFL0_type *) 0xf00615acu)	/* Read Data and Bit Flip Register 6 */
#define MC5_RDBFL7	(*( MC0_RDBFL0_type *) 0xf00615aeu)	/* Read Data and Bit Flip Register 7 */
#define MC5_RDBFL8	(*( MC0_RDBFL0_type *) 0xf00615b0u)	/* Read Data and Bit Flip Register 8 */
#define MC5_RDBFL9	(*( MC0_RDBFL0_type *) 0xf00615b2u)	/* Read Data and Bit Flip Register 9 */
#define MC60_RDBFL0	(*( MC0_RDBFL0_type *) 0xf0064ca0u)	/* Read Data and Bit Flip Register 0 */
#define MC60_RDBFL1	(*( MC0_RDBFL0_type *) 0xf0064ca2u)	/* Read Data and Bit Flip Register 1 */
#define MC60_RDBFL10	(*( MC0_RDBFL0_type *) 0xf0064cb4u)	/* Read Data and Bit Flip Register 10 */
#define MC60_RDBFL11	(*( MC0_RDBFL0_type *) 0xf0064cb6u)	/* Read Data and Bit Flip Register 11 */
#define MC60_RDBFL12	(*( MC0_RDBFL0_type *) 0xf0064cb8u)	/* Read Data and Bit Flip Register 12 */
#define MC60_RDBFL13	(*( MC0_RDBFL0_type *) 0xf0064cbau)	/* Read Data and Bit Flip Register 13 */
#define MC60_RDBFL14	(*( MC0_RDBFL0_type *) 0xf0064cbcu)	/* Read Data and Bit Flip Register 14 */
#define MC60_RDBFL15	(*( MC0_RDBFL0_type *) 0xf0064cbeu)	/* Read Data and Bit Flip Register 15 */
#define MC60_RDBFL16	(*( MC0_RDBFL0_type *) 0xf0064cc0u)	/* Read Data and Bit Flip Register 16 */
#define MC60_RDBFL17	(*( MC0_RDBFL0_type *) 0xf0064cc2u)	/* Read Data and Bit Flip Register 17 */
#define MC60_RDBFL18	(*( MC0_RDBFL0_type *) 0xf0064cc4u)	/* Read Data and Bit Flip Register 18 */
#define MC60_RDBFL19	(*( MC0_RDBFL0_type *) 0xf0064cc6u)	/* Read Data and Bit Flip Register 19 */
#define MC60_RDBFL2	(*( MC0_RDBFL0_type *) 0xf0064ca4u)	/* Read Data and Bit Flip Register 2 */
#define MC60_RDBFL20	(*( MC0_RDBFL0_type *) 0xf0064cc8u)	/* Read Data and Bit Flip Register 20 */
#define MC60_RDBFL21	(*( MC0_RDBFL0_type *) 0xf0064ccau)	/* Read Data and Bit Flip Register 21 */
#define MC60_RDBFL22	(*( MC0_RDBFL0_type *) 0xf0064cccu)	/* Read Data and Bit Flip Register 22 */
#define MC60_RDBFL23	(*( MC0_RDBFL0_type *) 0xf0064cceu)	/* Read Data and Bit Flip Register 23 */
#define MC60_RDBFL24	(*( MC0_RDBFL0_type *) 0xf0064cd0u)	/* Read Data and Bit Flip Register 24 */
#define MC60_RDBFL25	(*( MC0_RDBFL0_type *) 0xf0064cd2u)	/* Read Data and Bit Flip Register 25 */
#define MC60_RDBFL26	(*( MC0_RDBFL0_type *) 0xf0064cd4u)	/* Read Data and Bit Flip Register 26 */
#define MC60_RDBFL27	(*( MC0_RDBFL0_type *) 0xf0064cd6u)	/* Read Data and Bit Flip Register 27 */
#define MC60_RDBFL28	(*( MC0_RDBFL0_type *) 0xf0064cd8u)	/* Read Data and Bit Flip Register 28 */
#define MC60_RDBFL29	(*( MC0_RDBFL0_type *) 0xf0064cdau)	/* Read Data and Bit Flip Register 29 */
#define MC60_RDBFL3	(*( MC0_RDBFL0_type *) 0xf0064ca6u)	/* Read Data and Bit Flip Register 3 */
#define MC60_RDBFL30	(*( MC0_RDBFL0_type *) 0xf0064cdcu)	/* Read Data and Bit Flip Register 30 */
#define MC60_RDBFL31	(*( MC0_RDBFL0_type *) 0xf0064cdeu)	/* Read Data and Bit Flip Register 31 */
#define MC60_RDBFL32	(*( MC0_RDBFL0_type *) 0xf0064ce0u)	/* Read Data and Bit Flip Register 32 */
#define MC60_RDBFL33	(*( MC0_RDBFL0_type *) 0xf0064ce2u)	/* Read Data and Bit Flip Register 33 */
#define MC60_RDBFL34	(*( MC0_RDBFL0_type *) 0xf0064ce4u)	/* Read Data and Bit Flip Register 34 */
#define MC60_RDBFL35	(*( MC0_RDBFL0_type *) 0xf0064ce6u)	/* Read Data and Bit Flip Register 35 */
#define MC60_RDBFL36	(*( MC0_RDBFL0_type *) 0xf0064ce8u)	/* Read Data and Bit Flip Register 36 */
#define MC60_RDBFL37	(*( MC0_RDBFL0_type *) 0xf0064ceau)	/* Read Data and Bit Flip Register 37 */
#define MC60_RDBFL38	(*( MC0_RDBFL0_type *) 0xf0064cecu)	/* Read Data and Bit Flip Register 38 */
#define MC60_RDBFL39	(*( MC0_RDBFL0_type *) 0xf0064ceeu)	/* Read Data and Bit Flip Register 39 */
#define MC60_RDBFL4	(*( MC0_RDBFL0_type *) 0xf0064ca8u)	/* Read Data and Bit Flip Register 4 */
#define MC60_RDBFL5	(*( MC0_RDBFL0_type *) 0xf0064caau)	/* Read Data and Bit Flip Register 5 */
#define MC60_RDBFL6	(*( MC0_RDBFL0_type *) 0xf0064cacu)	/* Read Data and Bit Flip Register 6 */
#define MC60_RDBFL7	(*( MC0_RDBFL0_type *) 0xf0064caeu)	/* Read Data and Bit Flip Register 7 */
#define MC60_RDBFL8	(*( MC0_RDBFL0_type *) 0xf0064cb0u)	/* Read Data and Bit Flip Register 8 */
#define MC60_RDBFL9	(*( MC0_RDBFL0_type *) 0xf0064cb2u)	/* Read Data and Bit Flip Register 9 */
#define MC61_RDBFL0	(*( MC0_RDBFL0_type *) 0xf0064da0u)	/* Read Data and Bit Flip Register 0 */
#define MC61_RDBFL1	(*( MC0_RDBFL0_type *) 0xf0064da2u)	/* Read Data and Bit Flip Register 1 */
#define MC61_RDBFL10	(*( MC0_RDBFL0_type *) 0xf0064db4u)	/* Read Data and Bit Flip Register 10 */
#define MC61_RDBFL11	(*( MC0_RDBFL0_type *) 0xf0064db6u)	/* Read Data and Bit Flip Register 11 */
#define MC61_RDBFL12	(*( MC0_RDBFL0_type *) 0xf0064db8u)	/* Read Data and Bit Flip Register 12 */
#define MC61_RDBFL13	(*( MC0_RDBFL0_type *) 0xf0064dbau)	/* Read Data and Bit Flip Register 13 */
#define MC61_RDBFL14	(*( MC0_RDBFL0_type *) 0xf0064dbcu)	/* Read Data and Bit Flip Register 14 */
#define MC61_RDBFL15	(*( MC0_RDBFL0_type *) 0xf0064dbeu)	/* Read Data and Bit Flip Register 15 */
#define MC61_RDBFL16	(*( MC0_RDBFL0_type *) 0xf0064dc0u)	/* Read Data and Bit Flip Register 16 */
#define MC61_RDBFL17	(*( MC0_RDBFL0_type *) 0xf0064dc2u)	/* Read Data and Bit Flip Register 17 */
#define MC61_RDBFL18	(*( MC0_RDBFL0_type *) 0xf0064dc4u)	/* Read Data and Bit Flip Register 18 */
#define MC61_RDBFL19	(*( MC0_RDBFL0_type *) 0xf0064dc6u)	/* Read Data and Bit Flip Register 19 */
#define MC61_RDBFL2	(*( MC0_RDBFL0_type *) 0xf0064da4u)	/* Read Data and Bit Flip Register 2 */
#define MC61_RDBFL20	(*( MC0_RDBFL0_type *) 0xf0064dc8u)	/* Read Data and Bit Flip Register 20 */
#define MC61_RDBFL21	(*( MC0_RDBFL0_type *) 0xf0064dcau)	/* Read Data and Bit Flip Register 21 */
#define MC61_RDBFL22	(*( MC0_RDBFL0_type *) 0xf0064dccu)	/* Read Data and Bit Flip Register 22 */
#define MC61_RDBFL23	(*( MC0_RDBFL0_type *) 0xf0064dceu)	/* Read Data and Bit Flip Register 23 */
#define MC61_RDBFL24	(*( MC0_RDBFL0_type *) 0xf0064dd0u)	/* Read Data and Bit Flip Register 24 */
#define MC61_RDBFL25	(*( MC0_RDBFL0_type *) 0xf0064dd2u)	/* Read Data and Bit Flip Register 25 */
#define MC61_RDBFL26	(*( MC0_RDBFL0_type *) 0xf0064dd4u)	/* Read Data and Bit Flip Register 26 */
#define MC61_RDBFL27	(*( MC0_RDBFL0_type *) 0xf0064dd6u)	/* Read Data and Bit Flip Register 27 */
#define MC61_RDBFL28	(*( MC0_RDBFL0_type *) 0xf0064dd8u)	/* Read Data and Bit Flip Register 28 */
#define MC61_RDBFL29	(*( MC0_RDBFL0_type *) 0xf0064ddau)	/* Read Data and Bit Flip Register 29 */
#define MC61_RDBFL3	(*( MC0_RDBFL0_type *) 0xf0064da6u)	/* Read Data and Bit Flip Register 3 */
#define MC61_RDBFL30	(*( MC0_RDBFL0_type *) 0xf0064ddcu)	/* Read Data and Bit Flip Register 30 */
#define MC61_RDBFL31	(*( MC0_RDBFL0_type *) 0xf0064ddeu)	/* Read Data and Bit Flip Register 31 */
#define MC61_RDBFL32	(*( MC0_RDBFL0_type *) 0xf0064de0u)	/* Read Data and Bit Flip Register 32 */
#define MC61_RDBFL33	(*( MC0_RDBFL0_type *) 0xf0064de2u)	/* Read Data and Bit Flip Register 33 */
#define MC61_RDBFL34	(*( MC0_RDBFL0_type *) 0xf0064de4u)	/* Read Data and Bit Flip Register 34 */
#define MC61_RDBFL35	(*( MC0_RDBFL0_type *) 0xf0064de6u)	/* Read Data and Bit Flip Register 35 */
#define MC61_RDBFL36	(*( MC0_RDBFL0_type *) 0xf0064de8u)	/* Read Data and Bit Flip Register 36 */
#define MC61_RDBFL37	(*( MC0_RDBFL0_type *) 0xf0064deau)	/* Read Data and Bit Flip Register 37 */
#define MC61_RDBFL38	(*( MC0_RDBFL0_type *) 0xf0064decu)	/* Read Data and Bit Flip Register 38 */
#define MC61_RDBFL39	(*( MC0_RDBFL0_type *) 0xf0064deeu)	/* Read Data and Bit Flip Register 39 */
#define MC61_RDBFL4	(*( MC0_RDBFL0_type *) 0xf0064da8u)	/* Read Data and Bit Flip Register 4 */
#define MC61_RDBFL5	(*( MC0_RDBFL0_type *) 0xf0064daau)	/* Read Data and Bit Flip Register 5 */
#define MC61_RDBFL6	(*( MC0_RDBFL0_type *) 0xf0064dacu)	/* Read Data and Bit Flip Register 6 */
#define MC61_RDBFL7	(*( MC0_RDBFL0_type *) 0xf0064daeu)	/* Read Data and Bit Flip Register 7 */
#define MC61_RDBFL8	(*( MC0_RDBFL0_type *) 0xf0064db0u)	/* Read Data and Bit Flip Register 8 */
#define MC61_RDBFL9	(*( MC0_RDBFL0_type *) 0xf0064db2u)	/* Read Data and Bit Flip Register 9 */
#define MC62_RDBFL0	(*( MC0_RDBFL0_type *) 0xf0064ea0u)	/* Read Data and Bit Flip Register 0 */
#define MC62_RDBFL1	(*( MC0_RDBFL0_type *) 0xf0064ea2u)	/* Read Data and Bit Flip Register 1 */
#define MC62_RDBFL10	(*( MC0_RDBFL0_type *) 0xf0064eb4u)	/* Read Data and Bit Flip Register 10 */
#define MC62_RDBFL11	(*( MC0_RDBFL0_type *) 0xf0064eb6u)	/* Read Data and Bit Flip Register 11 */
#define MC62_RDBFL12	(*( MC0_RDBFL0_type *) 0xf0064eb8u)	/* Read Data and Bit Flip Register 12 */
#define MC62_RDBFL13	(*( MC0_RDBFL0_type *) 0xf0064ebau)	/* Read Data and Bit Flip Register 13 */
#define MC62_RDBFL14	(*( MC0_RDBFL0_type *) 0xf0064ebcu)	/* Read Data and Bit Flip Register 14 */
#define MC62_RDBFL15	(*( MC0_RDBFL0_type *) 0xf0064ebeu)	/* Read Data and Bit Flip Register 15 */
#define MC62_RDBFL16	(*( MC0_RDBFL0_type *) 0xf0064ec0u)	/* Read Data and Bit Flip Register 16 */
#define MC62_RDBFL17	(*( MC0_RDBFL0_type *) 0xf0064ec2u)	/* Read Data and Bit Flip Register 17 */
#define MC62_RDBFL18	(*( MC0_RDBFL0_type *) 0xf0064ec4u)	/* Read Data and Bit Flip Register 18 */
#define MC62_RDBFL19	(*( MC0_RDBFL0_type *) 0xf0064ec6u)	/* Read Data and Bit Flip Register 19 */
#define MC62_RDBFL2	(*( MC0_RDBFL0_type *) 0xf0064ea4u)	/* Read Data and Bit Flip Register 2 */
#define MC62_RDBFL20	(*( MC0_RDBFL0_type *) 0xf0064ec8u)	/* Read Data and Bit Flip Register 20 */
#define MC62_RDBFL21	(*( MC0_RDBFL0_type *) 0xf0064ecau)	/* Read Data and Bit Flip Register 21 */
#define MC62_RDBFL22	(*( MC0_RDBFL0_type *) 0xf0064eccu)	/* Read Data and Bit Flip Register 22 */
#define MC62_RDBFL23	(*( MC0_RDBFL0_type *) 0xf0064eceu)	/* Read Data and Bit Flip Register 23 */
#define MC62_RDBFL24	(*( MC0_RDBFL0_type *) 0xf0064ed0u)	/* Read Data and Bit Flip Register 24 */
#define MC62_RDBFL25	(*( MC0_RDBFL0_type *) 0xf0064ed2u)	/* Read Data and Bit Flip Register 25 */
#define MC62_RDBFL26	(*( MC0_RDBFL0_type *) 0xf0064ed4u)	/* Read Data and Bit Flip Register 26 */
#define MC62_RDBFL27	(*( MC0_RDBFL0_type *) 0xf0064ed6u)	/* Read Data and Bit Flip Register 27 */
#define MC62_RDBFL28	(*( MC0_RDBFL0_type *) 0xf0064ed8u)	/* Read Data and Bit Flip Register 28 */
#define MC62_RDBFL29	(*( MC0_RDBFL0_type *) 0xf0064edau)	/* Read Data and Bit Flip Register 29 */
#define MC62_RDBFL3	(*( MC0_RDBFL0_type *) 0xf0064ea6u)	/* Read Data and Bit Flip Register 3 */
#define MC62_RDBFL30	(*( MC0_RDBFL0_type *) 0xf0064edcu)	/* Read Data and Bit Flip Register 30 */
#define MC62_RDBFL31	(*( MC0_RDBFL0_type *) 0xf0064edeu)	/* Read Data and Bit Flip Register 31 */
#define MC62_RDBFL32	(*( MC0_RDBFL0_type *) 0xf0064ee0u)	/* Read Data and Bit Flip Register 32 */
#define MC62_RDBFL33	(*( MC0_RDBFL0_type *) 0xf0064ee2u)	/* Read Data and Bit Flip Register 33 */
#define MC62_RDBFL34	(*( MC0_RDBFL0_type *) 0xf0064ee4u)	/* Read Data and Bit Flip Register 34 */
#define MC62_RDBFL35	(*( MC0_RDBFL0_type *) 0xf0064ee6u)	/* Read Data and Bit Flip Register 35 */
#define MC62_RDBFL36	(*( MC0_RDBFL0_type *) 0xf0064ee8u)	/* Read Data and Bit Flip Register 36 */
#define MC62_RDBFL37	(*( MC0_RDBFL0_type *) 0xf0064eeau)	/* Read Data and Bit Flip Register 37 */
#define MC62_RDBFL38	(*( MC0_RDBFL0_type *) 0xf0064eecu)	/* Read Data and Bit Flip Register 38 */
#define MC62_RDBFL39	(*( MC0_RDBFL0_type *) 0xf0064eeeu)	/* Read Data and Bit Flip Register 39 */
#define MC62_RDBFL4	(*( MC0_RDBFL0_type *) 0xf0064ea8u)	/* Read Data and Bit Flip Register 4 */
#define MC62_RDBFL5	(*( MC0_RDBFL0_type *) 0xf0064eaau)	/* Read Data and Bit Flip Register 5 */
#define MC62_RDBFL6	(*( MC0_RDBFL0_type *) 0xf0064eacu)	/* Read Data and Bit Flip Register 6 */
#define MC62_RDBFL7	(*( MC0_RDBFL0_type *) 0xf0064eaeu)	/* Read Data and Bit Flip Register 7 */
#define MC62_RDBFL8	(*( MC0_RDBFL0_type *) 0xf0064eb0u)	/* Read Data and Bit Flip Register 8 */
#define MC62_RDBFL9	(*( MC0_RDBFL0_type *) 0xf0064eb2u)	/* Read Data and Bit Flip Register 9 */
#define MC63_RDBFL0	(*( MC0_RDBFL0_type *) 0xf0064fa0u)	/* Read Data and Bit Flip Register 0 */
#define MC63_RDBFL1	(*( MC0_RDBFL0_type *) 0xf0064fa2u)	/* Read Data and Bit Flip Register 1 */
#define MC63_RDBFL10	(*( MC0_RDBFL0_type *) 0xf0064fb4u)	/* Read Data and Bit Flip Register 10 */
#define MC63_RDBFL11	(*( MC0_RDBFL0_type *) 0xf0064fb6u)	/* Read Data and Bit Flip Register 11 */
#define MC63_RDBFL12	(*( MC0_RDBFL0_type *) 0xf0064fb8u)	/* Read Data and Bit Flip Register 12 */
#define MC63_RDBFL13	(*( MC0_RDBFL0_type *) 0xf0064fbau)	/* Read Data and Bit Flip Register 13 */
#define MC63_RDBFL14	(*( MC0_RDBFL0_type *) 0xf0064fbcu)	/* Read Data and Bit Flip Register 14 */
#define MC63_RDBFL15	(*( MC0_RDBFL0_type *) 0xf0064fbeu)	/* Read Data and Bit Flip Register 15 */
#define MC63_RDBFL16	(*( MC0_RDBFL0_type *) 0xf0064fc0u)	/* Read Data and Bit Flip Register 16 */
#define MC63_RDBFL17	(*( MC0_RDBFL0_type *) 0xf0064fc2u)	/* Read Data and Bit Flip Register 17 */
#define MC63_RDBFL18	(*( MC0_RDBFL0_type *) 0xf0064fc4u)	/* Read Data and Bit Flip Register 18 */
#define MC63_RDBFL19	(*( MC0_RDBFL0_type *) 0xf0064fc6u)	/* Read Data and Bit Flip Register 19 */
#define MC63_RDBFL2	(*( MC0_RDBFL0_type *) 0xf0064fa4u)	/* Read Data and Bit Flip Register 2 */
#define MC63_RDBFL20	(*( MC0_RDBFL0_type *) 0xf0064fc8u)	/* Read Data and Bit Flip Register 20 */
#define MC63_RDBFL21	(*( MC0_RDBFL0_type *) 0xf0064fcau)	/* Read Data and Bit Flip Register 21 */
#define MC63_RDBFL22	(*( MC0_RDBFL0_type *) 0xf0064fccu)	/* Read Data and Bit Flip Register 22 */
#define MC63_RDBFL23	(*( MC0_RDBFL0_type *) 0xf0064fceu)	/* Read Data and Bit Flip Register 23 */
#define MC63_RDBFL24	(*( MC0_RDBFL0_type *) 0xf0064fd0u)	/* Read Data and Bit Flip Register 24 */
#define MC63_RDBFL25	(*( MC0_RDBFL0_type *) 0xf0064fd2u)	/* Read Data and Bit Flip Register 25 */
#define MC63_RDBFL26	(*( MC0_RDBFL0_type *) 0xf0064fd4u)	/* Read Data and Bit Flip Register 26 */
#define MC63_RDBFL27	(*( MC0_RDBFL0_type *) 0xf0064fd6u)	/* Read Data and Bit Flip Register 27 */
#define MC63_RDBFL28	(*( MC0_RDBFL0_type *) 0xf0064fd8u)	/* Read Data and Bit Flip Register 28 */
#define MC63_RDBFL29	(*( MC0_RDBFL0_type *) 0xf0064fdau)	/* Read Data and Bit Flip Register 29 */
#define MC63_RDBFL3	(*( MC0_RDBFL0_type *) 0xf0064fa6u)	/* Read Data and Bit Flip Register 3 */
#define MC63_RDBFL30	(*( MC0_RDBFL0_type *) 0xf0064fdcu)	/* Read Data and Bit Flip Register 30 */
#define MC63_RDBFL31	(*( MC0_RDBFL0_type *) 0xf0064fdeu)	/* Read Data and Bit Flip Register 31 */
#define MC63_RDBFL32	(*( MC0_RDBFL0_type *) 0xf0064fe0u)	/* Read Data and Bit Flip Register 32 */
#define MC63_RDBFL33	(*( MC0_RDBFL0_type *) 0xf0064fe2u)	/* Read Data and Bit Flip Register 33 */
#define MC63_RDBFL34	(*( MC0_RDBFL0_type *) 0xf0064fe4u)	/* Read Data and Bit Flip Register 34 */
#define MC63_RDBFL35	(*( MC0_RDBFL0_type *) 0xf0064fe6u)	/* Read Data and Bit Flip Register 35 */
#define MC63_RDBFL36	(*( MC0_RDBFL0_type *) 0xf0064fe8u)	/* Read Data and Bit Flip Register 36 */
#define MC63_RDBFL37	(*( MC0_RDBFL0_type *) 0xf0064feau)	/* Read Data and Bit Flip Register 37 */
#define MC63_RDBFL38	(*( MC0_RDBFL0_type *) 0xf0064fecu)	/* Read Data and Bit Flip Register 38 */
#define MC63_RDBFL39	(*( MC0_RDBFL0_type *) 0xf0064feeu)	/* Read Data and Bit Flip Register 39 */
#define MC63_RDBFL4	(*( MC0_RDBFL0_type *) 0xf0064fa8u)	/* Read Data and Bit Flip Register 4 */
#define MC63_RDBFL5	(*( MC0_RDBFL0_type *) 0xf0064faau)	/* Read Data and Bit Flip Register 5 */
#define MC63_RDBFL6	(*( MC0_RDBFL0_type *) 0xf0064facu)	/* Read Data and Bit Flip Register 6 */
#define MC63_RDBFL7	(*( MC0_RDBFL0_type *) 0xf0064faeu)	/* Read Data and Bit Flip Register 7 */
#define MC63_RDBFL8	(*( MC0_RDBFL0_type *) 0xf0064fb0u)	/* Read Data and Bit Flip Register 8 */
#define MC63_RDBFL9	(*( MC0_RDBFL0_type *) 0xf0064fb2u)	/* Read Data and Bit Flip Register 9 */
#define MC64_RDBFL0	(*( MC0_RDBFL0_type *) 0xf00650a0u)	/* Read Data and Bit Flip Register 0 */
#define MC64_RDBFL1	(*( MC0_RDBFL0_type *) 0xf00650a2u)	/* Read Data and Bit Flip Register 1 */
#define MC64_RDBFL10	(*( MC0_RDBFL0_type *) 0xf00650b4u)	/* Read Data and Bit Flip Register 10 */
#define MC64_RDBFL11	(*( MC0_RDBFL0_type *) 0xf00650b6u)	/* Read Data and Bit Flip Register 11 */
#define MC64_RDBFL12	(*( MC0_RDBFL0_type *) 0xf00650b8u)	/* Read Data and Bit Flip Register 12 */
#define MC64_RDBFL13	(*( MC0_RDBFL0_type *) 0xf00650bau)	/* Read Data and Bit Flip Register 13 */
#define MC64_RDBFL14	(*( MC0_RDBFL0_type *) 0xf00650bcu)	/* Read Data and Bit Flip Register 14 */
#define MC64_RDBFL15	(*( MC0_RDBFL0_type *) 0xf00650beu)	/* Read Data and Bit Flip Register 15 */
#define MC64_RDBFL16	(*( MC0_RDBFL0_type *) 0xf00650c0u)	/* Read Data and Bit Flip Register 16 */
#define MC64_RDBFL17	(*( MC0_RDBFL0_type *) 0xf00650c2u)	/* Read Data and Bit Flip Register 17 */
#define MC64_RDBFL18	(*( MC0_RDBFL0_type *) 0xf00650c4u)	/* Read Data and Bit Flip Register 18 */
#define MC64_RDBFL19	(*( MC0_RDBFL0_type *) 0xf00650c6u)	/* Read Data and Bit Flip Register 19 */
#define MC64_RDBFL2	(*( MC0_RDBFL0_type *) 0xf00650a4u)	/* Read Data and Bit Flip Register 2 */
#define MC64_RDBFL20	(*( MC0_RDBFL0_type *) 0xf00650c8u)	/* Read Data and Bit Flip Register 20 */
#define MC64_RDBFL21	(*( MC0_RDBFL0_type *) 0xf00650cau)	/* Read Data and Bit Flip Register 21 */
#define MC64_RDBFL22	(*( MC0_RDBFL0_type *) 0xf00650ccu)	/* Read Data and Bit Flip Register 22 */
#define MC64_RDBFL23	(*( MC0_RDBFL0_type *) 0xf00650ceu)	/* Read Data and Bit Flip Register 23 */
#define MC64_RDBFL24	(*( MC0_RDBFL0_type *) 0xf00650d0u)	/* Read Data and Bit Flip Register 24 */
#define MC64_RDBFL25	(*( MC0_RDBFL0_type *) 0xf00650d2u)	/* Read Data and Bit Flip Register 25 */
#define MC64_RDBFL26	(*( MC0_RDBFL0_type *) 0xf00650d4u)	/* Read Data and Bit Flip Register 26 */
#define MC64_RDBFL27	(*( MC0_RDBFL0_type *) 0xf00650d6u)	/* Read Data and Bit Flip Register 27 */
#define MC64_RDBFL28	(*( MC0_RDBFL0_type *) 0xf00650d8u)	/* Read Data and Bit Flip Register 28 */
#define MC64_RDBFL29	(*( MC0_RDBFL0_type *) 0xf00650dau)	/* Read Data and Bit Flip Register 29 */
#define MC64_RDBFL3	(*( MC0_RDBFL0_type *) 0xf00650a6u)	/* Read Data and Bit Flip Register 3 */
#define MC64_RDBFL30	(*( MC0_RDBFL0_type *) 0xf00650dcu)	/* Read Data and Bit Flip Register 30 */
#define MC64_RDBFL31	(*( MC0_RDBFL0_type *) 0xf00650deu)	/* Read Data and Bit Flip Register 31 */
#define MC64_RDBFL32	(*( MC0_RDBFL0_type *) 0xf00650e0u)	/* Read Data and Bit Flip Register 32 */
#define MC64_RDBFL33	(*( MC0_RDBFL0_type *) 0xf00650e2u)	/* Read Data and Bit Flip Register 33 */
#define MC64_RDBFL34	(*( MC0_RDBFL0_type *) 0xf00650e4u)	/* Read Data and Bit Flip Register 34 */
#define MC64_RDBFL35	(*( MC0_RDBFL0_type *) 0xf00650e6u)	/* Read Data and Bit Flip Register 35 */
#define MC64_RDBFL36	(*( MC0_RDBFL0_type *) 0xf00650e8u)	/* Read Data and Bit Flip Register 36 */
#define MC64_RDBFL37	(*( MC0_RDBFL0_type *) 0xf00650eau)	/* Read Data and Bit Flip Register 37 */
#define MC64_RDBFL38	(*( MC0_RDBFL0_type *) 0xf00650ecu)	/* Read Data and Bit Flip Register 38 */
#define MC64_RDBFL39	(*( MC0_RDBFL0_type *) 0xf00650eeu)	/* Read Data and Bit Flip Register 39 */
#define MC64_RDBFL4	(*( MC0_RDBFL0_type *) 0xf00650a8u)	/* Read Data and Bit Flip Register 4 */
#define MC64_RDBFL5	(*( MC0_RDBFL0_type *) 0xf00650aau)	/* Read Data and Bit Flip Register 5 */
#define MC64_RDBFL6	(*( MC0_RDBFL0_type *) 0xf00650acu)	/* Read Data and Bit Flip Register 6 */
#define MC64_RDBFL7	(*( MC0_RDBFL0_type *) 0xf00650aeu)	/* Read Data and Bit Flip Register 7 */
#define MC64_RDBFL8	(*( MC0_RDBFL0_type *) 0xf00650b0u)	/* Read Data and Bit Flip Register 8 */
#define MC64_RDBFL9	(*( MC0_RDBFL0_type *) 0xf00650b2u)	/* Read Data and Bit Flip Register 9 */
#define MC65_RDBFL0	(*( MC0_RDBFL0_type *) 0xf00651a0u)	/* Read Data and Bit Flip Register 0 */
#define MC65_RDBFL1	(*( MC0_RDBFL0_type *) 0xf00651a2u)	/* Read Data and Bit Flip Register 1 */
#define MC65_RDBFL10	(*( MC0_RDBFL0_type *) 0xf00651b4u)	/* Read Data and Bit Flip Register 10 */
#define MC65_RDBFL11	(*( MC0_RDBFL0_type *) 0xf00651b6u)	/* Read Data and Bit Flip Register 11 */
#define MC65_RDBFL12	(*( MC0_RDBFL0_type *) 0xf00651b8u)	/* Read Data and Bit Flip Register 12 */
#define MC65_RDBFL13	(*( MC0_RDBFL0_type *) 0xf00651bau)	/* Read Data and Bit Flip Register 13 */
#define MC65_RDBFL14	(*( MC0_RDBFL0_type *) 0xf00651bcu)	/* Read Data and Bit Flip Register 14 */
#define MC65_RDBFL15	(*( MC0_RDBFL0_type *) 0xf00651beu)	/* Read Data and Bit Flip Register 15 */
#define MC65_RDBFL16	(*( MC0_RDBFL0_type *) 0xf00651c0u)	/* Read Data and Bit Flip Register 16 */
#define MC65_RDBFL17	(*( MC0_RDBFL0_type *) 0xf00651c2u)	/* Read Data and Bit Flip Register 17 */
#define MC65_RDBFL18	(*( MC0_RDBFL0_type *) 0xf00651c4u)	/* Read Data and Bit Flip Register 18 */
#define MC65_RDBFL19	(*( MC0_RDBFL0_type *) 0xf00651c6u)	/* Read Data and Bit Flip Register 19 */
#define MC65_RDBFL2	(*( MC0_RDBFL0_type *) 0xf00651a4u)	/* Read Data and Bit Flip Register 2 */
#define MC65_RDBFL20	(*( MC0_RDBFL0_type *) 0xf00651c8u)	/* Read Data and Bit Flip Register 20 */
#define MC65_RDBFL21	(*( MC0_RDBFL0_type *) 0xf00651cau)	/* Read Data and Bit Flip Register 21 */
#define MC65_RDBFL22	(*( MC0_RDBFL0_type *) 0xf00651ccu)	/* Read Data and Bit Flip Register 22 */
#define MC65_RDBFL23	(*( MC0_RDBFL0_type *) 0xf00651ceu)	/* Read Data and Bit Flip Register 23 */
#define MC65_RDBFL24	(*( MC0_RDBFL0_type *) 0xf00651d0u)	/* Read Data and Bit Flip Register 24 */
#define MC65_RDBFL25	(*( MC0_RDBFL0_type *) 0xf00651d2u)	/* Read Data and Bit Flip Register 25 */
#define MC65_RDBFL26	(*( MC0_RDBFL0_type *) 0xf00651d4u)	/* Read Data and Bit Flip Register 26 */
#define MC65_RDBFL27	(*( MC0_RDBFL0_type *) 0xf00651d6u)	/* Read Data and Bit Flip Register 27 */
#define MC65_RDBFL28	(*( MC0_RDBFL0_type *) 0xf00651d8u)	/* Read Data and Bit Flip Register 28 */
#define MC65_RDBFL29	(*( MC0_RDBFL0_type *) 0xf00651dau)	/* Read Data and Bit Flip Register 29 */
#define MC65_RDBFL3	(*( MC0_RDBFL0_type *) 0xf00651a6u)	/* Read Data and Bit Flip Register 3 */
#define MC65_RDBFL30	(*( MC0_RDBFL0_type *) 0xf00651dcu)	/* Read Data and Bit Flip Register 30 */
#define MC65_RDBFL31	(*( MC0_RDBFL0_type *) 0xf00651deu)	/* Read Data and Bit Flip Register 31 */
#define MC65_RDBFL32	(*( MC0_RDBFL0_type *) 0xf00651e0u)	/* Read Data and Bit Flip Register 32 */
#define MC65_RDBFL33	(*( MC0_RDBFL0_type *) 0xf00651e2u)	/* Read Data and Bit Flip Register 33 */
#define MC65_RDBFL34	(*( MC0_RDBFL0_type *) 0xf00651e4u)	/* Read Data and Bit Flip Register 34 */
#define MC65_RDBFL35	(*( MC0_RDBFL0_type *) 0xf00651e6u)	/* Read Data and Bit Flip Register 35 */
#define MC65_RDBFL36	(*( MC0_RDBFL0_type *) 0xf00651e8u)	/* Read Data and Bit Flip Register 36 */
#define MC65_RDBFL37	(*( MC0_RDBFL0_type *) 0xf00651eau)	/* Read Data and Bit Flip Register 37 */
#define MC65_RDBFL38	(*( MC0_RDBFL0_type *) 0xf00651ecu)	/* Read Data and Bit Flip Register 38 */
#define MC65_RDBFL39	(*( MC0_RDBFL0_type *) 0xf00651eeu)	/* Read Data and Bit Flip Register 39 */
#define MC65_RDBFL4	(*( MC0_RDBFL0_type *) 0xf00651a8u)	/* Read Data and Bit Flip Register 4 */
#define MC65_RDBFL5	(*( MC0_RDBFL0_type *) 0xf00651aau)	/* Read Data and Bit Flip Register 5 */
#define MC65_RDBFL6	(*( MC0_RDBFL0_type *) 0xf00651acu)	/* Read Data and Bit Flip Register 6 */
#define MC65_RDBFL7	(*( MC0_RDBFL0_type *) 0xf00651aeu)	/* Read Data and Bit Flip Register 7 */
#define MC65_RDBFL8	(*( MC0_RDBFL0_type *) 0xf00651b0u)	/* Read Data and Bit Flip Register 8 */
#define MC65_RDBFL9	(*( MC0_RDBFL0_type *) 0xf00651b2u)	/* Read Data and Bit Flip Register 9 */
#define MC66_RDBFL0	(*( MC0_RDBFL0_type *) 0xf00652a0u)	/* Read Data and Bit Flip Register 0 */
#define MC66_RDBFL1	(*( MC0_RDBFL0_type *) 0xf00652a2u)	/* Read Data and Bit Flip Register 1 */
#define MC66_RDBFL10	(*( MC0_RDBFL0_type *) 0xf00652b4u)	/* Read Data and Bit Flip Register 10 */
#define MC66_RDBFL11	(*( MC0_RDBFL0_type *) 0xf00652b6u)	/* Read Data and Bit Flip Register 11 */
#define MC66_RDBFL12	(*( MC0_RDBFL0_type *) 0xf00652b8u)	/* Read Data and Bit Flip Register 12 */
#define MC66_RDBFL13	(*( MC0_RDBFL0_type *) 0xf00652bau)	/* Read Data and Bit Flip Register 13 */
#define MC66_RDBFL14	(*( MC0_RDBFL0_type *) 0xf00652bcu)	/* Read Data and Bit Flip Register 14 */
#define MC66_RDBFL15	(*( MC0_RDBFL0_type *) 0xf00652beu)	/* Read Data and Bit Flip Register 15 */
#define MC66_RDBFL16	(*( MC0_RDBFL0_type *) 0xf00652c0u)	/* Read Data and Bit Flip Register 16 */
#define MC66_RDBFL17	(*( MC0_RDBFL0_type *) 0xf00652c2u)	/* Read Data and Bit Flip Register 17 */
#define MC66_RDBFL18	(*( MC0_RDBFL0_type *) 0xf00652c4u)	/* Read Data and Bit Flip Register 18 */
#define MC66_RDBFL19	(*( MC0_RDBFL0_type *) 0xf00652c6u)	/* Read Data and Bit Flip Register 19 */
#define MC66_RDBFL2	(*( MC0_RDBFL0_type *) 0xf00652a4u)	/* Read Data and Bit Flip Register 2 */
#define MC66_RDBFL20	(*( MC0_RDBFL0_type *) 0xf00652c8u)	/* Read Data and Bit Flip Register 20 */
#define MC66_RDBFL21	(*( MC0_RDBFL0_type *) 0xf00652cau)	/* Read Data and Bit Flip Register 21 */
#define MC66_RDBFL22	(*( MC0_RDBFL0_type *) 0xf00652ccu)	/* Read Data and Bit Flip Register 22 */
#define MC66_RDBFL23	(*( MC0_RDBFL0_type *) 0xf00652ceu)	/* Read Data and Bit Flip Register 23 */
#define MC66_RDBFL24	(*( MC0_RDBFL0_type *) 0xf00652d0u)	/* Read Data and Bit Flip Register 24 */
#define MC66_RDBFL25	(*( MC0_RDBFL0_type *) 0xf00652d2u)	/* Read Data and Bit Flip Register 25 */
#define MC66_RDBFL26	(*( MC0_RDBFL0_type *) 0xf00652d4u)	/* Read Data and Bit Flip Register 26 */
#define MC66_RDBFL27	(*( MC0_RDBFL0_type *) 0xf00652d6u)	/* Read Data and Bit Flip Register 27 */
#define MC66_RDBFL28	(*( MC0_RDBFL0_type *) 0xf00652d8u)	/* Read Data and Bit Flip Register 28 */
#define MC66_RDBFL29	(*( MC0_RDBFL0_type *) 0xf00652dau)	/* Read Data and Bit Flip Register 29 */
#define MC66_RDBFL3	(*( MC0_RDBFL0_type *) 0xf00652a6u)	/* Read Data and Bit Flip Register 3 */
#define MC66_RDBFL30	(*( MC0_RDBFL0_type *) 0xf00652dcu)	/* Read Data and Bit Flip Register 30 */
#define MC66_RDBFL31	(*( MC0_RDBFL0_type *) 0xf00652deu)	/* Read Data and Bit Flip Register 31 */
#define MC66_RDBFL32	(*( MC0_RDBFL0_type *) 0xf00652e0u)	/* Read Data and Bit Flip Register 32 */
#define MC66_RDBFL33	(*( MC0_RDBFL0_type *) 0xf00652e2u)	/* Read Data and Bit Flip Register 33 */
#define MC66_RDBFL34	(*( MC0_RDBFL0_type *) 0xf00652e4u)	/* Read Data and Bit Flip Register 34 */
#define MC66_RDBFL35	(*( MC0_RDBFL0_type *) 0xf00652e6u)	/* Read Data and Bit Flip Register 35 */
#define MC66_RDBFL36	(*( MC0_RDBFL0_type *) 0xf00652e8u)	/* Read Data and Bit Flip Register 36 */
#define MC66_RDBFL37	(*( MC0_RDBFL0_type *) 0xf00652eau)	/* Read Data and Bit Flip Register 37 */
#define MC66_RDBFL38	(*( MC0_RDBFL0_type *) 0xf00652ecu)	/* Read Data and Bit Flip Register 38 */
#define MC66_RDBFL39	(*( MC0_RDBFL0_type *) 0xf00652eeu)	/* Read Data and Bit Flip Register 39 */
#define MC66_RDBFL4	(*( MC0_RDBFL0_type *) 0xf00652a8u)	/* Read Data and Bit Flip Register 4 */
#define MC66_RDBFL5	(*( MC0_RDBFL0_type *) 0xf00652aau)	/* Read Data and Bit Flip Register 5 */
#define MC66_RDBFL6	(*( MC0_RDBFL0_type *) 0xf00652acu)	/* Read Data and Bit Flip Register 6 */
#define MC66_RDBFL7	(*( MC0_RDBFL0_type *) 0xf00652aeu)	/* Read Data and Bit Flip Register 7 */
#define MC66_RDBFL8	(*( MC0_RDBFL0_type *) 0xf00652b0u)	/* Read Data and Bit Flip Register 8 */
#define MC66_RDBFL9	(*( MC0_RDBFL0_type *) 0xf00652b2u)	/* Read Data and Bit Flip Register 9 */
#define MC67_RDBFL0	(*( MC0_RDBFL0_type *) 0xf00653a0u)	/* Read Data and Bit Flip Register 0 */
#define MC67_RDBFL1	(*( MC0_RDBFL0_type *) 0xf00653a2u)	/* Read Data and Bit Flip Register 1 */
#define MC67_RDBFL10	(*( MC0_RDBFL0_type *) 0xf00653b4u)	/* Read Data and Bit Flip Register 10 */
#define MC67_RDBFL11	(*( MC0_RDBFL0_type *) 0xf00653b6u)	/* Read Data and Bit Flip Register 11 */
#define MC67_RDBFL12	(*( MC0_RDBFL0_type *) 0xf00653b8u)	/* Read Data and Bit Flip Register 12 */
#define MC67_RDBFL13	(*( MC0_RDBFL0_type *) 0xf00653bau)	/* Read Data and Bit Flip Register 13 */
#define MC67_RDBFL14	(*( MC0_RDBFL0_type *) 0xf00653bcu)	/* Read Data and Bit Flip Register 14 */
#define MC67_RDBFL15	(*( MC0_RDBFL0_type *) 0xf00653beu)	/* Read Data and Bit Flip Register 15 */
#define MC67_RDBFL16	(*( MC0_RDBFL0_type *) 0xf00653c0u)	/* Read Data and Bit Flip Register 16 */
#define MC67_RDBFL17	(*( MC0_RDBFL0_type *) 0xf00653c2u)	/* Read Data and Bit Flip Register 17 */
#define MC67_RDBFL18	(*( MC0_RDBFL0_type *) 0xf00653c4u)	/* Read Data and Bit Flip Register 18 */
#define MC67_RDBFL19	(*( MC0_RDBFL0_type *) 0xf00653c6u)	/* Read Data and Bit Flip Register 19 */
#define MC67_RDBFL2	(*( MC0_RDBFL0_type *) 0xf00653a4u)	/* Read Data and Bit Flip Register 2 */
#define MC67_RDBFL20	(*( MC0_RDBFL0_type *) 0xf00653c8u)	/* Read Data and Bit Flip Register 20 */
#define MC67_RDBFL21	(*( MC0_RDBFL0_type *) 0xf00653cau)	/* Read Data and Bit Flip Register 21 */
#define MC67_RDBFL22	(*( MC0_RDBFL0_type *) 0xf00653ccu)	/* Read Data and Bit Flip Register 22 */
#define MC67_RDBFL23	(*( MC0_RDBFL0_type *) 0xf00653ceu)	/* Read Data and Bit Flip Register 23 */
#define MC67_RDBFL24	(*( MC0_RDBFL0_type *) 0xf00653d0u)	/* Read Data and Bit Flip Register 24 */
#define MC67_RDBFL25	(*( MC0_RDBFL0_type *) 0xf00653d2u)	/* Read Data and Bit Flip Register 25 */
#define MC67_RDBFL26	(*( MC0_RDBFL0_type *) 0xf00653d4u)	/* Read Data and Bit Flip Register 26 */
#define MC67_RDBFL27	(*( MC0_RDBFL0_type *) 0xf00653d6u)	/* Read Data and Bit Flip Register 27 */
#define MC67_RDBFL28	(*( MC0_RDBFL0_type *) 0xf00653d8u)	/* Read Data and Bit Flip Register 28 */
#define MC67_RDBFL29	(*( MC0_RDBFL0_type *) 0xf00653dau)	/* Read Data and Bit Flip Register 29 */
#define MC67_RDBFL3	(*( MC0_RDBFL0_type *) 0xf00653a6u)	/* Read Data and Bit Flip Register 3 */
#define MC67_RDBFL30	(*( MC0_RDBFL0_type *) 0xf00653dcu)	/* Read Data and Bit Flip Register 30 */
#define MC67_RDBFL31	(*( MC0_RDBFL0_type *) 0xf00653deu)	/* Read Data and Bit Flip Register 31 */
#define MC67_RDBFL32	(*( MC0_RDBFL0_type *) 0xf00653e0u)	/* Read Data and Bit Flip Register 32 */
#define MC67_RDBFL33	(*( MC0_RDBFL0_type *) 0xf00653e2u)	/* Read Data and Bit Flip Register 33 */
#define MC67_RDBFL34	(*( MC0_RDBFL0_type *) 0xf00653e4u)	/* Read Data and Bit Flip Register 34 */
#define MC67_RDBFL35	(*( MC0_RDBFL0_type *) 0xf00653e6u)	/* Read Data and Bit Flip Register 35 */
#define MC67_RDBFL36	(*( MC0_RDBFL0_type *) 0xf00653e8u)	/* Read Data and Bit Flip Register 36 */
#define MC67_RDBFL37	(*( MC0_RDBFL0_type *) 0xf00653eau)	/* Read Data and Bit Flip Register 37 */
#define MC67_RDBFL38	(*( MC0_RDBFL0_type *) 0xf00653ecu)	/* Read Data and Bit Flip Register 38 */
#define MC67_RDBFL39	(*( MC0_RDBFL0_type *) 0xf00653eeu)	/* Read Data and Bit Flip Register 39 */
#define MC67_RDBFL4	(*( MC0_RDBFL0_type *) 0xf00653a8u)	/* Read Data and Bit Flip Register 4 */
#define MC67_RDBFL5	(*( MC0_RDBFL0_type *) 0xf00653aau)	/* Read Data and Bit Flip Register 5 */
#define MC67_RDBFL6	(*( MC0_RDBFL0_type *) 0xf00653acu)	/* Read Data and Bit Flip Register 6 */
#define MC67_RDBFL7	(*( MC0_RDBFL0_type *) 0xf00653aeu)	/* Read Data and Bit Flip Register 7 */
#define MC67_RDBFL8	(*( MC0_RDBFL0_type *) 0xf00653b0u)	/* Read Data and Bit Flip Register 8 */
#define MC67_RDBFL9	(*( MC0_RDBFL0_type *) 0xf00653b2u)	/* Read Data and Bit Flip Register 9 */
#define MC68_RDBFL0	(*( MC0_RDBFL0_type *) 0xf00654a0u)	/* Read Data and Bit Flip Register 0 */
#define MC68_RDBFL1	(*( MC0_RDBFL0_type *) 0xf00654a2u)	/* Read Data and Bit Flip Register 1 */
#define MC68_RDBFL10	(*( MC0_RDBFL0_type *) 0xf00654b4u)	/* Read Data and Bit Flip Register 10 */
#define MC68_RDBFL11	(*( MC0_RDBFL0_type *) 0xf00654b6u)	/* Read Data and Bit Flip Register 11 */
#define MC68_RDBFL12	(*( MC0_RDBFL0_type *) 0xf00654b8u)	/* Read Data and Bit Flip Register 12 */
#define MC68_RDBFL13	(*( MC0_RDBFL0_type *) 0xf00654bau)	/* Read Data and Bit Flip Register 13 */
#define MC68_RDBFL14	(*( MC0_RDBFL0_type *) 0xf00654bcu)	/* Read Data and Bit Flip Register 14 */
#define MC68_RDBFL15	(*( MC0_RDBFL0_type *) 0xf00654beu)	/* Read Data and Bit Flip Register 15 */
#define MC68_RDBFL16	(*( MC0_RDBFL0_type *) 0xf00654c0u)	/* Read Data and Bit Flip Register 16 */
#define MC68_RDBFL17	(*( MC0_RDBFL0_type *) 0xf00654c2u)	/* Read Data and Bit Flip Register 17 */
#define MC68_RDBFL18	(*( MC0_RDBFL0_type *) 0xf00654c4u)	/* Read Data and Bit Flip Register 18 */
#define MC68_RDBFL19	(*( MC0_RDBFL0_type *) 0xf00654c6u)	/* Read Data and Bit Flip Register 19 */
#define MC68_RDBFL2	(*( MC0_RDBFL0_type *) 0xf00654a4u)	/* Read Data and Bit Flip Register 2 */
#define MC68_RDBFL20	(*( MC0_RDBFL0_type *) 0xf00654c8u)	/* Read Data and Bit Flip Register 20 */
#define MC68_RDBFL21	(*( MC0_RDBFL0_type *) 0xf00654cau)	/* Read Data and Bit Flip Register 21 */
#define MC68_RDBFL22	(*( MC0_RDBFL0_type *) 0xf00654ccu)	/* Read Data and Bit Flip Register 22 */
#define MC68_RDBFL23	(*( MC0_RDBFL0_type *) 0xf00654ceu)	/* Read Data and Bit Flip Register 23 */
#define MC68_RDBFL24	(*( MC0_RDBFL0_type *) 0xf00654d0u)	/* Read Data and Bit Flip Register 24 */
#define MC68_RDBFL25	(*( MC0_RDBFL0_type *) 0xf00654d2u)	/* Read Data and Bit Flip Register 25 */
#define MC68_RDBFL26	(*( MC0_RDBFL0_type *) 0xf00654d4u)	/* Read Data and Bit Flip Register 26 */
#define MC68_RDBFL27	(*( MC0_RDBFL0_type *) 0xf00654d6u)	/* Read Data and Bit Flip Register 27 */
#define MC68_RDBFL28	(*( MC0_RDBFL0_type *) 0xf00654d8u)	/* Read Data and Bit Flip Register 28 */
#define MC68_RDBFL29	(*( MC0_RDBFL0_type *) 0xf00654dau)	/* Read Data and Bit Flip Register 29 */
#define MC68_RDBFL3	(*( MC0_RDBFL0_type *) 0xf00654a6u)	/* Read Data and Bit Flip Register 3 */
#define MC68_RDBFL30	(*( MC0_RDBFL0_type *) 0xf00654dcu)	/* Read Data and Bit Flip Register 30 */
#define MC68_RDBFL31	(*( MC0_RDBFL0_type *) 0xf00654deu)	/* Read Data and Bit Flip Register 31 */
#define MC68_RDBFL32	(*( MC0_RDBFL0_type *) 0xf00654e0u)	/* Read Data and Bit Flip Register 32 */
#define MC68_RDBFL33	(*( MC0_RDBFL0_type *) 0xf00654e2u)	/* Read Data and Bit Flip Register 33 */
#define MC68_RDBFL34	(*( MC0_RDBFL0_type *) 0xf00654e4u)	/* Read Data and Bit Flip Register 34 */
#define MC68_RDBFL35	(*( MC0_RDBFL0_type *) 0xf00654e6u)	/* Read Data and Bit Flip Register 35 */
#define MC68_RDBFL36	(*( MC0_RDBFL0_type *) 0xf00654e8u)	/* Read Data and Bit Flip Register 36 */
#define MC68_RDBFL37	(*( MC0_RDBFL0_type *) 0xf00654eau)	/* Read Data and Bit Flip Register 37 */
#define MC68_RDBFL38	(*( MC0_RDBFL0_type *) 0xf00654ecu)	/* Read Data and Bit Flip Register 38 */
#define MC68_RDBFL39	(*( MC0_RDBFL0_type *) 0xf00654eeu)	/* Read Data and Bit Flip Register 39 */
#define MC68_RDBFL4	(*( MC0_RDBFL0_type *) 0xf00654a8u)	/* Read Data and Bit Flip Register 4 */
#define MC68_RDBFL5	(*( MC0_RDBFL0_type *) 0xf00654aau)	/* Read Data and Bit Flip Register 5 */
#define MC68_RDBFL6	(*( MC0_RDBFL0_type *) 0xf00654acu)	/* Read Data and Bit Flip Register 6 */
#define MC68_RDBFL7	(*( MC0_RDBFL0_type *) 0xf00654aeu)	/* Read Data and Bit Flip Register 7 */
#define MC68_RDBFL8	(*( MC0_RDBFL0_type *) 0xf00654b0u)	/* Read Data and Bit Flip Register 8 */
#define MC68_RDBFL9	(*( MC0_RDBFL0_type *) 0xf00654b2u)	/* Read Data and Bit Flip Register 9 */
#define MC69_RDBFL0	(*( MC0_RDBFL0_type *) 0xf00655a0u)	/* Read Data and Bit Flip Register 0 */
#define MC69_RDBFL1	(*( MC0_RDBFL0_type *) 0xf00655a2u)	/* Read Data and Bit Flip Register 1 */
#define MC69_RDBFL10	(*( MC0_RDBFL0_type *) 0xf00655b4u)	/* Read Data and Bit Flip Register 10 */
#define MC69_RDBFL11	(*( MC0_RDBFL0_type *) 0xf00655b6u)	/* Read Data and Bit Flip Register 11 */
#define MC69_RDBFL12	(*( MC0_RDBFL0_type *) 0xf00655b8u)	/* Read Data and Bit Flip Register 12 */
#define MC69_RDBFL13	(*( MC0_RDBFL0_type *) 0xf00655bau)	/* Read Data and Bit Flip Register 13 */
#define MC69_RDBFL14	(*( MC0_RDBFL0_type *) 0xf00655bcu)	/* Read Data and Bit Flip Register 14 */
#define MC69_RDBFL15	(*( MC0_RDBFL0_type *) 0xf00655beu)	/* Read Data and Bit Flip Register 15 */
#define MC69_RDBFL16	(*( MC0_RDBFL0_type *) 0xf00655c0u)	/* Read Data and Bit Flip Register 16 */
#define MC69_RDBFL17	(*( MC0_RDBFL0_type *) 0xf00655c2u)	/* Read Data and Bit Flip Register 17 */
#define MC69_RDBFL18	(*( MC0_RDBFL0_type *) 0xf00655c4u)	/* Read Data and Bit Flip Register 18 */
#define MC69_RDBFL19	(*( MC0_RDBFL0_type *) 0xf00655c6u)	/* Read Data and Bit Flip Register 19 */
#define MC69_RDBFL2	(*( MC0_RDBFL0_type *) 0xf00655a4u)	/* Read Data and Bit Flip Register 2 */
#define MC69_RDBFL20	(*( MC0_RDBFL0_type *) 0xf00655c8u)	/* Read Data and Bit Flip Register 20 */
#define MC69_RDBFL21	(*( MC0_RDBFL0_type *) 0xf00655cau)	/* Read Data and Bit Flip Register 21 */
#define MC69_RDBFL22	(*( MC0_RDBFL0_type *) 0xf00655ccu)	/* Read Data and Bit Flip Register 22 */
#define MC69_RDBFL23	(*( MC0_RDBFL0_type *) 0xf00655ceu)	/* Read Data and Bit Flip Register 23 */
#define MC69_RDBFL24	(*( MC0_RDBFL0_type *) 0xf00655d0u)	/* Read Data and Bit Flip Register 24 */
#define MC69_RDBFL25	(*( MC0_RDBFL0_type *) 0xf00655d2u)	/* Read Data and Bit Flip Register 25 */
#define MC69_RDBFL26	(*( MC0_RDBFL0_type *) 0xf00655d4u)	/* Read Data and Bit Flip Register 26 */
#define MC69_RDBFL27	(*( MC0_RDBFL0_type *) 0xf00655d6u)	/* Read Data and Bit Flip Register 27 */
#define MC69_RDBFL28	(*( MC0_RDBFL0_type *) 0xf00655d8u)	/* Read Data and Bit Flip Register 28 */
#define MC69_RDBFL29	(*( MC0_RDBFL0_type *) 0xf00655dau)	/* Read Data and Bit Flip Register 29 */
#define MC69_RDBFL3	(*( MC0_RDBFL0_type *) 0xf00655a6u)	/* Read Data and Bit Flip Register 3 */
#define MC69_RDBFL30	(*( MC0_RDBFL0_type *) 0xf00655dcu)	/* Read Data and Bit Flip Register 30 */
#define MC69_RDBFL31	(*( MC0_RDBFL0_type *) 0xf00655deu)	/* Read Data and Bit Flip Register 31 */
#define MC69_RDBFL32	(*( MC0_RDBFL0_type *) 0xf00655e0u)	/* Read Data and Bit Flip Register 32 */
#define MC69_RDBFL33	(*( MC0_RDBFL0_type *) 0xf00655e2u)	/* Read Data and Bit Flip Register 33 */
#define MC69_RDBFL34	(*( MC0_RDBFL0_type *) 0xf00655e4u)	/* Read Data and Bit Flip Register 34 */
#define MC69_RDBFL35	(*( MC0_RDBFL0_type *) 0xf00655e6u)	/* Read Data and Bit Flip Register 35 */
#define MC69_RDBFL36	(*( MC0_RDBFL0_type *) 0xf00655e8u)	/* Read Data and Bit Flip Register 36 */
#define MC69_RDBFL37	(*( MC0_RDBFL0_type *) 0xf00655eau)	/* Read Data and Bit Flip Register 37 */
#define MC69_RDBFL38	(*( MC0_RDBFL0_type *) 0xf00655ecu)	/* Read Data and Bit Flip Register 38 */
#define MC69_RDBFL39	(*( MC0_RDBFL0_type *) 0xf00655eeu)	/* Read Data and Bit Flip Register 39 */
#define MC69_RDBFL4	(*( MC0_RDBFL0_type *) 0xf00655a8u)	/* Read Data and Bit Flip Register 4 */
#define MC69_RDBFL5	(*( MC0_RDBFL0_type *) 0xf00655aau)	/* Read Data and Bit Flip Register 5 */
#define MC69_RDBFL6	(*( MC0_RDBFL0_type *) 0xf00655acu)	/* Read Data and Bit Flip Register 6 */
#define MC69_RDBFL7	(*( MC0_RDBFL0_type *) 0xf00655aeu)	/* Read Data and Bit Flip Register 7 */
#define MC69_RDBFL8	(*( MC0_RDBFL0_type *) 0xf00655b0u)	/* Read Data and Bit Flip Register 8 */
#define MC69_RDBFL9	(*( MC0_RDBFL0_type *) 0xf00655b2u)	/* Read Data and Bit Flip Register 9 */
#define MC6_RDBFL0	(*( MC0_RDBFL0_type *) 0xf00616a0u)	/* Read Data and Bit Flip Register 0 */
#define MC6_RDBFL1	(*( MC0_RDBFL0_type *) 0xf00616a2u)	/* Read Data and Bit Flip Register 1 */
#define MC6_RDBFL10	(*( MC0_RDBFL0_type *) 0xf00616b4u)	/* Read Data and Bit Flip Register 10 */
#define MC6_RDBFL11	(*( MC0_RDBFL0_type *) 0xf00616b6u)	/* Read Data and Bit Flip Register 11 */
#define MC6_RDBFL12	(*( MC0_RDBFL0_type *) 0xf00616b8u)	/* Read Data and Bit Flip Register 12 */
#define MC6_RDBFL13	(*( MC0_RDBFL0_type *) 0xf00616bau)	/* Read Data and Bit Flip Register 13 */
#define MC6_RDBFL14	(*( MC0_RDBFL0_type *) 0xf00616bcu)	/* Read Data and Bit Flip Register 14 */
#define MC6_RDBFL15	(*( MC0_RDBFL0_type *) 0xf00616beu)	/* Read Data and Bit Flip Register 15 */
#define MC6_RDBFL16	(*( MC0_RDBFL0_type *) 0xf00616c0u)	/* Read Data and Bit Flip Register 16 */
#define MC6_RDBFL17	(*( MC0_RDBFL0_type *) 0xf00616c2u)	/* Read Data and Bit Flip Register 17 */
#define MC6_RDBFL18	(*( MC0_RDBFL0_type *) 0xf00616c4u)	/* Read Data and Bit Flip Register 18 */
#define MC6_RDBFL19	(*( MC0_RDBFL0_type *) 0xf00616c6u)	/* Read Data and Bit Flip Register 19 */
#define MC6_RDBFL2	(*( MC0_RDBFL0_type *) 0xf00616a4u)	/* Read Data and Bit Flip Register 2 */
#define MC6_RDBFL20	(*( MC0_RDBFL0_type *) 0xf00616c8u)	/* Read Data and Bit Flip Register 20 */
#define MC6_RDBFL21	(*( MC0_RDBFL0_type *) 0xf00616cau)	/* Read Data and Bit Flip Register 21 */
#define MC6_RDBFL22	(*( MC0_RDBFL0_type *) 0xf00616ccu)	/* Read Data and Bit Flip Register 22 */
#define MC6_RDBFL23	(*( MC0_RDBFL0_type *) 0xf00616ceu)	/* Read Data and Bit Flip Register 23 */
#define MC6_RDBFL24	(*( MC0_RDBFL0_type *) 0xf00616d0u)	/* Read Data and Bit Flip Register 24 */
#define MC6_RDBFL25	(*( MC0_RDBFL0_type *) 0xf00616d2u)	/* Read Data and Bit Flip Register 25 */
#define MC6_RDBFL26	(*( MC0_RDBFL0_type *) 0xf00616d4u)	/* Read Data and Bit Flip Register 26 */
#define MC6_RDBFL27	(*( MC0_RDBFL0_type *) 0xf00616d6u)	/* Read Data and Bit Flip Register 27 */
#define MC6_RDBFL28	(*( MC0_RDBFL0_type *) 0xf00616d8u)	/* Read Data and Bit Flip Register 28 */
#define MC6_RDBFL29	(*( MC0_RDBFL0_type *) 0xf00616dau)	/* Read Data and Bit Flip Register 29 */
#define MC6_RDBFL3	(*( MC0_RDBFL0_type *) 0xf00616a6u)	/* Read Data and Bit Flip Register 3 */
#define MC6_RDBFL30	(*( MC0_RDBFL0_type *) 0xf00616dcu)	/* Read Data and Bit Flip Register 30 */
#define MC6_RDBFL31	(*( MC0_RDBFL0_type *) 0xf00616deu)	/* Read Data and Bit Flip Register 31 */
#define MC6_RDBFL32	(*( MC0_RDBFL0_type *) 0xf00616e0u)	/* Read Data and Bit Flip Register 32 */
#define MC6_RDBFL33	(*( MC0_RDBFL0_type *) 0xf00616e2u)	/* Read Data and Bit Flip Register 33 */
#define MC6_RDBFL34	(*( MC0_RDBFL0_type *) 0xf00616e4u)	/* Read Data and Bit Flip Register 34 */
#define MC6_RDBFL35	(*( MC0_RDBFL0_type *) 0xf00616e6u)	/* Read Data and Bit Flip Register 35 */
#define MC6_RDBFL36	(*( MC0_RDBFL0_type *) 0xf00616e8u)	/* Read Data and Bit Flip Register 36 */
#define MC6_RDBFL37	(*( MC0_RDBFL0_type *) 0xf00616eau)	/* Read Data and Bit Flip Register 37 */
#define MC6_RDBFL38	(*( MC0_RDBFL0_type *) 0xf00616ecu)	/* Read Data and Bit Flip Register 38 */
#define MC6_RDBFL39	(*( MC0_RDBFL0_type *) 0xf00616eeu)	/* Read Data and Bit Flip Register 39 */
#define MC6_RDBFL4	(*( MC0_RDBFL0_type *) 0xf00616a8u)	/* Read Data and Bit Flip Register 4 */
#define MC6_RDBFL5	(*( MC0_RDBFL0_type *) 0xf00616aau)	/* Read Data and Bit Flip Register 5 */
#define MC6_RDBFL6	(*( MC0_RDBFL0_type *) 0xf00616acu)	/* Read Data and Bit Flip Register 6 */
#define MC6_RDBFL7	(*( MC0_RDBFL0_type *) 0xf00616aeu)	/* Read Data and Bit Flip Register 7 */
#define MC6_RDBFL8	(*( MC0_RDBFL0_type *) 0xf00616b0u)	/* Read Data and Bit Flip Register 8 */
#define MC6_RDBFL9	(*( MC0_RDBFL0_type *) 0xf00616b2u)	/* Read Data and Bit Flip Register 9 */
#define MC70_RDBFL0	(*( MC0_RDBFL0_type *) 0xf00656a0u)	/* Read Data and Bit Flip Register 0 */
#define MC70_RDBFL1	(*( MC0_RDBFL0_type *) 0xf00656a2u)	/* Read Data and Bit Flip Register 1 */
#define MC70_RDBFL10	(*( MC0_RDBFL0_type *) 0xf00656b4u)	/* Read Data and Bit Flip Register 10 */
#define MC70_RDBFL11	(*( MC0_RDBFL0_type *) 0xf00656b6u)	/* Read Data and Bit Flip Register 11 */
#define MC70_RDBFL12	(*( MC0_RDBFL0_type *) 0xf00656b8u)	/* Read Data and Bit Flip Register 12 */
#define MC70_RDBFL13	(*( MC0_RDBFL0_type *) 0xf00656bau)	/* Read Data and Bit Flip Register 13 */
#define MC70_RDBFL14	(*( MC0_RDBFL0_type *) 0xf00656bcu)	/* Read Data and Bit Flip Register 14 */
#define MC70_RDBFL15	(*( MC0_RDBFL0_type *) 0xf00656beu)	/* Read Data and Bit Flip Register 15 */
#define MC70_RDBFL16	(*( MC0_RDBFL0_type *) 0xf00656c0u)	/* Read Data and Bit Flip Register 16 */
#define MC70_RDBFL17	(*( MC0_RDBFL0_type *) 0xf00656c2u)	/* Read Data and Bit Flip Register 17 */
#define MC70_RDBFL18	(*( MC0_RDBFL0_type *) 0xf00656c4u)	/* Read Data and Bit Flip Register 18 */
#define MC70_RDBFL19	(*( MC0_RDBFL0_type *) 0xf00656c6u)	/* Read Data and Bit Flip Register 19 */
#define MC70_RDBFL2	(*( MC0_RDBFL0_type *) 0xf00656a4u)	/* Read Data and Bit Flip Register 2 */
#define MC70_RDBFL20	(*( MC0_RDBFL0_type *) 0xf00656c8u)	/* Read Data and Bit Flip Register 20 */
#define MC70_RDBFL21	(*( MC0_RDBFL0_type *) 0xf00656cau)	/* Read Data and Bit Flip Register 21 */
#define MC70_RDBFL22	(*( MC0_RDBFL0_type *) 0xf00656ccu)	/* Read Data and Bit Flip Register 22 */
#define MC70_RDBFL23	(*( MC0_RDBFL0_type *) 0xf00656ceu)	/* Read Data and Bit Flip Register 23 */
#define MC70_RDBFL24	(*( MC0_RDBFL0_type *) 0xf00656d0u)	/* Read Data and Bit Flip Register 24 */
#define MC70_RDBFL25	(*( MC0_RDBFL0_type *) 0xf00656d2u)	/* Read Data and Bit Flip Register 25 */
#define MC70_RDBFL26	(*( MC0_RDBFL0_type *) 0xf00656d4u)	/* Read Data and Bit Flip Register 26 */
#define MC70_RDBFL27	(*( MC0_RDBFL0_type *) 0xf00656d6u)	/* Read Data and Bit Flip Register 27 */
#define MC70_RDBFL28	(*( MC0_RDBFL0_type *) 0xf00656d8u)	/* Read Data and Bit Flip Register 28 */
#define MC70_RDBFL29	(*( MC0_RDBFL0_type *) 0xf00656dau)	/* Read Data and Bit Flip Register 29 */
#define MC70_RDBFL3	(*( MC0_RDBFL0_type *) 0xf00656a6u)	/* Read Data and Bit Flip Register 3 */
#define MC70_RDBFL30	(*( MC0_RDBFL0_type *) 0xf00656dcu)	/* Read Data and Bit Flip Register 30 */
#define MC70_RDBFL31	(*( MC0_RDBFL0_type *) 0xf00656deu)	/* Read Data and Bit Flip Register 31 */
#define MC70_RDBFL32	(*( MC0_RDBFL0_type *) 0xf00656e0u)	/* Read Data and Bit Flip Register 32 */
#define MC70_RDBFL33	(*( MC0_RDBFL0_type *) 0xf00656e2u)	/* Read Data and Bit Flip Register 33 */
#define MC70_RDBFL34	(*( MC0_RDBFL0_type *) 0xf00656e4u)	/* Read Data and Bit Flip Register 34 */
#define MC70_RDBFL35	(*( MC0_RDBFL0_type *) 0xf00656e6u)	/* Read Data and Bit Flip Register 35 */
#define MC70_RDBFL36	(*( MC0_RDBFL0_type *) 0xf00656e8u)	/* Read Data and Bit Flip Register 36 */
#define MC70_RDBFL37	(*( MC0_RDBFL0_type *) 0xf00656eau)	/* Read Data and Bit Flip Register 37 */
#define MC70_RDBFL38	(*( MC0_RDBFL0_type *) 0xf00656ecu)	/* Read Data and Bit Flip Register 38 */
#define MC70_RDBFL39	(*( MC0_RDBFL0_type *) 0xf00656eeu)	/* Read Data and Bit Flip Register 39 */
#define MC70_RDBFL4	(*( MC0_RDBFL0_type *) 0xf00656a8u)	/* Read Data and Bit Flip Register 4 */
#define MC70_RDBFL5	(*( MC0_RDBFL0_type *) 0xf00656aau)	/* Read Data and Bit Flip Register 5 */
#define MC70_RDBFL6	(*( MC0_RDBFL0_type *) 0xf00656acu)	/* Read Data and Bit Flip Register 6 */
#define MC70_RDBFL7	(*( MC0_RDBFL0_type *) 0xf00656aeu)	/* Read Data and Bit Flip Register 7 */
#define MC70_RDBFL8	(*( MC0_RDBFL0_type *) 0xf00656b0u)	/* Read Data and Bit Flip Register 8 */
#define MC70_RDBFL9	(*( MC0_RDBFL0_type *) 0xf00656b2u)	/* Read Data and Bit Flip Register 9 */
#define MC71_RDBFL0	(*( MC0_RDBFL0_type *) 0xf00657a0u)	/* Read Data and Bit Flip Register 0 */
#define MC71_RDBFL1	(*( MC0_RDBFL0_type *) 0xf00657a2u)	/* Read Data and Bit Flip Register 1 */
#define MC71_RDBFL10	(*( MC0_RDBFL0_type *) 0xf00657b4u)	/* Read Data and Bit Flip Register 10 */
#define MC71_RDBFL11	(*( MC0_RDBFL0_type *) 0xf00657b6u)	/* Read Data and Bit Flip Register 11 */
#define MC71_RDBFL12	(*( MC0_RDBFL0_type *) 0xf00657b8u)	/* Read Data and Bit Flip Register 12 */
#define MC71_RDBFL13	(*( MC0_RDBFL0_type *) 0xf00657bau)	/* Read Data and Bit Flip Register 13 */
#define MC71_RDBFL14	(*( MC0_RDBFL0_type *) 0xf00657bcu)	/* Read Data and Bit Flip Register 14 */
#define MC71_RDBFL15	(*( MC0_RDBFL0_type *) 0xf00657beu)	/* Read Data and Bit Flip Register 15 */
#define MC71_RDBFL16	(*( MC0_RDBFL0_type *) 0xf00657c0u)	/* Read Data and Bit Flip Register 16 */
#define MC71_RDBFL17	(*( MC0_RDBFL0_type *) 0xf00657c2u)	/* Read Data and Bit Flip Register 17 */
#define MC71_RDBFL18	(*( MC0_RDBFL0_type *) 0xf00657c4u)	/* Read Data and Bit Flip Register 18 */
#define MC71_RDBFL19	(*( MC0_RDBFL0_type *) 0xf00657c6u)	/* Read Data and Bit Flip Register 19 */
#define MC71_RDBFL2	(*( MC0_RDBFL0_type *) 0xf00657a4u)	/* Read Data and Bit Flip Register 2 */
#define MC71_RDBFL20	(*( MC0_RDBFL0_type *) 0xf00657c8u)	/* Read Data and Bit Flip Register 20 */
#define MC71_RDBFL21	(*( MC0_RDBFL0_type *) 0xf00657cau)	/* Read Data and Bit Flip Register 21 */
#define MC71_RDBFL22	(*( MC0_RDBFL0_type *) 0xf00657ccu)	/* Read Data and Bit Flip Register 22 */
#define MC71_RDBFL23	(*( MC0_RDBFL0_type *) 0xf00657ceu)	/* Read Data and Bit Flip Register 23 */
#define MC71_RDBFL24	(*( MC0_RDBFL0_type *) 0xf00657d0u)	/* Read Data and Bit Flip Register 24 */
#define MC71_RDBFL25	(*( MC0_RDBFL0_type *) 0xf00657d2u)	/* Read Data and Bit Flip Register 25 */
#define MC71_RDBFL26	(*( MC0_RDBFL0_type *) 0xf00657d4u)	/* Read Data and Bit Flip Register 26 */
#define MC71_RDBFL27	(*( MC0_RDBFL0_type *) 0xf00657d6u)	/* Read Data and Bit Flip Register 27 */
#define MC71_RDBFL28	(*( MC0_RDBFL0_type *) 0xf00657d8u)	/* Read Data and Bit Flip Register 28 */
#define MC71_RDBFL29	(*( MC0_RDBFL0_type *) 0xf00657dau)	/* Read Data and Bit Flip Register 29 */
#define MC71_RDBFL3	(*( MC0_RDBFL0_type *) 0xf00657a6u)	/* Read Data and Bit Flip Register 3 */
#define MC71_RDBFL30	(*( MC0_RDBFL0_type *) 0xf00657dcu)	/* Read Data and Bit Flip Register 30 */
#define MC71_RDBFL31	(*( MC0_RDBFL0_type *) 0xf00657deu)	/* Read Data and Bit Flip Register 31 */
#define MC71_RDBFL32	(*( MC0_RDBFL0_type *) 0xf00657e0u)	/* Read Data and Bit Flip Register 32 */
#define MC71_RDBFL33	(*( MC0_RDBFL0_type *) 0xf00657e2u)	/* Read Data and Bit Flip Register 33 */
#define MC71_RDBFL34	(*( MC0_RDBFL0_type *) 0xf00657e4u)	/* Read Data and Bit Flip Register 34 */
#define MC71_RDBFL35	(*( MC0_RDBFL0_type *) 0xf00657e6u)	/* Read Data and Bit Flip Register 35 */
#define MC71_RDBFL36	(*( MC0_RDBFL0_type *) 0xf00657e8u)	/* Read Data and Bit Flip Register 36 */
#define MC71_RDBFL37	(*( MC0_RDBFL0_type *) 0xf00657eau)	/* Read Data and Bit Flip Register 37 */
#define MC71_RDBFL38	(*( MC0_RDBFL0_type *) 0xf00657ecu)	/* Read Data and Bit Flip Register 38 */
#define MC71_RDBFL39	(*( MC0_RDBFL0_type *) 0xf00657eeu)	/* Read Data and Bit Flip Register 39 */
#define MC71_RDBFL4	(*( MC0_RDBFL0_type *) 0xf00657a8u)	/* Read Data and Bit Flip Register 4 */
#define MC71_RDBFL5	(*( MC0_RDBFL0_type *) 0xf00657aau)	/* Read Data and Bit Flip Register 5 */
#define MC71_RDBFL6	(*( MC0_RDBFL0_type *) 0xf00657acu)	/* Read Data and Bit Flip Register 6 */
#define MC71_RDBFL7	(*( MC0_RDBFL0_type *) 0xf00657aeu)	/* Read Data and Bit Flip Register 7 */
#define MC71_RDBFL8	(*( MC0_RDBFL0_type *) 0xf00657b0u)	/* Read Data and Bit Flip Register 8 */
#define MC71_RDBFL9	(*( MC0_RDBFL0_type *) 0xf00657b2u)	/* Read Data and Bit Flip Register 9 */
#define MC72_RDBFL0	(*( MC0_RDBFL0_type *) 0xf00658a0u)	/* Read Data and Bit Flip Register 0 */
#define MC72_RDBFL1	(*( MC0_RDBFL0_type *) 0xf00658a2u)	/* Read Data and Bit Flip Register 1 */
#define MC72_RDBFL10	(*( MC0_RDBFL0_type *) 0xf00658b4u)	/* Read Data and Bit Flip Register 10 */
#define MC72_RDBFL11	(*( MC0_RDBFL0_type *) 0xf00658b6u)	/* Read Data and Bit Flip Register 11 */
#define MC72_RDBFL12	(*( MC0_RDBFL0_type *) 0xf00658b8u)	/* Read Data and Bit Flip Register 12 */
#define MC72_RDBFL13	(*( MC0_RDBFL0_type *) 0xf00658bau)	/* Read Data and Bit Flip Register 13 */
#define MC72_RDBFL14	(*( MC0_RDBFL0_type *) 0xf00658bcu)	/* Read Data and Bit Flip Register 14 */
#define MC72_RDBFL15	(*( MC0_RDBFL0_type *) 0xf00658beu)	/* Read Data and Bit Flip Register 15 */
#define MC72_RDBFL16	(*( MC0_RDBFL0_type *) 0xf00658c0u)	/* Read Data and Bit Flip Register 16 */
#define MC72_RDBFL17	(*( MC0_RDBFL0_type *) 0xf00658c2u)	/* Read Data and Bit Flip Register 17 */
#define MC72_RDBFL18	(*( MC0_RDBFL0_type *) 0xf00658c4u)	/* Read Data and Bit Flip Register 18 */
#define MC72_RDBFL19	(*( MC0_RDBFL0_type *) 0xf00658c6u)	/* Read Data and Bit Flip Register 19 */
#define MC72_RDBFL2	(*( MC0_RDBFL0_type *) 0xf00658a4u)	/* Read Data and Bit Flip Register 2 */
#define MC72_RDBFL20	(*( MC0_RDBFL0_type *) 0xf00658c8u)	/* Read Data and Bit Flip Register 20 */
#define MC72_RDBFL21	(*( MC0_RDBFL0_type *) 0xf00658cau)	/* Read Data and Bit Flip Register 21 */
#define MC72_RDBFL22	(*( MC0_RDBFL0_type *) 0xf00658ccu)	/* Read Data and Bit Flip Register 22 */
#define MC72_RDBFL23	(*( MC0_RDBFL0_type *) 0xf00658ceu)	/* Read Data and Bit Flip Register 23 */
#define MC72_RDBFL24	(*( MC0_RDBFL0_type *) 0xf00658d0u)	/* Read Data and Bit Flip Register 24 */
#define MC72_RDBFL25	(*( MC0_RDBFL0_type *) 0xf00658d2u)	/* Read Data and Bit Flip Register 25 */
#define MC72_RDBFL26	(*( MC0_RDBFL0_type *) 0xf00658d4u)	/* Read Data and Bit Flip Register 26 */
#define MC72_RDBFL27	(*( MC0_RDBFL0_type *) 0xf00658d6u)	/* Read Data and Bit Flip Register 27 */
#define MC72_RDBFL28	(*( MC0_RDBFL0_type *) 0xf00658d8u)	/* Read Data and Bit Flip Register 28 */
#define MC72_RDBFL29	(*( MC0_RDBFL0_type *) 0xf00658dau)	/* Read Data and Bit Flip Register 29 */
#define MC72_RDBFL3	(*( MC0_RDBFL0_type *) 0xf00658a6u)	/* Read Data and Bit Flip Register 3 */
#define MC72_RDBFL30	(*( MC0_RDBFL0_type *) 0xf00658dcu)	/* Read Data and Bit Flip Register 30 */
#define MC72_RDBFL31	(*( MC0_RDBFL0_type *) 0xf00658deu)	/* Read Data and Bit Flip Register 31 */
#define MC72_RDBFL32	(*( MC0_RDBFL0_type *) 0xf00658e0u)	/* Read Data and Bit Flip Register 32 */
#define MC72_RDBFL33	(*( MC0_RDBFL0_type *) 0xf00658e2u)	/* Read Data and Bit Flip Register 33 */
#define MC72_RDBFL34	(*( MC0_RDBFL0_type *) 0xf00658e4u)	/* Read Data and Bit Flip Register 34 */
#define MC72_RDBFL35	(*( MC0_RDBFL0_type *) 0xf00658e6u)	/* Read Data and Bit Flip Register 35 */
#define MC72_RDBFL36	(*( MC0_RDBFL0_type *) 0xf00658e8u)	/* Read Data and Bit Flip Register 36 */
#define MC72_RDBFL37	(*( MC0_RDBFL0_type *) 0xf00658eau)	/* Read Data and Bit Flip Register 37 */
#define MC72_RDBFL38	(*( MC0_RDBFL0_type *) 0xf00658ecu)	/* Read Data and Bit Flip Register 38 */
#define MC72_RDBFL39	(*( MC0_RDBFL0_type *) 0xf00658eeu)	/* Read Data and Bit Flip Register 39 */
#define MC72_RDBFL4	(*( MC0_RDBFL0_type *) 0xf00658a8u)	/* Read Data and Bit Flip Register 4 */
#define MC72_RDBFL5	(*( MC0_RDBFL0_type *) 0xf00658aau)	/* Read Data and Bit Flip Register 5 */
#define MC72_RDBFL6	(*( MC0_RDBFL0_type *) 0xf00658acu)	/* Read Data and Bit Flip Register 6 */
#define MC72_RDBFL7	(*( MC0_RDBFL0_type *) 0xf00658aeu)	/* Read Data and Bit Flip Register 7 */
#define MC72_RDBFL8	(*( MC0_RDBFL0_type *) 0xf00658b0u)	/* Read Data and Bit Flip Register 8 */
#define MC72_RDBFL9	(*( MC0_RDBFL0_type *) 0xf00658b2u)	/* Read Data and Bit Flip Register 9 */
#define MC73_RDBFL0	(*( MC0_RDBFL0_type *) 0xf00659a0u)	/* Read Data and Bit Flip Register 0 */
#define MC73_RDBFL1	(*( MC0_RDBFL0_type *) 0xf00659a2u)	/* Read Data and Bit Flip Register 1 */
#define MC73_RDBFL10	(*( MC0_RDBFL0_type *) 0xf00659b4u)	/* Read Data and Bit Flip Register 10 */
#define MC73_RDBFL11	(*( MC0_RDBFL0_type *) 0xf00659b6u)	/* Read Data and Bit Flip Register 11 */
#define MC73_RDBFL12	(*( MC0_RDBFL0_type *) 0xf00659b8u)	/* Read Data and Bit Flip Register 12 */
#define MC73_RDBFL13	(*( MC0_RDBFL0_type *) 0xf00659bau)	/* Read Data and Bit Flip Register 13 */
#define MC73_RDBFL14	(*( MC0_RDBFL0_type *) 0xf00659bcu)	/* Read Data and Bit Flip Register 14 */
#define MC73_RDBFL15	(*( MC0_RDBFL0_type *) 0xf00659beu)	/* Read Data and Bit Flip Register 15 */
#define MC73_RDBFL16	(*( MC0_RDBFL0_type *) 0xf00659c0u)	/* Read Data and Bit Flip Register 16 */
#define MC73_RDBFL17	(*( MC0_RDBFL0_type *) 0xf00659c2u)	/* Read Data and Bit Flip Register 17 */
#define MC73_RDBFL18	(*( MC0_RDBFL0_type *) 0xf00659c4u)	/* Read Data and Bit Flip Register 18 */
#define MC73_RDBFL19	(*( MC0_RDBFL0_type *) 0xf00659c6u)	/* Read Data and Bit Flip Register 19 */
#define MC73_RDBFL2	(*( MC0_RDBFL0_type *) 0xf00659a4u)	/* Read Data and Bit Flip Register 2 */
#define MC73_RDBFL20	(*( MC0_RDBFL0_type *) 0xf00659c8u)	/* Read Data and Bit Flip Register 20 */
#define MC73_RDBFL21	(*( MC0_RDBFL0_type *) 0xf00659cau)	/* Read Data and Bit Flip Register 21 */
#define MC73_RDBFL22	(*( MC0_RDBFL0_type *) 0xf00659ccu)	/* Read Data and Bit Flip Register 22 */
#define MC73_RDBFL23	(*( MC0_RDBFL0_type *) 0xf00659ceu)	/* Read Data and Bit Flip Register 23 */
#define MC73_RDBFL24	(*( MC0_RDBFL0_type *) 0xf00659d0u)	/* Read Data and Bit Flip Register 24 */
#define MC73_RDBFL25	(*( MC0_RDBFL0_type *) 0xf00659d2u)	/* Read Data and Bit Flip Register 25 */
#define MC73_RDBFL26	(*( MC0_RDBFL0_type *) 0xf00659d4u)	/* Read Data and Bit Flip Register 26 */
#define MC73_RDBFL27	(*( MC0_RDBFL0_type *) 0xf00659d6u)	/* Read Data and Bit Flip Register 27 */
#define MC73_RDBFL28	(*( MC0_RDBFL0_type *) 0xf00659d8u)	/* Read Data and Bit Flip Register 28 */
#define MC73_RDBFL29	(*( MC0_RDBFL0_type *) 0xf00659dau)	/* Read Data and Bit Flip Register 29 */
#define MC73_RDBFL3	(*( MC0_RDBFL0_type *) 0xf00659a6u)	/* Read Data and Bit Flip Register 3 */
#define MC73_RDBFL30	(*( MC0_RDBFL0_type *) 0xf00659dcu)	/* Read Data and Bit Flip Register 30 */
#define MC73_RDBFL31	(*( MC0_RDBFL0_type *) 0xf00659deu)	/* Read Data and Bit Flip Register 31 */
#define MC73_RDBFL32	(*( MC0_RDBFL0_type *) 0xf00659e0u)	/* Read Data and Bit Flip Register 32 */
#define MC73_RDBFL33	(*( MC0_RDBFL0_type *) 0xf00659e2u)	/* Read Data and Bit Flip Register 33 */
#define MC73_RDBFL34	(*( MC0_RDBFL0_type *) 0xf00659e4u)	/* Read Data and Bit Flip Register 34 */
#define MC73_RDBFL35	(*( MC0_RDBFL0_type *) 0xf00659e6u)	/* Read Data and Bit Flip Register 35 */
#define MC73_RDBFL36	(*( MC0_RDBFL0_type *) 0xf00659e8u)	/* Read Data and Bit Flip Register 36 */
#define MC73_RDBFL37	(*( MC0_RDBFL0_type *) 0xf00659eau)	/* Read Data and Bit Flip Register 37 */
#define MC73_RDBFL38	(*( MC0_RDBFL0_type *) 0xf00659ecu)	/* Read Data and Bit Flip Register 38 */
#define MC73_RDBFL39	(*( MC0_RDBFL0_type *) 0xf00659eeu)	/* Read Data and Bit Flip Register 39 */
#define MC73_RDBFL4	(*( MC0_RDBFL0_type *) 0xf00659a8u)	/* Read Data and Bit Flip Register 4 */
#define MC73_RDBFL5	(*( MC0_RDBFL0_type *) 0xf00659aau)	/* Read Data and Bit Flip Register 5 */
#define MC73_RDBFL6	(*( MC0_RDBFL0_type *) 0xf00659acu)	/* Read Data and Bit Flip Register 6 */
#define MC73_RDBFL7	(*( MC0_RDBFL0_type *) 0xf00659aeu)	/* Read Data and Bit Flip Register 7 */
#define MC73_RDBFL8	(*( MC0_RDBFL0_type *) 0xf00659b0u)	/* Read Data and Bit Flip Register 8 */
#define MC73_RDBFL9	(*( MC0_RDBFL0_type *) 0xf00659b2u)	/* Read Data and Bit Flip Register 9 */
#define MC74_RDBFL0	(*( MC0_RDBFL0_type *) 0xf0065aa0u)	/* Read Data and Bit Flip Register 0 */
#define MC74_RDBFL1	(*( MC0_RDBFL0_type *) 0xf0065aa2u)	/* Read Data and Bit Flip Register 1 */
#define MC74_RDBFL10	(*( MC0_RDBFL0_type *) 0xf0065ab4u)	/* Read Data and Bit Flip Register 10 */
#define MC74_RDBFL11	(*( MC0_RDBFL0_type *) 0xf0065ab6u)	/* Read Data and Bit Flip Register 11 */
#define MC74_RDBFL12	(*( MC0_RDBFL0_type *) 0xf0065ab8u)	/* Read Data and Bit Flip Register 12 */
#define MC74_RDBFL13	(*( MC0_RDBFL0_type *) 0xf0065abau)	/* Read Data and Bit Flip Register 13 */
#define MC74_RDBFL14	(*( MC0_RDBFL0_type *) 0xf0065abcu)	/* Read Data and Bit Flip Register 14 */
#define MC74_RDBFL15	(*( MC0_RDBFL0_type *) 0xf0065abeu)	/* Read Data and Bit Flip Register 15 */
#define MC74_RDBFL16	(*( MC0_RDBFL0_type *) 0xf0065ac0u)	/* Read Data and Bit Flip Register 16 */
#define MC74_RDBFL17	(*( MC0_RDBFL0_type *) 0xf0065ac2u)	/* Read Data and Bit Flip Register 17 */
#define MC74_RDBFL18	(*( MC0_RDBFL0_type *) 0xf0065ac4u)	/* Read Data and Bit Flip Register 18 */
#define MC74_RDBFL19	(*( MC0_RDBFL0_type *) 0xf0065ac6u)	/* Read Data and Bit Flip Register 19 */
#define MC74_RDBFL2	(*( MC0_RDBFL0_type *) 0xf0065aa4u)	/* Read Data and Bit Flip Register 2 */
#define MC74_RDBFL20	(*( MC0_RDBFL0_type *) 0xf0065ac8u)	/* Read Data and Bit Flip Register 20 */
#define MC74_RDBFL21	(*( MC0_RDBFL0_type *) 0xf0065acau)	/* Read Data and Bit Flip Register 21 */
#define MC74_RDBFL22	(*( MC0_RDBFL0_type *) 0xf0065accu)	/* Read Data and Bit Flip Register 22 */
#define MC74_RDBFL23	(*( MC0_RDBFL0_type *) 0xf0065aceu)	/* Read Data and Bit Flip Register 23 */
#define MC74_RDBFL24	(*( MC0_RDBFL0_type *) 0xf0065ad0u)	/* Read Data and Bit Flip Register 24 */
#define MC74_RDBFL25	(*( MC0_RDBFL0_type *) 0xf0065ad2u)	/* Read Data and Bit Flip Register 25 */
#define MC74_RDBFL26	(*( MC0_RDBFL0_type *) 0xf0065ad4u)	/* Read Data and Bit Flip Register 26 */
#define MC74_RDBFL27	(*( MC0_RDBFL0_type *) 0xf0065ad6u)	/* Read Data and Bit Flip Register 27 */
#define MC74_RDBFL28	(*( MC0_RDBFL0_type *) 0xf0065ad8u)	/* Read Data and Bit Flip Register 28 */
#define MC74_RDBFL29	(*( MC0_RDBFL0_type *) 0xf0065adau)	/* Read Data and Bit Flip Register 29 */
#define MC74_RDBFL3	(*( MC0_RDBFL0_type *) 0xf0065aa6u)	/* Read Data and Bit Flip Register 3 */
#define MC74_RDBFL30	(*( MC0_RDBFL0_type *) 0xf0065adcu)	/* Read Data and Bit Flip Register 30 */
#define MC74_RDBFL31	(*( MC0_RDBFL0_type *) 0xf0065adeu)	/* Read Data and Bit Flip Register 31 */
#define MC74_RDBFL32	(*( MC0_RDBFL0_type *) 0xf0065ae0u)	/* Read Data and Bit Flip Register 32 */
#define MC74_RDBFL33	(*( MC0_RDBFL0_type *) 0xf0065ae2u)	/* Read Data and Bit Flip Register 33 */
#define MC74_RDBFL34	(*( MC0_RDBFL0_type *) 0xf0065ae4u)	/* Read Data and Bit Flip Register 34 */
#define MC74_RDBFL35	(*( MC0_RDBFL0_type *) 0xf0065ae6u)	/* Read Data and Bit Flip Register 35 */
#define MC74_RDBFL36	(*( MC0_RDBFL0_type *) 0xf0065ae8u)	/* Read Data and Bit Flip Register 36 */
#define MC74_RDBFL37	(*( MC0_RDBFL0_type *) 0xf0065aeau)	/* Read Data and Bit Flip Register 37 */
#define MC74_RDBFL38	(*( MC0_RDBFL0_type *) 0xf0065aecu)	/* Read Data and Bit Flip Register 38 */
#define MC74_RDBFL39	(*( MC0_RDBFL0_type *) 0xf0065aeeu)	/* Read Data and Bit Flip Register 39 */
#define MC74_RDBFL4	(*( MC0_RDBFL0_type *) 0xf0065aa8u)	/* Read Data and Bit Flip Register 4 */
#define MC74_RDBFL5	(*( MC0_RDBFL0_type *) 0xf0065aaau)	/* Read Data and Bit Flip Register 5 */
#define MC74_RDBFL6	(*( MC0_RDBFL0_type *) 0xf0065aacu)	/* Read Data and Bit Flip Register 6 */
#define MC74_RDBFL7	(*( MC0_RDBFL0_type *) 0xf0065aaeu)	/* Read Data and Bit Flip Register 7 */
#define MC74_RDBFL8	(*( MC0_RDBFL0_type *) 0xf0065ab0u)	/* Read Data and Bit Flip Register 8 */
#define MC74_RDBFL9	(*( MC0_RDBFL0_type *) 0xf0065ab2u)	/* Read Data and Bit Flip Register 9 */
#define MC75_RDBFL0	(*( MC0_RDBFL0_type *) 0xf0065ba0u)	/* Read Data and Bit Flip Register 0 */
#define MC75_RDBFL1	(*( MC0_RDBFL0_type *) 0xf0065ba2u)	/* Read Data and Bit Flip Register 1 */
#define MC75_RDBFL10	(*( MC0_RDBFL0_type *) 0xf0065bb4u)	/* Read Data and Bit Flip Register 10 */
#define MC75_RDBFL11	(*( MC0_RDBFL0_type *) 0xf0065bb6u)	/* Read Data and Bit Flip Register 11 */
#define MC75_RDBFL12	(*( MC0_RDBFL0_type *) 0xf0065bb8u)	/* Read Data and Bit Flip Register 12 */
#define MC75_RDBFL13	(*( MC0_RDBFL0_type *) 0xf0065bbau)	/* Read Data and Bit Flip Register 13 */
#define MC75_RDBFL14	(*( MC0_RDBFL0_type *) 0xf0065bbcu)	/* Read Data and Bit Flip Register 14 */
#define MC75_RDBFL15	(*( MC0_RDBFL0_type *) 0xf0065bbeu)	/* Read Data and Bit Flip Register 15 */
#define MC75_RDBFL16	(*( MC0_RDBFL0_type *) 0xf0065bc0u)	/* Read Data and Bit Flip Register 16 */
#define MC75_RDBFL17	(*( MC0_RDBFL0_type *) 0xf0065bc2u)	/* Read Data and Bit Flip Register 17 */
#define MC75_RDBFL18	(*( MC0_RDBFL0_type *) 0xf0065bc4u)	/* Read Data and Bit Flip Register 18 */
#define MC75_RDBFL19	(*( MC0_RDBFL0_type *) 0xf0065bc6u)	/* Read Data and Bit Flip Register 19 */
#define MC75_RDBFL2	(*( MC0_RDBFL0_type *) 0xf0065ba4u)	/* Read Data and Bit Flip Register 2 */
#define MC75_RDBFL20	(*( MC0_RDBFL0_type *) 0xf0065bc8u)	/* Read Data and Bit Flip Register 20 */
#define MC75_RDBFL21	(*( MC0_RDBFL0_type *) 0xf0065bcau)	/* Read Data and Bit Flip Register 21 */
#define MC75_RDBFL22	(*( MC0_RDBFL0_type *) 0xf0065bccu)	/* Read Data and Bit Flip Register 22 */
#define MC75_RDBFL23	(*( MC0_RDBFL0_type *) 0xf0065bceu)	/* Read Data and Bit Flip Register 23 */
#define MC75_RDBFL24	(*( MC0_RDBFL0_type *) 0xf0065bd0u)	/* Read Data and Bit Flip Register 24 */
#define MC75_RDBFL25	(*( MC0_RDBFL0_type *) 0xf0065bd2u)	/* Read Data and Bit Flip Register 25 */
#define MC75_RDBFL26	(*( MC0_RDBFL0_type *) 0xf0065bd4u)	/* Read Data and Bit Flip Register 26 */
#define MC75_RDBFL27	(*( MC0_RDBFL0_type *) 0xf0065bd6u)	/* Read Data and Bit Flip Register 27 */
#define MC75_RDBFL28	(*( MC0_RDBFL0_type *) 0xf0065bd8u)	/* Read Data and Bit Flip Register 28 */
#define MC75_RDBFL29	(*( MC0_RDBFL0_type *) 0xf0065bdau)	/* Read Data and Bit Flip Register 29 */
#define MC75_RDBFL3	(*( MC0_RDBFL0_type *) 0xf0065ba6u)	/* Read Data and Bit Flip Register 3 */
#define MC75_RDBFL30	(*( MC0_RDBFL0_type *) 0xf0065bdcu)	/* Read Data and Bit Flip Register 30 */
#define MC75_RDBFL31	(*( MC0_RDBFL0_type *) 0xf0065bdeu)	/* Read Data and Bit Flip Register 31 */
#define MC75_RDBFL32	(*( MC0_RDBFL0_type *) 0xf0065be0u)	/* Read Data and Bit Flip Register 32 */
#define MC75_RDBFL33	(*( MC0_RDBFL0_type *) 0xf0065be2u)	/* Read Data and Bit Flip Register 33 */
#define MC75_RDBFL34	(*( MC0_RDBFL0_type *) 0xf0065be4u)	/* Read Data and Bit Flip Register 34 */
#define MC75_RDBFL35	(*( MC0_RDBFL0_type *) 0xf0065be6u)	/* Read Data and Bit Flip Register 35 */
#define MC75_RDBFL36	(*( MC0_RDBFL0_type *) 0xf0065be8u)	/* Read Data and Bit Flip Register 36 */
#define MC75_RDBFL37	(*( MC0_RDBFL0_type *) 0xf0065beau)	/* Read Data and Bit Flip Register 37 */
#define MC75_RDBFL38	(*( MC0_RDBFL0_type *) 0xf0065becu)	/* Read Data and Bit Flip Register 38 */
#define MC75_RDBFL39	(*( MC0_RDBFL0_type *) 0xf0065beeu)	/* Read Data and Bit Flip Register 39 */
#define MC75_RDBFL4	(*( MC0_RDBFL0_type *) 0xf0065ba8u)	/* Read Data and Bit Flip Register 4 */
#define MC75_RDBFL5	(*( MC0_RDBFL0_type *) 0xf0065baau)	/* Read Data and Bit Flip Register 5 */
#define MC75_RDBFL6	(*( MC0_RDBFL0_type *) 0xf0065bacu)	/* Read Data and Bit Flip Register 6 */
#define MC75_RDBFL7	(*( MC0_RDBFL0_type *) 0xf0065baeu)	/* Read Data and Bit Flip Register 7 */
#define MC75_RDBFL8	(*( MC0_RDBFL0_type *) 0xf0065bb0u)	/* Read Data and Bit Flip Register 8 */
#define MC75_RDBFL9	(*( MC0_RDBFL0_type *) 0xf0065bb2u)	/* Read Data and Bit Flip Register 9 */
#define MC76_RDBFL0	(*( MC0_RDBFL0_type *) 0xf0065ca0u)	/* Read Data and Bit Flip Register 0 */
#define MC76_RDBFL1	(*( MC0_RDBFL0_type *) 0xf0065ca2u)	/* Read Data and Bit Flip Register 1 */
#define MC76_RDBFL10	(*( MC0_RDBFL0_type *) 0xf0065cb4u)	/* Read Data and Bit Flip Register 10 */
#define MC76_RDBFL11	(*( MC0_RDBFL0_type *) 0xf0065cb6u)	/* Read Data and Bit Flip Register 11 */
#define MC76_RDBFL12	(*( MC0_RDBFL0_type *) 0xf0065cb8u)	/* Read Data and Bit Flip Register 12 */
#define MC76_RDBFL13	(*( MC0_RDBFL0_type *) 0xf0065cbau)	/* Read Data and Bit Flip Register 13 */
#define MC76_RDBFL14	(*( MC0_RDBFL0_type *) 0xf0065cbcu)	/* Read Data and Bit Flip Register 14 */
#define MC76_RDBFL15	(*( MC0_RDBFL0_type *) 0xf0065cbeu)	/* Read Data and Bit Flip Register 15 */
#define MC76_RDBFL16	(*( MC0_RDBFL0_type *) 0xf0065cc0u)	/* Read Data and Bit Flip Register 16 */
#define MC76_RDBFL17	(*( MC0_RDBFL0_type *) 0xf0065cc2u)	/* Read Data and Bit Flip Register 17 */
#define MC76_RDBFL18	(*( MC0_RDBFL0_type *) 0xf0065cc4u)	/* Read Data and Bit Flip Register 18 */
#define MC76_RDBFL19	(*( MC0_RDBFL0_type *) 0xf0065cc6u)	/* Read Data and Bit Flip Register 19 */
#define MC76_RDBFL2	(*( MC0_RDBFL0_type *) 0xf0065ca4u)	/* Read Data and Bit Flip Register 2 */
#define MC76_RDBFL20	(*( MC0_RDBFL0_type *) 0xf0065cc8u)	/* Read Data and Bit Flip Register 20 */
#define MC76_RDBFL21	(*( MC0_RDBFL0_type *) 0xf0065ccau)	/* Read Data and Bit Flip Register 21 */
#define MC76_RDBFL22	(*( MC0_RDBFL0_type *) 0xf0065cccu)	/* Read Data and Bit Flip Register 22 */
#define MC76_RDBFL23	(*( MC0_RDBFL0_type *) 0xf0065cceu)	/* Read Data and Bit Flip Register 23 */
#define MC76_RDBFL24	(*( MC0_RDBFL0_type *) 0xf0065cd0u)	/* Read Data and Bit Flip Register 24 */
#define MC76_RDBFL25	(*( MC0_RDBFL0_type *) 0xf0065cd2u)	/* Read Data and Bit Flip Register 25 */
#define MC76_RDBFL26	(*( MC0_RDBFL0_type *) 0xf0065cd4u)	/* Read Data and Bit Flip Register 26 */
#define MC76_RDBFL27	(*( MC0_RDBFL0_type *) 0xf0065cd6u)	/* Read Data and Bit Flip Register 27 */
#define MC76_RDBFL28	(*( MC0_RDBFL0_type *) 0xf0065cd8u)	/* Read Data and Bit Flip Register 28 */
#define MC76_RDBFL29	(*( MC0_RDBFL0_type *) 0xf0065cdau)	/* Read Data and Bit Flip Register 29 */
#define MC76_RDBFL3	(*( MC0_RDBFL0_type *) 0xf0065ca6u)	/* Read Data and Bit Flip Register 3 */
#define MC76_RDBFL30	(*( MC0_RDBFL0_type *) 0xf0065cdcu)	/* Read Data and Bit Flip Register 30 */
#define MC76_RDBFL31	(*( MC0_RDBFL0_type *) 0xf0065cdeu)	/* Read Data and Bit Flip Register 31 */
#define MC76_RDBFL32	(*( MC0_RDBFL0_type *) 0xf0065ce0u)	/* Read Data and Bit Flip Register 32 */
#define MC76_RDBFL33	(*( MC0_RDBFL0_type *) 0xf0065ce2u)	/* Read Data and Bit Flip Register 33 */
#define MC76_RDBFL34	(*( MC0_RDBFL0_type *) 0xf0065ce4u)	/* Read Data and Bit Flip Register 34 */
#define MC76_RDBFL35	(*( MC0_RDBFL0_type *) 0xf0065ce6u)	/* Read Data and Bit Flip Register 35 */
#define MC76_RDBFL36	(*( MC0_RDBFL0_type *) 0xf0065ce8u)	/* Read Data and Bit Flip Register 36 */
#define MC76_RDBFL37	(*( MC0_RDBFL0_type *) 0xf0065ceau)	/* Read Data and Bit Flip Register 37 */
#define MC76_RDBFL38	(*( MC0_RDBFL0_type *) 0xf0065cecu)	/* Read Data and Bit Flip Register 38 */
#define MC76_RDBFL39	(*( MC0_RDBFL0_type *) 0xf0065ceeu)	/* Read Data and Bit Flip Register 39 */
#define MC76_RDBFL4	(*( MC0_RDBFL0_type *) 0xf0065ca8u)	/* Read Data and Bit Flip Register 4 */
#define MC76_RDBFL5	(*( MC0_RDBFL0_type *) 0xf0065caau)	/* Read Data and Bit Flip Register 5 */
#define MC76_RDBFL6	(*( MC0_RDBFL0_type *) 0xf0065cacu)	/* Read Data and Bit Flip Register 6 */
#define MC76_RDBFL7	(*( MC0_RDBFL0_type *) 0xf0065caeu)	/* Read Data and Bit Flip Register 7 */
#define MC76_RDBFL8	(*( MC0_RDBFL0_type *) 0xf0065cb0u)	/* Read Data and Bit Flip Register 8 */
#define MC76_RDBFL9	(*( MC0_RDBFL0_type *) 0xf0065cb2u)	/* Read Data and Bit Flip Register 9 */
#define MC77_RDBFL0	(*( MC0_RDBFL0_type *) 0xf0065da0u)	/* Read Data and Bit Flip Register 0 */
#define MC77_RDBFL1	(*( MC0_RDBFL0_type *) 0xf0065da2u)	/* Read Data and Bit Flip Register 1 */
#define MC77_RDBFL10	(*( MC0_RDBFL0_type *) 0xf0065db4u)	/* Read Data and Bit Flip Register 10 */
#define MC77_RDBFL11	(*( MC0_RDBFL0_type *) 0xf0065db6u)	/* Read Data and Bit Flip Register 11 */
#define MC77_RDBFL12	(*( MC0_RDBFL0_type *) 0xf0065db8u)	/* Read Data and Bit Flip Register 12 */
#define MC77_RDBFL13	(*( MC0_RDBFL0_type *) 0xf0065dbau)	/* Read Data and Bit Flip Register 13 */
#define MC77_RDBFL14	(*( MC0_RDBFL0_type *) 0xf0065dbcu)	/* Read Data and Bit Flip Register 14 */
#define MC77_RDBFL15	(*( MC0_RDBFL0_type *) 0xf0065dbeu)	/* Read Data and Bit Flip Register 15 */
#define MC77_RDBFL16	(*( MC0_RDBFL0_type *) 0xf0065dc0u)	/* Read Data and Bit Flip Register 16 */
#define MC77_RDBFL17	(*( MC0_RDBFL0_type *) 0xf0065dc2u)	/* Read Data and Bit Flip Register 17 */
#define MC77_RDBFL18	(*( MC0_RDBFL0_type *) 0xf0065dc4u)	/* Read Data and Bit Flip Register 18 */
#define MC77_RDBFL19	(*( MC0_RDBFL0_type *) 0xf0065dc6u)	/* Read Data and Bit Flip Register 19 */
#define MC77_RDBFL2	(*( MC0_RDBFL0_type *) 0xf0065da4u)	/* Read Data and Bit Flip Register 2 */
#define MC77_RDBFL20	(*( MC0_RDBFL0_type *) 0xf0065dc8u)	/* Read Data and Bit Flip Register 20 */
#define MC77_RDBFL21	(*( MC0_RDBFL0_type *) 0xf0065dcau)	/* Read Data and Bit Flip Register 21 */
#define MC77_RDBFL22	(*( MC0_RDBFL0_type *) 0xf0065dccu)	/* Read Data and Bit Flip Register 22 */
#define MC77_RDBFL23	(*( MC0_RDBFL0_type *) 0xf0065dceu)	/* Read Data and Bit Flip Register 23 */
#define MC77_RDBFL24	(*( MC0_RDBFL0_type *) 0xf0065dd0u)	/* Read Data and Bit Flip Register 24 */
#define MC77_RDBFL25	(*( MC0_RDBFL0_type *) 0xf0065dd2u)	/* Read Data and Bit Flip Register 25 */
#define MC77_RDBFL26	(*( MC0_RDBFL0_type *) 0xf0065dd4u)	/* Read Data and Bit Flip Register 26 */
#define MC77_RDBFL27	(*( MC0_RDBFL0_type *) 0xf0065dd6u)	/* Read Data and Bit Flip Register 27 */
#define MC77_RDBFL28	(*( MC0_RDBFL0_type *) 0xf0065dd8u)	/* Read Data and Bit Flip Register 28 */
#define MC77_RDBFL29	(*( MC0_RDBFL0_type *) 0xf0065ddau)	/* Read Data and Bit Flip Register 29 */
#define MC77_RDBFL3	(*( MC0_RDBFL0_type *) 0xf0065da6u)	/* Read Data and Bit Flip Register 3 */
#define MC77_RDBFL30	(*( MC0_RDBFL0_type *) 0xf0065ddcu)	/* Read Data and Bit Flip Register 30 */
#define MC77_RDBFL31	(*( MC0_RDBFL0_type *) 0xf0065ddeu)	/* Read Data and Bit Flip Register 31 */
#define MC77_RDBFL32	(*( MC0_RDBFL0_type *) 0xf0065de0u)	/* Read Data and Bit Flip Register 32 */
#define MC77_RDBFL33	(*( MC0_RDBFL0_type *) 0xf0065de2u)	/* Read Data and Bit Flip Register 33 */
#define MC77_RDBFL34	(*( MC0_RDBFL0_type *) 0xf0065de4u)	/* Read Data and Bit Flip Register 34 */
#define MC77_RDBFL35	(*( MC0_RDBFL0_type *) 0xf0065de6u)	/* Read Data and Bit Flip Register 35 */
#define MC77_RDBFL36	(*( MC0_RDBFL0_type *) 0xf0065de8u)	/* Read Data and Bit Flip Register 36 */
#define MC77_RDBFL37	(*( MC0_RDBFL0_type *) 0xf0065deau)	/* Read Data and Bit Flip Register 37 */
#define MC77_RDBFL38	(*( MC0_RDBFL0_type *) 0xf0065decu)	/* Read Data and Bit Flip Register 38 */
#define MC77_RDBFL39	(*( MC0_RDBFL0_type *) 0xf0065deeu)	/* Read Data and Bit Flip Register 39 */
#define MC77_RDBFL4	(*( MC0_RDBFL0_type *) 0xf0065da8u)	/* Read Data and Bit Flip Register 4 */
#define MC77_RDBFL5	(*( MC0_RDBFL0_type *) 0xf0065daau)	/* Read Data and Bit Flip Register 5 */
#define MC77_RDBFL6	(*( MC0_RDBFL0_type *) 0xf0065dacu)	/* Read Data and Bit Flip Register 6 */
#define MC77_RDBFL7	(*( MC0_RDBFL0_type *) 0xf0065daeu)	/* Read Data and Bit Flip Register 7 */
#define MC77_RDBFL8	(*( MC0_RDBFL0_type *) 0xf0065db0u)	/* Read Data and Bit Flip Register 8 */
#define MC77_RDBFL9	(*( MC0_RDBFL0_type *) 0xf0065db2u)	/* Read Data and Bit Flip Register 9 */
#define MC78_RDBFL0	(*( MC0_RDBFL0_type *) 0xf0065ea0u)	/* Read Data and Bit Flip Register 0 */
#define MC78_RDBFL1	(*( MC0_RDBFL0_type *) 0xf0065ea2u)	/* Read Data and Bit Flip Register 1 */
#define MC78_RDBFL10	(*( MC0_RDBFL0_type *) 0xf0065eb4u)	/* Read Data and Bit Flip Register 10 */
#define MC78_RDBFL11	(*( MC0_RDBFL0_type *) 0xf0065eb6u)	/* Read Data and Bit Flip Register 11 */
#define MC78_RDBFL12	(*( MC0_RDBFL0_type *) 0xf0065eb8u)	/* Read Data and Bit Flip Register 12 */
#define MC78_RDBFL13	(*( MC0_RDBFL0_type *) 0xf0065ebau)	/* Read Data and Bit Flip Register 13 */
#define MC78_RDBFL14	(*( MC0_RDBFL0_type *) 0xf0065ebcu)	/* Read Data and Bit Flip Register 14 */
#define MC78_RDBFL15	(*( MC0_RDBFL0_type *) 0xf0065ebeu)	/* Read Data and Bit Flip Register 15 */
#define MC78_RDBFL16	(*( MC0_RDBFL0_type *) 0xf0065ec0u)	/* Read Data and Bit Flip Register 16 */
#define MC78_RDBFL17	(*( MC0_RDBFL0_type *) 0xf0065ec2u)	/* Read Data and Bit Flip Register 17 */
#define MC78_RDBFL18	(*( MC0_RDBFL0_type *) 0xf0065ec4u)	/* Read Data and Bit Flip Register 18 */
#define MC78_RDBFL19	(*( MC0_RDBFL0_type *) 0xf0065ec6u)	/* Read Data and Bit Flip Register 19 */
#define MC78_RDBFL2	(*( MC0_RDBFL0_type *) 0xf0065ea4u)	/* Read Data and Bit Flip Register 2 */
#define MC78_RDBFL20	(*( MC0_RDBFL0_type *) 0xf0065ec8u)	/* Read Data and Bit Flip Register 20 */
#define MC78_RDBFL21	(*( MC0_RDBFL0_type *) 0xf0065ecau)	/* Read Data and Bit Flip Register 21 */
#define MC78_RDBFL22	(*( MC0_RDBFL0_type *) 0xf0065eccu)	/* Read Data and Bit Flip Register 22 */
#define MC78_RDBFL23	(*( MC0_RDBFL0_type *) 0xf0065eceu)	/* Read Data and Bit Flip Register 23 */
#define MC78_RDBFL24	(*( MC0_RDBFL0_type *) 0xf0065ed0u)	/* Read Data and Bit Flip Register 24 */
#define MC78_RDBFL25	(*( MC0_RDBFL0_type *) 0xf0065ed2u)	/* Read Data and Bit Flip Register 25 */
#define MC78_RDBFL26	(*( MC0_RDBFL0_type *) 0xf0065ed4u)	/* Read Data and Bit Flip Register 26 */
#define MC78_RDBFL27	(*( MC0_RDBFL0_type *) 0xf0065ed6u)	/* Read Data and Bit Flip Register 27 */
#define MC78_RDBFL28	(*( MC0_RDBFL0_type *) 0xf0065ed8u)	/* Read Data and Bit Flip Register 28 */
#define MC78_RDBFL29	(*( MC0_RDBFL0_type *) 0xf0065edau)	/* Read Data and Bit Flip Register 29 */
#define MC78_RDBFL3	(*( MC0_RDBFL0_type *) 0xf0065ea6u)	/* Read Data and Bit Flip Register 3 */
#define MC78_RDBFL30	(*( MC0_RDBFL0_type *) 0xf0065edcu)	/* Read Data and Bit Flip Register 30 */
#define MC78_RDBFL31	(*( MC0_RDBFL0_type *) 0xf0065edeu)	/* Read Data and Bit Flip Register 31 */
#define MC78_RDBFL32	(*( MC0_RDBFL0_type *) 0xf0065ee0u)	/* Read Data and Bit Flip Register 32 */
#define MC78_RDBFL33	(*( MC0_RDBFL0_type *) 0xf0065ee2u)	/* Read Data and Bit Flip Register 33 */
#define MC78_RDBFL34	(*( MC0_RDBFL0_type *) 0xf0065ee4u)	/* Read Data and Bit Flip Register 34 */
#define MC78_RDBFL35	(*( MC0_RDBFL0_type *) 0xf0065ee6u)	/* Read Data and Bit Flip Register 35 */
#define MC78_RDBFL36	(*( MC0_RDBFL0_type *) 0xf0065ee8u)	/* Read Data and Bit Flip Register 36 */
#define MC78_RDBFL37	(*( MC0_RDBFL0_type *) 0xf0065eeau)	/* Read Data and Bit Flip Register 37 */
#define MC78_RDBFL38	(*( MC0_RDBFL0_type *) 0xf0065eecu)	/* Read Data and Bit Flip Register 38 */
#define MC78_RDBFL39	(*( MC0_RDBFL0_type *) 0xf0065eeeu)	/* Read Data and Bit Flip Register 39 */
#define MC78_RDBFL4	(*( MC0_RDBFL0_type *) 0xf0065ea8u)	/* Read Data and Bit Flip Register 4 */
#define MC78_RDBFL5	(*( MC0_RDBFL0_type *) 0xf0065eaau)	/* Read Data and Bit Flip Register 5 */
#define MC78_RDBFL6	(*( MC0_RDBFL0_type *) 0xf0065eacu)	/* Read Data and Bit Flip Register 6 */
#define MC78_RDBFL7	(*( MC0_RDBFL0_type *) 0xf0065eaeu)	/* Read Data and Bit Flip Register 7 */
#define MC78_RDBFL8	(*( MC0_RDBFL0_type *) 0xf0065eb0u)	/* Read Data and Bit Flip Register 8 */
#define MC78_RDBFL9	(*( MC0_RDBFL0_type *) 0xf0065eb2u)	/* Read Data and Bit Flip Register 9 */
#define MC79_RDBFL0	(*( MC0_RDBFL0_type *) 0xf0065fa0u)	/* Read Data and Bit Flip Register 0 */
#define MC79_RDBFL1	(*( MC0_RDBFL0_type *) 0xf0065fa2u)	/* Read Data and Bit Flip Register 1 */
#define MC79_RDBFL10	(*( MC0_RDBFL0_type *) 0xf0065fb4u)	/* Read Data and Bit Flip Register 10 */
#define MC79_RDBFL11	(*( MC0_RDBFL0_type *) 0xf0065fb6u)	/* Read Data and Bit Flip Register 11 */
#define MC79_RDBFL12	(*( MC0_RDBFL0_type *) 0xf0065fb8u)	/* Read Data and Bit Flip Register 12 */
#define MC79_RDBFL13	(*( MC0_RDBFL0_type *) 0xf0065fbau)	/* Read Data and Bit Flip Register 13 */
#define MC79_RDBFL14	(*( MC0_RDBFL0_type *) 0xf0065fbcu)	/* Read Data and Bit Flip Register 14 */
#define MC79_RDBFL15	(*( MC0_RDBFL0_type *) 0xf0065fbeu)	/* Read Data and Bit Flip Register 15 */
#define MC79_RDBFL16	(*( MC0_RDBFL0_type *) 0xf0065fc0u)	/* Read Data and Bit Flip Register 16 */
#define MC79_RDBFL17	(*( MC0_RDBFL0_type *) 0xf0065fc2u)	/* Read Data and Bit Flip Register 17 */
#define MC79_RDBFL18	(*( MC0_RDBFL0_type *) 0xf0065fc4u)	/* Read Data and Bit Flip Register 18 */
#define MC79_RDBFL19	(*( MC0_RDBFL0_type *) 0xf0065fc6u)	/* Read Data and Bit Flip Register 19 */
#define MC79_RDBFL2	(*( MC0_RDBFL0_type *) 0xf0065fa4u)	/* Read Data and Bit Flip Register 2 */
#define MC79_RDBFL20	(*( MC0_RDBFL0_type *) 0xf0065fc8u)	/* Read Data and Bit Flip Register 20 */
#define MC79_RDBFL21	(*( MC0_RDBFL0_type *) 0xf0065fcau)	/* Read Data and Bit Flip Register 21 */
#define MC79_RDBFL22	(*( MC0_RDBFL0_type *) 0xf0065fccu)	/* Read Data and Bit Flip Register 22 */
#define MC79_RDBFL23	(*( MC0_RDBFL0_type *) 0xf0065fceu)	/* Read Data and Bit Flip Register 23 */
#define MC79_RDBFL24	(*( MC0_RDBFL0_type *) 0xf0065fd0u)	/* Read Data and Bit Flip Register 24 */
#define MC79_RDBFL25	(*( MC0_RDBFL0_type *) 0xf0065fd2u)	/* Read Data and Bit Flip Register 25 */
#define MC79_RDBFL26	(*( MC0_RDBFL0_type *) 0xf0065fd4u)	/* Read Data and Bit Flip Register 26 */
#define MC79_RDBFL27	(*( MC0_RDBFL0_type *) 0xf0065fd6u)	/* Read Data and Bit Flip Register 27 */
#define MC79_RDBFL28	(*( MC0_RDBFL0_type *) 0xf0065fd8u)	/* Read Data and Bit Flip Register 28 */
#define MC79_RDBFL29	(*( MC0_RDBFL0_type *) 0xf0065fdau)	/* Read Data and Bit Flip Register 29 */
#define MC79_RDBFL3	(*( MC0_RDBFL0_type *) 0xf0065fa6u)	/* Read Data and Bit Flip Register 3 */
#define MC79_RDBFL30	(*( MC0_RDBFL0_type *) 0xf0065fdcu)	/* Read Data and Bit Flip Register 30 */
#define MC79_RDBFL31	(*( MC0_RDBFL0_type *) 0xf0065fdeu)	/* Read Data and Bit Flip Register 31 */
#define MC79_RDBFL32	(*( MC0_RDBFL0_type *) 0xf0065fe0u)	/* Read Data and Bit Flip Register 32 */
#define MC79_RDBFL33	(*( MC0_RDBFL0_type *) 0xf0065fe2u)	/* Read Data and Bit Flip Register 33 */
#define MC79_RDBFL34	(*( MC0_RDBFL0_type *) 0xf0065fe4u)	/* Read Data and Bit Flip Register 34 */
#define MC79_RDBFL35	(*( MC0_RDBFL0_type *) 0xf0065fe6u)	/* Read Data and Bit Flip Register 35 */
#define MC79_RDBFL36	(*( MC0_RDBFL0_type *) 0xf0065fe8u)	/* Read Data and Bit Flip Register 36 */
#define MC79_RDBFL37	(*( MC0_RDBFL0_type *) 0xf0065feau)	/* Read Data and Bit Flip Register 37 */
#define MC79_RDBFL38	(*( MC0_RDBFL0_type *) 0xf0065fecu)	/* Read Data and Bit Flip Register 38 */
#define MC79_RDBFL39	(*( MC0_RDBFL0_type *) 0xf0065feeu)	/* Read Data and Bit Flip Register 39 */
#define MC79_RDBFL4	(*( MC0_RDBFL0_type *) 0xf0065fa8u)	/* Read Data and Bit Flip Register 4 */
#define MC79_RDBFL5	(*( MC0_RDBFL0_type *) 0xf0065faau)	/* Read Data and Bit Flip Register 5 */
#define MC79_RDBFL6	(*( MC0_RDBFL0_type *) 0xf0065facu)	/* Read Data and Bit Flip Register 6 */
#define MC79_RDBFL7	(*( MC0_RDBFL0_type *) 0xf0065faeu)	/* Read Data and Bit Flip Register 7 */
#define MC79_RDBFL8	(*( MC0_RDBFL0_type *) 0xf0065fb0u)	/* Read Data and Bit Flip Register 8 */
#define MC79_RDBFL9	(*( MC0_RDBFL0_type *) 0xf0065fb2u)	/* Read Data and Bit Flip Register 9 */
#define MC7_RDBFL0	(*( MC0_RDBFL0_type *) 0xf00617a0u)	/* Read Data and Bit Flip Register 0 */
#define MC7_RDBFL1	(*( MC0_RDBFL0_type *) 0xf00617a2u)	/* Read Data and Bit Flip Register 1 */
#define MC7_RDBFL10	(*( MC0_RDBFL0_type *) 0xf00617b4u)	/* Read Data and Bit Flip Register 10 */
#define MC7_RDBFL11	(*( MC0_RDBFL0_type *) 0xf00617b6u)	/* Read Data and Bit Flip Register 11 */
#define MC7_RDBFL12	(*( MC0_RDBFL0_type *) 0xf00617b8u)	/* Read Data and Bit Flip Register 12 */
#define MC7_RDBFL13	(*( MC0_RDBFL0_type *) 0xf00617bau)	/* Read Data and Bit Flip Register 13 */
#define MC7_RDBFL14	(*( MC0_RDBFL0_type *) 0xf00617bcu)	/* Read Data and Bit Flip Register 14 */
#define MC7_RDBFL15	(*( MC0_RDBFL0_type *) 0xf00617beu)	/* Read Data and Bit Flip Register 15 */
#define MC7_RDBFL16	(*( MC0_RDBFL0_type *) 0xf00617c0u)	/* Read Data and Bit Flip Register 16 */
#define MC7_RDBFL17	(*( MC0_RDBFL0_type *) 0xf00617c2u)	/* Read Data and Bit Flip Register 17 */
#define MC7_RDBFL18	(*( MC0_RDBFL0_type *) 0xf00617c4u)	/* Read Data and Bit Flip Register 18 */
#define MC7_RDBFL19	(*( MC0_RDBFL0_type *) 0xf00617c6u)	/* Read Data and Bit Flip Register 19 */
#define MC7_RDBFL2	(*( MC0_RDBFL0_type *) 0xf00617a4u)	/* Read Data and Bit Flip Register 2 */
#define MC7_RDBFL20	(*( MC0_RDBFL0_type *) 0xf00617c8u)	/* Read Data and Bit Flip Register 20 */
#define MC7_RDBFL21	(*( MC0_RDBFL0_type *) 0xf00617cau)	/* Read Data and Bit Flip Register 21 */
#define MC7_RDBFL22	(*( MC0_RDBFL0_type *) 0xf00617ccu)	/* Read Data and Bit Flip Register 22 */
#define MC7_RDBFL23	(*( MC0_RDBFL0_type *) 0xf00617ceu)	/* Read Data and Bit Flip Register 23 */
#define MC7_RDBFL24	(*( MC0_RDBFL0_type *) 0xf00617d0u)	/* Read Data and Bit Flip Register 24 */
#define MC7_RDBFL25	(*( MC0_RDBFL0_type *) 0xf00617d2u)	/* Read Data and Bit Flip Register 25 */
#define MC7_RDBFL26	(*( MC0_RDBFL0_type *) 0xf00617d4u)	/* Read Data and Bit Flip Register 26 */
#define MC7_RDBFL27	(*( MC0_RDBFL0_type *) 0xf00617d6u)	/* Read Data and Bit Flip Register 27 */
#define MC7_RDBFL28	(*( MC0_RDBFL0_type *) 0xf00617d8u)	/* Read Data and Bit Flip Register 28 */
#define MC7_RDBFL29	(*( MC0_RDBFL0_type *) 0xf00617dau)	/* Read Data and Bit Flip Register 29 */
#define MC7_RDBFL3	(*( MC0_RDBFL0_type *) 0xf00617a6u)	/* Read Data and Bit Flip Register 3 */
#define MC7_RDBFL30	(*( MC0_RDBFL0_type *) 0xf00617dcu)	/* Read Data and Bit Flip Register 30 */
#define MC7_RDBFL31	(*( MC0_RDBFL0_type *) 0xf00617deu)	/* Read Data and Bit Flip Register 31 */
#define MC7_RDBFL32	(*( MC0_RDBFL0_type *) 0xf00617e0u)	/* Read Data and Bit Flip Register 32 */
#define MC7_RDBFL33	(*( MC0_RDBFL0_type *) 0xf00617e2u)	/* Read Data and Bit Flip Register 33 */
#define MC7_RDBFL34	(*( MC0_RDBFL0_type *) 0xf00617e4u)	/* Read Data and Bit Flip Register 34 */
#define MC7_RDBFL35	(*( MC0_RDBFL0_type *) 0xf00617e6u)	/* Read Data and Bit Flip Register 35 */
#define MC7_RDBFL36	(*( MC0_RDBFL0_type *) 0xf00617e8u)	/* Read Data and Bit Flip Register 36 */
#define MC7_RDBFL37	(*( MC0_RDBFL0_type *) 0xf00617eau)	/* Read Data and Bit Flip Register 37 */
#define MC7_RDBFL38	(*( MC0_RDBFL0_type *) 0xf00617ecu)	/* Read Data and Bit Flip Register 38 */
#define MC7_RDBFL39	(*( MC0_RDBFL0_type *) 0xf00617eeu)	/* Read Data and Bit Flip Register 39 */
#define MC7_RDBFL4	(*( MC0_RDBFL0_type *) 0xf00617a8u)	/* Read Data and Bit Flip Register 4 */
#define MC7_RDBFL5	(*( MC0_RDBFL0_type *) 0xf00617aau)	/* Read Data and Bit Flip Register 5 */
#define MC7_RDBFL6	(*( MC0_RDBFL0_type *) 0xf00617acu)	/* Read Data and Bit Flip Register 6 */
#define MC7_RDBFL7	(*( MC0_RDBFL0_type *) 0xf00617aeu)	/* Read Data and Bit Flip Register 7 */
#define MC7_RDBFL8	(*( MC0_RDBFL0_type *) 0xf00617b0u)	/* Read Data and Bit Flip Register 8 */
#define MC7_RDBFL9	(*( MC0_RDBFL0_type *) 0xf00617b2u)	/* Read Data and Bit Flip Register 9 */
#define MC80_RDBFL0	(*( MC0_RDBFL0_type *) 0xf00660a0u)	/* Read Data and Bit Flip Register 0 */
#define MC80_RDBFL1	(*( MC0_RDBFL0_type *) 0xf00660a2u)	/* Read Data and Bit Flip Register 1 */
#define MC80_RDBFL10	(*( MC0_RDBFL0_type *) 0xf00660b4u)	/* Read Data and Bit Flip Register 10 */
#define MC80_RDBFL11	(*( MC0_RDBFL0_type *) 0xf00660b6u)	/* Read Data and Bit Flip Register 11 */
#define MC80_RDBFL12	(*( MC0_RDBFL0_type *) 0xf00660b8u)	/* Read Data and Bit Flip Register 12 */
#define MC80_RDBFL13	(*( MC0_RDBFL0_type *) 0xf00660bau)	/* Read Data and Bit Flip Register 13 */
#define MC80_RDBFL14	(*( MC0_RDBFL0_type *) 0xf00660bcu)	/* Read Data and Bit Flip Register 14 */
#define MC80_RDBFL15	(*( MC0_RDBFL0_type *) 0xf00660beu)	/* Read Data and Bit Flip Register 15 */
#define MC80_RDBFL16	(*( MC0_RDBFL0_type *) 0xf00660c0u)	/* Read Data and Bit Flip Register 16 */
#define MC80_RDBFL17	(*( MC0_RDBFL0_type *) 0xf00660c2u)	/* Read Data and Bit Flip Register 17 */
#define MC80_RDBFL18	(*( MC0_RDBFL0_type *) 0xf00660c4u)	/* Read Data and Bit Flip Register 18 */
#define MC80_RDBFL19	(*( MC0_RDBFL0_type *) 0xf00660c6u)	/* Read Data and Bit Flip Register 19 */
#define MC80_RDBFL2	(*( MC0_RDBFL0_type *) 0xf00660a4u)	/* Read Data and Bit Flip Register 2 */
#define MC80_RDBFL20	(*( MC0_RDBFL0_type *) 0xf00660c8u)	/* Read Data and Bit Flip Register 20 */
#define MC80_RDBFL21	(*( MC0_RDBFL0_type *) 0xf00660cau)	/* Read Data and Bit Flip Register 21 */
#define MC80_RDBFL22	(*( MC0_RDBFL0_type *) 0xf00660ccu)	/* Read Data and Bit Flip Register 22 */
#define MC80_RDBFL23	(*( MC0_RDBFL0_type *) 0xf00660ceu)	/* Read Data and Bit Flip Register 23 */
#define MC80_RDBFL24	(*( MC0_RDBFL0_type *) 0xf00660d0u)	/* Read Data and Bit Flip Register 24 */
#define MC80_RDBFL25	(*( MC0_RDBFL0_type *) 0xf00660d2u)	/* Read Data and Bit Flip Register 25 */
#define MC80_RDBFL26	(*( MC0_RDBFL0_type *) 0xf00660d4u)	/* Read Data and Bit Flip Register 26 */
#define MC80_RDBFL27	(*( MC0_RDBFL0_type *) 0xf00660d6u)	/* Read Data and Bit Flip Register 27 */
#define MC80_RDBFL28	(*( MC0_RDBFL0_type *) 0xf00660d8u)	/* Read Data and Bit Flip Register 28 */
#define MC80_RDBFL29	(*( MC0_RDBFL0_type *) 0xf00660dau)	/* Read Data and Bit Flip Register 29 */
#define MC80_RDBFL3	(*( MC0_RDBFL0_type *) 0xf00660a6u)	/* Read Data and Bit Flip Register 3 */
#define MC80_RDBFL30	(*( MC0_RDBFL0_type *) 0xf00660dcu)	/* Read Data and Bit Flip Register 30 */
#define MC80_RDBFL31	(*( MC0_RDBFL0_type *) 0xf00660deu)	/* Read Data and Bit Flip Register 31 */
#define MC80_RDBFL32	(*( MC0_RDBFL0_type *) 0xf00660e0u)	/* Read Data and Bit Flip Register 32 */
#define MC80_RDBFL33	(*( MC0_RDBFL0_type *) 0xf00660e2u)	/* Read Data and Bit Flip Register 33 */
#define MC80_RDBFL34	(*( MC0_RDBFL0_type *) 0xf00660e4u)	/* Read Data and Bit Flip Register 34 */
#define MC80_RDBFL35	(*( MC0_RDBFL0_type *) 0xf00660e6u)	/* Read Data and Bit Flip Register 35 */
#define MC80_RDBFL36	(*( MC0_RDBFL0_type *) 0xf00660e8u)	/* Read Data and Bit Flip Register 36 */
#define MC80_RDBFL37	(*( MC0_RDBFL0_type *) 0xf00660eau)	/* Read Data and Bit Flip Register 37 */
#define MC80_RDBFL38	(*( MC0_RDBFL0_type *) 0xf00660ecu)	/* Read Data and Bit Flip Register 38 */
#define MC80_RDBFL39	(*( MC0_RDBFL0_type *) 0xf00660eeu)	/* Read Data and Bit Flip Register 39 */
#define MC80_RDBFL4	(*( MC0_RDBFL0_type *) 0xf00660a8u)	/* Read Data and Bit Flip Register 4 */
#define MC80_RDBFL5	(*( MC0_RDBFL0_type *) 0xf00660aau)	/* Read Data and Bit Flip Register 5 */
#define MC80_RDBFL6	(*( MC0_RDBFL0_type *) 0xf00660acu)	/* Read Data and Bit Flip Register 6 */
#define MC80_RDBFL7	(*( MC0_RDBFL0_type *) 0xf00660aeu)	/* Read Data and Bit Flip Register 7 */
#define MC80_RDBFL8	(*( MC0_RDBFL0_type *) 0xf00660b0u)	/* Read Data and Bit Flip Register 8 */
#define MC80_RDBFL9	(*( MC0_RDBFL0_type *) 0xf00660b2u)	/* Read Data and Bit Flip Register 9 */
#define MC81_RDBFL0	(*( MC0_RDBFL0_type *) 0xf00661a0u)	/* Read Data and Bit Flip Register 0 */
#define MC81_RDBFL1	(*( MC0_RDBFL0_type *) 0xf00661a2u)	/* Read Data and Bit Flip Register 1 */
#define MC81_RDBFL10	(*( MC0_RDBFL0_type *) 0xf00661b4u)	/* Read Data and Bit Flip Register 10 */
#define MC81_RDBFL11	(*( MC0_RDBFL0_type *) 0xf00661b6u)	/* Read Data and Bit Flip Register 11 */
#define MC81_RDBFL12	(*( MC0_RDBFL0_type *) 0xf00661b8u)	/* Read Data and Bit Flip Register 12 */
#define MC81_RDBFL13	(*( MC0_RDBFL0_type *) 0xf00661bau)	/* Read Data and Bit Flip Register 13 */
#define MC81_RDBFL14	(*( MC0_RDBFL0_type *) 0xf00661bcu)	/* Read Data and Bit Flip Register 14 */
#define MC81_RDBFL15	(*( MC0_RDBFL0_type *) 0xf00661beu)	/* Read Data and Bit Flip Register 15 */
#define MC81_RDBFL16	(*( MC0_RDBFL0_type *) 0xf00661c0u)	/* Read Data and Bit Flip Register 16 */
#define MC81_RDBFL17	(*( MC0_RDBFL0_type *) 0xf00661c2u)	/* Read Data and Bit Flip Register 17 */
#define MC81_RDBFL18	(*( MC0_RDBFL0_type *) 0xf00661c4u)	/* Read Data and Bit Flip Register 18 */
#define MC81_RDBFL19	(*( MC0_RDBFL0_type *) 0xf00661c6u)	/* Read Data and Bit Flip Register 19 */
#define MC81_RDBFL2	(*( MC0_RDBFL0_type *) 0xf00661a4u)	/* Read Data and Bit Flip Register 2 */
#define MC81_RDBFL20	(*( MC0_RDBFL0_type *) 0xf00661c8u)	/* Read Data and Bit Flip Register 20 */
#define MC81_RDBFL21	(*( MC0_RDBFL0_type *) 0xf00661cau)	/* Read Data and Bit Flip Register 21 */
#define MC81_RDBFL22	(*( MC0_RDBFL0_type *) 0xf00661ccu)	/* Read Data and Bit Flip Register 22 */
#define MC81_RDBFL23	(*( MC0_RDBFL0_type *) 0xf00661ceu)	/* Read Data and Bit Flip Register 23 */
#define MC81_RDBFL24	(*( MC0_RDBFL0_type *) 0xf00661d0u)	/* Read Data and Bit Flip Register 24 */
#define MC81_RDBFL25	(*( MC0_RDBFL0_type *) 0xf00661d2u)	/* Read Data and Bit Flip Register 25 */
#define MC81_RDBFL26	(*( MC0_RDBFL0_type *) 0xf00661d4u)	/* Read Data and Bit Flip Register 26 */
#define MC81_RDBFL27	(*( MC0_RDBFL0_type *) 0xf00661d6u)	/* Read Data and Bit Flip Register 27 */
#define MC81_RDBFL28	(*( MC0_RDBFL0_type *) 0xf00661d8u)	/* Read Data and Bit Flip Register 28 */
#define MC81_RDBFL29	(*( MC0_RDBFL0_type *) 0xf00661dau)	/* Read Data and Bit Flip Register 29 */
#define MC81_RDBFL3	(*( MC0_RDBFL0_type *) 0xf00661a6u)	/* Read Data and Bit Flip Register 3 */
#define MC81_RDBFL30	(*( MC0_RDBFL0_type *) 0xf00661dcu)	/* Read Data and Bit Flip Register 30 */
#define MC81_RDBFL31	(*( MC0_RDBFL0_type *) 0xf00661deu)	/* Read Data and Bit Flip Register 31 */
#define MC81_RDBFL32	(*( MC0_RDBFL0_type *) 0xf00661e0u)	/* Read Data and Bit Flip Register 32 */
#define MC81_RDBFL33	(*( MC0_RDBFL0_type *) 0xf00661e2u)	/* Read Data and Bit Flip Register 33 */
#define MC81_RDBFL34	(*( MC0_RDBFL0_type *) 0xf00661e4u)	/* Read Data and Bit Flip Register 34 */
#define MC81_RDBFL35	(*( MC0_RDBFL0_type *) 0xf00661e6u)	/* Read Data and Bit Flip Register 35 */
#define MC81_RDBFL36	(*( MC0_RDBFL0_type *) 0xf00661e8u)	/* Read Data and Bit Flip Register 36 */
#define MC81_RDBFL37	(*( MC0_RDBFL0_type *) 0xf00661eau)	/* Read Data and Bit Flip Register 37 */
#define MC81_RDBFL38	(*( MC0_RDBFL0_type *) 0xf00661ecu)	/* Read Data and Bit Flip Register 38 */
#define MC81_RDBFL39	(*( MC0_RDBFL0_type *) 0xf00661eeu)	/* Read Data and Bit Flip Register 39 */
#define MC81_RDBFL4	(*( MC0_RDBFL0_type *) 0xf00661a8u)	/* Read Data and Bit Flip Register 4 */
#define MC81_RDBFL5	(*( MC0_RDBFL0_type *) 0xf00661aau)	/* Read Data and Bit Flip Register 5 */
#define MC81_RDBFL6	(*( MC0_RDBFL0_type *) 0xf00661acu)	/* Read Data and Bit Flip Register 6 */
#define MC81_RDBFL7	(*( MC0_RDBFL0_type *) 0xf00661aeu)	/* Read Data and Bit Flip Register 7 */
#define MC81_RDBFL8	(*( MC0_RDBFL0_type *) 0xf00661b0u)	/* Read Data and Bit Flip Register 8 */
#define MC81_RDBFL9	(*( MC0_RDBFL0_type *) 0xf00661b2u)	/* Read Data and Bit Flip Register 9 */
#define MC82_RDBFL0	(*( MC0_RDBFL0_type *) 0xf00662a0u)	/* Read Data and Bit Flip Register 0 */
#define MC82_RDBFL1	(*( MC0_RDBFL0_type *) 0xf00662a2u)	/* Read Data and Bit Flip Register 1 */
#define MC82_RDBFL10	(*( MC0_RDBFL0_type *) 0xf00662b4u)	/* Read Data and Bit Flip Register 10 */
#define MC82_RDBFL11	(*( MC0_RDBFL0_type *) 0xf00662b6u)	/* Read Data and Bit Flip Register 11 */
#define MC82_RDBFL12	(*( MC0_RDBFL0_type *) 0xf00662b8u)	/* Read Data and Bit Flip Register 12 */
#define MC82_RDBFL13	(*( MC0_RDBFL0_type *) 0xf00662bau)	/* Read Data and Bit Flip Register 13 */
#define MC82_RDBFL14	(*( MC0_RDBFL0_type *) 0xf00662bcu)	/* Read Data and Bit Flip Register 14 */
#define MC82_RDBFL15	(*( MC0_RDBFL0_type *) 0xf00662beu)	/* Read Data and Bit Flip Register 15 */
#define MC82_RDBFL16	(*( MC0_RDBFL0_type *) 0xf00662c0u)	/* Read Data and Bit Flip Register 16 */
#define MC82_RDBFL17	(*( MC0_RDBFL0_type *) 0xf00662c2u)	/* Read Data and Bit Flip Register 17 */
#define MC82_RDBFL18	(*( MC0_RDBFL0_type *) 0xf00662c4u)	/* Read Data and Bit Flip Register 18 */
#define MC82_RDBFL19	(*( MC0_RDBFL0_type *) 0xf00662c6u)	/* Read Data and Bit Flip Register 19 */
#define MC82_RDBFL2	(*( MC0_RDBFL0_type *) 0xf00662a4u)	/* Read Data and Bit Flip Register 2 */
#define MC82_RDBFL20	(*( MC0_RDBFL0_type *) 0xf00662c8u)	/* Read Data and Bit Flip Register 20 */
#define MC82_RDBFL21	(*( MC0_RDBFL0_type *) 0xf00662cau)	/* Read Data and Bit Flip Register 21 */
#define MC82_RDBFL22	(*( MC0_RDBFL0_type *) 0xf00662ccu)	/* Read Data and Bit Flip Register 22 */
#define MC82_RDBFL23	(*( MC0_RDBFL0_type *) 0xf00662ceu)	/* Read Data and Bit Flip Register 23 */
#define MC82_RDBFL24	(*( MC0_RDBFL0_type *) 0xf00662d0u)	/* Read Data and Bit Flip Register 24 */
#define MC82_RDBFL25	(*( MC0_RDBFL0_type *) 0xf00662d2u)	/* Read Data and Bit Flip Register 25 */
#define MC82_RDBFL26	(*( MC0_RDBFL0_type *) 0xf00662d4u)	/* Read Data and Bit Flip Register 26 */
#define MC82_RDBFL27	(*( MC0_RDBFL0_type *) 0xf00662d6u)	/* Read Data and Bit Flip Register 27 */
#define MC82_RDBFL28	(*( MC0_RDBFL0_type *) 0xf00662d8u)	/* Read Data and Bit Flip Register 28 */
#define MC82_RDBFL29	(*( MC0_RDBFL0_type *) 0xf00662dau)	/* Read Data and Bit Flip Register 29 */
#define MC82_RDBFL3	(*( MC0_RDBFL0_type *) 0xf00662a6u)	/* Read Data and Bit Flip Register 3 */
#define MC82_RDBFL30	(*( MC0_RDBFL0_type *) 0xf00662dcu)	/* Read Data and Bit Flip Register 30 */
#define MC82_RDBFL31	(*( MC0_RDBFL0_type *) 0xf00662deu)	/* Read Data and Bit Flip Register 31 */
#define MC82_RDBFL32	(*( MC0_RDBFL0_type *) 0xf00662e0u)	/* Read Data and Bit Flip Register 32 */
#define MC82_RDBFL33	(*( MC0_RDBFL0_type *) 0xf00662e2u)	/* Read Data and Bit Flip Register 33 */
#define MC82_RDBFL34	(*( MC0_RDBFL0_type *) 0xf00662e4u)	/* Read Data and Bit Flip Register 34 */
#define MC82_RDBFL35	(*( MC0_RDBFL0_type *) 0xf00662e6u)	/* Read Data and Bit Flip Register 35 */
#define MC82_RDBFL36	(*( MC0_RDBFL0_type *) 0xf00662e8u)	/* Read Data and Bit Flip Register 36 */
#define MC82_RDBFL37	(*( MC0_RDBFL0_type *) 0xf00662eau)	/* Read Data and Bit Flip Register 37 */
#define MC82_RDBFL38	(*( MC0_RDBFL0_type *) 0xf00662ecu)	/* Read Data and Bit Flip Register 38 */
#define MC82_RDBFL39	(*( MC0_RDBFL0_type *) 0xf00662eeu)	/* Read Data and Bit Flip Register 39 */
#define MC82_RDBFL4	(*( MC0_RDBFL0_type *) 0xf00662a8u)	/* Read Data and Bit Flip Register 4 */
#define MC82_RDBFL5	(*( MC0_RDBFL0_type *) 0xf00662aau)	/* Read Data and Bit Flip Register 5 */
#define MC82_RDBFL6	(*( MC0_RDBFL0_type *) 0xf00662acu)	/* Read Data and Bit Flip Register 6 */
#define MC82_RDBFL7	(*( MC0_RDBFL0_type *) 0xf00662aeu)	/* Read Data and Bit Flip Register 7 */
#define MC82_RDBFL8	(*( MC0_RDBFL0_type *) 0xf00662b0u)	/* Read Data and Bit Flip Register 8 */
#define MC82_RDBFL9	(*( MC0_RDBFL0_type *) 0xf00662b2u)	/* Read Data and Bit Flip Register 9 */
#define MC83_RDBFL0	(*( MC0_RDBFL0_type *) 0xf00663a0u)	/* Read Data and Bit Flip Register 0 */
#define MC83_RDBFL1	(*( MC0_RDBFL0_type *) 0xf00663a2u)	/* Read Data and Bit Flip Register 1 */
#define MC83_RDBFL10	(*( MC0_RDBFL0_type *) 0xf00663b4u)	/* Read Data and Bit Flip Register 10 */
#define MC83_RDBFL11	(*( MC0_RDBFL0_type *) 0xf00663b6u)	/* Read Data and Bit Flip Register 11 */
#define MC83_RDBFL12	(*( MC0_RDBFL0_type *) 0xf00663b8u)	/* Read Data and Bit Flip Register 12 */
#define MC83_RDBFL13	(*( MC0_RDBFL0_type *) 0xf00663bau)	/* Read Data and Bit Flip Register 13 */
#define MC83_RDBFL14	(*( MC0_RDBFL0_type *) 0xf00663bcu)	/* Read Data and Bit Flip Register 14 */
#define MC83_RDBFL15	(*( MC0_RDBFL0_type *) 0xf00663beu)	/* Read Data and Bit Flip Register 15 */
#define MC83_RDBFL16	(*( MC0_RDBFL0_type *) 0xf00663c0u)	/* Read Data and Bit Flip Register 16 */
#define MC83_RDBFL17	(*( MC0_RDBFL0_type *) 0xf00663c2u)	/* Read Data and Bit Flip Register 17 */
#define MC83_RDBFL18	(*( MC0_RDBFL0_type *) 0xf00663c4u)	/* Read Data and Bit Flip Register 18 */
#define MC83_RDBFL19	(*( MC0_RDBFL0_type *) 0xf00663c6u)	/* Read Data and Bit Flip Register 19 */
#define MC83_RDBFL2	(*( MC0_RDBFL0_type *) 0xf00663a4u)	/* Read Data and Bit Flip Register 2 */
#define MC83_RDBFL20	(*( MC0_RDBFL0_type *) 0xf00663c8u)	/* Read Data and Bit Flip Register 20 */
#define MC83_RDBFL21	(*( MC0_RDBFL0_type *) 0xf00663cau)	/* Read Data and Bit Flip Register 21 */
#define MC83_RDBFL22	(*( MC0_RDBFL0_type *) 0xf00663ccu)	/* Read Data and Bit Flip Register 22 */
#define MC83_RDBFL23	(*( MC0_RDBFL0_type *) 0xf00663ceu)	/* Read Data and Bit Flip Register 23 */
#define MC83_RDBFL24	(*( MC0_RDBFL0_type *) 0xf00663d0u)	/* Read Data and Bit Flip Register 24 */
#define MC83_RDBFL25	(*( MC0_RDBFL0_type *) 0xf00663d2u)	/* Read Data and Bit Flip Register 25 */
#define MC83_RDBFL26	(*( MC0_RDBFL0_type *) 0xf00663d4u)	/* Read Data and Bit Flip Register 26 */
#define MC83_RDBFL27	(*( MC0_RDBFL0_type *) 0xf00663d6u)	/* Read Data and Bit Flip Register 27 */
#define MC83_RDBFL28	(*( MC0_RDBFL0_type *) 0xf00663d8u)	/* Read Data and Bit Flip Register 28 */
#define MC83_RDBFL29	(*( MC0_RDBFL0_type *) 0xf00663dau)	/* Read Data and Bit Flip Register 29 */
#define MC83_RDBFL3	(*( MC0_RDBFL0_type *) 0xf00663a6u)	/* Read Data and Bit Flip Register 3 */
#define MC83_RDBFL30	(*( MC0_RDBFL0_type *) 0xf00663dcu)	/* Read Data and Bit Flip Register 30 */
#define MC83_RDBFL31	(*( MC0_RDBFL0_type *) 0xf00663deu)	/* Read Data and Bit Flip Register 31 */
#define MC83_RDBFL32	(*( MC0_RDBFL0_type *) 0xf00663e0u)	/* Read Data and Bit Flip Register 32 */
#define MC83_RDBFL33	(*( MC0_RDBFL0_type *) 0xf00663e2u)	/* Read Data and Bit Flip Register 33 */
#define MC83_RDBFL34	(*( MC0_RDBFL0_type *) 0xf00663e4u)	/* Read Data and Bit Flip Register 34 */
#define MC83_RDBFL35	(*( MC0_RDBFL0_type *) 0xf00663e6u)	/* Read Data and Bit Flip Register 35 */
#define MC83_RDBFL36	(*( MC0_RDBFL0_type *) 0xf00663e8u)	/* Read Data and Bit Flip Register 36 */
#define MC83_RDBFL37	(*( MC0_RDBFL0_type *) 0xf00663eau)	/* Read Data and Bit Flip Register 37 */
#define MC83_RDBFL38	(*( MC0_RDBFL0_type *) 0xf00663ecu)	/* Read Data and Bit Flip Register 38 */
#define MC83_RDBFL39	(*( MC0_RDBFL0_type *) 0xf00663eeu)	/* Read Data and Bit Flip Register 39 */
#define MC83_RDBFL4	(*( MC0_RDBFL0_type *) 0xf00663a8u)	/* Read Data and Bit Flip Register 4 */
#define MC83_RDBFL5	(*( MC0_RDBFL0_type *) 0xf00663aau)	/* Read Data and Bit Flip Register 5 */
#define MC83_RDBFL6	(*( MC0_RDBFL0_type *) 0xf00663acu)	/* Read Data and Bit Flip Register 6 */
#define MC83_RDBFL7	(*( MC0_RDBFL0_type *) 0xf00663aeu)	/* Read Data and Bit Flip Register 7 */
#define MC83_RDBFL8	(*( MC0_RDBFL0_type *) 0xf00663b0u)	/* Read Data and Bit Flip Register 8 */
#define MC83_RDBFL9	(*( MC0_RDBFL0_type *) 0xf00663b2u)	/* Read Data and Bit Flip Register 9 */
#define MC84_RDBFL0	(*( MC0_RDBFL0_type *) 0xf00664a0u)	/* Read Data and Bit Flip Register 0 */
#define MC84_RDBFL1	(*( MC0_RDBFL0_type *) 0xf00664a2u)	/* Read Data and Bit Flip Register 1 */
#define MC84_RDBFL10	(*( MC0_RDBFL0_type *) 0xf00664b4u)	/* Read Data and Bit Flip Register 10 */
#define MC84_RDBFL11	(*( MC0_RDBFL0_type *) 0xf00664b6u)	/* Read Data and Bit Flip Register 11 */
#define MC84_RDBFL12	(*( MC0_RDBFL0_type *) 0xf00664b8u)	/* Read Data and Bit Flip Register 12 */
#define MC84_RDBFL13	(*( MC0_RDBFL0_type *) 0xf00664bau)	/* Read Data and Bit Flip Register 13 */
#define MC84_RDBFL14	(*( MC0_RDBFL0_type *) 0xf00664bcu)	/* Read Data and Bit Flip Register 14 */
#define MC84_RDBFL15	(*( MC0_RDBFL0_type *) 0xf00664beu)	/* Read Data and Bit Flip Register 15 */
#define MC84_RDBFL16	(*( MC0_RDBFL0_type *) 0xf00664c0u)	/* Read Data and Bit Flip Register 16 */
#define MC84_RDBFL17	(*( MC0_RDBFL0_type *) 0xf00664c2u)	/* Read Data and Bit Flip Register 17 */
#define MC84_RDBFL18	(*( MC0_RDBFL0_type *) 0xf00664c4u)	/* Read Data and Bit Flip Register 18 */
#define MC84_RDBFL19	(*( MC0_RDBFL0_type *) 0xf00664c6u)	/* Read Data and Bit Flip Register 19 */
#define MC84_RDBFL2	(*( MC0_RDBFL0_type *) 0xf00664a4u)	/* Read Data and Bit Flip Register 2 */
#define MC84_RDBFL20	(*( MC0_RDBFL0_type *) 0xf00664c8u)	/* Read Data and Bit Flip Register 20 */
#define MC84_RDBFL21	(*( MC0_RDBFL0_type *) 0xf00664cau)	/* Read Data and Bit Flip Register 21 */
#define MC84_RDBFL22	(*( MC0_RDBFL0_type *) 0xf00664ccu)	/* Read Data and Bit Flip Register 22 */
#define MC84_RDBFL23	(*( MC0_RDBFL0_type *) 0xf00664ceu)	/* Read Data and Bit Flip Register 23 */
#define MC84_RDBFL24	(*( MC0_RDBFL0_type *) 0xf00664d0u)	/* Read Data and Bit Flip Register 24 */
#define MC84_RDBFL25	(*( MC0_RDBFL0_type *) 0xf00664d2u)	/* Read Data and Bit Flip Register 25 */
#define MC84_RDBFL26	(*( MC0_RDBFL0_type *) 0xf00664d4u)	/* Read Data and Bit Flip Register 26 */
#define MC84_RDBFL27	(*( MC0_RDBFL0_type *) 0xf00664d6u)	/* Read Data and Bit Flip Register 27 */
#define MC84_RDBFL28	(*( MC0_RDBFL0_type *) 0xf00664d8u)	/* Read Data and Bit Flip Register 28 */
#define MC84_RDBFL29	(*( MC0_RDBFL0_type *) 0xf00664dau)	/* Read Data and Bit Flip Register 29 */
#define MC84_RDBFL3	(*( MC0_RDBFL0_type *) 0xf00664a6u)	/* Read Data and Bit Flip Register 3 */
#define MC84_RDBFL30	(*( MC0_RDBFL0_type *) 0xf00664dcu)	/* Read Data and Bit Flip Register 30 */
#define MC84_RDBFL31	(*( MC0_RDBFL0_type *) 0xf00664deu)	/* Read Data and Bit Flip Register 31 */
#define MC84_RDBFL32	(*( MC0_RDBFL0_type *) 0xf00664e0u)	/* Read Data and Bit Flip Register 32 */
#define MC84_RDBFL33	(*( MC0_RDBFL0_type *) 0xf00664e2u)	/* Read Data and Bit Flip Register 33 */
#define MC84_RDBFL34	(*( MC0_RDBFL0_type *) 0xf00664e4u)	/* Read Data and Bit Flip Register 34 */
#define MC84_RDBFL35	(*( MC0_RDBFL0_type *) 0xf00664e6u)	/* Read Data and Bit Flip Register 35 */
#define MC84_RDBFL36	(*( MC0_RDBFL0_type *) 0xf00664e8u)	/* Read Data and Bit Flip Register 36 */
#define MC84_RDBFL37	(*( MC0_RDBFL0_type *) 0xf00664eau)	/* Read Data and Bit Flip Register 37 */
#define MC84_RDBFL38	(*( MC0_RDBFL0_type *) 0xf00664ecu)	/* Read Data and Bit Flip Register 38 */
#define MC84_RDBFL39	(*( MC0_RDBFL0_type *) 0xf00664eeu)	/* Read Data and Bit Flip Register 39 */
#define MC84_RDBFL4	(*( MC0_RDBFL0_type *) 0xf00664a8u)	/* Read Data and Bit Flip Register 4 */
#define MC84_RDBFL5	(*( MC0_RDBFL0_type *) 0xf00664aau)	/* Read Data and Bit Flip Register 5 */
#define MC84_RDBFL6	(*( MC0_RDBFL0_type *) 0xf00664acu)	/* Read Data and Bit Flip Register 6 */
#define MC84_RDBFL7	(*( MC0_RDBFL0_type *) 0xf00664aeu)	/* Read Data and Bit Flip Register 7 */
#define MC84_RDBFL8	(*( MC0_RDBFL0_type *) 0xf00664b0u)	/* Read Data and Bit Flip Register 8 */
#define MC84_RDBFL9	(*( MC0_RDBFL0_type *) 0xf00664b2u)	/* Read Data and Bit Flip Register 9 */
#define MC85_RDBFL0	(*( MC0_RDBFL0_type *) 0xf00665a0u)	/* Read Data and Bit Flip Register 0 */
#define MC85_RDBFL1	(*( MC0_RDBFL0_type *) 0xf00665a2u)	/* Read Data and Bit Flip Register 1 */
#define MC85_RDBFL10	(*( MC0_RDBFL0_type *) 0xf00665b4u)	/* Read Data and Bit Flip Register 10 */
#define MC85_RDBFL11	(*( MC0_RDBFL0_type *) 0xf00665b6u)	/* Read Data and Bit Flip Register 11 */
#define MC85_RDBFL12	(*( MC0_RDBFL0_type *) 0xf00665b8u)	/* Read Data and Bit Flip Register 12 */
#define MC85_RDBFL13	(*( MC0_RDBFL0_type *) 0xf00665bau)	/* Read Data and Bit Flip Register 13 */
#define MC85_RDBFL14	(*( MC0_RDBFL0_type *) 0xf00665bcu)	/* Read Data and Bit Flip Register 14 */
#define MC85_RDBFL15	(*( MC0_RDBFL0_type *) 0xf00665beu)	/* Read Data and Bit Flip Register 15 */
#define MC85_RDBFL16	(*( MC0_RDBFL0_type *) 0xf00665c0u)	/* Read Data and Bit Flip Register 16 */
#define MC85_RDBFL17	(*( MC0_RDBFL0_type *) 0xf00665c2u)	/* Read Data and Bit Flip Register 17 */
#define MC85_RDBFL18	(*( MC0_RDBFL0_type *) 0xf00665c4u)	/* Read Data and Bit Flip Register 18 */
#define MC85_RDBFL19	(*( MC0_RDBFL0_type *) 0xf00665c6u)	/* Read Data and Bit Flip Register 19 */
#define MC85_RDBFL2	(*( MC0_RDBFL0_type *) 0xf00665a4u)	/* Read Data and Bit Flip Register 2 */
#define MC85_RDBFL20	(*( MC0_RDBFL0_type *) 0xf00665c8u)	/* Read Data and Bit Flip Register 20 */
#define MC85_RDBFL21	(*( MC0_RDBFL0_type *) 0xf00665cau)	/* Read Data and Bit Flip Register 21 */
#define MC85_RDBFL22	(*( MC0_RDBFL0_type *) 0xf00665ccu)	/* Read Data and Bit Flip Register 22 */
#define MC85_RDBFL23	(*( MC0_RDBFL0_type *) 0xf00665ceu)	/* Read Data and Bit Flip Register 23 */
#define MC85_RDBFL24	(*( MC0_RDBFL0_type *) 0xf00665d0u)	/* Read Data and Bit Flip Register 24 */
#define MC85_RDBFL25	(*( MC0_RDBFL0_type *) 0xf00665d2u)	/* Read Data and Bit Flip Register 25 */
#define MC85_RDBFL26	(*( MC0_RDBFL0_type *) 0xf00665d4u)	/* Read Data and Bit Flip Register 26 */
#define MC85_RDBFL27	(*( MC0_RDBFL0_type *) 0xf00665d6u)	/* Read Data and Bit Flip Register 27 */
#define MC85_RDBFL28	(*( MC0_RDBFL0_type *) 0xf00665d8u)	/* Read Data and Bit Flip Register 28 */
#define MC85_RDBFL29	(*( MC0_RDBFL0_type *) 0xf00665dau)	/* Read Data and Bit Flip Register 29 */
#define MC85_RDBFL3	(*( MC0_RDBFL0_type *) 0xf00665a6u)	/* Read Data and Bit Flip Register 3 */
#define MC85_RDBFL30	(*( MC0_RDBFL0_type *) 0xf00665dcu)	/* Read Data and Bit Flip Register 30 */
#define MC85_RDBFL31	(*( MC0_RDBFL0_type *) 0xf00665deu)	/* Read Data and Bit Flip Register 31 */
#define MC85_RDBFL32	(*( MC0_RDBFL0_type *) 0xf00665e0u)	/* Read Data and Bit Flip Register 32 */
#define MC85_RDBFL33	(*( MC0_RDBFL0_type *) 0xf00665e2u)	/* Read Data and Bit Flip Register 33 */
#define MC85_RDBFL34	(*( MC0_RDBFL0_type *) 0xf00665e4u)	/* Read Data and Bit Flip Register 34 */
#define MC85_RDBFL35	(*( MC0_RDBFL0_type *) 0xf00665e6u)	/* Read Data and Bit Flip Register 35 */
#define MC85_RDBFL36	(*( MC0_RDBFL0_type *) 0xf00665e8u)	/* Read Data and Bit Flip Register 36 */
#define MC85_RDBFL37	(*( MC0_RDBFL0_type *) 0xf00665eau)	/* Read Data and Bit Flip Register 37 */
#define MC85_RDBFL38	(*( MC0_RDBFL0_type *) 0xf00665ecu)	/* Read Data and Bit Flip Register 38 */
#define MC85_RDBFL39	(*( MC0_RDBFL0_type *) 0xf00665eeu)	/* Read Data and Bit Flip Register 39 */
#define MC85_RDBFL4	(*( MC0_RDBFL0_type *) 0xf00665a8u)	/* Read Data and Bit Flip Register 4 */
#define MC85_RDBFL5	(*( MC0_RDBFL0_type *) 0xf00665aau)	/* Read Data and Bit Flip Register 5 */
#define MC85_RDBFL6	(*( MC0_RDBFL0_type *) 0xf00665acu)	/* Read Data and Bit Flip Register 6 */
#define MC85_RDBFL7	(*( MC0_RDBFL0_type *) 0xf00665aeu)	/* Read Data and Bit Flip Register 7 */
#define MC85_RDBFL8	(*( MC0_RDBFL0_type *) 0xf00665b0u)	/* Read Data and Bit Flip Register 8 */
#define MC85_RDBFL9	(*( MC0_RDBFL0_type *) 0xf00665b2u)	/* Read Data and Bit Flip Register 9 */
#define MC86_RDBFL0	(*( MC0_RDBFL0_type *) 0xf00666a0u)	/* Read Data and Bit Flip Register 0 */
#define MC86_RDBFL1	(*( MC0_RDBFL0_type *) 0xf00666a2u)	/* Read Data and Bit Flip Register 1 */
#define MC86_RDBFL10	(*( MC0_RDBFL0_type *) 0xf00666b4u)	/* Read Data and Bit Flip Register 10 */
#define MC86_RDBFL11	(*( MC0_RDBFL0_type *) 0xf00666b6u)	/* Read Data and Bit Flip Register 11 */
#define MC86_RDBFL12	(*( MC0_RDBFL0_type *) 0xf00666b8u)	/* Read Data and Bit Flip Register 12 */
#define MC86_RDBFL13	(*( MC0_RDBFL0_type *) 0xf00666bau)	/* Read Data and Bit Flip Register 13 */
#define MC86_RDBFL14	(*( MC0_RDBFL0_type *) 0xf00666bcu)	/* Read Data and Bit Flip Register 14 */
#define MC86_RDBFL15	(*( MC0_RDBFL0_type *) 0xf00666beu)	/* Read Data and Bit Flip Register 15 */
#define MC86_RDBFL16	(*( MC0_RDBFL0_type *) 0xf00666c0u)	/* Read Data and Bit Flip Register 16 */
#define MC86_RDBFL17	(*( MC0_RDBFL0_type *) 0xf00666c2u)	/* Read Data and Bit Flip Register 17 */
#define MC86_RDBFL18	(*( MC0_RDBFL0_type *) 0xf00666c4u)	/* Read Data and Bit Flip Register 18 */
#define MC86_RDBFL19	(*( MC0_RDBFL0_type *) 0xf00666c6u)	/* Read Data and Bit Flip Register 19 */
#define MC86_RDBFL2	(*( MC0_RDBFL0_type *) 0xf00666a4u)	/* Read Data and Bit Flip Register 2 */
#define MC86_RDBFL20	(*( MC0_RDBFL0_type *) 0xf00666c8u)	/* Read Data and Bit Flip Register 20 */
#define MC86_RDBFL21	(*( MC0_RDBFL0_type *) 0xf00666cau)	/* Read Data and Bit Flip Register 21 */
#define MC86_RDBFL22	(*( MC0_RDBFL0_type *) 0xf00666ccu)	/* Read Data and Bit Flip Register 22 */
#define MC86_RDBFL23	(*( MC0_RDBFL0_type *) 0xf00666ceu)	/* Read Data and Bit Flip Register 23 */
#define MC86_RDBFL24	(*( MC0_RDBFL0_type *) 0xf00666d0u)	/* Read Data and Bit Flip Register 24 */
#define MC86_RDBFL25	(*( MC0_RDBFL0_type *) 0xf00666d2u)	/* Read Data and Bit Flip Register 25 */
#define MC86_RDBFL26	(*( MC0_RDBFL0_type *) 0xf00666d4u)	/* Read Data and Bit Flip Register 26 */
#define MC86_RDBFL27	(*( MC0_RDBFL0_type *) 0xf00666d6u)	/* Read Data and Bit Flip Register 27 */
#define MC86_RDBFL28	(*( MC0_RDBFL0_type *) 0xf00666d8u)	/* Read Data and Bit Flip Register 28 */
#define MC86_RDBFL29	(*( MC0_RDBFL0_type *) 0xf00666dau)	/* Read Data and Bit Flip Register 29 */
#define MC86_RDBFL3	(*( MC0_RDBFL0_type *) 0xf00666a6u)	/* Read Data and Bit Flip Register 3 */
#define MC86_RDBFL30	(*( MC0_RDBFL0_type *) 0xf00666dcu)	/* Read Data and Bit Flip Register 30 */
#define MC86_RDBFL31	(*( MC0_RDBFL0_type *) 0xf00666deu)	/* Read Data and Bit Flip Register 31 */
#define MC86_RDBFL32	(*( MC0_RDBFL0_type *) 0xf00666e0u)	/* Read Data and Bit Flip Register 32 */
#define MC86_RDBFL33	(*( MC0_RDBFL0_type *) 0xf00666e2u)	/* Read Data and Bit Flip Register 33 */
#define MC86_RDBFL34	(*( MC0_RDBFL0_type *) 0xf00666e4u)	/* Read Data and Bit Flip Register 34 */
#define MC86_RDBFL35	(*( MC0_RDBFL0_type *) 0xf00666e6u)	/* Read Data and Bit Flip Register 35 */
#define MC86_RDBFL36	(*( MC0_RDBFL0_type *) 0xf00666e8u)	/* Read Data and Bit Flip Register 36 */
#define MC86_RDBFL37	(*( MC0_RDBFL0_type *) 0xf00666eau)	/* Read Data and Bit Flip Register 37 */
#define MC86_RDBFL38	(*( MC0_RDBFL0_type *) 0xf00666ecu)	/* Read Data and Bit Flip Register 38 */
#define MC86_RDBFL39	(*( MC0_RDBFL0_type *) 0xf00666eeu)	/* Read Data and Bit Flip Register 39 */
#define MC86_RDBFL4	(*( MC0_RDBFL0_type *) 0xf00666a8u)	/* Read Data and Bit Flip Register 4 */
#define MC86_RDBFL5	(*( MC0_RDBFL0_type *) 0xf00666aau)	/* Read Data and Bit Flip Register 5 */
#define MC86_RDBFL6	(*( MC0_RDBFL0_type *) 0xf00666acu)	/* Read Data and Bit Flip Register 6 */
#define MC86_RDBFL7	(*( MC0_RDBFL0_type *) 0xf00666aeu)	/* Read Data and Bit Flip Register 7 */
#define MC86_RDBFL8	(*( MC0_RDBFL0_type *) 0xf00666b0u)	/* Read Data and Bit Flip Register 8 */
#define MC86_RDBFL9	(*( MC0_RDBFL0_type *) 0xf00666b2u)	/* Read Data and Bit Flip Register 9 */
#define MC87_RDBFL0	(*( MC0_RDBFL0_type *) 0xf00667a0u)	/* Read Data and Bit Flip Register 0 */
#define MC87_RDBFL1	(*( MC0_RDBFL0_type *) 0xf00667a2u)	/* Read Data and Bit Flip Register 1 */
#define MC87_RDBFL10	(*( MC0_RDBFL0_type *) 0xf00667b4u)	/* Read Data and Bit Flip Register 10 */
#define MC87_RDBFL11	(*( MC0_RDBFL0_type *) 0xf00667b6u)	/* Read Data and Bit Flip Register 11 */
#define MC87_RDBFL12	(*( MC0_RDBFL0_type *) 0xf00667b8u)	/* Read Data and Bit Flip Register 12 */
#define MC87_RDBFL13	(*( MC0_RDBFL0_type *) 0xf00667bau)	/* Read Data and Bit Flip Register 13 */
#define MC87_RDBFL14	(*( MC0_RDBFL0_type *) 0xf00667bcu)	/* Read Data and Bit Flip Register 14 */
#define MC87_RDBFL15	(*( MC0_RDBFL0_type *) 0xf00667beu)	/* Read Data and Bit Flip Register 15 */
#define MC87_RDBFL16	(*( MC0_RDBFL0_type *) 0xf00667c0u)	/* Read Data and Bit Flip Register 16 */
#define MC87_RDBFL17	(*( MC0_RDBFL0_type *) 0xf00667c2u)	/* Read Data and Bit Flip Register 17 */
#define MC87_RDBFL18	(*( MC0_RDBFL0_type *) 0xf00667c4u)	/* Read Data and Bit Flip Register 18 */
#define MC87_RDBFL19	(*( MC0_RDBFL0_type *) 0xf00667c6u)	/* Read Data and Bit Flip Register 19 */
#define MC87_RDBFL2	(*( MC0_RDBFL0_type *) 0xf00667a4u)	/* Read Data and Bit Flip Register 2 */
#define MC87_RDBFL20	(*( MC0_RDBFL0_type *) 0xf00667c8u)	/* Read Data and Bit Flip Register 20 */
#define MC87_RDBFL21	(*( MC0_RDBFL0_type *) 0xf00667cau)	/* Read Data and Bit Flip Register 21 */
#define MC87_RDBFL22	(*( MC0_RDBFL0_type *) 0xf00667ccu)	/* Read Data and Bit Flip Register 22 */
#define MC87_RDBFL23	(*( MC0_RDBFL0_type *) 0xf00667ceu)	/* Read Data and Bit Flip Register 23 */
#define MC87_RDBFL24	(*( MC0_RDBFL0_type *) 0xf00667d0u)	/* Read Data and Bit Flip Register 24 */
#define MC87_RDBFL25	(*( MC0_RDBFL0_type *) 0xf00667d2u)	/* Read Data and Bit Flip Register 25 */
#define MC87_RDBFL26	(*( MC0_RDBFL0_type *) 0xf00667d4u)	/* Read Data and Bit Flip Register 26 */
#define MC87_RDBFL27	(*( MC0_RDBFL0_type *) 0xf00667d6u)	/* Read Data and Bit Flip Register 27 */
#define MC87_RDBFL28	(*( MC0_RDBFL0_type *) 0xf00667d8u)	/* Read Data and Bit Flip Register 28 */
#define MC87_RDBFL29	(*( MC0_RDBFL0_type *) 0xf00667dau)	/* Read Data and Bit Flip Register 29 */
#define MC87_RDBFL3	(*( MC0_RDBFL0_type *) 0xf00667a6u)	/* Read Data and Bit Flip Register 3 */
#define MC87_RDBFL30	(*( MC0_RDBFL0_type *) 0xf00667dcu)	/* Read Data and Bit Flip Register 30 */
#define MC87_RDBFL31	(*( MC0_RDBFL0_type *) 0xf00667deu)	/* Read Data and Bit Flip Register 31 */
#define MC87_RDBFL32	(*( MC0_RDBFL0_type *) 0xf00667e0u)	/* Read Data and Bit Flip Register 32 */
#define MC87_RDBFL33	(*( MC0_RDBFL0_type *) 0xf00667e2u)	/* Read Data and Bit Flip Register 33 */
#define MC87_RDBFL34	(*( MC0_RDBFL0_type *) 0xf00667e4u)	/* Read Data and Bit Flip Register 34 */
#define MC87_RDBFL35	(*( MC0_RDBFL0_type *) 0xf00667e6u)	/* Read Data and Bit Flip Register 35 */
#define MC87_RDBFL36	(*( MC0_RDBFL0_type *) 0xf00667e8u)	/* Read Data and Bit Flip Register 36 */
#define MC87_RDBFL37	(*( MC0_RDBFL0_type *) 0xf00667eau)	/* Read Data and Bit Flip Register 37 */
#define MC87_RDBFL38	(*( MC0_RDBFL0_type *) 0xf00667ecu)	/* Read Data and Bit Flip Register 38 */
#define MC87_RDBFL39	(*( MC0_RDBFL0_type *) 0xf00667eeu)	/* Read Data and Bit Flip Register 39 */
#define MC87_RDBFL4	(*( MC0_RDBFL0_type *) 0xf00667a8u)	/* Read Data and Bit Flip Register 4 */
#define MC87_RDBFL5	(*( MC0_RDBFL0_type *) 0xf00667aau)	/* Read Data and Bit Flip Register 5 */
#define MC87_RDBFL6	(*( MC0_RDBFL0_type *) 0xf00667acu)	/* Read Data and Bit Flip Register 6 */
#define MC87_RDBFL7	(*( MC0_RDBFL0_type *) 0xf00667aeu)	/* Read Data and Bit Flip Register 7 */
#define MC87_RDBFL8	(*( MC0_RDBFL0_type *) 0xf00667b0u)	/* Read Data and Bit Flip Register 8 */
#define MC87_RDBFL9	(*( MC0_RDBFL0_type *) 0xf00667b2u)	/* Read Data and Bit Flip Register 9 */
#define MC8_RDBFL0	(*( MC0_RDBFL0_type *) 0xf00618a0u)	/* Read Data and Bit Flip Register 0 */
#define MC8_RDBFL1	(*( MC0_RDBFL0_type *) 0xf00618a2u)	/* Read Data and Bit Flip Register 1 */
#define MC8_RDBFL10	(*( MC0_RDBFL0_type *) 0xf00618b4u)	/* Read Data and Bit Flip Register 10 */
#define MC8_RDBFL11	(*( MC0_RDBFL0_type *) 0xf00618b6u)	/* Read Data and Bit Flip Register 11 */
#define MC8_RDBFL12	(*( MC0_RDBFL0_type *) 0xf00618b8u)	/* Read Data and Bit Flip Register 12 */
#define MC8_RDBFL13	(*( MC0_RDBFL0_type *) 0xf00618bau)	/* Read Data and Bit Flip Register 13 */
#define MC8_RDBFL14	(*( MC0_RDBFL0_type *) 0xf00618bcu)	/* Read Data and Bit Flip Register 14 */
#define MC8_RDBFL15	(*( MC0_RDBFL0_type *) 0xf00618beu)	/* Read Data and Bit Flip Register 15 */
#define MC8_RDBFL16	(*( MC0_RDBFL0_type *) 0xf00618c0u)	/* Read Data and Bit Flip Register 16 */
#define MC8_RDBFL17	(*( MC0_RDBFL0_type *) 0xf00618c2u)	/* Read Data and Bit Flip Register 17 */
#define MC8_RDBFL18	(*( MC0_RDBFL0_type *) 0xf00618c4u)	/* Read Data and Bit Flip Register 18 */
#define MC8_RDBFL19	(*( MC0_RDBFL0_type *) 0xf00618c6u)	/* Read Data and Bit Flip Register 19 */
#define MC8_RDBFL2	(*( MC0_RDBFL0_type *) 0xf00618a4u)	/* Read Data and Bit Flip Register 2 */
#define MC8_RDBFL20	(*( MC0_RDBFL0_type *) 0xf00618c8u)	/* Read Data and Bit Flip Register 20 */
#define MC8_RDBFL21	(*( MC0_RDBFL0_type *) 0xf00618cau)	/* Read Data and Bit Flip Register 21 */
#define MC8_RDBFL22	(*( MC0_RDBFL0_type *) 0xf00618ccu)	/* Read Data and Bit Flip Register 22 */
#define MC8_RDBFL23	(*( MC0_RDBFL0_type *) 0xf00618ceu)	/* Read Data and Bit Flip Register 23 */
#define MC8_RDBFL24	(*( MC0_RDBFL0_type *) 0xf00618d0u)	/* Read Data and Bit Flip Register 24 */
#define MC8_RDBFL25	(*( MC0_RDBFL0_type *) 0xf00618d2u)	/* Read Data and Bit Flip Register 25 */
#define MC8_RDBFL26	(*( MC0_RDBFL0_type *) 0xf00618d4u)	/* Read Data and Bit Flip Register 26 */
#define MC8_RDBFL27	(*( MC0_RDBFL0_type *) 0xf00618d6u)	/* Read Data and Bit Flip Register 27 */
#define MC8_RDBFL28	(*( MC0_RDBFL0_type *) 0xf00618d8u)	/* Read Data and Bit Flip Register 28 */
#define MC8_RDBFL29	(*( MC0_RDBFL0_type *) 0xf00618dau)	/* Read Data and Bit Flip Register 29 */
#define MC8_RDBFL3	(*( MC0_RDBFL0_type *) 0xf00618a6u)	/* Read Data and Bit Flip Register 3 */
#define MC8_RDBFL30	(*( MC0_RDBFL0_type *) 0xf00618dcu)	/* Read Data and Bit Flip Register 30 */
#define MC8_RDBFL31	(*( MC0_RDBFL0_type *) 0xf00618deu)	/* Read Data and Bit Flip Register 31 */
#define MC8_RDBFL32	(*( MC0_RDBFL0_type *) 0xf00618e0u)	/* Read Data and Bit Flip Register 32 */
#define MC8_RDBFL33	(*( MC0_RDBFL0_type *) 0xf00618e2u)	/* Read Data and Bit Flip Register 33 */
#define MC8_RDBFL34	(*( MC0_RDBFL0_type *) 0xf00618e4u)	/* Read Data and Bit Flip Register 34 */
#define MC8_RDBFL35	(*( MC0_RDBFL0_type *) 0xf00618e6u)	/* Read Data and Bit Flip Register 35 */
#define MC8_RDBFL36	(*( MC0_RDBFL0_type *) 0xf00618e8u)	/* Read Data and Bit Flip Register 36 */
#define MC8_RDBFL37	(*( MC0_RDBFL0_type *) 0xf00618eau)	/* Read Data and Bit Flip Register 37 */
#define MC8_RDBFL38	(*( MC0_RDBFL0_type *) 0xf00618ecu)	/* Read Data and Bit Flip Register 38 */
#define MC8_RDBFL39	(*( MC0_RDBFL0_type *) 0xf00618eeu)	/* Read Data and Bit Flip Register 39 */
#define MC8_RDBFL4	(*( MC0_RDBFL0_type *) 0xf00618a8u)	/* Read Data and Bit Flip Register 4 */
#define MC8_RDBFL5	(*( MC0_RDBFL0_type *) 0xf00618aau)	/* Read Data and Bit Flip Register 5 */
#define MC8_RDBFL6	(*( MC0_RDBFL0_type *) 0xf00618acu)	/* Read Data and Bit Flip Register 6 */
#define MC8_RDBFL7	(*( MC0_RDBFL0_type *) 0xf00618aeu)	/* Read Data and Bit Flip Register 7 */
#define MC8_RDBFL8	(*( MC0_RDBFL0_type *) 0xf00618b0u)	/* Read Data and Bit Flip Register 8 */
#define MC8_RDBFL9	(*( MC0_RDBFL0_type *) 0xf00618b2u)	/* Read Data and Bit Flip Register 9 */
#define MC9_RDBFL0	(*( MC0_RDBFL0_type *) 0xf00619a0u)	/* Read Data and Bit Flip Register 0 */
#define MC9_RDBFL1	(*( MC0_RDBFL0_type *) 0xf00619a2u)	/* Read Data and Bit Flip Register 1 */
#define MC9_RDBFL10	(*( MC0_RDBFL0_type *) 0xf00619b4u)	/* Read Data and Bit Flip Register 10 */
#define MC9_RDBFL11	(*( MC0_RDBFL0_type *) 0xf00619b6u)	/* Read Data and Bit Flip Register 11 */
#define MC9_RDBFL12	(*( MC0_RDBFL0_type *) 0xf00619b8u)	/* Read Data and Bit Flip Register 12 */
#define MC9_RDBFL13	(*( MC0_RDBFL0_type *) 0xf00619bau)	/* Read Data and Bit Flip Register 13 */
#define MC9_RDBFL14	(*( MC0_RDBFL0_type *) 0xf00619bcu)	/* Read Data and Bit Flip Register 14 */
#define MC9_RDBFL15	(*( MC0_RDBFL0_type *) 0xf00619beu)	/* Read Data and Bit Flip Register 15 */
#define MC9_RDBFL16	(*( MC0_RDBFL0_type *) 0xf00619c0u)	/* Read Data and Bit Flip Register 16 */
#define MC9_RDBFL17	(*( MC0_RDBFL0_type *) 0xf00619c2u)	/* Read Data and Bit Flip Register 17 */
#define MC9_RDBFL18	(*( MC0_RDBFL0_type *) 0xf00619c4u)	/* Read Data and Bit Flip Register 18 */
#define MC9_RDBFL19	(*( MC0_RDBFL0_type *) 0xf00619c6u)	/* Read Data and Bit Flip Register 19 */
#define MC9_RDBFL2	(*( MC0_RDBFL0_type *) 0xf00619a4u)	/* Read Data and Bit Flip Register 2 */
#define MC9_RDBFL20	(*( MC0_RDBFL0_type *) 0xf00619c8u)	/* Read Data and Bit Flip Register 20 */
#define MC9_RDBFL21	(*( MC0_RDBFL0_type *) 0xf00619cau)	/* Read Data and Bit Flip Register 21 */
#define MC9_RDBFL22	(*( MC0_RDBFL0_type *) 0xf00619ccu)	/* Read Data and Bit Flip Register 22 */
#define MC9_RDBFL23	(*( MC0_RDBFL0_type *) 0xf00619ceu)	/* Read Data and Bit Flip Register 23 */
#define MC9_RDBFL24	(*( MC0_RDBFL0_type *) 0xf00619d0u)	/* Read Data and Bit Flip Register 24 */
#define MC9_RDBFL25	(*( MC0_RDBFL0_type *) 0xf00619d2u)	/* Read Data and Bit Flip Register 25 */
#define MC9_RDBFL26	(*( MC0_RDBFL0_type *) 0xf00619d4u)	/* Read Data and Bit Flip Register 26 */
#define MC9_RDBFL27	(*( MC0_RDBFL0_type *) 0xf00619d6u)	/* Read Data and Bit Flip Register 27 */
#define MC9_RDBFL28	(*( MC0_RDBFL0_type *) 0xf00619d8u)	/* Read Data and Bit Flip Register 28 */
#define MC9_RDBFL29	(*( MC0_RDBFL0_type *) 0xf00619dau)	/* Read Data and Bit Flip Register 29 */
#define MC9_RDBFL3	(*( MC0_RDBFL0_type *) 0xf00619a6u)	/* Read Data and Bit Flip Register 3 */
#define MC9_RDBFL30	(*( MC0_RDBFL0_type *) 0xf00619dcu)	/* Read Data and Bit Flip Register 30 */
#define MC9_RDBFL31	(*( MC0_RDBFL0_type *) 0xf00619deu)	/* Read Data and Bit Flip Register 31 */
#define MC9_RDBFL32	(*( MC0_RDBFL0_type *) 0xf00619e0u)	/* Read Data and Bit Flip Register 32 */
#define MC9_RDBFL33	(*( MC0_RDBFL0_type *) 0xf00619e2u)	/* Read Data and Bit Flip Register 33 */
#define MC9_RDBFL34	(*( MC0_RDBFL0_type *) 0xf00619e4u)	/* Read Data and Bit Flip Register 34 */
#define MC9_RDBFL35	(*( MC0_RDBFL0_type *) 0xf00619e6u)	/* Read Data and Bit Flip Register 35 */
#define MC9_RDBFL36	(*( MC0_RDBFL0_type *) 0xf00619e8u)	/* Read Data and Bit Flip Register 36 */
#define MC9_RDBFL37	(*( MC0_RDBFL0_type *) 0xf00619eau)	/* Read Data and Bit Flip Register 37 */
#define MC9_RDBFL38	(*( MC0_RDBFL0_type *) 0xf00619ecu)	/* Read Data and Bit Flip Register 38 */
#define MC9_RDBFL39	(*( MC0_RDBFL0_type *) 0xf00619eeu)	/* Read Data and Bit Flip Register 39 */
#define MC9_RDBFL4	(*( MC0_RDBFL0_type *) 0xf00619a8u)	/* Read Data and Bit Flip Register 4 */
#define MC9_RDBFL5	(*( MC0_RDBFL0_type *) 0xf00619aau)	/* Read Data and Bit Flip Register 5 */
#define MC9_RDBFL6	(*( MC0_RDBFL0_type *) 0xf00619acu)	/* Read Data and Bit Flip Register 6 */
#define MC9_RDBFL7	(*( MC0_RDBFL0_type *) 0xf00619aeu)	/* Read Data and Bit Flip Register 7 */
#define MC9_RDBFL8	(*( MC0_RDBFL0_type *) 0xf00619b0u)	/* Read Data and Bit Flip Register 8 */
#define MC9_RDBFL9	(*( MC0_RDBFL0_type *) 0xf00619b2u)	/* Read Data and Bit Flip Register 9 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned __sfrbit16 REV_ID         : 16;	/* Revision Identifier */
	} B;
	short S;
	unsigned short US;

} MC0_REVID_type;
#define MC0_REVID	(*( MC0_REVID_type *) 0xf006100cu)	/* Revision ID Register */
#define MC10_REVID	(*( MC0_REVID_type *) 0xf0061a0cu)	/* Revision ID Register */
#define MC11_REVID	(*( MC0_REVID_type *) 0xf0061b0cu)	/* Revision ID Register */
#define MC12_REVID	(*( MC0_REVID_type *) 0xf0061c0cu)	/* Revision ID Register */
#define MC13_REVID	(*( MC0_REVID_type *) 0xf0061d0cu)	/* Revision ID Register */
#define MC14_REVID	(*( MC0_REVID_type *) 0xf0061e0cu)	/* Revision ID Register */
#define MC15_REVID	(*( MC0_REVID_type *) 0xf0061f0cu)	/* Revision ID Register */
#define MC16_REVID	(*( MC0_REVID_type *) 0xf006200cu)	/* Revision ID Register */
#define MC17_REVID	(*( MC0_REVID_type *) 0xf006210cu)	/* Revision ID Register */
#define MC18_REVID	(*( MC0_REVID_type *) 0xf006220cu)	/* Revision ID Register */
#define MC19_REVID	(*( MC0_REVID_type *) 0xf006230cu)	/* Revision ID Register */
#define MC1_REVID	(*( MC0_REVID_type *) 0xf006110cu)	/* Revision ID Register */
#define MC20_REVID	(*( MC0_REVID_type *) 0xf006240cu)	/* Revision ID Register */
#define MC21_REVID	(*( MC0_REVID_type *) 0xf006250cu)	/* Revision ID Register */
#define MC22_REVID	(*( MC0_REVID_type *) 0xf006260cu)	/* Revision ID Register */
#define MC23_REVID	(*( MC0_REVID_type *) 0xf006270cu)	/* Revision ID Register */
#define MC24_REVID	(*( MC0_REVID_type *) 0xf006280cu)	/* Revision ID Register */
#define MC25_REVID	(*( MC0_REVID_type *) 0xf006290cu)	/* Revision ID Register */
#define MC26_REVID	(*( MC0_REVID_type *) 0xf0062a0cu)	/* Revision ID Register */
#define MC27_REVID	(*( MC0_REVID_type *) 0xf0062b0cu)	/* Revision ID Register */
#define MC28_REVID	(*( MC0_REVID_type *) 0xf0062c0cu)	/* Revision ID Register */
#define MC29_REVID	(*( MC0_REVID_type *) 0xf0062d0cu)	/* Revision ID Register */
#define MC2_REVID	(*( MC0_REVID_type *) 0xf006120cu)	/* Revision ID Register */
#define MC30_REVID	(*( MC0_REVID_type *) 0xf0062e0cu)	/* Revision ID Register */
#define MC31_REVID	(*( MC0_REVID_type *) 0xf0062f0cu)	/* Revision ID Register */
#define MC32_REVID	(*( MC0_REVID_type *) 0xf006300cu)	/* Revision ID Register */
#define MC33_REVID	(*( MC0_REVID_type *) 0xf006310cu)	/* Revision ID Register */
#define MC34_REVID	(*( MC0_REVID_type *) 0xf006320cu)	/* Revision ID Register */
#define MC35_REVID	(*( MC0_REVID_type *) 0xf006330cu)	/* Revision ID Register */
#define MC36_REVID	(*( MC0_REVID_type *) 0xf006340cu)	/* Revision ID Register */
#define MC37_REVID	(*( MC0_REVID_type *) 0xf006350cu)	/* Revision ID Register */
#define MC38_REVID	(*( MC0_REVID_type *) 0xf006360cu)	/* Revision ID Register */
#define MC39_REVID	(*( MC0_REVID_type *) 0xf006370cu)	/* Revision ID Register */
#define MC3_REVID	(*( MC0_REVID_type *) 0xf006130cu)	/* Revision ID Register */
#define MC40_REVID	(*( MC0_REVID_type *) 0xf006380cu)	/* Revision ID Register */
#define MC41_REVID	(*( MC0_REVID_type *) 0xf006390cu)	/* Revision ID Register */
#define MC42_REVID	(*( MC0_REVID_type *) 0xf0063a0cu)	/* Revision ID Register */
#define MC43_REVID	(*( MC0_REVID_type *) 0xf0063b0cu)	/* Revision ID Register */
#define MC44_REVID	(*( MC0_REVID_type *) 0xf0063c0cu)	/* Revision ID Register */
#define MC45_REVID	(*( MC0_REVID_type *) 0xf0063d0cu)	/* Revision ID Register */
#define MC46_REVID	(*( MC0_REVID_type *) 0xf0063e0cu)	/* Revision ID Register */
#define MC47_REVID	(*( MC0_REVID_type *) 0xf0063f0cu)	/* Revision ID Register */
#define MC48_REVID	(*( MC0_REVID_type *) 0xf006400cu)	/* Revision ID Register */
#define MC49_REVID	(*( MC0_REVID_type *) 0xf006410cu)	/* Revision ID Register */
#define MC4_REVID	(*( MC0_REVID_type *) 0xf006140cu)	/* Revision ID Register */
#define MC50_REVID	(*( MC0_REVID_type *) 0xf006420cu)	/* Revision ID Register */
#define MC51_REVID	(*( MC0_REVID_type *) 0xf006430cu)	/* Revision ID Register */
#define MC52_REVID	(*( MC0_REVID_type *) 0xf006440cu)	/* Revision ID Register */
#define MC53_REVID	(*( MC0_REVID_type *) 0xf006450cu)	/* Revision ID Register */
#define MC54_REVID	(*( MC0_REVID_type *) 0xf006460cu)	/* Revision ID Register */
#define MC55_REVID	(*( MC0_REVID_type *) 0xf006470cu)	/* Revision ID Register */
#define MC56_REVID	(*( MC0_REVID_type *) 0xf006480cu)	/* Revision ID Register */
#define MC57_REVID	(*( MC0_REVID_type *) 0xf006490cu)	/* Revision ID Register */
#define MC58_REVID	(*( MC0_REVID_type *) 0xf0064a0cu)	/* Revision ID Register */
#define MC59_REVID	(*( MC0_REVID_type *) 0xf0064b0cu)	/* Revision ID Register */
#define MC5_REVID	(*( MC0_REVID_type *) 0xf006150cu)	/* Revision ID Register */
#define MC60_REVID	(*( MC0_REVID_type *) 0xf0064c0cu)	/* Revision ID Register */
#define MC61_REVID	(*( MC0_REVID_type *) 0xf0064d0cu)	/* Revision ID Register */
#define MC62_REVID	(*( MC0_REVID_type *) 0xf0064e0cu)	/* Revision ID Register */
#define MC63_REVID	(*( MC0_REVID_type *) 0xf0064f0cu)	/* Revision ID Register */
#define MC64_REVID	(*( MC0_REVID_type *) 0xf006500cu)	/* Revision ID Register */
#define MC65_REVID	(*( MC0_REVID_type *) 0xf006510cu)	/* Revision ID Register */
#define MC66_REVID	(*( MC0_REVID_type *) 0xf006520cu)	/* Revision ID Register */
#define MC67_REVID	(*( MC0_REVID_type *) 0xf006530cu)	/* Revision ID Register */
#define MC68_REVID	(*( MC0_REVID_type *) 0xf006540cu)	/* Revision ID Register */
#define MC69_REVID	(*( MC0_REVID_type *) 0xf006550cu)	/* Revision ID Register */
#define MC6_REVID	(*( MC0_REVID_type *) 0xf006160cu)	/* Revision ID Register */
#define MC70_REVID	(*( MC0_REVID_type *) 0xf006560cu)	/* Revision ID Register */
#define MC71_REVID	(*( MC0_REVID_type *) 0xf006570cu)	/* Revision ID Register */
#define MC72_REVID	(*( MC0_REVID_type *) 0xf006580cu)	/* Revision ID Register */
#define MC73_REVID	(*( MC0_REVID_type *) 0xf006590cu)	/* Revision ID Register */
#define MC74_REVID	(*( MC0_REVID_type *) 0xf0065a0cu)	/* Revision ID Register */
#define MC75_REVID	(*( MC0_REVID_type *) 0xf0065b0cu)	/* Revision ID Register */
#define MC76_REVID	(*( MC0_REVID_type *) 0xf0065c0cu)	/* Revision ID Register */
#define MC77_REVID	(*( MC0_REVID_type *) 0xf0065d0cu)	/* Revision ID Register */
#define MC78_REVID	(*( MC0_REVID_type *) 0xf0065e0cu)	/* Revision ID Register */
#define MC79_REVID	(*( MC0_REVID_type *) 0xf0065f0cu)	/* Revision ID Register */
#define MC7_REVID	(*( MC0_REVID_type *) 0xf006170cu)	/* Revision ID Register */
#define MC80_REVID	(*( MC0_REVID_type *) 0xf006600cu)	/* Revision ID Register */
#define MC81_REVID	(*( MC0_REVID_type *) 0xf006610cu)	/* Revision ID Register */
#define MC82_REVID	(*( MC0_REVID_type *) 0xf006620cu)	/* Revision ID Register */
#define MC83_REVID	(*( MC0_REVID_type *) 0xf006630cu)	/* Revision ID Register */
#define MC84_REVID	(*( MC0_REVID_type *) 0xf006640cu)	/* Revision ID Register */
#define MC85_REVID	(*( MC0_REVID_type *) 0xf006650cu)	/* Revision ID Register */
#define MC86_REVID	(*( MC0_REVID_type *) 0xf006660cu)	/* Revision ID Register */
#define MC87_REVID	(*( MC0_REVID_type *) 0xf006670cu)	/* Revision ID Register */
#define MC8_REVID	(*( MC0_REVID_type *) 0xf006180cu)	/* Revision ID Register */
#define MC9_REVID	(*( MC0_REVID_type *) 0xf006190cu)	/* Revision ID Register */

typedef volatile union
{
	struct
	{ 
		unsigned int EN0            : 1;	/* Access Enable for Master TAG ID 0 */
		unsigned int EN1            : 1;	/* Access Enable for Master TAG ID 1 */
		unsigned int EN2            : 1;	/* Access Enable for Master TAG ID 2 */
		unsigned int EN3            : 1;	/* Access Enable for Master TAG ID 3 */
		unsigned int EN4            : 1;	/* Access Enable for Master TAG ID 4 */
		unsigned int EN5            : 1;	/* Access Enable for Master TAG ID 5 */
		unsigned int EN6            : 1;	/* Access Enable for Master TAG ID 6 */
		unsigned int EN7            : 1;	/* Access Enable for Master TAG ID 7 */
		unsigned int EN8            : 1;	/* Access Enable for Master TAG ID 8 */
		unsigned int EN9            : 1;	/* Access Enable for Master TAG ID 9 */
		unsigned int EN10           : 1;	/* Access Enable for Master TAG ID 10 */
		unsigned int EN11           : 1;	/* Access Enable for Master TAG ID 11 */
		unsigned int EN12           : 1;	/* Access Enable for Master TAG ID 12 */
		unsigned int EN13           : 1;	/* Access Enable for Master TAG ID 13 */
		unsigned int EN14           : 1;	/* Access Enable for Master TAG ID 14 */
		unsigned int EN15           : 1;	/* Access Enable for Master TAG ID 15 */
		unsigned int EN16           : 1;	/* Access Enable for Master TAG ID 16 */
		unsigned int EN17           : 1;	/* Access Enable for Master TAG ID 17 */
		unsigned int EN18           : 1;	/* Access Enable for Master TAG ID 18 */
		unsigned int EN19           : 1;	/* Access Enable for Master TAG ID 19 */
		unsigned int EN20           : 1;	/* Access Enable for Master TAG ID 20 */
		unsigned int EN21           : 1;	/* Access Enable for Master TAG ID 21 */
		unsigned int EN22           : 1;	/* Access Enable for Master TAG ID 22 */
		unsigned int EN23           : 1;	/* Access Enable for Master TAG ID 23 */
		unsigned int EN24           : 1;	/* Access Enable for Master TAG ID 24 */
		unsigned int EN25           : 1;	/* Access Enable for Master TAG ID 25 */
		unsigned int EN26           : 1;	/* Access Enable for Master TAG ID 26 */
		unsigned int EN27           : 1;	/* Access Enable for Master TAG ID 27 */
		unsigned int EN28           : 1;	/* Access Enable for Master TAG ID 28 */
		unsigned int EN29           : 1;	/* Access Enable for Master TAG ID 29 */
		unsigned int EN30           : 1;	/* Access Enable for Master TAG ID 30 */
		unsigned int EN31           : 1;	/* Access Enable for Master TAG ID 31 */
	} B;
	int I;
	unsigned int U;

} MTU_ACCEN0_type;
#define MTU_ACCEN0	(*( MTU_ACCEN0_type *) 0xf00600fcu)	/* Access Enable Register 0 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int Res            : 32;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} MTU_ACCEN1_type;
#define MTU_ACCEN1	(*( MTU_ACCEN1_type *) 0xf00600f8u)	/* Access Enable Register 1 */
#define MTU_MEMSTAT1	(*( MTU_ACCEN1_type *) 0xf006003cu)	/* Memory Status Register 1 */
#define MTU_MEMSTAT2	(*( MTU_ACCEN1_type *) 0xf0060040u)	/* Memory Status Register 2 */
#define MTU_RES3	(*( MTU_ACCEN1_type *) 0xf0060034u)	/* Reserved Register */

typedef volatile union
{
	struct
	{ 
		unsigned int DISR           : 1;	/* Module Disable Request Bit */
		/* const */ unsigned int DISS           : 1;	/* Module Disable Status Bit */
		unsigned int Resvd          : 1;	/* Resvd */
		unsigned int EDIS           : 1;	/* Sleep Mode Enable Control */
		unsigned int                : 4;
		unsigned int Reserved       : 8;	/* Reserved */
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} MTU_CLC_type;
#define MTU_CLC	(*( MTU_CLC_type *) 0xf0060000u)	/* Identification Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int MODREV         : 8;	/* Module Revision Number */
		/* const */ unsigned int MODTYPE        : 8;	/* Module Type */
		/* const */ unsigned int MODNUMBER      : 16;	/* Module Number */
	} B;
	int I;
	unsigned int U;

} MTU_ID_type;
#define MTU_ID	(*( MTU_ID_type *) 0xf0060008u)	/* Identification Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int Res            : 1;	/* Reserved */
		unsigned int CPU2DCMAP      : 1;	/* CPU2 DCACHE Mapping */
		/* const */ unsigned int CPU2DTMAP      : 1;	/* CPU2 DTAG Mapping */
		/* const */ unsigned int Res_4          : 1;	/* Reserved */
		unsigned int CPU2PCMAP      : 1;	/* CPU2 PCACHE Mapping */
		/* const */ unsigned int CPU2PTMAP      : 1;	/* CPU2 PTAG Mapping */
		/* const */ unsigned int Res_7          : 1;	/* Reserved */
		unsigned int CPU1DCMAP      : 1;	/* CPU1 DCACHE Mapping */
		/* const */ unsigned int CPU1DTMAP      : 1;	/* CPU1 DTAG Mapping */
		/* const */ unsigned int Res_10         : 1;	/* Reserved */
		unsigned int CPU1PCMAP      : 1;	/* CPU1 PCACHE Mapping */
		/* const */ unsigned int CPU1PTMAP      : 1;	/* CPU1 PTAG Mapping */
		/* const */ unsigned int Res_13         : 3;	/* Reserved */
		unsigned int CPU0PCMAP      : 1;	/* CPU0 PCACHE Mapping */
		/* const */ unsigned int Res_15         : 1;	/* Reserved */
		/* const */ unsigned int CPU0PTMAP      : 1;	/* CPU0 PTAG Mapping */
		/* const */ unsigned int CPU0DxMAP      : 2;	/* Reserved in this product */
		/* const */ unsigned int Res_18         : 12;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} MTU_MEMMAP_type;
#define MTU_MEMMAP	(*( MTU_MEMMAP_type *) 0xf006001cu)	/* Memory Mapping Enable Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int CPU2DSAIU      : 1;	/* CPU2 DCACHE Partial AutoInitialize Underway */
		/* const */ unsigned int                : 1;
		/* const */ unsigned int CPU2DTAIU      : 1;	/* Data Tag MBIST AutoInitialize Underway */
		/* const */ unsigned int CPU2PSAIU      : 1;	/* CPU2 PCACHE Partial AutoInitialize Underway */
		/* const */ unsigned int                : 1;
		/* const */ unsigned int CPU2PTAIU      : 1;	/* CPU2 PTAG MBIST AutoInitialize Underway */
		/* const */ unsigned int CPU1DSAIU      : 1;	/* CPU1 DCACHE Partial AutoInitialize Underway */
		/* const */ unsigned int                : 1;
		/* const */ unsigned int CPU1DTAIU      : 1;	/* CPU1 DTAG MBIST AutoInitialize Underway */
		/* const */ unsigned int CPU1PSAIU      : 1;	/* CPU1 PCACHE Partial AutoInitialize Underway */
		/* const */ unsigned int                : 1;
		/* const */ unsigned int CPU1PTAIU      : 1;	/* CPU1 PTAG MBIST AutoInitialize Underway */
		/* const */ unsigned int                : 2;
		/* const */ unsigned int CPU0DSAIU      : 1;	/* Reserved in this product */
		/* const */ unsigned int                : 1;
		/* const */ unsigned int CPU0PSAIU      : 1;	/* CPU0 PCACHE Partial AutoInitialize Underway */
		/* const */ unsigned int CPU0PTAIU      : 1;	/* CPU0 PTAG MBIST AutoInitialize Underway */
		/* const */ unsigned int                : 1;
		/* const */ unsigned int CPU0DxAIU      : 1;	/* Reserved in this product */
		/* const */ unsigned int CPU1DS2AIU     : 1;	/* Reserved in this product */
		/* const */ unsigned int CPU2DS2AIU     : 1;	/* Reserved in this product */
		/* const */ unsigned int                : 1;
		/* const */ unsigned int HSMCAIU        : 1;	/* Reserved in this product */
		/* const */ unsigned int HSMTAIU        : 1;	/* Reserved in this product */
		/* const */ unsigned int HSMRAIU        : 1;	/* Reserved in this product */
		/* const */ unsigned int FSI0AIU        : 1;	/* FSI0 MBIST AutoInitialize Underway */
		/* const */ unsigned int CPU0DS2AIU     : 1;	/* Reserved in this product */
		/* const */ unsigned int                : 4;
	} B;
	int I;
	unsigned int U;

} MTU_MEMSTAT0_type;
#define MTU_MEMSTAT0	(*( MTU_MEMSTAT0_type *) 0xf0060038u)	/* Memory Status Register 0 */

typedef volatile union
{
	struct
	{ 
		unsigned int CPU2DSEN       : 1;	/* CPU2 TC1.6P DSPR MBIST Controller Memory Enable */
		/* const */ unsigned int Res            : 1;	/* Reserved */
		unsigned int CPU2DTEN       : 1;	/* CPU2 TC1.6P DTAG MBIST Controller Memory Enable */
		unsigned int CPU2PSEN       : 1;	/* CPU2 TC1.6P PSPR MBIST Controller Memory Enable */
		/* const */ unsigned int Res_5          : 1;	/* Reserved */
		unsigned int CPU2PTEN       : 1;	/* CPU2 TC1.6P PTAG MBIST Controller Memory Enable */
		unsigned int CPU1DSEN       : 1;	/* CPU1 TC1.6P DSPR MBIST Controller Memory Enable */
		/* const */ unsigned int Res_8          : 1;	/* Reserved in this product */
		unsigned int CPU1DTEN       : 1;	/* CPU1 TC1.6P DTAG MBIST Controller Memory Enable */
		unsigned int CPU1PSEN       : 1;	/* CPU1 TC1.6P PSPR MBIST Controller Memory Enable */
		/* const */ unsigned int Res_11         : 1;	/* Reserved */
		unsigned int CPU1PTEN       : 1;	/* CPU1 TC1.6P PTAG MBIST Controller Memory Enable */
		/* const */ unsigned int LMUEN          : 1;	/* Reserved in this product */
		/* const */ unsigned int MMCDSEN        : 1;	/* Reserved in this product */
		unsigned int CPU0DSEN       : 1;	/* CPU0 DSPR MBIST Controller Memory Enable */
		/* const */ unsigned int Res_16         : 1;	/* Reserved in this product */
		unsigned int CPU0PSEN       : 1;	/* CPU0 PSPR MBIST Controller Memory Enable */
		unsigned int CPU0PTEN       : 1;	/* CPU0 PTAG MBIST Controller Memory Enable */
		/* const */ unsigned int Res_19         : 1;	/* Reserved */
		/* const */ unsigned int CPU0DTEN       : 1;	/* Reserved in this product */
		/* const */ unsigned int CPUXDS2EN      : 2;	/* Reserved in this product */
		unsigned int ETHEN          : 1;	/* ETHERMAC MBIST Controller Memory Enable */
		/* const */ unsigned int Res_23         : 3;	/* Reserved */
		unsigned int FSI0EN         : 1;	/* FSI0 MBIST Controller Memory Enable */
		/* const */ unsigned int CPU0DS2EN      : 1;	/* Reserved in this product */
		unsigned int GTMFEN         : 1;	/* GTM FIFO0 MBIST Controller Memory Enable */
		unsigned int GTMM0EN        : 1;	/* GTM MCS0 MBIST Controller Memory Enable */
		unsigned int GTMM1EN        : 1;	/* GTM RAM1 MBIST Controller Memory Enable */
		unsigned int GTM1AEN        : 1;	/* GTM RAM1A MBIST Controller Memory Enable */
	} B;
	int I;
	unsigned int U;

} MTU_MEMTEST0_type;
#define MTU_MEMTEST0	(*( MTU_MEMTEST0_type *) 0xf0060010u)	/* Memory MBISTEnable Register 0 */

typedef volatile union
{
	struct
	{ 
		unsigned int GTM1BEN        : 1;	/* GTM RAM1B Controller Memory Enable */
		unsigned int GTM2EN         : 1;	/* GTM RAM2 Controller Memory Enable */
		unsigned int PSI5EN         : 1;	/* PSI5 Controller Memory Enable */
		/* const */ unsigned int Res            : 1;	/* Reserved */
		unsigned int MCAN0EN        : 1;	/* MultiCAN0 Controller Memory Enable */
		/* const */ unsigned int MCAN1EN        : 1;	/* Reserved in this product */
		unsigned int ERAY0OEN       : 1;	/* ERAY0 OBF Controller Memory Enable */
		unsigned int ERAY0TEN       : 1;	/* ERAY0 TBF Controller Memory Enable */
		unsigned int ERAY0MEN       : 1;	/* ERAY0 MBF Controller Memory Enable */
		/* const */ unsigned int ERAY1XEN       : 3;	/* Reserved in this product */
		/* const */ unsigned int STBY1EN        : 1;	/* Reserved in this product */
		unsigned int MCDSEN         : 1;	/* MCDS Controller Memory Enable (ED only) */
		unsigned int EMEML0EN       : 1;	/* EMEM Lower 0 (TCM) MBIST Controller Memory Test Enable (ED only) */
		unsigned int EMEML1EN       : 1;	/* EMEM Lower 1 (TCM) MBIST Controller Memory Test Enable (ED only) */
		unsigned int EMEML2EN       : 1;	/* EMEM Lower 2 (TCM) MBIST Controller Memory Test Enable (ED only) */
		unsigned int EMEML3EN       : 1;	/* EMEM Lower 3 (TCM) MBIST Controller Memory Test Enable (ED only) */
		unsigned int EMEML4EN       : 1;	/* EMEM Lower 4 (TCM) MBIST Controller Memory Test Enable (ED only) */
		unsigned int EMEML5EN       : 1;	/* EMEM Lower 5 (TCM) MBIST Controller Memory Test Enable (ED only) */
		unsigned int EMEML6EN       : 1;	/* EMEM Lower 6 (TCM) MBIST Controller Memory Test Enable (ED only) */
		unsigned int EMEML7EN       : 1;	/* EMEM Lower 7 (TCM) MBIST Controller Memory Test Enable (ED only) */
		unsigned int EMEML8EN       : 1;	/* EMEM Lower 8 (TCM) MBIST Controller Memory Test Enable (ED only) */
		unsigned int EMEML9EN       : 1;	/* EMEM Lower 9 (TCM) MBIST Controller Memory Test Enable (ED only) */
		unsigned int EMEML10EN      : 1;	/* EMEM Lower 10 (TCM) MBIST Controller Memory Test Enable (ED only) */
		unsigned int EMEML11EN      : 1;	/* EMEM Lower 11 (TCM) MBIST Controller Memory Test Enable (ED only) */
		unsigned int EMEML12EN      : 1;	/* EMEM Lower 12 (TCM) MBIST Controller Memory Test Enable (ED only) */
		unsigned int EMEML13EN      : 1;	/* EMEM Lower 13 (TCM) MBIST Controller Memory Test Enable (ED only) */
		unsigned int EMEML14EN      : 1;	/* EMEM Lower 14 (TCM) MBIST Controller Memory Test Enable (ED only) */
		unsigned int EMEML15EN      : 1;	/* EMEM Lower 15 (TCM) MBIST Controller Memory Test Enable (ED only) */
		/* const */ unsigned int EMEMUXEN       : 2;	/* Reserved in this product */
	} B;
	int I;
	unsigned int U;

} MTU_MEMTEST1_type;
#define MTU_MEMTEST1	(*( MTU_MEMTEST1_type *) 0xf0060014u)	/* Memory MBISTEnable Register 1 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int EMEMUxEN       : 14;	/* Reserved in this product */
		unsigned int CIF0EN         : 1;	/* CIF JPEG1_4 Memory Enable (ED only) */
		unsigned int DAMEN          : 1;	/* DAM Memory Enable */
		unsigned int CIF1EN         : 1;	/* CIF JPEG3 Memory Enable (ADAS Product only) */
		unsigned int CIF2EN         : 1;	/* CIF Memory2 Enable (ADAS Product only) */
		/* const */ unsigned int STBY2EN        : 1;	/* Reserved in this product */
		unsigned int DMAEN          : 1;	/* DMA MBIST Controller Memory Enable */
		/* const */ unsigned int XTMxEN         : 2;	/* Reserved in this product */
		/* const */ unsigned int FFTxEN         : 2;	/* Reserved in this product */
		/* const */ unsigned int Res            : 8;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} MTU_MEMTEST2_type;
#define MTU_MEMTEST2	(*( MTU_MEMTEST2_type *) 0xf0060018u)	/* Memory MBISTEnable Register 2 */

typedef volatile union
{
	struct
	{ 
		unsigned int Res            : 1;	/* Reserved in this Product */
		unsigned int Res_2          : 1;	/* Reserved in this Product */
		/* const */ unsigned int Res_3          : 1;	/* Reservedin this Product */
		unsigned int Res_4          : 1;	/* Reserved in this Product */
		/* const */ unsigned int Res_5          : 28;	/* Reservedin this Product */
	} B;
	int I;
	unsigned int U;

} MTU_RES0_type;
#define MTU_RES0	(*( MTU_RES0_type *) 0xf0060020u)	/* Reserved Register */

typedef volatile union
{
	struct
	{ 
		unsigned int Res            : 3;	/* Reserved in this Product */
		/* const */ unsigned int Res_2          : 29;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} MTU_RES1_type;
#define MTU_RES1	(*( MTU_RES1_type *) 0xf0060024u)	/* Reserved Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int Res            : 7;	/* Reserved */
		unsigned int Res_2          : 1;	/* Reserved in this Product */
		/* const */ unsigned int Res_3          : 24;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} MTU_RES2_type;
#define MTU_RES2	(*( MTU_RES2_type *) 0xf0060030u)	/* Reserved Register */


/* SMU */
typedef volatile union
{
	struct
	{ 
		unsigned int EN0            : 1;	/* Access Enable for Master TAG ID 0 */
		unsigned int EN1            : 1;	/* Access Enable for Master TAG ID 1 */
		unsigned int EN2            : 1;	/* Access Enable for Master TAG ID 2 */
		unsigned int EN3            : 1;	/* Access Enable for Master TAG ID 3 */
		unsigned int EN4            : 1;	/* Access Enable for Master TAG ID 4 */
		unsigned int EN5            : 1;	/* Access Enable for Master TAG ID 5 */
		unsigned int EN6            : 1;	/* Access Enable for Master TAG ID 6 */
		unsigned int EN7            : 1;	/* Access Enable for Master TAG ID 7 */
		unsigned int EN8            : 1;	/* Access Enable for Master TAG ID 8 */
		unsigned int EN9            : 1;	/* Access Enable for Master TAG ID 9 */
		unsigned int EN10           : 1;	/* Access Enable for Master TAG ID 10 */
		unsigned int EN11           : 1;	/* Access Enable for Master TAG ID 11 */
		unsigned int EN12           : 1;	/* Access Enable for Master TAG ID 12 */
		unsigned int EN13           : 1;	/* Access Enable for Master TAG ID 13 */
		unsigned int EN14           : 1;	/* Access Enable for Master TAG ID 14 */
		unsigned int EN15           : 1;	/* Access Enable for Master TAG ID 15 */
		unsigned int EN16           : 1;	/* Access Enable for Master TAG ID 16 */
		unsigned int EN17           : 1;	/* Access Enable for Master TAG ID 17 */
		unsigned int EN18           : 1;	/* Access Enable for Master TAG ID 18 */
		unsigned int EN19           : 1;	/* Access Enable for Master TAG ID 19 */
		unsigned int EN20           : 1;	/* Access Enable for Master TAG ID 20 */
		unsigned int EN21           : 1;	/* Access Enable for Master TAG ID 21 */
		unsigned int EN22           : 1;	/* Access Enable for Master TAG ID 22 */
		unsigned int EN23           : 1;	/* Access Enable for Master TAG ID 23 */
		unsigned int EN24           : 1;	/* Access Enable for Master TAG ID 24 */
		unsigned int EN25           : 1;	/* Access Enable for Master TAG ID 25 */
		unsigned int EN26           : 1;	/* Access Enable for Master TAG ID 26 */
		unsigned int EN27           : 1;	/* Access Enable for Master TAG ID 27 */
		unsigned int EN28           : 1;	/* Access Enable for Master TAG ID 28 */
		unsigned int EN29           : 1;	/* Access Enable for Master TAG ID 29 */
		unsigned int EN30           : 1;	/* Access Enable for Master TAG ID 30 */
		unsigned int EN31           : 1;	/* Access Enable for Master TAG ID 31 */
	} B;
	int I;
	unsigned int U;

} SMU_ACCEN0_type;
#define SMU_ACCEN0	(*( SMU_ACCEN0_type *) 0xf0036ffcu)	/* SMU Access Enable Register 0 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int Reserved       : 32;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} SMU_ACCEN1_type;
#define SMU_ACCEN1	(*( SMU_ACCEN1_type *) 0xf0036ff8u)	/* SMU Access Enable Register 1 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned __sfrbit32 DF0            : 1;	/* Debug flag for alarm 0 belonging to alarm group x (x=0-6). */
		/* const */ unsigned __sfrbit32 DF1            : 1;	/* Debug flag for alarm 1 belonging to alarm group x (x=0-6). */
		/* const */ unsigned __sfrbit32 DF2            : 1;	/* Debug flag for alarm 2 belonging to alarm group x (x=0-6). */
		/* const */ unsigned __sfrbit32 DF3            : 1;	/* Debug flag for alarm 3 belonging to alarm group x (x=0-6). */
		/* const */ unsigned __sfrbit32 DF4            : 1;	/* Debug flag for alarm 4 belonging to alarm group x (x=0-6). */
		/* const */ unsigned __sfrbit32 DF5            : 1;	/* Debug flag for alarm 5 belonging to alarm group x (x=0-6). */
		/* const */ unsigned __sfrbit32 DF6            : 1;	/* Debug flag for alarm 6 belonging to alarm group x (x=0-6). */
		/* const */ unsigned __sfrbit32 DF7            : 1;	/* Debug flag for alarm 7 belonging to alarm group x (x=0-6). */
		/* const */ unsigned __sfrbit32 DF8            : 1;	/* Debug flag for alarm 8 belonging to alarm group x (x=0-6). */
		/* const */ unsigned __sfrbit32 DF9            : 1;	/* Debug flag for alarm 9 belonging to alarm group x (x=0-6). */
		/* const */ unsigned __sfrbit32 DF10           : 1;	/* Debug flag for alarm 10 belonging to alarm group x (x=0-6). */
		/* const */ unsigned __sfrbit32 DF11           : 1;	/* Debug flag for alarm 11 belonging to alarm group x (x=0-6). */
		/* const */ unsigned __sfrbit32 DF12           : 1;	/* Debug flag for alarm 12 belonging to alarm group x (x=0-6). */
		/* const */ unsigned __sfrbit32 DF13           : 1;	/* Debug flag for alarm 13 belonging to alarm group x (x=0-6). */
		/* const */ unsigned __sfrbit32 DF14           : 1;	/* Debug flag for alarm 14 belonging to alarm group x (x=0-6). */
		/* const */ unsigned __sfrbit32 DF15           : 1;	/* Debug flag for alarm 15 belonging to alarm group x (x=0-6). */
		/* const */ unsigned __sfrbit32 DF16           : 1;	/* Debug flag for alarm 16 belonging to alarm group x (x=0-6). */
		/* const */ unsigned __sfrbit32 DF17           : 1;	/* Debug flag for alarm 17 belonging to alarm group x (x=0-6). */
		/* const */ unsigned __sfrbit32 DF18           : 1;	/* Debug flag for alarm 18 belonging to alarm group x (x=0-6). */
		/* const */ unsigned __sfrbit32 DF19           : 1;	/* Debug flag for alarm 19 belonging to alarm group x (x=0-6). */
		/* const */ unsigned __sfrbit32 DF20           : 1;	/* Debug flag for alarm 20 belonging to alarm group x (x=0-6). */
		/* const */ unsigned __sfrbit32 DF21           : 1;	/* Debug flag for alarm 21 belonging to alarm group x (x=0-6). */
		/* const */ unsigned __sfrbit32 DF22           : 1;	/* Debug flag for alarm 22 belonging to alarm group x (x=0-6). */
		/* const */ unsigned __sfrbit32 DF23           : 1;	/* Debug flag for alarm 23 belonging to alarm group x (x=0-6). */
		/* const */ unsigned __sfrbit32 DF24           : 1;	/* Debug flag for alarm 24 belonging to alarm group x (x=0-6). */
		/* const */ unsigned __sfrbit32 DF25           : 1;	/* Debug flag for alarm 25 belonging to alarm group x (x=0-6). */
		/* const */ unsigned __sfrbit32 DF26           : 1;	/* Debug flag for alarm 26 belonging to alarm group x (x=0-6). */
		/* const */ unsigned __sfrbit32 DF27           : 1;	/* Debug flag for alarm 27 belonging to alarm group x (x=0-6). */
		/* const */ unsigned __sfrbit32 DF28           : 1;	/* Debug flag for alarm 28 belonging to alarm group x (x=0-6). */
		/* const */ unsigned __sfrbit32 DF29           : 1;	/* Debug flag for alarm 29 belonging to alarm group x (x=0-6). */
		/* const */ unsigned __sfrbit32 DF30           : 1;	/* Debug flag for alarm 30 belonging to alarm group x (x=0-6). */
		/* const */ unsigned __sfrbit32 DF31           : 1;	/* Debug flag for alarm 31 belonging to alarm group x (x=0-6). */
	} B;
	int I;
	unsigned int U;

} SMU_AD0_type;
#define SMU_AD0	(*( SMU_AD0_type *) 0xf0036a00u)	/* Alarm Status Register */
#define SMU_AD1	(*( SMU_AD0_type *) 0xf0036a04u)	/* Alarm Status Register */
#define SMU_AD2	(*( SMU_AD0_type *) 0xf0036a08u)	/* Alarm Status Register */
#define SMU_AD3	(*( SMU_AD0_type *) 0xf0036a0cu)	/* Alarm Status Register */
#define SMU_AD4	(*( SMU_AD0_type *) 0xf0036a10u)	/* Alarm Status Register */
#define SMU_AD5	(*( SMU_AD0_type *) 0xf0036a14u)	/* Alarm Status Register */
#define SMU_AD6	(*( SMU_AD0_type *) 0xf0036a18u)	/* Alarm Status Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned __sfrbit32 FCNT           : 4;	/* Fault Counter. */
		/* const */ unsigned __sfrbit32                : 4;
		/* const */ unsigned __sfrbit32 ACNT           : 8;	/* Alarm Counter. */
		/* const */ unsigned __sfrbit32                : 14;
		/* const */ unsigned __sfrbit32 FCO            : 1;	/* Fault Counter Overflow. */
		/* const */ unsigned __sfrbit32 ACO            : 1;	/* Alarm Counter Overflow. */
	} B;
	int I;
	unsigned int U;

} SMU_AFCNT_type;
#define SMU_AFCNT	(*( SMU_AFCNT_type *) 0xf0036840u)	/* Alarm and Fault Counter */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 SF0            : 1;	/* Status flag for alarm 0 belonging to alarm group x (x=0-6). */
		unsigned __sfrbit32 SF1            : 1;	/* Status flag for alarm 1 belonging to alarm group x (x=0-6). */
		unsigned __sfrbit32 SF2            : 1;	/* Status flag for alarm 2 belonging to alarm group x (x=0-6). */
		unsigned __sfrbit32 SF3            : 1;	/* Status flag for alarm 3 belonging to alarm group x (x=0-6). */
		unsigned __sfrbit32 SF4            : 1;	/* Status flag for alarm 4 belonging to alarm group x (x=0-6). */
		unsigned __sfrbit32 SF5            : 1;	/* Status flag for alarm 5 belonging to alarm group x (x=0-6). */
		unsigned __sfrbit32 SF6            : 1;	/* Status flag for alarm 6 belonging to alarm group x (x=0-6). */
		unsigned __sfrbit32 SF7            : 1;	/* Status flag for alarm 7 belonging to alarm group x (x=0-6). */
		unsigned __sfrbit32 SF8            : 1;	/* Status flag for alarm 8 belonging to alarm group x (x=0-6). */
		unsigned __sfrbit32 SF9            : 1;	/* Status flag for alarm 9 belonging to alarm group x (x=0-6). */
		unsigned __sfrbit32 SF10           : 1;	/* Status flag for alarm 10 belonging to alarm group x (x=0-6). */
		unsigned __sfrbit32 SF11           : 1;	/* Status flag for alarm 11 belonging to alarm group x (x=0-6). */
		unsigned __sfrbit32 SF12           : 1;	/* Status flag for alarm 12 belonging to alarm group x (x=0-6). */
		unsigned __sfrbit32 SF13           : 1;	/* Status flag for alarm 13 belonging to alarm group x (x=0-6). */
		unsigned __sfrbit32 SF14           : 1;	/* Status flag for alarm 14 belonging to alarm group x (x=0-6). */
		unsigned __sfrbit32 SF15           : 1;	/* Status flag for alarm 15 belonging to alarm group x (x=0-6). */
		unsigned __sfrbit32 SF16           : 1;	/* Status flag for alarm 16 belonging to alarm group x (x=0-6). */
		unsigned __sfrbit32 SF17           : 1;	/* Status flag for alarm 17 belonging to alarm group x (x=0-6). */
		unsigned __sfrbit32 SF18           : 1;	/* Status flag for alarm 18 belonging to alarm group x (x=0-6). */
		unsigned __sfrbit32 SF19           : 1;	/* Status flag for alarm 19 belonging to alarm group x (x=0-6). */
		unsigned __sfrbit32 SF20           : 1;	/* Status flag for alarm 20 belonging to alarm group x (x=0-6). */
		unsigned __sfrbit32 SF21           : 1;	/* Status flag for alarm 21 belonging to alarm group x (x=0-6). */
		unsigned __sfrbit32 SF22           : 1;	/* Status flag for alarm 22 belonging to alarm group x (x=0-6). */
		unsigned __sfrbit32 SF23           : 1;	/* Status flag for alarm 23 belonging to alarm group x (x=0-6). */
		unsigned __sfrbit32 SF24           : 1;	/* Status flag for alarm 24 belonging to alarm group x (x=0-6). */
		unsigned __sfrbit32 SF25           : 1;	/* Status flag for alarm 25 belonging to alarm group x (x=0-6). */
		unsigned __sfrbit32 SF26           : 1;	/* Status flag for alarm 26 belonging to alarm group x (x=0-6). */
		unsigned __sfrbit32 SF27           : 1;	/* Status flag for alarm 27 belonging to alarm group x (x=0-6). */
		unsigned __sfrbit32 SF28           : 1;	/* Status flag for alarm 28 belonging to alarm group x (x=0-6). */
		unsigned __sfrbit32 SF29           : 1;	/* Status flag for alarm 29 belonging to alarm group x (x=0-6). */
		unsigned __sfrbit32 SF30           : 1;	/* Status flag for alarm 30 belonging to alarm group x (x=0-6). */
		unsigned __sfrbit32 SF31           : 1;	/* Status flag for alarm 31 belonging to alarm group x (x=0-6). */
	} B;
	int I;
	unsigned int U;

} SMU_AG0_type;
#define SMU_AG0	(*( SMU_AG0_type *) 0xf00369c0u)	/* Alarm Status Register */
#define SMU_AG1	(*( SMU_AG0_type *) 0xf00369c4u)	/* Alarm Status Register */
#define SMU_AG2	(*( SMU_AG0_type *) 0xf00369c8u)	/* Alarm Status Register */
#define SMU_AG3	(*( SMU_AG0_type *) 0xf00369ccu)	/* Alarm Status Register */
#define SMU_AG4	(*( SMU_AG0_type *) 0xf00369d0u)	/* Alarm Status Register */
#define SMU_AG5	(*( SMU_AG0_type *) 0xf00369d4u)	/* Alarm Status Register */
#define SMU_AG6	(*( SMU_AG0_type *) 0xf00369d8u)	/* Alarm Status Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 CF0            : 1;	/* Configuration flag x (x=0-2) for alarm 0 belonging to alarm group 0. */
		unsigned __sfrbit32 CF1            : 1;	/* Configuration flag x (x=0-2) for alarm 1 belonging to alarm group 0. */
		unsigned __sfrbit32 CF2            : 1;	/* Configuration flag x (x=0-2) for alarm 2 belonging to alarm group 0. */
		unsigned __sfrbit32 CF3            : 1;	/* Configuration flag x (x=0-2) for alarm 3 belonging to alarm group 0. */
		unsigned __sfrbit32 CF4            : 1;	/* Configuration flag x (x=0-2) for alarm 4 belonging to alarm group 0. */
		unsigned __sfrbit32 CF5            : 1;	/* Configuration flag x (x=0-2) for alarm 5 belonging to alarm group 0. */
		unsigned __sfrbit32 CF6            : 1;	/* Configuration flag x (x=0-2) for alarm 6 belonging to alarm group 0. */
		unsigned __sfrbit32 CF7            : 1;	/* Configuration flag x (x=0-2) for alarm 7 belonging to alarm group 0. */
		unsigned __sfrbit32 CF8            : 1;	/* Configuration flag x (x=0-2) for alarm 8 belonging to alarm group 0. */
		unsigned __sfrbit32 CF9            : 1;	/* Configuration flag x (x=0-2) for alarm 9 belonging to alarm group 0. */
		unsigned __sfrbit32 CF10           : 1;	/* Configuration flag x (x=0-2) for alarm 10 belonging to alarm group 0. */
		unsigned __sfrbit32 CF11           : 1;	/* Configuration flag x (x=0-2) for alarm 11 belonging to alarm group 0. */
		unsigned __sfrbit32 CF12           : 1;	/* Configuration flag x (x=0-2) for alarm 12 belonging to alarm group 0. */
		unsigned __sfrbit32 CF13           : 1;	/* Configuration flag x (x=0-2) for alarm 13 belonging to alarm group 0. */
		unsigned __sfrbit32 CF14           : 1;	/* Configuration flag x (x=0-2) for alarm 14 belonging to alarm group 0. */
		unsigned __sfrbit32 CF15           : 1;	/* Configuration flag x (x=0-2) for alarm 15 belonging to alarm group 0. */
		unsigned __sfrbit32 CF16           : 1;	/* Configuration flag x (x=0-2) for alarm 16 belonging to alarm group 0. */
		unsigned __sfrbit32 CF17           : 1;	/* Configuration flag x (x=0-2) for alarm 17 belonging to alarm group 0. */
		unsigned __sfrbit32 CF18           : 1;	/* Configuration flag x (x=0-2) for alarm 18 belonging to alarm group 0. */
		unsigned __sfrbit32 CF19           : 1;	/* Configuration flag x (x=0-2) for alarm 19 belonging to alarm group 0. */
		unsigned __sfrbit32 CF20           : 1;	/* Configuration flag x (x=0-2) for alarm 20 belonging to alarm group 0. */
		unsigned __sfrbit32 CF21           : 1;	/* Configuration flag x (x=0-2) for alarm 21 belonging to alarm group 0. */
		unsigned __sfrbit32 CF22           : 1;	/* Configuration flag x (x=0-2) for alarm 22 belonging to alarm group 0. */
		unsigned __sfrbit32 CF23           : 1;	/* Configuration flag x (x=0-2) for alarm 23 belonging to alarm group 0. */
		unsigned __sfrbit32 CF24           : 1;	/* Configuration flag x (x=0-2) for alarm 24 belonging to alarm group 0. */
		unsigned __sfrbit32 CF25           : 1;	/* Configuration flag x (x=0-2) for alarm 25 belonging to alarm group 0. */
		unsigned __sfrbit32 CF26           : 1;	/* Configuration flag x (x=0-2) for alarm 26 belonging to alarm group 0. */
		unsigned __sfrbit32 CF27           : 1;	/* Configuration flag x (x=0-2) for alarm 27 belonging to alarm group 0. */
		unsigned __sfrbit32 CF28           : 1;	/* Configuration flag x (x=0-2) for alarm 28 belonging to alarm group 0. */
		unsigned __sfrbit32 CF29           : 1;	/* Configuration flag x (x=0-2) for alarm 29 belonging to alarm group 0. */
		unsigned __sfrbit32 CF30           : 1;	/* Configuration flag x (x=0-2) for alarm 30 belonging to alarm group 0. */
		unsigned __sfrbit32 CF31           : 1;	/* Configuration flag x (x=0-2) for alarm 31 belonging to alarm group 0. */
	} B;
	int I;
	unsigned int U;

} SMU_AG0CF0_type;
#define SMU_AG0CF0	(*( SMU_AG0CF0_type *) 0xf0036900u)	/* Alarm Configuration Register */
#define SMU_AG0CF1	(*( SMU_AG0CF0_type *) 0xf0036904u)	/* Alarm Configuration Register */
#define SMU_AG0CF2	(*( SMU_AG0CF0_type *) 0xf0036908u)	/* Alarm Configuration Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 FE0            : 1;	/* Fault signalling configuration flag for alarm 0 belonging to alarm group 0. */
		unsigned __sfrbit32 FE1            : 1;	/* Fault signalling configuration flag for alarm 1 belonging to alarm group 0. */
		unsigned __sfrbit32 FE2            : 1;	/* Fault signalling configuration flag for alarm 2 belonging to alarm group 0. */
		unsigned __sfrbit32 FE3            : 1;	/* Fault signalling configuration flag for alarm 3 belonging to alarm group 0. */
		unsigned __sfrbit32 FE4            : 1;	/* Fault signalling configuration flag for alarm 4 belonging to alarm group 0. */
		unsigned __sfrbit32 FE5            : 1;	/* Fault signalling configuration flag for alarm 5 belonging to alarm group 0. */
		unsigned __sfrbit32 FE6            : 1;	/* Fault signalling configuration flag for alarm 6 belonging to alarm group 0. */
		unsigned __sfrbit32 FE7            : 1;	/* Fault signalling configuration flag for alarm 7 belonging to alarm group 0. */
		unsigned __sfrbit32 FE8            : 1;	/* Fault signalling configuration flag for alarm 8 belonging to alarm group 0. */
		unsigned __sfrbit32 FE9            : 1;	/* Fault signalling configuration flag for alarm 9 belonging to alarm group 0. */
		unsigned __sfrbit32 FE10           : 1;	/* Fault signalling configuration flag for alarm 10 belonging to alarm group 0. */
		unsigned __sfrbit32 FE11           : 1;	/* Fault signalling configuration flag for alarm 11 belonging to alarm group 0. */
		unsigned __sfrbit32 FE12           : 1;	/* Fault signalling configuration flag for alarm 12 belonging to alarm group 0. */
		unsigned __sfrbit32 FE13           : 1;	/* Fault signalling configuration flag for alarm 13 belonging to alarm group 0. */
		unsigned __sfrbit32 FE14           : 1;	/* Fault signalling configuration flag for alarm 14 belonging to alarm group 0. */
		unsigned __sfrbit32 FE15           : 1;	/* Fault signalling configuration flag for alarm 15 belonging to alarm group 0. */
		unsigned __sfrbit32 FE16           : 1;	/* Fault signalling configuration flag for alarm 16 belonging to alarm group 0. */
		unsigned __sfrbit32 FE17           : 1;	/* Fault signalling configuration flag for alarm 17 belonging to alarm group 0. */
		unsigned __sfrbit32 FE18           : 1;	/* Fault signalling configuration flag for alarm 18 belonging to alarm group 0. */
		unsigned __sfrbit32 FE19           : 1;	/* Fault signalling configuration flag for alarm 19 belonging to alarm group 0. */
		unsigned __sfrbit32 FE20           : 1;	/* Fault signalling configuration flag for alarm 20 belonging to alarm group 0. */
		unsigned __sfrbit32 FE21           : 1;	/* Fault signalling configuration flag for alarm 21 belonging to alarm group 0. */
		unsigned __sfrbit32 FE22           : 1;	/* Fault signalling configuration flag for alarm 22 belonging to alarm group 0. */
		unsigned __sfrbit32 FE23           : 1;	/* Fault signalling configuration flag for alarm 23 belonging to alarm group 0. */
		unsigned __sfrbit32 FE24           : 1;	/* Fault signalling configuration flag for alarm 24 belonging to alarm group 0. */
		unsigned __sfrbit32 FE25           : 1;	/* Fault signalling configuration flag for alarm 25 belonging to alarm group 0. */
		unsigned __sfrbit32 FE26           : 1;	/* Fault signalling configuration flag for alarm 26 belonging to alarm group 0. */
		unsigned __sfrbit32 FE27           : 1;	/* Fault signalling configuration flag for alarm 27 belonging to alarm group 0. */
		unsigned __sfrbit32 FE28           : 1;	/* Fault signalling configuration flag for alarm 28 belonging to alarm group 0. */
		unsigned __sfrbit32 FE29           : 1;	/* Fault signalling configuration flag for alarm 29 belonging to alarm group 0. */
		unsigned __sfrbit32 FE30           : 1;	/* Fault signalling configuration flag for alarm 30 belonging to alarm group 0. */
		unsigned __sfrbit32 FE31           : 1;	/* Fault signalling configuration flag for alarm 31 belonging to alarm group 0. */
	} B;
	int I;
	unsigned int U;

} SMU_AG0FSP_type;
#define SMU_AG0FSP	(*( SMU_AG0FSP_type *) 0xf0036980u)	/* FSP Configuration Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 CF0            : 1;	/* Configuration flag x (x=0-2) for alarm 0 belonging to alarm group 1. */
		unsigned __sfrbit32 CF1            : 1;	/* Configuration flag x (x=0-2) for alarm 1 belonging to alarm group 1. */
		unsigned __sfrbit32 CF2            : 1;	/* Configuration flag x (x=0-2) for alarm 2 belonging to alarm group 1. */
		unsigned __sfrbit32 CF3            : 1;	/* Configuration flag x (x=0-2) for alarm 3 belonging to alarm group 1. */
		unsigned __sfrbit32 CF4            : 1;	/* Configuration flag x (x=0-2) for alarm 4 belonging to alarm group 1. */
		unsigned __sfrbit32 CF5            : 1;	/* Configuration flag x (x=0-2) for alarm 5 belonging to alarm group 1. */
		unsigned __sfrbit32 CF6            : 1;	/* Configuration flag x (x=0-2) for alarm 6 belonging to alarm group 1. */
		unsigned __sfrbit32 CF7            : 1;	/* Configuration flag x (x=0-2) for alarm 7 belonging to alarm group 1. */
		unsigned __sfrbit32 CF8            : 1;	/* Configuration flag x (x=0-2) for alarm 8 belonging to alarm group 1. */
		unsigned __sfrbit32 CF9            : 1;	/* Configuration flag x (x=0-2) for alarm 9 belonging to alarm group 1. */
		unsigned __sfrbit32 CF10           : 1;	/* Configuration flag x (x=0-2) for alarm 10 belonging to alarm group 1. */
		unsigned __sfrbit32 CF11           : 1;	/* Configuration flag x (x=0-2) for alarm 11 belonging to alarm group 1. */
		unsigned __sfrbit32 CF12           : 1;	/* Configuration flag x (x=0-2) for alarm 12 belonging to alarm group 1. */
		unsigned __sfrbit32 CF13           : 1;	/* Configuration flag x (x=0-2) for alarm 13 belonging to alarm group 1. */
		unsigned __sfrbit32 CF14           : 1;	/* Configuration flag x (x=0-2) for alarm 14 belonging to alarm group 1. */
		unsigned __sfrbit32 CF15           : 1;	/* Configuration flag x (x=0-2) for alarm 15 belonging to alarm group 1. */
		unsigned __sfrbit32 CF16           : 1;	/* Configuration flag x (x=0-2) for alarm 16 belonging to alarm group 1. */
		unsigned __sfrbit32 CF17           : 1;	/* Configuration flag x (x=0-2) for alarm 17 belonging to alarm group 1. */
		unsigned __sfrbit32 CF18           : 1;	/* Configuration flag x (x=0-2) for alarm 18 belonging to alarm group 1. */
		unsigned __sfrbit32 CF19           : 1;	/* Configuration flag x (x=0-2) for alarm 19 belonging to alarm group 1. */
		unsigned __sfrbit32 CF20           : 1;	/* Configuration flag x (x=0-2) for alarm 20 belonging to alarm group 1. */
		unsigned __sfrbit32 CF21           : 1;	/* Configuration flag x (x=0-2) for alarm 21 belonging to alarm group 1. */
		unsigned __sfrbit32 CF22           : 1;	/* Configuration flag x (x=0-2) for alarm 22 belonging to alarm group 1. */
		unsigned __sfrbit32 CF23           : 1;	/* Configuration flag x (x=0-2) for alarm 23 belonging to alarm group 1. */
		unsigned __sfrbit32 CF24           : 1;	/* Configuration flag x (x=0-2) for alarm 24 belonging to alarm group 1. */
		unsigned __sfrbit32 CF25           : 1;	/* Configuration flag x (x=0-2) for alarm 25 belonging to alarm group 1. */
		unsigned __sfrbit32 CF26           : 1;	/* Configuration flag x (x=0-2) for alarm 26 belonging to alarm group 1. */
		unsigned __sfrbit32 CF27           : 1;	/* Configuration flag x (x=0-2) for alarm 27 belonging to alarm group 1. */
		unsigned __sfrbit32 CF28           : 1;	/* Configuration flag x (x=0-2) for alarm 28 belonging to alarm group 1. */
		unsigned __sfrbit32 CF29           : 1;	/* Configuration flag x (x=0-2) for alarm 29 belonging to alarm group 1. */
		unsigned __sfrbit32 CF30           : 1;	/* Configuration flag x (x=0-2) for alarm 30 belonging to alarm group 1. */
		unsigned __sfrbit32 CF31           : 1;	/* Configuration flag x (x=0-2) for alarm 31 belonging to alarm group 1. */
	} B;
	int I;
	unsigned int U;

} SMU_AG1CF0_type;
#define SMU_AG1CF0	(*( SMU_AG1CF0_type *) 0xf003690cu)	/* Alarm Configuration Register */
#define SMU_AG1CF1	(*( SMU_AG1CF0_type *) 0xf0036910u)	/* Alarm Configuration Register */
#define SMU_AG1CF2	(*( SMU_AG1CF0_type *) 0xf0036914u)	/* Alarm Configuration Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 FE0            : 1;	/* Fault signalling configuration flag for alarm 0 belonging to alarm group 1. */
		unsigned __sfrbit32 FE1            : 1;	/* Fault signalling configuration flag for alarm 1 belonging to alarm group 1. */
		unsigned __sfrbit32 FE2            : 1;	/* Fault signalling configuration flag for alarm 2 belonging to alarm group 1. */
		unsigned __sfrbit32 FE3            : 1;	/* Fault signalling configuration flag for alarm 3 belonging to alarm group 1. */
		unsigned __sfrbit32 FE4            : 1;	/* Fault signalling configuration flag for alarm 4 belonging to alarm group 1. */
		unsigned __sfrbit32 FE5            : 1;	/* Fault signalling configuration flag for alarm 5 belonging to alarm group 1. */
		unsigned __sfrbit32 FE6            : 1;	/* Fault signalling configuration flag for alarm 6 belonging to alarm group 1. */
		unsigned __sfrbit32 FE7            : 1;	/* Fault signalling configuration flag for alarm 7 belonging to alarm group 1. */
		unsigned __sfrbit32 FE8            : 1;	/* Fault signalling configuration flag for alarm 8 belonging to alarm group 1. */
		unsigned __sfrbit32 FE9            : 1;	/* Fault signalling configuration flag for alarm 9 belonging to alarm group 1. */
		unsigned __sfrbit32 FE10           : 1;	/* Fault signalling configuration flag for alarm 10 belonging to alarm group 1. */
		unsigned __sfrbit32 FE11           : 1;	/* Fault signalling configuration flag for alarm 11 belonging to alarm group 1. */
		unsigned __sfrbit32 FE12           : 1;	/* Fault signalling configuration flag for alarm 12 belonging to alarm group 1. */
		unsigned __sfrbit32 FE13           : 1;	/* Fault signalling configuration flag for alarm 13 belonging to alarm group 1. */
		unsigned __sfrbit32 FE14           : 1;	/* Fault signalling configuration flag for alarm 14 belonging to alarm group 1. */
		unsigned __sfrbit32 FE15           : 1;	/* Fault signalling configuration flag for alarm 15 belonging to alarm group 1. */
		unsigned __sfrbit32 FE16           : 1;	/* Fault signalling configuration flag for alarm 16 belonging to alarm group 1. */
		unsigned __sfrbit32 FE17           : 1;	/* Fault signalling configuration flag for alarm 17 belonging to alarm group 1. */
		unsigned __sfrbit32 FE18           : 1;	/* Fault signalling configuration flag for alarm 18 belonging to alarm group 1. */
		unsigned __sfrbit32 FE19           : 1;	/* Fault signalling configuration flag for alarm 19 belonging to alarm group 1. */
		unsigned __sfrbit32 FE20           : 1;	/* Fault signalling configuration flag for alarm 20 belonging to alarm group 1. */
		unsigned __sfrbit32 FE21           : 1;	/* Fault signalling configuration flag for alarm 21 belonging to alarm group 1. */
		unsigned __sfrbit32 FE22           : 1;	/* Fault signalling configuration flag for alarm 22 belonging to alarm group 1. */
		unsigned __sfrbit32 FE23           : 1;	/* Fault signalling configuration flag for alarm 23 belonging to alarm group 1. */
		unsigned __sfrbit32 FE24           : 1;	/* Fault signalling configuration flag for alarm 24 belonging to alarm group 1. */
		unsigned __sfrbit32 FE25           : 1;	/* Fault signalling configuration flag for alarm 25 belonging to alarm group 1. */
		unsigned __sfrbit32 FE26           : 1;	/* Fault signalling configuration flag for alarm 26 belonging to alarm group 1. */
		unsigned __sfrbit32 FE27           : 1;	/* Fault signalling configuration flag for alarm 27 belonging to alarm group 1. */
		unsigned __sfrbit32 FE28           : 1;	/* Fault signalling configuration flag for alarm 28 belonging to alarm group 1. */
		unsigned __sfrbit32 FE29           : 1;	/* Fault signalling configuration flag for alarm 29 belonging to alarm group 1. */
		unsigned __sfrbit32 FE30           : 1;	/* Fault signalling configuration flag for alarm 30 belonging to alarm group 1. */
		unsigned __sfrbit32 FE31           : 1;	/* Fault signalling configuration flag for alarm 31 belonging to alarm group 1. */
	} B;
	int I;
	unsigned int U;

} SMU_AG1FSP_type;
#define SMU_AG1FSP	(*( SMU_AG1FSP_type *) 0xf0036984u)	/* FSP Configuration Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 CF0            : 1;	/* Configuration flag x (x=0-2) for alarm 0 belonging to alarm group 2. */
		unsigned __sfrbit32 CF1            : 1;	/* Configuration flag x (x=0-2) for alarm 1 belonging to alarm group 2. */
		unsigned __sfrbit32 CF2            : 1;	/* Configuration flag x (x=0-2) for alarm 2 belonging to alarm group 2. */
		unsigned __sfrbit32 CF3            : 1;	/* Configuration flag x (x=0-2) for alarm 3 belonging to alarm group 2. */
		unsigned __sfrbit32 CF4            : 1;	/* Configuration flag x (x=0-2) for alarm 4 belonging to alarm group 2. */
		unsigned __sfrbit32 CF5            : 1;	/* Configuration flag x (x=0-2) for alarm 5 belonging to alarm group 2. */
		unsigned __sfrbit32 CF6            : 1;	/* Configuration flag x (x=0-2) for alarm 6 belonging to alarm group 2. */
		unsigned __sfrbit32 CF7            : 1;	/* Configuration flag x (x=0-2) for alarm 7 belonging to alarm group 2. */
		unsigned __sfrbit32 CF8            : 1;	/* Configuration flag x (x=0-2) for alarm 8 belonging to alarm group 2. */
		unsigned __sfrbit32 CF9            : 1;	/* Configuration flag x (x=0-2) for alarm 9 belonging to alarm group 2. */
		unsigned __sfrbit32 CF10           : 1;	/* Configuration flag x (x=0-2) for alarm 10 belonging to alarm group 2. */
		unsigned __sfrbit32 CF11           : 1;	/* Configuration flag x (x=0-2) for alarm 11 belonging to alarm group 2. */
		unsigned __sfrbit32 CF12           : 1;	/* Configuration flag x (x=0-2) for alarm 12 belonging to alarm group 2. */
		unsigned __sfrbit32 CF13           : 1;	/* Configuration flag x (x=0-2) for alarm 13 belonging to alarm group 2. */
		unsigned __sfrbit32 CF14           : 1;	/* Configuration flag x (x=0-2) for alarm 14 belonging to alarm group 2. */
		unsigned __sfrbit32 CF15           : 1;	/* Configuration flag x (x=0-2) for alarm 15 belonging to alarm group 2. */
		unsigned __sfrbit32 CF16           : 1;	/* Configuration flag x (x=0-2) for alarm 16 belonging to alarm group 2. */
		unsigned __sfrbit32 CF17           : 1;	/* Configuration flag x (x=0-2) for alarm 17 belonging to alarm group 2. */
		unsigned __sfrbit32 CF18           : 1;	/* Configuration flag x (x=0-2) for alarm 18 belonging to alarm group 2. */
		unsigned __sfrbit32 CF19           : 1;	/* Configuration flag x (x=0-2) for alarm 19 belonging to alarm group 2. */
		unsigned __sfrbit32 CF20           : 1;	/* Configuration flag x (x=0-2) for alarm 20 belonging to alarm group 2. */
		unsigned __sfrbit32 CF21           : 1;	/* Configuration flag x (x=0-2) for alarm 21 belonging to alarm group 2. */
		unsigned __sfrbit32 CF22           : 1;	/* Configuration flag x (x=0-2) for alarm 22 belonging to alarm group 2. */
		unsigned __sfrbit32 CF23           : 1;	/* Configuration flag x (x=0-2) for alarm 23 belonging to alarm group 2. */
		unsigned __sfrbit32 CF24           : 1;	/* Configuration flag x (x=0-2) for alarm 24 belonging to alarm group 2. */
		unsigned __sfrbit32 CF25           : 1;	/* Configuration flag x (x=0-2) for alarm 25 belonging to alarm group 2. */
		unsigned __sfrbit32 CF26           : 1;	/* Configuration flag x (x=0-2) for alarm 26 belonging to alarm group 2. */
		unsigned __sfrbit32 CF27           : 1;	/* Configuration flag x (x=0-2) for alarm 27 belonging to alarm group 2. */
		unsigned __sfrbit32 CF28           : 1;	/* Configuration flag x (x=0-2) for alarm 28 belonging to alarm group 2. */
		unsigned __sfrbit32 CF29           : 1;	/* Configuration flag x (x=0-2) for alarm 29 belonging to alarm group 2. */
		unsigned __sfrbit32 CF30           : 1;	/* Configuration flag x (x=0-2) for alarm 30 belonging to alarm group 2. */
		unsigned __sfrbit32 CF31           : 1;	/* Configuration flag x (x=0-2) for alarm 31 belonging to alarm group 2. */
	} B;
	int I;
	unsigned int U;

} SMU_AG2CF0_type;
#define SMU_AG2CF0	(*( SMU_AG2CF0_type *) 0xf0036918u)	/* Alarm Configuration Register */
#define SMU_AG2CF1	(*( SMU_AG2CF0_type *) 0xf003691cu)	/* Alarm Configuration Register */
#define SMU_AG2CF2	(*( SMU_AG2CF0_type *) 0xf0036920u)	/* Alarm Configuration Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 FE0            : 1;	/* Fault signalling configuration flag for alarm 0 belonging to alarm group 2. */
		unsigned __sfrbit32 FE1            : 1;	/* Fault signalling configuration flag for alarm 1 belonging to alarm group 2. */
		unsigned __sfrbit32 FE2            : 1;	/* Fault signalling configuration flag for alarm 2 belonging to alarm group 2. */
		unsigned __sfrbit32 FE3            : 1;	/* Fault signalling configuration flag for alarm 3 belonging to alarm group 2. */
		unsigned __sfrbit32 FE4            : 1;	/* Fault signalling configuration flag for alarm 4 belonging to alarm group 2. */
		unsigned __sfrbit32 FE5            : 1;	/* Fault signalling configuration flag for alarm 5 belonging to alarm group 2. */
		unsigned __sfrbit32 FE6            : 1;	/* Fault signalling configuration flag for alarm 6 belonging to alarm group 2. */
		unsigned __sfrbit32 FE7            : 1;	/* Fault signalling configuration flag for alarm 7 belonging to alarm group 2. */
		unsigned __sfrbit32 FE8            : 1;	/* Fault signalling configuration flag for alarm 8 belonging to alarm group 2. */
		unsigned __sfrbit32 FE9            : 1;	/* Fault signalling configuration flag for alarm 9 belonging to alarm group 2. */
		unsigned __sfrbit32 FE10           : 1;	/* Fault signalling configuration flag for alarm 10 belonging to alarm group 2. */
		unsigned __sfrbit32 FE11           : 1;	/* Fault signalling configuration flag for alarm 11 belonging to alarm group 2. */
		unsigned __sfrbit32 FE12           : 1;	/* Fault signalling configuration flag for alarm 12 belonging to alarm group 2. */
		unsigned __sfrbit32 FE13           : 1;	/* Fault signalling configuration flag for alarm 13 belonging to alarm group 2. */
		unsigned __sfrbit32 FE14           : 1;	/* Fault signalling configuration flag for alarm 14 belonging to alarm group 2. */
		unsigned __sfrbit32 FE15           : 1;	/* Fault signalling configuration flag for alarm 15 belonging to alarm group 2. */
		unsigned __sfrbit32 FE16           : 1;	/* Fault signalling configuration flag for alarm 16 belonging to alarm group 2. */
		unsigned __sfrbit32 FE17           : 1;	/* Fault signalling configuration flag for alarm 17 belonging to alarm group 2. */
		unsigned __sfrbit32 FE18           : 1;	/* Fault signalling configuration flag for alarm 18 belonging to alarm group 2. */
		unsigned __sfrbit32 FE19           : 1;	/* Fault signalling configuration flag for alarm 19 belonging to alarm group 2. */
		unsigned __sfrbit32 FE20           : 1;	/* Fault signalling configuration flag for alarm 20 belonging to alarm group 2. */
		unsigned __sfrbit32 FE21           : 1;	/* Fault signalling configuration flag for alarm 21 belonging to alarm group 2. */
		unsigned __sfrbit32 FE22           : 1;	/* Fault signalling configuration flag for alarm 22 belonging to alarm group 2. */
		unsigned __sfrbit32 FE23           : 1;	/* Fault signalling configuration flag for alarm 23 belonging to alarm group 2. */
		unsigned __sfrbit32 FE24           : 1;	/* Fault signalling configuration flag for alarm 24 belonging to alarm group 2. */
		unsigned __sfrbit32 FE25           : 1;	/* Fault signalling configuration flag for alarm 25 belonging to alarm group 2. */
		unsigned __sfrbit32 FE26           : 1;	/* Fault signalling configuration flag for alarm 26 belonging to alarm group 2. */
		unsigned __sfrbit32 FE27           : 1;	/* Fault signalling configuration flag for alarm 27 belonging to alarm group 2. */
		unsigned __sfrbit32 FE28           : 1;	/* Fault signalling configuration flag for alarm 28 belonging to alarm group 2. */
		unsigned __sfrbit32 FE29           : 1;	/* Fault signalling configuration flag for alarm 29 belonging to alarm group 2. */
		unsigned __sfrbit32 FE30           : 1;	/* Fault signalling configuration flag for alarm 30 belonging to alarm group 2. */
		unsigned __sfrbit32 FE31           : 1;	/* Fault signalling configuration flag for alarm 31 belonging to alarm group 2. */
	} B;
	int I;
	unsigned int U;

} SMU_AG2FSP_type;
#define SMU_AG2FSP	(*( SMU_AG2FSP_type *) 0xf0036988u)	/* FSP Configuration Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 CF0            : 1;	/* Configuration flag x (x=0-0) for alarm 0 belonging to alarm group 3. */
		unsigned __sfrbit32 CF1            : 1;	/* Configuration flag x (x=0-0) for alarm 1 belonging to alarm group 3. */
		unsigned __sfrbit32 CF2            : 1;	/* Configuration flag x (x=0-0) for alarm 2 belonging to alarm group 3. */
		unsigned __sfrbit32 CF3            : 1;	/* Configuration flag x (x=0-0) for alarm 3 belonging to alarm group 3. */
		unsigned __sfrbit32 CF4            : 1;	/* Configuration flag x (x=0-0) for alarm 4 belonging to alarm group 3. */
		unsigned __sfrbit32 CF5            : 1;	/* Configuration flag x (x=0-0) for alarm 5 belonging to alarm group 3. */
		unsigned __sfrbit32 CF6            : 1;	/* Configuration flag x (x=0-0) for alarm 6 belonging to alarm group 3. */
		unsigned __sfrbit32 CF7            : 1;	/* Configuration flag x (x=0-0) for alarm 7 belonging to alarm group 3. */
		unsigned __sfrbit32 CF8            : 1;	/* Configuration flag x (x=0-0) for alarm 8 belonging to alarm group 3. */
		unsigned __sfrbit32 CF9            : 1;	/* Configuration flag x (x=0-0) for alarm 9 belonging to alarm group 3. */
		unsigned __sfrbit32 CF10           : 1;	/* Configuration flag x (x=0-0) for alarm 10 belonging to alarm group 3. */
		unsigned __sfrbit32 CF11           : 1;	/* Configuration flag x (x=0-0) for alarm 11 belonging to alarm group 3. */
		unsigned __sfrbit32 CF12           : 1;	/* Configuration flag x (x=0-0) for alarm 12 belonging to alarm group 3. */
		unsigned __sfrbit32 CF13           : 1;	/* Configuration flag x (x=0-0) for alarm 13 belonging to alarm group 3. */
		unsigned __sfrbit32 CF14           : 1;	/* Configuration flag x (x=0-0) for alarm 14 belonging to alarm group 3. */
		unsigned __sfrbit32 CF15           : 1;	/* Configuration flag x (x=0-0) for alarm 15 belonging to alarm group 3. */
		unsigned __sfrbit32 CF16           : 1;	/* Configuration flag x (x=0-0) for alarm 16 belonging to alarm group 3. */
		unsigned __sfrbit32 CF17           : 1;	/* Configuration flag x (x=0-0) for alarm 17 belonging to alarm group 3. */
		unsigned __sfrbit32 CF18           : 1;	/* Configuration flag x (x=0-0) for alarm 18 belonging to alarm group 3. */
		unsigned __sfrbit32 CF19           : 1;	/* Configuration flag x (x=0-0) for alarm 19 belonging to alarm group 3. */
		unsigned __sfrbit32 CF20           : 1;	/* Configuration flag x (x=0-0) for alarm 20 belonging to alarm group 3. */
		unsigned __sfrbit32 CF21           : 1;	/* Configuration flag x (x=0-0) for alarm 21 belonging to alarm group 3. */
		unsigned __sfrbit32 CF22           : 1;	/* Configuration flag x (x=0-0) for alarm 22 belonging to alarm group 3. */
		unsigned __sfrbit32 CF23           : 1;	/* Configuration flag x (x=0-0) for alarm 23 belonging to alarm group 3. */
		unsigned __sfrbit32 CF24           : 1;	/* Configuration flag x (x=0-0) for alarm 24 belonging to alarm group 3. */
		unsigned __sfrbit32 CF25           : 1;	/* Configuration flag x (x=0-0) for alarm 25 belonging to alarm group 3. */
		unsigned __sfrbit32 CF26           : 1;	/* Configuration flag x (x=0-0) for alarm 26 belonging to alarm group 3. */
		unsigned __sfrbit32 CF27           : 1;	/* Configuration flag x (x=0-0) for alarm 27 belonging to alarm group 3. */
		unsigned __sfrbit32 CF28           : 1;	/* Configuration flag x (x=0-0) for alarm 28 belonging to alarm group 3. */
		unsigned __sfrbit32 CF29           : 1;	/* Configuration flag x (x=0-0) for alarm 29 belonging to alarm group 3. */
		unsigned __sfrbit32 CF30           : 1;	/* Configuration flag x (x=0-0) for alarm 30 belonging to alarm group 3. */
		unsigned __sfrbit32 CF31           : 1;	/* Configuration flag x (x=0-0) for alarm 31 belonging to alarm group 3. */
	} B;
	int I;
	unsigned int U;

} SMU_AG3CF0_type;
#define SMU_AG3CF0	(*( SMU_AG3CF0_type *) 0xf0036924u)	/* Alarm Configuration Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 CF0            : 1;	/* Configuration flag x (x=1-1) for alarm 0 belonging to alarm group 3. */
		unsigned __sfrbit32 CF1            : 1;	/* Configuration flag x (x=1-1) for alarm 1 belonging to alarm group 3. */
		unsigned __sfrbit32 CF2            : 1;	/* Configuration flag x (x=1-1) for alarm 2 belonging to alarm group 3. */
		unsigned __sfrbit32 CF3            : 1;	/* Configuration flag x (x=1-1) for alarm 3 belonging to alarm group 3. */
		unsigned __sfrbit32 CF4            : 1;	/* Configuration flag x (x=1-1) for alarm 4 belonging to alarm group 3. */
		unsigned __sfrbit32 CF5            : 1;	/* Configuration flag x (x=1-1) for alarm 5 belonging to alarm group 3. */
		unsigned __sfrbit32 CF6            : 1;	/* Configuration flag x (x=1-1) for alarm 6 belonging to alarm group 3. */
		unsigned __sfrbit32 CF7            : 1;	/* Configuration flag x (x=1-1) for alarm 7 belonging to alarm group 3. */
		unsigned __sfrbit32 CF8            : 1;	/* Configuration flag x (x=1-1) for alarm 8 belonging to alarm group 3. */
		unsigned __sfrbit32 CF9            : 1;	/* Configuration flag x (x=1-1) for alarm 9 belonging to alarm group 3. */
		unsigned __sfrbit32 CF10           : 1;	/* Configuration flag x (x=1-1) for alarm 10 belonging to alarm group 3. */
		unsigned __sfrbit32 CF11           : 1;	/* Configuration flag x (x=1-1) for alarm 11 belonging to alarm group 3. */
		unsigned __sfrbit32 CF12           : 1;	/* Configuration flag x (x=1-1) for alarm 12 belonging to alarm group 3. */
		unsigned __sfrbit32 CF13           : 1;	/* Configuration flag x (x=1-1) for alarm 13 belonging to alarm group 3. */
		unsigned __sfrbit32 CF14           : 1;	/* Configuration flag x (x=1-1) for alarm 14 belonging to alarm group 3. */
		unsigned __sfrbit32 CF15           : 1;	/* Configuration flag x (x=1-1) for alarm 15 belonging to alarm group 3. */
		unsigned __sfrbit32 CF16           : 1;	/* Configuration flag x (x=1-1) for alarm 16 belonging to alarm group 3. */
		unsigned __sfrbit32 CF17           : 1;	/* Configuration flag x (x=1-1) for alarm 17 belonging to alarm group 3. */
		unsigned __sfrbit32 CF18           : 1;	/* Configuration flag x (x=1-1) for alarm 18 belonging to alarm group 3. */
		unsigned __sfrbit32 CF19           : 1;	/* Configuration flag x (x=1-1) for alarm 19 belonging to alarm group 3. */
		unsigned __sfrbit32 CF20           : 1;	/* Configuration flag x (x=1-1) for alarm 20 belonging to alarm group 3. */
		unsigned __sfrbit32 CF21           : 1;	/* Configuration flag x (x=1-1) for alarm 21 belonging to alarm group 3. */
		unsigned __sfrbit32 CF22           : 1;	/* Configuration flag x (x=1-1) for alarm 22 belonging to alarm group 3. */
		unsigned __sfrbit32 CF23           : 1;	/* Configuration flag x (x=1-1) for alarm 23 belonging to alarm group 3. */
		unsigned __sfrbit32 CF24           : 1;	/* Configuration flag x (x=1-1) for alarm 24 belonging to alarm group 3. */
		unsigned __sfrbit32 CF25           : 1;	/* Configuration flag x (x=1-1) for alarm 25 belonging to alarm group 3. */
		unsigned __sfrbit32 CF26           : 1;	/* Configuration flag x (x=1-1) for alarm 26 belonging to alarm group 3. */
		unsigned __sfrbit32 CF27           : 1;	/* Configuration flag x (x=1-1) for alarm 27 belonging to alarm group 3. */
		unsigned __sfrbit32 CF28           : 1;	/* Configuration flag x (x=1-1) for alarm 28 belonging to alarm group 3. */
		unsigned __sfrbit32 CF29           : 1;	/* Configuration flag x (x=1-1) for alarm 29 belonging to alarm group 3. */
		unsigned __sfrbit32 CF30           : 1;	/* Configuration flag x (x=1-1) for alarm 30 belonging to alarm group 3. */
		unsigned __sfrbit32 CF31           : 1;	/* Configuration flag x (x=1-1) for alarm 31 belonging to alarm group 3. */
	} B;
	int I;
	unsigned int U;

} SMU_AG3CF1_type;
#define SMU_AG3CF1	(*( SMU_AG3CF1_type *) 0xf0036928u)	/* Alarm Configuration Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 CF0            : 1;	/* Configuration flag x (x=2) for alarm 0 belonging to alarm group 3. */
		unsigned __sfrbit32 CF1            : 1;	/* Configuration flag x (x=2) for alarm 1 belonging to alarm group 3. */
		unsigned __sfrbit32 CF2            : 1;	/* Configuration flag x (x=2) for alarm 2 belonging to alarm group 3. */
		unsigned __sfrbit32 CF3            : 1;	/* Configuration flag x (x=2) for alarm 3 belonging to alarm group 3. */
		unsigned __sfrbit32 CF4            : 1;	/* Configuration flag x (x=2) for alarm 4 belonging to alarm group 3. */
		unsigned __sfrbit32 CF5            : 1;	/* Configuration flag x (x=2) for alarm 5 belonging to alarm group 3. */
		unsigned __sfrbit32 CF6            : 1;	/* Configuration flag x (x=2) for alarm 6 belonging to alarm group 3. */
		unsigned __sfrbit32 CF7            : 1;	/* Configuration flag x (x=2) for alarm 7 belonging to alarm group 3. */
		unsigned __sfrbit32 CF8            : 1;	/* Configuration flag x (x=2) for alarm 8 belonging to alarm group 3. */
		unsigned __sfrbit32 CF9            : 1;	/* Configuration flag x (x=2) for alarm 9 belonging to alarm group 3. */
		unsigned __sfrbit32 CF10           : 1;	/* Configuration flag x (x=2) for alarm 10 belonging to alarm group 3. */
		unsigned __sfrbit32 CF11           : 1;	/* Configuration flag x (x=2) for alarm 11 belonging to alarm group 3. */
		unsigned __sfrbit32 CF12           : 1;	/* Configuration flag x (x=2) for alarm 12 belonging to alarm group 3. */
		unsigned __sfrbit32 CF13           : 1;	/* Configuration flag x (x=2) for alarm 13 belonging to alarm group 3. */
		unsigned __sfrbit32 CF14           : 1;	/* Configuration flag x (x=2) for alarm 14 belonging to alarm group 3. */
		unsigned __sfrbit32 CF15           : 1;	/* Configuration flag x (x=2) for alarm 15 belonging to alarm group 3. */
		unsigned __sfrbit32 CF16           : 1;	/* Configuration flag x (x=2) for alarm 16 belonging to alarm group 3. */
		unsigned __sfrbit32 CF17           : 1;	/* Configuration flag x (x=2) for alarm 17 belonging to alarm group 3. */
		unsigned __sfrbit32 CF18           : 1;	/* Configuration flag x (x=2) for alarm 18 belonging to alarm group 3. */
		unsigned __sfrbit32 CF19           : 1;	/* Configuration flag x (x=2) for alarm 19 belonging to alarm group 3. */
		unsigned __sfrbit32 CF20           : 1;	/* Configuration flag x (x=2) for alarm 20 belonging to alarm group 3. */
		unsigned __sfrbit32 CF21           : 1;	/* Configuration flag x (x=2) for alarm 21 belonging to alarm group 3. */
		unsigned __sfrbit32 CF22           : 1;	/* Configuration flag x (x=2) for alarm 22 belonging to alarm group 3. */
		unsigned __sfrbit32 CF23           : 1;	/* Configuration flag x (x=2) for alarm 23 belonging to alarm group 3. */
		unsigned __sfrbit32 CF24           : 1;	/* Configuration flag x (x=2) for alarm 24 belonging to alarm group 3. */
		unsigned __sfrbit32 CF25           : 1;	/* Configuration flag x (x=2) for alarm 25 belonging to alarm group 3. */
		unsigned __sfrbit32 CF26           : 1;	/* Configuration flag x (x=2) for alarm 26 belonging to alarm group 3. */
		unsigned __sfrbit32 CF27           : 1;	/* Configuration flag x (x=2) for alarm 27 belonging to alarm group 3. */
		unsigned __sfrbit32 CF28           : 1;	/* Configuration flag x (x=2) for alarm 28 belonging to alarm group 3. */
		unsigned __sfrbit32 CF29           : 1;	/* Configuration flag x (x=2) for alarm 29 belonging to alarm group 3. */
		unsigned __sfrbit32 CF30           : 1;	/* Configuration flag x (x=2) for alarm 30 belonging to alarm group 3. */
		unsigned __sfrbit32 CF31           : 1;	/* Configuration flag x (x=2) for alarm 31 belonging to alarm group 3. */
	} B;
	int I;
	unsigned int U;

} SMU_AG3CF2_type;
#define SMU_AG3CF2	(*( SMU_AG3CF2_type *) 0xf003692cu)	/* Alarm Configuration Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 FE0            : 1;	/* Fault signalling configuration flag for alarm 0 belonging to alarm group 3. */
		unsigned __sfrbit32 FE1            : 1;	/* Fault signalling configuration flag for alarm 1 belonging to alarm group 3. */
		unsigned __sfrbit32 FE2            : 1;	/* Fault signalling configuration flag for alarm 2 belonging to alarm group 3. */
		unsigned __sfrbit32 FE3            : 1;	/* Fault signalling configuration flag for alarm 3 belonging to alarm group 3. */
		unsigned __sfrbit32 FE4            : 1;	/* Fault signalling configuration flag for alarm 4 belonging to alarm group 3. */
		unsigned __sfrbit32 FE5            : 1;	/* Fault signalling configuration flag for alarm 5 belonging to alarm group 3. */
		unsigned __sfrbit32 FE6            : 1;	/* Fault signalling configuration flag for alarm 6 belonging to alarm group 3. */
		unsigned __sfrbit32 FE7            : 1;	/* Fault signalling configuration flag for alarm 7 belonging to alarm group 3. */
		unsigned __sfrbit32 FE8            : 1;	/* Fault signalling configuration flag for alarm 8 belonging to alarm group 3. */
		unsigned __sfrbit32 FE9            : 1;	/* Fault signalling configuration flag for alarm 9 belonging to alarm group 3. */
		unsigned __sfrbit32 FE10           : 1;	/* Fault signalling configuration flag for alarm 10 belonging to alarm group 3. */
		unsigned __sfrbit32 FE11           : 1;	/* Fault signalling configuration flag for alarm 11 belonging to alarm group 3. */
		unsigned __sfrbit32 FE12           : 1;	/* Fault signalling configuration flag for alarm 12 belonging to alarm group 3. */
		unsigned __sfrbit32 FE13           : 1;	/* Fault signalling configuration flag for alarm 13 belonging to alarm group 3. */
		unsigned __sfrbit32 FE14           : 1;	/* Fault signalling configuration flag for alarm 14 belonging to alarm group 3. */
		unsigned __sfrbit32 FE15           : 1;	/* Fault signalling configuration flag for alarm 15 belonging to alarm group 3. */
		unsigned __sfrbit32 FE16           : 1;	/* Fault signalling configuration flag for alarm 16 belonging to alarm group 3. */
		unsigned __sfrbit32 FE17           : 1;	/* Fault signalling configuration flag for alarm 17 belonging to alarm group 3. */
		unsigned __sfrbit32 FE18           : 1;	/* Fault signalling configuration flag for alarm 18 belonging to alarm group 3. */
		unsigned __sfrbit32 FE19           : 1;	/* Fault signalling configuration flag for alarm 19 belonging to alarm group 3. */
		unsigned __sfrbit32 FE20           : 1;	/* Fault signalling configuration flag for alarm 20 belonging to alarm group 3. */
		unsigned __sfrbit32 FE21           : 1;	/* Fault signalling configuration flag for alarm 21 belonging to alarm group 3. */
		unsigned __sfrbit32 FE22           : 1;	/* Fault signalling configuration flag for alarm 22 belonging to alarm group 3. */
		unsigned __sfrbit32 FE23           : 1;	/* Fault signalling configuration flag for alarm 23 belonging to alarm group 3. */
		unsigned __sfrbit32 FE24           : 1;	/* Fault signalling configuration flag for alarm 24 belonging to alarm group 3. */
		unsigned __sfrbit32 FE25           : 1;	/* Fault signalling configuration flag for alarm 25 belonging to alarm group 3. */
		unsigned __sfrbit32 FE26           : 1;	/* Fault signalling configuration flag for alarm 26 belonging to alarm group 3. */
		unsigned __sfrbit32 FE27           : 1;	/* Fault signalling configuration flag for alarm 27 belonging to alarm group 3. */
		unsigned __sfrbit32 FE28           : 1;	/* Fault signalling configuration flag for alarm 28 belonging to alarm group 3. */
		unsigned __sfrbit32 FE29           : 1;	/* Fault signalling configuration flag for alarm 29 belonging to alarm group 3. */
		unsigned __sfrbit32 FE30           : 1;	/* Fault signalling configuration flag for alarm 30 belonging to alarm group 3. */
		unsigned __sfrbit32 FE31           : 1;	/* Fault signalling configuration flag for alarm 31 belonging to alarm group 3. */
	} B;
	int I;
	unsigned int U;

} SMU_AG3FSP_type;
#define SMU_AG3FSP	(*( SMU_AG3FSP_type *) 0xf003698cu)	/* FSP Configuration Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 CF0            : 1;	/* Configuration flag x (x=0-2) for alarm 0 belonging to alarm group 4. */
		unsigned __sfrbit32 CF1            : 1;	/* Configuration flag x (x=0-2) for alarm 1 belonging to alarm group 4. */
		unsigned __sfrbit32 CF2            : 1;	/* Configuration flag x (x=0-2) for alarm 2 belonging to alarm group 4. */
		unsigned __sfrbit32 CF3            : 1;	/* Configuration flag x (x=0-2) for alarm 3 belonging to alarm group 4. */
		unsigned __sfrbit32 CF4            : 1;	/* Configuration flag x (x=0-2) for alarm 4 belonging to alarm group 4. */
		unsigned __sfrbit32 CF5            : 1;	/* Configuration flag x (x=0-2) for alarm 5 belonging to alarm group 4. */
		unsigned __sfrbit32 CF6            : 1;	/* Configuration flag x (x=0-2) for alarm 6 belonging to alarm group 4. */
		unsigned __sfrbit32 CF7            : 1;	/* Configuration flag x (x=0-2) for alarm 7 belonging to alarm group 4. */
		unsigned __sfrbit32 CF8            : 1;	/* Configuration flag x (x=0-2) for alarm 8 belonging to alarm group 4. */
		unsigned __sfrbit32 CF9            : 1;	/* Configuration flag x (x=0-2) for alarm 9 belonging to alarm group 4. */
		unsigned __sfrbit32 CF10           : 1;	/* Configuration flag x (x=0-2) for alarm 10 belonging to alarm group 4. */
		unsigned __sfrbit32 CF11           : 1;	/* Configuration flag x (x=0-2) for alarm 11 belonging to alarm group 4. */
		unsigned __sfrbit32 CF12           : 1;	/* Configuration flag x (x=0-2) for alarm 12 belonging to alarm group 4. */
		unsigned __sfrbit32 CF13           : 1;	/* Configuration flag x (x=0-2) for alarm 13 belonging to alarm group 4. */
		unsigned __sfrbit32 CF14           : 1;	/* Configuration flag x (x=0-2) for alarm 14 belonging to alarm group 4. */
		unsigned __sfrbit32 CF15           : 1;	/* Configuration flag x (x=0-2) for alarm 15 belonging to alarm group 4. */
		unsigned __sfrbit32 CF16           : 1;	/* Configuration flag x (x=0-2) for alarm 16 belonging to alarm group 4. */
		unsigned __sfrbit32 CF17           : 1;	/* Configuration flag x (x=0-2) for alarm 17 belonging to alarm group 4. */
		unsigned __sfrbit32 CF18           : 1;	/* Configuration flag x (x=0-2) for alarm 18 belonging to alarm group 4. */
		unsigned __sfrbit32 CF19           : 1;	/* Configuration flag x (x=0-2) for alarm 19 belonging to alarm group 4. */
		unsigned __sfrbit32 CF20           : 1;	/* Configuration flag x (x=0-2) for alarm 20 belonging to alarm group 4. */
		unsigned __sfrbit32 CF21           : 1;	/* Configuration flag x (x=0-2) for alarm 21 belonging to alarm group 4. */
		unsigned __sfrbit32 CF22           : 1;	/* Configuration flag x (x=0-2) for alarm 22 belonging to alarm group 4. */
		unsigned __sfrbit32 CF23           : 1;	/* Configuration flag x (x=0-2) for alarm 23 belonging to alarm group 4. */
		unsigned __sfrbit32 CF24           : 1;	/* Configuration flag x (x=0-2) for alarm 24 belonging to alarm group 4. */
		unsigned __sfrbit32 CF25           : 1;	/* Configuration flag x (x=0-2) for alarm 25 belonging to alarm group 4. */
		unsigned __sfrbit32 CF26           : 1;	/* Configuration flag x (x=0-2) for alarm 26 belonging to alarm group 4. */
		unsigned __sfrbit32 CF27           : 1;	/* Configuration flag x (x=0-2) for alarm 27 belonging to alarm group 4. */
		unsigned __sfrbit32 CF28           : 1;	/* Configuration flag x (x=0-2) for alarm 28 belonging to alarm group 4. */
		unsigned __sfrbit32 CF29           : 1;	/* Configuration flag x (x=0-2) for alarm 29 belonging to alarm group 4. */
		unsigned __sfrbit32 CF30           : 1;	/* Configuration flag x (x=0-2) for alarm 30 belonging to alarm group 4. */
		unsigned __sfrbit32 CF31           : 1;	/* Configuration flag x (x=0-2) for alarm 31 belonging to alarm group 4. */
	} B;
	int I;
	unsigned int U;

} SMU_AG4CF0_type;
#define SMU_AG4CF0	(*( SMU_AG4CF0_type *) 0xf0036930u)	/* Alarm Configuration Register */
#define SMU_AG4CF1	(*( SMU_AG4CF0_type *) 0xf0036934u)	/* Alarm Configuration Register */
#define SMU_AG4CF2	(*( SMU_AG4CF0_type *) 0xf0036938u)	/* Alarm Configuration Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 FE0            : 1;	/* Fault signalling configuration flag for alarm 0 belonging to alarm group 4. */
		unsigned __sfrbit32 FE1            : 1;	/* Fault signalling configuration flag for alarm 1 belonging to alarm group 4. */
		unsigned __sfrbit32 FE2            : 1;	/* Fault signalling configuration flag for alarm 2 belonging to alarm group 4. */
		unsigned __sfrbit32 FE3            : 1;	/* Fault signalling configuration flag for alarm 3 belonging to alarm group 4. */
		unsigned __sfrbit32 FE4            : 1;	/* Fault signalling configuration flag for alarm 4 belonging to alarm group 4. */
		unsigned __sfrbit32 FE5            : 1;	/* Fault signalling configuration flag for alarm 5 belonging to alarm group 4. */
		unsigned __sfrbit32 FE6            : 1;	/* Fault signalling configuration flag for alarm 6 belonging to alarm group 4. */
		unsigned __sfrbit32 FE7            : 1;	/* Fault signalling configuration flag for alarm 7 belonging to alarm group 4. */
		unsigned __sfrbit32 FE8            : 1;	/* Fault signalling configuration flag for alarm 8 belonging to alarm group 4. */
		unsigned __sfrbit32 FE9            : 1;	/* Fault signalling configuration flag for alarm 9 belonging to alarm group 4. */
		unsigned __sfrbit32 FE10           : 1;	/* Fault signalling configuration flag for alarm 10 belonging to alarm group 4. */
		unsigned __sfrbit32 FE11           : 1;	/* Fault signalling configuration flag for alarm 11 belonging to alarm group 4. */
		unsigned __sfrbit32 FE12           : 1;	/* Fault signalling configuration flag for alarm 12 belonging to alarm group 4. */
		unsigned __sfrbit32 FE13           : 1;	/* Fault signalling configuration flag for alarm 13 belonging to alarm group 4. */
		unsigned __sfrbit32 FE14           : 1;	/* Fault signalling configuration flag for alarm 14 belonging to alarm group 4. */
		unsigned __sfrbit32 FE15           : 1;	/* Fault signalling configuration flag for alarm 15 belonging to alarm group 4. */
		unsigned __sfrbit32 FE16           : 1;	/* Fault signalling configuration flag for alarm 16 belonging to alarm group 4. */
		unsigned __sfrbit32 FE17           : 1;	/* Fault signalling configuration flag for alarm 17 belonging to alarm group 4. */
		unsigned __sfrbit32 FE18           : 1;	/* Fault signalling configuration flag for alarm 18 belonging to alarm group 4. */
		unsigned __sfrbit32 FE19           : 1;	/* Fault signalling configuration flag for alarm 19 belonging to alarm group 4. */
		unsigned __sfrbit32 FE20           : 1;	/* Fault signalling configuration flag for alarm 20 belonging to alarm group 4. */
		unsigned __sfrbit32 FE21           : 1;	/* Fault signalling configuration flag for alarm 21 belonging to alarm group 4. */
		unsigned __sfrbit32 FE22           : 1;	/* Fault signalling configuration flag for alarm 22 belonging to alarm group 4. */
		unsigned __sfrbit32 FE23           : 1;	/* Fault signalling configuration flag for alarm 23 belonging to alarm group 4. */
		unsigned __sfrbit32 FE24           : 1;	/* Fault signalling configuration flag for alarm 24 belonging to alarm group 4. */
		unsigned __sfrbit32 FE25           : 1;	/* Fault signalling configuration flag for alarm 25 belonging to alarm group 4. */
		unsigned __sfrbit32 FE26           : 1;	/* Fault signalling configuration flag for alarm 26 belonging to alarm group 4. */
		unsigned __sfrbit32 FE27           : 1;	/* Fault signalling configuration flag for alarm 27 belonging to alarm group 4. */
		unsigned __sfrbit32 FE28           : 1;	/* Fault signalling configuration flag for alarm 28 belonging to alarm group 4. */
		unsigned __sfrbit32 FE29           : 1;	/* Fault signalling configuration flag for alarm 29 belonging to alarm group 4. */
		unsigned __sfrbit32 FE30           : 1;	/* Fault signalling configuration flag for alarm 30 belonging to alarm group 4. */
		unsigned __sfrbit32 FE31           : 1;	/* Fault signalling configuration flag for alarm 31 belonging to alarm group 4. */
	} B;
	int I;
	unsigned int U;

} SMU_AG4FSP_type;
#define SMU_AG4FSP	(*( SMU_AG4FSP_type *) 0xf0036990u)	/* FSP Configuration Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 CF0            : 1;	/* Configuration flag x (x=0-2) for alarm 0 belonging to alarm group 5. */
		unsigned __sfrbit32 CF1            : 1;	/* Configuration flag x (x=0-2) for alarm 1 belonging to alarm group 5. */
		unsigned __sfrbit32 CF2            : 1;	/* Configuration flag x (x=0-2) for alarm 2 belonging to alarm group 5. */
		unsigned __sfrbit32 CF3            : 1;	/* Configuration flag x (x=0-2) for alarm 3 belonging to alarm group 5. */
		unsigned __sfrbit32 CF4            : 1;	/* Configuration flag x (x=0-2) for alarm 4 belonging to alarm group 5. */
		unsigned __sfrbit32 CF5            : 1;	/* Configuration flag x (x=0-2) for alarm 5 belonging to alarm group 5. */
		unsigned __sfrbit32 CF6            : 1;	/* Configuration flag x (x=0-2) for alarm 6 belonging to alarm group 5. */
		unsigned __sfrbit32 CF7            : 1;	/* Configuration flag x (x=0-2) for alarm 7 belonging to alarm group 5. */
		unsigned __sfrbit32 CF8            : 1;	/* Configuration flag x (x=0-2) for alarm 8 belonging to alarm group 5. */
		unsigned __sfrbit32 CF9            : 1;	/* Configuration flag x (x=0-2) for alarm 9 belonging to alarm group 5. */
		unsigned __sfrbit32 CF10           : 1;	/* Configuration flag x (x=0-2) for alarm 10 belonging to alarm group 5. */
		unsigned __sfrbit32 CF11           : 1;	/* Configuration flag x (x=0-2) for alarm 11 belonging to alarm group 5. */
		unsigned __sfrbit32 CF12           : 1;	/* Configuration flag x (x=0-2) for alarm 12 belonging to alarm group 5. */
		unsigned __sfrbit32 CF13           : 1;	/* Configuration flag x (x=0-2) for alarm 13 belonging to alarm group 5. */
		unsigned __sfrbit32 CF14           : 1;	/* Configuration flag x (x=0-2) for alarm 14 belonging to alarm group 5. */
		unsigned __sfrbit32 CF15           : 1;	/* Configuration flag x (x=0-2) for alarm 15 belonging to alarm group 5. */
		unsigned __sfrbit32 CF16           : 1;	/* Configuration flag x (x=0-2) for alarm 16 belonging to alarm group 5. */
		unsigned __sfrbit32 CF17           : 1;	/* Configuration flag x (x=0-2) for alarm 17 belonging to alarm group 5. */
		unsigned __sfrbit32 CF18           : 1;	/* Configuration flag x (x=0-2) for alarm 18 belonging to alarm group 5. */
		unsigned __sfrbit32 CF19           : 1;	/* Configuration flag x (x=0-2) for alarm 19 belonging to alarm group 5. */
		unsigned __sfrbit32 CF20           : 1;	/* Configuration flag x (x=0-2) for alarm 20 belonging to alarm group 5. */
		unsigned __sfrbit32 CF21           : 1;	/* Configuration flag x (x=0-2) for alarm 21 belonging to alarm group 5. */
		unsigned __sfrbit32 CF22           : 1;	/* Configuration flag x (x=0-2) for alarm 22 belonging to alarm group 5. */
		unsigned __sfrbit32 CF23           : 1;	/* Configuration flag x (x=0-2) for alarm 23 belonging to alarm group 5. */
		unsigned __sfrbit32 CF24           : 1;	/* Configuration flag x (x=0-2) for alarm 24 belonging to alarm group 5. */
		unsigned __sfrbit32 CF25           : 1;	/* Configuration flag x (x=0-2) for alarm 25 belonging to alarm group 5. */
		unsigned __sfrbit32 CF26           : 1;	/* Configuration flag x (x=0-2) for alarm 26 belonging to alarm group 5. */
		unsigned __sfrbit32 CF27           : 1;	/* Configuration flag x (x=0-2) for alarm 27 belonging to alarm group 5. */
		unsigned __sfrbit32 CF28           : 1;	/* Configuration flag x (x=0-2) for alarm 28 belonging to alarm group 5. */
		unsigned __sfrbit32 CF29           : 1;	/* Configuration flag x (x=0-2) for alarm 29 belonging to alarm group 5. */
		unsigned __sfrbit32 CF30           : 1;	/* Configuration flag x (x=0-2) for alarm 30 belonging to alarm group 5. */
		unsigned __sfrbit32 CF31           : 1;	/* Configuration flag x (x=0-2) for alarm 31 belonging to alarm group 5. */
	} B;
	int I;
	unsigned int U;

} SMU_AG5CF0_type;
#define SMU_AG5CF0	(*( SMU_AG5CF0_type *) 0xf003693cu)	/* Alarm Configuration Register */
#define SMU_AG5CF1	(*( SMU_AG5CF0_type *) 0xf0036940u)	/* Alarm Configuration Register */
#define SMU_AG5CF2	(*( SMU_AG5CF0_type *) 0xf0036944u)	/* Alarm Configuration Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 FE0            : 1;	/* Fault signalling configuration flag for alarm 0 belonging to alarm group 5. */
		unsigned __sfrbit32 FE1            : 1;	/* Fault signalling configuration flag for alarm 1 belonging to alarm group 5. */
		unsigned __sfrbit32 FE2            : 1;	/* Fault signalling configuration flag for alarm 2 belonging to alarm group 5. */
		unsigned __sfrbit32 FE3            : 1;	/* Fault signalling configuration flag for alarm 3 belonging to alarm group 5. */
		unsigned __sfrbit32 FE4            : 1;	/* Fault signalling configuration flag for alarm 4 belonging to alarm group 5. */
		unsigned __sfrbit32 FE5            : 1;	/* Fault signalling configuration flag for alarm 5 belonging to alarm group 5. */
		unsigned __sfrbit32 FE6            : 1;	/* Fault signalling configuration flag for alarm 6 belonging to alarm group 5. */
		unsigned __sfrbit32 FE7            : 1;	/* Fault signalling configuration flag for alarm 7 belonging to alarm group 5. */
		unsigned __sfrbit32 FE8            : 1;	/* Fault signalling configuration flag for alarm 8 belonging to alarm group 5. */
		unsigned __sfrbit32 FE9            : 1;	/* Fault signalling configuration flag for alarm 9 belonging to alarm group 5. */
		unsigned __sfrbit32 FE10           : 1;	/* Fault signalling configuration flag for alarm 10 belonging to alarm group 5. */
		unsigned __sfrbit32 FE11           : 1;	/* Fault signalling configuration flag for alarm 11 belonging to alarm group 5. */
		unsigned __sfrbit32 FE12           : 1;	/* Fault signalling configuration flag for alarm 12 belonging to alarm group 5. */
		unsigned __sfrbit32 FE13           : 1;	/* Fault signalling configuration flag for alarm 13 belonging to alarm group 5. */
		unsigned __sfrbit32 FE14           : 1;	/* Fault signalling configuration flag for alarm 14 belonging to alarm group 5. */
		unsigned __sfrbit32 FE15           : 1;	/* Fault signalling configuration flag for alarm 15 belonging to alarm group 5. */
		unsigned __sfrbit32 FE16           : 1;	/* Fault signalling configuration flag for alarm 16 belonging to alarm group 5. */
		unsigned __sfrbit32 FE17           : 1;	/* Fault signalling configuration flag for alarm 17 belonging to alarm group 5. */
		unsigned __sfrbit32 FE18           : 1;	/* Fault signalling configuration flag for alarm 18 belonging to alarm group 5. */
		unsigned __sfrbit32 FE19           : 1;	/* Fault signalling configuration flag for alarm 19 belonging to alarm group 5. */
		unsigned __sfrbit32 FE20           : 1;	/* Fault signalling configuration flag for alarm 20 belonging to alarm group 5. */
		unsigned __sfrbit32 FE21           : 1;	/* Fault signalling configuration flag for alarm 21 belonging to alarm group 5. */
		unsigned __sfrbit32 FE22           : 1;	/* Fault signalling configuration flag for alarm 22 belonging to alarm group 5. */
		unsigned __sfrbit32 FE23           : 1;	/* Fault signalling configuration flag for alarm 23 belonging to alarm group 5. */
		unsigned __sfrbit32 FE24           : 1;	/* Fault signalling configuration flag for alarm 24 belonging to alarm group 5. */
		unsigned __sfrbit32 FE25           : 1;	/* Fault signalling configuration flag for alarm 25 belonging to alarm group 5. */
		unsigned __sfrbit32 FE26           : 1;	/* Fault signalling configuration flag for alarm 26 belonging to alarm group 5. */
		unsigned __sfrbit32 FE27           : 1;	/* Fault signalling configuration flag for alarm 27 belonging to alarm group 5. */
		unsigned __sfrbit32 FE28           : 1;	/* Fault signalling configuration flag for alarm 28 belonging to alarm group 5. */
		unsigned __sfrbit32 FE29           : 1;	/* Fault signalling configuration flag for alarm 29 belonging to alarm group 5. */
		unsigned __sfrbit32 FE30           : 1;	/* Fault signalling configuration flag for alarm 30 belonging to alarm group 5. */
		unsigned __sfrbit32 FE31           : 1;	/* Fault signalling configuration flag for alarm 31 belonging to alarm group 5. */
	} B;
	int I;
	unsigned int U;

} SMU_AG5FSP_type;
#define SMU_AG5FSP	(*( SMU_AG5FSP_type *) 0xf0036994u)	/* FSP Configuration Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 CF0            : 1;	/* Configuration flag x (x=0-2) for alarm 0 belonging to alarm group 6. */
		unsigned __sfrbit32 CF1            : 1;	/* Configuration flag x (x=0-2) for alarm 1 belonging to alarm group 6. */
		unsigned __sfrbit32 CF2            : 1;	/* Configuration flag x (x=0-2) for alarm 2 belonging to alarm group 6. */
		unsigned __sfrbit32 CF3            : 1;	/* Configuration flag x (x=0-2) for alarm 3 belonging to alarm group 6. */
		unsigned __sfrbit32 CF4            : 1;	/* Configuration flag x (x=0-2) for alarm 4 belonging to alarm group 6. */
		unsigned __sfrbit32 CF5            : 1;	/* Configuration flag x (x=0-2) for alarm 5 belonging to alarm group 6. */
		unsigned __sfrbit32 CF6            : 1;	/* Configuration flag x (x=0-2) for alarm 6 belonging to alarm group 6. */
		unsigned __sfrbit32 CF7            : 1;	/* Configuration flag x (x=0-2) for alarm 7 belonging to alarm group 6. */
		unsigned __sfrbit32 CF8            : 1;	/* Configuration flag x (x=0-2) for alarm 8 belonging to alarm group 6. */
		unsigned __sfrbit32 CF9            : 1;	/* Configuration flag x (x=0-2) for alarm 9 belonging to alarm group 6. */
		unsigned __sfrbit32 CF10           : 1;	/* Configuration flag x (x=0-2) for alarm 10 belonging to alarm group 6. */
		unsigned __sfrbit32 CF11           : 1;	/* Configuration flag x (x=0-2) for alarm 11 belonging to alarm group 6. */
		unsigned __sfrbit32 CF12           : 1;	/* Configuration flag x (x=0-2) for alarm 12 belonging to alarm group 6. */
		unsigned __sfrbit32 CF13           : 1;	/* Configuration flag x (x=0-2) for alarm 13 belonging to alarm group 6. */
		unsigned __sfrbit32 CF14           : 1;	/* Configuration flag x (x=0-2) for alarm 14 belonging to alarm group 6. */
		unsigned __sfrbit32 CF15           : 1;	/* Configuration flag x (x=0-2) for alarm 15 belonging to alarm group 6. */
		unsigned __sfrbit32 CF16           : 1;	/* Configuration flag x (x=0-2) for alarm 16 belonging to alarm group 6. */
		unsigned __sfrbit32 CF17           : 1;	/* Configuration flag x (x=0-2) for alarm 17 belonging to alarm group 6. */
		unsigned __sfrbit32 CF18           : 1;	/* Configuration flag x (x=0-2) for alarm 18 belonging to alarm group 6. */
		unsigned __sfrbit32 CF19           : 1;	/* Configuration flag x (x=0-2) for alarm 19 belonging to alarm group 6. */
		unsigned __sfrbit32 CF20           : 1;	/* Configuration flag x (x=0-2) for alarm 20 belonging to alarm group 6. */
		unsigned __sfrbit32 CF21           : 1;	/* Configuration flag x (x=0-2) for alarm 21 belonging to alarm group 6. */
		unsigned __sfrbit32 CF22           : 1;	/* Configuration flag x (x=0-2) for alarm 22 belonging to alarm group 6. */
		unsigned __sfrbit32 CF23           : 1;	/* Configuration flag x (x=0-2) for alarm 23 belonging to alarm group 6. */
		unsigned __sfrbit32 CF24           : 1;	/* Configuration flag x (x=0-2) for alarm 24 belonging to alarm group 6. */
		unsigned __sfrbit32 CF25           : 1;	/* Configuration flag x (x=0-2) for alarm 25 belonging to alarm group 6. */
		unsigned __sfrbit32 CF26           : 1;	/* Configuration flag x (x=0-2) for alarm 26 belonging to alarm group 6. */
		unsigned __sfrbit32 CF27           : 1;	/* Configuration flag x (x=0-2) for alarm 27 belonging to alarm group 6. */
		unsigned __sfrbit32 CF28           : 1;	/* Configuration flag x (x=0-2) for alarm 28 belonging to alarm group 6. */
		unsigned __sfrbit32 CF29           : 1;	/* Configuration flag x (x=0-2) for alarm 29 belonging to alarm group 6. */
		unsigned __sfrbit32 CF30           : 1;	/* Configuration flag x (x=0-2) for alarm 30 belonging to alarm group 6. */
		unsigned __sfrbit32 CF31           : 1;	/* Configuration flag x (x=0-2) for alarm 31 belonging to alarm group 6. */
	} B;
	int I;
	unsigned int U;

} SMU_AG6CF0_type;
#define SMU_AG6CF0	(*( SMU_AG6CF0_type *) 0xf0036948u)	/* Alarm Configuration Register */
#define SMU_AG6CF1	(*( SMU_AG6CF0_type *) 0xf003694cu)	/* Alarm Configuration Register */
#define SMU_AG6CF2	(*( SMU_AG6CF0_type *) 0xf0036950u)	/* Alarm Configuration Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 FE0            : 1;	/* Fault signalling configuration flag for alarm 0 belonging to alarm group 6. */
		unsigned __sfrbit32 FE1            : 1;	/* Fault signalling configuration flag for alarm 1 belonging to alarm group 6. */
		unsigned __sfrbit32 FE2            : 1;	/* Fault signalling configuration flag for alarm 2 belonging to alarm group 6. */
		unsigned __sfrbit32 FE3            : 1;	/* Fault signalling configuration flag for alarm 3 belonging to alarm group 6. */
		unsigned __sfrbit32 FE4            : 1;	/* Fault signalling configuration flag for alarm 4 belonging to alarm group 6. */
		unsigned __sfrbit32 FE5            : 1;	/* Fault signalling configuration flag for alarm 5 belonging to alarm group 6. */
		unsigned __sfrbit32 FE6            : 1;	/* Fault signalling configuration flag for alarm 6 belonging to alarm group 6. */
		unsigned __sfrbit32 FE7            : 1;	/* Fault signalling configuration flag for alarm 7 belonging to alarm group 6. */
		unsigned __sfrbit32 FE8            : 1;	/* Fault signalling configuration flag for alarm 8 belonging to alarm group 6. */
		unsigned __sfrbit32 FE9            : 1;	/* Fault signalling configuration flag for alarm 9 belonging to alarm group 6. */
		unsigned __sfrbit32 FE10           : 1;	/* Fault signalling configuration flag for alarm 10 belonging to alarm group 6. */
		unsigned __sfrbit32 FE11           : 1;	/* Fault signalling configuration flag for alarm 11 belonging to alarm group 6. */
		unsigned __sfrbit32 FE12           : 1;	/* Fault signalling configuration flag for alarm 12 belonging to alarm group 6. */
		unsigned __sfrbit32 FE13           : 1;	/* Fault signalling configuration flag for alarm 13 belonging to alarm group 6. */
		unsigned __sfrbit32 FE14           : 1;	/* Fault signalling configuration flag for alarm 14 belonging to alarm group 6. */
		unsigned __sfrbit32 FE15           : 1;	/* Fault signalling configuration flag for alarm 15 belonging to alarm group 6. */
		unsigned __sfrbit32 FE16           : 1;	/* Fault signalling configuration flag for alarm 16 belonging to alarm group 6. */
		unsigned __sfrbit32 FE17           : 1;	/* Fault signalling configuration flag for alarm 17 belonging to alarm group 6. */
		unsigned __sfrbit32 FE18           : 1;	/* Fault signalling configuration flag for alarm 18 belonging to alarm group 6. */
		unsigned __sfrbit32 FE19           : 1;	/* Fault signalling configuration flag for alarm 19 belonging to alarm group 6. */
		unsigned __sfrbit32 FE20           : 1;	/* Fault signalling configuration flag for alarm 20 belonging to alarm group 6. */
		unsigned __sfrbit32 FE21           : 1;	/* Fault signalling configuration flag for alarm 21 belonging to alarm group 6. */
		unsigned __sfrbit32 FE22           : 1;	/* Fault signalling configuration flag for alarm 22 belonging to alarm group 6. */
		unsigned __sfrbit32 FE23           : 1;	/* Fault signalling configuration flag for alarm 23 belonging to alarm group 6. */
		unsigned __sfrbit32 FE24           : 1;	/* Fault signalling configuration flag for alarm 24 belonging to alarm group 6. */
		unsigned __sfrbit32 FE25           : 1;	/* Fault signalling configuration flag for alarm 25 belonging to alarm group 6. */
		unsigned __sfrbit32 FE26           : 1;	/* Fault signalling configuration flag for alarm 26 belonging to alarm group 6. */
		unsigned __sfrbit32 FE27           : 1;	/* Fault signalling configuration flag for alarm 27 belonging to alarm group 6. */
		unsigned __sfrbit32 FE28           : 1;	/* Fault signalling configuration flag for alarm 28 belonging to alarm group 6. */
		unsigned __sfrbit32 FE29           : 1;	/* Fault signalling configuration flag for alarm 29 belonging to alarm group 6. */
		unsigned __sfrbit32 FE30           : 1;	/* Fault signalling configuration flag for alarm 30 belonging to alarm group 6. */
		unsigned __sfrbit32 FE31           : 1;	/* Fault signalling configuration flag for alarm 31 belonging to alarm group 6. */
	} B;
	int I;
	unsigned int U;

} SMU_AG6FSP_type;
#define SMU_AG6FSP	(*( SMU_AG6FSP_type *) 0xf0036998u)	/* FSP Configuration Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 IGCS0          : 3;	/* Interrupt Generation Configuration Set 0 */
		unsigned __sfrbit32                : 1;
		unsigned __sfrbit32 IGCS1          : 3;	/* Interrupt Generation Configuration Set 1 */
		unsigned __sfrbit32                : 1;
		unsigned __sfrbit32 IGCS2          : 3;	/* Interrupt Generation Configuration Set 2 */
		unsigned __sfrbit32                : 5;
		unsigned __sfrbit32 ICS            : 3;	/* Idle Configuration Set */
		unsigned __sfrbit32                : 5;
		unsigned __sfrbit32 PES            : 5;	/* Port Emergency Stop */
		unsigned __sfrbit32 EFRST          : 1;	/* Enable FAULT to RUN State Transition */
		unsigned __sfrbit32                : 2;
	} B;
	int I;
	unsigned int U;

} SMU_AGC_type;
#define SMU_AGC	(*( SMU_AGC_type *) 0xf003682cu)	/* Alarm Global Configuration */

typedef volatile union
{
	struct
	{ 
		unsigned int DISR           : 1;	/* Module Disable Request Bit */
		/* const */ unsigned int DISS           : 1;	/* Module Disable Status Bit */
		unsigned int FDIS           : 1;	/* Force Disable */
		unsigned int EDIS           : 1;	/* Sleep Mode Enable Control */
		unsigned int                : 28;
	} B;
	int I;
	unsigned int U;

} SMU_CLC_type;
#define SMU_CLC	(*( SMU_CLC_type *) 0xf0036800u)	/* Clock Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 CMD            : 4;	/* Implements the SMU Command Interface. */
		unsigned __sfrbit32 ARG            : 4;	/* Implements the SMU Command Interface. */
		unsigned __sfrbit32                : 24;
	} B;
	int I;
	unsigned int U;

} SMU_CMD_type;
#define SMU_CMD	(*( SMU_CMD_type *) 0xf0036820u)	/* Command Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned __sfrbit32 SSM            : 2;	/* Running state of the SMU State Machine */
		/* const */ unsigned __sfrbit32                : 30;
	} B;
	int I;
	unsigned int U;

} SMU_DBG_type;
#define SMU_DBG	(*( SMU_DBG_type *) 0xf0036838u)	/* Debug Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 PRE1           : 3;	/* Prescaler1 */
		unsigned __sfrbit32 PRE2           : 2;	/* Prescaler2 */
		unsigned __sfrbit32 MODE           : 2;	/* Fault Signaling Protocol configuration */
		unsigned __sfrbit32 PES            : 1;	/* Port Emergency Stop (PES) */
		/* const */ unsigned __sfrbit32 TFSP_LOW       : 14;	/* Specifies the FSP fault state duration */
		unsigned __sfrbit32 TFSP_HIGH      : 10;	/* Specifies the FSP fault state duration */
	} B;
	int I;
	unsigned int U;

} SMU_FSP_type;
#define SMU_FSP	(*( SMU_FSP_type *) 0xf0036828u)	/* Fault Signaling Protocol */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int MOD_REV        : 8;	/* Module Revision Number */
		/* const */ unsigned int MOD_TYPE       : 8;	/* Module Type */
		/* const */ unsigned int MOD_NUMBER     : 16;	/* Module Number Value */
	} B;
	int I;
	unsigned int U;

} SMU_ID_type;
#define SMU_ID	(*( SMU_ID_type *) 0xf0036808u)	/* Module Identification Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 CFGLCK         : 8;	/* Configuration Lock */
		unsigned __sfrbit32 PERLCK         : 8;	/* Permanent Lock */
		unsigned __sfrbit32                : 16;
	} B;
	int I;
	unsigned int U;

} SMU_KEYS_type;
#define SMU_KEYS	(*( SMU_KEYS_type *) 0xf0036834u)	/* Key Register */

typedef volatile union
{
	struct
	{ 
		unsigned int RST            : 1;	/* Kernel Reset */
		/* const */ unsigned int RSTSTAT        : 1;	/* Kernel Reset Status */
		unsigned int                : 30;
	} B;
	int I;
	unsigned int U;

} SMU_KRST0_type;
#define SMU_KRST0	(*( SMU_KRST0_type *) 0xf0036ff4u)	/* SMU Reset Register 0 */

typedef volatile union
{
	struct
	{ 
		unsigned int RST            : 1;	/* Kernel Reset */
		unsigned int                : 31;
	} B;
	int I;
	unsigned int U;

} SMU_KRST1_type;
#define SMU_KRST1	(*( SMU_KRST1_type *) 0xf0036ff0u)	/* SMU Reset Register 1 */

typedef volatile union
{
	struct
	{ 
		unsigned int CLR            : 1;	/* Kernel Reset Status Clear */
		unsigned int                : 31;
	} B;
	int I;
	unsigned int U;

} SMU_KRSTCLR_type;
#define SMU_KRSTCLR	(*( SMU_KRSTCLR_type *) 0xf0036fecu)	/* SMU Reset Status Clear Register */

typedef volatile union
{
	struct
	{ 
		unsigned int TGS            : 2;	/* Trigger Set for OTGB0/1 */
		unsigned int TGB            : 1;	/* OTGB0/1 Bus Select */
		unsigned int TG_P           : 1;	/* TGS, TGB Write Protection */
		unsigned int                : 20;
		unsigned int SUS            : 4;	/* OCDS Suspend Control */
		unsigned int SUS_P          : 1;	/* SUS Write Protection */
		/* const */ unsigned int SUSSTA         : 1;	/* Suspend State */
		unsigned int                : 2;
	} B;
	int I;
	unsigned int U;

} SMU_OCS_type;
#define SMU_OCS	(*( SMU_OCS_type *) 0xf0036fe8u)	/* OCDS Control and Status */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 HWDIR          : 1;	/* Port Direction. */
		unsigned __sfrbit32 HWEN           : 1;	/* Port Enable. */
		unsigned __sfrbit32                : 5;
		unsigned __sfrbit32 PCS            : 1;	/* PAD Configuration Select */
		unsigned __sfrbit32                : 8;
		/* const */ unsigned __sfrbit32 PCFG           : 16;	/* PAD Configuration */
	} B;
	int I;
	unsigned int U;

} SMU_PCTL_type;
#define SMU_PCTL	(*( SMU_PCTL_type *) 0xf003683cu)	/* Port Control */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 TE             : 1;	/* Test Enable. */
		unsigned __sfrbit32                : 31;
	} B;
	int I;
	unsigned int U;

} SMU_RMCTL_type;
#define SMU_RMCTL	(*( SMU_RMCTL_type *) 0xf0036b00u)	/* Register Monitor Control */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 EF0            : 1;	/* Status flag related to the different instances of the register monitor safety mechanism. */
		unsigned __sfrbit32 EF1            : 1;	/* Status flag related to the different instances of the register monitor safety mechanism. */
		unsigned __sfrbit32 EF2            : 1;	/* Status flag related to the different instances of the register monitor safety mechanism. */
		unsigned __sfrbit32 EF3            : 1;	/* Status flag related to the different instances of the register monitor safety mechanism. */
		unsigned __sfrbit32 EF4            : 1;	/* Status flag related to the different instances of the register monitor safety mechanism. */
		unsigned __sfrbit32 EF5            : 1;	/* Status flag related to the different instances of the register monitor safety mechanism. */
		unsigned __sfrbit32 EF6            : 1;	/* Status flag related to the different instances of the register monitor safety mechanism. */
		unsigned __sfrbit32 EF7            : 1;	/* Status flag related to the different instances of the register monitor safety mechanism. */
		unsigned __sfrbit32 EF8            : 1;	/* Status flag related to the different instances of the register monitor safety mechanism. */
		unsigned __sfrbit32 EF9            : 1;	/* Status flag related to the different instances of the register monitor safety mechanism. */
		unsigned __sfrbit32 EF10           : 1;	/* Status flag related to the different instances of the register monitor safety mechanism. */
		unsigned __sfrbit32 EF11           : 1;	/* Status flag related to the different instances of the register monitor safety mechanism. */
		unsigned __sfrbit32 EF12           : 1;	/* Status flag related to the different instances of the register monitor safety mechanism. */
		unsigned __sfrbit32 EF13           : 1;	/* Status flag related to the different instances of the register monitor safety mechanism. */
		unsigned __sfrbit32 EF14           : 1;	/* Status flag related to the different instances of the register monitor safety mechanism. */
		unsigned __sfrbit32 EF15           : 1;	/* Status flag related to the different instances of the register monitor safety mechanism. */
		unsigned __sfrbit32 EF16           : 1;	/* Status flag related to the different instances of the register monitor safety mechanism. */
		unsigned __sfrbit32 EF17           : 1;	/* Status flag related to the different instances of the register monitor safety mechanism. */
		unsigned __sfrbit32 EF18           : 1;	/* Status flag related to the different instances of the register monitor safety mechanism. */
		unsigned __sfrbit32 EF19           : 1;	/* Status flag related to the different instances of the register monitor safety mechanism. */
		unsigned __sfrbit32 EF20           : 1;	/* Status flag related to the different instances of the register monitor safety mechanism. */
		unsigned __sfrbit32 EF21           : 1;	/* Status flag related to the different instances of the register monitor safety mechanism. */
		unsigned __sfrbit32 EF22           : 1;	/* Status flag related to the different instances of the register monitor safety mechanism. */
		unsigned __sfrbit32 EF23           : 1;	/* Status flag related to the different instances of the register monitor safety mechanism. */
		unsigned __sfrbit32 EF24           : 1;	/* Status flag related to the different instances of the register monitor safety mechanism. */
		unsigned __sfrbit32 EF25           : 1;	/* Status flag related to the different instances of the register monitor safety mechanism. */
		unsigned __sfrbit32 EF26           : 1;	/* Status flag related to the different instances of the register monitor safety mechanism. */
		unsigned __sfrbit32 EF27           : 1;	/* Status flag related to the different instances of the register monitor safety mechanism. */
		unsigned __sfrbit32 EF28           : 1;	/* Status flag related to the different instances of the register monitor safety mechanism. */
		unsigned __sfrbit32 EF29           : 1;	/* Status flag related to the different instances of the register monitor safety mechanism. */
		unsigned __sfrbit32 EF30           : 1;	/* Status flag related to the different instances of the register monitor safety mechanism. */
		unsigned __sfrbit32 EF31           : 1;	/* Status flag related to the different instances of the register monitor safety mechanism. */
	} B;
	int I;
	unsigned int U;

} SMU_RMEF_type;
#define SMU_RMEF	(*( SMU_RMEF_type *) 0xf0036b04u)	/* Register Monitor Error Flags */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 STS0           : 1;	/* Ready flag related to the different instances of the register monitor safety mechanism. */
		unsigned __sfrbit32 STS1           : 1;	/* Ready flag related to the different instances of the register monitor safety mechanism. */
		unsigned __sfrbit32 STS2           : 1;	/* Ready flag related to the different instances of the register monitor safety mechanism. */
		unsigned __sfrbit32 STS3           : 1;	/* Ready flag related to the different instances of the register monitor safety mechanism. */
		unsigned __sfrbit32 STS4           : 1;	/* Ready flag related to the different instances of the register monitor safety mechanism. */
		unsigned __sfrbit32 STS5           : 1;	/* Ready flag related to the different instances of the register monitor safety mechanism. */
		unsigned __sfrbit32 STS6           : 1;	/* Ready flag related to the different instances of the register monitor safety mechanism. */
		unsigned __sfrbit32 STS7           : 1;	/* Ready flag related to the different instances of the register monitor safety mechanism. */
		unsigned __sfrbit32 STS8           : 1;	/* Ready flag related to the different instances of the register monitor safety mechanism. */
		unsigned __sfrbit32 STS9           : 1;	/* Ready flag related to the different instances of the register monitor safety mechanism. */
		unsigned __sfrbit32 STS10          : 1;	/* Ready flag related to the different instances of the register monitor safety mechanism. */
		unsigned __sfrbit32 STS11          : 1;	/* Ready flag related to the different instances of the register monitor safety mechanism. */
		unsigned __sfrbit32 STS12          : 1;	/* Ready flag related to the different instances of the register monitor safety mechanism. */
		unsigned __sfrbit32 STS13          : 1;	/* Ready flag related to the different instances of the register monitor safety mechanism. */
		unsigned __sfrbit32 STS14          : 1;	/* Ready flag related to the different instances of the register monitor safety mechanism. */
		unsigned __sfrbit32 STS15          : 1;	/* Ready flag related to the different instances of the register monitor safety mechanism. */
		unsigned __sfrbit32 STS16          : 1;	/* Ready flag related to the different instances of the register monitor safety mechanism. */
		unsigned __sfrbit32 STS17          : 1;	/* Ready flag related to the different instances of the register monitor safety mechanism. */
		unsigned __sfrbit32 STS18          : 1;	/* Ready flag related to the different instances of the register monitor safety mechanism. */
		unsigned __sfrbit32 STS19          : 1;	/* Ready flag related to the different instances of the register monitor safety mechanism. */
		unsigned __sfrbit32 STS20          : 1;	/* Ready flag related to the different instances of the register monitor safety mechanism. */
		unsigned __sfrbit32 STS21          : 1;	/* Ready flag related to the different instances of the register monitor safety mechanism. */
		unsigned __sfrbit32 STS22          : 1;	/* Ready flag related to the different instances of the register monitor safety mechanism. */
		unsigned __sfrbit32 STS23          : 1;	/* Ready flag related to the different instances of the register monitor safety mechanism. */
		unsigned __sfrbit32 STS24          : 1;	/* Ready flag related to the different instances of the register monitor safety mechanism. */
		unsigned __sfrbit32 STS25          : 1;	/* Ready flag related to the different instances of the register monitor safety mechanism. */
		unsigned __sfrbit32 STS26          : 1;	/* Ready flag related to the different instances of the register monitor safety mechanism. */
		unsigned __sfrbit32 STS27          : 1;	/* Ready flag related to the different instances of the register monitor safety mechanism. */
		unsigned __sfrbit32 STS28          : 1;	/* Ready flag related to the different instances of the register monitor safety mechanism. */
		unsigned __sfrbit32 STS29          : 1;	/* Ready flag related to the different instances of the register monitor safety mechanism. */
		unsigned __sfrbit32 STS30          : 1;	/* Ready flag related to the different instances of the register monitor safety mechanism. */
		unsigned __sfrbit32 STS31          : 1;	/* Ready flag related to the different instances of the register monitor safety mechanism. */
	} B;
	int I;
	unsigned int U;

} SMU_RMSTS_type;
#define SMU_RMSTS	(*( SMU_RMSTS_type *) 0xf0036b08u)	/* Register Monitor Self Test Status */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 GID0           : 3;	/* Group Index 0. */
		unsigned __sfrbit32 ALID0          : 5;	/* Alarm Identifier 0. */
		unsigned __sfrbit32 GID1           : 3;	/* Group Index 1. */
		unsigned __sfrbit32 ALID1          : 5;	/* Alarm Identifier 1. */
		unsigned __sfrbit32 GID2           : 3;	/* Group Index 2. */
		unsigned __sfrbit32 ALID2          : 5;	/* Alarm Identifier 2. */
		unsigned __sfrbit32 GID3           : 3;	/* Group Index 3. */
		unsigned __sfrbit32 ALID3          : 5;	/* Alarm Identifier 3. */
	} B;
	int I;
	unsigned int U;

} SMU_RTAC0_type;
#define SMU_RTAC0	(*( SMU_RTAC0_type *) 0xf0036860u)	/* Recovery Timer Alarm Configuration */
#define SMU_RTAC1	(*( SMU_RTAC0_type *) 0xf0036864u)	/* Recovery Timer Alarm Configuration */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 RT0E           : 1;	/* RT0 Enable Bit */
		unsigned __sfrbit32 RT1E           : 1;	/* RT1 Enable Bit */
		unsigned __sfrbit32                : 6;
		unsigned __sfrbit32 RTD            : 24;	/* Recovery Timer Duration */
	} B;
	int I;
	unsigned int U;

} SMU_RTC_type;
#define SMU_RTC	(*( SMU_RTC_type *) 0xf0036830u)	/* Fault Signaling Protocol */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 CMD            : 4;	/* Last command received */
		unsigned __sfrbit32 ARG            : 4;	/* Last command argument received */
		unsigned __sfrbit32 RES            : 1;	/* Result of last received command */
		unsigned __sfrbit32 ASCE           : 1;	/* Alarm Status Clear Enable */
		/* const */ unsigned __sfrbit32 FSP            : 2;	/* Fault Signaling Protocol status */
		unsigned __sfrbit32 FSTS           : 1;	/* Fault State Timing Status */
		unsigned __sfrbit32                : 3;
		unsigned __sfrbit32 RTS0           : 1;	/* Recovery Timer 0 Status */
		unsigned __sfrbit32 RTME0          : 1;	/* Recovery Timer 0 Missed Event */
		unsigned __sfrbit32 RTS1           : 1;	/* Recovery Timer 1 Status */
		unsigned __sfrbit32 RTME1          : 1;	/* Recovery Timer 1 Missed Event */
		unsigned __sfrbit32                : 12;
	} B;
	int I;
	unsigned int U;

} SMU_STS_type;
#define SMU_STS	(*( SMU_STS_type *) 0xf0036824u)	/* Status Register */


/* PMU */
typedef volatile union
{
	struct
	{ 
		unsigned int EN0            : 1;	/* Access Enable for Master TAG ID 0 */
		unsigned int EN1            : 1;	/* Access Enable for Master TAG ID 1 */
		unsigned int EN2            : 1;	/* Access Enable for Master TAG ID 2 */
		unsigned int EN3            : 1;	/* Access Enable for Master TAG ID 3 */
		unsigned int EN4            : 1;	/* Access Enable for Master TAG ID 4 */
		unsigned int EN5            : 1;	/* Access Enable for Master TAG ID 5 */
		unsigned int EN6            : 1;	/* Access Enable for Master TAG ID 6 */
		unsigned int EN7            : 1;	/* Access Enable for Master TAG ID 7 */
		unsigned int EN8            : 1;	/* Access Enable for Master TAG ID 8 */
		unsigned int EN9            : 1;	/* Access Enable for Master TAG ID 9 */
		unsigned int EN10           : 1;	/* Access Enable for Master TAG ID 10 */
		unsigned int EN11           : 1;	/* Access Enable for Master TAG ID 11 */
		unsigned int EN12           : 1;	/* Access Enable for Master TAG ID 12 */
		unsigned int EN13           : 1;	/* Access Enable for Master TAG ID 13 */
		unsigned int EN14           : 1;	/* Access Enable for Master TAG ID 14 */
		unsigned int EN15           : 1;	/* Access Enable for Master TAG ID 15 */
		unsigned int EN16           : 1;	/* Access Enable for Master TAG ID 16 */
		unsigned int EN17           : 1;	/* Access Enable for Master TAG ID 17 */
		unsigned int EN18           : 1;	/* Access Enable for Master TAG ID 18 */
		unsigned int EN19           : 1;	/* Access Enable for Master TAG ID 19 */
		unsigned int EN20           : 1;	/* Access Enable for Master TAG ID 20 */
		unsigned int EN21           : 1;	/* Access Enable for Master TAG ID 21 */
		unsigned int EN22           : 1;	/* Access Enable for Master TAG ID 22 */
		unsigned int EN23           : 1;	/* Access Enable for Master TAG ID 23 */
		unsigned int EN24           : 1;	/* Access Enable for Master TAG ID 24 */
		unsigned int EN25           : 1;	/* Access Enable for Master TAG ID 25 */
		unsigned int EN26           : 1;	/* Access Enable for Master TAG ID 26 */
		unsigned int EN27           : 1;	/* Access Enable for Master TAG ID 27 */
		unsigned int EN28           : 1;	/* Access Enable for Master TAG ID 28 */
		unsigned int EN29           : 1;	/* Access Enable for Master TAG ID 29 */
		unsigned int EN30           : 1;	/* Access Enable for Master TAG ID 30 */
		unsigned int EN31           : 1;	/* Access Enable for Master TAG ID 31 */
	} B;
	int I;
	unsigned int U;

} FLASH0_ACCEN0_type;
#define FLASH0_ACCEN0	(*( FLASH0_ACCEN0_type *) 0xf80023fcu)	/* Access Enable Register 0 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int RES            : 32;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} FLASH0_ACCEN1_type;
#define FLASH0_ACCEN1	(*( FLASH0_ACCEN1_type *) 0xf80023f8u)	/* Access Enable Register 1 */

typedef volatile union
{
	struct
	{ 
		unsigned int SEL            : 6;	/* Select Bit-Errors */
		unsigned int                : 2;
		unsigned int CLR            : 1;	/* Clear */
		unsigned int DIS            : 1;	/* Disable */
		unsigned int                : 22;
	} B;
	int I;
	unsigned int U;

} FLASH0_CBABCFG0_type;
#define FLASH0_CBABCFG0	(*( FLASH0_CBABCFG0_type *) 0xf80020b4u)	/* CBAB Configuration Port 0 */
#define FLASH0_CBABCFG1	(*( FLASH0_CBABCFG0_type *) 0xf80020c0u)	/* CBAB Configuration Port 1 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int VLD0           : 1;	/* Filling Level */
		/* const */ unsigned int VLD1           : 1;	/* Filling Level */
		/* const */ unsigned int VLD2           : 1;	/* Filling Level */
		/* const */ unsigned int VLD3           : 1;	/* Filling Level */
		/* const */ unsigned int VLD4           : 1;	/* Filling Level */
		/* const */ unsigned int VLD5           : 1;	/* Filling Level */
		/* const */ unsigned int VLD6           : 1;	/* Filling Level */
		/* const */ unsigned int VLD7           : 1;	/* Filling Level */
		/* const */ unsigned int VLD8           : 1;	/* Filling Level */
		/* const */ unsigned int VLD9           : 1;	/* Filling Level */
		/* const */ unsigned int                : 22;
	} B;
	int I;
	unsigned int U;

} FLASH0_CBABSTAT0_type;
#define FLASH0_CBABSTAT0	(*( FLASH0_CBABSTAT0_type *) 0xf80020b8u)	/* CBAB Status Port 0 */
#define FLASH0_CBABSTAT1	(*( FLASH0_CBABSTAT0_type *) 0xf80020c4u)	/* CBAB Status Port 1 */

typedef volatile union
{
	struct
	{ 
		unsigned int                : 5;
		/* const */ unsigned int ADDR           : 19;	/* Address */
		/* const */ unsigned int ERR            : 6;	/* Error Type */
		/* const */ unsigned int VLD            : 1;	/* Valid */
		unsigned int CLR            : 1;	/* Clear */
	} B;
	int I;
	unsigned int U;

} FLASH0_CBABTOP0_type;
#define FLASH0_CBABTOP0	(*( FLASH0_CBABTOP0_type *) 0xf80020bcu)	/* CBAB FIFO TOP Entry Port 0 */
#define FLASH0_CBABTOP1	(*( FLASH0_CBABTOP0_type *) 0xf80020c8u)	/* CBAB FIFO TOP Entry Port 1 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int STATUS         : 8;	/* Status */
		/* const */ unsigned int                : 24;
	} B;
	int I;
	unsigned int U;

} FLASH0_COMM0_type;
#define FLASH0_COMM0	(*( FLASH0_COMM0_type *) 0xf8001000u)	/* FSI Communication Register 0 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int STATUS         : 8;	/* Status */
		unsigned int DATA           : 8;	/* Data */
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} FLASH0_COMM1_type;
#define FLASH0_COMM1	(*( FLASH0_COMM1_type *) 0xf8001004u)	/* FSI Communication Register 1 */
#define FLASH0_COMM2	(*( FLASH0_COMM1_type *) 0xf8001008u)	/* FSI Communication Register 2 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int RCODE          : 22;	/* Error Correction Read Code */
		/* const */ unsigned int RES            : 2;	/* Reserved */
		unsigned int                : 6;
		unsigned int EDCERRINJ      : 1;	/* EDC Error Injection */
		unsigned int ECCORDIS       : 1;	/* ECC Correction Disable */
	} B;
	int I;
	unsigned int U;

} FLASH0_ECCRD_type;
#define FLASH0_ECCRD	(*( FLASH0_ECCRD_type *) 0xf80020a4u)	/* ECC Read Register DF */
#define FLASH0_ECCRP0	(*( FLASH0_ECCRD_type *) 0xf8002094u)	/* ECC Read Register PF0 */
#define FLASH0_ECCRP1	(*( FLASH0_ECCRD_type *) 0xf8002098u)	/* ECC Read Register PF1 */

typedef volatile union
{
	struct
	{ 
		unsigned int WCODE          : 22;	/* Error Correction Write Code */
		unsigned int                : 8;
		unsigned int DECENCDIS      : 1;	/* DF_EEPROM ECC Encoding Disable */
		unsigned int PECENCDIS      : 1;	/* PFlash ECC Encoding Disable */
	} B;
	int I;
	unsigned int U;

} FLASH0_ECCW_type;
#define FLASH0_ECCW	(*( FLASH0_ECCW_type *) 0xf8002090u)	/* ECC Write Register */

typedef volatile union
{
	struct
	{ 
		unsigned int WSPFLASH       : 4;	/* Wait States for read access to PFlash */
		unsigned int WSECPF         : 2;	/* Wait States for Error Correction of PFlash */
		unsigned int WSDFLASH       : 6;	/* Wait States for read access to DFlash */
		unsigned int WSECDF         : 3;	/* Wait State for Error Correction of DFlash */
		unsigned int IDLE           : 1;	/* Dynamic Flash Idle */
		unsigned int ESLDIS         : 1;	/* External Sleep Request Disable */
		unsigned int SLEEP          : 1;	/* Flash SLEEP */
		unsigned int NSAFECC        : 1;	/* Non-Safety PFlash ECC */
		unsigned int STALL          : 1;	/* Stall SRI */
		/* const */ unsigned int RES21          : 2;	/* Reserved */
		/* const */ unsigned int RES23          : 2;	/* Reserved */
		unsigned int VOPERM         : 1;	/* Verify and Operation Error Interrupt Mask */
		unsigned int SQERM          : 1;	/* Command Sequence Error Interrupt Mask */
		unsigned int PROERM         : 1;	/* Protection Error Interrupt Mask */
		unsigned int                : 3;
		unsigned int PR5V           : 1;	/* Programming Supply 5V */
		unsigned int EOBM           : 1;	/* End of Busy Interrupt Mask */
	} B;
	int I;
	unsigned int U;

} FLASH0_FCON_type;
#define FLASH0_FCON	(*( FLASH0_FCON_type *) 0xf8002014u)	/* Flash Configuration Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int PROINP         : 1;	/* PFlash Protection */
		/* const */ unsigned int PRODISP        : 1;	/* PFlash Protection Disabled */
		/* const */ unsigned int PROIND         : 1;	/* DFlash Protection */
		/* const */ unsigned int PRODISD        : 1;	/* DFlash Protection Disabled */
		/* const */ unsigned int PROINHSMCOTP   : 1;	/* HSM OTP Protection */
		/* const */ unsigned int RES5           : 1;	/* Reserved */
		/* const */ unsigned int PROINOTP       : 1;	/* OTP and Write-Once Protection */
		/* const */ unsigned int RES7           : 1;	/* Reserved */
		/* const */ unsigned int PROINDBG       : 1;	/* Debug Interface Password Protection */
		/* const */ unsigned int PRODISDBG      : 1;	/* Debug Interface Password Protection Disabled */
		/* const */ unsigned int PROINHSM       : 1;	/* HSM Configuration */
		unsigned int                : 5;
		unsigned int DCFP           : 1;	/* Disable Code Fetch from PFlash Memory for CPU0 PMI */
		unsigned int DDFP           : 1;	/* Disable Read from PFlash for CPU0 DMI */
		unsigned int DDFPX          : 1;	/* Disable Read from PFlash for Other Masters */
		unsigned int                : 1;
		unsigned int DDFD           : 1;	/* Disable Data Fetch from DFlash Memory */
		unsigned int                : 1;
		unsigned int ENPE           : 2;	/* Enable Program/Erase */
		unsigned int                : 8;
	} B;
	int I;
	unsigned int U;

} FLASH0_FPRO_type;
#define FLASH0_FPRO	(*( FLASH0_FPRO_type *) 0xf800201cu)	/* Flash Protection Control and Status Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int FABUSY         : 1;	/* Flash Array Busy */
		/* const */ unsigned int D0BUSY         : 1;	/* Data Flash Bank 0 Busy */
		/* const */ unsigned int D1BUSY         : 1;	/* Data Flash Bank 1 Busy */
		/* const */ unsigned int P0BUSY         : 1;	/* Program Flash PF0 Busy */
		/* const */ unsigned int P1BUSY         : 1;	/* Program Flash PF1 Busy */
		/* const */ unsigned int RES5           : 1;	/* Reserved for Program Flash PF2 Busy */
		/* const */ unsigned int RES6           : 1;	/* Reserved for Program Flash PF3 Busy */
		unsigned int PROG           : 1;	/* Programming State */
		unsigned int ERASE          : 1;	/* Erase State */
		/* const */ unsigned int PFPAGE         : 1;	/* Program Flash in Page Mode */
		/* const */ unsigned int DFPAGE         : 1;	/* Data Flash in Page Mode */
		unsigned int OPER           : 1;	/* Flash Operation Error */
		unsigned int SQER           : 1;	/* Command Sequence Error */
		unsigned int PROER          : 1;	/* Protection Error */
		unsigned int PFSBER         : 1;	/* PFlash Single-Bit Error and Correction */
		unsigned int PFDBER         : 1;	/* PFlash Double-Bit Error */
		unsigned int PFMBER         : 1;	/* PFlash Uncorrectable Error */
		unsigned int RES17          : 1;	/* Reserved */
		unsigned int DFSBER         : 1;	/* DFlash Single-Bit Error */
		unsigned int DFDBER         : 1;	/* DFlash Double-Bit Error */
		unsigned int DFTBER         : 1;	/* DFlash Triple-Bit Error */
		unsigned int DFMBER         : 1;	/* DFlash Uncorrectable Error */
		unsigned int SRIADDERR      : 1;	/* SRI Bus Address ECC Error */
		unsigned int                : 1;
		unsigned int RES            : 1;	/* Reserved */
		unsigned int PVER           : 1;	/* Program Verify Error */
		unsigned int EVER           : 1;	/* Erase Verify Error */
		unsigned int SPND           : 1;	/* Operation Suspended */
		/* const */ unsigned int SLM            : 1;	/* Flash Sleep Mode */
		unsigned int                : 1;
		/* const */ unsigned int ORIER          : 1;	/* Original Error */
		unsigned int                : 1;
	} B;
	int I;
	unsigned int U;

} FLASH0_FSR_type;
#define FLASH0_FSR	(*( FLASH0_FSR_type *) 0xf8002010u)	/* Flash Status Register */

typedef volatile union
{
	struct
	{ 
		unsigned int LCKHSMUCB      : 2;	/* Lock Access to UCB_HSMCFG */
		unsigned int                : 22;
		unsigned int VOPERM         : 1;	/* Verify and Operation Error Interrupt Mask */
		unsigned int SQERM          : 1;	/* Command Sequence Error Interrupt Mask */
		unsigned int                : 5;
		unsigned int EOBM           : 1;	/* End of Busy Interrupt Mask */
	} B;
	int I;
	unsigned int U;

} FLASH0_HSMFCON_type;
#define FLASH0_HSMFCON	(*( FLASH0_HSMFCON_type *) 0xf8002204u)	/* HSM Flash Configuration Register */

typedef volatile union
{
	struct
	{ 
		unsigned int                : 2;
		/* const */ unsigned int D1BUSY         : 1;	/* Data Flash Bank 1 Busy */
		unsigned int                : 4;
		unsigned int PROG           : 1;	/* Programming State */
		unsigned int ERASE          : 1;	/* Erase State */
		unsigned int                : 1;
		/* const */ unsigned int DFPAGE         : 1;	/* Data Flash in Page Mode */
		unsigned int OPER           : 1;	/* Flash Operation Error */
		unsigned int SQER           : 1;	/* Command Sequence Error */
		unsigned int                : 12;
		unsigned int PVER           : 1;	/* Program Verify Error */
		unsigned int EVER           : 1;	/* Erase Verify Error */
		unsigned int SPND           : 1;	/* Operation Suspended */
		unsigned int                : 4;
	} B;
	int I;
	unsigned int U;

} FLASH0_HSMFSR_type;
#define FLASH0_HSMFSR	(*( FLASH0_HSMFSR_type *) 0xf8002200u)	/* Flash Status Register */

typedef volatile union
{
	struct
	{ 
		unsigned int                : 1;
		unsigned int SELD1          : 1;	/* HSM DFLASH Bank Selection */
		unsigned int                : 1;
		unsigned int SPND           : 1;	/* Suspend */
		unsigned int SPNDERR        : 1;	/* Suspend Error */
		unsigned int                : 27;
	} B;
	int I;
	unsigned int U;

} FLASH0_HSMMARD_type;
#define FLASH0_HSMMARD	(*( FLASH0_HSMMARD_type *) 0xf8002208u)	/* Margin Control Register HSM DFlash */

typedef volatile union
{
	struct
	{ 
		unsigned int                : 3;
		unsigned int ADD            : 29;	/* Address */
	} B;
	int I;
	unsigned int U;

} FLASH0_HSMRRAD_type;
#define FLASH0_HSMRRAD	(*( FLASH0_HSMRRAD_type *) 0xf8002218u)	/* HSM Requested Read Address Register */
#define FLASH0_RRAD	(*( FLASH0_HSMRRAD_type *) 0xf800214cu)	/* Requested Read Address Register */

typedef volatile union
{
	struct
	{ 
		unsigned int STRT           : 1;	/* Start Request */
		unsigned int STP            : 1;	/* Stop */
		/* const */ unsigned int BUSY           : 1;	/* Flash Read Busy */
		/* const */ unsigned int DONE           : 1;	/* Flash Read Done */
		/* const */ unsigned int ERR            : 1;	/* Error */
		unsigned int                : 3;
		unsigned int EOBM           : 1;	/* End of Busy Interrupt Mask */
		unsigned int                : 7;
		unsigned int CNT            : 16;	/* Count */
	} B;
	int I;
	unsigned int U;

} FLASH0_HSMRRCT_type;
#define FLASH0_HSMRRCT	(*( FLASH0_HSMRRCT_type *) 0xf800220cu)	/* Requested Read Control Register HSM */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int DATA           : 32;	/* Read Data */
	} B;
	int I;
	unsigned int U;

} FLASH0_HSMRRD0_type;
#define FLASH0_HSMRRD0	(*( FLASH0_HSMRRD0_type *) 0xf8002210u)	/* HSM Requested Read Data Register 0 */
#define FLASH0_HSMRRD1	(*( FLASH0_HSMRRD0_type *) 0xf8002214u)	/* HSM Requested Read Data Register 1 */
#define FLASH0_RRD0	(*( FLASH0_HSMRRD0_type *) 0xf8002144u)	/* Requested Read Data Register 0 */
#define FLASH0_RRD1	(*( FLASH0_HSMRRD0_type *) 0xf8002148u)	/* Requested Read Data Register 1 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int MOD_REV        : 8;	/* Module Revision Number */
		/* const */ unsigned int MOD_TYPE       : 8;	/* Module Type */
		/* const */ unsigned int MOD_NUMBER     : 16;	/* Module Number Value */
	} B;
	int I;
	unsigned int U;

} FLASH0_ID_type;
#define FLASH0_ID	(*( FLASH0_ID_type *) 0xf8002008u)	/* Flash Module Identification Register */
#define PMU0_ID	(*( FLASH0_ID_type *) 0xf8000508u)	/* PMU0 Identification Register */

typedef volatile union
{
	struct
	{ 
		unsigned int HMARGIN        : 1;	/* Hard Margin Selection */
		unsigned int SELD0          : 1;	/* DFLASH Bank Selection */
		unsigned int                : 1;
		unsigned int SPND           : 1;	/* Suspend */
		unsigned int SPNDERR        : 1;	/* Suspend Error */
		unsigned int                : 10;
		unsigned int TRAPDIS        : 1;	/* DFLASH Uncorrectable Bit Error Trap Disable */
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} FLASH0_MARD_type;
#define FLASH0_MARD	(*( FLASH0_MARD_type *) 0xf80020acu)	/* Margin Control Register DFlash */

typedef volatile union
{
	struct
	{ 
		unsigned int SELP0          : 1;	/* PFLASH Bank PF0 Selection */
		unsigned int SELP1          : 1;	/* PFLASH Bank PF1 Selection */
		unsigned int RES2           : 1;	/* Reserved */
		unsigned int RES3           : 1;	/* Reserved */
		unsigned int                : 11;
		unsigned int TRAPDIS        : 1;	/* PFLASH Uncorrectable Bit Error Trap Disable */
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} FLASH0_MARP_type;
#define FLASH0_MARP	(*( FLASH0_MARP_type *) 0xf80020a8u)	/* Margin Control Register PFlash */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int L              : 1;	/* DF_EEPROM Locked for Write Protection */
		/* const */ unsigned int NSAFECC        : 1;	/* Non-Safety PFlash ECC */
		/* const */ unsigned int RAMIN          : 2;	/* RAM Initialization by SSW Control */
		/* const */ unsigned int RAMINSEL       : 4;	/* RAM Initialization Selection */
		/* const */ unsigned int OSCCFG         : 1;	/* OSC Configuration by SSW */
		/* const */ unsigned int MODE           : 2;	/* OSC Mode */
		/* const */ unsigned int APREN          : 1;	/* OSC Amplitude Regulation Enable */
		/* const */ unsigned int CAP0EN         : 1;	/* OSC Capacitance 0 Enable */
		/* const */ unsigned int CAP1EN         : 1;	/* OSC Capacitance 1 Enable */
		/* const */ unsigned int CAP2EN         : 1;	/* OSC Capacitance 2 Enable */
		/* const */ unsigned int CAP3EN         : 1;	/* OSC Capacitance 3 Enable */
		/* const */ unsigned int ESR0CNT        : 12;	/* ESR0 Prolongation Counter */
		/* const */ unsigned int RES29          : 2;	/* Reserved */
		/* const */ unsigned int RES30          : 1;	/* Reserved */
		/* const */ unsigned int RPRO           : 1;	/* Read Protection Configuration */
	} B;
	int I;
	unsigned int U;

} FLASH0_PROCOND_type;
#define FLASH0_PROCOND	(*( FLASH0_PROCOND_type *) 0xf8002030u)	/* DFlash Protection Configuration */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int OCDSDIS        : 1;	/* OCDS Disabled */
		/* const */ unsigned int DBGIFLCK       : 1;	/* Debug Interface Locked */
		/* const */ unsigned int EDM            : 2;	/* Entered Debug Mode */
		/* const */ unsigned int RES            : 12;	/* Reserved */
		/* const */ unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} FLASH0_PROCONDBG_type;
#define FLASH0_PROCONDBG	(*( FLASH0_PROCONDBG_type *) 0xf8002058u)	/* Debug Interface Protection Configuration */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int HSMDBGDIS      : 1;	/* HSM Debug Disable */
		/* const */ unsigned int DBGIFLCK       : 1;	/* Debug Interface Locked */
		/* const */ unsigned int TSTIFLCK       : 1;	/* Test Interface Locked */
		/* const */ unsigned int HSMTSTDIS      : 1;	/* HSM Test Disable */
		/* const */ unsigned int RES15          : 12;	/* Reserved */
		/* const */ unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} FLASH0_PROCONHSM_type;
#define FLASH0_PROCONHSM	(*( FLASH0_PROCONHSM_type *) 0xf800205cu)	/* HSM Interface Configuration */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int HSMBOOTEN      : 1;	/* HSM Boot Enable */
		/* const */ unsigned int SSWWAIT        : 1;	/* SSW Wait */
		/* const */ unsigned int HSMDX          : 1;	/* HSM Data Sectors Exclusive */
		/* const */ unsigned int HSM6X          : 1;	/* HSM Code Sector 6 Exclusive */
		/* const */ unsigned int HSM16X         : 1;	/* HSM Code Sector 16 Exclusive */
		/* const */ unsigned int HSM17X         : 1;	/* HSM Code Sector 17 Exclusive */
		/* const */ unsigned int S6ROM          : 1;	/* HSM Code Sector 6 Locked Forever */
		/* const */ unsigned int HSMENPINS      : 2;	/* Enable HSM Forcing of Pins HSM1/2 */
		/* const */ unsigned int HSMENRES       : 2;	/* Enable HSM Triggering Resets */
		/* const */ unsigned int DESTDBG        : 2;	/* Destructive Debug Entry */
		/* const */ unsigned int BLKFLAN        : 1;	/* Block Flash Analysis */
		/* const */ unsigned int RES            : 2;	/* Reserved */
		/* const */ unsigned int S16ROM         : 1;	/* HSM Code Sector 16 Locked Forever */
		/* const */ unsigned int S17ROM         : 1;	/* HSM Code Sector 17 Locked Forever */
		/* const */ unsigned int                : 14;
	} B;
	int I;
	unsigned int U;

} FLASH0_PROCONHSMCOTP_type;
#define FLASH0_PROCONHSMCOTP	(*( FLASH0_PROCONHSMCOTP_type *) 0xf8002034u)	/* HSM Code Flash OTP Protection Configuration */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int S0ROM          : 1;	/* PFlash p Sector 0 Locked Forever */
		/* const */ unsigned int S1ROM          : 1;	/* PFlash p Sector 1 Locked Forever */
		/* const */ unsigned int S2ROM          : 1;	/* PFlash p Sector 2 Locked Forever */
		/* const */ unsigned int S3ROM          : 1;	/* PFlash p Sector 3 Locked Forever */
		/* const */ unsigned int S4ROM          : 1;	/* PFlash p Sector 4 Locked Forever */
		/* const */ unsigned int S5ROM          : 1;	/* PFlash p Sector 5 Locked Forever */
		/* const */ unsigned int S6ROM          : 1;	/* PFlash p Sector 6 Locked Forever */
		/* const */ unsigned int S7ROM          : 1;	/* PFlash p Sector 7 Locked Forever */
		/* const */ unsigned int S8ROM          : 1;	/* PFlash p Sector 8 Locked Forever */
		/* const */ unsigned int S9ROM          : 1;	/* PFlash p Sector 9 Locked Forever */
		/* const */ unsigned int S10ROM         : 1;	/* PFlash p Sector 10 Locked Forever */
		/* const */ unsigned int S11ROM         : 1;	/* PFlash p Sector 11 Locked Forever */
		/* const */ unsigned int S12ROM         : 1;	/* PFlash p Sector 12 Locked Forever */
		/* const */ unsigned int S13ROM         : 1;	/* PFlash p Sector 13 Locked Forever */
		/* const */ unsigned int S14ROM         : 1;	/* PFlash p Sector 14 Locked Forever */
		/* const */ unsigned int S15ROM         : 1;	/* PFlash p Sector 15 Locked Forever */
		/* const */ unsigned int S16ROM         : 1;	/* PFlash p Sector 16 Locked Forever */
		/* const */ unsigned int S17ROM         : 1;	/* PFlash p Sector 17 Locked Forever */
		/* const */ unsigned int S18ROM         : 1;	/* PFlash p Sector 18 Locked Forever */
		/* const */ unsigned int S19ROM         : 1;	/* PFlash p Sector 19 Locked Forever */
		/* const */ unsigned int S20ROM         : 1;	/* PFlash p Sector 20 Locked Forever */
		/* const */ unsigned int S21ROM         : 1;	/* PFlash p Sector 21 Locked Forever */
		/* const */ unsigned int S22ROM         : 1;	/* PFlash p Sector 22 Locked Forever */
		/* const */ unsigned int S23ROM         : 1;	/* PFlash p Sector 23 Locked Forever */
		/* const */ unsigned int S24ROM         : 1;	/* PFlash p Sector 24 Locked Forever */
		/* const */ unsigned int S25ROM         : 1;	/* PFlash p Sector 25 Locked Forever */
		/* const */ unsigned int S26ROM         : 1;	/* PFlash p Sector 26 Locked Forever */
		/* const */ unsigned int RES            : 2;	/* Reserved */
		/* const */ unsigned int BML            : 2;	/* Boot Mode Lock */
		/* const */ unsigned int TP             : 1;	/* Tuning Protection */
	} B;
	int I;
	unsigned int U;

} FLASH0_PROCONOTP0_type;
#define FLASH0_PROCONOTP0	(*( FLASH0_PROCONOTP0_type *) 0xf8002038u)	/* OTP Protection Configuration PF0 */
#define FLASH0_PROCONOTP1	(*( FLASH0_PROCONOTP0_type *) 0xf800203cu)	/* OTP Protection Configuration PF1 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int S0L            : 1;	/* PFlash p Sector 0 Locked for Write Protection */
		/* const */ unsigned int S1L            : 1;	/* PFlash p Sector 1 Locked for Write Protection */
		/* const */ unsigned int S2L            : 1;	/* PFlash p Sector 2 Locked for Write Protection */
		/* const */ unsigned int S3L            : 1;	/* PFlash p Sector 3 Locked for Write Protection */
		/* const */ unsigned int S4L            : 1;	/* PFlash p Sector 4 Locked for Write Protection */
		/* const */ unsigned int S5L            : 1;	/* PFlash p Sector 5 Locked for Write Protection */
		/* const */ unsigned int S6L            : 1;	/* PFlash p Sector 6 Locked for Write Protection */
		/* const */ unsigned int S7L            : 1;	/* PFlash p Sector 7 Locked for Write Protection */
		/* const */ unsigned int S8L            : 1;	/* PFlash p Sector 8 Locked for Write Protection */
		/* const */ unsigned int S9L            : 1;	/* PFlash p Sector 9 Locked for Write Protection */
		/* const */ unsigned int S10L           : 1;	/* PFlash p Sector 10 Locked for Write Protection */
		/* const */ unsigned int S11L           : 1;	/* PFlash p Sector 11 Locked for Write Protection */
		/* const */ unsigned int S12L           : 1;	/* PFlash p Sector 12 Locked for Write Protection */
		/* const */ unsigned int S13L           : 1;	/* PFlash p Sector 13 Locked for Write Protection */
		/* const */ unsigned int S14L           : 1;	/* PFlash p Sector 14 Locked for Write Protection */
		/* const */ unsigned int S15L           : 1;	/* PFlash p Sector 15 Locked for Write Protection */
		/* const */ unsigned int S16L           : 1;	/* PFlash p Sector 16 Locked for Write Protection */
		/* const */ unsigned int S17L           : 1;	/* PFlash p Sector 17 Locked for Write Protection */
		/* const */ unsigned int S18L           : 1;	/* PFlash p Sector 18 Locked for Write Protection */
		/* const */ unsigned int S19L           : 1;	/* PFlash p Sector 19 Locked for Write Protection */
		/* const */ unsigned int S20L           : 1;	/* PFlash p Sector 20 Locked for Write Protection */
		/* const */ unsigned int S21L           : 1;	/* PFlash p Sector 21 Locked for Write Protection */
		/* const */ unsigned int S22L           : 1;	/* PFlash p Sector 22 Locked for Write Protection */
		/* const */ unsigned int S23L           : 1;	/* PFlash p Sector 23 Locked for Write Protection */
		/* const */ unsigned int S24L           : 1;	/* PFlash p Sector 24 Locked for Write Protection */
		/* const */ unsigned int S25L           : 1;	/* PFlash p Sector 25 Locked for Write Protection */
		/* const */ unsigned int S26L           : 1;	/* PFlash p Sector 26 Locked for Write Protection */
		/* const */ unsigned int RES            : 4;	/* Reserved */
		/* const */ unsigned int RPRO           : 1;	/* Read Protection Configuration */
	} B;
	int I;
	unsigned int U;

} FLASH0_PROCONP0_type;
#define FLASH0_PROCONP0	(*( FLASH0_PROCONP0_type *) 0xf8002020u)	/* PFlash Protection Configuration PF0 */
#define FLASH0_PROCONP1	(*( FLASH0_PROCONP0_type *) 0xf8002024u)	/* PFlash Protection Configuration PF1 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int S0WOP          : 1;	/* PFlash p Sector 0 Configured for Write-Once Protection */
		/* const */ unsigned int S1WOP          : 1;	/* PFlash p Sector 1 Configured for Write-Once Protection */
		/* const */ unsigned int S2WOP          : 1;	/* PFlash p Sector 2 Configured for Write-Once Protection */
		/* const */ unsigned int S3WOP          : 1;	/* PFlash p Sector 3 Configured for Write-Once Protection */
		/* const */ unsigned int S4WOP          : 1;	/* PFlash p Sector 4 Configured for Write-Once Protection */
		/* const */ unsigned int S5WOP          : 1;	/* PFlash p Sector 5 Configured for Write-Once Protection */
		/* const */ unsigned int S6WOP          : 1;	/* PFlash p Sector 6 Configured for Write-Once Protection */
		/* const */ unsigned int S7WOP          : 1;	/* PFlash p Sector 7 Configured for Write-Once Protection */
		/* const */ unsigned int S8WOP          : 1;	/* PFlash p Sector 8 Configured for Write-Once Protection */
		/* const */ unsigned int S9WOP          : 1;	/* PFlash p Sector 9 Configured for Write-Once Protection */
		/* const */ unsigned int S10WOP         : 1;	/* PFlash p Sector 10 Configured for Write-Once Protection */
		/* const */ unsigned int S11WOP         : 1;	/* PFlash p Sector 11 Configured for Write-Once Protection */
		/* const */ unsigned int S12WOP         : 1;	/* PFlash p Sector 12 Configured for Write-Once Protection */
		/* const */ unsigned int S13WOP         : 1;	/* PFlash p Sector 13 Configured for Write-Once Protection */
		/* const */ unsigned int S14WOP         : 1;	/* PFlash p Sector 14 Configured for Write-Once Protection */
		/* const */ unsigned int S15WOP         : 1;	/* PFlash p Sector 15 Configured for Write-Once Protection */
		/* const */ unsigned int S16WOP         : 1;	/* PFlash p Sector 16 Configured for Write-Once Protection */
		/* const */ unsigned int S17WOP         : 1;	/* PFlash p Sector 17 Configured for Write-Once Protection */
		/* const */ unsigned int S18WOP         : 1;	/* PFlash p Sector 18 Configured for Write-Once Protection */
		/* const */ unsigned int S19WOP         : 1;	/* PFlash p Sector 19 Configured for Write-Once Protection */
		/* const */ unsigned int S20WOP         : 1;	/* PFlash p Sector 20 Configured for Write-Once Protection */
		/* const */ unsigned int S21WOP         : 1;	/* PFlash p Sector 21 Configured for Write-Once Protection */
		/* const */ unsigned int S22WOP         : 1;	/* PFlash p Sector 22 Configured for Write-Once Protection */
		/* const */ unsigned int S23WOP         : 1;	/* PFlash p Sector 23 Configured for Write-Once Protection */
		/* const */ unsigned int S24WOP         : 1;	/* PFlash p Sector 24 Configured for Write-Once Protection */
		/* const */ unsigned int S25WOP         : 1;	/* PFlash p Sector 25 Configured for Write-Once Protection */
		/* const */ unsigned int S26WOP         : 1;	/* PFlash p Sector 26 Configured for Write-Once Protection */
		/* const */ unsigned int RES            : 4;	/* Reserved */
		/* const */ unsigned int DATM           : 1;	/* Disable ATM */
	} B;
	int I;
	unsigned int U;

} FLASH0_PROCONWOP0_type;
#define FLASH0_PROCONWOP0	(*( FLASH0_PROCONWOP0_type *) 0xf8002048u)	/* Write-Once Protection Configuration PF0 */
#define FLASH0_PROCONWOP1	(*( FLASH0_PROCONWOP0_type *) 0xf800204cu)	/* Write-Once Protection Configuration PF1 */

typedef volatile union
{
	struct
	{ 
		unsigned int TAG            : 6;	/* Master Tag */
		unsigned int                : 26;
	} B;
	int I;
	unsigned int U;

} FLASH0_RDBCFG00_type;
#define FLASH0_RDBCFG00	(*( FLASH0_RDBCFG00_type *) 0xf8002060u)	/* Read Buffer Port 0 Cfg 0 */
#define FLASH0_RDBCFG01	(*( FLASH0_RDBCFG00_type *) 0xf8002064u)	/* Read Buffer Port 0 Cfg 1 */
#define FLASH0_RDBCFG02	(*( FLASH0_RDBCFG00_type *) 0xf8002068u)	/* Read Buffer Port 0 Cfg 2 */
#define FLASH0_RDBCFG10	(*( FLASH0_RDBCFG00_type *) 0xf800206cu)	/* Read Buffer Port 1 Cfg 0 */
#define FLASH0_RDBCFG11	(*( FLASH0_RDBCFG00_type *) 0xf8002070u)	/* Read Buffer Port 1 Cfg 1 */
#define FLASH0_RDBCFG12	(*( FLASH0_RDBCFG00_type *) 0xf8002074u)	/* Read Buffer Port 1 Cfg 2 */

typedef volatile union
{
	struct
	{ 
		unsigned int STRT           : 1;	/* Start Request */
		unsigned int STP            : 1;	/* Stop */
		/* const */ unsigned int BUSY           : 1;	/* Flash Read Busy */
		/* const */ unsigned int DONE           : 1;	/* Flash Read Done */
		/* const */ unsigned int ERR            : 1;	/* Error */
		unsigned int                : 3;
		unsigned int EOBM           : 1;	/* End of Busy Interrupt Mask */
		unsigned int                : 7;
		unsigned int CNT            : 16;	/* Count */
	} B;
	int I;
	unsigned int U;

} FLASH0_RRCT_type;
#define FLASH0_RRCT	(*( FLASH0_RRCT_type *) 0xf8002140u)	/* Requested Read Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int SEL            : 6;	/* Select Bit-Errors */
		unsigned int                : 2;
		unsigned int CLR            : 1;	/* Clear */
		unsigned int DIS            : 1;	/* Disable */
		unsigned int                : 22;
	} B;
	int I;
	unsigned int U;

} FLASH0_UBABCFG0_type;
#define FLASH0_UBABCFG0	(*( FLASH0_UBABCFG0_type *) 0xf80020e4u)	/* UBAB Configuration Port 0 */
#define FLASH0_UBABCFG1	(*( FLASH0_UBABCFG0_type *) 0xf80020f0u)	/* UBAB Configuration Port 1 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int VLD0           : 1;	/* Filling Level */
		/* const */ unsigned int                : 31;
	} B;
	int I;
	unsigned int U;

} FLASH0_UBABSTAT0_type;
#define FLASH0_UBABSTAT0	(*( FLASH0_UBABSTAT0_type *) 0xf80020e8u)	/* UBAB Status Port 0 */
#define FLASH0_UBABSTAT1	(*( FLASH0_UBABSTAT0_type *) 0xf80020f4u)	/* UBAB Status Port 1 */

typedef volatile union
{
	struct
	{ 
		unsigned int                : 5;
		/* const */ unsigned int ADDR           : 19;	/* Address */
		/* const */ unsigned int ERR            : 6;	/* Error Type */
		/* const */ unsigned int VLD            : 1;	/* Valid */
		unsigned int CLR            : 1;	/* Clear */
	} B;
	int I;
	unsigned int U;

} FLASH0_UBABTOP0_type;
#define FLASH0_UBABTOP0	(*( FLASH0_UBABTOP0_type *) 0xf80020ecu)	/* UBAB FIFO TOP Entry Port 0 */
#define FLASH0_UBABTOP1	(*( FLASH0_UBABTOP0_type *) 0xf80020f8u)	/* UBAB FIFO TOP Entry Port 1 */


/* LMU */
typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 EN0            : 1;	/* Access Enable for Master TAG ID 0 */
		unsigned __sfrbit32 EN1            : 1;	/* Access Enable for Master TAG ID 1 */
		unsigned __sfrbit32 EN2            : 1;	/* Access Enable for Master TAG ID 2 */
		unsigned __sfrbit32 EN3            : 1;	/* Access Enable for Master TAG ID 3 */
		unsigned __sfrbit32 EN4            : 1;	/* Access Enable for Master TAG ID 4 */
		unsigned __sfrbit32 EN5            : 1;	/* Access Enable for Master TAG ID 5 */
		unsigned __sfrbit32 EN6            : 1;	/* Access Enable for Master TAG ID 6 */
		unsigned __sfrbit32 EN7            : 1;	/* Access Enable for Master TAG ID 7 */
		unsigned __sfrbit32 EN8            : 1;	/* Access Enable for Master TAG ID 8 */
		unsigned __sfrbit32 EN9            : 1;	/* Access Enable for Master TAG ID 9 */
		unsigned __sfrbit32 EN10           : 1;	/* Access Enable for Master TAG ID 10 */
		unsigned __sfrbit32 EN11           : 1;	/* Access Enable for Master TAG ID 11 */
		unsigned __sfrbit32 EN12           : 1;	/* Access Enable for Master TAG ID 12 */
		unsigned __sfrbit32 EN13           : 1;	/* Access Enable for Master TAG ID 13 */
		unsigned __sfrbit32 EN14           : 1;	/* Access Enable for Master TAG ID 14 */
		unsigned __sfrbit32 EN15           : 1;	/* Access Enable for Master TAG ID 15 */
		unsigned __sfrbit32 EN16           : 1;	/* Access Enable for Master TAG ID 16 */
		unsigned __sfrbit32 EN17           : 1;	/* Access Enable for Master TAG ID 17 */
		unsigned __sfrbit32 EN18           : 1;	/* Access Enable for Master TAG ID 18 */
		unsigned __sfrbit32 EN19           : 1;	/* Access Enable for Master TAG ID 19 */
		unsigned __sfrbit32 EN20           : 1;	/* Access Enable for Master TAG ID 20 */
		unsigned __sfrbit32 EN21           : 1;	/* Access Enable for Master TAG ID 21 */
		unsigned __sfrbit32 EN22           : 1;	/* Access Enable for Master TAG ID 22 */
		unsigned __sfrbit32 EN23           : 1;	/* Access Enable for Master TAG ID 23 */
		unsigned __sfrbit32 EN24           : 1;	/* Access Enable for Master TAG ID 24 */
		unsigned __sfrbit32 EN25           : 1;	/* Access Enable for Master TAG ID 25 */
		unsigned __sfrbit32 EN26           : 1;	/* Access Enable for Master TAG ID 26 */
		unsigned __sfrbit32 EN27           : 1;	/* Access Enable for Master TAG ID 27 */
		unsigned __sfrbit32 EN28           : 1;	/* Access Enable for Master TAG ID 28 */
		unsigned __sfrbit32 EN29           : 1;	/* Access Enable for Master TAG ID 29 */
		unsigned __sfrbit32 EN30           : 1;	/* Access Enable for Master TAG ID 30 */
		unsigned __sfrbit32 EN31           : 1;	/* Access Enable for Master TAG ID 31 */
	} B;
	int I;
	unsigned int U;

} LMU_ACCEN0_type;
#define LMU_ACCEN0	(*( LMU_ACCEN0_type *) 0xf8700810u)	/* LMU Access Enable Register 0 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned __sfrbit32 RES            : 32;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} LMU_ACCEN1_type;
#define LMU_ACCEN1	(*( LMU_ACCEN1_type *) 0xf8700814u)	/* LMU Access Enable Register 1 */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 TAG1           : 6;	/* Master Tag ID 1 */
		unsigned __sfrbit32                : 2;
		unsigned __sfrbit32 TAG2           : 6;	/* Master Tag ID 2 */
		unsigned __sfrbit32                : 8;
		unsigned __sfrbit32 EREN           : 1;	/* EMEM Read Buffer Enable */
		unsigned __sfrbit32 EPEN           : 1;	/* EMEM Prefetch Enable */
		unsigned __sfrbit32                : 6;
		unsigned __sfrbit32 EN1            : 1;	/* TAG1 Field Enable */
		unsigned __sfrbit32 EN2            : 1;	/* TAG2 Field Enable */
	} B;
	int I;
	unsigned int U;

} LMU_BUFCON0_type;
#define LMU_BUFCON0	(*( LMU_BUFCON0_type *) 0xf8700830u)	/* LMU Buffer Control Register */
#define LMU_BUFCON1	(*( LMU_BUFCON0_type *) 0xf8700834u)	/* LMU Buffer Control Register */
#define LMU_BUFCON2	(*( LMU_BUFCON0_type *) 0xf8700838u)	/* LMU Buffer Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 DISR           : 1;	/* LMU Disable Request Bit */
		/* const */ unsigned __sfrbit32 DISS           : 1;	/* LMU Disable Status Bit */
		/* const */ unsigned __sfrbit32 RES            : 30;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} LMU_CLC_type;
#define LMU_CLC	(*( LMU_CLC_type *) 0xf8700800u)	/* LMU Clock Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 OLDAEN         : 1;	/* Online Data Acquisition Enabled */
		unsigned __sfrbit32 POLDAEN        : 1;	/* Protection Bit for OLDAEN */
		unsigned __sfrbit32 INTERR         : 1;	/* Internal ECC Error */
		unsigned __sfrbit32 ERERR          : 1;	/* EMEM Read Error */
		unsigned __sfrbit32 RMWERR         : 1;	/* Internal Read Modify Write Error */
		unsigned __sfrbit32 EWERR          : 1;	/* EMEM Write Error */
		unsigned __sfrbit32 DATAERR        : 1;	/* SRI Data Phase ECC Error */
		unsigned __sfrbit32 ADDERR         : 1;	/* SRI Address Phase ECC Error */
		unsigned __sfrbit32 PMIC           : 1;	/* Protection Bit for Memory Integrity Control Bit */
		unsigned __sfrbit32 ERRDIS         : 1;	/* ECC Error Disable */
		unsigned __sfrbit32                : 2;
		unsigned __sfrbit32 WSTATES        : 4;	/* EMEM Wait States */
		unsigned __sfrbit32                : 16;
	} B;
	int I;
	unsigned int U;

} LMU_MEMCON_type;
#define LMU_MEMCON	(*( LMU_MEMCON_type *) 0xf8700820u)	/* LMU Memory Control Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned __sfrbit32 ID_VALUE       : 32;	/* Module Identification Value */
	} B;
	int I;
	unsigned int U;

} LMU_MODID_type;
#define LMU_MODID	(*( LMU_MODID_type *) 0xf8700808u)	/* LMU Module ID Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 EN0            : 1;	/* Access Enable for Master TAG ID 0 */
		unsigned __sfrbit32 EN1            : 1;	/* Access Enable for Master TAG ID 1 */
		unsigned __sfrbit32 EN2            : 1;	/* Access Enable for Master TAG ID 2 */
		unsigned __sfrbit32 EN3            : 1;	/* Access Enable for Master TAG ID 3 */
		unsigned __sfrbit32 EN4            : 1;	/* Access Enable for Master TAG ID 4 */
		unsigned __sfrbit32 EN5            : 1;	/* Access Enable for Master TAG ID 5 */
		unsigned __sfrbit32 EN6            : 1;	/* Access Enable for Master TAG ID 6 */
		unsigned __sfrbit32 EN7            : 1;	/* Access Enable for Master TAG ID 7 */
		unsigned __sfrbit32 EN8            : 1;	/* Access Enable for Master TAG ID 8 */
		unsigned __sfrbit32 EN9            : 1;	/* Access Enable for Master TAG ID 9 */
		unsigned __sfrbit32 EN10           : 1;	/* Access Enable for Master TAG ID 10 */
		unsigned __sfrbit32 EN11           : 1;	/* Access Enable for Master TAG ID 11 */
		unsigned __sfrbit32 EN12           : 1;	/* Access Enable for Master TAG ID 12 */
		unsigned __sfrbit32 EN13           : 1;	/* Access Enable for Master TAG ID 13 */
		unsigned __sfrbit32 EN14           : 1;	/* Access Enable for Master TAG ID 14 */
		unsigned __sfrbit32 EN15           : 1;	/* Access Enable for Master TAG ID 15 */
		unsigned __sfrbit32 EN16           : 1;	/* Access Enable for Master TAG ID 16 */
		unsigned __sfrbit32 EN17           : 1;	/* Access Enable for Master TAG ID 17 */
		unsigned __sfrbit32 EN18           : 1;	/* Access Enable for Master TAG ID 18 */
		unsigned __sfrbit32 EN19           : 1;	/* Access Enable for Master TAG ID 19 */
		unsigned __sfrbit32 EN20           : 1;	/* Access Enable for Master TAG ID 20 */
		unsigned __sfrbit32 EN21           : 1;	/* Access Enable for Master TAG ID 21 */
		unsigned __sfrbit32 EN22           : 1;	/* Access Enable for Master TAG ID 22 */
		unsigned __sfrbit32 EN23           : 1;	/* Access Enable for Master TAG ID 23 */
		unsigned __sfrbit32 EN24           : 1;	/* Access Enable for Master TAG ID 24 */
		unsigned __sfrbit32 EN25           : 1;	/* Access Enable for Master TAG ID 25 */
		unsigned __sfrbit32 EN26           : 1;	/* Access Enable for Master TAG ID 26 */
		unsigned __sfrbit32 EN27           : 1;	/* Access Enable for Master TAG ID 27 */
		unsigned __sfrbit32 EN28           : 1;	/* Access Enable for Master TAG ID 28 */
		unsigned __sfrbit32 EN29           : 1;	/* Access Enable for Master TAG ID 29 */
		unsigned __sfrbit32 EN30           : 1;	/* Access Enable for Master TAG ID 30 */
		unsigned __sfrbit32 EN31           : 1;	/* Access Enable for Master TAG ID 31 */
	} B;
	int I;
	unsigned int U;

} LMU_RGNACCENA0_type;
#define LMU_RGNACCENA0	(*( LMU_RGNACCENA0_type *) 0xf8700858u)	/* LMU Region Access Enable Register 0 */
#define LMU_RGNACCENA1	(*( LMU_RGNACCENA0_type *) 0xf8700868u)	/* LMU Region Access Enable Register 0 */
#define LMU_RGNACCENA2	(*( LMU_RGNACCENA0_type *) 0xf8700878u)	/* LMU Region Access Enable Register 0 */
#define LMU_RGNACCENA3	(*( LMU_RGNACCENA0_type *) 0xf8700888u)	/* LMU Region Access Enable Register 0 */
#define LMU_RGNACCENA4	(*( LMU_RGNACCENA0_type *) 0xf8700898u)	/* LMU Region Access Enable Register 0 */
#define LMU_RGNACCENA5	(*( LMU_RGNACCENA0_type *) 0xf87008a8u)	/* LMU Region Access Enable Register 0 */
#define LMU_RGNACCENA6	(*( LMU_RGNACCENA0_type *) 0xf87008b8u)	/* LMU Region Access Enable Register 0 */
#define LMU_RGNACCENA7	(*( LMU_RGNACCENA0_type *) 0xf87008c8u)	/* LMU Region Access Enable Register 0 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned __sfrbit32 Reserved       : 32;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} LMU_RGNACCENB0_type;
#define LMU_RGNACCENB0	(*( LMU_RGNACCENB0_type *) 0xf870085cu)	/* LMU Region Access Enable Register 1 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned __sfrbit32 Reserved       : 32;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} LMU_RGNACCENB1_type;
#define LMU_RGNACCENB1	(*( LMU_RGNACCENB1_type *) 0xf870086cu)	/* LMU Region Access Enable Register 1 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned __sfrbit32 Reserved       : 32;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} LMU_RGNACCENB2_type;
#define LMU_RGNACCENB2	(*( LMU_RGNACCENB2_type *) 0xf870087cu)	/* LMU Region Access Enable Register 1 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned __sfrbit32 Reserved       : 32;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} LMU_RGNACCENB3_type;
#define LMU_RGNACCENB3	(*( LMU_RGNACCENB3_type *) 0xf870088cu)	/* LMU Region Access Enable Register 1 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned __sfrbit32 Reserved       : 32;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} LMU_RGNACCENB4_type;
#define LMU_RGNACCENB4	(*( LMU_RGNACCENB4_type *) 0xf870089cu)	/* LMU Region Access Enable Register 1 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned __sfrbit32 Reserved       : 32;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} LMU_RGNACCENB5_type;
#define LMU_RGNACCENB5	(*( LMU_RGNACCENB5_type *) 0xf87008acu)	/* LMU Region Access Enable Register 1 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned __sfrbit32 Reserved       : 32;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} LMU_RGNACCENB6_type;
#define LMU_RGNACCENB6	(*( LMU_RGNACCENB6_type *) 0xf87008bcu)	/* LMU Region Access Enable Register 1 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned __sfrbit32 Reserved       : 32;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} LMU_RGNACCENB7_type;
#define LMU_RGNACCENB7	(*( LMU_RGNACCENB7_type *) 0xf87008ccu)	/* LMU Region Access Enable Register 1 */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32                : 5;
		unsigned __sfrbit32 ADDR           : 23;	/* Region Lower Address */
		unsigned __sfrbit32                : 4;
	} B;
	int I;
	unsigned int U;

} LMU_RGNLA0_type;
#define LMU_RGNLA0	(*( LMU_RGNLA0_type *) 0xf8700850u)	/* LMU Region Lower Address Register */
#define LMU_RGNLA1	(*( LMU_RGNLA0_type *) 0xf8700860u)	/* LMU Region Lower Address Register */
#define LMU_RGNLA2	(*( LMU_RGNLA0_type *) 0xf8700870u)	/* LMU Region Lower Address Register */
#define LMU_RGNLA3	(*( LMU_RGNLA0_type *) 0xf8700880u)	/* LMU Region Lower Address Register */
#define LMU_RGNLA4	(*( LMU_RGNLA0_type *) 0xf8700890u)	/* LMU Region Lower Address Register */
#define LMU_RGNLA5	(*( LMU_RGNLA0_type *) 0xf87008a0u)	/* LMU Region Lower Address Register */
#define LMU_RGNLA6	(*( LMU_RGNLA0_type *) 0xf87008b0u)	/* LMU Region Lower Address Register */
#define LMU_RGNLA7	(*( LMU_RGNLA0_type *) 0xf87008c0u)	/* LMU Region Lower Address Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32                : 5;
		unsigned __sfrbit32 ADDR           : 24;	/* Region Lower Address */
		unsigned __sfrbit32                : 3;
	} B;
	int I;
	unsigned int U;

} LMU_RGNUA0_type;
#define LMU_RGNUA0	(*( LMU_RGNUA0_type *) 0xf8700854u)	/* LMU Region Upper Address Register */
#define LMU_RGNUA1	(*( LMU_RGNUA0_type *) 0xf8700864u)	/* LMU Region Upper Address Register */
#define LMU_RGNUA2	(*( LMU_RGNUA0_type *) 0xf8700874u)	/* LMU Region Upper Address Register */
#define LMU_RGNUA3	(*( LMU_RGNUA0_type *) 0xf8700884u)	/* LMU Region Upper Address Register */
#define LMU_RGNUA4	(*( LMU_RGNUA0_type *) 0xf8700894u)	/* LMU Region Upper Address Register */
#define LMU_RGNUA5	(*( LMU_RGNUA0_type *) 0xf87008a4u)	/* LMU Region Upper Address Register */
#define LMU_RGNUA6	(*( LMU_RGNUA0_type *) 0xf87008b4u)	/* LMU Region Upper Address Register */
#define LMU_RGNUA7	(*( LMU_RGNUA0_type *) 0xf87008c4u)	/* LMU Region Upper Address Register */


/* OVC */
typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32                : 5;
		unsigned __sfrbit32 OMASK          : 12;	/* Overlay Address Mask */
		/* const */ unsigned __sfrbit32 ONE            : 11;	/* Fixed ?1? Values */
		unsigned __sfrbit32                : 4;
	} B;
	int I;
	unsigned int U;

} OVC0_OMASK0_type;
#define OVC0_OMASK0	(*( OVC0_OMASK0_type *) 0xf880fb18u)	/* Overlay Mask Register 0 */
#define OVC0_OMASK1	(*( OVC0_OMASK0_type *) 0xf880fb24u)	/* Overlay Mask Register 1 */
#define OVC0_OMASK10	(*( OVC0_OMASK0_type *) 0xf880fb90u)	/* Overlay Mask Register 10 */
#define OVC0_OMASK11	(*( OVC0_OMASK0_type *) 0xf880fb9cu)	/* Overlay Mask Register 11 */
#define OVC0_OMASK12	(*( OVC0_OMASK0_type *) 0xf880fba8u)	/* Overlay Mask Register 12 */
#define OVC0_OMASK13	(*( OVC0_OMASK0_type *) 0xf880fbb4u)	/* Overlay Mask Register 13 */
#define OVC0_OMASK14	(*( OVC0_OMASK0_type *) 0xf880fbc0u)	/* Overlay Mask Register 14 */
#define OVC0_OMASK15	(*( OVC0_OMASK0_type *) 0xf880fbccu)	/* Overlay Mask Register 15 */
#define OVC0_OMASK16	(*( OVC0_OMASK0_type *) 0xf880fbd8u)	/* Overlay Mask Register 16 */
#define OVC0_OMASK17	(*( OVC0_OMASK0_type *) 0xf880fbe4u)	/* Overlay Mask Register 17 */
#define OVC0_OMASK18	(*( OVC0_OMASK0_type *) 0xf880fbf0u)	/* Overlay Mask Register 18 */
#define OVC0_OMASK19	(*( OVC0_OMASK0_type *) 0xf880fbfcu)	/* Overlay Mask Register 19 */
#define OVC0_OMASK2	(*( OVC0_OMASK0_type *) 0xf880fb30u)	/* Overlay Mask Register 2 */
#define OVC0_OMASK20	(*( OVC0_OMASK0_type *) 0xf880fc08u)	/* Overlay Mask Register 20 */
#define OVC0_OMASK21	(*( OVC0_OMASK0_type *) 0xf880fc14u)	/* Overlay Mask Register 21 */
#define OVC0_OMASK22	(*( OVC0_OMASK0_type *) 0xf880fc20u)	/* Overlay Mask Register 22 */
#define OVC0_OMASK23	(*( OVC0_OMASK0_type *) 0xf880fc2cu)	/* Overlay Mask Register 23 */
#define OVC0_OMASK24	(*( OVC0_OMASK0_type *) 0xf880fc38u)	/* Overlay Mask Register 24 */
#define OVC0_OMASK25	(*( OVC0_OMASK0_type *) 0xf880fc44u)	/* Overlay Mask Register 25 */
#define OVC0_OMASK26	(*( OVC0_OMASK0_type *) 0xf880fc50u)	/* Overlay Mask Register 26 */
#define OVC0_OMASK27	(*( OVC0_OMASK0_type *) 0xf880fc5cu)	/* Overlay Mask Register 27 */
#define OVC0_OMASK28	(*( OVC0_OMASK0_type *) 0xf880fc68u)	/* Overlay Mask Register 28 */
#define OVC0_OMASK29	(*( OVC0_OMASK0_type *) 0xf880fc74u)	/* Overlay Mask Register 29 */
#define OVC0_OMASK3	(*( OVC0_OMASK0_type *) 0xf880fb3cu)	/* Overlay Mask Register 3 */
#define OVC0_OMASK30	(*( OVC0_OMASK0_type *) 0xf880fc80u)	/* Overlay Mask Register 30 */
#define OVC0_OMASK31	(*( OVC0_OMASK0_type *) 0xf880fc8cu)	/* Overlay Mask Register 31 */
#define OVC0_OMASK4	(*( OVC0_OMASK0_type *) 0xf880fb48u)	/* Overlay Mask Register 4 */
#define OVC0_OMASK5	(*( OVC0_OMASK0_type *) 0xf880fb54u)	/* Overlay Mask Register 5 */
#define OVC0_OMASK6	(*( OVC0_OMASK0_type *) 0xf880fb60u)	/* Overlay Mask Register 6 */
#define OVC0_OMASK7	(*( OVC0_OMASK0_type *) 0xf880fb6cu)	/* Overlay Mask Register 7 */
#define OVC0_OMASK8	(*( OVC0_OMASK0_type *) 0xf880fb78u)	/* Overlay Mask Register 8 */
#define OVC0_OMASK9	(*( OVC0_OMASK0_type *) 0xf880fb84u)	/* Overlay Mask Register 9 */
#define OVC1_OMASK0	(*( OVC0_OMASK0_type *) 0xf882fb18u)	/* Overlay Mask Register 0 */
#define OVC1_OMASK1	(*( OVC0_OMASK0_type *) 0xf882fb24u)	/* Overlay Mask Register 1 */
#define OVC1_OMASK10	(*( OVC0_OMASK0_type *) 0xf882fb90u)	/* Overlay Mask Register 10 */
#define OVC1_OMASK11	(*( OVC0_OMASK0_type *) 0xf882fb9cu)	/* Overlay Mask Register 11 */
#define OVC1_OMASK12	(*( OVC0_OMASK0_type *) 0xf882fba8u)	/* Overlay Mask Register 12 */
#define OVC1_OMASK13	(*( OVC0_OMASK0_type *) 0xf882fbb4u)	/* Overlay Mask Register 13 */
#define OVC1_OMASK14	(*( OVC0_OMASK0_type *) 0xf882fbc0u)	/* Overlay Mask Register 14 */
#define OVC1_OMASK15	(*( OVC0_OMASK0_type *) 0xf882fbccu)	/* Overlay Mask Register 15 */
#define OVC1_OMASK16	(*( OVC0_OMASK0_type *) 0xf882fbd8u)	/* Overlay Mask Register 16 */
#define OVC1_OMASK17	(*( OVC0_OMASK0_type *) 0xf882fbe4u)	/* Overlay Mask Register 17 */
#define OVC1_OMASK18	(*( OVC0_OMASK0_type *) 0xf882fbf0u)	/* Overlay Mask Register 18 */
#define OVC1_OMASK19	(*( OVC0_OMASK0_type *) 0xf882fbfcu)	/* Overlay Mask Register 19 */
#define OVC1_OMASK2	(*( OVC0_OMASK0_type *) 0xf882fb30u)	/* Overlay Mask Register 2 */
#define OVC1_OMASK20	(*( OVC0_OMASK0_type *) 0xf882fc08u)	/* Overlay Mask Register 20 */
#define OVC1_OMASK21	(*( OVC0_OMASK0_type *) 0xf882fc14u)	/* Overlay Mask Register 21 */
#define OVC1_OMASK22	(*( OVC0_OMASK0_type *) 0xf882fc20u)	/* Overlay Mask Register 22 */
#define OVC1_OMASK23	(*( OVC0_OMASK0_type *) 0xf882fc2cu)	/* Overlay Mask Register 23 */
#define OVC1_OMASK24	(*( OVC0_OMASK0_type *) 0xf882fc38u)	/* Overlay Mask Register 24 */
#define OVC1_OMASK25	(*( OVC0_OMASK0_type *) 0xf882fc44u)	/* Overlay Mask Register 25 */
#define OVC1_OMASK26	(*( OVC0_OMASK0_type *) 0xf882fc50u)	/* Overlay Mask Register 26 */
#define OVC1_OMASK27	(*( OVC0_OMASK0_type *) 0xf882fc5cu)	/* Overlay Mask Register 27 */
#define OVC1_OMASK28	(*( OVC0_OMASK0_type *) 0xf882fc68u)	/* Overlay Mask Register 28 */
#define OVC1_OMASK29	(*( OVC0_OMASK0_type *) 0xf882fc74u)	/* Overlay Mask Register 29 */
#define OVC1_OMASK3	(*( OVC0_OMASK0_type *) 0xf882fb3cu)	/* Overlay Mask Register 3 */
#define OVC1_OMASK30	(*( OVC0_OMASK0_type *) 0xf882fc80u)	/* Overlay Mask Register 30 */
#define OVC1_OMASK31	(*( OVC0_OMASK0_type *) 0xf882fc8cu)	/* Overlay Mask Register 31 */
#define OVC1_OMASK4	(*( OVC0_OMASK0_type *) 0xf882fb48u)	/* Overlay Mask Register 4 */
#define OVC1_OMASK5	(*( OVC0_OMASK0_type *) 0xf882fb54u)	/* Overlay Mask Register 5 */
#define OVC1_OMASK6	(*( OVC0_OMASK0_type *) 0xf882fb60u)	/* Overlay Mask Register 6 */
#define OVC1_OMASK7	(*( OVC0_OMASK0_type *) 0xf882fb6cu)	/* Overlay Mask Register 7 */
#define OVC1_OMASK8	(*( OVC0_OMASK0_type *) 0xf882fb78u)	/* Overlay Mask Register 8 */
#define OVC1_OMASK9	(*( OVC0_OMASK0_type *) 0xf882fb84u)	/* Overlay Mask Register 9 */
#define OVC2_OMASK0	(*( OVC0_OMASK0_type *) 0xf884fb18u)	/* Overlay Mask Register 0 */
#define OVC2_OMASK1	(*( OVC0_OMASK0_type *) 0xf884fb24u)	/* Overlay Mask Register 1 */
#define OVC2_OMASK10	(*( OVC0_OMASK0_type *) 0xf884fb90u)	/* Overlay Mask Register 10 */
#define OVC2_OMASK11	(*( OVC0_OMASK0_type *) 0xf884fb9cu)	/* Overlay Mask Register 11 */
#define OVC2_OMASK12	(*( OVC0_OMASK0_type *) 0xf884fba8u)	/* Overlay Mask Register 12 */
#define OVC2_OMASK13	(*( OVC0_OMASK0_type *) 0xf884fbb4u)	/* Overlay Mask Register 13 */
#define OVC2_OMASK14	(*( OVC0_OMASK0_type *) 0xf884fbc0u)	/* Overlay Mask Register 14 */
#define OVC2_OMASK15	(*( OVC0_OMASK0_type *) 0xf884fbccu)	/* Overlay Mask Register 15 */
#define OVC2_OMASK16	(*( OVC0_OMASK0_type *) 0xf884fbd8u)	/* Overlay Mask Register 16 */
#define OVC2_OMASK17	(*( OVC0_OMASK0_type *) 0xf884fbe4u)	/* Overlay Mask Register 17 */
#define OVC2_OMASK18	(*( OVC0_OMASK0_type *) 0xf884fbf0u)	/* Overlay Mask Register 18 */
#define OVC2_OMASK19	(*( OVC0_OMASK0_type *) 0xf884fbfcu)	/* Overlay Mask Register 19 */
#define OVC2_OMASK2	(*( OVC0_OMASK0_type *) 0xf884fb30u)	/* Overlay Mask Register 2 */
#define OVC2_OMASK20	(*( OVC0_OMASK0_type *) 0xf884fc08u)	/* Overlay Mask Register 20 */
#define OVC2_OMASK21	(*( OVC0_OMASK0_type *) 0xf884fc14u)	/* Overlay Mask Register 21 */
#define OVC2_OMASK22	(*( OVC0_OMASK0_type *) 0xf884fc20u)	/* Overlay Mask Register 22 */
#define OVC2_OMASK23	(*( OVC0_OMASK0_type *) 0xf884fc2cu)	/* Overlay Mask Register 23 */
#define OVC2_OMASK24	(*( OVC0_OMASK0_type *) 0xf884fc38u)	/* Overlay Mask Register 24 */
#define OVC2_OMASK25	(*( OVC0_OMASK0_type *) 0xf884fc44u)	/* Overlay Mask Register 25 */
#define OVC2_OMASK26	(*( OVC0_OMASK0_type *) 0xf884fc50u)	/* Overlay Mask Register 26 */
#define OVC2_OMASK27	(*( OVC0_OMASK0_type *) 0xf884fc5cu)	/* Overlay Mask Register 27 */
#define OVC2_OMASK28	(*( OVC0_OMASK0_type *) 0xf884fc68u)	/* Overlay Mask Register 28 */
#define OVC2_OMASK29	(*( OVC0_OMASK0_type *) 0xf884fc74u)	/* Overlay Mask Register 29 */
#define OVC2_OMASK3	(*( OVC0_OMASK0_type *) 0xf884fb3cu)	/* Overlay Mask Register 3 */
#define OVC2_OMASK30	(*( OVC0_OMASK0_type *) 0xf884fc80u)	/* Overlay Mask Register 30 */
#define OVC2_OMASK31	(*( OVC0_OMASK0_type *) 0xf884fc8cu)	/* Overlay Mask Register 31 */
#define OVC2_OMASK4	(*( OVC0_OMASK0_type *) 0xf884fb48u)	/* Overlay Mask Register 4 */
#define OVC2_OMASK5	(*( OVC0_OMASK0_type *) 0xf884fb54u)	/* Overlay Mask Register 5 */
#define OVC2_OMASK6	(*( OVC0_OMASK0_type *) 0xf884fb60u)	/* Overlay Mask Register 6 */
#define OVC2_OMASK7	(*( OVC0_OMASK0_type *) 0xf884fb6cu)	/* Overlay Mask Register 7 */
#define OVC2_OMASK8	(*( OVC0_OMASK0_type *) 0xf884fb78u)	/* Overlay Mask Register 8 */
#define OVC2_OMASK9	(*( OVC0_OMASK0_type *) 0xf884fb84u)	/* Overlay Mask Register 9 */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 SHOVEN0        : 1;	/* Shadow Overlay Enable 0 */
		unsigned __sfrbit32 SHOVEN1        : 1;	/* Shadow Overlay Enable 1 */
		unsigned __sfrbit32 SHOVEN2        : 1;	/* Shadow Overlay Enable 2 */
		unsigned __sfrbit32 SHOVEN3        : 1;	/* Shadow Overlay Enable 3 */
		unsigned __sfrbit32 SHOVEN4        : 1;	/* Shadow Overlay Enable 4 */
		unsigned __sfrbit32 SHOVEN5        : 1;	/* Shadow Overlay Enable 5 */
		unsigned __sfrbit32 SHOVEN6        : 1;	/* Shadow Overlay Enable 6 */
		unsigned __sfrbit32 SHOVEN7        : 1;	/* Shadow Overlay Enable 7 */
		unsigned __sfrbit32 SHOVEN8        : 1;	/* Shadow Overlay Enable 8 */
		unsigned __sfrbit32 SHOVEN9        : 1;	/* Shadow Overlay Enable 9 */
		unsigned __sfrbit32 SHOVEN10       : 1;	/* Shadow Overlay Enable 10 */
		unsigned __sfrbit32 SHOVEN11       : 1;	/* Shadow Overlay Enable 11 */
		unsigned __sfrbit32 SHOVEN12       : 1;	/* Shadow Overlay Enable 12 */
		unsigned __sfrbit32 SHOVEN13       : 1;	/* Shadow Overlay Enable 13 */
		unsigned __sfrbit32 SHOVEN14       : 1;	/* Shadow Overlay Enable 14 */
		unsigned __sfrbit32 SHOVEN15       : 1;	/* Shadow Overlay Enable 15 */
		unsigned __sfrbit32 SHOVEN16       : 1;	/* Shadow Overlay Enable 16 */
		unsigned __sfrbit32 SHOVEN17       : 1;	/* Shadow Overlay Enable 17 */
		unsigned __sfrbit32 SHOVEN18       : 1;	/* Shadow Overlay Enable 18 */
		unsigned __sfrbit32 SHOVEN19       : 1;	/* Shadow Overlay Enable 19 */
		unsigned __sfrbit32 SHOVEN20       : 1;	/* Shadow Overlay Enable 20 */
		unsigned __sfrbit32 SHOVEN21       : 1;	/* Shadow Overlay Enable 21 */
		unsigned __sfrbit32 SHOVEN22       : 1;	/* Shadow Overlay Enable 22 */
		unsigned __sfrbit32 SHOVEN23       : 1;	/* Shadow Overlay Enable 23 */
		unsigned __sfrbit32 SHOVEN24       : 1;	/* Shadow Overlay Enable 24 */
		unsigned __sfrbit32 SHOVEN25       : 1;	/* Shadow Overlay Enable 25 */
		unsigned __sfrbit32 SHOVEN26       : 1;	/* Shadow Overlay Enable 26 */
		unsigned __sfrbit32 SHOVEN27       : 1;	/* Shadow Overlay Enable 27 */
		unsigned __sfrbit32 SHOVEN28       : 1;	/* Shadow Overlay Enable 28 */
		unsigned __sfrbit32 SHOVEN29       : 1;	/* Shadow Overlay Enable 29 */
		unsigned __sfrbit32 SHOVEN30       : 1;	/* Shadow Overlay Enable 30 */
		unsigned __sfrbit32 SHOVEN31       : 1;	/* Shadow Overlay Enable 31 */
	} B;
	int I;
	unsigned int U;

} OVC0_OSEL_type;
#define OVC0_OSEL	(*( OVC0_OSEL_type *) 0xf880fb00u)	/* Overlay Range Select Register */
#define OVC1_OSEL	(*( OVC0_OSEL_type *) 0xf882fb00u)	/* Overlay Range Select Register */
#define OVC2_OSEL	(*( OVC0_OSEL_type *) 0xf884fb00u)	/* Overlay Range Select Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32                : 5;
		unsigned __sfrbit32 TBASE          : 23;	/* Target Base */
		unsigned __sfrbit32                : 4;
	} B;
	int I;
	unsigned int U;

} OVC0_OTAR0_type;
#define OVC0_OTAR0	(*( OVC0_OTAR0_type *) 0xf880fb14u)	/* Overlay Target Address Register 0 */
#define OVC0_OTAR1	(*( OVC0_OTAR0_type *) 0xf880fb20u)	/* Overlay Target Address Register 1 */
#define OVC0_OTAR10	(*( OVC0_OTAR0_type *) 0xf880fb8cu)	/* Overlay Target Address Register 10 */
#define OVC0_OTAR11	(*( OVC0_OTAR0_type *) 0xf880fb98u)	/* Overlay Target Address Register 11 */
#define OVC0_OTAR12	(*( OVC0_OTAR0_type *) 0xf880fba4u)	/* Overlay Target Address Register 12 */
#define OVC0_OTAR13	(*( OVC0_OTAR0_type *) 0xf880fbb0u)	/* Overlay Target Address Register 13 */
#define OVC0_OTAR14	(*( OVC0_OTAR0_type *) 0xf880fbbcu)	/* Overlay Target Address Register 14 */
#define OVC0_OTAR15	(*( OVC0_OTAR0_type *) 0xf880fbc8u)	/* Overlay Target Address Register 15 */
#define OVC0_OTAR16	(*( OVC0_OTAR0_type *) 0xf880fbd4u)	/* Overlay Target Address Register 16 */
#define OVC0_OTAR17	(*( OVC0_OTAR0_type *) 0xf880fbe0u)	/* Overlay Target Address Register 17 */
#define OVC0_OTAR18	(*( OVC0_OTAR0_type *) 0xf880fbecu)	/* Overlay Target Address Register 18 */
#define OVC0_OTAR19	(*( OVC0_OTAR0_type *) 0xf880fbf8u)	/* Overlay Target Address Register 19 */
#define OVC0_OTAR2	(*( OVC0_OTAR0_type *) 0xf880fb2cu)	/* Overlay Target Address Register 2 */
#define OVC0_OTAR20	(*( OVC0_OTAR0_type *) 0xf880fc04u)	/* Overlay Target Address Register 20 */
#define OVC0_OTAR21	(*( OVC0_OTAR0_type *) 0xf880fc10u)	/* Overlay Target Address Register 21 */
#define OVC0_OTAR22	(*( OVC0_OTAR0_type *) 0xf880fc1cu)	/* Overlay Target Address Register 22 */
#define OVC0_OTAR23	(*( OVC0_OTAR0_type *) 0xf880fc28u)	/* Overlay Target Address Register 23 */
#define OVC0_OTAR24	(*( OVC0_OTAR0_type *) 0xf880fc34u)	/* Overlay Target Address Register 24 */
#define OVC0_OTAR25	(*( OVC0_OTAR0_type *) 0xf880fc40u)	/* Overlay Target Address Register 25 */
#define OVC0_OTAR26	(*( OVC0_OTAR0_type *) 0xf880fc4cu)	/* Overlay Target Address Register 26 */
#define OVC0_OTAR27	(*( OVC0_OTAR0_type *) 0xf880fc58u)	/* Overlay Target Address Register 27 */
#define OVC0_OTAR28	(*( OVC0_OTAR0_type *) 0xf880fc64u)	/* Overlay Target Address Register 28 */
#define OVC0_OTAR29	(*( OVC0_OTAR0_type *) 0xf880fc70u)	/* Overlay Target Address Register 29 */
#define OVC0_OTAR3	(*( OVC0_OTAR0_type *) 0xf880fb38u)	/* Overlay Target Address Register 3 */
#define OVC0_OTAR30	(*( OVC0_OTAR0_type *) 0xf880fc7cu)	/* Overlay Target Address Register 30 */
#define OVC0_OTAR31	(*( OVC0_OTAR0_type *) 0xf880fc88u)	/* Overlay Target Address Register 31 */
#define OVC0_OTAR4	(*( OVC0_OTAR0_type *) 0xf880fb44u)	/* Overlay Target Address Register 4 */
#define OVC0_OTAR5	(*( OVC0_OTAR0_type *) 0xf880fb50u)	/* Overlay Target Address Register 5 */
#define OVC0_OTAR6	(*( OVC0_OTAR0_type *) 0xf880fb5cu)	/* Overlay Target Address Register 6 */
#define OVC0_OTAR7	(*( OVC0_OTAR0_type *) 0xf880fb68u)	/* Overlay Target Address Register 7 */
#define OVC0_OTAR8	(*( OVC0_OTAR0_type *) 0xf880fb74u)	/* Overlay Target Address Register 8 */
#define OVC0_OTAR9	(*( OVC0_OTAR0_type *) 0xf880fb80u)	/* Overlay Target Address Register 9 */
#define OVC1_OTAR0	(*( OVC0_OTAR0_type *) 0xf882fb14u)	/* Overlay Target Address Register 0 */
#define OVC1_OTAR1	(*( OVC0_OTAR0_type *) 0xf882fb20u)	/* Overlay Target Address Register 1 */
#define OVC1_OTAR10	(*( OVC0_OTAR0_type *) 0xf882fb8cu)	/* Overlay Target Address Register 10 */
#define OVC1_OTAR11	(*( OVC0_OTAR0_type *) 0xf882fb98u)	/* Overlay Target Address Register 11 */
#define OVC1_OTAR12	(*( OVC0_OTAR0_type *) 0xf882fba4u)	/* Overlay Target Address Register 12 */
#define OVC1_OTAR13	(*( OVC0_OTAR0_type *) 0xf882fbb0u)	/* Overlay Target Address Register 13 */
#define OVC1_OTAR14	(*( OVC0_OTAR0_type *) 0xf882fbbcu)	/* Overlay Target Address Register 14 */
#define OVC1_OTAR15	(*( OVC0_OTAR0_type *) 0xf882fbc8u)	/* Overlay Target Address Register 15 */
#define OVC1_OTAR16	(*( OVC0_OTAR0_type *) 0xf882fbd4u)	/* Overlay Target Address Register 16 */
#define OVC1_OTAR17	(*( OVC0_OTAR0_type *) 0xf882fbe0u)	/* Overlay Target Address Register 17 */
#define OVC1_OTAR18	(*( OVC0_OTAR0_type *) 0xf882fbecu)	/* Overlay Target Address Register 18 */
#define OVC1_OTAR19	(*( OVC0_OTAR0_type *) 0xf882fbf8u)	/* Overlay Target Address Register 19 */
#define OVC1_OTAR2	(*( OVC0_OTAR0_type *) 0xf882fb2cu)	/* Overlay Target Address Register 2 */
#define OVC1_OTAR20	(*( OVC0_OTAR0_type *) 0xf882fc04u)	/* Overlay Target Address Register 20 */
#define OVC1_OTAR21	(*( OVC0_OTAR0_type *) 0xf882fc10u)	/* Overlay Target Address Register 21 */
#define OVC1_OTAR22	(*( OVC0_OTAR0_type *) 0xf882fc1cu)	/* Overlay Target Address Register 22 */
#define OVC1_OTAR23	(*( OVC0_OTAR0_type *) 0xf882fc28u)	/* Overlay Target Address Register 23 */
#define OVC1_OTAR24	(*( OVC0_OTAR0_type *) 0xf882fc34u)	/* Overlay Target Address Register 24 */
#define OVC1_OTAR25	(*( OVC0_OTAR0_type *) 0xf882fc40u)	/* Overlay Target Address Register 25 */
#define OVC1_OTAR26	(*( OVC0_OTAR0_type *) 0xf882fc4cu)	/* Overlay Target Address Register 26 */
#define OVC1_OTAR27	(*( OVC0_OTAR0_type *) 0xf882fc58u)	/* Overlay Target Address Register 27 */
#define OVC1_OTAR28	(*( OVC0_OTAR0_type *) 0xf882fc64u)	/* Overlay Target Address Register 28 */
#define OVC1_OTAR29	(*( OVC0_OTAR0_type *) 0xf882fc70u)	/* Overlay Target Address Register 29 */
#define OVC1_OTAR3	(*( OVC0_OTAR0_type *) 0xf882fb38u)	/* Overlay Target Address Register 3 */
#define OVC1_OTAR30	(*( OVC0_OTAR0_type *) 0xf882fc7cu)	/* Overlay Target Address Register 30 */
#define OVC1_OTAR31	(*( OVC0_OTAR0_type *) 0xf882fc88u)	/* Overlay Target Address Register 31 */
#define OVC1_OTAR4	(*( OVC0_OTAR0_type *) 0xf882fb44u)	/* Overlay Target Address Register 4 */
#define OVC1_OTAR5	(*( OVC0_OTAR0_type *) 0xf882fb50u)	/* Overlay Target Address Register 5 */
#define OVC1_OTAR6	(*( OVC0_OTAR0_type *) 0xf882fb5cu)	/* Overlay Target Address Register 6 */
#define OVC1_OTAR7	(*( OVC0_OTAR0_type *) 0xf882fb68u)	/* Overlay Target Address Register 7 */
#define OVC1_OTAR8	(*( OVC0_OTAR0_type *) 0xf882fb74u)	/* Overlay Target Address Register 8 */
#define OVC1_OTAR9	(*( OVC0_OTAR0_type *) 0xf882fb80u)	/* Overlay Target Address Register 9 */
#define OVC2_OTAR0	(*( OVC0_OTAR0_type *) 0xf884fb14u)	/* Overlay Target Address Register 0 */
#define OVC2_OTAR1	(*( OVC0_OTAR0_type *) 0xf884fb20u)	/* Overlay Target Address Register 1 */
#define OVC2_OTAR10	(*( OVC0_OTAR0_type *) 0xf884fb8cu)	/* Overlay Target Address Register 10 */
#define OVC2_OTAR11	(*( OVC0_OTAR0_type *) 0xf884fb98u)	/* Overlay Target Address Register 11 */
#define OVC2_OTAR12	(*( OVC0_OTAR0_type *) 0xf884fba4u)	/* Overlay Target Address Register 12 */
#define OVC2_OTAR13	(*( OVC0_OTAR0_type *) 0xf884fbb0u)	/* Overlay Target Address Register 13 */
#define OVC2_OTAR14	(*( OVC0_OTAR0_type *) 0xf884fbbcu)	/* Overlay Target Address Register 14 */
#define OVC2_OTAR15	(*( OVC0_OTAR0_type *) 0xf884fbc8u)	/* Overlay Target Address Register 15 */
#define OVC2_OTAR16	(*( OVC0_OTAR0_type *) 0xf884fbd4u)	/* Overlay Target Address Register 16 */
#define OVC2_OTAR17	(*( OVC0_OTAR0_type *) 0xf884fbe0u)	/* Overlay Target Address Register 17 */
#define OVC2_OTAR18	(*( OVC0_OTAR0_type *) 0xf884fbecu)	/* Overlay Target Address Register 18 */
#define OVC2_OTAR19	(*( OVC0_OTAR0_type *) 0xf884fbf8u)	/* Overlay Target Address Register 19 */
#define OVC2_OTAR2	(*( OVC0_OTAR0_type *) 0xf884fb2cu)	/* Overlay Target Address Register 2 */
#define OVC2_OTAR20	(*( OVC0_OTAR0_type *) 0xf884fc04u)	/* Overlay Target Address Register 20 */
#define OVC2_OTAR21	(*( OVC0_OTAR0_type *) 0xf884fc10u)	/* Overlay Target Address Register 21 */
#define OVC2_OTAR22	(*( OVC0_OTAR0_type *) 0xf884fc1cu)	/* Overlay Target Address Register 22 */
#define OVC2_OTAR23	(*( OVC0_OTAR0_type *) 0xf884fc28u)	/* Overlay Target Address Register 23 */
#define OVC2_OTAR24	(*( OVC0_OTAR0_type *) 0xf884fc34u)	/* Overlay Target Address Register 24 */
#define OVC2_OTAR25	(*( OVC0_OTAR0_type *) 0xf884fc40u)	/* Overlay Target Address Register 25 */
#define OVC2_OTAR26	(*( OVC0_OTAR0_type *) 0xf884fc4cu)	/* Overlay Target Address Register 26 */
#define OVC2_OTAR27	(*( OVC0_OTAR0_type *) 0xf884fc58u)	/* Overlay Target Address Register 27 */
#define OVC2_OTAR28	(*( OVC0_OTAR0_type *) 0xf884fc64u)	/* Overlay Target Address Register 28 */
#define OVC2_OTAR29	(*( OVC0_OTAR0_type *) 0xf884fc70u)	/* Overlay Target Address Register 29 */
#define OVC2_OTAR3	(*( OVC0_OTAR0_type *) 0xf884fb38u)	/* Overlay Target Address Register 3 */
#define OVC2_OTAR30	(*( OVC0_OTAR0_type *) 0xf884fc7cu)	/* Overlay Target Address Register 30 */
#define OVC2_OTAR31	(*( OVC0_OTAR0_type *) 0xf884fc88u)	/* Overlay Target Address Register 31 */
#define OVC2_OTAR4	(*( OVC0_OTAR0_type *) 0xf884fb44u)	/* Overlay Target Address Register 4 */
#define OVC2_OTAR5	(*( OVC0_OTAR0_type *) 0xf884fb50u)	/* Overlay Target Address Register 5 */
#define OVC2_OTAR6	(*( OVC0_OTAR0_type *) 0xf884fb5cu)	/* Overlay Target Address Register 6 */
#define OVC2_OTAR7	(*( OVC0_OTAR0_type *) 0xf884fb68u)	/* Overlay Target Address Register 7 */
#define OVC2_OTAR8	(*( OVC0_OTAR0_type *) 0xf884fb74u)	/* Overlay Target Address Register 8 */
#define OVC2_OTAR9	(*( OVC0_OTAR0_type *) 0xf884fb80u)	/* Overlay Target Address Register 9 */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32                : 5;
		unsigned __sfrbit32 OBASE          : 17;	/* Overlay Block Base Address */
		unsigned __sfrbit32                : 2;
		unsigned __sfrbit32 OMEM           : 3;	/* Overlay Memory Select */
		unsigned __sfrbit32                : 4;
		unsigned __sfrbit32 OVEN           : 1;	/* Overlay Enabled */
	} B;
	int I;
	unsigned int U;

} OVC0_RABR0_type;
#define OVC0_RABR0	(*( OVC0_RABR0_type *) 0xf880fb10u)	/* Redirected Address Base Register 0 */
#define OVC0_RABR1	(*( OVC0_RABR0_type *) 0xf880fb1cu)	/* Redirected Address Base Register 1 */
#define OVC0_RABR10	(*( OVC0_RABR0_type *) 0xf880fb88u)	/* Redirected Address Base Register 10 */
#define OVC0_RABR11	(*( OVC0_RABR0_type *) 0xf880fb94u)	/* Redirected Address Base Register 11 */
#define OVC0_RABR12	(*( OVC0_RABR0_type *) 0xf880fba0u)	/* Redirected Address Base Register 12 */
#define OVC0_RABR13	(*( OVC0_RABR0_type *) 0xf880fbacu)	/* Redirected Address Base Register 13 */
#define OVC0_RABR14	(*( OVC0_RABR0_type *) 0xf880fbb8u)	/* Redirected Address Base Register 14 */
#define OVC0_RABR15	(*( OVC0_RABR0_type *) 0xf880fbc4u)	/* Redirected Address Base Register 15 */
#define OVC0_RABR16	(*( OVC0_RABR0_type *) 0xf880fbd0u)	/* Redirected Address Base Register 16 */
#define OVC0_RABR17	(*( OVC0_RABR0_type *) 0xf880fbdcu)	/* Redirected Address Base Register 17 */
#define OVC0_RABR18	(*( OVC0_RABR0_type *) 0xf880fbe8u)	/* Redirected Address Base Register 18 */
#define OVC0_RABR19	(*( OVC0_RABR0_type *) 0xf880fbf4u)	/* Redirected Address Base Register 19 */
#define OVC0_RABR2	(*( OVC0_RABR0_type *) 0xf880fb28u)	/* Redirected Address Base Register 2 */
#define OVC0_RABR20	(*( OVC0_RABR0_type *) 0xf880fc00u)	/* Redirected Address Base Register 20 */
#define OVC0_RABR21	(*( OVC0_RABR0_type *) 0xf880fc0cu)	/* Redirected Address Base Register 21 */
#define OVC0_RABR22	(*( OVC0_RABR0_type *) 0xf880fc18u)	/* Redirected Address Base Register 22 */
#define OVC0_RABR23	(*( OVC0_RABR0_type *) 0xf880fc24u)	/* Redirected Address Base Register 23 */
#define OVC0_RABR24	(*( OVC0_RABR0_type *) 0xf880fc30u)	/* Redirected Address Base Register 24 */
#define OVC0_RABR25	(*( OVC0_RABR0_type *) 0xf880fc3cu)	/* Redirected Address Base Register 25 */
#define OVC0_RABR26	(*( OVC0_RABR0_type *) 0xf880fc48u)	/* Redirected Address Base Register 26 */
#define OVC0_RABR27	(*( OVC0_RABR0_type *) 0xf880fc54u)	/* Redirected Address Base Register 27 */
#define OVC0_RABR28	(*( OVC0_RABR0_type *) 0xf880fc60u)	/* Redirected Address Base Register 28 */
#define OVC0_RABR29	(*( OVC0_RABR0_type *) 0xf880fc6cu)	/* Redirected Address Base Register 29 */
#define OVC0_RABR3	(*( OVC0_RABR0_type *) 0xf880fb34u)	/* Redirected Address Base Register 3 */
#define OVC0_RABR30	(*( OVC0_RABR0_type *) 0xf880fc78u)	/* Redirected Address Base Register 30 */
#define OVC0_RABR31	(*( OVC0_RABR0_type *) 0xf880fc84u)	/* Redirected Address Base Register 31 */
#define OVC0_RABR4	(*( OVC0_RABR0_type *) 0xf880fb40u)	/* Redirected Address Base Register 4 */
#define OVC0_RABR5	(*( OVC0_RABR0_type *) 0xf880fb4cu)	/* Redirected Address Base Register 5 */
#define OVC0_RABR6	(*( OVC0_RABR0_type *) 0xf880fb58u)	/* Redirected Address Base Register 6 */
#define OVC0_RABR7	(*( OVC0_RABR0_type *) 0xf880fb64u)	/* Redirected Address Base Register 7 */
#define OVC0_RABR8	(*( OVC0_RABR0_type *) 0xf880fb70u)	/* Redirected Address Base Register 8 */
#define OVC0_RABR9	(*( OVC0_RABR0_type *) 0xf880fb7cu)	/* Redirected Address Base Register 9 */
#define OVC1_RABR0	(*( OVC0_RABR0_type *) 0xf882fb10u)	/* Redirected Address Base Register 0 */
#define OVC1_RABR1	(*( OVC0_RABR0_type *) 0xf882fb1cu)	/* Redirected Address Base Register 1 */
#define OVC1_RABR10	(*( OVC0_RABR0_type *) 0xf882fb88u)	/* Redirected Address Base Register 10 */
#define OVC1_RABR11	(*( OVC0_RABR0_type *) 0xf882fb94u)	/* Redirected Address Base Register 11 */
#define OVC1_RABR12	(*( OVC0_RABR0_type *) 0xf882fba0u)	/* Redirected Address Base Register 12 */
#define OVC1_RABR13	(*( OVC0_RABR0_type *) 0xf882fbacu)	/* Redirected Address Base Register 13 */
#define OVC1_RABR14	(*( OVC0_RABR0_type *) 0xf882fbb8u)	/* Redirected Address Base Register 14 */
#define OVC1_RABR15	(*( OVC0_RABR0_type *) 0xf882fbc4u)	/* Redirected Address Base Register 15 */
#define OVC1_RABR16	(*( OVC0_RABR0_type *) 0xf882fbd0u)	/* Redirected Address Base Register 16 */
#define OVC1_RABR17	(*( OVC0_RABR0_type *) 0xf882fbdcu)	/* Redirected Address Base Register 17 */
#define OVC1_RABR18	(*( OVC0_RABR0_type *) 0xf882fbe8u)	/* Redirected Address Base Register 18 */
#define OVC1_RABR19	(*( OVC0_RABR0_type *) 0xf882fbf4u)	/* Redirected Address Base Register 19 */
#define OVC1_RABR2	(*( OVC0_RABR0_type *) 0xf882fb28u)	/* Redirected Address Base Register 2 */
#define OVC1_RABR20	(*( OVC0_RABR0_type *) 0xf882fc00u)	/* Redirected Address Base Register 20 */
#define OVC1_RABR21	(*( OVC0_RABR0_type *) 0xf882fc0cu)	/* Redirected Address Base Register 21 */
#define OVC1_RABR22	(*( OVC0_RABR0_type *) 0xf882fc18u)	/* Redirected Address Base Register 22 */
#define OVC1_RABR23	(*( OVC0_RABR0_type *) 0xf882fc24u)	/* Redirected Address Base Register 23 */
#define OVC1_RABR24	(*( OVC0_RABR0_type *) 0xf882fc30u)	/* Redirected Address Base Register 24 */
#define OVC1_RABR25	(*( OVC0_RABR0_type *) 0xf882fc3cu)	/* Redirected Address Base Register 25 */
#define OVC1_RABR26	(*( OVC0_RABR0_type *) 0xf882fc48u)	/* Redirected Address Base Register 26 */
#define OVC1_RABR27	(*( OVC0_RABR0_type *) 0xf882fc54u)	/* Redirected Address Base Register 27 */
#define OVC1_RABR28	(*( OVC0_RABR0_type *) 0xf882fc60u)	/* Redirected Address Base Register 28 */
#define OVC1_RABR29	(*( OVC0_RABR0_type *) 0xf882fc6cu)	/* Redirected Address Base Register 29 */
#define OVC1_RABR3	(*( OVC0_RABR0_type *) 0xf882fb34u)	/* Redirected Address Base Register 3 */
#define OVC1_RABR30	(*( OVC0_RABR0_type *) 0xf882fc78u)	/* Redirected Address Base Register 30 */
#define OVC1_RABR31	(*( OVC0_RABR0_type *) 0xf882fc84u)	/* Redirected Address Base Register 31 */
#define OVC1_RABR4	(*( OVC0_RABR0_type *) 0xf882fb40u)	/* Redirected Address Base Register 4 */
#define OVC1_RABR5	(*( OVC0_RABR0_type *) 0xf882fb4cu)	/* Redirected Address Base Register 5 */
#define OVC1_RABR6	(*( OVC0_RABR0_type *) 0xf882fb58u)	/* Redirected Address Base Register 6 */
#define OVC1_RABR7	(*( OVC0_RABR0_type *) 0xf882fb64u)	/* Redirected Address Base Register 7 */
#define OVC1_RABR8	(*( OVC0_RABR0_type *) 0xf882fb70u)	/* Redirected Address Base Register 8 */
#define OVC1_RABR9	(*( OVC0_RABR0_type *) 0xf882fb7cu)	/* Redirected Address Base Register 9 */
#define OVC2_RABR0	(*( OVC0_RABR0_type *) 0xf884fb10u)	/* Redirected Address Base Register 0 */
#define OVC2_RABR1	(*( OVC0_RABR0_type *) 0xf884fb1cu)	/* Redirected Address Base Register 1 */
#define OVC2_RABR10	(*( OVC0_RABR0_type *) 0xf884fb88u)	/* Redirected Address Base Register 10 */
#define OVC2_RABR11	(*( OVC0_RABR0_type *) 0xf884fb94u)	/* Redirected Address Base Register 11 */
#define OVC2_RABR12	(*( OVC0_RABR0_type *) 0xf884fba0u)	/* Redirected Address Base Register 12 */
#define OVC2_RABR13	(*( OVC0_RABR0_type *) 0xf884fbacu)	/* Redirected Address Base Register 13 */
#define OVC2_RABR14	(*( OVC0_RABR0_type *) 0xf884fbb8u)	/* Redirected Address Base Register 14 */
#define OVC2_RABR15	(*( OVC0_RABR0_type *) 0xf884fbc4u)	/* Redirected Address Base Register 15 */
#define OVC2_RABR16	(*( OVC0_RABR0_type *) 0xf884fbd0u)	/* Redirected Address Base Register 16 */
#define OVC2_RABR17	(*( OVC0_RABR0_type *) 0xf884fbdcu)	/* Redirected Address Base Register 17 */
#define OVC2_RABR18	(*( OVC0_RABR0_type *) 0xf884fbe8u)	/* Redirected Address Base Register 18 */
#define OVC2_RABR19	(*( OVC0_RABR0_type *) 0xf884fbf4u)	/* Redirected Address Base Register 19 */
#define OVC2_RABR2	(*( OVC0_RABR0_type *) 0xf884fb28u)	/* Redirected Address Base Register 2 */
#define OVC2_RABR20	(*( OVC0_RABR0_type *) 0xf884fc00u)	/* Redirected Address Base Register 20 */
#define OVC2_RABR21	(*( OVC0_RABR0_type *) 0xf884fc0cu)	/* Redirected Address Base Register 21 */
#define OVC2_RABR22	(*( OVC0_RABR0_type *) 0xf884fc18u)	/* Redirected Address Base Register 22 */
#define OVC2_RABR23	(*( OVC0_RABR0_type *) 0xf884fc24u)	/* Redirected Address Base Register 23 */
#define OVC2_RABR24	(*( OVC0_RABR0_type *) 0xf884fc30u)	/* Redirected Address Base Register 24 */
#define OVC2_RABR25	(*( OVC0_RABR0_type *) 0xf884fc3cu)	/* Redirected Address Base Register 25 */
#define OVC2_RABR26	(*( OVC0_RABR0_type *) 0xf884fc48u)	/* Redirected Address Base Register 26 */
#define OVC2_RABR27	(*( OVC0_RABR0_type *) 0xf884fc54u)	/* Redirected Address Base Register 27 */
#define OVC2_RABR28	(*( OVC0_RABR0_type *) 0xf884fc60u)	/* Redirected Address Base Register 28 */
#define OVC2_RABR29	(*( OVC0_RABR0_type *) 0xf884fc6cu)	/* Redirected Address Base Register 29 */
#define OVC2_RABR3	(*( OVC0_RABR0_type *) 0xf884fb34u)	/* Redirected Address Base Register 3 */
#define OVC2_RABR30	(*( OVC0_RABR0_type *) 0xf884fc78u)	/* Redirected Address Base Register 30 */
#define OVC2_RABR31	(*( OVC0_RABR0_type *) 0xf884fc84u)	/* Redirected Address Base Register 31 */
#define OVC2_RABR4	(*( OVC0_RABR0_type *) 0xf884fb40u)	/* Redirected Address Base Register 4 */
#define OVC2_RABR5	(*( OVC0_RABR0_type *) 0xf884fb4cu)	/* Redirected Address Base Register 5 */
#define OVC2_RABR6	(*( OVC0_RABR0_type *) 0xf884fb58u)	/* Redirected Address Base Register 6 */
#define OVC2_RABR7	(*( OVC0_RABR0_type *) 0xf884fb64u)	/* Redirected Address Base Register 7 */
#define OVC2_RABR8	(*( OVC0_RABR0_type *) 0xf884fb70u)	/* Redirected Address Base Register 8 */
#define OVC2_RABR9	(*( OVC0_RABR0_type *) 0xf884fb7cu)	/* Redirected Address Base Register 9 */


/* Ports */
typedef volatile union
{
	struct
	{ 
		unsigned int EN0            : 1;	/* Access Enable for Master TAG ID n */
		unsigned int EN1            : 1;	/* Access Enable for Master TAG ID n */
		unsigned int EN2            : 1;	/* Access Enable for Master TAG ID n */
		unsigned int EN3            : 1;	/* Access Enable for Master TAG ID n */
		unsigned int EN4            : 1;	/* Access Enable for Master TAG ID n */
		unsigned int EN5            : 1;	/* Access Enable for Master TAG ID n */
		unsigned int EN6            : 1;	/* Access Enable for Master TAG ID n */
		unsigned int EN7            : 1;	/* Access Enable for Master TAG ID n */
		unsigned int EN8            : 1;	/* Access Enable for Master TAG ID n */
		unsigned int EN9            : 1;	/* Access Enable for Master TAG ID n */
		unsigned int EN10           : 1;	/* Access Enable for Master TAG ID n */
		unsigned int EN11           : 1;	/* Access Enable for Master TAG ID n */
		unsigned int EN12           : 1;	/* Access Enable for Master TAG ID n */
		unsigned int EN13           : 1;	/* Access Enable for Master TAG ID n */
		unsigned int EN14           : 1;	/* Access Enable for Master TAG ID n */
		unsigned int EN15           : 1;	/* Access Enable for Master TAG ID n */
		unsigned int EN16           : 1;	/* Access Enable for Master TAG ID n */
		unsigned int EN17           : 1;	/* Access Enable for Master TAG ID n */
		unsigned int EN18           : 1;	/* Access Enable for Master TAG ID n */
		unsigned int EN19           : 1;	/* Access Enable for Master TAG ID n */
		unsigned int EN20           : 1;	/* Access Enable for Master TAG ID n */
		unsigned int EN21           : 1;	/* Access Enable for Master TAG ID n */
		unsigned int EN22           : 1;	/* Access Enable for Master TAG ID n */
		unsigned int EN23           : 1;	/* Access Enable for Master TAG ID n */
		unsigned int EN24           : 1;	/* Access Enable for Master TAG ID n */
		unsigned int EN25           : 1;	/* Access Enable for Master TAG ID n */
		unsigned int EN26           : 1;	/* Access Enable for Master TAG ID n */
		unsigned int EN27           : 1;	/* Access Enable for Master TAG ID n */
		unsigned int EN28           : 1;	/* Access Enable for Master TAG ID n */
		unsigned int EN29           : 1;	/* Access Enable for Master TAG ID n */
		unsigned int EN30           : 1;	/* Access Enable for Master TAG ID n */
		unsigned int EN31           : 1;	/* Access Enable for Master TAG ID n */
	} B;
	int I;
	unsigned int U;

} P00_ACCEN0_type;
#define P00_ACCEN0	(*( P00_ACCEN0_type *) 0xf003a0fcu)	/* Port 00 Access Enable Register 0 */
#define P01_ACCEN0	(*( P00_ACCEN0_type *) 0xf003a1fcu)	/* Port 01 Access Enable Register 0 */
#define P02_ACCEN0	(*( P00_ACCEN0_type *) 0xf003a2fcu)	/* Port 02 Access Enable Register 0 */
#define P10_ACCEN0	(*( P00_ACCEN0_type *) 0xf003b0fcu)	/* Port 10 Access Enable Register 0 */
#define P11_ACCEN0	(*( P00_ACCEN0_type *) 0xf003b1fcu)	/* Port 11 Access Enable Register 0 */
#define P12_ACCEN0	(*( P00_ACCEN0_type *) 0xf003b2fcu)	/* Port 12 Access Enable Register 0 */
#define P13_ACCEN0	(*( P00_ACCEN0_type *) 0xf003b3fcu)	/* Port 13 Access Enable Register 0 */
#define P14_ACCEN0	(*( P00_ACCEN0_type *) 0xf003b4fcu)	/* Port 14 Access Enable Register 0 */
#define P15_ACCEN0	(*( P00_ACCEN0_type *) 0xf003b5fcu)	/* Port 15 Access Enable Register 0 */
#define P20_ACCEN0	(*( P00_ACCEN0_type *) 0xf003c0fcu)	/* Port 20 Access Enable Register 0 */
#define P21_ACCEN0	(*( P00_ACCEN0_type *) 0xf003c1fcu)	/* Port 21 Access Enable Register 0 */
#define P22_ACCEN0	(*( P00_ACCEN0_type *) 0xf003c2fcu)	/* Port 22 Access Enable Register 0 */
#define P23_ACCEN0	(*( P00_ACCEN0_type *) 0xf003c3fcu)	/* Port 23 Access Enable Register 0 */
#define P32_ACCEN0	(*( P00_ACCEN0_type *) 0xf003d2fcu)	/* Port 32 Access Enable Register 0 */
#define P33_ACCEN0	(*( P00_ACCEN0_type *) 0xf003d3fcu)	/* Port 33 Access Enable Register 0 */
#define P34_ACCEN0	(*( P00_ACCEN0_type *) 0xf003d4fcu)	/* Port 34 Access Enable Register 0 */
#define P40_ACCEN0	(*( P00_ACCEN0_type *) 0xf003e0fcu)	/* Port 40 Access Enable Register 0 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int Reserved       : 32;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} P00_ACCEN1_type;
#define P00_ACCEN1	(*( P00_ACCEN1_type *) 0xf003a0f8u)	/* Port 00 Access Enable Register 1 */

typedef volatile union
{
	struct
	{ 
		unsigned int EN0            : 1;	/* Emergency Stop Enable for Port n Pin 0 */
		unsigned int EN1            : 1;	/* Emergency Stop Enable for Port n Pin 1 */
		unsigned int EN2            : 1;	/* Emergency Stop Enable for Port n Pin 2 */
		unsigned int EN3            : 1;	/* Emergency Stop Enable for Port n Pin 3 */
		unsigned int EN4            : 1;	/* Emergency Stop Enable for Port n Pin 4 */
		unsigned int EN5            : 1;	/* Emergency Stop Enable for Port n Pin 5 */
		unsigned int EN6            : 1;	/* Emergency Stop Enable for Port n Pin 6 */
		unsigned int EN7            : 1;	/* Emergency Stop Enable for Port n Pin 7 */
		unsigned int EN8            : 1;	/* Emergency Stop Enable for Port n Pin 8 */
		unsigned int EN9            : 1;	/* Emergency Stop Enable for Port n Pin 9 */
		unsigned int EN10           : 1;	/* Emergency Stop Enable for Port n Pin 10 */
		unsigned int EN11           : 1;	/* Emergency Stop Enable for Port n Pin 11 */
		unsigned int EN12           : 1;	/* Emergency Stop Enable for Port n Pin 12 */
		unsigned int EN13           : 1;	/* Emergency Stop Enable for Port n Pin 13 */
		unsigned int EN14           : 1;	/* Emergency Stop Enable for Port n Pin 14 */
		unsigned int EN15           : 1;	/* Emergency Stop Enable for Port n Pin 15 */
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} P00_ESR_type;
#define P00_ESR	(*( P00_ESR_type *) 0xf003a050u)	/* Port 00 Emergency Stop Register */
#define P01_ESR	(*( P00_ESR_type *) 0xf003a150u)	/* Port 01 Emergency Stop Register */
#define P02_ESR	(*( P00_ESR_type *) 0xf003a250u)	/* Port 02 Emergency Stop Register */
#define P10_ESR	(*( P00_ESR_type *) 0xf003b050u)	/* Port 10 Emergency Stop Register */
#define P11_ESR	(*( P00_ESR_type *) 0xf003b150u)	/* Port 11 Emergency Stop Register */
#define P12_ESR	(*( P00_ESR_type *) 0xf003b250u)	/* Port 12 Emergency Stop Register */
#define P13_ESR	(*( P00_ESR_type *) 0xf003b350u)	/* Port 13 Emergency Stop Register */
#define P14_ESR	(*( P00_ESR_type *) 0xf003b450u)	/* Port 14 Emergency Stop Register */
#define P15_ESR	(*( P00_ESR_type *) 0xf003b550u)	/* Port 15 Emergency Stop Register */
#define P20_ESR	(*( P00_ESR_type *) 0xf003c050u)	/* Port 20 Emergency Stop Register */
#define P21_ESR	(*( P00_ESR_type *) 0xf003c150u)	/* Port 21 Emergency Stop Register */
#define P22_ESR	(*( P00_ESR_type *) 0xf003c250u)	/* Port 22 Emergency Stop Register */
#define P23_ESR	(*( P00_ESR_type *) 0xf003c350u)	/* Port 23 Emergency Stop Register */
#define P32_ESR	(*( P00_ESR_type *) 0xf003d250u)	/* Port 32 Emergency Stop Register */
#define P33_ESR	(*( P00_ESR_type *) 0xf003d350u)	/* Port 33 Emergency Stop Register */
#define P34_ESR	(*( P00_ESR_type *) 0xf003d450u)	/* Port 34 Emergency Stop Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int MODREV         : 8;	/* Module Revision Number */
		/* const */ unsigned int MODTYPE        : 8;	/* Module Type */
		/* const */ unsigned int MODNUMBER      : 16;	/* Module Number */
	} B;
	int I;
	unsigned int U;

} P00_ID_type;
#define P00_ID	(*( P00_ID_type *) 0xf003a008u)	/* Identification Register */
#define P01_ID	(*( P00_ID_type *) 0xf003a108u)	/* Identification Register */
#define P02_ID	(*( P00_ID_type *) 0xf003a208u)	/* Identification Register */
#define P10_ID	(*( P00_ID_type *) 0xf003b008u)	/* Identification Register */
#define P11_ID	(*( P00_ID_type *) 0xf003b108u)	/* Identification Register */
#define P12_ID	(*( P00_ID_type *) 0xf003b208u)	/* Identification Register */
#define P13_ID	(*( P00_ID_type *) 0xf003b308u)	/* Identification Register */
#define P14_ID	(*( P00_ID_type *) 0xf003b408u)	/* Identification Register */
#define P15_ID	(*( P00_ID_type *) 0xf003b508u)	/* Identification Register */
#define P20_ID	(*( P00_ID_type *) 0xf003c008u)	/* Identification Register */
#define P21_ID	(*( P00_ID_type *) 0xf003c108u)	/* Identification Register */
#define P22_ID	(*( P00_ID_type *) 0xf003c208u)	/* Identification Register */
#define P23_ID	(*( P00_ID_type *) 0xf003c308u)	/* Identification Register */
#define P32_ID	(*( P00_ID_type *) 0xf003d208u)	/* Identification Register */
#define P33_ID	(*( P00_ID_type *) 0xf003d308u)	/* Identification Register */
#define P34_ID	(*( P00_ID_type *) 0xf003d408u)	/* Identification Register */
#define P40_ID	(*( P00_ID_type *) 0xf003e008u)	/* Identification Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int P0             : 1;	/* Port n Input Bit 0 */
		/* const */ unsigned int P1             : 1;	/* Port n Input Bit 1 */
		/* const */ unsigned int P2             : 1;	/* Port n Input Bit 2 */
		/* const */ unsigned int P3             : 1;	/* Port n Input Bit 3 */
		/* const */ unsigned int P4             : 1;	/* Port n Input Bit 4 */
		/* const */ unsigned int P5             : 1;	/* Port n Input Bit 5 */
		/* const */ unsigned int P6             : 1;	/* Port n Input Bit 6 */
		/* const */ unsigned int P7             : 1;	/* Port n Input Bit 7 */
		/* const */ unsigned int P8             : 1;	/* Port n Input Bit 8 */
		/* const */ unsigned int P9             : 1;	/* Port n Input Bit 9 */
		/* const */ unsigned int P10            : 1;	/* Port n Input Bit 10 */
		/* const */ unsigned int P11            : 1;	/* Port n Input Bit 11 */
		/* const */ unsigned int P12            : 1;	/* Port n Input Bit 12 */
		/* const */ unsigned int P13            : 1;	/* Port n Input Bit 13 */
		/* const */ unsigned int P14            : 1;	/* Port n Input Bit 14 */
		/* const */ unsigned int P15            : 1;	/* Port n Input Bit 15 */
		/* const */ unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} P00_IN_type;
#define P00_IN	(*( P00_IN_type *) 0xf003a024u)	/* Port 00 Input Register */
#define P01_IN	(*( P00_IN_type *) 0xf003a124u)	/* Port 01 Input Register */
#define P02_IN	(*( P00_IN_type *) 0xf003a224u)	/* Port 02 Input Register */
#define P10_IN	(*( P00_IN_type *) 0xf003b024u)	/* Port 10 Input Register */
#define P11_IN	(*( P00_IN_type *) 0xf003b124u)	/* Port 11 Input Register */
#define P12_IN	(*( P00_IN_type *) 0xf003b224u)	/* Port 12 Input Register */
#define P13_IN	(*( P00_IN_type *) 0xf003b324u)	/* Port 13 Input Register */
#define P14_IN	(*( P00_IN_type *) 0xf003b424u)	/* Port 14 Input Register */
#define P15_IN	(*( P00_IN_type *) 0xf003b524u)	/* Port 15 Input Register */
#define P20_IN	(*( P00_IN_type *) 0xf003c024u)	/* Port 20 Input Register */
#define P21_IN	(*( P00_IN_type *) 0xf003c124u)	/* Port 21 Input Register */
#define P22_IN	(*( P00_IN_type *) 0xf003c224u)	/* Port 22 Input Register */
#define P23_IN	(*( P00_IN_type *) 0xf003c324u)	/* Port 23 Input Register */
#define P32_IN	(*( P00_IN_type *) 0xf003d224u)	/* Port 32 Input Register */
#define P33_IN	(*( P00_IN_type *) 0xf003d324u)	/* Port 33 Input Register */
#define P34_IN	(*( P00_IN_type *) 0xf003d424u)	/* Port 34 Input Register */
#define P40_IN	(*( P00_IN_type *) 0xf003e024u)	/* Port 40 Input Register */

typedef volatile union
{
	struct
	{ 
		unsigned int                : 3;
		unsigned int PC0            : 5;	/* Port Control for Port n Pin 0 to 3 */
		unsigned int                : 3;
		unsigned int PC1            : 5;	/* Port Control for Port n Pin 0 to 3 */
		unsigned int                : 3;
		unsigned int PC2            : 5;	/* Port Control for Port n Pin 0 to 3 */
		unsigned int                : 3;
		unsigned int PC3            : 5;	/* Port Control for Port n Pin 0 to 3 */
	} B;
	int I;
	unsigned int U;

} P00_IOCR0_type;
#define P00_IOCR0	(*( P00_IOCR0_type *) 0xf003a010u)	/* Port 00 Input/Output Control Register 0 */
#define P02_IOCR0	(*( P00_IOCR0_type *) 0xf003a210u)	/* Port 02 Input/Output Control Register 0 */
#define P10_IOCR0	(*( P00_IOCR0_type *) 0xf003b010u)	/* Port 10 Input/Output Control Register 0 */
#define P11_IOCR0	(*( P00_IOCR0_type *) 0xf003b110u)	/* Port 11 Input/Output Control Register 0 */
#define P13_IOCR0	(*( P00_IOCR0_type *) 0xf003b310u)	/* Port 13 Input/Output Control Register 0 */
#define P14_IOCR0	(*( P00_IOCR0_type *) 0xf003b410u)	/* Port 14 Input/Output Control Register 0 */
#define P15_IOCR0	(*( P00_IOCR0_type *) 0xf003b510u)	/* Port 15 Input/Output Control Register 0 */
#define P21_IOCR0	(*( P00_IOCR0_type *) 0xf003c110u)	/* Port 21 Input/Output Control Register 0 */
#define P22_IOCR0	(*( P00_IOCR0_type *) 0xf003c210u)	/* Port 22 Input/Output Control Register 0 */
#define P23_IOCR0	(*( P00_IOCR0_type *) 0xf003c310u)	/* Port 23 Input/Output Control Register 0 */
#define P33_IOCR0	(*( P00_IOCR0_type *) 0xf003d310u)	/* Port 33 Input/Output Control Register 0 */
#define P34_IOCR0	(*( P00_IOCR0_type *) 0xf003d410u)	/* Port 34 Input/Output Control Register 0 */

typedef volatile union
{
	struct
	{ 
		unsigned int                : 3;
		unsigned int PC12           : 5;	/* Port Control for Port 00.12 */
		unsigned int                : 3;
		unsigned int PC13           : 5;	/* Reserved */
		unsigned int                : 3;
		unsigned int PC14           : 5;	/* Reserved */
		unsigned int                : 3;
		unsigned int PC15           : 5;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} P00_IOCR12_type;
#define P00_IOCR12	(*( P00_IOCR12_type *) 0xf003a01cu)	/* Port 00 Input/Output Control Register 12 */

typedef volatile union
{
	struct
	{ 
		unsigned int                : 3;
		unsigned int PC4            : 5;	/* Port Control for Port n Pin 4 to 7 */
		unsigned int                : 3;
		unsigned int PC5            : 5;	/* Port Control for Port n Pin 4 to 7 */
		unsigned int                : 3;
		unsigned int PC6            : 5;	/* Port Control for Port n Pin 4 to 7 */
		unsigned int                : 3;
		unsigned int PC7            : 5;	/* Port Control for Port n Pin 4 to 7 */
	} B;
	int I;
	unsigned int U;

} P00_IOCR4_type;
#define P00_IOCR4	(*( P00_IOCR4_type *) 0xf003a014u)	/* Port 00 Input/Output Control Register 4 */
#define P01_IOCR4	(*( P00_IOCR4_type *) 0xf003a114u)	/* Port 01 Input/Output Control Register 4 */
#define P02_IOCR4	(*( P00_IOCR4_type *) 0xf003a214u)	/* Port 02 Input/Output Control Register 4 */
#define P10_IOCR4	(*( P00_IOCR4_type *) 0xf003b014u)	/* Port 10 Input/Output Control Register 4 */
#define P11_IOCR4	(*( P00_IOCR4_type *) 0xf003b114u)	/* Port 11 Input/Output Control Register 4 */
#define P14_IOCR4	(*( P00_IOCR4_type *) 0xf003b414u)	/* Port 14 Input/Output Control Register 4 */
#define P15_IOCR4	(*( P00_IOCR4_type *) 0xf003b514u)	/* Port 15 Input/Output Control Register 4 */
#define P21_IOCR4	(*( P00_IOCR4_type *) 0xf003c114u)	/* Port 21 Input/Output Control Register 4 */
#define P22_IOCR4	(*( P00_IOCR4_type *) 0xf003c214u)	/* Port 22 Input/Output Control Register 4 */
#define P23_IOCR4	(*( P00_IOCR4_type *) 0xf003c314u)	/* Port 23 Input/Output Control Register 4 */
#define P32_IOCR4	(*( P00_IOCR4_type *) 0xf003d214u)	/* Port 32 Input/Output Control Register 4 */
#define P33_IOCR4	(*( P00_IOCR4_type *) 0xf003d314u)	/* Port 33 Input/Output Control Register 4 */

typedef volatile union
{
	struct
	{ 
		unsigned int                : 3;
		unsigned int PC8            : 5;	/* Port Control for Port n Pin 8 to 11 */
		unsigned int                : 3;
		unsigned int PC9            : 5;	/* Port Control for Port n Pin 8 to 11 */
		unsigned int                : 3;
		unsigned int PC10           : 5;	/* Port Control for Port n Pin 8 to 11 */
		unsigned int                : 3;
		unsigned int PC11           : 5;	/* Port Control for Port n Pin 8 to 11 */
	} B;
	int I;
	unsigned int U;

} P00_IOCR8_type;
#define P00_IOCR8	(*( P00_IOCR8_type *) 0xf003a018u)	/* Port 00 Input/Output Control Register 8 */
#define P02_IOCR8	(*( P00_IOCR8_type *) 0xf003a218u)	/* Port 02 Input/Output Control Register 8 */
#define P11_IOCR8	(*( P00_IOCR8_type *) 0xf003b118u)	/* Port 11 Input/Output Control Register 8 */
#define P20_IOCR8	(*( P00_IOCR8_type *) 0xf003c018u)	/* Port 20 Input/Output Control Register 8 */
#define P22_IOCR8	(*( P00_IOCR8_type *) 0xf003c218u)	/* Port 22 Input/Output Control Register 8 */
#define P33_IOCR8	(*( P00_IOCR8_type *) 0xf003d318u)	/* Port 33 Input/Output Control Register 8 */

typedef volatile union
{
	struct
	{ 
		unsigned int                : 16;
		unsigned int PCL0           : 1;	/* Port n Clear Bit 0 */
		unsigned int PCL1           : 1;	/* Port n Clear Bit 1 */
		unsigned int PCL2           : 1;	/* Port n Clear Bit 2 */
		unsigned int PCL3           : 1;	/* Port n Clear Bit 3 */
		unsigned int PCL4           : 1;	/* Port n Clear Bit 4 */
		unsigned int PCL5           : 1;	/* Port n Clear Bit 5 */
		unsigned int PCL6           : 1;	/* Port n Clear Bit 6 */
		unsigned int PCL7           : 1;	/* Port n Clear Bit 7 */
		unsigned int PCL8           : 1;	/* Port n Clear Bit 8 */
		unsigned int PCL9           : 1;	/* Port n Clear Bit 9 */
		unsigned int PCL10          : 1;	/* Port n Clear Bit 10 */
		unsigned int PCL11          : 1;	/* Port n Clear Bit 11 */
		unsigned int PCL12          : 1;	/* Port n Clear Bit 12 */
		unsigned int PCL13          : 1;	/* Port n Clear Bit 13 */
		unsigned int PCL14          : 1;	/* Port n Clear Bit 14 */
		unsigned int PCL15          : 1;	/* Port n Clear Bit 15 */
	} B;
	int I;
	unsigned int U;

} P00_OMCR_type;
#define P00_OMCR	(*( P00_OMCR_type *) 0xf003a094u)	/* Port 00 Output Modification Clear Register */
#define P01_OMCR	(*( P00_OMCR_type *) 0xf003a194u)	/* Port 01 Output Modification Clear Register */
#define P02_OMCR	(*( P00_OMCR_type *) 0xf003a294u)	/* Port 02 Output Modification Clear Register */
#define P10_OMCR	(*( P00_OMCR_type *) 0xf003b094u)	/* Port 10 Output Modification Clear Register */
#define P11_OMCR	(*( P00_OMCR_type *) 0xf003b194u)	/* Port 11 Output Modification Clear Register */
#define P12_OMCR	(*( P00_OMCR_type *) 0xf003b294u)	/* Port 12 Output Modification Clear Register */
#define P13_OMCR	(*( P00_OMCR_type *) 0xf003b394u)	/* Port 13 Output Modification Clear Register */
#define P14_OMCR	(*( P00_OMCR_type *) 0xf003b494u)	/* Port 14 Output Modification Clear Register */
#define P15_OMCR	(*( P00_OMCR_type *) 0xf003b594u)	/* Port 15 Output Modification Clear Register */
#define P20_OMCR	(*( P00_OMCR_type *) 0xf003c094u)	/* Port 20 Output Modification Clear Register */
#define P21_OMCR	(*( P00_OMCR_type *) 0xf003c194u)	/* Port 21 Output Modification Clear Register */
#define P22_OMCR	(*( P00_OMCR_type *) 0xf003c294u)	/* Port 22 Output Modification Clear Register */
#define P23_OMCR	(*( P00_OMCR_type *) 0xf003c394u)	/* Port 23 Output Modification Clear Register */
#define P32_OMCR	(*( P00_OMCR_type *) 0xf003d294u)	/* Port 32 Output Modification Clear Register */
#define P33_OMCR	(*( P00_OMCR_type *) 0xf003d394u)	/* Port 33 Output Modification Clear Register */
#define P34_OMCR	(*( P00_OMCR_type *) 0xf003d494u)	/* Port 34 Output Modification Clear Register */

typedef volatile union
{
	struct
	{ 
		unsigned int                : 16;
		unsigned int PCL0           : 1;	/* Port n Clear Bit 0 */
		unsigned int PCL1           : 1;	/* Port n Clear Bit 1 */
		unsigned int PCL2           : 1;	/* Port n Clear Bit 2 */
		unsigned int PCL3           : 1;	/* Port n Clear Bit 3 */
		unsigned int                : 12;
	} B;
	int I;
	unsigned int U;

} P00_OMCR0_type;
#define P00_OMCR0	(*( P00_OMCR0_type *) 0xf003a080u)	/* Port 00 Output Modification Clear Register 0 */
#define P01_OMCR0	(*( P00_OMCR0_type *) 0xf003a180u)	/* Port 01 Output Modification Clear Register 0 */
#define P02_OMCR0	(*( P00_OMCR0_type *) 0xf003a280u)	/* Port 02 Output Modification Clear Register 0 */
#define P10_OMCR0	(*( P00_OMCR0_type *) 0xf003b080u)	/* Port 10 Output Modification Clear Register 0 */
#define P11_OMCR0	(*( P00_OMCR0_type *) 0xf003b180u)	/* Port 11 Output Modification Clear Register 0 */
#define P12_OMCR0	(*( P00_OMCR0_type *) 0xf003b280u)	/* Port 12 Output Modification Clear Register 0 */
#define P13_OMCR0	(*( P00_OMCR0_type *) 0xf003b380u)	/* Port 13 Output Modification Clear Register 0 */
#define P14_OMCR0	(*( P00_OMCR0_type *) 0xf003b480u)	/* Port 14 Output Modification Clear Register 0 */
#define P15_OMCR0	(*( P00_OMCR0_type *) 0xf003b580u)	/* Port 15 Output Modification Clear Register 0 */
#define P20_OMCR0	(*( P00_OMCR0_type *) 0xf003c080u)	/* Port 20 Output Modification Clear Register 0 */
#define P21_OMCR0	(*( P00_OMCR0_type *) 0xf003c180u)	/* Port 21 Output Modification Clear Register 0 */
#define P22_OMCR0	(*( P00_OMCR0_type *) 0xf003c280u)	/* Port 22 Output Modification Clear Register 0 */
#define P23_OMCR0	(*( P00_OMCR0_type *) 0xf003c380u)	/* Port 23 Output Modification Clear Register 0 */
#define P32_OMCR0	(*( P00_OMCR0_type *) 0xf003d280u)	/* Port 32 Output Modification Clear Register 0 */
#define P33_OMCR0	(*( P00_OMCR0_type *) 0xf003d380u)	/* Port 33 Output Modification Clear Register 0 */
#define P34_OMCR0	(*( P00_OMCR0_type *) 0xf003d480u)	/* Port 34 Output Modification Clear Register 0 */

typedef volatile union
{
	struct
	{ 
		unsigned int                : 28;
		unsigned int PCL12          : 1;	/* Port n Clear Bit 12 */
		unsigned int PCL13          : 1;	/* Port n Clear Bit 13 */
		unsigned int PCL14          : 1;	/* Port n Clear Bit 14 */
		unsigned int PCL15          : 1;	/* Port n Clear Bit 15 */
	} B;
	int I;
	unsigned int U;

} P00_OMCR12_type;
#define P00_OMCR12	(*( P00_OMCR12_type *) 0xf003a08cu)	/* Port 00 Output Modification Clear Register 12 */
#define P11_OMCR12	(*( P00_OMCR12_type *) 0xf003b18cu)	/* Port 11 Output Modification Clear Register 12 */
#define P20_OMCR12	(*( P00_OMCR12_type *) 0xf003c08cu)	/* Port 20 Output Modification Clear Register 12 */
#define P33_OMCR12	(*( P00_OMCR12_type *) 0xf003d38cu)	/* Port 33 Output Modification Clear Register 12 */

typedef volatile union
{
	struct
	{ 
		unsigned int                : 20;
		unsigned int PCL4           : 1;	/* Port n Clear Bit 4 */
		unsigned int PCL5           : 1;	/* Port n Clear Bit 5 */
		unsigned int PCL6           : 1;	/* Port n Clear Bit 6 */
		unsigned int PCL7           : 1;	/* Port n Clear Bit 7 */
		unsigned int                : 8;
	} B;
	int I;
	unsigned int U;

} P00_OMCR4_type;
#define P00_OMCR4	(*( P00_OMCR4_type *) 0xf003a084u)	/* Port 00 Output Modification Clear Register 4 */
#define P01_OMCR4	(*( P00_OMCR4_type *) 0xf003a184u)	/* Port 01 Output Modification Clear Register 4 */
#define P02_OMCR4	(*( P00_OMCR4_type *) 0xf003a284u)	/* Port 02 Output Modification Clear Register 4 */
#define P10_OMCR4	(*( P00_OMCR4_type *) 0xf003b084u)	/* Port 10 Output Modification Clear Register 4 */
#define P11_OMCR4	(*( P00_OMCR4_type *) 0xf003b184u)	/* Port 11 Output Modification Clear Register 4 */
#define P14_OMCR4	(*( P00_OMCR4_type *) 0xf003b484u)	/* Port 14 Output Modification Clear Register 4 */
#define P15_OMCR4	(*( P00_OMCR4_type *) 0xf003b584u)	/* Port 15 Output Modification Clear Register 4 */
#define P20_OMCR4	(*( P00_OMCR4_type *) 0xf003c084u)	/* Port 20 Output Modification Clear Register 4 */
#define P21_OMCR4	(*( P00_OMCR4_type *) 0xf003c184u)	/* Port 21 Output Modification Clear Register 4 */
#define P22_OMCR4	(*( P00_OMCR4_type *) 0xf003c284u)	/* Port 22 Output Modification Clear Register 4 */
#define P23_OMCR4	(*( P00_OMCR4_type *) 0xf003c384u)	/* Port 23 Output Modification Clear Register 4 */
#define P32_OMCR4	(*( P00_OMCR4_type *) 0xf003d284u)	/* Port 32 Output Modification Clear Register 4 */
#define P33_OMCR4	(*( P00_OMCR4_type *) 0xf003d384u)	/* Port 33 Output Modification Clear Register 4 */
#define P34_OMCR4	(*( P00_OMCR4_type *) 0xf003d484u)	/* Port 34 Output Modification Clear Register 4 */

typedef volatile union
{
	struct
	{ 
		unsigned int                : 24;
		unsigned int PCL8           : 1;	/* Port n Clear Bit 8 */
		unsigned int PCL9           : 1;	/* Port n Clear Bit 9 */
		unsigned int PCL10          : 1;	/* Port n Clear Bit 10 */
		unsigned int PCL11          : 1;	/* Port n Clear Bit 11 */
		unsigned int                : 4;
	} B;
	int I;
	unsigned int U;

} P00_OMCR8_type;
#define P00_OMCR8	(*( P00_OMCR8_type *) 0xf003a088u)	/* Port 00 Output Modification Clear Register 8 */
#define P02_OMCR8	(*( P00_OMCR8_type *) 0xf003a288u)	/* Port 02 Output Modification Clear Register 8 */
#define P10_OMCR8	(*( P00_OMCR8_type *) 0xf003b088u)	/* Port 10 Output Modification Clear Register 8 */
#define P11_OMCR8	(*( P00_OMCR8_type *) 0xf003b188u)	/* Port 11 Output Modification Clear Register 8 */
#define P14_OMCR8	(*( P00_OMCR8_type *) 0xf003b488u)	/* Port 14 Output Modification Clear Register 8 */
#define P15_OMCR8	(*( P00_OMCR8_type *) 0xf003b588u)	/* Port 15 Output Modification Clear Register 8 */
#define P20_OMCR8	(*( P00_OMCR8_type *) 0xf003c088u)	/* Port 20 Output Modification Clear Register 8 */
#define P22_OMCR8	(*( P00_OMCR8_type *) 0xf003c288u)	/* Port 22 Output Modification Clear Register 8 */
#define P33_OMCR8	(*( P00_OMCR8_type *) 0xf003d388u)	/* Port 33 Output Modification Clear Register 8 */

typedef volatile union
{
	struct
	{ 
		unsigned int PS0            : 1;	/* Port n Set Bit 0 */
		unsigned int PS1            : 1;	/* Port n Set Bit 1 */
		unsigned int PS2            : 1;	/* Port n Set Bit 2 */
		unsigned int PS3            : 1;	/* Port n Set Bit 3 */
		unsigned int PS4            : 1;	/* Port n Set Bit 4 */
		unsigned int PS5            : 1;	/* Port n Set Bit 5 */
		unsigned int PS6            : 1;	/* Port n Set Bit 6 */
		unsigned int PS7            : 1;	/* Port n Set Bit 7 */
		unsigned int PS8            : 1;	/* Port n Set Bit 8 */
		unsigned int PS9            : 1;	/* Port n Set Bit 9 */
		unsigned int PS10           : 1;	/* Port n Set Bit 10 */
		unsigned int PS11           : 1;	/* Port n Set Bit 11 */
		unsigned int PS12           : 1;	/* Port n Set Bit 12 */
		unsigned int PS13           : 1;	/* Port n Set Bit 13 */
		unsigned int PS14           : 1;	/* Port n Set Bit 14 */
		unsigned int PS15           : 1;	/* Port n Set Bit 15 */
		unsigned int PCL0           : 1;	/* Port n Clear Bit 0 */
		unsigned int PCL1           : 1;	/* Port n Clear Bit 1 */
		unsigned int PCL2           : 1;	/* Port n Clear Bit 2 */
		unsigned int PCL3           : 1;	/* Port n Clear Bit 3 */
		unsigned int PCL4           : 1;	/* Port n Clear Bit 4 */
		unsigned int PCL5           : 1;	/* Port n Clear Bit 5 */
		unsigned int PCL6           : 1;	/* Port n Clear Bit 6 */
		unsigned int PCL7           : 1;	/* Port n Clear Bit 7 */
		unsigned int PCL8           : 1;	/* Port n Clear Bit 8 */
		unsigned int PCL9           : 1;	/* Port n Clear Bit 9 */
		unsigned int PCL10          : 1;	/* Port n Clear Bit 10 */
		unsigned int PCL11          : 1;	/* Port n Clear Bit 11 */
		unsigned int PCL12          : 1;	/* Port n Clear Bit 12 */
		unsigned int PCL13          : 1;	/* Port n Clear Bit 13 */
		unsigned int PCL14          : 1;	/* Port n Clear Bit 14 */
		unsigned int PCL15          : 1;	/* Port n Clear Bit 15 */
	} B;
	int I;
	unsigned int U;

} P00_OMR_type;
#define P00_OMR	(*( P00_OMR_type *) 0xf003a004u)	/* Port 00 Output Modification Register */
#define P01_OMR	(*( P00_OMR_type *) 0xf003a104u)	/* Port 01 Output Modification Register */
#define P02_OMR	(*( P00_OMR_type *) 0xf003a204u)	/* Port 02 Output Modification Register */
#define P10_OMR	(*( P00_OMR_type *) 0xf003b004u)	/* Port 10 Output Modification Register */
#define P11_OMR	(*( P00_OMR_type *) 0xf003b104u)	/* Port 11 Output Modification Register */
#define P12_OMR	(*( P00_OMR_type *) 0xf003b204u)	/* Port 12 Output Modification Register */
#define P13_OMR	(*( P00_OMR_type *) 0xf003b304u)	/* Port 13 Output Modification Register */
#define P14_OMR	(*( P00_OMR_type *) 0xf003b404u)	/* Port 14 Output Modification Register */
#define P15_OMR	(*( P00_OMR_type *) 0xf003b504u)	/* Port 15 Output Modification Register */
#define P20_OMR	(*( P00_OMR_type *) 0xf003c004u)	/* Port 20 Output Modification Register */
#define P21_OMR	(*( P00_OMR_type *) 0xf003c104u)	/* Port 21 Output Modification Register */
#define P22_OMR	(*( P00_OMR_type *) 0xf003c204u)	/* Port 22 Output Modification Register */
#define P23_OMR	(*( P00_OMR_type *) 0xf003c304u)	/* Port 23 Output Modification Register */
#define P32_OMR	(*( P00_OMR_type *) 0xf003d204u)	/* Port 32 Output Modification Register */
#define P33_OMR	(*( P00_OMR_type *) 0xf003d304u)	/* Port 33 Output Modification Register */
#define P34_OMR	(*( P00_OMR_type *) 0xf003d404u)	/* Port 34 Output Modification Register */

typedef volatile union
{
	struct
	{ 
		unsigned int PS0            : 1;	/* Port n Set Bit 0 */
		unsigned int PS1            : 1;	/* Port n Set Bit 1 */
		unsigned int PS2            : 1;	/* Port n Set Bit 2 */
		unsigned int PS3            : 1;	/* Port n Set Bit 3 */
		unsigned int PS4            : 1;	/* Port n Set Bit 4 */
		unsigned int PS5            : 1;	/* Port n Set Bit 5 */
		unsigned int PS6            : 1;	/* Port n Set Bit 6 */
		unsigned int PS7            : 1;	/* Port n Set Bit 7 */
		unsigned int PS8            : 1;	/* Port n Set Bit 8 */
		unsigned int PS9            : 1;	/* Port n Set Bit 9 */
		unsigned int PS10           : 1;	/* Port n Set Bit 10 */
		unsigned int PS11           : 1;	/* Port n Set Bit 11 */
		unsigned int PS12           : 1;	/* Port n Set Bit 12 */
		unsigned int PS13           : 1;	/* Port n Set Bit 13 */
		unsigned int PS14           : 1;	/* Port n Set Bit 14 */
		unsigned int PS15           : 1;	/* Port n Set Bit 15 */
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} P00_OMSR_type;
#define P00_OMSR	(*( P00_OMSR_type *) 0xf003a090u)	/* Port 00 Output Modification Set Register */
#define P01_OMSR	(*( P00_OMSR_type *) 0xf003a190u)	/* Port 01 Output Modification Set Register */
#define P02_OMSR	(*( P00_OMSR_type *) 0xf003a290u)	/* Port 02 Output Modification Set Register */
#define P10_OMSR	(*( P00_OMSR_type *) 0xf003b090u)	/* Port 10 Output Modification Set Register */
#define P11_OMSR	(*( P00_OMSR_type *) 0xf003b190u)	/* Port 11 Output Modification Set Register */
#define P12_OMSR	(*( P00_OMSR_type *) 0xf003b290u)	/* Port 12 Output Modification Set Register */
#define P13_OMSR	(*( P00_OMSR_type *) 0xf003b390u)	/* Port 13 Output Modification Set Register */
#define P14_OMSR	(*( P00_OMSR_type *) 0xf003b490u)	/* Port 14 Output Modification Set Register */
#define P15_OMSR	(*( P00_OMSR_type *) 0xf003b590u)	/* Port 15 Output Modification Set Register */
#define P20_OMSR	(*( P00_OMSR_type *) 0xf003c090u)	/* Port 20 Output Modification Set Register */
#define P21_OMSR	(*( P00_OMSR_type *) 0xf003c190u)	/* Port 21 Output Modification Set Register */
#define P22_OMSR	(*( P00_OMSR_type *) 0xf003c290u)	/* Port 22 Output Modification Set Register */
#define P23_OMSR	(*( P00_OMSR_type *) 0xf003c390u)	/* Port 23 Output Modification Set Register */
#define P32_OMSR	(*( P00_OMSR_type *) 0xf003d290u)	/* Port 32 Output Modification Set Register */
#define P33_OMSR	(*( P00_OMSR_type *) 0xf003d390u)	/* Port 33 Output Modification Set Register */
#define P34_OMSR	(*( P00_OMSR_type *) 0xf003d490u)	/* Port 34 Output Modification Set Register */

typedef volatile union
{
	struct
	{ 
		unsigned int PS0            : 1;	/* Port n Set Bit 0 */
		unsigned int PS1            : 1;	/* Port n Set Bit 1 */
		unsigned int PS2            : 1;	/* Port n Set Bit 2 */
		unsigned int PS3            : 1;	/* Port n Set Bit 3 */
		unsigned int                : 28;
	} B;
	int I;
	unsigned int U;

} P00_OMSR0_type;
#define P00_OMSR0	(*( P00_OMSR0_type *) 0xf003a070u)	/* Port 00 Output Modification Set Register 0 */
#define P01_OMSR0	(*( P00_OMSR0_type *) 0xf003a170u)	/* Port 01 Output Modification Set Register 0 */
#define P02_OMSR0	(*( P00_OMSR0_type *) 0xf003a270u)	/* Port 02 Output Modification Set Register 0 */
#define P10_OMSR0	(*( P00_OMSR0_type *) 0xf003b070u)	/* Port 10 Output Modification Set Register 0 */
#define P11_OMSR0	(*( P00_OMSR0_type *) 0xf003b170u)	/* Port 11 Output Modification Set Register 0 */
#define P12_OMSR0	(*( P00_OMSR0_type *) 0xf003b270u)	/* Port 12 Output Modification Set Register 0 */
#define P13_OMSR0	(*( P00_OMSR0_type *) 0xf003b370u)	/* Port 13 Output Modification Set Register 0 */
#define P14_OMSR0	(*( P00_OMSR0_type *) 0xf003b470u)	/* Port 14 Output Modification Set Register 0 */
#define P15_OMSR0	(*( P00_OMSR0_type *) 0xf003b570u)	/* Port 15 Output Modification Set Register 0 */
#define P20_OMSR0	(*( P00_OMSR0_type *) 0xf003c070u)	/* Port 20 Output Modification Set Register 0 */
#define P21_OMSR0	(*( P00_OMSR0_type *) 0xf003c170u)	/* Port 21 Output Modification Set Register 0 */
#define P22_OMSR0	(*( P00_OMSR0_type *) 0xf003c270u)	/* Port 22 Output Modification Set Register 0 */
#define P23_OMSR0	(*( P00_OMSR0_type *) 0xf003c370u)	/* Port 23 Output Modification Set Register 0 */
#define P32_OMSR0	(*( P00_OMSR0_type *) 0xf003d270u)	/* Port 32 Output Modification Set Register 0 */
#define P33_OMSR0	(*( P00_OMSR0_type *) 0xf003d370u)	/* Port 33 Output Modification Set Register 0 */
#define P34_OMSR0	(*( P00_OMSR0_type *) 0xf003d470u)	/* Port 34 Output Modification Set Register 0 */

typedef volatile union
{
	struct
	{ 
		unsigned int                : 12;
		unsigned int PS12           : 1;	/* Port n Set Bit 12 */
		unsigned int PS13           : 1;	/* Port n Set Bit 13 */
		unsigned int PS14           : 1;	/* Port n Set Bit 14 */
		unsigned int PS15           : 1;	/* Port n Set Bit 15 */
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} P00_OMSR12_type;
#define P00_OMSR12	(*( P00_OMSR12_type *) 0xf003a07cu)	/* Port 00 Output Modification Set Register 12 */
#define P11_OMSR12	(*( P00_OMSR12_type *) 0xf003b17cu)	/* Port 11 Output Modification Set Register 12 */
#define P20_OMSR12	(*( P00_OMSR12_type *) 0xf003c07cu)	/* Port 20 Output Modification Set Register 12 */
#define P33_OMSR12	(*( P00_OMSR12_type *) 0xf003d37cu)	/* Port 33 Output Modification Set Register 12 */

typedef volatile union
{
	struct
	{ 
		unsigned int                : 4;
		unsigned int PS4            : 1;	/* Port n Set Bit 4 */
		unsigned int PS5            : 1;	/* Port n Set Bit 5 */
		unsigned int PS6            : 1;	/* Port n Set Bit 6 */
		unsigned int PS7            : 1;	/* Port n Set Bit 7 */
		unsigned int                : 24;
	} B;
	int I;
	unsigned int U;

} P00_OMSR4_type;
#define P00_OMSR4	(*( P00_OMSR4_type *) 0xf003a074u)	/* Port 00 Output Modification Set Register 4 */
#define P01_OMSR4	(*( P00_OMSR4_type *) 0xf003a174u)	/* Port 01 Output Modification Set Register 4 */
#define P02_OMSR4	(*( P00_OMSR4_type *) 0xf003a274u)	/* Port 02 Output Modification Set Register 4 */
#define P10_OMSR4	(*( P00_OMSR4_type *) 0xf003b074u)	/* Port 10 Output Modification Set Register 4 */
#define P11_OMSR4	(*( P00_OMSR4_type *) 0xf003b174u)	/* Port 11 Output Modification Set Register 4 */
#define P14_OMSR4	(*( P00_OMSR4_type *) 0xf003b474u)	/* Port 14 Output Modification Set Register 4 */
#define P15_OMSR4	(*( P00_OMSR4_type *) 0xf003b574u)	/* Port 15 Output Modification Set Register 4 */
#define P20_OMSR4	(*( P00_OMSR4_type *) 0xf003c074u)	/* Port 20 Output Modification Set Register 4 */
#define P21_OMSR4	(*( P00_OMSR4_type *) 0xf003c174u)	/* Port 21 Output Modification Set Register 4 */
#define P22_OMSR4	(*( P00_OMSR4_type *) 0xf003c274u)	/* Port 22 Output Modification Set Register 4 */
#define P23_OMSR4	(*( P00_OMSR4_type *) 0xf003c374u)	/* Port 23 Output Modification Set Register 4 */
#define P32_OMSR4	(*( P00_OMSR4_type *) 0xf003d274u)	/* Port 32 Output Modification Set Register 4 */
#define P33_OMSR4	(*( P00_OMSR4_type *) 0xf003d374u)	/* Port 33 Output Modification Set Register 4 */
#define P34_OMSR4	(*( P00_OMSR4_type *) 0xf003d474u)	/* Port 34 Output Modification Set Register 4 */

typedef volatile union
{
	struct
	{ 
		unsigned int                : 8;
		unsigned int PS8            : 1;	/* Port n Set Bit 8 */
		unsigned int PS9            : 1;	/* Port n Set Bit 9 */
		unsigned int PS10           : 1;	/* Port n Set Bit 10 */
		unsigned int PS11           : 1;	/* Port n Set Bit 11 */
		unsigned int                : 20;
	} B;
	int I;
	unsigned int U;

} P00_OMSR8_type;
#define P00_OMSR8	(*( P00_OMSR8_type *) 0xf003a078u)	/* Port 00 Output Modification Set Register 8 */
#define P02_OMSR8	(*( P00_OMSR8_type *) 0xf003a278u)	/* Port 02 Output Modification Set Register 8 */
#define P10_OMSR8	(*( P00_OMSR8_type *) 0xf003b078u)	/* Port 10 Output Modification Set Register 8 */
#define P11_OMSR8	(*( P00_OMSR8_type *) 0xf003b178u)	/* Port 11 Output Modification Set Register 8 */
#define P14_OMSR8	(*( P00_OMSR8_type *) 0xf003b478u)	/* Port 14 Output Modification Set Register 8 */
#define P15_OMSR8	(*( P00_OMSR8_type *) 0xf003b578u)	/* Port 15 Output Modification Set Register 8 */
#define P20_OMSR8	(*( P00_OMSR8_type *) 0xf003c078u)	/* Port 20 Output Modification Set Register 8 */
#define P22_OMSR8	(*( P00_OMSR8_type *) 0xf003c278u)	/* Port 22 Output Modification Set Register 8 */
#define P33_OMSR8	(*( P00_OMSR8_type *) 0xf003d378u)	/* Port 33 Output Modification Set Register 8 */

typedef volatile union
{
	struct
	{ 
		unsigned int P0             : 1;	/* Port n Output Bit 0 */
		unsigned int P1             : 1;	/* Port n Output Bit 1 */
		unsigned int P2             : 1;	/* Port n Output Bit 2 */
		unsigned int P3             : 1;	/* Port n Output Bit 3 */
		unsigned int P4             : 1;	/* Port n Output Bit 4 */
		unsigned int P5             : 1;	/* Port n Output Bit 5 */
		unsigned int P6             : 1;	/* Port n Output Bit 6 */
		unsigned int P7             : 1;	/* Port n Output Bit 7 */
		unsigned int P8             : 1;	/* Port n Output Bit 8 */
		unsigned int P9             : 1;	/* Port n Output Bit 9 */
		unsigned int P10            : 1;	/* Port n Output Bit 10 */
		unsigned int P11            : 1;	/* Port n Output Bit 11 */
		unsigned int P12            : 1;	/* Port n Output Bit 12 */
		unsigned int P13            : 1;	/* Port n Output Bit 13 */
		unsigned int P14            : 1;	/* Port n Output Bit 14 */
		unsigned int P15            : 1;	/* Port n Output Bit 15 */
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} P00_OUT_type;
#define P00_OUT	(*( P00_OUT_type *) 0xf003a000u)	/* Port 00 Output Register */
#define P01_OUT	(*( P00_OUT_type *) 0xf003a100u)	/* Port 01 Output Register */
#define P02_OUT	(*( P00_OUT_type *) 0xf003a200u)	/* Port 02 Output Register */
#define P10_OUT	(*( P00_OUT_type *) 0xf003b000u)	/* Port 10 Output Register */
#define P11_OUT	(*( P00_OUT_type *) 0xf003b100u)	/* Port 11 Output Register */
#define P12_OUT	(*( P00_OUT_type *) 0xf003b200u)	/* Port 12 Output Register */
#define P13_OUT	(*( P00_OUT_type *) 0xf003b300u)	/* Port 13 Output Register */
#define P14_OUT	(*( P00_OUT_type *) 0xf003b400u)	/* Port 14 Output Register */
#define P15_OUT	(*( P00_OUT_type *) 0xf003b500u)	/* Port 15 Output Register */
#define P20_OUT	(*( P00_OUT_type *) 0xf003c000u)	/* Port 20 Output Register */
#define P21_OUT	(*( P00_OUT_type *) 0xf003c100u)	/* Port 21 Output Register */
#define P22_OUT	(*( P00_OUT_type *) 0xf003c200u)	/* Port 22 Output Register */
#define P23_OUT	(*( P00_OUT_type *) 0xf003c300u)	/* Port 23 Output Register */
#define P32_OUT	(*( P00_OUT_type *) 0xf003d200u)	/* Port 32 Output Register */
#define P33_OUT	(*( P00_OUT_type *) 0xf003d300u)	/* Port 33 Output Register */
#define P34_OUT	(*( P00_OUT_type *) 0xf003d400u)	/* Port 34 Output Register */

typedef volatile union
{
	struct
	{ 
		unsigned int                : 4;
		unsigned int SEL4           : 1;	/* Pin Controller Select for Pin 4 */
		unsigned int SEL5           : 1;	/* Pin Controller Select for Pin 5 */
		unsigned int                : 4;
		unsigned int SEL10          : 1;	/* Pin Controller Select for Pin 10 */
		unsigned int SEL11          : 1;	/* Pin Controller Select for Pin 11 */
		unsigned int                : 19;
		/* const */ unsigned int LCK            : 1;	/* Lock Status */
	} B;
	int I;
	unsigned int U;

} P00_PCSR_type;
#define P00_PCSR	(*( P00_PCSR_type *) 0xf003a064u)	/* Port 00 Pin Controller Select Register */

typedef volatile union
{
	struct
	{ 
		unsigned int PD0            : 3;	/* Pad Driver Mode for Port n Pin 0 to 7 */
		unsigned int PL0            : 1;	/* Pad Level Selection for Port n Pin 0 to 7 */
		unsigned int PD1            : 3;	/* Pad Driver Mode for Port n Pin 0 to 7 */
		unsigned int PL1            : 1;	/* Pad Level Selection for Port n Pin 0 to 7 */
		unsigned int PD2            : 3;	/* Pad Driver Mode for Port n Pin 0 to 7 */
		unsigned int PL2            : 1;	/* Pad Level Selection for Port n Pin 0 to 7 */
		unsigned int PD3            : 3;	/* Pad Driver Mode for Port n Pin 0 to 7 */
		unsigned int PL3            : 1;	/* Pad Level Selection for Port n Pin 0 to 7 */
		unsigned int PD4            : 3;	/* Pad Driver Mode for Port n Pin 0 to 7 */
		unsigned int PL4            : 1;	/* Pad Level Selection for Port n Pin 0 to 7 */
		unsigned int PD5            : 3;	/* Pad Driver Mode for Port n Pin 0 to 7 */
		unsigned int PL5            : 1;	/* Pad Level Selection for Port n Pin 0 to 7 */
		unsigned int PD6            : 3;	/* Pad Driver Mode for Port n Pin 0 to 7 */
		unsigned int PL6            : 1;	/* Pad Level Selection for Port n Pin 0 to 7 */
		unsigned int PD7            : 3;	/* Pad Driver Mode for Port n Pin 0 to 7 */
		unsigned int PL7            : 1;	/* Pad Level Selection for Port n Pin 0 to 7 */
	} B;
	int I;
	unsigned int U;

} P00_PDR0_type;
#define P00_PDR0	(*( P00_PDR0_type *) 0xf003a040u)	/* Port 00 Pad Driver Mode 0 Register */
#define P02_PDR0	(*( P00_PDR0_type *) 0xf003a240u)	/* Port 02 Pad Driver Mode 0 Register */
#define P10_PDR0	(*( P00_PDR0_type *) 0xf003b040u)	/* Port 10 Pad Driver Mode 0 Register */
#define P11_PDR0	(*( P00_PDR0_type *) 0xf003b140u)	/* Port 11 Pad Driver Mode 0 Register */
#define P14_PDR0	(*( P00_PDR0_type *) 0xf003b440u)	/* Port 14 Pad Driver Mode 0 Register */
#define P15_PDR0	(*( P00_PDR0_type *) 0xf003b540u)	/* Port 15 Pad Driver Mode 0 Register */
#define P21_PDR0	(*( P00_PDR0_type *) 0xf003c140u)	/* Port 21 Pad Driver Mode 0 Register */
#define P22_PDR0	(*( P00_PDR0_type *) 0xf003c240u)	/* Port 22 Pad Driver Mode 0 Register */
#define P23_PDR0	(*( P00_PDR0_type *) 0xf003c340u)	/* Port 23 Pad Driver Mode 0 Register */
#define P32_PDR0	(*( P00_PDR0_type *) 0xf003d240u)	/* Port 32 Pad Driver Mode 0 Register */
#define P33_PDR0	(*( P00_PDR0_type *) 0xf003d340u)	/* Port 33 Pad Driver Mode 0 Register */

typedef volatile union
{
	struct
	{ 
		unsigned int PD8            : 3;	/* Pad Driver Mode for Port 00 Pin 8 to 12 */
		unsigned int PL8            : 1;	/* Pad Level Selection for Port 00 Pin 8 to 12 */
		unsigned int PD9            : 3;	/* Pad Driver Mode for Port 00 Pin 8 to 12 */
		unsigned int PL9            : 1;	/* Pad Level Selection for Port 00 Pin 8 to 12 */
		unsigned int PD10           : 3;	/* Pad Driver Mode for Port 00 Pin 8 to 12 */
		unsigned int PL10           : 1;	/* Pad Level Selection for Port 00 Pin 8 to 12 */
		unsigned int PD11           : 3;	/* Pad Driver Mode for Port 00 Pin 8 to 12 */
		unsigned int PL11           : 1;	/* Pad Level Selection for Port 00 Pin 8 to 12 */
		unsigned int PD12           : 3;	/* Pad Driver Mode for Port 00 Pin 8 to 12 */
		unsigned int PL12           : 1;	/* Pad Level Selection for Port 00 Pin 8 to 12 */
		unsigned int PD13           : 3;	/* Reserved */
		unsigned int PL13           : 1;	/* Reserved */
		unsigned int PD14           : 3;	/* Reserved */
		unsigned int PL14           : 1;	/* Reserved */
		unsigned int PD15           : 3;	/* Reserved */
		unsigned int PL15           : 1;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} P00_PDR1_type;
#define P00_PDR1	(*( P00_PDR1_type *) 0xf003a044u)	/* Port 00 Pad Driver Mode 1 Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int Reserved       : 32;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} P01_ACCEN1_type;
#define P01_ACCEN1	(*( P01_ACCEN1_type *) 0xf003a1f8u)	/* Port 01 Access Enable Register 1 */

typedef volatile union
{
	struct
	{ 
		unsigned int                : 3;
		unsigned int PC0            : 5;	/* Reserved */
		unsigned int                : 3;
		unsigned int PC1            : 5;	/* Reserved */
		unsigned int                : 3;
		unsigned int PC2            : 5;	/* Reserved */
		unsigned int                : 3;
		unsigned int PC3            : 5;	/* Port Control for Port 01 Pin 3 */
	} B;
	int I;
	unsigned int U;

} P01_IOCR0_type;
#define P01_IOCR0	(*( P01_IOCR0_type *) 0xf003a110u)	/* Port 01 Input/Output Control Register 0 */

typedef volatile union
{
	struct
	{ 
		unsigned int PD0            : 3;	/* Reserved */
		unsigned int PL0            : 1;	/* Reserved */
		unsigned int PD1            : 3;	/* Reserved */
		unsigned int PL1            : 1;	/* Reserved */
		unsigned int PD2            : 3;	/* Reserved */
		unsigned int PL2            : 1;	/* Reserved */
		unsigned int PD3            : 3;	/* Pad Driver Mode for Port n Pin 3 to 7 */
		unsigned int PL3            : 1;	/* Pad Level Selection for Port n Pin 3 to 7 */
		unsigned int PD4            : 3;	/* Pad Driver Mode for Port n Pin 3 to 7 */
		unsigned int PL4            : 1;	/* Pad Level Selection for Port n Pin 3 to 7 */
		unsigned int PD5            : 3;	/* Pad Driver Mode for Port n Pin 3 to 7 */
		unsigned int PL5            : 1;	/* Pad Level Selection for Port n Pin 3 to 7 */
		unsigned int PD6            : 3;	/* Pad Driver Mode for Port n Pin 3 to 7 */
		unsigned int PL6            : 1;	/* Pad Level Selection for Port n Pin 3 to 7 */
		unsigned int PD7            : 3;	/* Pad Driver Mode for Port n Pin 3 to 7 */
		unsigned int PL7            : 1;	/* Pad Level Selection for Port n Pin 3 to 7 */
	} B;
	int I;
	unsigned int U;

} P01_PDR0_type;
#define P01_PDR0	(*( P01_PDR0_type *) 0xf003a140u)	/* Port 01 Pad Driver Mode 0 Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int Reserved       : 32;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} P02_ACCEN1_type;
#define P02_ACCEN1	(*( P02_ACCEN1_type *) 0xf003a2f8u)	/* Port 02 Access Enable Register 1 */

typedef volatile union
{
	struct
	{ 
		unsigned int PD8            : 3;	/* Pad Driver Mode for Port n Pin 8 to 11 */
		unsigned int PL8            : 1;	/* Pad Level Selection for Port n Pin 8 to 11 */
		unsigned int PD9            : 3;	/* Pad Driver Mode for Port n Pin 8 to 11 */
		unsigned int PL9            : 1;	/* Pad Level Selection for Port n Pin 8 to 11 */
		unsigned int PD10           : 3;	/* Pad Driver Mode for Port n Pin 8 to 11 */
		unsigned int PL10           : 1;	/* Pad Level Selection for Port n Pin 8 to 11 */
		unsigned int PD11           : 3;	/* Pad Driver Mode for Port n Pin 8 to 11 */
		unsigned int PL11           : 1;	/* Pad Level Selection for Port n Pin 8 to 11 */
		/* const */ unsigned int PD12           : 3;	/* Reserved */
		/* const */ unsigned int PL12           : 1;	/* Reserved */
		/* const */ unsigned int PD13           : 3;	/* Reserved */
		/* const */ unsigned int PL13           : 1;	/* Reserved */
		/* const */ unsigned int PD14           : 3;	/* Reserved */
		/* const */ unsigned int PL14           : 1;	/* Reserved */
		/* const */ unsigned int PD15           : 3;	/* Reserved */
		/* const */ unsigned int PL15           : 1;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} P02_PDR1_type;
#define P02_PDR1	(*( P02_PDR1_type *) 0xf003a244u)	/* Port 02 Pad Driver Mode 1 Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int Reserved       : 32;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} P10_ACCEN1_type;
#define P10_ACCEN1	(*( P10_ACCEN1_type *) 0xf003b0f8u)	/* Port 10 Access Enable Register 1 */

typedef volatile union
{
	struct
	{ 
		unsigned int                : 3;
		unsigned int PC8            : 5;	/* Port Control for Port 10 Pin 8 */
		unsigned int                : 3;
		unsigned int PC9            : 5;	/* Reserved */
		unsigned int                : 3;
		unsigned int PC10           : 5;	/* Reserved */
		unsigned int                : 3;
		unsigned int PC11           : 5;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} P10_IOCR8_type;
#define P10_IOCR8	(*( P10_IOCR8_type *) 0xf003b018u)	/* Port 10 Input/Output Control Register 8 */

typedef volatile union
{
	struct
	{ 
		unsigned int PD8            : 3;	/* Pad Driver Mode for Port 10 Pin 8 */
		unsigned int PL8            : 1;	/* Pad Level Selection for Port 10 Pin 8 */
		unsigned int PD9            : 3;	/* Reserved */
		unsigned int PL9            : 1;	/* Reserved */
		unsigned int PD10           : 3;	/* Reserved */
		unsigned int PL10           : 1;	/* Reserved */
		unsigned int PD11           : 3;	/* Reserved */
		unsigned int PL11           : 1;	/* Reserved */
		/* const */ unsigned int PD12           : 3;	/* Reserved */
		/* const */ unsigned int PL12           : 1;	/* Reserved */
		/* const */ unsigned int PD13           : 3;	/* Reserved */
		/* const */ unsigned int PL13           : 1;	/* Reserved */
		/* const */ unsigned int PD14           : 3;	/* Reserved */
		/* const */ unsigned int PL14           : 1;	/* Reserved */
		/* const */ unsigned int PD15           : 3;	/* Reserved */
		/* const */ unsigned int PL15           : 1;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} P10_PDR1_type;
#define P10_PDR1	(*( P10_PDR1_type *) 0xf003b044u)	/* Port 10 Pad Driver Mode 1 Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int Reserved       : 32;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} P11_ACCEN1_type;
#define P11_ACCEN1	(*( P11_ACCEN1_type *) 0xf003b1f8u)	/* Port 11 Access Enable Register 1 */

typedef volatile union
{
	struct
	{ 
		unsigned int                : 3;
		unsigned int PC12           : 5;	/* Port Control for Port n Pin 12 to 15 */
		unsigned int                : 3;
		unsigned int PC13           : 5;	/* Port Control for Port n Pin 12 to 15 */
		unsigned int                : 3;
		unsigned int PC14           : 5;	/* Port Control for Port n Pin 12 to 15 */
		unsigned int                : 3;
		unsigned int PC15           : 5;	/* Port Control for Port n Pin 12 to 15 */
	} B;
	int I;
	unsigned int U;

} P11_IOCR12_type;
#define P11_IOCR12	(*( P11_IOCR12_type *) 0xf003b11cu)	/* Port 11 Input/Output Control Register 12 */
#define P33_IOCR12	(*( P11_IOCR12_type *) 0xf003d31cu)	/* Port 33 Input/Output Control Register 12 */

typedef volatile union
{
	struct
	{ 
		unsigned int SEL0           : 1;	/* Pin Controller Select for Pin 0 */
		unsigned int SEL1           : 1;	/* Pin Controller Select for Pin 1 */
		unsigned int SEL2           : 1;	/* Pin Controller Select for Pin 2 */
		unsigned int SEL3           : 1;	/* Pin Controller Select for Pin 3 */
		unsigned int                : 2;
		unsigned int SEL6           : 1;	/* Pin Controller Select for Pin 6 */
		unsigned int                : 25;
	} B;
	int I;
	unsigned int U;

} P11_PCSR_type;
#define P11_PCSR	(*( P11_PCSR_type *) 0xf003b164u)	/* Port 11 Pin Controller Select Register */

typedef volatile union
{
	struct
	{ 
		unsigned int PD8            : 3;	/* Pad Driver Mode for Port n Pin 8 to 15 */
		unsigned int PL8            : 1;	/* Pad Level Selection for Port n Pin 8 to 15 */
		unsigned int PD9            : 3;	/* Pad Driver Mode for Port n Pin 8 to 15 */
		unsigned int PL9            : 1;	/* Pad Level Selection for Port n Pin 8 to 15 */
		unsigned int PD10           : 3;	/* Pad Driver Mode for Port n Pin 8 to 15 */
		unsigned int PL10           : 1;	/* Pad Level Selection for Port n Pin 8 to 15 */
		unsigned int PD11           : 3;	/* Pad Driver Mode for Port n Pin 8 to 15 */
		unsigned int PL11           : 1;	/* Pad Level Selection for Port n Pin 8 to 15 */
		unsigned int PD12           : 3;	/* Pad Driver Mode for Port n Pin 8 to 15 */
		unsigned int PL12           : 1;	/* Pad Level Selection for Port n Pin 8 to 15 */
		unsigned int PD13           : 3;	/* Pad Driver Mode for Port n Pin 8 to 15 */
		unsigned int PL13           : 1;	/* Pad Level Selection for Port n Pin 8 to 15 */
		unsigned int PD14           : 3;	/* Pad Driver Mode for Port n Pin 8 to 15 */
		unsigned int PL14           : 1;	/* Pad Level Selection for Port n Pin 8 to 15 */
		unsigned int PD15           : 3;	/* Pad Driver Mode for Port n Pin 8 to 15 */
		unsigned int PL15           : 1;	/* Pad Level Selection for Port n Pin 8 to 15 */
	} B;
	int I;
	unsigned int U;

} P11_PDR1_type;
#define P11_PDR1	(*( P11_PDR1_type *) 0xf003b144u)	/* Port 11 Pad Driver Mode 1 Register */
#define P33_PDR1	(*( P11_PDR1_type *) 0xf003d344u)	/* Port 33 Pad Driver Mode 1 Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int Reserved       : 32;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} P12_ACCEN1_type;
#define P12_ACCEN1	(*( P12_ACCEN1_type *) 0xf003b2f8u)	/* Port 12 Access Enable Register 1 */

typedef volatile union
{
	struct
	{ 
		unsigned int                : 3;
		unsigned int PC0            : 5;	/* Port Control for Port 12 Pin 0 to 1 */
		unsigned int                : 3;
		unsigned int PC1            : 5;	/* Port Control for Port 12 Pin 0 to 1 */
		unsigned int                : 3;
		unsigned int PC2            : 5;	/* Reserved */
		unsigned int                : 3;
		unsigned int PC3            : 5;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} P12_IOCR0_type;
#define P12_IOCR0	(*( P12_IOCR0_type *) 0xf003b210u)	/* Port 12 Input/Output Control Register 0 */

typedef volatile union
{
	struct
	{ 
		unsigned int PD0            : 3;	/* Pad Driver Mode for Port 12 Pin 0 to 1 */
		unsigned int PL0            : 1;	/* Pad Level Selection for Port 12 Pin 0 to 1 */
		unsigned int PD1            : 3;	/* Pad Driver Mode for Port 12 Pin 0 to 1 */
		unsigned int PL1            : 1;	/* Pad Level Selection for Port 12 Pin 0 to 1 */
		unsigned int PD2            : 3;	/* Reserved */
		unsigned int PL2            : 1;	/* Reserved */
		unsigned int PD3            : 3;	/* Reserved */
		unsigned int PL3            : 1;	/* Reserved */
		/* const */ unsigned int PD4            : 3;	/* Reserved */
		/* const */ unsigned int PL4            : 1;	/* Reserved */
		/* const */ unsigned int PD5            : 3;	/* Reserved */
		/* const */ unsigned int PL5            : 1;	/* Reserved */
		/* const */ unsigned int PD6            : 3;	/* Reserved */
		/* const */ unsigned int PL6            : 1;	/* Reserved */
		/* const */ unsigned int PD7            : 3;	/* Reserved */
		/* const */ unsigned int PL7            : 1;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} P12_PDR0_type;
#define P12_PDR0	(*( P12_PDR0_type *) 0xf003b240u)	/* Port 12 Pad Driver Mode 0 Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int Reserved       : 32;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} P13_ACCEN1_type;
#define P13_ACCEN1	(*( P13_ACCEN1_type *) 0xf003b3f8u)	/* Port 13 Access Enable Register 1 */

typedef volatile union
{
	struct
	{ 
		unsigned int                : 1;
		unsigned int PS1            : 1;	/* Pad Supply for pins [1:0] */
		unsigned int                : 30;
	} B;
	int I;
	unsigned int U;

} P13_LPCR0_type;
#define P13_LPCR0	(*( P13_LPCR0_type *) 0xf003b3a0u)	/* Port 13 LVDS Pad Control Register 0 */
#define P22_LPCR0	(*( P13_LPCR0_type *) 0xf003c2a0u)	/* Port 22 LVDS Pad Control Register 0 */

typedef volatile union
{
	struct
	{ 
		unsigned int                : 1;
		unsigned int PS1            : 1;	/* Pad Supply for pins [3:2] */
		unsigned int                : 30;
	} B;
	int I;
	unsigned int U;

} P13_LPCR1_type;
#define P13_LPCR1	(*( P13_LPCR1_type *) 0xf003b3a4u)	/* Port 13 LVDS Pad Control Register 1 */
#define P22_LPCR1	(*( P13_LPCR1_type *) 0xf003c2a4u)	/* Port 22 LVDS Pad Control Register 1 */

typedef volatile union
{
	struct
	{ 
		unsigned int PD0            : 3;	/* Pad Driver Mode for Port 13 Pin [1:0] */
		unsigned int PL0            : 1;	/* Pad Level Selection for Port 13 Pin 0 to 3 */
		unsigned int PD1            : 3;	/* Pad Driver Mode for Port 13 Pin 1 and 3 */
		unsigned int PL1            : 1;	/* Pad Level Selection for Port 13 Pin 0 to 3 */
		unsigned int PD2            : 3;	/* Pad Driver Mode for Port 13 Pin [3:2] */
		unsigned int PL2            : 1;	/* Pad Level Selection for Port 13 Pin 0 to 3 */
		unsigned int PD3            : 3;	/* Pad Driver Mode for Port 13 Pin 1 and 3 */
		unsigned int PL3            : 1;	/* Pad Level Selection for Port 13 Pin 0 to 3 */
		/* const */ unsigned int PD4            : 3;	/* Reserved */
		/* const */ unsigned int PL4            : 1;	/* Reserved */
		/* const */ unsigned int PD5            : 3;	/* Reserved */
		/* const */ unsigned int PL5            : 1;	/* Reserved */
		/* const */ unsigned int PD6            : 3;	/* Reserved */
		/* const */ unsigned int PL6            : 1;	/* Reserved */
		/* const */ unsigned int PD7            : 3;	/* Reserved */
		/* const */ unsigned int PL7            : 1;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} P13_PDR0_type;
#define P13_PDR0	(*( P13_PDR0_type *) 0xf003b340u)	/* Port 13 Pad Driver Mode 0 Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int Reserved       : 32;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} P14_ACCEN1_type;
#define P14_ACCEN1	(*( P14_ACCEN1_type *) 0xf003b4f8u)	/* Port 14 Access Enable Register 1 */

typedef volatile union
{
	struct
	{ 
		unsigned int                : 3;
		unsigned int PC8            : 5;	/* Port Control for Port 14 Pin 8 to 10 */
		unsigned int                : 3;
		unsigned int PC9            : 5;	/* Port Control for Port 14 Pin 8 to 10 */
		unsigned int                : 3;
		unsigned int PC10           : 5;	/* Port Control for Port 14 Pin 8 to 10 */
		unsigned int                : 3;
		unsigned int PC11           : 5;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} P14_IOCR8_type;
#define P14_IOCR8	(*( P14_IOCR8_type *) 0xf003b418u)	/* Port 14 Input/Output Control Register 8 */

typedef volatile union
{
	struct
	{ 
		unsigned int PD8            : 3;	/* Pad Driver Mode for Port 14 Pin 8 to 10 */
		unsigned int PL8            : 1;	/* Pad Level Selection for Port 14 Pin 8 to 10 */
		unsigned int PD9            : 3;	/* Pad Driver Mode for Port 14 Pin 8 to 10 */
		unsigned int PL9            : 1;	/* Pad Level Selection for Port 14 Pin 8 to 10 */
		unsigned int PD10           : 3;	/* Pad Driver Mode for Port 14 Pin 8 to 10 */
		unsigned int PL10           : 1;	/* Pad Level Selection for Port 14 Pin 8 to 10 */
		unsigned int PD11           : 3;	/* Reserved */
		unsigned int PL11           : 1;	/* Reserved */
		/* const */ unsigned int PD12           : 3;	/* Reserved */
		/* const */ unsigned int PL12           : 1;	/* Reserved */
		/* const */ unsigned int PD13           : 3;	/* Reserved */
		/* const */ unsigned int PL13           : 1;	/* Reserved */
		/* const */ unsigned int PD14           : 3;	/* Reserved */
		/* const */ unsigned int PL14           : 1;	/* Reserved */
		/* const */ unsigned int PD15           : 3;	/* Reserved */
		/* const */ unsigned int PL15           : 1;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} P14_PDR1_type;
#define P14_PDR1	(*( P14_PDR1_type *) 0xf003b444u)	/* Port 14 Pad Driver Mode 1 Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int Reserved       : 32;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} P15_ACCEN1_type;
#define P15_ACCEN1	(*( P15_ACCEN1_type *) 0xf003b5f8u)	/* Port 15 Access Enable Register 1 */

typedef volatile union
{
	struct
	{ 
		unsigned int                : 3;
		unsigned int PC8            : 5;	/* Port Control for Port 15 Pin 8 */
		unsigned int                : 3;
		unsigned int PC9            : 5;	/* Reserved */
		unsigned int                : 3;
		unsigned int PC10           : 5;	/* Reserved */
		unsigned int                : 3;
		unsigned int PC11           : 5;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} P15_IOCR8_type;
#define P15_IOCR8	(*( P15_IOCR8_type *) 0xf003b518u)	/* Port 15 Input/Output Control Register 8 */

typedef volatile union
{
	struct
	{ 
		unsigned int PD8            : 3;	/* Pad Driver Mode for Port 15 Pin 8 */
		unsigned int PL8            : 1;	/* Pad Level Selection for Port 15 Pin 8 */
		unsigned int PD9            : 3;	/* Reserved */
		unsigned int PL9            : 1;	/* Reserved */
		unsigned int PD10           : 3;	/* Reserved */
		unsigned int PL10           : 1;	/* Reserved */
		unsigned int PD11           : 3;	/* Reserved */
		unsigned int PL11           : 1;	/* Reserved */
		/* const */ unsigned int PD12           : 3;	/* Reserved */
		/* const */ unsigned int PL12           : 1;	/* Reserved */
		/* const */ unsigned int PD13           : 3;	/* Reserved */
		/* const */ unsigned int PL13           : 1;	/* Reserved */
		/* const */ unsigned int PD14           : 3;	/* Reserved */
		/* const */ unsigned int PL14           : 1;	/* Reserved */
		/* const */ unsigned int PD15           : 3;	/* Reserved */
		/* const */ unsigned int PL15           : 1;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} P15_PDR1_type;
#define P15_PDR1	(*( P15_PDR1_type *) 0xf003b544u)	/* Port 15 Pad Driver Mode 1 Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int Reserved       : 32;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} P20_ACCEN1_type;
#define P20_ACCEN1	(*( P20_ACCEN1_type *) 0xf003c0f8u)	/* Port 20 Access Enable Register 1 */

typedef volatile union
{
	struct
	{ 
		unsigned int                : 3;
		unsigned int PC0            : 5;	/* Port Control for Port n Pin 0 */
		unsigned int                : 3;
		unsigned int PC1            : 5;	/* Port Control for Port n Pin 1 */
		unsigned int                : 3;
		unsigned int PC2            : 5;	/* Reserved */
		unsigned int                : 3;
		unsigned int PC3            : 5;	/* Port Control for Port n Pin 3 */
	} B;
	int I;
	unsigned int U;

} P20_IOCR0_type;
#define P20_IOCR0	(*( P20_IOCR0_type *) 0xf003c010u)	/* Port 20 Input/Output Control Register 0 */

typedef volatile union
{
	struct
	{ 
		unsigned int                : 3;
		unsigned int PC12           : 5;	/* Port Control for Port 20 Pin 12 to 14 */
		unsigned int                : 3;
		unsigned int PC13           : 5;	/* Port Control for Port 20 Pin 12 to 14 */
		unsigned int                : 3;
		unsigned int PC14           : 5;	/* Port Control for Port 20 Pin 12 to 14 */
		unsigned int                : 3;
		unsigned int PC15           : 5;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} P20_IOCR12_type;
#define P20_IOCR12	(*( P20_IOCR12_type *) 0xf003c01cu)	/* Port 20 Input/Output Control Register 12 */

typedef volatile union
{
	struct
	{ 
		unsigned int                : 3;
		unsigned int PC4            : 5;	/* Reserved */
		unsigned int                : 3;
		unsigned int PC5            : 5;	/* Reserved */
		unsigned int                : 3;
		unsigned int PC6            : 5;	/* Port Control for Port 20 Pin 6 to 7 */
		unsigned int                : 3;
		unsigned int PC7            : 5;	/* Port Control for Port 20 Pin 6 to 7 */
	} B;
	int I;
	unsigned int U;

} P20_IOCR4_type;
#define P20_IOCR4	(*( P20_IOCR4_type *) 0xf003c014u)	/* Port 20 Input/Output Control Register 4 */

typedef volatile union
{
	struct
	{ 
		unsigned int PD0            : 3;	/* Pad Driver Mode for Port 20 Pin 0 to 1, 3, 6 to 7 */
		unsigned int PL0            : 1;	/* Pad Level Selection for Port 20 Pin 0 to 1, 3, 6 to 7 */
		unsigned int PD1            : 3;	/* Pad Driver Mode for Port 20 Pin 0 to 1, 3, 6 to 7 */
		unsigned int PL1            : 1;	/* Pad Level Selection for Port 20 Pin 0 to 1, 3, 6 to 7 */
		unsigned int PD2            : 3;	/* Reserved */
		unsigned int PL2            : 1;	/* Reserved */
		unsigned int PD3            : 3;	/* Pad Driver Mode for Port 20 Pin 0 to 1, 3, 6 to 7 */
		unsigned int PL3            : 1;	/* Pad Level Selection for Port 20 Pin 0 to 1, 3, 6 to 7 */
		unsigned int PD4            : 3;	/* Reserved */
		unsigned int PL4            : 1;	/* Reserved */
		unsigned int PD5            : 3;	/* Reserved */
		unsigned int PL5            : 1;	/* Reserved */
		unsigned int PD6            : 3;	/* Pad Driver Mode for Port 20 Pin 0 to 1, 3, 6 to 7 */
		unsigned int PL6            : 1;	/* Pad Level Selection for Port 20 Pin 0 to 1, 3, 6 to 7 */
		unsigned int PD7            : 3;	/* Pad Driver Mode for Port 20 Pin 0 to 1, 3, 6 to 7 */
		unsigned int PL7            : 1;	/* Pad Level Selection for Port 20 Pin 0 to 1, 3, 6 to 7 */
	} B;
	int I;
	unsigned int U;

} P20_PDR0_type;
#define P20_PDR0	(*( P20_PDR0_type *) 0xf003c040u)	/* Port 20 Pad Driver Mode 0 Register */

typedef volatile union
{
	struct
	{ 
		unsigned int PD8            : 3;	/* Pad Driver Mode for Port 20 Pin 8 */
		unsigned int PL8            : 1;	/* Pad Level Selection for Port 20 Pin 8 */
		unsigned int PD9            : 3;	/* Pad Driver Mode for Port 20 Pin 9 */
		unsigned int PL9            : 1;	/* Pad Level Selection for Port 20 Pin 9 */
		unsigned int PD10           : 3;	/* Pad Driver Mode for Port 20 Pin 10 */
		unsigned int PL10           : 1;	/* Pad Level Selection for Port 20 Pin 10 */
		unsigned int PD11           : 3;	/* Pad Driver Mode for Port 20 Pin 11 */
		unsigned int PL11           : 1;	/* Pad Level Selection for Port 20 Pin 11 */
		unsigned int PD12           : 3;	/* Pad Driver Mode for Port 20 Pin 12 */
		unsigned int PL12           : 1;	/* Pad Level Selection for Port 20 Pin 12 */
		unsigned int PD13           : 3;	/* Pad Driver Mode for Port 20 Pin 13 */
		unsigned int PL13           : 1;	/* Pad Level Selection for Port 20 Pin 13 */
		unsigned int PD14           : 3;	/* Pad Driver Mode for Port 20 Pin 14 */
		unsigned int PL14           : 1;	/* Pad Level Selection for Port 20 Pin 14 */
		unsigned int PD15           : 3;	/* Reserved */
		unsigned int PL15           : 1;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} P20_PDR1_type;
#define P20_PDR1	(*( P20_PDR1_type *) 0xf003c044u)	/* Port 20 Pad Driver Mode 1 Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int Reserved       : 32;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} P21_ACCEN1_type;
#define P21_ACCEN1	(*( P21_ACCEN1_type *) 0xf003c1f8u)	/* Port 21 Access Enable Register 1 */

typedef volatile union
{
	struct
	{ 
		unsigned int RDIS_CTRL      : 1;	/* LVDS RX_DIS controller */
		unsigned int RX_DIS         : 1;	/* Disable Receive LVDS */
		unsigned int TERM           : 1;	/* Select Receiver Termination Mode */
		unsigned int LRXTERM        : 5;	/* LVDS RX Poly-resistor configuration value */
		unsigned int                : 24;
	} B;
	int I;
	unsigned int U;

} P21_LPCR1_type;
#define P21_LPCR1	(*( P21_LPCR1_type *) 0xf003c1a4u)	/* Port 21 LVDS Pad Control Register 1 */

typedef volatile union
{
	struct
	{ 
		unsigned int                : 8;
		unsigned int LVDSR          : 1;	/* Special reduced LVDS electrical signaling mode */
		unsigned int LVDSRL         : 1;	/* LVDS IEEE electrical signaling mode */
		unsigned int                : 2;
		unsigned int TDIS_CTRL      : 1;	/* LVDS TX_DIS controller */
		unsigned int TX_DIS         : 1;	/* Disable Transmit LVDS */
		unsigned int TX_PD          : 1;	/* LVDS Power Down */
		unsigned int TX_PWDPD       : 1;	/* Disable TX Power down pull down. */
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} P21_LPCR2_type;
#define P21_LPCR2	(*( P21_LPCR2_type *) 0xf003c1a8u)	/* Port 21 LVDS Pad Control Register 2 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int Reserved       : 32;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} P22_ACCEN1_type;
#define P22_ACCEN1	(*( P22_ACCEN1_type *) 0xf003c2f8u)	/* Port 22 Access Enable Register 1 */

typedef volatile union
{
	struct
	{ 
		unsigned int PD8            : 3;	/* Pad Driver Mode for Port 22 Pin 8 to 11 */
		unsigned int PL8            : 1;	/* Pad Level Selection for Port 22 Pin 8 to 11 */
		unsigned int PD9            : 3;	/* Pad Driver Mode for Port 22 Pin 8 to 11 */
		unsigned int PL9            : 1;	/* Pad Level Selection for Port 22 Pin 8 to 11 */
		unsigned int PD10           : 3;	/* Pad Driver Mode for Port 22 Pin 8 to 11 */
		unsigned int PL10           : 1;	/* Pad Level Selection for Port 22 Pin 8 to 11 */
		unsigned int PD11           : 3;	/* Pad Driver Mode for Port 22 Pin 8 to 11 */
		unsigned int PL11           : 1;	/* Pad Level Selection for Port 22 Pin 8 to 11 */
		/* const */ unsigned int PD12           : 3;	/* Reserved */
		/* const */ unsigned int PL12           : 1;	/* Reserved */
		/* const */ unsigned int PD13           : 3;	/* Reserved */
		/* const */ unsigned int PL13           : 1;	/* Reserved */
		/* const */ unsigned int PD14           : 3;	/* Reserved */
		/* const */ unsigned int PL14           : 1;	/* Reserved */
		/* const */ unsigned int PD15           : 3;	/* Reserved */
		/* const */ unsigned int PL15           : 1;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} P22_PDR1_type;
#define P22_PDR1	(*( P22_PDR1_type *) 0xf003c244u)	/* Port 22 Pad Driver Mode 1 Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int Reserved       : 32;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} P23_ACCEN1_type;
#define P23_ACCEN1	(*( P23_ACCEN1_type *) 0xf003c3f8u)	/* Port 23 Access Enable Register 1 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int Reserved       : 32;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} P32_ACCEN1_type;
#define P32_ACCEN1	(*( P32_ACCEN1_type *) 0xf003d2f8u)	/* Port 32 Access Enable Register 1 */

typedef volatile union
{
	struct
	{ 
		unsigned int                : 3;
		unsigned int PC0            : 5;	/* Port Control for Port n Pin 0, Pin 2 to 3 */
		unsigned int                : 3;
		unsigned int PC1            : 5;	/* Reserved */
		unsigned int                : 3;
		unsigned int PC2            : 5;	/* Port Control for Port n Pin 0, Pin 2 to 3 */
		unsigned int                : 3;
		unsigned int PC3            : 5;	/* Port Control for Port n Pin 0, Pin 2 to 3 */
	} B;
	int I;
	unsigned int U;

} P32_IOCR0_type;
#define P32_IOCR0	(*( P32_IOCR0_type *) 0xf003d210u)	/* Port 32 Input/Output Control Register 0 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int Reserved       : 32;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} P33_ACCEN1_type;
#define P33_ACCEN1	(*( P33_ACCEN1_type *) 0xf003d3f8u)	/* Port 33 Access Enable Register 1 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int Reserved       : 32;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} P34_ACCEN1_type;
#define P34_ACCEN1	(*( P34_ACCEN1_type *) 0xf003d4f8u)	/* Port 34 Access Enable Register 1 */

typedef volatile union
{
	struct
	{ 
		unsigned int                : 3;
		unsigned int PC4            : 5;	/* Port Control for Port 34 Pin 4 to 5 */
		unsigned int                : 3;
		unsigned int PC5            : 5;	/* Port Control for Port 34 Pin 4 to 5 */
		unsigned int                : 3;
		unsigned int PC6            : 5;	/* Reserved */
		unsigned int                : 3;
		unsigned int PC7            : 5;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} P34_IOCR4_type;
#define P34_IOCR4	(*( P34_IOCR4_type *) 0xf003d414u)	/* Port 34 Input/Output Control Register 4 */

typedef volatile union
{
	struct
	{ 
		unsigned int PD0            : 3;	/* Reserved */
		unsigned int PL0            : 1;	/* Reserved */
		unsigned int PD1            : 3;	/* Pad Driver Mode for Port 34 Pin 1 to 5 */
		unsigned int PL1            : 1;	/* Pad Level Selection for Port 34 Pin 1 to 5 */
		unsigned int PD2            : 3;	/* Pad Driver Mode for Port 34 Pin 1 to 5 */
		unsigned int PL2            : 1;	/* Pad Level Selection for Port 34 Pin 1 to 5 */
		unsigned int PD3            : 3;	/* Pad Driver Mode for Port 34 Pin 1 to 5 */
		unsigned int PL3            : 1;	/* Pad Level Selection for Port 34 Pin 1 to 5 */
		unsigned int PD4            : 3;	/* Pad Driver Mode for Port 34 Pin 1 to 5 */
		unsigned int PL4            : 1;	/* Pad Level Selection for Port 34 Pin 1 to 5 */
		unsigned int PD5            : 3;	/* Pad Driver Mode for Port 34 Pin 1 to 5 */
		unsigned int PL5            : 1;	/* Pad Level Selection for Port 34 Pin 1 to 5 */
		unsigned int PD6            : 3;	/* Reserved */
		unsigned int PL6            : 1;	/* Reserved */
		unsigned int PD7            : 3;	/* Reserved */
		unsigned int PL7            : 1;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} P34_PDR0_type;
#define P34_PDR0	(*( P34_PDR0_type *) 0xf003d440u)	/* Port 34 Pad Driver Mode 0 Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int Reserved       : 32;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} P40_ACCEN1_type;
#define P40_ACCEN1	(*( P40_ACCEN1_type *) 0xf003e0f8u)	/* Port 40 Access Enable Register 1 */

typedef volatile union
{
	struct
	{ 
		unsigned int                : 3;
		unsigned int PC0            : 5;	/* Port Control for Port n Pin 0 to 3 */
		unsigned int                : 3;
		unsigned int PC1            : 5;	/* Port Control for Port n Pin 0 to 3 */
		unsigned int                : 3;
		unsigned int PC2            : 5;	/* Port Control for Port n Pin 0 to 3 */
		unsigned int                : 3;
		unsigned int PC3            : 5;	/* Port Control for Port n Pin 0 to 3 */
	} B;
	int I;
	unsigned int U;

} P40_IOCR0_type;
#define P40_IOCR0	(*( P40_IOCR0_type *) 0xf003e010u)	/* Port 40 Input/Output Control Register 0 */

typedef volatile union
{
	struct
	{ 
		unsigned int                : 3;
		unsigned int PC4            : 5;	/* Port Control for Port n Pin 4 to 7 */
		unsigned int                : 3;
		unsigned int PC5            : 5;	/* Port Control for Port n Pin 4 to 7 */
		unsigned int                : 3;
		unsigned int PC6            : 5;	/* Port Control for Port n Pin 4 to 7 */
		unsigned int                : 3;
		unsigned int PC7            : 5;	/* Port Control for Port n Pin 4 to 7 */
	} B;
	int I;
	unsigned int U;

} P40_IOCR4_type;
#define P40_IOCR4	(*( P40_IOCR4_type *) 0xf003e014u)	/* Port 40 Input/Output Control Register 4 */

typedef volatile union
{
	struct
	{ 
		unsigned int                : 3;
		unsigned int PC8            : 5;	/* Port Control for Port 40 Pin 8 to 9 */
		unsigned int                : 3;
		unsigned int PC9            : 5;	/* Port Control for Port 40 Pin 8 to 9 */
		unsigned int                : 3;
		unsigned int PC10           : 5;	/* Reserved */
		unsigned int                : 3;
		unsigned int PC11           : 5;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} P40_IOCR8_type;
#define P40_IOCR8	(*( P40_IOCR8_type *) 0xf003e018u)	/* Port 40 Input/Output Control Register 8 */

typedef volatile union
{
	struct
	{ 
		unsigned int                : 1;
		unsigned int SEL1           : 1;	/* Pin Controller Select for Pin 1 */
		unsigned int SEL2           : 1;	/* Pin Controller Select for Pin 2 */
		unsigned int SEL3           : 1;	/* Pin Controller Select for Pin 3 */
		unsigned int                : 1;
		unsigned int SEL5           : 1;	/* Pin Controller Select for Pin 5 */
		unsigned int                : 25;
		/* const */ unsigned int LCK            : 1;	/* Lock Status */
	} B;
	int I;
	unsigned int U;

} P40_PCSR_type;
#define P40_PCSR	(*( P40_PCSR_type *) 0xf003e064u)	/* Port 40 Pin Controller Select Register */

typedef volatile union
{
	struct
	{ 
		unsigned int PDIS0          : 1;	/* Pin Function Decision Control for Pin 0 */
		unsigned int PDIS1          : 1;	/* Pin Function Decision Control for Pin 1 */
		unsigned int PDIS2          : 1;	/* Pin Function Decision Control for Pin 2 */
		unsigned int PDIS3          : 1;	/* Pin Function Decision Control for Pin 3 */
		unsigned int PDIS4          : 1;	/* Pin Function Decision Control for Pin 4 */
		unsigned int PDIS5          : 1;	/* Pin Function Decision Control for Pin 5 */
		unsigned int PDIS6          : 1;	/* Pin Function Decision Control for Pin 6 */
		unsigned int PDIS7          : 1;	/* Pin Function Decision Control for Pin 7 */
		unsigned int PDIS8          : 1;	/* Pin Function Decision Control for Pin 8 */
		unsigned int PDIS9          : 1;	/* Pin Function Decision Control for Pin 9 */
		unsigned int PDIS10         : 1;	/* Pin Function Decision Control for Pin 10 */
		unsigned int PDIS11         : 1;	/* Pin Function Decision Control for Pin 11 */
		unsigned int PDIS12         : 1;	/* Pin Function Decision Control for Pin 12 */
		unsigned int PDIS13         : 1;	/* Pin Function Decision Control for Pin 13 */
		unsigned int PDIS14         : 1;	/* Pin Function Decision Control for Pin 14 */
		unsigned int PDIS15         : 1;	/* Pin Function Decision Control for Pin 15 */
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} P40_PDISC_type;
#define P40_PDISC	(*( P40_PDISC_type *) 0xf003e060u)	/* Port 40 Pin Function Decision Control Register */


/* DMA */
typedef volatile union
{
	struct
	{ 
		unsigned int EN0            : 1;	/* Access Enable for Master TAG ID 0 */
		unsigned int EN1            : 1;	/* Access Enable for Master TAG ID 1 */
		unsigned int EN2            : 1;	/* Access Enable for Master TAG ID 2 */
		unsigned int EN3            : 1;	/* Access Enable for Master TAG ID 3 */
		unsigned int EN4            : 1;	/* Access Enable for Master TAG ID 4 */
		unsigned int EN5            : 1;	/* Access Enable for Master TAG ID 5 */
		unsigned int EN6            : 1;	/* Access Enable for Master TAG ID 6 */
		unsigned int EN7            : 1;	/* Access Enable for Master TAG ID 7 */
		unsigned int EN8            : 1;	/* Access Enable for Master TAG ID 8 */
		unsigned int EN9            : 1;	/* Access Enable for Master TAG ID 9 */
		unsigned int EN10           : 1;	/* Access Enable for Master TAG ID 10 */
		unsigned int EN11           : 1;	/* Access Enable for Master TAG ID 11 */
		unsigned int EN12           : 1;	/* Access Enable for Master TAG ID 12 */
		unsigned int EN13           : 1;	/* Access Enable for Master TAG ID 13 */
		unsigned int EN14           : 1;	/* Access Enable for Master TAG ID 14 */
		unsigned int EN15           : 1;	/* Access Enable for Master TAG ID 15 */
		unsigned int EN16           : 1;	/* Access Enable for Master TAG ID 16 */
		unsigned int EN17           : 1;	/* Access Enable for Master TAG ID 17 */
		unsigned int EN18           : 1;	/* Access Enable for Master TAG ID 18 */
		unsigned int EN19           : 1;	/* Access Enable for Master TAG ID 19 */
		unsigned int EN20           : 1;	/* Access Enable for Master TAG ID 20 */
		unsigned int EN21           : 1;	/* Access Enable for Master TAG ID 21 */
		unsigned int EN22           : 1;	/* Access Enable for Master TAG ID 22 */
		unsigned int EN23           : 1;	/* Access Enable for Master TAG ID 23 */
		unsigned int EN24           : 1;	/* Access Enable for Master TAG ID 24 */
		unsigned int EN25           : 1;	/* Access Enable for Master TAG ID 25 */
		unsigned int EN26           : 1;	/* Access Enable for Master TAG ID 26 */
		unsigned int EN27           : 1;	/* Access Enable for Master TAG ID 27 */
		unsigned int EN28           : 1;	/* Access Enable for Master TAG ID 28 */
		unsigned int EN29           : 1;	/* Access Enable for Master TAG ID 29 */
		unsigned int EN30           : 1;	/* Access Enable for Master TAG ID 30 */
		unsigned int EN31           : 1;	/* Access Enable for Master TAG ID 31 */
	} B;
	int I;
	unsigned int U;

} DMA_ACCEN00_type;
#define DMA_ACCEN00	(*( DMA_ACCEN00_type *) 0xf0010040u)	/* DMA Hardware Resource 0 Access Enable Register 0 */
#define DMA_ACCEN10	(*( DMA_ACCEN00_type *) 0xf0010048u)	/* DMA Hardware Resource 1 Access Enable Register 0 */
#define DMA_ACCEN20	(*( DMA_ACCEN00_type *) 0xf0010050u)	/* DMA Hardware Resource 2 Access Enable Register 0 */
#define DMA_ACCEN30	(*( DMA_ACCEN00_type *) 0xf0010058u)	/* DMA Hardware Resource 3 Access Enable Register 0 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int RES            : 32;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} DMA_ACCEN01_type;
#define DMA_ACCEN01	(*( DMA_ACCEN01_type *) 0xf0010044u)	/* DMA Hardware Resource 0 Access Enable Register 1 */
#define DMA_ACCEN11	(*( DMA_ACCEN01_type *) 0xf001004cu)	/* DMA Hardware Resource 1 Access Enable Register 1 */
#define DMA_ACCEN21	(*( DMA_ACCEN01_type *) 0xf0010054u)	/* DMA Hardware Resource 2 Access Enable Register 1 */
#define DMA_ACCEN31	(*( DMA_ACCEN01_type *) 0xf001005cu)	/* DMA Hardware Resource 3 Access Enable Register 1 */

typedef volatile union
{
	struct
	{ 
		unsigned int SMF            : 3;	/* Source Address Modification Factor */
		unsigned int INCS           : 1;	/* Increment of Source Address */
		unsigned int DMF            : 3;	/* Destination Address Modification Factor */
		unsigned int INCD           : 1;	/* Increment of Destination Address */
		unsigned int CBLS           : 4;	/* Circular Buffer Length Source */
		unsigned int CBLD           : 4;	/* Circular Buffer Length Destination */
		unsigned int SHCT           : 4;	/* Shadow Control */
		unsigned int SCBE           : 1;	/* Source Circular Buffer Enable */
		unsigned int DCBE           : 1;	/* Destination Circular Buffer Enable */
		unsigned int STAMP          : 1;	/* Time Stamp */
		unsigned int ETRL           : 1;	/* Enable Transaction Request Lost Interrupt */
		unsigned int WRPSE          : 1;	/* Wrap Source Enable */
		unsigned int WRPDE          : 1;	/* Wrap Destination Enable */
		unsigned int INTCT          : 2;	/* Interrupt Control */
		unsigned int IRDV           : 4;	/* Interrupt Raise Detect Value */
	} B;
	int I;
	unsigned int U;

} DMA_ADICR000_type;
#define DMA_ADICR000	(*( DMA_ADICR000_type *) 0xf0012010u)	/* DMA Channel Address and Interrupt Control Register x */
#define DMA_ADICR001	(*( DMA_ADICR000_type *) 0xf0012030u)	/* DMA Channel Address and Interrupt Control Register x */
#define DMA_ADICR002	(*( DMA_ADICR000_type *) 0xf0012050u)	/* DMA Channel Address and Interrupt Control Register x */
#define DMA_ADICR003	(*( DMA_ADICR000_type *) 0xf0012070u)	/* DMA Channel Address and Interrupt Control Register x */
#define DMA_ADICR004	(*( DMA_ADICR000_type *) 0xf0012090u)	/* DMA Channel Address and Interrupt Control Register x */
#define DMA_ADICR005	(*( DMA_ADICR000_type *) 0xf00120b0u)	/* DMA Channel Address and Interrupt Control Register x */
#define DMA_ADICR006	(*( DMA_ADICR000_type *) 0xf00120d0u)	/* DMA Channel Address and Interrupt Control Register x */
#define DMA_ADICR007	(*( DMA_ADICR000_type *) 0xf00120f0u)	/* DMA Channel Address and Interrupt Control Register x */
#define DMA_ADICR008	(*( DMA_ADICR000_type *) 0xf0012110u)	/* DMA Channel Address and Interrupt Control Register x */
#define DMA_ADICR009	(*( DMA_ADICR000_type *) 0xf0012130u)	/* DMA Channel Address and Interrupt Control Register x */
#define DMA_ADICR010	(*( DMA_ADICR000_type *) 0xf0012150u)	/* DMA Channel Address and Interrupt Control Register x */
#define DMA_ADICR011	(*( DMA_ADICR000_type *) 0xf0012170u)	/* DMA Channel Address and Interrupt Control Register x */
#define DMA_ADICR012	(*( DMA_ADICR000_type *) 0xf0012190u)	/* DMA Channel Address and Interrupt Control Register x */
#define DMA_ADICR013	(*( DMA_ADICR000_type *) 0xf00121b0u)	/* DMA Channel Address and Interrupt Control Register x */
#define DMA_ADICR014	(*( DMA_ADICR000_type *) 0xf00121d0u)	/* DMA Channel Address and Interrupt Control Register x */
#define DMA_ADICR015	(*( DMA_ADICR000_type *) 0xf00121f0u)	/* DMA Channel Address and Interrupt Control Register x */
#define DMA_ADICR016	(*( DMA_ADICR000_type *) 0xf0012210u)	/* DMA Channel Address and Interrupt Control Register x */
#define DMA_ADICR017	(*( DMA_ADICR000_type *) 0xf0012230u)	/* DMA Channel Address and Interrupt Control Register x */
#define DMA_ADICR018	(*( DMA_ADICR000_type *) 0xf0012250u)	/* DMA Channel Address and Interrupt Control Register x */
#define DMA_ADICR019	(*( DMA_ADICR000_type *) 0xf0012270u)	/* DMA Channel Address and Interrupt Control Register x */
#define DMA_ADICR020	(*( DMA_ADICR000_type *) 0xf0012290u)	/* DMA Channel Address and Interrupt Control Register x */
#define DMA_ADICR021	(*( DMA_ADICR000_type *) 0xf00122b0u)	/* DMA Channel Address and Interrupt Control Register x */
#define DMA_ADICR022	(*( DMA_ADICR000_type *) 0xf00122d0u)	/* DMA Channel Address and Interrupt Control Register x */
#define DMA_ADICR023	(*( DMA_ADICR000_type *) 0xf00122f0u)	/* DMA Channel Address and Interrupt Control Register x */
#define DMA_ADICR024	(*( DMA_ADICR000_type *) 0xf0012310u)	/* DMA Channel Address and Interrupt Control Register x */
#define DMA_ADICR025	(*( DMA_ADICR000_type *) 0xf0012330u)	/* DMA Channel Address and Interrupt Control Register x */
#define DMA_ADICR026	(*( DMA_ADICR000_type *) 0xf0012350u)	/* DMA Channel Address and Interrupt Control Register x */
#define DMA_ADICR027	(*( DMA_ADICR000_type *) 0xf0012370u)	/* DMA Channel Address and Interrupt Control Register x */
#define DMA_ADICR028	(*( DMA_ADICR000_type *) 0xf0012390u)	/* DMA Channel Address and Interrupt Control Register x */
#define DMA_ADICR029	(*( DMA_ADICR000_type *) 0xf00123b0u)	/* DMA Channel Address and Interrupt Control Register x */
#define DMA_ADICR030	(*( DMA_ADICR000_type *) 0xf00123d0u)	/* DMA Channel Address and Interrupt Control Register x */
#define DMA_ADICR031	(*( DMA_ADICR000_type *) 0xf00123f0u)	/* DMA Channel Address and Interrupt Control Register x */
#define DMA_ADICR032	(*( DMA_ADICR000_type *) 0xf0012410u)	/* DMA Channel Address and Interrupt Control Register x */
#define DMA_ADICR033	(*( DMA_ADICR000_type *) 0xf0012430u)	/* DMA Channel Address and Interrupt Control Register x */
#define DMA_ADICR034	(*( DMA_ADICR000_type *) 0xf0012450u)	/* DMA Channel Address and Interrupt Control Register x */
#define DMA_ADICR035	(*( DMA_ADICR000_type *) 0xf0012470u)	/* DMA Channel Address and Interrupt Control Register x */
#define DMA_ADICR036	(*( DMA_ADICR000_type *) 0xf0012490u)	/* DMA Channel Address and Interrupt Control Register x */
#define DMA_ADICR037	(*( DMA_ADICR000_type *) 0xf00124b0u)	/* DMA Channel Address and Interrupt Control Register x */
#define DMA_ADICR038	(*( DMA_ADICR000_type *) 0xf00124d0u)	/* DMA Channel Address and Interrupt Control Register x */
#define DMA_ADICR039	(*( DMA_ADICR000_type *) 0xf00124f0u)	/* DMA Channel Address and Interrupt Control Register x */
#define DMA_ADICR040	(*( DMA_ADICR000_type *) 0xf0012510u)	/* DMA Channel Address and Interrupt Control Register x */
#define DMA_ADICR041	(*( DMA_ADICR000_type *) 0xf0012530u)	/* DMA Channel Address and Interrupt Control Register x */
#define DMA_ADICR042	(*( DMA_ADICR000_type *) 0xf0012550u)	/* DMA Channel Address and Interrupt Control Register x */
#define DMA_ADICR043	(*( DMA_ADICR000_type *) 0xf0012570u)	/* DMA Channel Address and Interrupt Control Register x */
#define DMA_ADICR044	(*( DMA_ADICR000_type *) 0xf0012590u)	/* DMA Channel Address and Interrupt Control Register x */
#define DMA_ADICR045	(*( DMA_ADICR000_type *) 0xf00125b0u)	/* DMA Channel Address and Interrupt Control Register x */
#define DMA_ADICR046	(*( DMA_ADICR000_type *) 0xf00125d0u)	/* DMA Channel Address and Interrupt Control Register x */
#define DMA_ADICR047	(*( DMA_ADICR000_type *) 0xf00125f0u)	/* DMA Channel Address and Interrupt Control Register x */
#define DMA_ADICR048	(*( DMA_ADICR000_type *) 0xf0012610u)	/* DMA Channel Address and Interrupt Control Register x */
#define DMA_ADICR049	(*( DMA_ADICR000_type *) 0xf0012630u)	/* DMA Channel Address and Interrupt Control Register x */
#define DMA_ADICR050	(*( DMA_ADICR000_type *) 0xf0012650u)	/* DMA Channel Address and Interrupt Control Register x */
#define DMA_ADICR051	(*( DMA_ADICR000_type *) 0xf0012670u)	/* DMA Channel Address and Interrupt Control Register x */
#define DMA_ADICR052	(*( DMA_ADICR000_type *) 0xf0012690u)	/* DMA Channel Address and Interrupt Control Register x */
#define DMA_ADICR053	(*( DMA_ADICR000_type *) 0xf00126b0u)	/* DMA Channel Address and Interrupt Control Register x */
#define DMA_ADICR054	(*( DMA_ADICR000_type *) 0xf00126d0u)	/* DMA Channel Address and Interrupt Control Register x */
#define DMA_ADICR055	(*( DMA_ADICR000_type *) 0xf00126f0u)	/* DMA Channel Address and Interrupt Control Register x */
#define DMA_ADICR056	(*( DMA_ADICR000_type *) 0xf0012710u)	/* DMA Channel Address and Interrupt Control Register x */
#define DMA_ADICR057	(*( DMA_ADICR000_type *) 0xf0012730u)	/* DMA Channel Address and Interrupt Control Register x */
#define DMA_ADICR058	(*( DMA_ADICR000_type *) 0xf0012750u)	/* DMA Channel Address and Interrupt Control Register x */
#define DMA_ADICR059	(*( DMA_ADICR000_type *) 0xf0012770u)	/* DMA Channel Address and Interrupt Control Register x */
#define DMA_ADICR060	(*( DMA_ADICR000_type *) 0xf0012790u)	/* DMA Channel Address and Interrupt Control Register x */
#define DMA_ADICR061	(*( DMA_ADICR000_type *) 0xf00127b0u)	/* DMA Channel Address and Interrupt Control Register x */
#define DMA_ADICR062	(*( DMA_ADICR000_type *) 0xf00127d0u)	/* DMA Channel Address and Interrupt Control Register x */
#define DMA_ADICR063	(*( DMA_ADICR000_type *) 0xf00127f0u)	/* DMA Channel Address and Interrupt Control Register x */

typedef volatile union
{
	struct
	{ 
		unsigned int TREL           : 14;	/* Transfer Reload Value */
		/* const */ unsigned int RES            : 2;	/* Reserved */
		unsigned int BLKM           : 3;	/* Block Mode */
		unsigned int RROAT          : 1;	/* Reset Request Only After Transaction */
		unsigned int CHMODE         : 1;	/* Channel Operation Mode */
		unsigned int CHDW           : 3;	/* Channel Data Width */
		unsigned int PATSEL         : 3;	/* Pattern Select */
		/* const */ unsigned int RES_8          : 1;	/* Reserved */
		unsigned int PRSEL          : 1;	/* Peripheral Request Select */
		/* const */ unsigned int RES_10         : 1;	/* Reserved */
		unsigned int DMAPRIO        : 2;	/* DMA Priority */
	} B;
	int I;
	unsigned int U;

} DMA_CHCFGR000_type;
#define DMA_CHCFGR000	(*( DMA_CHCFGR000_type *) 0xf0012014u)	/* DMA Channel Configuration Register 000 */
#define DMA_CHCFGR001	(*( DMA_CHCFGR000_type *) 0xf0012034u)	/* DMA Channel Configuration Register 001 */
#define DMA_CHCFGR002	(*( DMA_CHCFGR000_type *) 0xf0012054u)	/* DMA Channel Configuration Register 002 */
#define DMA_CHCFGR003	(*( DMA_CHCFGR000_type *) 0xf0012074u)	/* DMA Channel Configuration Register 003 */
#define DMA_CHCFGR004	(*( DMA_CHCFGR000_type *) 0xf0012094u)	/* DMA Channel Configuration Register 004 */
#define DMA_CHCFGR005	(*( DMA_CHCFGR000_type *) 0xf00120b4u)	/* DMA Channel Configuration Register 005 */
#define DMA_CHCFGR006	(*( DMA_CHCFGR000_type *) 0xf00120d4u)	/* DMA Channel Configuration Register 006 */
#define DMA_CHCFGR007	(*( DMA_CHCFGR000_type *) 0xf00120f4u)	/* DMA Channel Configuration Register 007 */
#define DMA_CHCFGR008	(*( DMA_CHCFGR000_type *) 0xf0012114u)	/* DMA Channel Configuration Register 008 */
#define DMA_CHCFGR009	(*( DMA_CHCFGR000_type *) 0xf0012134u)	/* DMA Channel Configuration Register 009 */
#define DMA_CHCFGR010	(*( DMA_CHCFGR000_type *) 0xf0012154u)	/* DMA Channel Configuration Register 010 */
#define DMA_CHCFGR011	(*( DMA_CHCFGR000_type *) 0xf0012174u)	/* DMA Channel Configuration Register 011 */
#define DMA_CHCFGR012	(*( DMA_CHCFGR000_type *) 0xf0012194u)	/* DMA Channel Configuration Register 012 */
#define DMA_CHCFGR013	(*( DMA_CHCFGR000_type *) 0xf00121b4u)	/* DMA Channel Configuration Register 013 */
#define DMA_CHCFGR014	(*( DMA_CHCFGR000_type *) 0xf00121d4u)	/* DMA Channel Configuration Register 014 */
#define DMA_CHCFGR015	(*( DMA_CHCFGR000_type *) 0xf00121f4u)	/* DMA Channel Configuration Register 015 */
#define DMA_CHCFGR016	(*( DMA_CHCFGR000_type *) 0xf0012214u)	/* DMA Channel Configuration Register 016 */
#define DMA_CHCFGR017	(*( DMA_CHCFGR000_type *) 0xf0012234u)	/* DMA Channel Configuration Register 017 */
#define DMA_CHCFGR018	(*( DMA_CHCFGR000_type *) 0xf0012254u)	/* DMA Channel Configuration Register 018 */
#define DMA_CHCFGR019	(*( DMA_CHCFGR000_type *) 0xf0012274u)	/* DMA Channel Configuration Register 019 */
#define DMA_CHCFGR020	(*( DMA_CHCFGR000_type *) 0xf0012294u)	/* DMA Channel Configuration Register 020 */
#define DMA_CHCFGR021	(*( DMA_CHCFGR000_type *) 0xf00122b4u)	/* DMA Channel Configuration Register 021 */
#define DMA_CHCFGR022	(*( DMA_CHCFGR000_type *) 0xf00122d4u)	/* DMA Channel Configuration Register 022 */
#define DMA_CHCFGR023	(*( DMA_CHCFGR000_type *) 0xf00122f4u)	/* DMA Channel Configuration Register 023 */
#define DMA_CHCFGR024	(*( DMA_CHCFGR000_type *) 0xf0012314u)	/* DMA Channel Configuration Register 024 */
#define DMA_CHCFGR025	(*( DMA_CHCFGR000_type *) 0xf0012334u)	/* DMA Channel Configuration Register 025 */
#define DMA_CHCFGR026	(*( DMA_CHCFGR000_type *) 0xf0012354u)	/* DMA Channel Configuration Register 026 */
#define DMA_CHCFGR027	(*( DMA_CHCFGR000_type *) 0xf0012374u)	/* DMA Channel Configuration Register 027 */
#define DMA_CHCFGR028	(*( DMA_CHCFGR000_type *) 0xf0012394u)	/* DMA Channel Configuration Register 028 */
#define DMA_CHCFGR029	(*( DMA_CHCFGR000_type *) 0xf00123b4u)	/* DMA Channel Configuration Register 029 */
#define DMA_CHCFGR030	(*( DMA_CHCFGR000_type *) 0xf00123d4u)	/* DMA Channel Configuration Register 030 */
#define DMA_CHCFGR031	(*( DMA_CHCFGR000_type *) 0xf00123f4u)	/* DMA Channel Configuration Register 031 */
#define DMA_CHCFGR032	(*( DMA_CHCFGR000_type *) 0xf0012414u)	/* DMA Channel Configuration Register 032 */
#define DMA_CHCFGR033	(*( DMA_CHCFGR000_type *) 0xf0012434u)	/* DMA Channel Configuration Register 033 */
#define DMA_CHCFGR034	(*( DMA_CHCFGR000_type *) 0xf0012454u)	/* DMA Channel Configuration Register 034 */
#define DMA_CHCFGR035	(*( DMA_CHCFGR000_type *) 0xf0012474u)	/* DMA Channel Configuration Register 035 */
#define DMA_CHCFGR036	(*( DMA_CHCFGR000_type *) 0xf0012494u)	/* DMA Channel Configuration Register 036 */
#define DMA_CHCFGR037	(*( DMA_CHCFGR000_type *) 0xf00124b4u)	/* DMA Channel Configuration Register 037 */
#define DMA_CHCFGR038	(*( DMA_CHCFGR000_type *) 0xf00124d4u)	/* DMA Channel Configuration Register 038 */
#define DMA_CHCFGR039	(*( DMA_CHCFGR000_type *) 0xf00124f4u)	/* DMA Channel Configuration Register 039 */
#define DMA_CHCFGR040	(*( DMA_CHCFGR000_type *) 0xf0012514u)	/* DMA Channel Configuration Register 040 */
#define DMA_CHCFGR041	(*( DMA_CHCFGR000_type *) 0xf0012534u)	/* DMA Channel Configuration Register 041 */
#define DMA_CHCFGR042	(*( DMA_CHCFGR000_type *) 0xf0012554u)	/* DMA Channel Configuration Register 042 */
#define DMA_CHCFGR043	(*( DMA_CHCFGR000_type *) 0xf0012574u)	/* DMA Channel Configuration Register 043 */
#define DMA_CHCFGR044	(*( DMA_CHCFGR000_type *) 0xf0012594u)	/* DMA Channel Configuration Register 044 */
#define DMA_CHCFGR045	(*( DMA_CHCFGR000_type *) 0xf00125b4u)	/* DMA Channel Configuration Register 045 */
#define DMA_CHCFGR046	(*( DMA_CHCFGR000_type *) 0xf00125d4u)	/* DMA Channel Configuration Register 046 */
#define DMA_CHCFGR047	(*( DMA_CHCFGR000_type *) 0xf00125f4u)	/* DMA Channel Configuration Register 047 */
#define DMA_CHCFGR048	(*( DMA_CHCFGR000_type *) 0xf0012614u)	/* DMA Channel Configuration Register 048 */
#define DMA_CHCFGR049	(*( DMA_CHCFGR000_type *) 0xf0012634u)	/* DMA Channel Configuration Register 049 */
#define DMA_CHCFGR050	(*( DMA_CHCFGR000_type *) 0xf0012654u)	/* DMA Channel Configuration Register 050 */
#define DMA_CHCFGR051	(*( DMA_CHCFGR000_type *) 0xf0012674u)	/* DMA Channel Configuration Register 051 */
#define DMA_CHCFGR052	(*( DMA_CHCFGR000_type *) 0xf0012694u)	/* DMA Channel Configuration Register 052 */
#define DMA_CHCFGR053	(*( DMA_CHCFGR000_type *) 0xf00126b4u)	/* DMA Channel Configuration Register 053 */
#define DMA_CHCFGR054	(*( DMA_CHCFGR000_type *) 0xf00126d4u)	/* DMA Channel Configuration Register 054 */
#define DMA_CHCFGR055	(*( DMA_CHCFGR000_type *) 0xf00126f4u)	/* DMA Channel Configuration Register 055 */
#define DMA_CHCFGR056	(*( DMA_CHCFGR000_type *) 0xf0012714u)	/* DMA Channel Configuration Register 056 */
#define DMA_CHCFGR057	(*( DMA_CHCFGR000_type *) 0xf0012734u)	/* DMA Channel Configuration Register 057 */
#define DMA_CHCFGR058	(*( DMA_CHCFGR000_type *) 0xf0012754u)	/* DMA Channel Configuration Register 058 */
#define DMA_CHCFGR059	(*( DMA_CHCFGR000_type *) 0xf0012774u)	/* DMA Channel Configuration Register 059 */
#define DMA_CHCFGR060	(*( DMA_CHCFGR000_type *) 0xf0012794u)	/* DMA Channel Configuration Register 060 */
#define DMA_CHCFGR061	(*( DMA_CHCFGR000_type *) 0xf00127b4u)	/* DMA Channel Configuration Register 061 */
#define DMA_CHCFGR062	(*( DMA_CHCFGR000_type *) 0xf00127d4u)	/* DMA Channel Configuration Register 062 */
#define DMA_CHCFGR063	(*( DMA_CHCFGR000_type *) 0xf00127f4u)	/* DMA Channel Configuration Register 063 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int TCOUNT         : 14;	/* Transfer Count Status */
		/* const */ unsigned int RES            : 1;	/* Reserved */
		/* const */ unsigned int LXO            : 1;	/* Old Value of Pattern Detection */
		/* const */ unsigned int WRPS           : 1;	/* Wrap Source Buffer */
		/* const */ unsigned int WRPD           : 1;	/* Wrap Destination Buffer */
		/* const */ unsigned int ICH            : 1;	/* Interrupt from Channel */
		/* const */ unsigned int IPM            : 1;	/* Pattern Detection from Channel */
		/* const */ unsigned int RES_8          : 2;	/* Reserved */
		/* const */ unsigned int BUFFER         : 1;	/* DMA Double Buffering Active Buffer */
		unsigned int FROZEN         : 1;	/* DMA Double Buffering Frozen Buffer */
		unsigned int SWB            : 1;	/* DMA Double Buffering Switch Buffer */
		unsigned int CWRP           : 1;	/* Clear Wrap Buffer Interrupt z */
		unsigned int CICH           : 1;	/* Clear Interrupt for DMA Channel z */
		unsigned int SIT            : 1;	/* Set Interrupt Trigger for DMA Channel z */
		/* const */ unsigned int RES_15         : 3;	/* Reserved */
		unsigned int SCH            : 1;	/* Set Transaction Request for DMA Channel */
	} B;
	int I;
	unsigned int U;

} DMA_CHCSR000_type;
#define DMA_CHCSR000	(*( DMA_CHCSR000_type *) 0xf001201cu)	/* DMARAM Channel Control and Status Register 000 */
#define DMA_CHCSR001	(*( DMA_CHCSR000_type *) 0xf001203cu)	/* DMARAM Channel Control and Status Register 001 */
#define DMA_CHCSR002	(*( DMA_CHCSR000_type *) 0xf001205cu)	/* DMARAM Channel Control and Status Register 002 */
#define DMA_CHCSR003	(*( DMA_CHCSR000_type *) 0xf001207cu)	/* DMARAM Channel Control and Status Register 003 */
#define DMA_CHCSR004	(*( DMA_CHCSR000_type *) 0xf001209cu)	/* DMARAM Channel Control and Status Register 004 */
#define DMA_CHCSR005	(*( DMA_CHCSR000_type *) 0xf00120bcu)	/* DMARAM Channel Control and Status Register 005 */
#define DMA_CHCSR006	(*( DMA_CHCSR000_type *) 0xf00120dcu)	/* DMARAM Channel Control and Status Register 006 */
#define DMA_CHCSR007	(*( DMA_CHCSR000_type *) 0xf00120fcu)	/* DMARAM Channel Control and Status Register 007 */
#define DMA_CHCSR008	(*( DMA_CHCSR000_type *) 0xf001211cu)	/* DMARAM Channel Control and Status Register 008 */
#define DMA_CHCSR009	(*( DMA_CHCSR000_type *) 0xf001213cu)	/* DMARAM Channel Control and Status Register 009 */
#define DMA_CHCSR010	(*( DMA_CHCSR000_type *) 0xf001215cu)	/* DMARAM Channel Control and Status Register 010 */
#define DMA_CHCSR011	(*( DMA_CHCSR000_type *) 0xf001217cu)	/* DMARAM Channel Control and Status Register 011 */
#define DMA_CHCSR012	(*( DMA_CHCSR000_type *) 0xf001219cu)	/* DMARAM Channel Control and Status Register 012 */
#define DMA_CHCSR013	(*( DMA_CHCSR000_type *) 0xf00121bcu)	/* DMARAM Channel Control and Status Register 013 */
#define DMA_CHCSR014	(*( DMA_CHCSR000_type *) 0xf00121dcu)	/* DMARAM Channel Control and Status Register 014 */
#define DMA_CHCSR015	(*( DMA_CHCSR000_type *) 0xf00121fcu)	/* DMARAM Channel Control and Status Register 015 */
#define DMA_CHCSR016	(*( DMA_CHCSR000_type *) 0xf001221cu)	/* DMARAM Channel Control and Status Register 016 */
#define DMA_CHCSR017	(*( DMA_CHCSR000_type *) 0xf001223cu)	/* DMARAM Channel Control and Status Register 017 */
#define DMA_CHCSR018	(*( DMA_CHCSR000_type *) 0xf001225cu)	/* DMARAM Channel Control and Status Register 018 */
#define DMA_CHCSR019	(*( DMA_CHCSR000_type *) 0xf001227cu)	/* DMARAM Channel Control and Status Register 019 */
#define DMA_CHCSR020	(*( DMA_CHCSR000_type *) 0xf001229cu)	/* DMARAM Channel Control and Status Register 020 */
#define DMA_CHCSR021	(*( DMA_CHCSR000_type *) 0xf00122bcu)	/* DMARAM Channel Control and Status Register 021 */
#define DMA_CHCSR022	(*( DMA_CHCSR000_type *) 0xf00122dcu)	/* DMARAM Channel Control and Status Register 022 */
#define DMA_CHCSR023	(*( DMA_CHCSR000_type *) 0xf00122fcu)	/* DMARAM Channel Control and Status Register 023 */
#define DMA_CHCSR024	(*( DMA_CHCSR000_type *) 0xf001231cu)	/* DMARAM Channel Control and Status Register 024 */
#define DMA_CHCSR025	(*( DMA_CHCSR000_type *) 0xf001233cu)	/* DMARAM Channel Control and Status Register 025 */
#define DMA_CHCSR026	(*( DMA_CHCSR000_type *) 0xf001235cu)	/* DMARAM Channel Control and Status Register 026 */
#define DMA_CHCSR027	(*( DMA_CHCSR000_type *) 0xf001237cu)	/* DMARAM Channel Control and Status Register 027 */
#define DMA_CHCSR028	(*( DMA_CHCSR000_type *) 0xf001239cu)	/* DMARAM Channel Control and Status Register 028 */
#define DMA_CHCSR029	(*( DMA_CHCSR000_type *) 0xf00123bcu)	/* DMARAM Channel Control and Status Register 029 */
#define DMA_CHCSR030	(*( DMA_CHCSR000_type *) 0xf00123dcu)	/* DMARAM Channel Control and Status Register 030 */
#define DMA_CHCSR031	(*( DMA_CHCSR000_type *) 0xf00123fcu)	/* DMARAM Channel Control and Status Register 031 */
#define DMA_CHCSR032	(*( DMA_CHCSR000_type *) 0xf001241cu)	/* DMARAM Channel Control and Status Register 032 */
#define DMA_CHCSR033	(*( DMA_CHCSR000_type *) 0xf001243cu)	/* DMARAM Channel Control and Status Register 033 */
#define DMA_CHCSR034	(*( DMA_CHCSR000_type *) 0xf001245cu)	/* DMARAM Channel Control and Status Register 034 */
#define DMA_CHCSR035	(*( DMA_CHCSR000_type *) 0xf001247cu)	/* DMARAM Channel Control and Status Register 035 */
#define DMA_CHCSR036	(*( DMA_CHCSR000_type *) 0xf001249cu)	/* DMARAM Channel Control and Status Register 036 */
#define DMA_CHCSR037	(*( DMA_CHCSR000_type *) 0xf00124bcu)	/* DMARAM Channel Control and Status Register 037 */
#define DMA_CHCSR038	(*( DMA_CHCSR000_type *) 0xf00124dcu)	/* DMARAM Channel Control and Status Register 038 */
#define DMA_CHCSR039	(*( DMA_CHCSR000_type *) 0xf00124fcu)	/* DMARAM Channel Control and Status Register 039 */
#define DMA_CHCSR040	(*( DMA_CHCSR000_type *) 0xf001251cu)	/* DMARAM Channel Control and Status Register 040 */
#define DMA_CHCSR041	(*( DMA_CHCSR000_type *) 0xf001253cu)	/* DMARAM Channel Control and Status Register 041 */
#define DMA_CHCSR042	(*( DMA_CHCSR000_type *) 0xf001255cu)	/* DMARAM Channel Control and Status Register 042 */
#define DMA_CHCSR043	(*( DMA_CHCSR000_type *) 0xf001257cu)	/* DMARAM Channel Control and Status Register 043 */
#define DMA_CHCSR044	(*( DMA_CHCSR000_type *) 0xf001259cu)	/* DMARAM Channel Control and Status Register 044 */
#define DMA_CHCSR045	(*( DMA_CHCSR000_type *) 0xf00125bcu)	/* DMARAM Channel Control and Status Register 045 */
#define DMA_CHCSR046	(*( DMA_CHCSR000_type *) 0xf00125dcu)	/* DMARAM Channel Control and Status Register 046 */
#define DMA_CHCSR047	(*( DMA_CHCSR000_type *) 0xf00125fcu)	/* DMARAM Channel Control and Status Register 047 */
#define DMA_CHCSR048	(*( DMA_CHCSR000_type *) 0xf001261cu)	/* DMARAM Channel Control and Status Register 048 */
#define DMA_CHCSR049	(*( DMA_CHCSR000_type *) 0xf001263cu)	/* DMARAM Channel Control and Status Register 049 */
#define DMA_CHCSR050	(*( DMA_CHCSR000_type *) 0xf001265cu)	/* DMARAM Channel Control and Status Register 050 */
#define DMA_CHCSR051	(*( DMA_CHCSR000_type *) 0xf001267cu)	/* DMARAM Channel Control and Status Register 051 */
#define DMA_CHCSR052	(*( DMA_CHCSR000_type *) 0xf001269cu)	/* DMARAM Channel Control and Status Register 052 */
#define DMA_CHCSR053	(*( DMA_CHCSR000_type *) 0xf00126bcu)	/* DMARAM Channel Control and Status Register 053 */
#define DMA_CHCSR054	(*( DMA_CHCSR000_type *) 0xf00126dcu)	/* DMARAM Channel Control and Status Register 054 */
#define DMA_CHCSR055	(*( DMA_CHCSR000_type *) 0xf00126fcu)	/* DMARAM Channel Control and Status Register 055 */
#define DMA_CHCSR056	(*( DMA_CHCSR000_type *) 0xf001271cu)	/* DMARAM Channel Control and Status Register 056 */
#define DMA_CHCSR057	(*( DMA_CHCSR000_type *) 0xf001273cu)	/* DMARAM Channel Control and Status Register 057 */
#define DMA_CHCSR058	(*( DMA_CHCSR000_type *) 0xf001275cu)	/* DMARAM Channel Control and Status Register 058 */
#define DMA_CHCSR059	(*( DMA_CHCSR000_type *) 0xf001277cu)	/* DMARAM Channel Control and Status Register 059 */
#define DMA_CHCSR060	(*( DMA_CHCSR000_type *) 0xf001279cu)	/* DMARAM Channel Control and Status Register 060 */
#define DMA_CHCSR061	(*( DMA_CHCSR000_type *) 0xf00127bcu)	/* DMARAM Channel Control and Status Register 061 */
#define DMA_CHCSR062	(*( DMA_CHCSR000_type *) 0xf00127dcu)	/* DMARAM Channel Control and Status Register 062 */
#define DMA_CHCSR063	(*( DMA_CHCSR000_type *) 0xf00127fcu)	/* DMARAM Channel Control and Status Register 063 */

typedef volatile union
{
	struct
	{ 
		unsigned int DISR           : 1;	/* Module Disable Request Bit */
		/* const */ unsigned int DISS           : 1;	/* Module Disable Status Bit */
		/* const */ unsigned int RES            : 1;	/* Reserved */
		unsigned int EDIS           : 1;	/* Sleep Mode Enable Control */
		/* const */ unsigned int RES_5          : 28;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} DMA_CLC_type;
#define DMA_CLC	(*( DMA_CLC_type *) 0xf0010000u)	/* DMA Clock Control Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int RES            : 16;	/* Reserved */
		unsigned int CSER           : 1;	/* Clear Move Engine x Source Error */
		unsigned int CDER           : 1;	/* Clear Move Engine x Destination Error */
		/* const */ unsigned int RES_4          : 2;	/* Reserved */
		unsigned int CSPBER         : 1;	/* Clear SPB Error */
		unsigned int CSRIER         : 1;	/* Clear SRI Error */
		/* const */ unsigned int RES_7          : 2;	/* Reserved */
		unsigned int CRAMER         : 1;	/* Clear RAM Error */
		unsigned int CSLLER         : 1;	/* Clear SLL Error */
		unsigned int CDLLER         : 1;	/* Clear DLL Error */
		/* const */ unsigned int RES_11         : 5;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} DMA_CLRE0_type;
#define DMA_CLRE0	(*( DMA_CLRE0_type *) 0xf0010128u)	/* DMA Clear Error Register 0 */
#define DMA_CLRE1	(*( DMA_CLRE0_type *) 0xf0011128u)	/* DMA Clear Error Register 1 */

typedef volatile union
{
	struct
	{ 
		unsigned int DADR           : 32;	/* Destination Address */
	} B;
	int I;
	unsigned int U;

} DMA_DADR000_type;
#define DMA_DADR000	(*( DMA_DADR000_type *) 0xf001200cu)	/* DMA Channel Destination Address Register x */
#define DMA_DADR001	(*( DMA_DADR000_type *) 0xf001202cu)	/* DMA Channel Destination Address Register x */
#define DMA_DADR002	(*( DMA_DADR000_type *) 0xf001204cu)	/* DMA Channel Destination Address Register x */
#define DMA_DADR003	(*( DMA_DADR000_type *) 0xf001206cu)	/* DMA Channel Destination Address Register x */
#define DMA_DADR004	(*( DMA_DADR000_type *) 0xf001208cu)	/* DMA Channel Destination Address Register x */
#define DMA_DADR005	(*( DMA_DADR000_type *) 0xf00120acu)	/* DMA Channel Destination Address Register x */
#define DMA_DADR006	(*( DMA_DADR000_type *) 0xf00120ccu)	/* DMA Channel Destination Address Register x */
#define DMA_DADR007	(*( DMA_DADR000_type *) 0xf00120ecu)	/* DMA Channel Destination Address Register x */
#define DMA_DADR008	(*( DMA_DADR000_type *) 0xf001210cu)	/* DMA Channel Destination Address Register x */
#define DMA_DADR009	(*( DMA_DADR000_type *) 0xf001212cu)	/* DMA Channel Destination Address Register x */
#define DMA_DADR010	(*( DMA_DADR000_type *) 0xf001214cu)	/* DMA Channel Destination Address Register x */
#define DMA_DADR011	(*( DMA_DADR000_type *) 0xf001216cu)	/* DMA Channel Destination Address Register x */
#define DMA_DADR012	(*( DMA_DADR000_type *) 0xf001218cu)	/* DMA Channel Destination Address Register x */
#define DMA_DADR013	(*( DMA_DADR000_type *) 0xf00121acu)	/* DMA Channel Destination Address Register x */
#define DMA_DADR014	(*( DMA_DADR000_type *) 0xf00121ccu)	/* DMA Channel Destination Address Register x */
#define DMA_DADR015	(*( DMA_DADR000_type *) 0xf00121ecu)	/* DMA Channel Destination Address Register x */
#define DMA_DADR016	(*( DMA_DADR000_type *) 0xf001220cu)	/* DMA Channel Destination Address Register x */
#define DMA_DADR017	(*( DMA_DADR000_type *) 0xf001222cu)	/* DMA Channel Destination Address Register x */
#define DMA_DADR018	(*( DMA_DADR000_type *) 0xf001224cu)	/* DMA Channel Destination Address Register x */
#define DMA_DADR019	(*( DMA_DADR000_type *) 0xf001226cu)	/* DMA Channel Destination Address Register x */
#define DMA_DADR020	(*( DMA_DADR000_type *) 0xf001228cu)	/* DMA Channel Destination Address Register x */
#define DMA_DADR021	(*( DMA_DADR000_type *) 0xf00122acu)	/* DMA Channel Destination Address Register x */
#define DMA_DADR022	(*( DMA_DADR000_type *) 0xf00122ccu)	/* DMA Channel Destination Address Register x */
#define DMA_DADR023	(*( DMA_DADR000_type *) 0xf00122ecu)	/* DMA Channel Destination Address Register x */
#define DMA_DADR024	(*( DMA_DADR000_type *) 0xf001230cu)	/* DMA Channel Destination Address Register x */
#define DMA_DADR025	(*( DMA_DADR000_type *) 0xf001232cu)	/* DMA Channel Destination Address Register x */
#define DMA_DADR026	(*( DMA_DADR000_type *) 0xf001234cu)	/* DMA Channel Destination Address Register x */
#define DMA_DADR027	(*( DMA_DADR000_type *) 0xf001236cu)	/* DMA Channel Destination Address Register x */
#define DMA_DADR028	(*( DMA_DADR000_type *) 0xf001238cu)	/* DMA Channel Destination Address Register x */
#define DMA_DADR029	(*( DMA_DADR000_type *) 0xf00123acu)	/* DMA Channel Destination Address Register x */
#define DMA_DADR030	(*( DMA_DADR000_type *) 0xf00123ccu)	/* DMA Channel Destination Address Register x */
#define DMA_DADR031	(*( DMA_DADR000_type *) 0xf00123ecu)	/* DMA Channel Destination Address Register x */
#define DMA_DADR032	(*( DMA_DADR000_type *) 0xf001240cu)	/* DMA Channel Destination Address Register x */
#define DMA_DADR033	(*( DMA_DADR000_type *) 0xf001242cu)	/* DMA Channel Destination Address Register x */
#define DMA_DADR034	(*( DMA_DADR000_type *) 0xf001244cu)	/* DMA Channel Destination Address Register x */
#define DMA_DADR035	(*( DMA_DADR000_type *) 0xf001246cu)	/* DMA Channel Destination Address Register x */
#define DMA_DADR036	(*( DMA_DADR000_type *) 0xf001248cu)	/* DMA Channel Destination Address Register x */
#define DMA_DADR037	(*( DMA_DADR000_type *) 0xf00124acu)	/* DMA Channel Destination Address Register x */
#define DMA_DADR038	(*( DMA_DADR000_type *) 0xf00124ccu)	/* DMA Channel Destination Address Register x */
#define DMA_DADR039	(*( DMA_DADR000_type *) 0xf00124ecu)	/* DMA Channel Destination Address Register x */
#define DMA_DADR040	(*( DMA_DADR000_type *) 0xf001250cu)	/* DMA Channel Destination Address Register x */
#define DMA_DADR041	(*( DMA_DADR000_type *) 0xf001252cu)	/* DMA Channel Destination Address Register x */
#define DMA_DADR042	(*( DMA_DADR000_type *) 0xf001254cu)	/* DMA Channel Destination Address Register x */
#define DMA_DADR043	(*( DMA_DADR000_type *) 0xf001256cu)	/* DMA Channel Destination Address Register x */
#define DMA_DADR044	(*( DMA_DADR000_type *) 0xf001258cu)	/* DMA Channel Destination Address Register x */
#define DMA_DADR045	(*( DMA_DADR000_type *) 0xf00125acu)	/* DMA Channel Destination Address Register x */
#define DMA_DADR046	(*( DMA_DADR000_type *) 0xf00125ccu)	/* DMA Channel Destination Address Register x */
#define DMA_DADR047	(*( DMA_DADR000_type *) 0xf00125ecu)	/* DMA Channel Destination Address Register x */
#define DMA_DADR048	(*( DMA_DADR000_type *) 0xf001260cu)	/* DMA Channel Destination Address Register x */
#define DMA_DADR049	(*( DMA_DADR000_type *) 0xf001262cu)	/* DMA Channel Destination Address Register x */
#define DMA_DADR050	(*( DMA_DADR000_type *) 0xf001264cu)	/* DMA Channel Destination Address Register x */
#define DMA_DADR051	(*( DMA_DADR000_type *) 0xf001266cu)	/* DMA Channel Destination Address Register x */
#define DMA_DADR052	(*( DMA_DADR000_type *) 0xf001268cu)	/* DMA Channel Destination Address Register x */
#define DMA_DADR053	(*( DMA_DADR000_type *) 0xf00126acu)	/* DMA Channel Destination Address Register x */
#define DMA_DADR054	(*( DMA_DADR000_type *) 0xf00126ccu)	/* DMA Channel Destination Address Register x */
#define DMA_DADR055	(*( DMA_DADR000_type *) 0xf00126ecu)	/* DMA Channel Destination Address Register x */
#define DMA_DADR056	(*( DMA_DADR000_type *) 0xf001270cu)	/* DMA Channel Destination Address Register x */
#define DMA_DADR057	(*( DMA_DADR000_type *) 0xf001272cu)	/* DMA Channel Destination Address Register x */
#define DMA_DADR058	(*( DMA_DADR000_type *) 0xf001274cu)	/* DMA Channel Destination Address Register x */
#define DMA_DADR059	(*( DMA_DADR000_type *) 0xf001276cu)	/* DMA Channel Destination Address Register x */
#define DMA_DADR060	(*( DMA_DADR000_type *) 0xf001278cu)	/* DMA Channel Destination Address Register x */
#define DMA_DADR061	(*( DMA_DADR000_type *) 0xf00127acu)	/* DMA Channel Destination Address Register x */
#define DMA_DADR062	(*( DMA_DADR000_type *) 0xf00127ccu)	/* DMA Channel Destination Address Register x */
#define DMA_DADR063	(*( DMA_DADR000_type *) 0xf00127ecu)	/* DMA Channel Destination Address Register x */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int RES            : 16;	/* Reserved */
		unsigned int ESER           : 1;	/* Enable Move Engine x Source Error */
		unsigned int EDER           : 1;	/* Enable Move Engine x Destination Error */
		/* const */ unsigned int RES_4          : 6;	/* Reserved */
		unsigned int ERER           : 1;	/* Enable Move Engine x RAM Error */
		/* const */ unsigned int RES_6          : 1;	/* Reserved */
		unsigned int ELER           : 1;	/* Enable Move Engine x DMA Linked List Error */
		/* const */ unsigned int RES_8          : 5;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} DMA_EER0_type;
#define DMA_EER0	(*( DMA_EER0_type *) 0xf0010120u)	/* DMA Enable Error Register 0 */
#define DMA_EER1	(*( DMA_EER0_type *) 0xf0011120u)	/* DMA Enable Error Register 1 */

typedef volatile union
{
	struct
	{ 
		unsigned int SIT            : 1;	/* Set Error Interrupt Service Request */
		/* const */ unsigned int RES            : 31;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} DMA_ERRINTR_type;
#define DMA_ERRINTR	(*( DMA_ERRINTR_type *) 0xf0011204u)	/* DMA Error Interrupt Set Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int LEC            : 7;	/* Move Engine x Last Error Channel */
		/* const */ unsigned int RES            : 9;	/* Reserved */
		/* const */ unsigned int SER            : 1;	/* Move Engine x Source Error */
		/* const */ unsigned int DER            : 1;	/* Move Engine x Destination Error */
		/* const */ unsigned int RES_5          : 2;	/* Reserved */
		/* const */ unsigned int SPBER          : 1;	/* Move Engine x SPB Bus Error */
		/* const */ unsigned int SRIER          : 1;	/* Move Engine x SRI Bus Error */
		/* const */ unsigned int RES_8          : 2;	/* Reserved */
		/* const */ unsigned int RAMER          : 1;	/* Move Engine x RAM Error */
		/* const */ unsigned int SLLER          : 1;	/* Move Engine x Safe Linked List Error */
		/* const */ unsigned int DLLER          : 1;	/* Move Engine x DMA Linked List Error */
		/* const */ unsigned int RES_12         : 5;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} DMA_ERRSR0_type;
#define DMA_ERRSR0	(*( DMA_ERRSR0_type *) 0xf0010124u)	/* DMA Error Status Register 0 */
#define DMA_ERRSR1	(*( DMA_ERRSR0_type *) 0xf0011124u)	/* DMA Error Status Register 1 */

typedef volatile union
{
	struct
	{ 
		unsigned int HRP            : 2;	/* Hardware Resource Partition y */
		/* const */ unsigned int RES            : 30;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} DMA_HRR000_type;
#define DMA_HRR000	(*( DMA_HRR000_type *) 0xf0011800u)	/* DMA Channel Hardware Resource Register 000 */
#define DMA_HRR001	(*( DMA_HRR000_type *) 0xf0011804u)	/* DMA Channel Hardware Resource Register 001 */
#define DMA_HRR002	(*( DMA_HRR000_type *) 0xf0011808u)	/* DMA Channel Hardware Resource Register 002 */
#define DMA_HRR003	(*( DMA_HRR000_type *) 0xf001180cu)	/* DMA Channel Hardware Resource Register 003 */
#define DMA_HRR004	(*( DMA_HRR000_type *) 0xf0011810u)	/* DMA Channel Hardware Resource Register 004 */
#define DMA_HRR005	(*( DMA_HRR000_type *) 0xf0011814u)	/* DMA Channel Hardware Resource Register 005 */
#define DMA_HRR006	(*( DMA_HRR000_type *) 0xf0011818u)	/* DMA Channel Hardware Resource Register 006 */
#define DMA_HRR007	(*( DMA_HRR000_type *) 0xf001181cu)	/* DMA Channel Hardware Resource Register 007 */
#define DMA_HRR008	(*( DMA_HRR000_type *) 0xf0011820u)	/* DMA Channel Hardware Resource Register 008 */
#define DMA_HRR009	(*( DMA_HRR000_type *) 0xf0011824u)	/* DMA Channel Hardware Resource Register 009 */
#define DMA_HRR010	(*( DMA_HRR000_type *) 0xf0011828u)	/* DMA Channel Hardware Resource Register 010 */
#define DMA_HRR011	(*( DMA_HRR000_type *) 0xf001182cu)	/* DMA Channel Hardware Resource Register 011 */
#define DMA_HRR012	(*( DMA_HRR000_type *) 0xf0011830u)	/* DMA Channel Hardware Resource Register 012 */
#define DMA_HRR013	(*( DMA_HRR000_type *) 0xf0011834u)	/* DMA Channel Hardware Resource Register 013 */
#define DMA_HRR014	(*( DMA_HRR000_type *) 0xf0011838u)	/* DMA Channel Hardware Resource Register 014 */
#define DMA_HRR015	(*( DMA_HRR000_type *) 0xf001183cu)	/* DMA Channel Hardware Resource Register 015 */
#define DMA_HRR016	(*( DMA_HRR000_type *) 0xf0011840u)	/* DMA Channel Hardware Resource Register 016 */
#define DMA_HRR017	(*( DMA_HRR000_type *) 0xf0011844u)	/* DMA Channel Hardware Resource Register 017 */
#define DMA_HRR018	(*( DMA_HRR000_type *) 0xf0011848u)	/* DMA Channel Hardware Resource Register 018 */
#define DMA_HRR019	(*( DMA_HRR000_type *) 0xf001184cu)	/* DMA Channel Hardware Resource Register 019 */
#define DMA_HRR020	(*( DMA_HRR000_type *) 0xf0011850u)	/* DMA Channel Hardware Resource Register 020 */
#define DMA_HRR021	(*( DMA_HRR000_type *) 0xf0011854u)	/* DMA Channel Hardware Resource Register 021 */
#define DMA_HRR022	(*( DMA_HRR000_type *) 0xf0011858u)	/* DMA Channel Hardware Resource Register 022 */
#define DMA_HRR023	(*( DMA_HRR000_type *) 0xf001185cu)	/* DMA Channel Hardware Resource Register 023 */
#define DMA_HRR024	(*( DMA_HRR000_type *) 0xf0011860u)	/* DMA Channel Hardware Resource Register 024 */
#define DMA_HRR025	(*( DMA_HRR000_type *) 0xf0011864u)	/* DMA Channel Hardware Resource Register 025 */
#define DMA_HRR026	(*( DMA_HRR000_type *) 0xf0011868u)	/* DMA Channel Hardware Resource Register 026 */
#define DMA_HRR027	(*( DMA_HRR000_type *) 0xf001186cu)	/* DMA Channel Hardware Resource Register 027 */
#define DMA_HRR028	(*( DMA_HRR000_type *) 0xf0011870u)	/* DMA Channel Hardware Resource Register 028 */
#define DMA_HRR029	(*( DMA_HRR000_type *) 0xf0011874u)	/* DMA Channel Hardware Resource Register 029 */
#define DMA_HRR030	(*( DMA_HRR000_type *) 0xf0011878u)	/* DMA Channel Hardware Resource Register 030 */
#define DMA_HRR031	(*( DMA_HRR000_type *) 0xf001187cu)	/* DMA Channel Hardware Resource Register 031 */
#define DMA_HRR032	(*( DMA_HRR000_type *) 0xf0011880u)	/* DMA Channel Hardware Resource Register 032 */
#define DMA_HRR033	(*( DMA_HRR000_type *) 0xf0011884u)	/* DMA Channel Hardware Resource Register 033 */
#define DMA_HRR034	(*( DMA_HRR000_type *) 0xf0011888u)	/* DMA Channel Hardware Resource Register 034 */
#define DMA_HRR035	(*( DMA_HRR000_type *) 0xf001188cu)	/* DMA Channel Hardware Resource Register 035 */
#define DMA_HRR036	(*( DMA_HRR000_type *) 0xf0011890u)	/* DMA Channel Hardware Resource Register 036 */
#define DMA_HRR037	(*( DMA_HRR000_type *) 0xf0011894u)	/* DMA Channel Hardware Resource Register 037 */
#define DMA_HRR038	(*( DMA_HRR000_type *) 0xf0011898u)	/* DMA Channel Hardware Resource Register 038 */
#define DMA_HRR039	(*( DMA_HRR000_type *) 0xf001189cu)	/* DMA Channel Hardware Resource Register 039 */
#define DMA_HRR040	(*( DMA_HRR000_type *) 0xf00118a0u)	/* DMA Channel Hardware Resource Register 040 */
#define DMA_HRR041	(*( DMA_HRR000_type *) 0xf00118a4u)	/* DMA Channel Hardware Resource Register 041 */
#define DMA_HRR042	(*( DMA_HRR000_type *) 0xf00118a8u)	/* DMA Channel Hardware Resource Register 042 */
#define DMA_HRR043	(*( DMA_HRR000_type *) 0xf00118acu)	/* DMA Channel Hardware Resource Register 043 */
#define DMA_HRR044	(*( DMA_HRR000_type *) 0xf00118b0u)	/* DMA Channel Hardware Resource Register 044 */
#define DMA_HRR045	(*( DMA_HRR000_type *) 0xf00118b4u)	/* DMA Channel Hardware Resource Register 045 */
#define DMA_HRR046	(*( DMA_HRR000_type *) 0xf00118b8u)	/* DMA Channel Hardware Resource Register 046 */
#define DMA_HRR047	(*( DMA_HRR000_type *) 0xf00118bcu)	/* DMA Channel Hardware Resource Register 047 */
#define DMA_HRR048	(*( DMA_HRR000_type *) 0xf00118c0u)	/* DMA Channel Hardware Resource Register 048 */
#define DMA_HRR049	(*( DMA_HRR000_type *) 0xf00118c4u)	/* DMA Channel Hardware Resource Register 049 */
#define DMA_HRR050	(*( DMA_HRR000_type *) 0xf00118c8u)	/* DMA Channel Hardware Resource Register 050 */
#define DMA_HRR051	(*( DMA_HRR000_type *) 0xf00118ccu)	/* DMA Channel Hardware Resource Register 051 */
#define DMA_HRR052	(*( DMA_HRR000_type *) 0xf00118d0u)	/* DMA Channel Hardware Resource Register 052 */
#define DMA_HRR053	(*( DMA_HRR000_type *) 0xf00118d4u)	/* DMA Channel Hardware Resource Register 053 */
#define DMA_HRR054	(*( DMA_HRR000_type *) 0xf00118d8u)	/* DMA Channel Hardware Resource Register 054 */
#define DMA_HRR055	(*( DMA_HRR000_type *) 0xf00118dcu)	/* DMA Channel Hardware Resource Register 055 */
#define DMA_HRR056	(*( DMA_HRR000_type *) 0xf00118e0u)	/* DMA Channel Hardware Resource Register 056 */
#define DMA_HRR057	(*( DMA_HRR000_type *) 0xf00118e4u)	/* DMA Channel Hardware Resource Register 057 */
#define DMA_HRR058	(*( DMA_HRR000_type *) 0xf00118e8u)	/* DMA Channel Hardware Resource Register 058 */
#define DMA_HRR059	(*( DMA_HRR000_type *) 0xf00118ecu)	/* DMA Channel Hardware Resource Register 059 */
#define DMA_HRR060	(*( DMA_HRR000_type *) 0xf00118f0u)	/* DMA Channel Hardware Resource Register 060 */
#define DMA_HRR061	(*( DMA_HRR000_type *) 0xf00118f4u)	/* DMA Channel Hardware Resource Register 061 */
#define DMA_HRR062	(*( DMA_HRR000_type *) 0xf00118f8u)	/* DMA Channel Hardware Resource Register 062 */
#define DMA_HRR063	(*( DMA_HRR000_type *) 0xf00118fcu)	/* DMA Channel Hardware Resource Register 063 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int MOD_REV        : 8;	/* Module Revision Number */
		/* const */ unsigned int MOD_TYPE       : 8;	/* Module Type */
		/* const */ unsigned int MOD_NUMBER     : 16;	/* Module Number Value */
	} B;
	int I;
	unsigned int U;

} DMA_ID_type;
#define DMA_ID	(*( DMA_ID_type *) 0xf0010008u)	/* Module Identification Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int RD00           : 8;	/* Read Value for Move Engine x */
		/* const */ unsigned int RD01           : 8;	/* Read Value for Move Engine x */
		/* const */ unsigned int RD02           : 8;	/* Read Value for Move Engine x */
		/* const */ unsigned int RD03           : 8;	/* Read Value for Move Engine x */
	} B;
	int I;
	unsigned int U;

} DMA_ME00R_type;
#define DMA_ME00R	(*( DMA_ME00R_type *) 0xf0010140u)	/* DMA Move Engine 0 Read Register 0 */
#define DMA_ME10R	(*( DMA_ME00R_type *) 0xf0011140u)	/* DMA Move Engine 1 Read Register 0 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int RD10           : 8;	/* Read Value for Move Engine x */
		/* const */ unsigned int RD11           : 8;	/* Read Value for Move Engine x */
		/* const */ unsigned int RD12           : 8;	/* Read Value for Move Engine x */
		/* const */ unsigned int RD13           : 8;	/* Read Value for Move Engine x */
	} B;
	int I;
	unsigned int U;

} DMA_ME01R_type;
#define DMA_ME01R	(*( DMA_ME01R_type *) 0xf0010144u)	/* DMA Move Engine 0 Read Register 1 */
#define DMA_ME11R	(*( DMA_ME01R_type *) 0xf0011144u)	/* DMA Move Engine 1 Read Register 1 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int RD20           : 8;	/* Read Value for Move Engine x */
		/* const */ unsigned int RD21           : 8;	/* Read Value for Move Engine x */
		/* const */ unsigned int RD22           : 8;	/* Read Value for Move Engine x */
		/* const */ unsigned int RD23           : 8;	/* Read Value for Move Engine x */
	} B;
	int I;
	unsigned int U;

} DMA_ME02R_type;
#define DMA_ME02R	(*( DMA_ME02R_type *) 0xf0010148u)	/* DMA Move Engine 0 Read Register 2 */
#define DMA_ME12R	(*( DMA_ME02R_type *) 0xf0011148u)	/* DMA Move Engine 1 Read Register 2 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int RD30           : 8;	/* Read Value for Move Engine x */
		/* const */ unsigned int RD31           : 8;	/* Read Value for Move Engine x */
		/* const */ unsigned int RD32           : 8;	/* Read Value for Move Engine x */
		/* const */ unsigned int RD33           : 8;	/* Read Value for Move Engine x */
	} B;
	int I;
	unsigned int U;

} DMA_ME03R_type;
#define DMA_ME03R	(*( DMA_ME03R_type *) 0xf001014cu)	/* DMA Move Engine 0 Read Register 3 */
#define DMA_ME13R	(*( DMA_ME03R_type *) 0xf001114cu)	/* DMA Move Engine 1 Read Register 3 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int RD40           : 8;	/* Read Value for Move Engine x */
		/* const */ unsigned int RD41           : 8;	/* Read Value for Move Engine x */
		/* const */ unsigned int RD42           : 8;	/* Read Value for Move Engine x */
		/* const */ unsigned int RD43           : 8;	/* Read Value for Move Engine x */
	} B;
	int I;
	unsigned int U;

} DMA_ME04R_type;
#define DMA_ME04R	(*( DMA_ME04R_type *) 0xf0010150u)	/* DMA Move Engine 0 Read Register 4 */
#define DMA_ME14R	(*( DMA_ME04R_type *) 0xf0011150u)	/* DMA Move Engine 1 Read Register 4 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int RD50           : 8;	/* Read Value for Move Engine x */
		/* const */ unsigned int RD51           : 8;	/* Read Value for Move Engine x */
		/* const */ unsigned int RD52           : 8;	/* Read Value for Move Engine x */
		/* const */ unsigned int RD53           : 8;	/* Read Value for Move Engine x */
	} B;
	int I;
	unsigned int U;

} DMA_ME05R_type;
#define DMA_ME05R	(*( DMA_ME05R_type *) 0xf0010154u)	/* DMA Move Engine 0 Read Register 5 */
#define DMA_ME15R	(*( DMA_ME05R_type *) 0xf0011154u)	/* DMA Move Engine 1 Read Register 5 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int RD60           : 8;	/* Read Value for Move Engine x */
		/* const */ unsigned int RD61           : 8;	/* Read Value for Move Engine x */
		/* const */ unsigned int RD62           : 8;	/* Read Value for Move Engine x */
		/* const */ unsigned int RD63           : 8;	/* Read Value for Move Engine x */
	} B;
	int I;
	unsigned int U;

} DMA_ME06R_type;
#define DMA_ME06R	(*( DMA_ME06R_type *) 0xf0010158u)	/* DMA Move Engine 0 Read Register 6 */
#define DMA_ME16R	(*( DMA_ME06R_type *) 0xf0011158u)	/* DMA Move Engine 1 Read Register 6 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int RD70           : 8;	/* Read Value for Move Engine x */
		/* const */ unsigned int RD71           : 8;	/* Read Value for Move Engine x */
		/* const */ unsigned int RD72           : 8;	/* Read Value for Move Engine x */
		/* const */ unsigned int RD73           : 8;	/* Read Value for Move Engine x */
	} B;
	int I;
	unsigned int U;

} DMA_ME07R_type;
#define DMA_ME07R	(*( DMA_ME07R_type *) 0xf001015cu)	/* DMA Move Engine 0 Read Register 7 */
#define DMA_ME17R	(*( DMA_ME07R_type *) 0xf001115cu)	/* DMA Move Engine 1 Read Register 7 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int SMF            : 3;	/* Source Address Modification Factor */
		/* const */ unsigned int INCS           : 1;	/* Increment of Source Address */
		/* const */ unsigned int DMF            : 3;	/* Destination Address Modification Factor */
		/* const */ unsigned int INCD           : 1;	/* Increment of Destination Address */
		/* const */ unsigned int CBLS           : 4;	/* Circular Buffer Length Source */
		/* const */ unsigned int CBLD           : 4;	/* Circular Buffer Length Destination */
		/* const */ unsigned int SHCT           : 4;	/* Shadow Control */
		/* const */ unsigned int SCBE           : 1;	/* Source Circular Buffer Enable */
		/* const */ unsigned int DCBE           : 1;	/* Destination Circular Buffer Enable */
		/* const */ unsigned int STAMP          : 1;	/* Time Stamp */
		/* const */ unsigned int ETRL           : 1;	/* Enable Transaction Request Lost Interrupt */
		/* const */ unsigned int WRPSE          : 1;	/* Wrap Source Enable */
		/* const */ unsigned int WRPDE          : 1;	/* Wrap Destination Enable */
		/* const */ unsigned int INTCT          : 2;	/* Interrupt Control */
		/* const */ unsigned int IRDV           : 4;	/* Interrupt Raise Detect Value */
	} B;
	int I;
	unsigned int U;

} DMA_ME0ADICR_type;
#define DMA_ME0ADICR	(*( DMA_ME0ADICR_type *) 0xf0010190u)	/* DMA Move Engine 0 Channel Address and Interrupt Control Register */
#define DMA_ME1ADICR	(*( DMA_ME0ADICR_type *) 0xf0011190u)	/* DMA Move Engine 1 Channel Address and Interrupt Control Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int TREL           : 14;	/* Transfer Reload Value */
		/* const */ unsigned int RES            : 2;	/* Reserved */
		/* const */ unsigned int BLKM           : 3;	/* Block Mode */
		/* const */ unsigned int RROAT          : 1;	/* Reset Request Only After Transaction */
		/* const */ unsigned int CHMODE         : 1;	/* Channel Operation Mode */
		/* const */ unsigned int CHDW           : 3;	/* Channel Data Width */
		/* const */ unsigned int PATSEL         : 3;	/* Pattern Select */
		/* const */ unsigned int RES_8          : 1;	/* Reserved */
		/* const */ unsigned int PRSEL          : 1;	/* Peripheral Request Select */
		/* const */ unsigned int RES_10         : 1;	/* Reserved */
		/* const */ unsigned int DMAPRIO        : 2;	/* DMA Priority */
	} B;
	int I;
	unsigned int U;

} DMA_ME0CHCR_type;
#define DMA_ME0CHCR	(*( DMA_ME0CHCR_type *) 0xf0010194u)	/* DMA Move Engine 0 Channel Control Register */
#define DMA_ME1CHCR	(*( DMA_ME0CHCR_type *) 0xf0011194u)	/* DMA Move Engine 1 Channel Control Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int TCOUNT         : 14;	/* Transfer Count Status */
		/* const */ unsigned int RES            : 1;	/* Reserved */
		/* const */ unsigned int LXO            : 1;	/* Old Value of Pattern Detection */
		/* const */ unsigned int WRPS           : 1;	/* Wrap Source Buffer */
		/* const */ unsigned int WRPD           : 1;	/* Wrap Destination Buffer */
		/* const */ unsigned int ICH            : 1;	/* Interrupt from Channel */
		/* const */ unsigned int IPM            : 1;	/* Pattern Detection from Channel */
		/* const */ unsigned int RES_8          : 2;	/* Reserved */
		/* const */ unsigned int BUFFER         : 1;	/* DMA Double Buffering Active Buffer */
		/* const */ unsigned int FROZEN         : 1;	/* DMA Double Buffering Frozen Buffer */
		/* const */ unsigned int RES_11         : 8;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} DMA_ME0CHSR_type;
#define DMA_ME0CHSR	(*( DMA_ME0CHSR_type *) 0xf001019cu)	/* DMA Move Engine 0 Channel Status Register */
#define DMA_ME1CHSR	(*( DMA_ME0CHSR_type *) 0xf001119cu)	/* DMA Move Engine 1 Channel Status Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int DADR           : 32;	/* Destination Address */
	} B;
	int I;
	unsigned int U;

} DMA_ME0DADR_type;
#define DMA_ME0DADR	(*( DMA_ME0DADR_type *) 0xf001018cu)	/* DMA Move Engine 0 Channel Destination Address Register x */
#define DMA_ME1DADR	(*( DMA_ME0DADR_type *) 0xf001118cu)	/* DMA Move Engine 1 Channel Destination Address Register x */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int RDCRC          : 32;	/* Read Data CRC */
	} B;
	int I;
	unsigned int U;

} DMA_ME0RDCRC_type;
#define DMA_ME0RDCRC	(*( DMA_ME0RDCRC_type *) 0xf0010180u)	/* DMA Move Engine 0 Channel Read Data CRC Register */
#define DMA_ME1RDCRC	(*( DMA_ME0RDCRC_type *) 0xf0011180u)	/* DMA Move Engine 1 Channel Read Data CRC Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int SADR           : 32;	/* Source Start Address */
	} B;
	int I;
	unsigned int U;

} DMA_ME0SADR_type;
#define DMA_ME0SADR	(*( DMA_ME0SADR_type *) 0xf0010188u)	/* DMA Move Engine 0 Channel Source Address Register */
#define DMA_ME1SADR	(*( DMA_ME0SADR_type *) 0xf0011188u)	/* DMA Move Engine 1 Channel Source Address Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int SDCRC          : 32;	/* Source and Destination Address CRC */
	} B;
	int I;
	unsigned int U;

} DMA_ME0SDCRC_type;
#define DMA_ME0SDCRC	(*( DMA_ME0SDCRC_type *) 0xf0010184u)	/* DMA Move Engine 0 Channel Source and Destination Address CRC Register */
#define DMA_ME1SDCRC	(*( DMA_ME0SDCRC_type *) 0xf0011184u)	/* DMA Move Engine 1 Channel Source and Destination Address CRC Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int SHADR          : 32;	/* Shadowed Address */
	} B;
	int I;
	unsigned int U;

} DMA_ME0SHADR_type;
#define DMA_ME0SHADR	(*( DMA_ME0SHADR_type *) 0xf0010198u)	/* DMA Move Engine 0 Channel Shadow Address Register */
#define DMA_ME1SHADR	(*( DMA_ME0SHADR_type *) 0xf0011198u)	/* DMA Move Engine 1 Channel Shadow Address Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int RS             : 1;	/* Move Engine x Read Status */
		/* const */ unsigned int RES            : 3;	/* Reserved */
		/* const */ unsigned int WS             : 1;	/* Move Engine x Write Status */
		/* const */ unsigned int RES_4          : 11;	/* Reserved */
		/* const */ unsigned int CH             : 7;	/* Active Channel z in Move Engine x */
		/* const */ unsigned int RES_6          : 9;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} DMA_ME0SR_type;
#define DMA_ME0SR	(*( DMA_ME0SR_type *) 0xf0010130u)	/* DMA Move Engine 0 Status Register */
#define DMA_ME1SR	(*( DMA_ME0SR_type *) 0xf0011130u)	/* DMA Move Engine 1 Status Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned __sfrbit32 RES            : 2;	/* Reserved */
		unsigned __sfrbit32 INTERR         : 1;	/* Internal ECC Error */
		/* const */ unsigned __sfrbit32 RES_3          : 1;	/* Reserved */
		unsigned __sfrbit32 RMWERR         : 1;	/* Internal Read Modify Write Error */
		/* const */ unsigned __sfrbit32 RES_5          : 1;	/* Reserved */
		unsigned __sfrbit32 DATAERR        : 1;	/* SPB Data Phase ECC Error */
		/* const */ unsigned __sfrbit32 RES_7          : 1;	/* Reserved */
		unsigned __sfrbit32 PMIC           : 1;	/* Protection Bit for Memory Integrity Control Bit */
		unsigned __sfrbit32 ERRDIS         : 1;	/* ECC Error Disable */
		/* const */ unsigned __sfrbit32 RES_10         : 22;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} DMA_MEMCON_type;
#define DMA_MEMCON	(*( DMA_MEMCON_type *) 0xf0010020u)	/* DMA Memory Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int MODE           : 1;	/* Hardware Resource Supervisor Mode */
		/* const */ unsigned int RES            : 31;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} DMA_MODE0_type;
#define DMA_MODE0	(*( DMA_MODE0_type *) 0xf0011300u)	/* DMA Mode Register 0 */
#define DMA_MODE1	(*( DMA_MODE0_type *) 0xf0011304u)	/* DMA Mode Register 1 */
#define DMA_MODE2	(*( DMA_MODE0_type *) 0xf0011308u)	/* DMA Mode Register 2 */
#define DMA_MODE3	(*( DMA_MODE0_type *) 0xf001130cu)	/* DMA Mode Register 3 */

typedef volatile union
{
	struct
	{ 
		unsigned int TGS            : 4;	/* Trigger Set () for OTGB0/1 */
		/* const */ unsigned int RES            : 3;	/* Reserved */
		unsigned int BS             : 1;	/* OTGB0/1 Bus Select */
		/* const */ unsigned int RES_4          : 24;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} DMA_OTSS_type;
#define DMA_OTSS	(*( DMA_OTSS_type *) 0xf0011200u)	/* DMA OCDS Trigger Set Select */

typedef volatile union
{
	struct
	{ 
		unsigned int PAT00          : 8;	/* Pattern for Move Engine */
		unsigned int PAT01          : 8;	/* Pattern for Move Engine */
		unsigned int PAT02          : 8;	/* Pattern for Move Engine */
		unsigned int PAT03          : 8;	/* Pattern for Move Engine */
	} B;
	int I;
	unsigned int U;

} DMA_PRR0_type;
#define DMA_PRR0	(*( DMA_PRR0_type *) 0xf0011208u)	/* Pattern Read Register 0 */

typedef volatile union
{
	struct
	{ 
		unsigned int PAT10          : 8;	/* Pattern for Move Engine */
		unsigned int PAT11          : 8;	/* Pattern for Move Engine */
		unsigned int PAT12          : 8;	/* Pattern for Move Engine */
		unsigned int PAT13          : 8;	/* Pattern for Move Engine */
	} B;
	int I;
	unsigned int U;

} DMA_PRR1_type;
#define DMA_PRR1	(*( DMA_PRR1_type *) 0xf001120cu)	/* Pattern Read Register 1 */

typedef volatile union
{
	struct
	{ 
		unsigned int RDCRC          : 32;	/* Read Data CRC */
	} B;
	int I;
	unsigned int U;

} DMA_RDCRCR000_type;
#define DMA_RDCRCR000	(*( DMA_RDCRCR000_type *) 0xf0012000u)	/* DMA Channel Read Data CRC Register 000 */
#define DMA_RDCRCR001	(*( DMA_RDCRCR000_type *) 0xf0012020u)	/* DMA Channel Read Data CRC Register 001 */
#define DMA_RDCRCR002	(*( DMA_RDCRCR000_type *) 0xf0012040u)	/* DMA Channel Read Data CRC Register 002 */
#define DMA_RDCRCR003	(*( DMA_RDCRCR000_type *) 0xf0012060u)	/* DMA Channel Read Data CRC Register 003 */
#define DMA_RDCRCR004	(*( DMA_RDCRCR000_type *) 0xf0012080u)	/* DMA Channel Read Data CRC Register 004 */
#define DMA_RDCRCR005	(*( DMA_RDCRCR000_type *) 0xf00120a0u)	/* DMA Channel Read Data CRC Register 005 */
#define DMA_RDCRCR006	(*( DMA_RDCRCR000_type *) 0xf00120c0u)	/* DMA Channel Read Data CRC Register 006 */
#define DMA_RDCRCR007	(*( DMA_RDCRCR000_type *) 0xf00120e0u)	/* DMA Channel Read Data CRC Register 007 */
#define DMA_RDCRCR008	(*( DMA_RDCRCR000_type *) 0xf0012100u)	/* DMA Channel Read Data CRC Register 008 */
#define DMA_RDCRCR009	(*( DMA_RDCRCR000_type *) 0xf0012120u)	/* DMA Channel Read Data CRC Register 009 */
#define DMA_RDCRCR010	(*( DMA_RDCRCR000_type *) 0xf0012140u)	/* DMA Channel Read Data CRC Register 010 */
#define DMA_RDCRCR011	(*( DMA_RDCRCR000_type *) 0xf0012160u)	/* DMA Channel Read Data CRC Register 011 */
#define DMA_RDCRCR012	(*( DMA_RDCRCR000_type *) 0xf0012180u)	/* DMA Channel Read Data CRC Register 012 */
#define DMA_RDCRCR013	(*( DMA_RDCRCR000_type *) 0xf00121a0u)	/* DMA Channel Read Data CRC Register 013 */
#define DMA_RDCRCR014	(*( DMA_RDCRCR000_type *) 0xf00121c0u)	/* DMA Channel Read Data CRC Register 014 */
#define DMA_RDCRCR015	(*( DMA_RDCRCR000_type *) 0xf00121e0u)	/* DMA Channel Read Data CRC Register 015 */
#define DMA_RDCRCR016	(*( DMA_RDCRCR000_type *) 0xf0012200u)	/* DMA Channel Read Data CRC Register 016 */
#define DMA_RDCRCR017	(*( DMA_RDCRCR000_type *) 0xf0012220u)	/* DMA Channel Read Data CRC Register 017 */
#define DMA_RDCRCR018	(*( DMA_RDCRCR000_type *) 0xf0012240u)	/* DMA Channel Read Data CRC Register 018 */
#define DMA_RDCRCR019	(*( DMA_RDCRCR000_type *) 0xf0012260u)	/* DMA Channel Read Data CRC Register 019 */
#define DMA_RDCRCR020	(*( DMA_RDCRCR000_type *) 0xf0012280u)	/* DMA Channel Read Data CRC Register 020 */
#define DMA_RDCRCR021	(*( DMA_RDCRCR000_type *) 0xf00122a0u)	/* DMA Channel Read Data CRC Register 021 */
#define DMA_RDCRCR022	(*( DMA_RDCRCR000_type *) 0xf00122c0u)	/* DMA Channel Read Data CRC Register 022 */
#define DMA_RDCRCR023	(*( DMA_RDCRCR000_type *) 0xf00122e0u)	/* DMA Channel Read Data CRC Register 023 */
#define DMA_RDCRCR024	(*( DMA_RDCRCR000_type *) 0xf0012300u)	/* DMA Channel Read Data CRC Register 024 */
#define DMA_RDCRCR025	(*( DMA_RDCRCR000_type *) 0xf0012320u)	/* DMA Channel Read Data CRC Register 025 */
#define DMA_RDCRCR026	(*( DMA_RDCRCR000_type *) 0xf0012340u)	/* DMA Channel Read Data CRC Register 026 */
#define DMA_RDCRCR027	(*( DMA_RDCRCR000_type *) 0xf0012360u)	/* DMA Channel Read Data CRC Register 027 */
#define DMA_RDCRCR028	(*( DMA_RDCRCR000_type *) 0xf0012380u)	/* DMA Channel Read Data CRC Register 028 */
#define DMA_RDCRCR029	(*( DMA_RDCRCR000_type *) 0xf00123a0u)	/* DMA Channel Read Data CRC Register 029 */
#define DMA_RDCRCR030	(*( DMA_RDCRCR000_type *) 0xf00123c0u)	/* DMA Channel Read Data CRC Register 030 */
#define DMA_RDCRCR031	(*( DMA_RDCRCR000_type *) 0xf00123e0u)	/* DMA Channel Read Data CRC Register 031 */
#define DMA_RDCRCR032	(*( DMA_RDCRCR000_type *) 0xf0012400u)	/* DMA Channel Read Data CRC Register 032 */
#define DMA_RDCRCR033	(*( DMA_RDCRCR000_type *) 0xf0012420u)	/* DMA Channel Read Data CRC Register 033 */
#define DMA_RDCRCR034	(*( DMA_RDCRCR000_type *) 0xf0012440u)	/* DMA Channel Read Data CRC Register 034 */
#define DMA_RDCRCR035	(*( DMA_RDCRCR000_type *) 0xf0012460u)	/* DMA Channel Read Data CRC Register 035 */
#define DMA_RDCRCR036	(*( DMA_RDCRCR000_type *) 0xf0012480u)	/* DMA Channel Read Data CRC Register 036 */
#define DMA_RDCRCR037	(*( DMA_RDCRCR000_type *) 0xf00124a0u)	/* DMA Channel Read Data CRC Register 037 */
#define DMA_RDCRCR038	(*( DMA_RDCRCR000_type *) 0xf00124c0u)	/* DMA Channel Read Data CRC Register 038 */
#define DMA_RDCRCR039	(*( DMA_RDCRCR000_type *) 0xf00124e0u)	/* DMA Channel Read Data CRC Register 039 */
#define DMA_RDCRCR040	(*( DMA_RDCRCR000_type *) 0xf0012500u)	/* DMA Channel Read Data CRC Register 040 */
#define DMA_RDCRCR041	(*( DMA_RDCRCR000_type *) 0xf0012520u)	/* DMA Channel Read Data CRC Register 041 */
#define DMA_RDCRCR042	(*( DMA_RDCRCR000_type *) 0xf0012540u)	/* DMA Channel Read Data CRC Register 042 */
#define DMA_RDCRCR043	(*( DMA_RDCRCR000_type *) 0xf0012560u)	/* DMA Channel Read Data CRC Register 043 */
#define DMA_RDCRCR044	(*( DMA_RDCRCR000_type *) 0xf0012580u)	/* DMA Channel Read Data CRC Register 044 */
#define DMA_RDCRCR045	(*( DMA_RDCRCR000_type *) 0xf00125a0u)	/* DMA Channel Read Data CRC Register 045 */
#define DMA_RDCRCR046	(*( DMA_RDCRCR000_type *) 0xf00125c0u)	/* DMA Channel Read Data CRC Register 046 */
#define DMA_RDCRCR047	(*( DMA_RDCRCR000_type *) 0xf00125e0u)	/* DMA Channel Read Data CRC Register 047 */
#define DMA_RDCRCR048	(*( DMA_RDCRCR000_type *) 0xf0012600u)	/* DMA Channel Read Data CRC Register 048 */
#define DMA_RDCRCR049	(*( DMA_RDCRCR000_type *) 0xf0012620u)	/* DMA Channel Read Data CRC Register 049 */
#define DMA_RDCRCR050	(*( DMA_RDCRCR000_type *) 0xf0012640u)	/* DMA Channel Read Data CRC Register 050 */
#define DMA_RDCRCR051	(*( DMA_RDCRCR000_type *) 0xf0012660u)	/* DMA Channel Read Data CRC Register 051 */
#define DMA_RDCRCR052	(*( DMA_RDCRCR000_type *) 0xf0012680u)	/* DMA Channel Read Data CRC Register 052 */
#define DMA_RDCRCR053	(*( DMA_RDCRCR000_type *) 0xf00126a0u)	/* DMA Channel Read Data CRC Register 053 */
#define DMA_RDCRCR054	(*( DMA_RDCRCR000_type *) 0xf00126c0u)	/* DMA Channel Read Data CRC Register 054 */
#define DMA_RDCRCR055	(*( DMA_RDCRCR000_type *) 0xf00126e0u)	/* DMA Channel Read Data CRC Register 055 */
#define DMA_RDCRCR056	(*( DMA_RDCRCR000_type *) 0xf0012700u)	/* DMA Channel Read Data CRC Register 056 */
#define DMA_RDCRCR057	(*( DMA_RDCRCR000_type *) 0xf0012720u)	/* DMA Channel Read Data CRC Register 057 */
#define DMA_RDCRCR058	(*( DMA_RDCRCR000_type *) 0xf0012740u)	/* DMA Channel Read Data CRC Register 058 */
#define DMA_RDCRCR059	(*( DMA_RDCRCR000_type *) 0xf0012760u)	/* DMA Channel Read Data CRC Register 059 */
#define DMA_RDCRCR060	(*( DMA_RDCRCR000_type *) 0xf0012780u)	/* DMA Channel Read Data CRC Register 060 */
#define DMA_RDCRCR061	(*( DMA_RDCRCR000_type *) 0xf00127a0u)	/* DMA Channel Read Data CRC Register 061 */
#define DMA_RDCRCR062	(*( DMA_RDCRCR000_type *) 0xf00127c0u)	/* DMA Channel Read Data CRC Register 062 */
#define DMA_RDCRCR063	(*( DMA_RDCRCR000_type *) 0xf00127e0u)	/* DMA Channel Read Data CRC Register 063 */

typedef volatile union
{
	struct
	{ 
		unsigned int SADR           : 32;	/* Source Address */
	} B;
	int I;
	unsigned int U;

} DMA_SADR000_type;
#define DMA_SADR000	(*( DMA_SADR000_type *) 0xf0012008u)	/* DMA Channel Source Address Register 000 */
#define DMA_SADR001	(*( DMA_SADR000_type *) 0xf0012028u)	/* DMA Channel Source Address Register 001 */
#define DMA_SADR002	(*( DMA_SADR000_type *) 0xf0012048u)	/* DMA Channel Source Address Register 002 */
#define DMA_SADR003	(*( DMA_SADR000_type *) 0xf0012068u)	/* DMA Channel Source Address Register 003 */
#define DMA_SADR004	(*( DMA_SADR000_type *) 0xf0012088u)	/* DMA Channel Source Address Register 004 */
#define DMA_SADR005	(*( DMA_SADR000_type *) 0xf00120a8u)	/* DMA Channel Source Address Register 005 */
#define DMA_SADR006	(*( DMA_SADR000_type *) 0xf00120c8u)	/* DMA Channel Source Address Register 006 */
#define DMA_SADR007	(*( DMA_SADR000_type *) 0xf00120e8u)	/* DMA Channel Source Address Register 007 */
#define DMA_SADR008	(*( DMA_SADR000_type *) 0xf0012108u)	/* DMA Channel Source Address Register 008 */
#define DMA_SADR009	(*( DMA_SADR000_type *) 0xf0012128u)	/* DMA Channel Source Address Register 009 */
#define DMA_SADR010	(*( DMA_SADR000_type *) 0xf0012148u)	/* DMA Channel Source Address Register 010 */
#define DMA_SADR011	(*( DMA_SADR000_type *) 0xf0012168u)	/* DMA Channel Source Address Register 011 */
#define DMA_SADR012	(*( DMA_SADR000_type *) 0xf0012188u)	/* DMA Channel Source Address Register 012 */
#define DMA_SADR013	(*( DMA_SADR000_type *) 0xf00121a8u)	/* DMA Channel Source Address Register 013 */
#define DMA_SADR014	(*( DMA_SADR000_type *) 0xf00121c8u)	/* DMA Channel Source Address Register 014 */
#define DMA_SADR015	(*( DMA_SADR000_type *) 0xf00121e8u)	/* DMA Channel Source Address Register 015 */
#define DMA_SADR016	(*( DMA_SADR000_type *) 0xf0012208u)	/* DMA Channel Source Address Register 016 */
#define DMA_SADR017	(*( DMA_SADR000_type *) 0xf0012228u)	/* DMA Channel Source Address Register 017 */
#define DMA_SADR018	(*( DMA_SADR000_type *) 0xf0012248u)	/* DMA Channel Source Address Register 018 */
#define DMA_SADR019	(*( DMA_SADR000_type *) 0xf0012268u)	/* DMA Channel Source Address Register 019 */
#define DMA_SADR020	(*( DMA_SADR000_type *) 0xf0012288u)	/* DMA Channel Source Address Register 020 */
#define DMA_SADR021	(*( DMA_SADR000_type *) 0xf00122a8u)	/* DMA Channel Source Address Register 021 */
#define DMA_SADR022	(*( DMA_SADR000_type *) 0xf00122c8u)	/* DMA Channel Source Address Register 022 */
#define DMA_SADR023	(*( DMA_SADR000_type *) 0xf00122e8u)	/* DMA Channel Source Address Register 023 */
#define DMA_SADR024	(*( DMA_SADR000_type *) 0xf0012308u)	/* DMA Channel Source Address Register 024 */
#define DMA_SADR025	(*( DMA_SADR000_type *) 0xf0012328u)	/* DMA Channel Source Address Register 025 */
#define DMA_SADR026	(*( DMA_SADR000_type *) 0xf0012348u)	/* DMA Channel Source Address Register 026 */
#define DMA_SADR027	(*( DMA_SADR000_type *) 0xf0012368u)	/* DMA Channel Source Address Register 027 */
#define DMA_SADR028	(*( DMA_SADR000_type *) 0xf0012388u)	/* DMA Channel Source Address Register 028 */
#define DMA_SADR029	(*( DMA_SADR000_type *) 0xf00123a8u)	/* DMA Channel Source Address Register 029 */
#define DMA_SADR030	(*( DMA_SADR000_type *) 0xf00123c8u)	/* DMA Channel Source Address Register 030 */
#define DMA_SADR031	(*( DMA_SADR000_type *) 0xf00123e8u)	/* DMA Channel Source Address Register 031 */
#define DMA_SADR032	(*( DMA_SADR000_type *) 0xf0012408u)	/* DMA Channel Source Address Register 032 */
#define DMA_SADR033	(*( DMA_SADR000_type *) 0xf0012428u)	/* DMA Channel Source Address Register 033 */
#define DMA_SADR034	(*( DMA_SADR000_type *) 0xf0012448u)	/* DMA Channel Source Address Register 034 */
#define DMA_SADR035	(*( DMA_SADR000_type *) 0xf0012468u)	/* DMA Channel Source Address Register 035 */
#define DMA_SADR036	(*( DMA_SADR000_type *) 0xf0012488u)	/* DMA Channel Source Address Register 036 */
#define DMA_SADR037	(*( DMA_SADR000_type *) 0xf00124a8u)	/* DMA Channel Source Address Register 037 */
#define DMA_SADR038	(*( DMA_SADR000_type *) 0xf00124c8u)	/* DMA Channel Source Address Register 038 */
#define DMA_SADR039	(*( DMA_SADR000_type *) 0xf00124e8u)	/* DMA Channel Source Address Register 039 */
#define DMA_SADR040	(*( DMA_SADR000_type *) 0xf0012508u)	/* DMA Channel Source Address Register 040 */
#define DMA_SADR041	(*( DMA_SADR000_type *) 0xf0012528u)	/* DMA Channel Source Address Register 041 */
#define DMA_SADR042	(*( DMA_SADR000_type *) 0xf0012548u)	/* DMA Channel Source Address Register 042 */
#define DMA_SADR043	(*( DMA_SADR000_type *) 0xf0012568u)	/* DMA Channel Source Address Register 043 */
#define DMA_SADR044	(*( DMA_SADR000_type *) 0xf0012588u)	/* DMA Channel Source Address Register 044 */
#define DMA_SADR045	(*( DMA_SADR000_type *) 0xf00125a8u)	/* DMA Channel Source Address Register 045 */
#define DMA_SADR046	(*( DMA_SADR000_type *) 0xf00125c8u)	/* DMA Channel Source Address Register 046 */
#define DMA_SADR047	(*( DMA_SADR000_type *) 0xf00125e8u)	/* DMA Channel Source Address Register 047 */
#define DMA_SADR048	(*( DMA_SADR000_type *) 0xf0012608u)	/* DMA Channel Source Address Register 048 */
#define DMA_SADR049	(*( DMA_SADR000_type *) 0xf0012628u)	/* DMA Channel Source Address Register 049 */
#define DMA_SADR050	(*( DMA_SADR000_type *) 0xf0012648u)	/* DMA Channel Source Address Register 050 */
#define DMA_SADR051	(*( DMA_SADR000_type *) 0xf0012668u)	/* DMA Channel Source Address Register 051 */
#define DMA_SADR052	(*( DMA_SADR000_type *) 0xf0012688u)	/* DMA Channel Source Address Register 052 */
#define DMA_SADR053	(*( DMA_SADR000_type *) 0xf00126a8u)	/* DMA Channel Source Address Register 053 */
#define DMA_SADR054	(*( DMA_SADR000_type *) 0xf00126c8u)	/* DMA Channel Source Address Register 054 */
#define DMA_SADR055	(*( DMA_SADR000_type *) 0xf00126e8u)	/* DMA Channel Source Address Register 055 */
#define DMA_SADR056	(*( DMA_SADR000_type *) 0xf0012708u)	/* DMA Channel Source Address Register 056 */
#define DMA_SADR057	(*( DMA_SADR000_type *) 0xf0012728u)	/* DMA Channel Source Address Register 057 */
#define DMA_SADR058	(*( DMA_SADR000_type *) 0xf0012748u)	/* DMA Channel Source Address Register 058 */
#define DMA_SADR059	(*( DMA_SADR000_type *) 0xf0012768u)	/* DMA Channel Source Address Register 059 */
#define DMA_SADR060	(*( DMA_SADR000_type *) 0xf0012788u)	/* DMA Channel Source Address Register 060 */
#define DMA_SADR061	(*( DMA_SADR000_type *) 0xf00127a8u)	/* DMA Channel Source Address Register 061 */
#define DMA_SADR062	(*( DMA_SADR000_type *) 0xf00127c8u)	/* DMA Channel Source Address Register 062 */
#define DMA_SADR063	(*( DMA_SADR000_type *) 0xf00127e8u)	/* DMA Channel Source Address Register 063 */

typedef volatile union
{
	struct
	{ 
		unsigned int SDCRC          : 32;	/* Source and Destination Address CRC */
	} B;
	int I;
	unsigned int U;

} DMA_SDCRCR000_type;
#define DMA_SDCRCR000	(*( DMA_SDCRCR000_type *) 0xf0012004u)	/* DMA Channel Source and Destination Address CRC Register 000 */
#define DMA_SDCRCR001	(*( DMA_SDCRCR000_type *) 0xf0012024u)	/* DMA Channel Source and Destination Address CRC Register 001 */
#define DMA_SDCRCR002	(*( DMA_SDCRCR000_type *) 0xf0012044u)	/* DMA Channel Source and Destination Address CRC Register 002 */
#define DMA_SDCRCR003	(*( DMA_SDCRCR000_type *) 0xf0012064u)	/* DMA Channel Source and Destination Address CRC Register 003 */
#define DMA_SDCRCR004	(*( DMA_SDCRCR000_type *) 0xf0012084u)	/* DMA Channel Source and Destination Address CRC Register 004 */
#define DMA_SDCRCR005	(*( DMA_SDCRCR000_type *) 0xf00120a4u)	/* DMA Channel Source and Destination Address CRC Register 005 */
#define DMA_SDCRCR006	(*( DMA_SDCRCR000_type *) 0xf00120c4u)	/* DMA Channel Source and Destination Address CRC Register 006 */
#define DMA_SDCRCR007	(*( DMA_SDCRCR000_type *) 0xf00120e4u)	/* DMA Channel Source and Destination Address CRC Register 007 */
#define DMA_SDCRCR008	(*( DMA_SDCRCR000_type *) 0xf0012104u)	/* DMA Channel Source and Destination Address CRC Register 008 */
#define DMA_SDCRCR009	(*( DMA_SDCRCR000_type *) 0xf0012124u)	/* DMA Channel Source and Destination Address CRC Register 009 */
#define DMA_SDCRCR010	(*( DMA_SDCRCR000_type *) 0xf0012144u)	/* DMA Channel Source and Destination Address CRC Register 010 */
#define DMA_SDCRCR011	(*( DMA_SDCRCR000_type *) 0xf0012164u)	/* DMA Channel Source and Destination Address CRC Register 011 */
#define DMA_SDCRCR012	(*( DMA_SDCRCR000_type *) 0xf0012184u)	/* DMA Channel Source and Destination Address CRC Register 012 */
#define DMA_SDCRCR013	(*( DMA_SDCRCR000_type *) 0xf00121a4u)	/* DMA Channel Source and Destination Address CRC Register 013 */
#define DMA_SDCRCR014	(*( DMA_SDCRCR000_type *) 0xf00121c4u)	/* DMA Channel Source and Destination Address CRC Register 014 */
#define DMA_SDCRCR015	(*( DMA_SDCRCR000_type *) 0xf00121e4u)	/* DMA Channel Source and Destination Address CRC Register 015 */
#define DMA_SDCRCR016	(*( DMA_SDCRCR000_type *) 0xf0012204u)	/* DMA Channel Source and Destination Address CRC Register 016 */
#define DMA_SDCRCR017	(*( DMA_SDCRCR000_type *) 0xf0012224u)	/* DMA Channel Source and Destination Address CRC Register 017 */
#define DMA_SDCRCR018	(*( DMA_SDCRCR000_type *) 0xf0012244u)	/* DMA Channel Source and Destination Address CRC Register 018 */
#define DMA_SDCRCR019	(*( DMA_SDCRCR000_type *) 0xf0012264u)	/* DMA Channel Source and Destination Address CRC Register 019 */
#define DMA_SDCRCR020	(*( DMA_SDCRCR000_type *) 0xf0012284u)	/* DMA Channel Source and Destination Address CRC Register 020 */
#define DMA_SDCRCR021	(*( DMA_SDCRCR000_type *) 0xf00122a4u)	/* DMA Channel Source and Destination Address CRC Register 021 */
#define DMA_SDCRCR022	(*( DMA_SDCRCR000_type *) 0xf00122c4u)	/* DMA Channel Source and Destination Address CRC Register 022 */
#define DMA_SDCRCR023	(*( DMA_SDCRCR000_type *) 0xf00122e4u)	/* DMA Channel Source and Destination Address CRC Register 023 */
#define DMA_SDCRCR024	(*( DMA_SDCRCR000_type *) 0xf0012304u)	/* DMA Channel Source and Destination Address CRC Register 024 */
#define DMA_SDCRCR025	(*( DMA_SDCRCR000_type *) 0xf0012324u)	/* DMA Channel Source and Destination Address CRC Register 025 */
#define DMA_SDCRCR026	(*( DMA_SDCRCR000_type *) 0xf0012344u)	/* DMA Channel Source and Destination Address CRC Register 026 */
#define DMA_SDCRCR027	(*( DMA_SDCRCR000_type *) 0xf0012364u)	/* DMA Channel Source and Destination Address CRC Register 027 */
#define DMA_SDCRCR028	(*( DMA_SDCRCR000_type *) 0xf0012384u)	/* DMA Channel Source and Destination Address CRC Register 028 */
#define DMA_SDCRCR029	(*( DMA_SDCRCR000_type *) 0xf00123a4u)	/* DMA Channel Source and Destination Address CRC Register 029 */
#define DMA_SDCRCR030	(*( DMA_SDCRCR000_type *) 0xf00123c4u)	/* DMA Channel Source and Destination Address CRC Register 030 */
#define DMA_SDCRCR031	(*( DMA_SDCRCR000_type *) 0xf00123e4u)	/* DMA Channel Source and Destination Address CRC Register 031 */
#define DMA_SDCRCR032	(*( DMA_SDCRCR000_type *) 0xf0012404u)	/* DMA Channel Source and Destination Address CRC Register 032 */
#define DMA_SDCRCR033	(*( DMA_SDCRCR000_type *) 0xf0012424u)	/* DMA Channel Source and Destination Address CRC Register 033 */
#define DMA_SDCRCR034	(*( DMA_SDCRCR000_type *) 0xf0012444u)	/* DMA Channel Source and Destination Address CRC Register 034 */
#define DMA_SDCRCR035	(*( DMA_SDCRCR000_type *) 0xf0012464u)	/* DMA Channel Source and Destination Address CRC Register 035 */
#define DMA_SDCRCR036	(*( DMA_SDCRCR000_type *) 0xf0012484u)	/* DMA Channel Source and Destination Address CRC Register 036 */
#define DMA_SDCRCR037	(*( DMA_SDCRCR000_type *) 0xf00124a4u)	/* DMA Channel Source and Destination Address CRC Register 037 */
#define DMA_SDCRCR038	(*( DMA_SDCRCR000_type *) 0xf00124c4u)	/* DMA Channel Source and Destination Address CRC Register 038 */
#define DMA_SDCRCR039	(*( DMA_SDCRCR000_type *) 0xf00124e4u)	/* DMA Channel Source and Destination Address CRC Register 039 */
#define DMA_SDCRCR040	(*( DMA_SDCRCR000_type *) 0xf0012504u)	/* DMA Channel Source and Destination Address CRC Register 040 */
#define DMA_SDCRCR041	(*( DMA_SDCRCR000_type *) 0xf0012524u)	/* DMA Channel Source and Destination Address CRC Register 041 */
#define DMA_SDCRCR042	(*( DMA_SDCRCR000_type *) 0xf0012544u)	/* DMA Channel Source and Destination Address CRC Register 042 */
#define DMA_SDCRCR043	(*( DMA_SDCRCR000_type *) 0xf0012564u)	/* DMA Channel Source and Destination Address CRC Register 043 */
#define DMA_SDCRCR044	(*( DMA_SDCRCR000_type *) 0xf0012584u)	/* DMA Channel Source and Destination Address CRC Register 044 */
#define DMA_SDCRCR045	(*( DMA_SDCRCR000_type *) 0xf00125a4u)	/* DMA Channel Source and Destination Address CRC Register 045 */
#define DMA_SDCRCR046	(*( DMA_SDCRCR000_type *) 0xf00125c4u)	/* DMA Channel Source and Destination Address CRC Register 046 */
#define DMA_SDCRCR047	(*( DMA_SDCRCR000_type *) 0xf00125e4u)	/* DMA Channel Source and Destination Address CRC Register 047 */
#define DMA_SDCRCR048	(*( DMA_SDCRCR000_type *) 0xf0012604u)	/* DMA Channel Source and Destination Address CRC Register 048 */
#define DMA_SDCRCR049	(*( DMA_SDCRCR000_type *) 0xf0012624u)	/* DMA Channel Source and Destination Address CRC Register 049 */
#define DMA_SDCRCR050	(*( DMA_SDCRCR000_type *) 0xf0012644u)	/* DMA Channel Source and Destination Address CRC Register 050 */
#define DMA_SDCRCR051	(*( DMA_SDCRCR000_type *) 0xf0012664u)	/* DMA Channel Source and Destination Address CRC Register 051 */
#define DMA_SDCRCR052	(*( DMA_SDCRCR000_type *) 0xf0012684u)	/* DMA Channel Source and Destination Address CRC Register 052 */
#define DMA_SDCRCR053	(*( DMA_SDCRCR000_type *) 0xf00126a4u)	/* DMA Channel Source and Destination Address CRC Register 053 */
#define DMA_SDCRCR054	(*( DMA_SDCRCR000_type *) 0xf00126c4u)	/* DMA Channel Source and Destination Address CRC Register 054 */
#define DMA_SDCRCR055	(*( DMA_SDCRCR000_type *) 0xf00126e4u)	/* DMA Channel Source and Destination Address CRC Register 055 */
#define DMA_SDCRCR056	(*( DMA_SDCRCR000_type *) 0xf0012704u)	/* DMA Channel Source and Destination Address CRC Register 056 */
#define DMA_SDCRCR057	(*( DMA_SDCRCR000_type *) 0xf0012724u)	/* DMA Channel Source and Destination Address CRC Register 057 */
#define DMA_SDCRCR058	(*( DMA_SDCRCR000_type *) 0xf0012744u)	/* DMA Channel Source and Destination Address CRC Register 058 */
#define DMA_SDCRCR059	(*( DMA_SDCRCR000_type *) 0xf0012764u)	/* DMA Channel Source and Destination Address CRC Register 059 */
#define DMA_SDCRCR060	(*( DMA_SDCRCR000_type *) 0xf0012784u)	/* DMA Channel Source and Destination Address CRC Register 060 */
#define DMA_SDCRCR061	(*( DMA_SDCRCR000_type *) 0xf00127a4u)	/* DMA Channel Source and Destination Address CRC Register 061 */
#define DMA_SDCRCR062	(*( DMA_SDCRCR000_type *) 0xf00127c4u)	/* DMA Channel Source and Destination Address CRC Register 062 */
#define DMA_SDCRCR063	(*( DMA_SDCRCR000_type *) 0xf00127e4u)	/* DMA Channel Source and Destination Address CRC Register 063 */

typedef volatile union
{
	struct
	{ 
		unsigned int SHADR          : 32;	/* Shadowed Address */
	} B;
	int I;
	unsigned int U;

} DMA_SHADR000_type;
#define DMA_SHADR000	(*( DMA_SHADR000_type *) 0xf0012018u)	/* DMA Channel Shadow Address Register 000 */
#define DMA_SHADR001	(*( DMA_SHADR000_type *) 0xf0012038u)	/* DMA Channel Shadow Address Register 001 */
#define DMA_SHADR002	(*( DMA_SHADR000_type *) 0xf0012058u)	/* DMA Channel Shadow Address Register 002 */
#define DMA_SHADR003	(*( DMA_SHADR000_type *) 0xf0012078u)	/* DMA Channel Shadow Address Register 003 */
#define DMA_SHADR004	(*( DMA_SHADR000_type *) 0xf0012098u)	/* DMA Channel Shadow Address Register 004 */
#define DMA_SHADR005	(*( DMA_SHADR000_type *) 0xf00120b8u)	/* DMA Channel Shadow Address Register 005 */
#define DMA_SHADR006	(*( DMA_SHADR000_type *) 0xf00120d8u)	/* DMA Channel Shadow Address Register 006 */
#define DMA_SHADR007	(*( DMA_SHADR000_type *) 0xf00120f8u)	/* DMA Channel Shadow Address Register 007 */
#define DMA_SHADR008	(*( DMA_SHADR000_type *) 0xf0012118u)	/* DMA Channel Shadow Address Register 008 */
#define DMA_SHADR009	(*( DMA_SHADR000_type *) 0xf0012138u)	/* DMA Channel Shadow Address Register 009 */
#define DMA_SHADR010	(*( DMA_SHADR000_type *) 0xf0012158u)	/* DMA Channel Shadow Address Register 010 */
#define DMA_SHADR011	(*( DMA_SHADR000_type *) 0xf0012178u)	/* DMA Channel Shadow Address Register 011 */
#define DMA_SHADR012	(*( DMA_SHADR000_type *) 0xf0012198u)	/* DMA Channel Shadow Address Register 012 */
#define DMA_SHADR013	(*( DMA_SHADR000_type *) 0xf00121b8u)	/* DMA Channel Shadow Address Register 013 */
#define DMA_SHADR014	(*( DMA_SHADR000_type *) 0xf00121d8u)	/* DMA Channel Shadow Address Register 014 */
#define DMA_SHADR015	(*( DMA_SHADR000_type *) 0xf00121f8u)	/* DMA Channel Shadow Address Register 015 */
#define DMA_SHADR016	(*( DMA_SHADR000_type *) 0xf0012218u)	/* DMA Channel Shadow Address Register 016 */
#define DMA_SHADR017	(*( DMA_SHADR000_type *) 0xf0012238u)	/* DMA Channel Shadow Address Register 017 */
#define DMA_SHADR018	(*( DMA_SHADR000_type *) 0xf0012258u)	/* DMA Channel Shadow Address Register 018 */
#define DMA_SHADR019	(*( DMA_SHADR000_type *) 0xf0012278u)	/* DMA Channel Shadow Address Register 019 */
#define DMA_SHADR020	(*( DMA_SHADR000_type *) 0xf0012298u)	/* DMA Channel Shadow Address Register 020 */
#define DMA_SHADR021	(*( DMA_SHADR000_type *) 0xf00122b8u)	/* DMA Channel Shadow Address Register 021 */
#define DMA_SHADR022	(*( DMA_SHADR000_type *) 0xf00122d8u)	/* DMA Channel Shadow Address Register 022 */
#define DMA_SHADR023	(*( DMA_SHADR000_type *) 0xf00122f8u)	/* DMA Channel Shadow Address Register 023 */
#define DMA_SHADR024	(*( DMA_SHADR000_type *) 0xf0012318u)	/* DMA Channel Shadow Address Register 024 */
#define DMA_SHADR025	(*( DMA_SHADR000_type *) 0xf0012338u)	/* DMA Channel Shadow Address Register 025 */
#define DMA_SHADR026	(*( DMA_SHADR000_type *) 0xf0012358u)	/* DMA Channel Shadow Address Register 026 */
#define DMA_SHADR027	(*( DMA_SHADR000_type *) 0xf0012378u)	/* DMA Channel Shadow Address Register 027 */
#define DMA_SHADR028	(*( DMA_SHADR000_type *) 0xf0012398u)	/* DMA Channel Shadow Address Register 028 */
#define DMA_SHADR029	(*( DMA_SHADR000_type *) 0xf00123b8u)	/* DMA Channel Shadow Address Register 029 */
#define DMA_SHADR030	(*( DMA_SHADR000_type *) 0xf00123d8u)	/* DMA Channel Shadow Address Register 030 */
#define DMA_SHADR031	(*( DMA_SHADR000_type *) 0xf00123f8u)	/* DMA Channel Shadow Address Register 031 */
#define DMA_SHADR032	(*( DMA_SHADR000_type *) 0xf0012418u)	/* DMA Channel Shadow Address Register 032 */
#define DMA_SHADR033	(*( DMA_SHADR000_type *) 0xf0012438u)	/* DMA Channel Shadow Address Register 033 */
#define DMA_SHADR034	(*( DMA_SHADR000_type *) 0xf0012458u)	/* DMA Channel Shadow Address Register 034 */
#define DMA_SHADR035	(*( DMA_SHADR000_type *) 0xf0012478u)	/* DMA Channel Shadow Address Register 035 */
#define DMA_SHADR036	(*( DMA_SHADR000_type *) 0xf0012498u)	/* DMA Channel Shadow Address Register 036 */
#define DMA_SHADR037	(*( DMA_SHADR000_type *) 0xf00124b8u)	/* DMA Channel Shadow Address Register 037 */
#define DMA_SHADR038	(*( DMA_SHADR000_type *) 0xf00124d8u)	/* DMA Channel Shadow Address Register 038 */
#define DMA_SHADR039	(*( DMA_SHADR000_type *) 0xf00124f8u)	/* DMA Channel Shadow Address Register 039 */
#define DMA_SHADR040	(*( DMA_SHADR000_type *) 0xf0012518u)	/* DMA Channel Shadow Address Register 040 */
#define DMA_SHADR041	(*( DMA_SHADR000_type *) 0xf0012538u)	/* DMA Channel Shadow Address Register 041 */
#define DMA_SHADR042	(*( DMA_SHADR000_type *) 0xf0012558u)	/* DMA Channel Shadow Address Register 042 */
#define DMA_SHADR043	(*( DMA_SHADR000_type *) 0xf0012578u)	/* DMA Channel Shadow Address Register 043 */
#define DMA_SHADR044	(*( DMA_SHADR000_type *) 0xf0012598u)	/* DMA Channel Shadow Address Register 044 */
#define DMA_SHADR045	(*( DMA_SHADR000_type *) 0xf00125b8u)	/* DMA Channel Shadow Address Register 045 */
#define DMA_SHADR046	(*( DMA_SHADR000_type *) 0xf00125d8u)	/* DMA Channel Shadow Address Register 046 */
#define DMA_SHADR047	(*( DMA_SHADR000_type *) 0xf00125f8u)	/* DMA Channel Shadow Address Register 047 */
#define DMA_SHADR048	(*( DMA_SHADR000_type *) 0xf0012618u)	/* DMA Channel Shadow Address Register 048 */
#define DMA_SHADR049	(*( DMA_SHADR000_type *) 0xf0012638u)	/* DMA Channel Shadow Address Register 049 */
#define DMA_SHADR050	(*( DMA_SHADR000_type *) 0xf0012658u)	/* DMA Channel Shadow Address Register 050 */
#define DMA_SHADR051	(*( DMA_SHADR000_type *) 0xf0012678u)	/* DMA Channel Shadow Address Register 051 */
#define DMA_SHADR052	(*( DMA_SHADR000_type *) 0xf0012698u)	/* DMA Channel Shadow Address Register 052 */
#define DMA_SHADR053	(*( DMA_SHADR000_type *) 0xf00126b8u)	/* DMA Channel Shadow Address Register 053 */
#define DMA_SHADR054	(*( DMA_SHADR000_type *) 0xf00126d8u)	/* DMA Channel Shadow Address Register 054 */
#define DMA_SHADR055	(*( DMA_SHADR000_type *) 0xf00126f8u)	/* DMA Channel Shadow Address Register 055 */
#define DMA_SHADR056	(*( DMA_SHADR000_type *) 0xf0012718u)	/* DMA Channel Shadow Address Register 056 */
#define DMA_SHADR057	(*( DMA_SHADR000_type *) 0xf0012738u)	/* DMA Channel Shadow Address Register 057 */
#define DMA_SHADR058	(*( DMA_SHADR000_type *) 0xf0012758u)	/* DMA Channel Shadow Address Register 058 */
#define DMA_SHADR059	(*( DMA_SHADR000_type *) 0xf0012778u)	/* DMA Channel Shadow Address Register 059 */
#define DMA_SHADR060	(*( DMA_SHADR000_type *) 0xf0012798u)	/* DMA Channel Shadow Address Register 060 */
#define DMA_SHADR061	(*( DMA_SHADR000_type *) 0xf00127b8u)	/* DMA Channel Shadow Address Register 061 */
#define DMA_SHADR062	(*( DMA_SHADR000_type *) 0xf00127d8u)	/* DMA Channel Shadow Address Register 062 */
#define DMA_SHADR063	(*( DMA_SHADR000_type *) 0xf00127f8u)	/* DMA Channel Shadow Address Register 063 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int SUSAC          : 1;	/* Channel Suspend Mode or Frozen State Active for DMA Channel z */
		/* const */ unsigned int RES            : 31;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} DMA_SUSACR000_type;
#define DMA_SUSACR000	(*( DMA_SUSACR000_type *) 0xf0011c00u)	/* DMA Suspend Acknowledge Register 000 */
#define DMA_SUSACR001	(*( DMA_SUSACR000_type *) 0xf0011c04u)	/* DMA Suspend Acknowledge Register 001 */
#define DMA_SUSACR002	(*( DMA_SUSACR000_type *) 0xf0011c08u)	/* DMA Suspend Acknowledge Register 002 */
#define DMA_SUSACR003	(*( DMA_SUSACR000_type *) 0xf0011c0cu)	/* DMA Suspend Acknowledge Register 003 */
#define DMA_SUSACR004	(*( DMA_SUSACR000_type *) 0xf0011c10u)	/* DMA Suspend Acknowledge Register 004 */
#define DMA_SUSACR005	(*( DMA_SUSACR000_type *) 0xf0011c14u)	/* DMA Suspend Acknowledge Register 005 */
#define DMA_SUSACR006	(*( DMA_SUSACR000_type *) 0xf0011c18u)	/* DMA Suspend Acknowledge Register 006 */
#define DMA_SUSACR007	(*( DMA_SUSACR000_type *) 0xf0011c1cu)	/* DMA Suspend Acknowledge Register 007 */
#define DMA_SUSACR008	(*( DMA_SUSACR000_type *) 0xf0011c20u)	/* DMA Suspend Acknowledge Register 008 */
#define DMA_SUSACR009	(*( DMA_SUSACR000_type *) 0xf0011c24u)	/* DMA Suspend Acknowledge Register 009 */
#define DMA_SUSACR010	(*( DMA_SUSACR000_type *) 0xf0011c28u)	/* DMA Suspend Acknowledge Register 010 */
#define DMA_SUSACR011	(*( DMA_SUSACR000_type *) 0xf0011c2cu)	/* DMA Suspend Acknowledge Register 011 */
#define DMA_SUSACR012	(*( DMA_SUSACR000_type *) 0xf0011c30u)	/* DMA Suspend Acknowledge Register 012 */
#define DMA_SUSACR013	(*( DMA_SUSACR000_type *) 0xf0011c34u)	/* DMA Suspend Acknowledge Register 013 */
#define DMA_SUSACR014	(*( DMA_SUSACR000_type *) 0xf0011c38u)	/* DMA Suspend Acknowledge Register 014 */
#define DMA_SUSACR015	(*( DMA_SUSACR000_type *) 0xf0011c3cu)	/* DMA Suspend Acknowledge Register 015 */
#define DMA_SUSACR016	(*( DMA_SUSACR000_type *) 0xf0011c40u)	/* DMA Suspend Acknowledge Register 016 */
#define DMA_SUSACR017	(*( DMA_SUSACR000_type *) 0xf0011c44u)	/* DMA Suspend Acknowledge Register 017 */
#define DMA_SUSACR018	(*( DMA_SUSACR000_type *) 0xf0011c48u)	/* DMA Suspend Acknowledge Register 018 */
#define DMA_SUSACR019	(*( DMA_SUSACR000_type *) 0xf0011c4cu)	/* DMA Suspend Acknowledge Register 019 */
#define DMA_SUSACR020	(*( DMA_SUSACR000_type *) 0xf0011c50u)	/* DMA Suspend Acknowledge Register 020 */
#define DMA_SUSACR021	(*( DMA_SUSACR000_type *) 0xf0011c54u)	/* DMA Suspend Acknowledge Register 021 */
#define DMA_SUSACR022	(*( DMA_SUSACR000_type *) 0xf0011c58u)	/* DMA Suspend Acknowledge Register 022 */
#define DMA_SUSACR023	(*( DMA_SUSACR000_type *) 0xf0011c5cu)	/* DMA Suspend Acknowledge Register 023 */
#define DMA_SUSACR024	(*( DMA_SUSACR000_type *) 0xf0011c60u)	/* DMA Suspend Acknowledge Register 024 */
#define DMA_SUSACR025	(*( DMA_SUSACR000_type *) 0xf0011c64u)	/* DMA Suspend Acknowledge Register 025 */
#define DMA_SUSACR026	(*( DMA_SUSACR000_type *) 0xf0011c68u)	/* DMA Suspend Acknowledge Register 026 */
#define DMA_SUSACR027	(*( DMA_SUSACR000_type *) 0xf0011c6cu)	/* DMA Suspend Acknowledge Register 027 */
#define DMA_SUSACR028	(*( DMA_SUSACR000_type *) 0xf0011c70u)	/* DMA Suspend Acknowledge Register 028 */
#define DMA_SUSACR029	(*( DMA_SUSACR000_type *) 0xf0011c74u)	/* DMA Suspend Acknowledge Register 029 */
#define DMA_SUSACR030	(*( DMA_SUSACR000_type *) 0xf0011c78u)	/* DMA Suspend Acknowledge Register 030 */
#define DMA_SUSACR031	(*( DMA_SUSACR000_type *) 0xf0011c7cu)	/* DMA Suspend Acknowledge Register 031 */
#define DMA_SUSACR032	(*( DMA_SUSACR000_type *) 0xf0011c80u)	/* DMA Suspend Acknowledge Register 032 */
#define DMA_SUSACR033	(*( DMA_SUSACR000_type *) 0xf0011c84u)	/* DMA Suspend Acknowledge Register 033 */
#define DMA_SUSACR034	(*( DMA_SUSACR000_type *) 0xf0011c88u)	/* DMA Suspend Acknowledge Register 034 */
#define DMA_SUSACR035	(*( DMA_SUSACR000_type *) 0xf0011c8cu)	/* DMA Suspend Acknowledge Register 035 */
#define DMA_SUSACR036	(*( DMA_SUSACR000_type *) 0xf0011c90u)	/* DMA Suspend Acknowledge Register 036 */
#define DMA_SUSACR037	(*( DMA_SUSACR000_type *) 0xf0011c94u)	/* DMA Suspend Acknowledge Register 037 */
#define DMA_SUSACR038	(*( DMA_SUSACR000_type *) 0xf0011c98u)	/* DMA Suspend Acknowledge Register 038 */
#define DMA_SUSACR039	(*( DMA_SUSACR000_type *) 0xf0011c9cu)	/* DMA Suspend Acknowledge Register 039 */
#define DMA_SUSACR040	(*( DMA_SUSACR000_type *) 0xf0011ca0u)	/* DMA Suspend Acknowledge Register 040 */
#define DMA_SUSACR041	(*( DMA_SUSACR000_type *) 0xf0011ca4u)	/* DMA Suspend Acknowledge Register 041 */
#define DMA_SUSACR042	(*( DMA_SUSACR000_type *) 0xf0011ca8u)	/* DMA Suspend Acknowledge Register 042 */
#define DMA_SUSACR043	(*( DMA_SUSACR000_type *) 0xf0011cacu)	/* DMA Suspend Acknowledge Register 043 */
#define DMA_SUSACR044	(*( DMA_SUSACR000_type *) 0xf0011cb0u)	/* DMA Suspend Acknowledge Register 044 */
#define DMA_SUSACR045	(*( DMA_SUSACR000_type *) 0xf0011cb4u)	/* DMA Suspend Acknowledge Register 045 */
#define DMA_SUSACR046	(*( DMA_SUSACR000_type *) 0xf0011cb8u)	/* DMA Suspend Acknowledge Register 046 */
#define DMA_SUSACR047	(*( DMA_SUSACR000_type *) 0xf0011cbcu)	/* DMA Suspend Acknowledge Register 047 */
#define DMA_SUSACR048	(*( DMA_SUSACR000_type *) 0xf0011cc0u)	/* DMA Suspend Acknowledge Register 048 */
#define DMA_SUSACR049	(*( DMA_SUSACR000_type *) 0xf0011cc4u)	/* DMA Suspend Acknowledge Register 049 */
#define DMA_SUSACR050	(*( DMA_SUSACR000_type *) 0xf0011cc8u)	/* DMA Suspend Acknowledge Register 050 */
#define DMA_SUSACR051	(*( DMA_SUSACR000_type *) 0xf0011cccu)	/* DMA Suspend Acknowledge Register 051 */
#define DMA_SUSACR052	(*( DMA_SUSACR000_type *) 0xf0011cd0u)	/* DMA Suspend Acknowledge Register 052 */
#define DMA_SUSACR053	(*( DMA_SUSACR000_type *) 0xf0011cd4u)	/* DMA Suspend Acknowledge Register 053 */
#define DMA_SUSACR054	(*( DMA_SUSACR000_type *) 0xf0011cd8u)	/* DMA Suspend Acknowledge Register 054 */
#define DMA_SUSACR055	(*( DMA_SUSACR000_type *) 0xf0011cdcu)	/* DMA Suspend Acknowledge Register 055 */
#define DMA_SUSACR056	(*( DMA_SUSACR000_type *) 0xf0011ce0u)	/* DMA Suspend Acknowledge Register 056 */
#define DMA_SUSACR057	(*( DMA_SUSACR000_type *) 0xf0011ce4u)	/* DMA Suspend Acknowledge Register 057 */
#define DMA_SUSACR058	(*( DMA_SUSACR000_type *) 0xf0011ce8u)	/* DMA Suspend Acknowledge Register 058 */
#define DMA_SUSACR059	(*( DMA_SUSACR000_type *) 0xf0011cecu)	/* DMA Suspend Acknowledge Register 059 */
#define DMA_SUSACR060	(*( DMA_SUSACR000_type *) 0xf0011cf0u)	/* DMA Suspend Acknowledge Register 060 */
#define DMA_SUSACR061	(*( DMA_SUSACR000_type *) 0xf0011cf4u)	/* DMA Suspend Acknowledge Register 061 */
#define DMA_SUSACR062	(*( DMA_SUSACR000_type *) 0xf0011cf8u)	/* DMA Suspend Acknowledge Register 062 */
#define DMA_SUSACR063	(*( DMA_SUSACR000_type *) 0xf0011cfcu)	/* DMA Suspend Acknowledge Register 063 */

typedef volatile union
{
	struct
	{ 
		unsigned int SUSEN          : 1;	/* Channel Suspend Enable for DMA Channel z */
		/* const */ unsigned int RES            : 31;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} DMA_SUSENR000_type;
#define DMA_SUSENR000	(*( DMA_SUSENR000_type *) 0xf0011a00u)	/* DMA Suspend Enable Register 000 */
#define DMA_SUSENR001	(*( DMA_SUSENR000_type *) 0xf0011a04u)	/* DMA Suspend Enable Register 001 */
#define DMA_SUSENR002	(*( DMA_SUSENR000_type *) 0xf0011a08u)	/* DMA Suspend Enable Register 002 */
#define DMA_SUSENR003	(*( DMA_SUSENR000_type *) 0xf0011a0cu)	/* DMA Suspend Enable Register 003 */
#define DMA_SUSENR004	(*( DMA_SUSENR000_type *) 0xf0011a10u)	/* DMA Suspend Enable Register 004 */
#define DMA_SUSENR005	(*( DMA_SUSENR000_type *) 0xf0011a14u)	/* DMA Suspend Enable Register 005 */
#define DMA_SUSENR006	(*( DMA_SUSENR000_type *) 0xf0011a18u)	/* DMA Suspend Enable Register 006 */
#define DMA_SUSENR007	(*( DMA_SUSENR000_type *) 0xf0011a1cu)	/* DMA Suspend Enable Register 007 */
#define DMA_SUSENR008	(*( DMA_SUSENR000_type *) 0xf0011a20u)	/* DMA Suspend Enable Register 008 */
#define DMA_SUSENR009	(*( DMA_SUSENR000_type *) 0xf0011a24u)	/* DMA Suspend Enable Register 009 */
#define DMA_SUSENR010	(*( DMA_SUSENR000_type *) 0xf0011a28u)	/* DMA Suspend Enable Register 010 */
#define DMA_SUSENR011	(*( DMA_SUSENR000_type *) 0xf0011a2cu)	/* DMA Suspend Enable Register 011 */
#define DMA_SUSENR012	(*( DMA_SUSENR000_type *) 0xf0011a30u)	/* DMA Suspend Enable Register 012 */
#define DMA_SUSENR013	(*( DMA_SUSENR000_type *) 0xf0011a34u)	/* DMA Suspend Enable Register 013 */
#define DMA_SUSENR014	(*( DMA_SUSENR000_type *) 0xf0011a38u)	/* DMA Suspend Enable Register 014 */
#define DMA_SUSENR015	(*( DMA_SUSENR000_type *) 0xf0011a3cu)	/* DMA Suspend Enable Register 015 */
#define DMA_SUSENR016	(*( DMA_SUSENR000_type *) 0xf0011a40u)	/* DMA Suspend Enable Register 016 */
#define DMA_SUSENR017	(*( DMA_SUSENR000_type *) 0xf0011a44u)	/* DMA Suspend Enable Register 017 */
#define DMA_SUSENR018	(*( DMA_SUSENR000_type *) 0xf0011a48u)	/* DMA Suspend Enable Register 018 */
#define DMA_SUSENR019	(*( DMA_SUSENR000_type *) 0xf0011a4cu)	/* DMA Suspend Enable Register 019 */
#define DMA_SUSENR020	(*( DMA_SUSENR000_type *) 0xf0011a50u)	/* DMA Suspend Enable Register 020 */
#define DMA_SUSENR021	(*( DMA_SUSENR000_type *) 0xf0011a54u)	/* DMA Suspend Enable Register 021 */
#define DMA_SUSENR022	(*( DMA_SUSENR000_type *) 0xf0011a58u)	/* DMA Suspend Enable Register 022 */
#define DMA_SUSENR023	(*( DMA_SUSENR000_type *) 0xf0011a5cu)	/* DMA Suspend Enable Register 023 */
#define DMA_SUSENR024	(*( DMA_SUSENR000_type *) 0xf0011a60u)	/* DMA Suspend Enable Register 024 */
#define DMA_SUSENR025	(*( DMA_SUSENR000_type *) 0xf0011a64u)	/* DMA Suspend Enable Register 025 */
#define DMA_SUSENR026	(*( DMA_SUSENR000_type *) 0xf0011a68u)	/* DMA Suspend Enable Register 026 */
#define DMA_SUSENR027	(*( DMA_SUSENR000_type *) 0xf0011a6cu)	/* DMA Suspend Enable Register 027 */
#define DMA_SUSENR028	(*( DMA_SUSENR000_type *) 0xf0011a70u)	/* DMA Suspend Enable Register 028 */
#define DMA_SUSENR029	(*( DMA_SUSENR000_type *) 0xf0011a74u)	/* DMA Suspend Enable Register 029 */
#define DMA_SUSENR030	(*( DMA_SUSENR000_type *) 0xf0011a78u)	/* DMA Suspend Enable Register 030 */
#define DMA_SUSENR031	(*( DMA_SUSENR000_type *) 0xf0011a7cu)	/* DMA Suspend Enable Register 031 */
#define DMA_SUSENR032	(*( DMA_SUSENR000_type *) 0xf0011a80u)	/* DMA Suspend Enable Register 032 */
#define DMA_SUSENR033	(*( DMA_SUSENR000_type *) 0xf0011a84u)	/* DMA Suspend Enable Register 033 */
#define DMA_SUSENR034	(*( DMA_SUSENR000_type *) 0xf0011a88u)	/* DMA Suspend Enable Register 034 */
#define DMA_SUSENR035	(*( DMA_SUSENR000_type *) 0xf0011a8cu)	/* DMA Suspend Enable Register 035 */
#define DMA_SUSENR036	(*( DMA_SUSENR000_type *) 0xf0011a90u)	/* DMA Suspend Enable Register 036 */
#define DMA_SUSENR037	(*( DMA_SUSENR000_type *) 0xf0011a94u)	/* DMA Suspend Enable Register 037 */
#define DMA_SUSENR038	(*( DMA_SUSENR000_type *) 0xf0011a98u)	/* DMA Suspend Enable Register 038 */
#define DMA_SUSENR039	(*( DMA_SUSENR000_type *) 0xf0011a9cu)	/* DMA Suspend Enable Register 039 */
#define DMA_SUSENR040	(*( DMA_SUSENR000_type *) 0xf0011aa0u)	/* DMA Suspend Enable Register 040 */
#define DMA_SUSENR041	(*( DMA_SUSENR000_type *) 0xf0011aa4u)	/* DMA Suspend Enable Register 041 */
#define DMA_SUSENR042	(*( DMA_SUSENR000_type *) 0xf0011aa8u)	/* DMA Suspend Enable Register 042 */
#define DMA_SUSENR043	(*( DMA_SUSENR000_type *) 0xf0011aacu)	/* DMA Suspend Enable Register 043 */
#define DMA_SUSENR044	(*( DMA_SUSENR000_type *) 0xf0011ab0u)	/* DMA Suspend Enable Register 044 */
#define DMA_SUSENR045	(*( DMA_SUSENR000_type *) 0xf0011ab4u)	/* DMA Suspend Enable Register 045 */
#define DMA_SUSENR046	(*( DMA_SUSENR000_type *) 0xf0011ab8u)	/* DMA Suspend Enable Register 046 */
#define DMA_SUSENR047	(*( DMA_SUSENR000_type *) 0xf0011abcu)	/* DMA Suspend Enable Register 047 */
#define DMA_SUSENR048	(*( DMA_SUSENR000_type *) 0xf0011ac0u)	/* DMA Suspend Enable Register 048 */
#define DMA_SUSENR049	(*( DMA_SUSENR000_type *) 0xf0011ac4u)	/* DMA Suspend Enable Register 049 */
#define DMA_SUSENR050	(*( DMA_SUSENR000_type *) 0xf0011ac8u)	/* DMA Suspend Enable Register 050 */
#define DMA_SUSENR051	(*( DMA_SUSENR000_type *) 0xf0011accu)	/* DMA Suspend Enable Register 051 */
#define DMA_SUSENR052	(*( DMA_SUSENR000_type *) 0xf0011ad0u)	/* DMA Suspend Enable Register 052 */
#define DMA_SUSENR053	(*( DMA_SUSENR000_type *) 0xf0011ad4u)	/* DMA Suspend Enable Register 053 */
#define DMA_SUSENR054	(*( DMA_SUSENR000_type *) 0xf0011ad8u)	/* DMA Suspend Enable Register 054 */
#define DMA_SUSENR055	(*( DMA_SUSENR000_type *) 0xf0011adcu)	/* DMA Suspend Enable Register 055 */
#define DMA_SUSENR056	(*( DMA_SUSENR000_type *) 0xf0011ae0u)	/* DMA Suspend Enable Register 056 */
#define DMA_SUSENR057	(*( DMA_SUSENR000_type *) 0xf0011ae4u)	/* DMA Suspend Enable Register 057 */
#define DMA_SUSENR058	(*( DMA_SUSENR000_type *) 0xf0011ae8u)	/* DMA Suspend Enable Register 058 */
#define DMA_SUSENR059	(*( DMA_SUSENR000_type *) 0xf0011aecu)	/* DMA Suspend Enable Register 059 */
#define DMA_SUSENR060	(*( DMA_SUSENR000_type *) 0xf0011af0u)	/* DMA Suspend Enable Register 060 */
#define DMA_SUSENR061	(*( DMA_SUSENR000_type *) 0xf0011af4u)	/* DMA Suspend Enable Register 061 */
#define DMA_SUSENR062	(*( DMA_SUSENR000_type *) 0xf0011af8u)	/* DMA Suspend Enable Register 062 */
#define DMA_SUSENR063	(*( DMA_SUSENR000_type *) 0xf0011afcu)	/* DMA Suspend Enable Register 063 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int COUNT          : 32;	/* Timestamp Count */
	} B;
	int I;
	unsigned int U;

} DMA_TIME_type;
#define DMA_TIME	(*( DMA_TIME_type *) 0xf0011210u)	/* Time Register */

typedef volatile union
{
	struct
	{ 
		unsigned int RST            : 1;	/* DMA Channel Reset */
		/* const */ unsigned int HTRE           : 1;	/* Hardware Transaction Request Enable State */
		/* const */ unsigned int TRL            : 1;	/* Transaction/Transfer Request Lost of DMA Channel */
		/* const */ unsigned int CH             : 1;	/* Transaction Request State */
		/* const */ unsigned int RES            : 4;	/* Reserved */
		unsigned int HLTREQ         : 1;	/* Halt Request */
		/* const */ unsigned int HLTACK         : 1;	/* Halt Acknowledge */
		/* const */ unsigned int RES_8          : 6;	/* Reserved */
		unsigned int ECH            : 1;	/* Enable Hardware Transfer Request */
		unsigned int DCH            : 1;	/* Disable Hardware Transfer Request */
		unsigned int CTL            : 1;	/* Clear Transaction Request Lost for DMA Channel z */
		/* const */ unsigned int RES_12         : 5;	/* Reserved */
		unsigned int HLTCLR         : 1;	/* Clear Halt Request and Acknowledge */
		/* const */ unsigned int RES_14         : 7;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} DMA_TSR000_type;
#define DMA_TSR000	(*( DMA_TSR000_type *) 0xf0011e00u)	/* DMA Transaction State Register 000 */
#define DMA_TSR001	(*( DMA_TSR000_type *) 0xf0011e04u)	/* DMA Transaction State Register 001 */
#define DMA_TSR002	(*( DMA_TSR000_type *) 0xf0011e08u)	/* DMA Transaction State Register 002 */
#define DMA_TSR003	(*( DMA_TSR000_type *) 0xf0011e0cu)	/* DMA Transaction State Register 003 */
#define DMA_TSR004	(*( DMA_TSR000_type *) 0xf0011e10u)	/* DMA Transaction State Register 004 */
#define DMA_TSR005	(*( DMA_TSR000_type *) 0xf0011e14u)	/* DMA Transaction State Register 005 */
#define DMA_TSR006	(*( DMA_TSR000_type *) 0xf0011e18u)	/* DMA Transaction State Register 006 */
#define DMA_TSR007	(*( DMA_TSR000_type *) 0xf0011e1cu)	/* DMA Transaction State Register 007 */
#define DMA_TSR008	(*( DMA_TSR000_type *) 0xf0011e20u)	/* DMA Transaction State Register 008 */
#define DMA_TSR009	(*( DMA_TSR000_type *) 0xf0011e24u)	/* DMA Transaction State Register 009 */
#define DMA_TSR010	(*( DMA_TSR000_type *) 0xf0011e28u)	/* DMA Transaction State Register 010 */
#define DMA_TSR011	(*( DMA_TSR000_type *) 0xf0011e2cu)	/* DMA Transaction State Register 011 */
#define DMA_TSR012	(*( DMA_TSR000_type *) 0xf0011e30u)	/* DMA Transaction State Register 012 */
#define DMA_TSR013	(*( DMA_TSR000_type *) 0xf0011e34u)	/* DMA Transaction State Register 013 */
#define DMA_TSR014	(*( DMA_TSR000_type *) 0xf0011e38u)	/* DMA Transaction State Register 014 */
#define DMA_TSR015	(*( DMA_TSR000_type *) 0xf0011e3cu)	/* DMA Transaction State Register 015 */
#define DMA_TSR016	(*( DMA_TSR000_type *) 0xf0011e40u)	/* DMA Transaction State Register 016 */
#define DMA_TSR017	(*( DMA_TSR000_type *) 0xf0011e44u)	/* DMA Transaction State Register 017 */
#define DMA_TSR018	(*( DMA_TSR000_type *) 0xf0011e48u)	/* DMA Transaction State Register 018 */
#define DMA_TSR019	(*( DMA_TSR000_type *) 0xf0011e4cu)	/* DMA Transaction State Register 019 */
#define DMA_TSR020	(*( DMA_TSR000_type *) 0xf0011e50u)	/* DMA Transaction State Register 020 */
#define DMA_TSR021	(*( DMA_TSR000_type *) 0xf0011e54u)	/* DMA Transaction State Register 021 */
#define DMA_TSR022	(*( DMA_TSR000_type *) 0xf0011e58u)	/* DMA Transaction State Register 022 */
#define DMA_TSR023	(*( DMA_TSR000_type *) 0xf0011e5cu)	/* DMA Transaction State Register 023 */
#define DMA_TSR024	(*( DMA_TSR000_type *) 0xf0011e60u)	/* DMA Transaction State Register 024 */
#define DMA_TSR025	(*( DMA_TSR000_type *) 0xf0011e64u)	/* DMA Transaction State Register 025 */
#define DMA_TSR026	(*( DMA_TSR000_type *) 0xf0011e68u)	/* DMA Transaction State Register 026 */
#define DMA_TSR027	(*( DMA_TSR000_type *) 0xf0011e6cu)	/* DMA Transaction State Register 027 */
#define DMA_TSR028	(*( DMA_TSR000_type *) 0xf0011e70u)	/* DMA Transaction State Register 028 */
#define DMA_TSR029	(*( DMA_TSR000_type *) 0xf0011e74u)	/* DMA Transaction State Register 029 */
#define DMA_TSR030	(*( DMA_TSR000_type *) 0xf0011e78u)	/* DMA Transaction State Register 030 */
#define DMA_TSR031	(*( DMA_TSR000_type *) 0xf0011e7cu)	/* DMA Transaction State Register 031 */
#define DMA_TSR032	(*( DMA_TSR000_type *) 0xf0011e80u)	/* DMA Transaction State Register 032 */
#define DMA_TSR033	(*( DMA_TSR000_type *) 0xf0011e84u)	/* DMA Transaction State Register 033 */
#define DMA_TSR034	(*( DMA_TSR000_type *) 0xf0011e88u)	/* DMA Transaction State Register 034 */
#define DMA_TSR035	(*( DMA_TSR000_type *) 0xf0011e8cu)	/* DMA Transaction State Register 035 */
#define DMA_TSR036	(*( DMA_TSR000_type *) 0xf0011e90u)	/* DMA Transaction State Register 036 */
#define DMA_TSR037	(*( DMA_TSR000_type *) 0xf0011e94u)	/* DMA Transaction State Register 037 */
#define DMA_TSR038	(*( DMA_TSR000_type *) 0xf0011e98u)	/* DMA Transaction State Register 038 */
#define DMA_TSR039	(*( DMA_TSR000_type *) 0xf0011e9cu)	/* DMA Transaction State Register 039 */
#define DMA_TSR040	(*( DMA_TSR000_type *) 0xf0011ea0u)	/* DMA Transaction State Register 040 */
#define DMA_TSR041	(*( DMA_TSR000_type *) 0xf0011ea4u)	/* DMA Transaction State Register 041 */
#define DMA_TSR042	(*( DMA_TSR000_type *) 0xf0011ea8u)	/* DMA Transaction State Register 042 */
#define DMA_TSR043	(*( DMA_TSR000_type *) 0xf0011eacu)	/* DMA Transaction State Register 043 */
#define DMA_TSR044	(*( DMA_TSR000_type *) 0xf0011eb0u)	/* DMA Transaction State Register 044 */
#define DMA_TSR045	(*( DMA_TSR000_type *) 0xf0011eb4u)	/* DMA Transaction State Register 045 */
#define DMA_TSR046	(*( DMA_TSR000_type *) 0xf0011eb8u)	/* DMA Transaction State Register 046 */
#define DMA_TSR047	(*( DMA_TSR000_type *) 0xf0011ebcu)	/* DMA Transaction State Register 047 */
#define DMA_TSR048	(*( DMA_TSR000_type *) 0xf0011ec0u)	/* DMA Transaction State Register 048 */
#define DMA_TSR049	(*( DMA_TSR000_type *) 0xf0011ec4u)	/* DMA Transaction State Register 049 */
#define DMA_TSR050	(*( DMA_TSR000_type *) 0xf0011ec8u)	/* DMA Transaction State Register 050 */
#define DMA_TSR051	(*( DMA_TSR000_type *) 0xf0011eccu)	/* DMA Transaction State Register 051 */
#define DMA_TSR052	(*( DMA_TSR000_type *) 0xf0011ed0u)	/* DMA Transaction State Register 052 */
#define DMA_TSR053	(*( DMA_TSR000_type *) 0xf0011ed4u)	/* DMA Transaction State Register 053 */
#define DMA_TSR054	(*( DMA_TSR000_type *) 0xf0011ed8u)	/* DMA Transaction State Register 054 */
#define DMA_TSR055	(*( DMA_TSR000_type *) 0xf0011edcu)	/* DMA Transaction State Register 055 */
#define DMA_TSR056	(*( DMA_TSR000_type *) 0xf0011ee0u)	/* DMA Transaction State Register 056 */
#define DMA_TSR057	(*( DMA_TSR000_type *) 0xf0011ee4u)	/* DMA Transaction State Register 057 */
#define DMA_TSR058	(*( DMA_TSR000_type *) 0xf0011ee8u)	/* DMA Transaction State Register 058 */
#define DMA_TSR059	(*( DMA_TSR000_type *) 0xf0011eecu)	/* DMA Transaction State Register 059 */
#define DMA_TSR060	(*( DMA_TSR000_type *) 0xf0011ef0u)	/* DMA Transaction State Register 060 */
#define DMA_TSR061	(*( DMA_TSR000_type *) 0xf0011ef4u)	/* DMA Transaction State Register 061 */
#define DMA_TSR062	(*( DMA_TSR000_type *) 0xf0011ef8u)	/* DMA Transaction State Register 062 */
#define DMA_TSR063	(*( DMA_TSR000_type *) 0xf0011efcu)	/* DMA Transaction State Register 063 */


/* FCE */
typedef volatile union
{
	struct
	{ 
		unsigned int EN0            : 1;	/* Access Enable for Master TAG ID 0 */
		unsigned int EN1            : 1;	/* Access Enable for Master TAG ID 1 */
		unsigned int EN2            : 1;	/* Access Enable for Master TAG ID 2 */
		unsigned int EN3            : 1;	/* Access Enable for Master TAG ID 3 */
		unsigned int EN4            : 1;	/* Access Enable for Master TAG ID 4 */
		unsigned int EN5            : 1;	/* Access Enable for Master TAG ID 5 */
		unsigned int EN6            : 1;	/* Access Enable for Master TAG ID 6 */
		unsigned int EN7            : 1;	/* Access Enable for Master TAG ID 7 */
		unsigned int EN8            : 1;	/* Access Enable for Master TAG ID 8 */
		unsigned int EN9            : 1;	/* Access Enable for Master TAG ID 9 */
		unsigned int EN10           : 1;	/* Access Enable for Master TAG ID 10 */
		unsigned int EN11           : 1;	/* Access Enable for Master TAG ID 11 */
		unsigned int EN12           : 1;	/* Access Enable for Master TAG ID 12 */
		unsigned int EN13           : 1;	/* Access Enable for Master TAG ID 13 */
		unsigned int EN14           : 1;	/* Access Enable for Master TAG ID 14 */
		unsigned int EN15           : 1;	/* Access Enable for Master TAG ID 15 */
		unsigned int EN16           : 1;	/* Access Enable for Master TAG ID 16 */
		unsigned int EN17           : 1;	/* Access Enable for Master TAG ID 17 */
		unsigned int EN18           : 1;	/* Access Enable for Master TAG ID 18 */
		unsigned int EN19           : 1;	/* Access Enable for Master TAG ID 19 */
		unsigned int EN20           : 1;	/* Access Enable for Master TAG ID 20 */
		unsigned int EN21           : 1;	/* Access Enable for Master TAG ID 21 */
		unsigned int EN22           : 1;	/* Access Enable for Master TAG ID 22 */
		unsigned int EN23           : 1;	/* Access Enable for Master TAG ID 23 */
		unsigned int EN24           : 1;	/* Access Enable for Master TAG ID 24 */
		unsigned int EN25           : 1;	/* Access Enable for Master TAG ID 25 */
		unsigned int EN26           : 1;	/* Access Enable for Master TAG ID 26 */
		unsigned int EN27           : 1;	/* Access Enable for Master TAG ID 27 */
		unsigned int EN28           : 1;	/* Access Enable for Master TAG ID 28 */
		unsigned int EN29           : 1;	/* Access Enable for Master TAG ID 29 */
		unsigned int EN30           : 1;	/* Access Enable for Master TAG ID 30 */
		unsigned int EN31           : 1;	/* Access Enable for Master TAG ID 31 */
	} B;
	int I;
	unsigned int U;

} FCE_ACCEN0_type;
#define FCE_ACCEN0	(*( FCE_ACCEN0_type *) 0xf0003ffcu)	/* Access Enable Register 0 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int Reserved       : 32;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} FCE_ACCEN1_type;
#define FCE_ACCEN1	(*( FCE_ACCEN1_type *) 0xf0003ff8u)	/* Access Enable Register 1 */

typedef volatile union
{
	struct
	{ 
		unsigned int CMI            : 1;	/* CRC Mismatch Interrupt */
		unsigned int CEI            : 1;	/* Configuration Error Interrupt */
		unsigned int LEI            : 1;	/* Length Error Interrupt */
		unsigned int BEI            : 1;	/* Bus Error Interrupt */
		unsigned int CCE            : 1;	/* CRC Check Comparison */
		unsigned int ALR            : 1;	/* Automatic Length Reload */
		unsigned int                : 2;
		unsigned int REFIN          : 1;	/* IR Byte Wise Reflection */
		unsigned int REFOUT         : 1;	/* CRC 32-Bit Wise Reflection */
		unsigned int XSEL           : 1;	/* Selects the value to be xored with the final CRC */
		unsigned int                : 21;
	} B;
	int I;
	unsigned int U;

} FCE_CFG0_type;
#define FCE_CFG0	(*( FCE_CFG0_type *) 0xf0003f28u)	/* CRC Configuration Register 0 */
#define FCE_CFG1	(*( FCE_CFG0_type *) 0xf0003f48u)	/* CRC Configuration Register 1 */
#define FCE_CFG2	(*( FCE_CFG0_type *) 0xf0003f68u)	/* CRC Configuration Register 2 */
#define FCE_CFG3	(*( FCE_CFG0_type *) 0xf0003f88u)	/* CRC Configuration Register 3 */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 CHECK          : 32;	/* CHECK Register */
	} B;
	int I;
	unsigned int U;

} FCE_CHECK0_type;
#define FCE_CHECK0	(*( FCE_CHECK0_type *) 0xf0003f34u)	/* CRC Check Register 0 */
#define FCE_CHECK1	(*( FCE_CHECK0_type *) 0xf0003f54u)	/* CRC Check Register 1 */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 CHECK          : 16;	/* CHECK Register */
		unsigned __sfrbit32                : 16;
	} B;
	int I;
	unsigned int U;

} FCE_CHECK2_type;
#define FCE_CHECK2	(*( FCE_CHECK2_type *) 0xf0003f74u)	/* CRC Check Register 2 */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 CHECK          : 8;	/* CHECK Register */
		unsigned __sfrbit32                : 24;
	} B;
	int I;
	unsigned int U;

} FCE_CHECK3_type;
#define FCE_CHECK3	(*( FCE_CHECK3_type *) 0xf0003f94u)	/* CRC Check Register 3 */

typedef volatile union
{
	struct
	{ 
		unsigned int DISR           : 1;	/* Module Disable Request Bit */
		/* const */ unsigned int DISS           : 1;	/* Module Disable Status Bit */
		unsigned int                : 30;
	} B;
	int I;
	unsigned int U;

} FCE_CLC_type;
#define FCE_CLC	(*( FCE_CLC_type *) 0xf0003f00u)	/* Clock Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int CRC            : 32;	/* CRC Register */
	} B;
	int I;
	unsigned int U;

} FCE_CRC0_type;
#define FCE_CRC0	(*( FCE_CRC0_type *) 0xf0003f38u)	/* CRC Register 0 */
#define FCE_CRC1	(*( FCE_CRC0_type *) 0xf0003f58u)	/* CRC Register 1 */

typedef volatile union
{
	struct
	{ 
		unsigned int CRC            : 16;	/* CRC Register */
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} FCE_CRC2_type;
#define FCE_CRC2	(*( FCE_CRC2_type *) 0xf0003f78u)	/* CRC Register 2 */

typedef volatile union
{
	struct
	{ 
		unsigned int CRC            : 8;	/* CRC Register */
		unsigned int                : 24;
	} B;
	int I;
	unsigned int U;

} FCE_CRC3_type;
#define FCE_CRC3	(*( FCE_CRC3_type *) 0xf0003f98u)	/* CRC Register 3 */

typedef volatile union
{
	struct
	{ 
		unsigned int FCM            : 1;	/* Force CRC Mismatch */
		unsigned int FRM_CFG        : 1;	/* Force CFG Register Mismatch */
		unsigned int FRM_CHECK      : 1;	/* Force Check Register Mismatch */
		unsigned int                : 29;
	} B;
	int I;
	unsigned int U;

} FCE_CTR0_type;
#define FCE_CTR0	(*( FCE_CTR0_type *) 0xf0003f3cu)	/* CRC Test Register 0 */
#define FCE_CTR1	(*( FCE_CTR0_type *) 0xf0003f5cu)	/* CRC Test Register 1 */
#define FCE_CTR2	(*( FCE_CTR0_type *) 0xf0003f7cu)	/* CRC Test Register 2 */
#define FCE_CTR3	(*( FCE_CTR0_type *) 0xf0003f9cu)	/* CRC Test Register 3 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int MOD_REV        : 8;	/* Module Revision Number */
		/* const */ unsigned int MOD_TYPE       : 8;	/* Module Type */
		/* const */ unsigned int MOD_NUMBER     : 16;	/* Module Number Value */
	} B;
	int I;
	unsigned int U;

} FCE_ID_type;
#define FCE_ID	(*( FCE_ID_type *) 0xf0003f08u)	/* Module Identification Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 IR             : 32;	/* Input Register */
	} B;
	int I;
	unsigned int U;

} FCE_IR0_type;
#define FCE_IR0	(*( FCE_IR0_type *) 0xf0003f20u)	/* Input Register 0 */
#define FCE_IR1	(*( FCE_IR0_type *) 0xf0003f40u)	/* Input Register 1 */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit16 IR             : 16;	/* Input Register */
		unsigned __sfrbit16                : 16;
	} B;
	int I;
	unsigned int U;

} FCE_IR2_type;
#define FCE_IR2	(*( FCE_IR2_type *) 0xf0003f60u)	/* Input Register 2 */

typedef volatile union
{
	struct
	{ 
		unsigned int IR             : 8;	/* Input Register */
		unsigned int                : 24;
	} B;
	int I;
	unsigned int U;

} FCE_IR3_type;
#define FCE_IR3	(*( FCE_IR3_type *) 0xf0003f80u)	/* Input Register 3 */

typedef volatile union
{
	struct
	{ 
		unsigned int RST            : 1;	/* Kernel Reset */
		unsigned int RSTSTAT        : 1;	/* Kernel Reset Status */
		unsigned int                : 30;
	} B;
	int I;
	unsigned int U;

} FCE_KRST0_type;
#define FCE_KRST0	(*( FCE_KRST0_type *) 0xf0003ff4u)	/* Kernel Reset Register 0 */

typedef volatile union
{
	struct
	{ 
		unsigned int RST            : 1;	/* Kernel Reset */
		unsigned int                : 31;
	} B;
	int I;
	unsigned int U;

} FCE_KRST1_type;
#define FCE_KRST1	(*( FCE_KRST1_type *) 0xf0003ff0u)	/* Kernel Reset Register 1 */

typedef volatile union
{
	struct
	{ 
		unsigned int CLR            : 1;	/* Kernel Reset Status Clear */
		unsigned int                : 31;
	} B;
	int I;
	unsigned int U;

} FCE_KRSTCLR_type;
#define FCE_KRSTCLR	(*( FCE_KRSTCLR_type *) 0xf0003fecu)	/* Kernel Reset Status Clear Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 LENGTH         : 16;	/* Message Length Register */
		unsigned __sfrbit32                : 16;
	} B;
	int I;
	unsigned int U;

} FCE_LENGTH0_type;
#define FCE_LENGTH0	(*( FCE_LENGTH0_type *) 0xf0003f30u)	/* CRC Length Register 0 */
#define FCE_LENGTH1	(*( FCE_LENGTH0_type *) 0xf0003f50u)	/* CRC Length Register 1 */
#define FCE_LENGTH2	(*( FCE_LENGTH0_type *) 0xf0003f70u)	/* CRC Length Register 2 */
#define FCE_LENGTH3	(*( FCE_LENGTH0_type *) 0xf0003f90u)	/* CRC Length Register 3 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int RES            : 32;	/* Result Register */
	} B;
	int I;
	unsigned int U;

} FCE_RES0_type;
#define FCE_RES0	(*( FCE_RES0_type *) 0xf0003f24u)	/* CRC Result Register 0 */
#define FCE_RES1	(*( FCE_RES0_type *) 0xf0003f44u)	/* CRC Result Register 1 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int RES            : 16;	/* Result Register */
		/* const */ unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} FCE_RES2_type;
#define FCE_RES2	(*( FCE_RES2_type *) 0xf0003f64u)	/* CRC Result Register 2 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int RES            : 8;	/* Result Register */
		/* const */ unsigned int                : 24;
	} B;
	int I;
	unsigned int U;

} FCE_RES3_type;
#define FCE_RES3	(*( FCE_RES3_type *) 0xf0003f84u)	/* CRC Result Register 3 */

typedef volatile union
{
	struct
	{ 
		unsigned int CMF            : 1;	/* CRC Mismatch Flag */
		unsigned int CEF            : 1;	/* Configuration Error Flag */
		unsigned int LEF            : 1;	/* Length Error Flag */
		unsigned int BEF            : 1;	/* Bus Error Flag */
		unsigned int                : 28;
	} B;
	int I;
	unsigned int U;

} FCE_STS0_type;
#define FCE_STS0	(*( FCE_STS0_type *) 0xf0003f2cu)	/* CRC Status Register 0 */
#define FCE_STS1	(*( FCE_STS0_type *) 0xf0003f4cu)	/* CRC Status Register 1 */
#define FCE_STS2	(*( FCE_STS0_type *) 0xf0003f6cu)	/* CRC Status Register 2 */
#define FCE_STS3	(*( FCE_STS0_type *) 0xf0003f8cu)	/* CRC Status Register 3 */


/* INT */
typedef volatile union
{
	struct
	{ 
		unsigned int EN0            : 1;	/* Access Enable for Master TAG ID 0 */
		unsigned int EN1            : 1;	/* Access Enable for Master TAG ID 1 */
		unsigned int EN2            : 1;	/* Access Enable for Master TAG ID 2 */
		unsigned int EN3            : 1;	/* Access Enable for Master TAG ID 3 */
		unsigned int EN4            : 1;	/* Access Enable for Master TAG ID 4 */
		unsigned int EN5            : 1;	/* Access Enable for Master TAG ID 5 */
		unsigned int EN6            : 1;	/* Access Enable for Master TAG ID 6 */
		unsigned int EN7            : 1;	/* Access Enable for Master TAG ID 7 */
		unsigned int EN8            : 1;	/* Access Enable for Master TAG ID 8 */
		unsigned int EN9            : 1;	/* Access Enable for Master TAG ID 9 */
		unsigned int EN10           : 1;	/* Access Enable for Master TAG ID 10 */
		unsigned int EN11           : 1;	/* Access Enable for Master TAG ID 11 */
		unsigned int EN12           : 1;	/* Access Enable for Master TAG ID 12 */
		unsigned int EN13           : 1;	/* Access Enable for Master TAG ID 13 */
		unsigned int EN14           : 1;	/* Access Enable for Master TAG ID 14 */
		unsigned int EN15           : 1;	/* Access Enable for Master TAG ID 15 */
		unsigned int EN16           : 1;	/* Access Enable for Master TAG ID 16 */
		unsigned int EN17           : 1;	/* Access Enable for Master TAG ID 17 */
		unsigned int EN18           : 1;	/* Access Enable for Master TAG ID 18 */
		unsigned int EN19           : 1;	/* Access Enable for Master TAG ID 19 */
		unsigned int EN20           : 1;	/* Access Enable for Master TAG ID 20 */
		unsigned int EN21           : 1;	/* Access Enable for Master TAG ID 21 */
		unsigned int EN22           : 1;	/* Access Enable for Master TAG ID 22 */
		unsigned int EN23           : 1;	/* Access Enable for Master TAG ID 23 */
		unsigned int EN24           : 1;	/* Access Enable for Master TAG ID 24 */
		unsigned int EN25           : 1;	/* Access Enable for Master TAG ID 25 */
		unsigned int EN26           : 1;	/* Access Enable for Master TAG ID 26 */
		unsigned int EN27           : 1;	/* Access Enable for Master TAG ID 27 */
		unsigned int EN28           : 1;	/* Access Enable for Master TAG ID 28 */
		unsigned int EN29           : 1;	/* Access Enable for Master TAG ID 29 */
		unsigned int EN30           : 1;	/* Access Enable for Master TAG ID 30 */
		unsigned int EN31           : 1;	/* Access Enable for Master TAG ID 31 */
	} B;
	int I;
	unsigned int U;

} INT_ACCEN00_type;
#define INT_ACCEN00	(*( INT_ACCEN00_type *) 0xf00370f4u)	/* Access Enable Register 0 */
#define INT_ACCEN10	(*( INT_ACCEN00_type *) 0xf00370fcu)	/* Kernel 1 Access Enable Register 0 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int Reserved       : 32;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} INT_ACCEN01_type;
#define INT_ACCEN01	(*( INT_ACCEN01_type *) 0xf00370f0u)	/* Kernel 0 Access Enable Register 1 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int Reserved       : 32;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} INT_ACCEN11_type;
#define INT_ACCEN11	(*( INT_ACCEN11_type *) 0xf00370f8u)	/* Kernel 1 Access Enable Register 1 */

typedef volatile union
{
	struct
	{ 
		unsigned int PN             : 8;	/* Service Request Priority Number */
		unsigned int                : 2;
		unsigned int ECC            : 6;	/* Service Request ECC */
		unsigned int ID             : 10;	/* Service Request Node Index Number */
		unsigned int                : 4;
		unsigned int EOV            : 1;	/* Error Overflow Bit */
		unsigned int STAT           : 1;	/* Error Status Bit */
	} B;
	int I;
	unsigned int U;

} INT_ECR0_type;
#define INT_ECR0	(*( INT_ECR0_type *) 0xf0037108u)	/* Error Capture Register 0 */
#define INT_ECR1	(*( INT_ECR0_type *) 0xf0037118u)	/* Error Capture Register 1 */
#define INT_ECR2	(*( INT_ECR0_type *) 0xf0037128u)	/* Error Capture Register 2 */
#define INT_ECR3	(*( INT_ECR0_type *) 0xf0037138u)	/* Error Capture Register 3 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int MOD_REV        : 8;	/* Module Revision Number */
		/* const */ unsigned int MOD_TYPE       : 8;	/* Module Type */
		/* const */ unsigned int MOD_NUMBER     : 16;	/* Module Number Value */
	} B;
	int I;
	unsigned int U;

} INT_ID_type;
#define INT_ID	(*( INT_ID_type *) 0xf0037008u)	/* Module Identification Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int PN             : 8;	/* Last Acknowledged Service Request Priority Number */
		/* const */ unsigned int                : 2;
		/* const */ unsigned int ECC            : 6;	/* Last Acknowledged Interrupt ECC */
		/* const */ unsigned int ID             : 10;	/* Last Acknowledged Interrupt SRN Index Number */
		/* const */ unsigned int                : 6;
	} B;
	int I;
	unsigned int U;

} INT_LASR0_type;
#define INT_LASR0	(*( INT_LASR0_type *) 0xf0037104u)	/* Last Acknowledged Service Request Register 0 */
#define INT_LASR1	(*( INT_LASR0_type *) 0xf0037114u)	/* Last Acknowledged Service Request Register 1 */
#define INT_LASR2	(*( INT_LASR0_type *) 0xf0037124u)	/* Last Acknowledged Service Request Register 2 */
#define INT_LASR3	(*( INT_LASR0_type *) 0xf0037134u)	/* Last Acknowledged Service Request Register 3 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int PN             : 8;	/* Latest Winner Priority Number */
		/* const */ unsigned int                : 2;
		/* const */ unsigned int ECC            : 6;	/* Latest Winner ECC */
		/* const */ unsigned int ID             : 10;	/* Latest Winner Index Number */
		/* const */ unsigned int                : 5;
		/* const */ unsigned int STAT           : 1;	/* LWSR Register Status */
	} B;
	int I;
	unsigned int U;

} INT_LWSR0_type;
#define INT_LWSR0	(*( INT_LWSR0_type *) 0xf0037100u)	/* Latest Winning Service Request Register 0 */
#define INT_LWSR1	(*( INT_LWSR0_type *) 0xf0037110u)	/* Latest Winning Service Request Register 1 */
#define INT_LWSR2	(*( INT_LWSR0_type *) 0xf0037120u)	/* Latest Winning Service Request Register 2 */
#define INT_LWSR3	(*( INT_LWSR0_type *) 0xf0037130u)	/* Latest Winning Service Request Register 3 */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 TOS0           : 2;	/* Type of Service for Observation on OTGB0 */
		unsigned __sfrbit32                : 5;
		unsigned __sfrbit32 OE0            : 1;	/* Output Enable for OTGB0 */
		unsigned __sfrbit32 TOS1           : 2;	/* Type of Service for Observation on OTGB1 */
		unsigned __sfrbit32                : 5;
		unsigned __sfrbit32 OE1            : 1;	/* Output Enable for OTGB1 */
		unsigned __sfrbit32                : 16;
	} B;
	int I;
	unsigned int U;

} INT_OIT_type;
#define INT_OIT	(*( INT_OIT_type *) 0xf00370a0u)	/* OTGM IRQ Trace */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 MIRQ           : 10;	/* SRN Index for Missed Interrupt Trigger */
		unsigned __sfrbit32                : 22;
	} B;
	int I;
	unsigned int U;

} INT_OIXMS_type;
#define INT_OIXMS	(*( INT_OIXMS_type *) 0xf003708cu)	/* OTGM IRQ MUX Missed IRQ Select */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 IRQ0           : 10;	/* SRN Index for Interrupt Trigger 0 */
		unsigned __sfrbit32                : 6;
		unsigned __sfrbit32 IRQ1           : 10;	/* SRN Index for Interrupt Trigger 1 */
		unsigned __sfrbit32                : 6;
	} B;
	int I;
	unsigned int U;

} INT_OIXS0_type;
#define INT_OIXS0	(*( INT_OIXS0_type *) 0xf0037090u)	/* OTGM IRQ MUX Select 0 */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 IRQ2           : 10;	/* SRN Index for Interrupt Trigger 2 */
		unsigned __sfrbit32                : 6;
		unsigned __sfrbit32 IRQ3           : 10;	/* SRN Index for Interrupt Trigger 3 */
		unsigned __sfrbit32                : 6;
	} B;
	int I;
	unsigned int U;

} INT_OIXS1_type;
#define INT_OIXS1	(*( INT_OIXS1_type *) 0xf0037094u)	/* OTGM IRQ MUX Select 1 */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 TGS            : 2;	/* Trigger Set Select for OTGB0/1 Overlay */
		unsigned __sfrbit32                : 6;
		unsigned __sfrbit32 OBS            : 2;	/* Overlay Byte Select */
		unsigned __sfrbit32                : 22;
	} B;
	int I;
	unsigned int U;

} INT_OIXTS_type;
#define INT_OIXTS	(*( INT_OIXTS_type *) 0xf0037088u)	/* OTGM IRQ MUX Trigger Set Select */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 OTGB0          : 16;	/* Bitwise Negedge Sensitivity for OTGB0 */
		unsigned __sfrbit32 OTGB1          : 16;	/* Bitwise Negedge Sensitivity for OTGB1 */
	} B;
	int I;
	unsigned int U;

} INT_OMISN_type;
#define INT_OMISN	(*( INT_OMISN_type *) 0xf00370a8u)	/* OTGM MCDS I/F Sensitivity Negedge */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 OTGB0          : 16;	/* Bitwise Posedge Sensitivity for OTGB0 */
		unsigned __sfrbit32 OTGB1          : 16;	/* Bitwise Posedge Sensitivity for OTGB1 */
	} B;
	int I;
	unsigned int U;

} INT_OMISP_type;
#define INT_OMISP	(*( INT_OMISP_type *) 0xf00370a4u)	/* OTGM MCDS I/F Sensitivity Posedge */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned __sfrbit32 OTGB0          : 16;	/* Status of OTGB0 */
		/* const */ unsigned __sfrbit32 OTGB1          : 16;	/* Status of OTGB1 */
	} B;
	int I;
	unsigned int U;

} INT_OOBS_type;
#define INT_OOBS	(*( INT_OOBS_type *) 0xf0037080u)	/* OTGM OTGB0/1 Status */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 TGS            : 2;	/* Trigger Set for OTGB0/1 */
		unsigned __sfrbit32 TGB            : 1;	/* OTGB0/1 Bus Select */
		unsigned __sfrbit32                : 29;
	} B;
	int I;
	unsigned int U;

} INT_OSSIC_type;
#define INT_OSSIC	(*( INT_OSSIC_type *) 0xf0037084u)	/* OTGM SSI Control */

typedef volatile union
{
	struct
	{ 
		unsigned int TRIG0          : 1;	/* General Purpose Service Request Trigger 0 */
		unsigned int TRIG1          : 1;	/* General Purpose Service Request Trigger 1 */
		unsigned int TRIG2          : 1;	/* General Purpose Service Request Trigger 2 */
		unsigned int TRIG3          : 1;	/* General Purpose Service Request Trigger 3 */
		unsigned int                : 28;
	} B;
	int I;
	unsigned int U;

} INT_SRB0_type;
#define INT_SRB0	(*( INT_SRB0_type *) 0xf0037010u)	/* Service Request Broadcast Register 0 */
#define INT_SRB1	(*( INT_SRB0_type *) 0xf0037014u)	/* Service Request Broadcast Register 1 */
#define INT_SRB2	(*( INT_SRB0_type *) 0xf0037018u)	/* Service Request Broadcast Register 2 */

typedef volatile union
{
	struct
	{ 
		unsigned int SRPN           : 8;	/* Service Request Priority Number */
		unsigned int                : 2;
		unsigned int SRE            : 1;	/* Service Request Enable */
		unsigned int TOS            : 2;	/* Type of Service Control */
		unsigned int                : 3;
		unsigned int ECC            : 6;	/* ECC */
		unsigned int                : 2;
		/* const */ unsigned int SRR            : 1;	/* Service Request Flag */
		unsigned int CLRR           : 1;	/* Request Clear Bit */
		unsigned int SETR           : 1;	/* Request Set Bit */
		/* const */ unsigned int IOV            : 1;	/* Interrupt Trigger Overflow Bit */
		unsigned int IOVCLR         : 1;	/* Interrupt Trigger Overflow Clear Bit */
		/* const */ unsigned int SWS            : 1;	/* SW Sticky Bit */
		unsigned int SWSCLR         : 1;	/* SW Sticky Clear Bit */
		/* const */ unsigned int Reserved       : 1;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} SRC_AGBT_type;
#define SRC_AGBT	(*( SRC_AGBT_type *) 0xf0038024u)	/* AGBT Service Request */
#define SRC_ASCLIN0ERR	(*( SRC_AGBT_type *) 0xf0038088u)	/* ASCLIN 0 Error Service Request */
#define SRC_ASCLIN0RX	(*( SRC_AGBT_type *) 0xf0038084u)	/* ASCLIN 0 Receive Service Request */
#define SRC_ASCLIN0TX	(*( SRC_AGBT_type *) 0xf0038080u)	/* ASCLIN 0 Transmit Service Request */
#define SRC_ASCLIN1ERR	(*( SRC_AGBT_type *) 0xf0038094u)	/* ASCLIN 1 Error Service Request */
#define SRC_ASCLIN1RX	(*( SRC_AGBT_type *) 0xf0038090u)	/* ASCLIN 1 Receive Service Request */
#define SRC_ASCLIN1TX	(*( SRC_AGBT_type *) 0xf003808cu)	/* ASCLIN 1 Transmit Service Request */
#define SRC_ASCLIN2ERR	(*( SRC_AGBT_type *) 0xf00380a0u)	/* ASCLIN 2 Error Service Request */
#define SRC_ASCLIN2RX	(*( SRC_AGBT_type *) 0xf003809cu)	/* ASCLIN 2 Receive Service Request */
#define SRC_ASCLIN2TX	(*( SRC_AGBT_type *) 0xf0038098u)	/* ASCLIN 2 Transmit Service Request */
#define SRC_ASCLIN3ERR	(*( SRC_AGBT_type *) 0xf00380acu)	/* ASCLIN 3 Error Service Request */
#define SRC_ASCLIN3RX	(*( SRC_AGBT_type *) 0xf00380a8u)	/* ASCLIN 3 Receive Service Request */
#define SRC_ASCLIN3TX	(*( SRC_AGBT_type *) 0xf00380a4u)	/* ASCLIN 3 Transmit Service Request */
#define SRC_BCUSPBSBSRC	(*( SRC_AGBT_type *) 0xf0038040u)	/* Bus Control Unit SPB Service Request */
#define SRC_CANINT0	(*( SRC_AGBT_type *) 0xf0038900u)	/* MULTICAN+ Service Request 0 */
#define SRC_CANINT1	(*( SRC_AGBT_type *) 0xf0038904u)	/* MULTICAN+ Service Request 1 */
#define SRC_CANINT10	(*( SRC_AGBT_type *) 0xf0038928u)	/* MULTICAN+ Service Request 10 */
#define SRC_CANINT11	(*( SRC_AGBT_type *) 0xf003892cu)	/* MULTICAN+ Service Request 11 */
#define SRC_CANINT12	(*( SRC_AGBT_type *) 0xf0038930u)	/* MULTICAN+ Service Request 12 */
#define SRC_CANINT13	(*( SRC_AGBT_type *) 0xf0038934u)	/* MULTICAN+ Service Request 13 */
#define SRC_CANINT14	(*( SRC_AGBT_type *) 0xf0038938u)	/* MULTICAN+ Service Request 14 */
#define SRC_CANINT15	(*( SRC_AGBT_type *) 0xf003893cu)	/* MULTICAN+ Service Request 15 */
#define SRC_CANINT2	(*( SRC_AGBT_type *) 0xf0038908u)	/* MULTICAN+ Service Request 2 */
#define SRC_CANINT3	(*( SRC_AGBT_type *) 0xf003890cu)	/* MULTICAN+ Service Request 3 */
#define SRC_CANINT4	(*( SRC_AGBT_type *) 0xf0038910u)	/* MULTICAN+ Service Request 4 */
#define SRC_CANINT5	(*( SRC_AGBT_type *) 0xf0038914u)	/* MULTICAN+ Service Request 5 */
#define SRC_CANINT6	(*( SRC_AGBT_type *) 0xf0038918u)	/* MULTICAN+ Service Request 6 */
#define SRC_CANINT7	(*( SRC_AGBT_type *) 0xf003891cu)	/* MULTICAN+ Service Request 7 */
#define SRC_CANINT8	(*( SRC_AGBT_type *) 0xf0038920u)	/* MULTICAN+ Service Request 8 */
#define SRC_CANINT9	(*( SRC_AGBT_type *) 0xf0038924u)	/* MULTICAN+ Service Request 9 */
#define SRC_CCU60SR0	(*( SRC_AGBT_type *) 0xf0038420u)	/* CCU6 0 Service Request 0 */
#define SRC_CCU60SR1	(*( SRC_AGBT_type *) 0xf0038424u)	/* CCU6 0 Service Request 1 */
#define SRC_CCU60SR2	(*( SRC_AGBT_type *) 0xf0038428u)	/* CCU6 0 Service Request 2 */
#define SRC_CCU60SR3	(*( SRC_AGBT_type *) 0xf003842cu)	/* CCU6 0 Service Request 3 */
#define SRC_CCU61SR0	(*( SRC_AGBT_type *) 0xf0038430u)	/* CCU6 1 Service Request 0 */
#define SRC_CCU61SR1	(*( SRC_AGBT_type *) 0xf0038434u)	/* CCU6 1 Service Request 1 */
#define SRC_CCU61SR2	(*( SRC_AGBT_type *) 0xf0038438u)	/* CCU6 1 Service Request 2 */
#define SRC_CCU61SR3	(*( SRC_AGBT_type *) 0xf003843cu)	/* CCU6 1 Service Request 3 */
#define SRC_CERBERUS0	(*( SRC_AGBT_type *) 0xf0038050u)	/* Cerberus Service Request 0 */
#define SRC_CERBERUS1	(*( SRC_AGBT_type *) 0xf0038054u)	/* Cerberus Service Request 1 */
#define SRC_CIFISP	(*( SRC_AGBT_type *) 0xf0038da8u)	/* CIF ISP Service Request */
#define SRC_CIFMI	(*( SRC_AGBT_type *) 0xf0038da0u)	/* CIF MI Service Request */
#define SRC_CIFMIEP	(*( SRC_AGBT_type *) 0xf0038da4u)	/* CIF MI EP Service Request */
#define SRC_CIFMJPEG	(*( SRC_AGBT_type *) 0xf0038dacu)	/* CIF MJPEG Service Request */
#define SRC_CPU0SBSRC	(*( SRC_AGBT_type *) 0xf0038000u)	/* CPU 0 Software Breakpoint Service Request */
#define SRC_CPU1SBSRC	(*( SRC_AGBT_type *) 0xf0038004u)	/* CPU 1 Software Breakpoint Service Request */
#define SRC_CPU2SBSRC	(*( SRC_AGBT_type *) 0xf0038008u)	/* CPU 2 Software Breakpoint Service Request */
#define SRC_DAM0	(*( SRC_AGBT_type *) 0xf0038d70u)	/* DAM Service Request 0 */
#define SRC_DAM1	(*( SRC_AGBT_type *) 0xf0038d74u)	/* DAM Service Request 1 */
#define SRC_DAM2	(*( SRC_AGBT_type *) 0xf0038d78u)	/* DAM Service Request 2 */
#define SRC_DAM3	(*( SRC_AGBT_type *) 0xf0038d7cu)	/* DAM Service Request 3 */
#define SRC_DAM4	(*( SRC_AGBT_type *) 0xf0038d80u)	/* DAM Service Request 4 */
#define SRC_DAM5	(*( SRC_AGBT_type *) 0xf0038d84u)	/* DAM Service Request 5 */
#define SRC_DMACH0	(*( SRC_AGBT_type *) 0xf0038500u)	/* DMA Channel 0 Service Request */
#define SRC_DMACH1	(*( SRC_AGBT_type *) 0xf0038504u)	/* DMA Channel 1 Service Request */
#define SRC_DMACH10	(*( SRC_AGBT_type *) 0xf0038528u)	/* DMA Channel 10 Service Request */
#define SRC_DMACH11	(*( SRC_AGBT_type *) 0xf003852cu)	/* DMA Channel 11 Service Request */
#define SRC_DMACH12	(*( SRC_AGBT_type *) 0xf0038530u)	/* DMA Channel 12 Service Request */
#define SRC_DMACH13	(*( SRC_AGBT_type *) 0xf0038534u)	/* DMA Channel 13 Service Request */
#define SRC_DMACH14	(*( SRC_AGBT_type *) 0xf0038538u)	/* DMA Channel 14 Service Request */
#define SRC_DMACH15	(*( SRC_AGBT_type *) 0xf003853cu)	/* DMA Channel 15 Service Request */
#define SRC_DMACH16	(*( SRC_AGBT_type *) 0xf0038540u)	/* DMA Channel 16 Service Request */
#define SRC_DMACH17	(*( SRC_AGBT_type *) 0xf0038544u)	/* DMA Channel 17 Service Request */
#define SRC_DMACH18	(*( SRC_AGBT_type *) 0xf0038548u)	/* DMA Channel 18 Service Request */
#define SRC_DMACH19	(*( SRC_AGBT_type *) 0xf003854cu)	/* DMA Channel 19 Service Request */
#define SRC_DMACH2	(*( SRC_AGBT_type *) 0xf0038508u)	/* DMA Channel 2 Service Request */
#define SRC_DMACH20	(*( SRC_AGBT_type *) 0xf0038550u)	/* DMA Channel 20 Service Request */
#define SRC_DMACH21	(*( SRC_AGBT_type *) 0xf0038554u)	/* DMA Channel 21 Service Request */
#define SRC_DMACH22	(*( SRC_AGBT_type *) 0xf0038558u)	/* DMA Channel 22 Service Request */
#define SRC_DMACH23	(*( SRC_AGBT_type *) 0xf003855cu)	/* DMA Channel 23 Service Request */
#define SRC_DMACH24	(*( SRC_AGBT_type *) 0xf0038560u)	/* DMA Channel 24 Service Request */
#define SRC_DMACH25	(*( SRC_AGBT_type *) 0xf0038564u)	/* DMA Channel 25 Service Request */
#define SRC_DMACH26	(*( SRC_AGBT_type *) 0xf0038568u)	/* DMA Channel 26 Service Request */
#define SRC_DMACH27	(*( SRC_AGBT_type *) 0xf003856cu)	/* DMA Channel 27 Service Request */
#define SRC_DMACH28	(*( SRC_AGBT_type *) 0xf0038570u)	/* DMA Channel 28 Service Request */
#define SRC_DMACH29	(*( SRC_AGBT_type *) 0xf0038574u)	/* DMA Channel 29 Service Request */
#define SRC_DMACH3	(*( SRC_AGBT_type *) 0xf003850cu)	/* DMA Channel 3 Service Request */
#define SRC_DMACH30	(*( SRC_AGBT_type *) 0xf0038578u)	/* DMA Channel 30 Service Request */
#define SRC_DMACH31	(*( SRC_AGBT_type *) 0xf003857cu)	/* DMA Channel 31 Service Request */
#define SRC_DMACH32	(*( SRC_AGBT_type *) 0xf0038580u)	/* DMA Channel 32 Service Request */
#define SRC_DMACH33	(*( SRC_AGBT_type *) 0xf0038584u)	/* DMA Channel 33 Service Request */
#define SRC_DMACH34	(*( SRC_AGBT_type *) 0xf0038588u)	/* DMA Channel 34 Service Request */
#define SRC_DMACH35	(*( SRC_AGBT_type *) 0xf003858cu)	/* DMA Channel 35 Service Request */
#define SRC_DMACH36	(*( SRC_AGBT_type *) 0xf0038590u)	/* DMA Channel 36 Service Request */
#define SRC_DMACH37	(*( SRC_AGBT_type *) 0xf0038594u)	/* DMA Channel 37 Service Request */
#define SRC_DMACH38	(*( SRC_AGBT_type *) 0xf0038598u)	/* DMA Channel 38 Service Request */
#define SRC_DMACH39	(*( SRC_AGBT_type *) 0xf003859cu)	/* DMA Channel 39 Service Request */
#define SRC_DMACH4	(*( SRC_AGBT_type *) 0xf0038510u)	/* DMA Channel 4 Service Request */
#define SRC_DMACH40	(*( SRC_AGBT_type *) 0xf00385a0u)	/* DMA Channel 40 Service Request */
#define SRC_DMACH41	(*( SRC_AGBT_type *) 0xf00385a4u)	/* DMA Channel 41 Service Request */
#define SRC_DMACH42	(*( SRC_AGBT_type *) 0xf00385a8u)	/* DMA Channel 42 Service Request */
#define SRC_DMACH43	(*( SRC_AGBT_type *) 0xf00385acu)	/* DMA Channel 43 Service Request */
#define SRC_DMACH44	(*( SRC_AGBT_type *) 0xf00385b0u)	/* DMA Channel 44 Service Request */
#define SRC_DMACH45	(*( SRC_AGBT_type *) 0xf00385b4u)	/* DMA Channel 45 Service Request */
#define SRC_DMACH46	(*( SRC_AGBT_type *) 0xf00385b8u)	/* DMA Channel 46 Service Request */
#define SRC_DMACH47	(*( SRC_AGBT_type *) 0xf00385bcu)	/* DMA Channel 47 Service Request */
#define SRC_DMACH48	(*( SRC_AGBT_type *) 0xf00385c0u)	/* DMA Channel 48 Service Request */
#define SRC_DMACH49	(*( SRC_AGBT_type *) 0xf00385c4u)	/* DMA Channel 49 Service Request */
#define SRC_DMACH5	(*( SRC_AGBT_type *) 0xf0038514u)	/* DMA Channel 5 Service Request */
#define SRC_DMACH50	(*( SRC_AGBT_type *) 0xf00385c8u)	/* DMA Channel 50 Service Request */
#define SRC_DMACH51	(*( SRC_AGBT_type *) 0xf00385ccu)	/* DMA Channel 51 Service Request */
#define SRC_DMACH52	(*( SRC_AGBT_type *) 0xf00385d0u)	/* DMA Channel 52 Service Request */
#define SRC_DMACH53	(*( SRC_AGBT_type *) 0xf00385d4u)	/* DMA Channel 53 Service Request */
#define SRC_DMACH54	(*( SRC_AGBT_type *) 0xf00385d8u)	/* DMA Channel 54 Service Request */
#define SRC_DMACH55	(*( SRC_AGBT_type *) 0xf00385dcu)	/* DMA Channel 55 Service Request */
#define SRC_DMACH56	(*( SRC_AGBT_type *) 0xf00385e0u)	/* DMA Channel 56 Service Request */
#define SRC_DMACH57	(*( SRC_AGBT_type *) 0xf00385e4u)	/* DMA Channel 57 Service Request */
#define SRC_DMACH58	(*( SRC_AGBT_type *) 0xf00385e8u)	/* DMA Channel 58 Service Request */
#define SRC_DMACH59	(*( SRC_AGBT_type *) 0xf00385ecu)	/* DMA Channel 59 Service Request */
#define SRC_DMACH6	(*( SRC_AGBT_type *) 0xf0038518u)	/* DMA Channel 6 Service Request */
#define SRC_DMACH60	(*( SRC_AGBT_type *) 0xf00385f0u)	/* DMA Channel 60 Service Request */
#define SRC_DMACH61	(*( SRC_AGBT_type *) 0xf00385f4u)	/* DMA Channel 61 Service Request */
#define SRC_DMACH62	(*( SRC_AGBT_type *) 0xf00385f8u)	/* DMA Channel 62 Service Request */
#define SRC_DMACH63	(*( SRC_AGBT_type *) 0xf00385fcu)	/* DMA Channel 63 Service Request */
#define SRC_DMACH7	(*( SRC_AGBT_type *) 0xf003851cu)	/* DMA Channel 7 Service Request */
#define SRC_DMACH8	(*( SRC_AGBT_type *) 0xf0038520u)	/* DMA Channel 8 Service Request */
#define SRC_DMACH9	(*( SRC_AGBT_type *) 0xf0038524u)	/* DMA Channel 9 Service Request */
#define SRC_DMAERR	(*( SRC_AGBT_type *) 0xf00384f0u)	/* DMA Error Service Request */
#define SRC_DSADCSRA0	(*( SRC_AGBT_type *) 0xf0038b54u)	/* DSADC SRA0 Service Request */
#define SRC_DSADCSRA1	(*( SRC_AGBT_type *) 0xf0038b5cu)	/* DSADC SRA1 Service Request */
#define SRC_DSADCSRA2	(*( SRC_AGBT_type *) 0xf0038b64u)	/* DSADC SRA2 Service Request */
#define SRC_DSADCSRA3	(*( SRC_AGBT_type *) 0xf0038b6cu)	/* DSADC SRA3 Service Request */
#define SRC_DSADCSRA4	(*( SRC_AGBT_type *) 0xf0038b74u)	/* DSADC SRA4 Service Request */
#define SRC_DSADCSRA5	(*( SRC_AGBT_type *) 0xf0038b7cu)	/* DSADC SRA5 Service Request */
#define SRC_DSADCSRM0	(*( SRC_AGBT_type *) 0xf0038b50u)	/* DSADC SRM0 Service Request */
#define SRC_DSADCSRM1	(*( SRC_AGBT_type *) 0xf0038b58u)	/* DSADC SRM1 Service Request */
#define SRC_DSADCSRM2	(*( SRC_AGBT_type *) 0xf0038b60u)	/* DSADC SRM2 Service Request */
#define SRC_DSADCSRM3	(*( SRC_AGBT_type *) 0xf0038b68u)	/* DSADC SRM3 Service Request */
#define SRC_DSADCSRM4	(*( SRC_AGBT_type *) 0xf0038b70u)	/* DSADC SRM4 Service Request */
#define SRC_DSADCSRM5	(*( SRC_AGBT_type *) 0xf0038b78u)	/* DSADC SRM5 Service Request */
#define SRC_EMEM	(*( SRC_AGBT_type *) 0xf0038020u)	/* Emulation Memory Service Request */
#define SRC_ERAYIBUSY	(*( SRC_AGBT_type *) 0xf0038c04u)	/* E-RAY Input Buffer Busy Service Request */
#define SRC_ERAYINT0	(*( SRC_AGBT_type *) 0xf0038be0u)	/* E-RAY Service Request 0 */
#define SRC_ERAYINT1	(*( SRC_AGBT_type *) 0xf0038be4u)	/* E-RAY Service Request 1 */
#define SRC_ERAYMBSC0	(*( SRC_AGBT_type *) 0xf0038bf8u)	/* E-RAY Message Buffer Status Changed 0 Service Request */
#define SRC_ERAYMBSC1	(*( SRC_AGBT_type *) 0xf0038bfcu)	/* E-RAY Message Buffer Status Changed 1 Service Request */
#define SRC_ERAYNDAT0	(*( SRC_AGBT_type *) 0xf0038bf0u)	/* E-RAY New Data 0 Service Request */
#define SRC_ERAYNDAT1	(*( SRC_AGBT_type *) 0xf0038bf4u)	/* E-RAY New Data 1 Service Request */
#define SRC_ERAYOBUSY	(*( SRC_AGBT_type *) 0xf0038c00u)	/* E-RAY Output Buffer Busy Service Request */
#define SRC_ERAYTINT0	(*( SRC_AGBT_type *) 0xf0038be8u)	/* E-RAY Timer Interrupt 0 Service Request */
#define SRC_ERAYTINT1	(*( SRC_AGBT_type *) 0xf0038becu)	/* E-RAY Timer Interrupt 1 Service Request */
#define SRC_ETH	(*( SRC_AGBT_type *) 0xf00388f0u)	/* Ethernet Service Request */
#define SRC_FCE	(*( SRC_AGBT_type *) 0xf00384b0u)	/* FCE Error Service Request */
#define SRC_GPSR00	(*( SRC_AGBT_type *) 0xf0039000u)	/* General Purpose Service Request 00 */
#define SRC_GPSR01	(*( SRC_AGBT_type *) 0xf0039004u)	/* General Purpose Service Request 01 */
#define SRC_GPSR02	(*( SRC_AGBT_type *) 0xf0039008u)	/* General Purpose Service Request 02 */
#define SRC_GPSR03	(*( SRC_AGBT_type *) 0xf003900cu)	/* General Purpose Service Request 03 */
#define SRC_GPSR10	(*( SRC_AGBT_type *) 0xf0039020u)	/* General Purpose Service Request 10 */
#define SRC_GPSR11	(*( SRC_AGBT_type *) 0xf0039024u)	/* General Purpose Service Request 11 */
#define SRC_GPSR12	(*( SRC_AGBT_type *) 0xf0039028u)	/* General Purpose Service Request 12 */
#define SRC_GPSR13	(*( SRC_AGBT_type *) 0xf003902cu)	/* General Purpose Service Request 13 */
#define SRC_GPSR20	(*( SRC_AGBT_type *) 0xf0039040u)	/* General Purpose Service Request 20 */
#define SRC_GPSR21	(*( SRC_AGBT_type *) 0xf0039044u)	/* General Purpose Service Request 21 */
#define SRC_GPSR22	(*( SRC_AGBT_type *) 0xf0039048u)	/* General Purpose Service Request 22 */
#define SRC_GPSR23	(*( SRC_AGBT_type *) 0xf003904cu)	/* General Purpose Service Request 23 */
#define SRC_GPT120CIRQ	(*( SRC_AGBT_type *) 0xf0038460u)	/* GPT120 CAPREL Service Request */
#define SRC_GPT120T2	(*( SRC_AGBT_type *) 0xf0038464u)	/* GPT120 T2 Overflow/Underflow Service Request */
#define SRC_GPT120T3	(*( SRC_AGBT_type *) 0xf0038468u)	/* GPT120 T3 Overflow/Underflow Service Request */
#define SRC_GPT120T4	(*( SRC_AGBT_type *) 0xf003846cu)	/* GPT120 T4 Overflow/Underflow Service Request */
#define SRC_GPT120T5	(*( SRC_AGBT_type *) 0xf0038470u)	/* GPT120 T5 Overflow/Underflow Service Request */
#define SRC_GPT120T6	(*( SRC_AGBT_type *) 0xf0038474u)	/* GPT120 T6 Overflow/Underflow Service Request */
#define SRC_GTMAEIIRQ	(*( SRC_AGBT_type *) 0xf0039600u)	/* GTM AEI Shared Service Request */
#define SRC_GTMARUIRQ0	(*( SRC_AGBT_type *) 0xf0039604u)	/* GTM ARU Shared Service Request 0 */
#define SRC_GTMARUIRQ1	(*( SRC_AGBT_type *) 0xf0039608u)	/* GTM ARU Shared Service Request 1 */
#define SRC_GTMARUIRQ2	(*( SRC_AGBT_type *) 0xf003960cu)	/* GTM ARU Shared Service Request 2 */
#define SRC_GTMATOM00	(*( SRC_AGBT_type *) 0xf0039d80u)	/* GTM ATOM0 Shared Service Request 0 */
#define SRC_GTMATOM01	(*( SRC_AGBT_type *) 0xf0039d84u)	/* GTM ATOM0 Shared Service Request 1 */
#define SRC_GTMATOM02	(*( SRC_AGBT_type *) 0xf0039d88u)	/* GTM ATOM0 Shared Service Request 2 */
#define SRC_GTMATOM03	(*( SRC_AGBT_type *) 0xf0039d8cu)	/* GTM ATOM0 Shared Service Request 3 */
#define SRC_GTMATOM10	(*( SRC_AGBT_type *) 0xf0039d90u)	/* GTM ATOM1 Shared Service Request 0 */
#define SRC_GTMATOM11	(*( SRC_AGBT_type *) 0xf0039d94u)	/* GTM ATOM1 Shared Service Request 1 */
#define SRC_GTMATOM12	(*( SRC_AGBT_type *) 0xf0039d98u)	/* GTM ATOM1 Shared Service Request 2 */
#define SRC_GTMATOM13	(*( SRC_AGBT_type *) 0xf0039d9cu)	/* GTM ATOM1 Shared Service Request 3 */
#define SRC_GTMATOM20	(*( SRC_AGBT_type *) 0xf0039da0u)	/* GTM ATOM2 Shared Service Request 0 */
#define SRC_GTMATOM21	(*( SRC_AGBT_type *) 0xf0039da4u)	/* GTM ATOM2 Shared Service Request 1 */
#define SRC_GTMATOM22	(*( SRC_AGBT_type *) 0xf0039da8u)	/* GTM ATOM2 Shared Service Request 2 */
#define SRC_GTMATOM23	(*( SRC_AGBT_type *) 0xf0039dacu)	/* GTM ATOM2 Shared Service Request 3 */
#define SRC_GTMATOM30	(*( SRC_AGBT_type *) 0xf0039db0u)	/* GTM ATOM3 Shared Service Request 0 */
#define SRC_GTMATOM31	(*( SRC_AGBT_type *) 0xf0039db4u)	/* GTM ATOM3 Shared Service Request 1 */
#define SRC_GTMATOM32	(*( SRC_AGBT_type *) 0xf0039db8u)	/* GTM ATOM3 Shared Service Request 2 */
#define SRC_GTMATOM33	(*( SRC_AGBT_type *) 0xf0039dbcu)	/* GTM ATOM3 Shared Service Request 3 */
#define SRC_GTMATOM40	(*( SRC_AGBT_type *) 0xf0039dc0u)	/* GTM ATOM4 Shared Service Request 0 */
#define SRC_GTMATOM41	(*( SRC_AGBT_type *) 0xf0039dc4u)	/* GTM ATOM4 Shared Service Request 1 */
#define SRC_GTMATOM42	(*( SRC_AGBT_type *) 0xf0039dc8u)	/* GTM ATOM4 Shared Service Request 2 */
#define SRC_GTMATOM43	(*( SRC_AGBT_type *) 0xf0039dccu)	/* GTM ATOM4 Shared Service Request 3 */
#define SRC_GTMBRCIRQ	(*( SRC_AGBT_type *) 0xf0039614u)	/* GTM BRC Shared Service Request */
#define SRC_GTMCMPIRQ	(*( SRC_AGBT_type *) 0xf0039618u)	/* GTM CMP Shared Service Request */
#define SRC_GTMDPLL0	(*( SRC_AGBT_type *) 0xf00396a4u)	/* GTM DPLL Service Request 0 */
#define SRC_GTMDPLL1	(*( SRC_AGBT_type *) 0xf00396a8u)	/* GTM DPLL Service Request 1 */
#define SRC_GTMDPLL10	(*( SRC_AGBT_type *) 0xf00396ccu)	/* GTM DPLL Service Request 10 */
#define SRC_GTMDPLL11	(*( SRC_AGBT_type *) 0xf00396d0u)	/* GTM DPLL Service Request 11 */
#define SRC_GTMDPLL12	(*( SRC_AGBT_type *) 0xf00396d4u)	/* GTM DPLL Service Request 12 */
#define SRC_GTMDPLL13	(*( SRC_AGBT_type *) 0xf00396d8u)	/* GTM DPLL Service Request 13 */
#define SRC_GTMDPLL14	(*( SRC_AGBT_type *) 0xf00396dcu)	/* GTM DPLL Service Request 14 */
#define SRC_GTMDPLL15	(*( SRC_AGBT_type *) 0xf00396e0u)	/* GTM DPLL Service Request 15 */
#define SRC_GTMDPLL16	(*( SRC_AGBT_type *) 0xf00396e4u)	/* GTM DPLL Service Request 16 */
#define SRC_GTMDPLL17	(*( SRC_AGBT_type *) 0xf00396e8u)	/* GTM DPLL Service Request 17 */
#define SRC_GTMDPLL18	(*( SRC_AGBT_type *) 0xf00396ecu)	/* GTM DPLL Service Request 18 */
#define SRC_GTMDPLL19	(*( SRC_AGBT_type *) 0xf00396f0u)	/* GTM DPLL Service Request 19 */
#define SRC_GTMDPLL2	(*( SRC_AGBT_type *) 0xf00396acu)	/* GTM DPLL Service Request 2 */
#define SRC_GTMDPLL20	(*( SRC_AGBT_type *) 0xf00396f4u)	/* GTM DPLL Service Request 20 */
#define SRC_GTMDPLL21	(*( SRC_AGBT_type *) 0xf00396f8u)	/* GTM DPLL Service Request 21 */
#define SRC_GTMDPLL22	(*( SRC_AGBT_type *) 0xf00396fcu)	/* GTM DPLL Service Request 22 */
#define SRC_GTMDPLL23	(*( SRC_AGBT_type *) 0xf0039700u)	/* GTM DPLL Service Request 23 */
#define SRC_GTMDPLL24	(*( SRC_AGBT_type *) 0xf0039704u)	/* GTM DPLL Service Request 24 */
#define SRC_GTMDPLL25	(*( SRC_AGBT_type *) 0xf0039708u)	/* GTM DPLL Service Request 25 */
#define SRC_GTMDPLL26	(*( SRC_AGBT_type *) 0xf003970cu)	/* GTM DPLL Service Request 26 */
#define SRC_GTMDPLL3	(*( SRC_AGBT_type *) 0xf00396b0u)	/* GTM DPLL Service Request 3 */
#define SRC_GTMDPLL4	(*( SRC_AGBT_type *) 0xf00396b4u)	/* GTM DPLL Service Request 4 */
#define SRC_GTMDPLL5	(*( SRC_AGBT_type *) 0xf00396b8u)	/* GTM DPLL Service Request 5 */
#define SRC_GTMDPLL6	(*( SRC_AGBT_type *) 0xf00396bcu)	/* GTM DPLL Service Request 6 */
#define SRC_GTMDPLL7	(*( SRC_AGBT_type *) 0xf00396c0u)	/* GTM DPLL Service Request 7 */
#define SRC_GTMDPLL8	(*( SRC_AGBT_type *) 0xf00396c4u)	/* GTM DPLL Service Request 8 */
#define SRC_GTMDPLL9	(*( SRC_AGBT_type *) 0xf00396c8u)	/* GTM DPLL Service Request 9 */
#define SRC_GTMERR	(*( SRC_AGBT_type *) 0xf0039770u)	/* GTM Error Service Request */
#define SRC_GTMMCS00	(*( SRC_AGBT_type *) 0xf0039980u)	/* GTM MCS0 Shared Service Request 0 */
#define SRC_GTMMCS01	(*( SRC_AGBT_type *) 0xf0039984u)	/* GTM MCS0 Shared Service Request 1 */
#define SRC_GTMMCS02	(*( SRC_AGBT_type *) 0xf0039988u)	/* GTM MCS0 Shared Service Request 2 */
#define SRC_GTMMCS03	(*( SRC_AGBT_type *) 0xf003998cu)	/* GTM MCS0 Shared Service Request 3 */
#define SRC_GTMMCS04	(*( SRC_AGBT_type *) 0xf0039990u)	/* GTM MCS0 Shared Service Request 4 */
#define SRC_GTMMCS05	(*( SRC_AGBT_type *) 0xf0039994u)	/* GTM MCS0 Shared Service Request 5 */
#define SRC_GTMMCS06	(*( SRC_AGBT_type *) 0xf0039998u)	/* GTM MCS0 Shared Service Request 6 */
#define SRC_GTMMCS07	(*( SRC_AGBT_type *) 0xf003999cu)	/* GTM MCS0 Shared Service Request 7 */
#define SRC_GTMMCS10	(*( SRC_AGBT_type *) 0xf00399a0u)	/* GTM MCS1 Shared Service Request 0 */
#define SRC_GTMMCS11	(*( SRC_AGBT_type *) 0xf00399a4u)	/* GTM MCS1 Shared Service Request 1 */
#define SRC_GTMMCS12	(*( SRC_AGBT_type *) 0xf00399a8u)	/* GTM MCS1 Shared Service Request 2 */
#define SRC_GTMMCS13	(*( SRC_AGBT_type *) 0xf00399acu)	/* GTM MCS1 Shared Service Request 3 */
#define SRC_GTMMCS14	(*( SRC_AGBT_type *) 0xf00399b0u)	/* GTM MCS1 Shared Service Request 4 */
#define SRC_GTMMCS15	(*( SRC_AGBT_type *) 0xf00399b4u)	/* GTM MCS1 Shared Service Request 5 */
#define SRC_GTMMCS16	(*( SRC_AGBT_type *) 0xf00399b8u)	/* GTM MCS1 Shared Service Request 6 */
#define SRC_GTMMCS17	(*( SRC_AGBT_type *) 0xf00399bcu)	/* GTM MCS1 Shared Service Request 7 */
#define SRC_GTMMCS20	(*( SRC_AGBT_type *) 0xf00399c0u)	/* GTM MCS2 Shared Service Request 0 */
#define SRC_GTMMCS21	(*( SRC_AGBT_type *) 0xf00399c4u)	/* GTM MCS2 Shared Service Request 1 */
#define SRC_GTMMCS22	(*( SRC_AGBT_type *) 0xf00399c8u)	/* GTM MCS2 Shared Service Request 2 */
#define SRC_GTMMCS23	(*( SRC_AGBT_type *) 0xf00399ccu)	/* GTM MCS2 Shared Service Request 3 */
#define SRC_GTMMCS24	(*( SRC_AGBT_type *) 0xf00399d0u)	/* GTM MCS2 Shared Service Request 4 */
#define SRC_GTMMCS25	(*( SRC_AGBT_type *) 0xf00399d4u)	/* GTM MCS2 Shared Service Request 5 */
#define SRC_GTMMCS26	(*( SRC_AGBT_type *) 0xf00399d8u)	/* GTM MCS2 Shared Service Request 6 */
#define SRC_GTMMCS27	(*( SRC_AGBT_type *) 0xf00399dcu)	/* GTM MCS2 Shared Service Request 7 */
#define SRC_GTMMCS30	(*( SRC_AGBT_type *) 0xf00399e0u)	/* GTM MCS3 Shared Service Request 0 */
#define SRC_GTMMCS31	(*( SRC_AGBT_type *) 0xf00399e4u)	/* GTM MCS3 Shared Service Request 1 */
#define SRC_GTMMCS32	(*( SRC_AGBT_type *) 0xf00399e8u)	/* GTM MCS3 Shared Service Request 2 */
#define SRC_GTMMCS33	(*( SRC_AGBT_type *) 0xf00399ecu)	/* GTM MCS3 Shared Service Request 3 */
#define SRC_GTMMCS34	(*( SRC_AGBT_type *) 0xf00399f0u)	/* GTM MCS3 Shared Service Request 4 */
#define SRC_GTMMCS35	(*( SRC_AGBT_type *) 0xf00399f4u)	/* GTM MCS3 Shared Service Request 5 */
#define SRC_GTMMCS36	(*( SRC_AGBT_type *) 0xf00399f8u)	/* GTM MCS3 Shared Service Request 6 */
#define SRC_GTMMCS37	(*( SRC_AGBT_type *) 0xf00399fcu)	/* GTM MCS3 Shared Service Request 7 */
#define SRC_GTMMCSW00	(*( SRC_AGBT_type *) 0xf0039f00u)	/* GTM Multi Channel Sequencer 0 Service Request 0 */
#define SRC_GTMMCSW01	(*( SRC_AGBT_type *) 0xf0039f04u)	/* GTM Multi Channel Sequencer 0 Service Request 1 */
#define SRC_GTMMCSW02	(*( SRC_AGBT_type *) 0xf0039f08u)	/* GTM Multi Channel Sequencer 0 Service Request 2 */
#define SRC_GTMMCSW03	(*( SRC_AGBT_type *) 0xf0039f0cu)	/* GTM Multi Channel Sequencer 0 Service Request 3 */
#define SRC_GTMMCSW10	(*( SRC_AGBT_type *) 0xf0039f40u)	/* GTM Multi Channel Sequencer 1 Service Request 0 */
#define SRC_GTMMCSW11	(*( SRC_AGBT_type *) 0xf0039f44u)	/* GTM Multi Channel Sequencer 1 Service Request 1 */
#define SRC_GTMMCSW12	(*( SRC_AGBT_type *) 0xf0039f48u)	/* GTM Multi Channel Sequencer 1 Service Request 2 */
#define SRC_GTMMCSW13	(*( SRC_AGBT_type *) 0xf0039f4cu)	/* GTM Multi Channel Sequencer 1 Service Request 3 */
#define SRC_GTMPSM00	(*( SRC_AGBT_type *) 0xf003962cu)	/* GTM PSM0 Shared Service Request 0 */
#define SRC_GTMPSM01	(*( SRC_AGBT_type *) 0xf0039630u)	/* GTM PSM0 Shared Service Request 1 */
#define SRC_GTMPSM02	(*( SRC_AGBT_type *) 0xf0039634u)	/* GTM PSM0 Shared Service Request 2 */
#define SRC_GTMPSM03	(*( SRC_AGBT_type *) 0xf0039638u)	/* GTM PSM0 Shared Service Request 3 */
#define SRC_GTMPSM04	(*( SRC_AGBT_type *) 0xf003963cu)	/* GTM PSM0 Shared Service Request 4 */
#define SRC_GTMPSM05	(*( SRC_AGBT_type *) 0xf0039640u)	/* GTM PSM0 Shared Service Request 5 */
#define SRC_GTMPSM06	(*( SRC_AGBT_type *) 0xf0039644u)	/* GTM PSM0 Shared Service Request 6 */
#define SRC_GTMPSM07	(*( SRC_AGBT_type *) 0xf0039648u)	/* GTM PSM0 Shared Service Request 7 */
#define SRC_GTMSPE0IRQ	(*( SRC_AGBT_type *) 0xf003961cu)	/* GTM SPE0 Shared Service Request */
#define SRC_GTMSPE1IRQ	(*( SRC_AGBT_type *) 0xf0039620u)	/* GTM SPE1 Shared Service Request */
#define SRC_GTMTIM00	(*( SRC_AGBT_type *) 0xf0039780u)	/* GTM TIM0 Shared Service Request 0 */
#define SRC_GTMTIM01	(*( SRC_AGBT_type *) 0xf0039784u)	/* GTM TIM0 Shared Service Request 1 */
#define SRC_GTMTIM02	(*( SRC_AGBT_type *) 0xf0039788u)	/* GTM TIM0 Shared Service Request 2 */
#define SRC_GTMTIM03	(*( SRC_AGBT_type *) 0xf003978cu)	/* GTM TIM0 Shared Service Request 3 */
#define SRC_GTMTIM04	(*( SRC_AGBT_type *) 0xf0039790u)	/* GTM TIM0 Shared Service Request 4 */
#define SRC_GTMTIM05	(*( SRC_AGBT_type *) 0xf0039794u)	/* GTM TIM0 Shared Service Request 5 */
#define SRC_GTMTIM06	(*( SRC_AGBT_type *) 0xf0039798u)	/* GTM TIM0 Shared Service Request 6 */
#define SRC_GTMTIM07	(*( SRC_AGBT_type *) 0xf003979cu)	/* GTM TIM0 Shared Service Request 7 */
#define SRC_GTMTIM10	(*( SRC_AGBT_type *) 0xf00397a0u)	/* GTM TIM1 Shared Service Request 0 */
#define SRC_GTMTIM11	(*( SRC_AGBT_type *) 0xf00397a4u)	/* GTM TIM1 Shared Service Request 1 */
#define SRC_GTMTIM12	(*( SRC_AGBT_type *) 0xf00397a8u)	/* GTM TIM1 Shared Service Request 2 */
#define SRC_GTMTIM13	(*( SRC_AGBT_type *) 0xf00397acu)	/* GTM TIM1 Shared Service Request 3 */
#define SRC_GTMTIM14	(*( SRC_AGBT_type *) 0xf00397b0u)	/* GTM TIM1 Shared Service Request 4 */
#define SRC_GTMTIM15	(*( SRC_AGBT_type *) 0xf00397b4u)	/* GTM TIM1 Shared Service Request 5 */
#define SRC_GTMTIM16	(*( SRC_AGBT_type *) 0xf00397b8u)	/* GTM TIM1 Shared Service Request 6 */
#define SRC_GTMTIM17	(*( SRC_AGBT_type *) 0xf00397bcu)	/* GTM TIM1 Shared Service Request 7 */
#define SRC_GTMTIM20	(*( SRC_AGBT_type *) 0xf00397c0u)	/* GTM TIM2 Shared Service Request 0 */
#define SRC_GTMTIM21	(*( SRC_AGBT_type *) 0xf00397c4u)	/* GTM TIM2 Shared Service Request 1 */
#define SRC_GTMTIM22	(*( SRC_AGBT_type *) 0xf00397c8u)	/* GTM TIM2 Shared Service Request 2 */
#define SRC_GTMTIM23	(*( SRC_AGBT_type *) 0xf00397ccu)	/* GTM TIM2 Shared Service Request 3 */
#define SRC_GTMTIM24	(*( SRC_AGBT_type *) 0xf00397d0u)	/* GTM TIM2 Shared Service Request 4 */
#define SRC_GTMTIM25	(*( SRC_AGBT_type *) 0xf00397d4u)	/* GTM TIM2 Shared Service Request 5 */
#define SRC_GTMTIM26	(*( SRC_AGBT_type *) 0xf00397d8u)	/* GTM TIM2 Shared Service Request 6 */
#define SRC_GTMTIM27	(*( SRC_AGBT_type *) 0xf00397dcu)	/* GTM TIM2 Shared Service Request 7 */
#define SRC_GTMTIM30	(*( SRC_AGBT_type *) 0xf00397e0u)	/* GTM TIM3 Shared Service Request 0 */
#define SRC_GTMTIM31	(*( SRC_AGBT_type *) 0xf00397e4u)	/* GTM TIM3 Shared Service Request 1 */
#define SRC_GTMTIM32	(*( SRC_AGBT_type *) 0xf00397e8u)	/* GTM TIM3 Shared Service Request 2 */
#define SRC_GTMTIM33	(*( SRC_AGBT_type *) 0xf00397ecu)	/* GTM TIM3 Shared Service Request 3 */
#define SRC_GTMTIM34	(*( SRC_AGBT_type *) 0xf00397f0u)	/* GTM TIM3 Shared Service Request 4 */
#define SRC_GTMTIM35	(*( SRC_AGBT_type *) 0xf00397f4u)	/* GTM TIM3 Shared Service Request 5 */
#define SRC_GTMTIM36	(*( SRC_AGBT_type *) 0xf00397f8u)	/* GTM TIM3 Shared Service Request 6 */
#define SRC_GTMTIM37	(*( SRC_AGBT_type *) 0xf00397fcu)	/* GTM TIM3 Shared Service Request 7 */
#define SRC_GTMTOM00	(*( SRC_AGBT_type *) 0xf0039b80u)	/* GTM TOM0 Shared Service Request 0 */
#define SRC_GTMTOM01	(*( SRC_AGBT_type *) 0xf0039b84u)	/* GTM TOM0 Shared Service Request 1 */
#define SRC_GTMTOM02	(*( SRC_AGBT_type *) 0xf0039b88u)	/* GTM TOM0 Shared Service Request 2 */
#define SRC_GTMTOM03	(*( SRC_AGBT_type *) 0xf0039b8cu)	/* GTM TOM0 Shared Service Request 3 */
#define SRC_GTMTOM04	(*( SRC_AGBT_type *) 0xf0039b90u)	/* GTM TOM0 Shared Service Request 4 */
#define SRC_GTMTOM05	(*( SRC_AGBT_type *) 0xf0039b94u)	/* GTM TOM0 Shared Service Request 5 */
#define SRC_GTMTOM06	(*( SRC_AGBT_type *) 0xf0039b98u)	/* GTM TOM0 Shared Service Request 6 */
#define SRC_GTMTOM07	(*( SRC_AGBT_type *) 0xf0039b9cu)	/* GTM TOM0 Shared Service Request 7 */
#define SRC_GTMTOM10	(*( SRC_AGBT_type *) 0xf0039ba0u)	/* GTM TOM1 Shared Service Request 0 */
#define SRC_GTMTOM11	(*( SRC_AGBT_type *) 0xf0039ba4u)	/* GTM TOM1 Shared Service Request 1 */
#define SRC_GTMTOM12	(*( SRC_AGBT_type *) 0xf0039ba8u)	/* GTM TOM1 Shared Service Request 2 */
#define SRC_GTMTOM13	(*( SRC_AGBT_type *) 0xf0039bacu)	/* GTM TOM1 Shared Service Request 3 */
#define SRC_GTMTOM14	(*( SRC_AGBT_type *) 0xf0039bb0u)	/* GTM TOM1 Shared Service Request 4 */
#define SRC_GTMTOM15	(*( SRC_AGBT_type *) 0xf0039bb4u)	/* GTM TOM1 Shared Service Request 5 */
#define SRC_GTMTOM16	(*( SRC_AGBT_type *) 0xf0039bb8u)	/* GTM TOM1 Shared Service Request 6 */
#define SRC_GTMTOM17	(*( SRC_AGBT_type *) 0xf0039bbcu)	/* GTM TOM1 Shared Service Request 7 */
#define SRC_GTMTOM20	(*( SRC_AGBT_type *) 0xf0039bc0u)	/* GTM TOM2 Shared Service Request 0 */
#define SRC_GTMTOM21	(*( SRC_AGBT_type *) 0xf0039bc4u)	/* GTM TOM2 Shared Service Request 1 */
#define SRC_GTMTOM22	(*( SRC_AGBT_type *) 0xf0039bc8u)	/* GTM TOM2 Shared Service Request 2 */
#define SRC_GTMTOM23	(*( SRC_AGBT_type *) 0xf0039bccu)	/* GTM TOM2 Shared Service Request 3 */
#define SRC_GTMTOM24	(*( SRC_AGBT_type *) 0xf0039bd0u)	/* GTM TOM2 Shared Service Request 4 */
#define SRC_GTMTOM25	(*( SRC_AGBT_type *) 0xf0039bd4u)	/* GTM TOM2 Shared Service Request 5 */
#define SRC_GTMTOM26	(*( SRC_AGBT_type *) 0xf0039bd8u)	/* GTM TOM2 Shared Service Request 6 */
#define SRC_GTMTOM27	(*( SRC_AGBT_type *) 0xf0039bdcu)	/* GTM TOM2 Shared Service Request 7 */
#define SRC_HSCT	(*( SRC_AGBT_type *) 0xf0038290u)	/* HSCT Service Request */
#define SRC_HSM0	(*( SRC_AGBT_type *) 0xf0038cc0u)	/* HSM Service Request 0 */
#define SRC_HSM1	(*( SRC_AGBT_type *) 0xf0038cc4u)	/* HSM Service Request 1 */
#define SRC_HSSLCOK0	(*( SRC_AGBT_type *) 0xf00382a0u)	/* Channel 0 OK Service Request m */
#define SRC_HSSLCOK1	(*( SRC_AGBT_type *) 0xf00382b0u)	/* Channel 1 OK Service Request m */
#define SRC_HSSLCOK2	(*( SRC_AGBT_type *) 0xf00382c0u)	/* Channel 2 OK Service Request m */
#define SRC_HSSLCOK3	(*( SRC_AGBT_type *) 0xf00382d0u)	/* Channel 3 OK Service Request m */
#define SRC_HSSLERR0	(*( SRC_AGBT_type *) 0xf00382a8u)	/* Channel 0 Error ServiceRequest m */
#define SRC_HSSLERR1	(*( SRC_AGBT_type *) 0xf00382b8u)	/* Channel 1 Error ServiceRequest m */
#define SRC_HSSLERR2	(*( SRC_AGBT_type *) 0xf00382c8u)	/* Channel 2 Error ServiceRequest m */
#define SRC_HSSLERR3	(*( SRC_AGBT_type *) 0xf00382d8u)	/* Channel 3 Error ServiceRequest m */
#define SRC_HSSLEXI	(*( SRC_AGBT_type *) 0xf00382e0u)	/* Exception Service Request */
#define SRC_HSSLRDI0	(*( SRC_AGBT_type *) 0xf00382a4u)	/* Channel 0 Read Data Service Request m */
#define SRC_HSSLRDI1	(*( SRC_AGBT_type *) 0xf00382b4u)	/* Channel 1 Read Data Service Request m */
#define SRC_HSSLRDI2	(*( SRC_AGBT_type *) 0xf00382c4u)	/* Channel 2 Read Data Service Request m */
#define SRC_HSSLRDI3	(*( SRC_AGBT_type *) 0xf00382d4u)	/* Channel 3 Read Data Service Request m */
#define SRC_HSSLTRG0	(*( SRC_AGBT_type *) 0xf00382acu)	/* Channel 0 Trigger Service Request m */
#define SRC_HSSLTRG1	(*( SRC_AGBT_type *) 0xf00382bcu)	/* Channel 1 Trigger Service Request m */
#define SRC_HSSLTRG2	(*( SRC_AGBT_type *) 0xf00382ccu)	/* Channel 2 Trigger Service Request m */
#define SRC_HSSLTRG3	(*( SRC_AGBT_type *) 0xf00382dcu)	/* Channel 3 Trigger Service Request m */
#define SRC_I2C0BREQ	(*( SRC_AGBT_type *) 0xf0038300u)	/* I2C 0 Burst Data Transfer Request */
#define SRC_I2C0ERR	(*( SRC_AGBT_type *) 0xf0038310u)	/* I2C 0 Error Service Request */
#define SRC_I2C0LBREQ	(*( SRC_AGBT_type *) 0xf0038304u)	/* I2C 0 Last Burst Data Transfer Service Request */
#define SRC_I2C0LSREQ	(*( SRC_AGBT_type *) 0xf003830cu)	/* I2C 0 Last Single Data Transfer Service Request */
#define SRC_I2C0P	(*( SRC_AGBT_type *) 0xf0038314u)	/* I2C 0 Kernel Service Request */
#define SRC_I2C0SREQ	(*( SRC_AGBT_type *) 0xf0038308u)	/* I2C 0 Single Data Transfer Service Request */
#define SRC_LMU	(*( SRC_AGBT_type *) 0xf0038de0u)	/* LMU Service Request */
#define SRC_MSC0SR0	(*( SRC_AGBT_type *) 0xf00383e0u)	/* MSC 0 Service Request 0 */
#define SRC_MSC0SR1	(*( SRC_AGBT_type *) 0xf00383e4u)	/* MSC 0 Service Request 1 */
#define SRC_MSC0SR2	(*( SRC_AGBT_type *) 0xf00383e8u)	/* MSC 0 Service Request 2 */
#define SRC_MSC0SR3	(*( SRC_AGBT_type *) 0xf00383ecu)	/* MSC 0 Service Request 3 */
#define SRC_MSC0SR4	(*( SRC_AGBT_type *) 0xf00383f0u)	/* MSC 0 Service Request 4 */
#define SRC_MSC1SR0	(*( SRC_AGBT_type *) 0xf00383f4u)	/* MSC 1 Service Request 0 */
#define SRC_MSC1SR1	(*( SRC_AGBT_type *) 0xf00383f8u)	/* MSC 1 Service Request 1 */
#define SRC_MSC1SR2	(*( SRC_AGBT_type *) 0xf00383fcu)	/* MSC 1 Service Request 2 */
#define SRC_MSC1SR3	(*( SRC_AGBT_type *) 0xf0038400u)	/* MSC 1 Service Request 3 */
#define SRC_MSC1SR4	(*( SRC_AGBT_type *) 0xf0038404u)	/* MSC 1 Service Request 4 */
#define SRC_PMU00	(*( SRC_AGBT_type *) 0xf0038c30u)	/* PMU 0 Service Request 0 */
#define SRC_PMU01	(*( SRC_AGBT_type *) 0xf0038c34u)	/* PMU 0 Service Request 1 */
#define SRC_PSI50	(*( SRC_AGBT_type *) 0xf0038d30u)	/* PSI5 Service Request 0 */
#define SRC_PSI51	(*( SRC_AGBT_type *) 0xf0038d34u)	/* PSI5 Service Request 1 */
#define SRC_PSI52	(*( SRC_AGBT_type *) 0xf0038d38u)	/* PSI5 Service Request 2 */
#define SRC_PSI53	(*( SRC_AGBT_type *) 0xf0038d3cu)	/* PSI5 Service Request 3 */
#define SRC_PSI54	(*( SRC_AGBT_type *) 0xf0038d40u)	/* PSI5 Service Request 4 */
#define SRC_PSI55	(*( SRC_AGBT_type *) 0xf0038d44u)	/* PSI5 Service Request 5 */
#define SRC_PSI56	(*( SRC_AGBT_type *) 0xf0038d48u)	/* PSI5 Service Request 6 */
#define SRC_PSI57	(*( SRC_AGBT_type *) 0xf0038d4cu)	/* PSI5 Service Request 7 */
#define SRC_PSI5S0	(*( SRC_AGBT_type *) 0xf0038df0u)	/* PSI5-S Service Request 0 */
#define SRC_PSI5S1	(*( SRC_AGBT_type *) 0xf0038df4u)	/* PSI5-S Service Request 1 */
#define SRC_PSI5S2	(*( SRC_AGBT_type *) 0xf0038df8u)	/* PSI5-S Service Request 2 */
#define SRC_PSI5S3	(*( SRC_AGBT_type *) 0xf0038dfcu)	/* PSI5-S Service Request 3 */
#define SRC_PSI5S4	(*( SRC_AGBT_type *) 0xf0038e00u)	/* PSI5-S Service Request 4 */
#define SRC_PSI5S5	(*( SRC_AGBT_type *) 0xf0038e04u)	/* PSI5-S Service Request 5 */
#define SRC_PSI5S6	(*( SRC_AGBT_type *) 0xf0038e08u)	/* PSI5-S Service Request 6 */
#define SRC_PSI5S7	(*( SRC_AGBT_type *) 0xf0038e0cu)	/* PSI5-S Service Request 7 */
#define SRC_QSPI0ERR	(*( SRC_AGBT_type *) 0xf0038198u)	/* QSPI 0 Error Service Request */
#define SRC_QSPI0PT	(*( SRC_AGBT_type *) 0xf003819cu)	/* QSPI 0 Phase Transition Service Request */
#define SRC_QSPI0RX	(*( SRC_AGBT_type *) 0xf0038194u)	/* QSPI 0 Receive Service Request */
#define SRC_QSPI0TX	(*( SRC_AGBT_type *) 0xf0038190u)	/* QSPI 0 Transmit Service Request */
#define SRC_QSPI0U	(*( SRC_AGBT_type *) 0xf00381a4u)	/* QSPI 0 User Defined Service Request */
#define SRC_QSPI1ERR	(*( SRC_AGBT_type *) 0xf00381b0u)	/* QSPI 1 Error Service Request */
#define SRC_QSPI1PT	(*( SRC_AGBT_type *) 0xf00381b4u)	/* QSPI 1 Phase Transition Service Request */
#define SRC_QSPI1RX	(*( SRC_AGBT_type *) 0xf00381acu)	/* QSPI 1 Receive Service Request */
#define SRC_QSPI1TX	(*( SRC_AGBT_type *) 0xf00381a8u)	/* QSPI 1 Transmit Service Request */
#define SRC_QSPI1U	(*( SRC_AGBT_type *) 0xf00381bcu)	/* QSPI 1 User Defined Service Request */
#define SRC_QSPI2ERR	(*( SRC_AGBT_type *) 0xf00381c8u)	/* QSPI 2 Error Service Request */
#define SRC_QSPI2PT	(*( SRC_AGBT_type *) 0xf00381ccu)	/* QSPI 2 Phase Transition Service Request */
#define SRC_QSPI2RX	(*( SRC_AGBT_type *) 0xf00381c4u)	/* QSPI 2 Receive Service Request */
#define SRC_QSPI2TX	(*( SRC_AGBT_type *) 0xf00381c0u)	/* QSPI 2 Transmit Service Request */
#define SRC_QSPI2U	(*( SRC_AGBT_type *) 0xf00381d4u)	/* QSPI 2 User Defined Service Request */
#define SRC_QSPI3ERR	(*( SRC_AGBT_type *) 0xf00381e0u)	/* QSPI 3 Error Service Request */
#define SRC_QSPI3PT	(*( SRC_AGBT_type *) 0xf00381e4u)	/* QSPI 3 Phase Transition Service Request */
#define SRC_QSPI3RX	(*( SRC_AGBT_type *) 0xf00381dcu)	/* QSPI 3 Receive Service Request */
#define SRC_QSPI3TX	(*( SRC_AGBT_type *) 0xf00381d8u)	/* QSPI 3 Transmit Service Request */
#define SRC_QSPI3U	(*( SRC_AGBT_type *) 0xf00381ecu)	/* QSPI 3 User Defined Service Request */
#define SRC_RESERVED10	(*( SRC_AGBT_type *) 0xf00381a0u)	/* Reserved Service Request 10 */
#define SRC_RESERVED11	(*( SRC_AGBT_type *) 0xf00381b8u)	/* Reserved Service Request 11 */
#define SRC_RESERVED12	(*( SRC_AGBT_type *) 0xf00381d0u)	/* Reserved Service Request 12 */
#define SRC_RESERVED13	(*( SRC_AGBT_type *) 0xf00381e8u)	/* Reserved Service Request 13 */
#define SRC_SCUDTS	(*( SRC_AGBT_type *) 0xf0038cd0u)	/* SCU DTS Busy Service Request */
#define SRC_SCUERU0	(*( SRC_AGBT_type *) 0xf0038cd4u)	/* SCU ERU Service Request 0 */
#define SRC_SCUERU1	(*( SRC_AGBT_type *) 0xf0038cd8u)	/* SCU ERU Service Request 1 */
#define SRC_SCUERU2	(*( SRC_AGBT_type *) 0xf0038cdcu)	/* SCU ERU Service Request 2 */
#define SRC_SCUERU3	(*( SRC_AGBT_type *) 0xf0038ce0u)	/* SCU ERU Service Request 3 */
#define SRC_SENT0	(*( SRC_AGBT_type *) 0xf0038350u)	/* SENT TRIG0 Service Request */
#define SRC_SENT1	(*( SRC_AGBT_type *) 0xf0038354u)	/* SENT TRIG1 Service Request */
#define SRC_SENT2	(*( SRC_AGBT_type *) 0xf0038358u)	/* SENT TRIG2 Service Request */
#define SRC_SENT3	(*( SRC_AGBT_type *) 0xf003835cu)	/* SENT TRIG3 Service Request */
#define SRC_SENT4	(*( SRC_AGBT_type *) 0xf0038360u)	/* SENT TRIG4 Service Request */
#define SRC_SENT5	(*( SRC_AGBT_type *) 0xf0038364u)	/* SENT TRIG5 Service Request */
#define SRC_SENT6	(*( SRC_AGBT_type *) 0xf0038368u)	/* SENT TRIG6 Service Request */
#define SRC_SENT7	(*( SRC_AGBT_type *) 0xf003836cu)	/* SENT TRIG7 Service Request */
#define SRC_SENT8	(*( SRC_AGBT_type *) 0xf0038370u)	/* SENT TRIG8 Service Request */
#define SRC_SENT9	(*( SRC_AGBT_type *) 0xf0038374u)	/* SENT TRIG9 Service Request */
#define SRC_SMU0	(*( SRC_AGBT_type *) 0xf0038d10u)	/* SMU Service Request 0 */
#define SRC_SMU1	(*( SRC_AGBT_type *) 0xf0038d14u)	/* SMU Service Request 1 */
#define SRC_SMU2	(*( SRC_AGBT_type *) 0xf0038d18u)	/* SMU Service Request 2 */
#define SRC_STM0SR0	(*( SRC_AGBT_type *) 0xf0038490u)	/* System Timer 0 Service Request 0 */
#define SRC_STM0SR1	(*( SRC_AGBT_type *) 0xf0038494u)	/* System Timer 0 Service Request 1 */
#define SRC_STM1SR0	(*( SRC_AGBT_type *) 0xf0038498u)	/* System Timer 1 Service Request 0 */
#define SRC_STM1SR1	(*( SRC_AGBT_type *) 0xf003849cu)	/* System Timer 1 Service Request 1 */
#define SRC_STM2SR0	(*( SRC_AGBT_type *) 0xf00384a0u)	/* System Timer 2 Service Request 0 */
#define SRC_STM2SR1	(*( SRC_AGBT_type *) 0xf00384a4u)	/* System Timer 2 Service Request 1 */
#define SRC_VADCCG0SR0	(*( SRC_AGBT_type *) 0xf0038aa0u)	/* VADC Common Group 0 Service Request 0 */
#define SRC_VADCCG0SR1	(*( SRC_AGBT_type *) 0xf0038aa4u)	/* VADC Common Group 0 Service Request 1 */
#define SRC_VADCCG0SR2	(*( SRC_AGBT_type *) 0xf0038aa8u)	/* VADC Common Group 0 Service Request 2 */
#define SRC_VADCCG0SR3	(*( SRC_AGBT_type *) 0xf0038aacu)	/* VADC Common Group 0 Service Request 3 */
#define SRC_VADCCG1SR0	(*( SRC_AGBT_type *) 0xf0038ab0u)	/* VADC Common Group 1 Service Request 0 */
#define SRC_VADCCG1SR1	(*( SRC_AGBT_type *) 0xf0038ab4u)	/* VADC Common Group 1 Service Request 1 */
#define SRC_VADCCG1SR2	(*( SRC_AGBT_type *) 0xf0038ab8u)	/* VADC Common Group 1 Service Request 2 */
#define SRC_VADCCG1SR3	(*( SRC_AGBT_type *) 0xf0038abcu)	/* VADC Common Group 1 Service Request 3 */
#define SRC_VADCG0SR0	(*( SRC_AGBT_type *) 0xf0038980u)	/* VADC Group 0 Service Request 0 */
#define SRC_VADCG0SR1	(*( SRC_AGBT_type *) 0xf0038984u)	/* VADC Group 0 Service Request 1 */
#define SRC_VADCG0SR2	(*( SRC_AGBT_type *) 0xf0038988u)	/* VADC Group 0 Service Request 2 */
#define SRC_VADCG0SR3	(*( SRC_AGBT_type *) 0xf003898cu)	/* VADC Group 0 Service Request 3 */
#define SRC_VADCG1SR0	(*( SRC_AGBT_type *) 0xf0038990u)	/* VADC Group 1 Service Request 0 */
#define SRC_VADCG1SR1	(*( SRC_AGBT_type *) 0xf0038994u)	/* VADC Group 1 Service Request 1 */
#define SRC_VADCG1SR2	(*( SRC_AGBT_type *) 0xf0038998u)	/* VADC Group 1 Service Request 2 */
#define SRC_VADCG1SR3	(*( SRC_AGBT_type *) 0xf003899cu)	/* VADC Group 1 Service Request 3 */
#define SRC_VADCG2SR0	(*( SRC_AGBT_type *) 0xf00389a0u)	/* VADC Group 2 Service Request 0 */
#define SRC_VADCG2SR1	(*( SRC_AGBT_type *) 0xf00389a4u)	/* VADC Group 2 Service Request 1 */
#define SRC_VADCG2SR2	(*( SRC_AGBT_type *) 0xf00389a8u)	/* VADC Group 2 Service Request 2 */
#define SRC_VADCG2SR3	(*( SRC_AGBT_type *) 0xf00389acu)	/* VADC Group 2 Service Request 3 */
#define SRC_VADCG3SR0	(*( SRC_AGBT_type *) 0xf00389b0u)	/* VADC Group 3 Service Request 0 */
#define SRC_VADCG3SR1	(*( SRC_AGBT_type *) 0xf00389b4u)	/* VADC Group 3 Service Request 1 */
#define SRC_VADCG3SR2	(*( SRC_AGBT_type *) 0xf00389b8u)	/* VADC Group 3 Service Request 2 */
#define SRC_VADCG3SR3	(*( SRC_AGBT_type *) 0xf00389bcu)	/* VADC Group 3 Service Request 3 */
#define SRC_VADCG4SR0	(*( SRC_AGBT_type *) 0xf00389c0u)	/* VADC Group 4 Service Request 0 */
#define SRC_VADCG4SR1	(*( SRC_AGBT_type *) 0xf00389c4u)	/* VADC Group 4 Service Request 1 */
#define SRC_VADCG4SR2	(*( SRC_AGBT_type *) 0xf00389c8u)	/* VADC Group 4 Service Request 2 */
#define SRC_VADCG4SR3	(*( SRC_AGBT_type *) 0xf00389ccu)	/* VADC Group 4 Service Request 3 */
#define SRC_VADCG5SR0	(*( SRC_AGBT_type *) 0xf00389d0u)	/* VADC Group 5 Service Request 0 */
#define SRC_VADCG5SR1	(*( SRC_AGBT_type *) 0xf00389d4u)	/* VADC Group 5 Service Request 1 */
#define SRC_VADCG5SR2	(*( SRC_AGBT_type *) 0xf00389d8u)	/* VADC Group 5 Service Request 2 */
#define SRC_VADCG5SR3	(*( SRC_AGBT_type *) 0xf00389dcu)	/* VADC Group 5 Service Request 3 */
#define SRC_VADCG6SR0	(*( SRC_AGBT_type *) 0xf00389e0u)	/* VADC Group 6 Service Request 0 */
#define SRC_VADCG6SR1	(*( SRC_AGBT_type *) 0xf00389e4u)	/* VADC Group 6 Service Request 1 */
#define SRC_VADCG6SR2	(*( SRC_AGBT_type *) 0xf00389e8u)	/* VADC Group 6 Service Request 2 */
#define SRC_VADCG6SR3	(*( SRC_AGBT_type *) 0xf00389ecu)	/* VADC Group 6 Service Request 3 */
#define SRC_VADCG7SR0	(*( SRC_AGBT_type *) 0xf00389f0u)	/* VADC Group 7 Service Request 0 */
#define SRC_VADCG7SR1	(*( SRC_AGBT_type *) 0xf00389f4u)	/* VADC Group 7 Service Request 1 */
#define SRC_VADCG7SR2	(*( SRC_AGBT_type *) 0xf00389f8u)	/* VADC Group 7 Service Request 2 */
#define SRC_VADCG7SR3	(*( SRC_AGBT_type *) 0xf00389fcu)	/* VADC Group 7 Service Request 3 */
#define SRC_XBARSRC	(*( SRC_AGBT_type *) 0xf0038048u)	/* XBAR_SRI Service Request */


/* STM */
typedef volatile union
{
	struct
	{ 
		unsigned int EN0            : 1;	/* Access Enable for Master TAG ID 0 */
		unsigned int EN1            : 1;	/* Access Enable for Master TAG ID 1 */
		unsigned int EN2            : 1;	/* Access Enable for Master TAG ID 2 */
		unsigned int EN3            : 1;	/* Access Enable for Master TAG ID 3 */
		unsigned int EN4            : 1;	/* Access Enable for Master TAG ID 4 */
		unsigned int EN5            : 1;	/* Access Enable for Master TAG ID 5 */
		unsigned int EN6            : 1;	/* Access Enable for Master TAG ID 6 */
		unsigned int EN7            : 1;	/* Access Enable for Master TAG ID 7 */
		unsigned int EN8            : 1;	/* Access Enable for Master TAG ID 8 */
		unsigned int EN9            : 1;	/* Access Enable for Master TAG ID 9 */
		unsigned int EN10           : 1;	/* Access Enable for Master TAG ID 10 */
		unsigned int EN11           : 1;	/* Access Enable for Master TAG ID 11 */
		unsigned int EN12           : 1;	/* Access Enable for Master TAG ID 12 */
		unsigned int EN13           : 1;	/* Access Enable for Master TAG ID 13 */
		unsigned int EN14           : 1;	/* Access Enable for Master TAG ID 14 */
		unsigned int EN15           : 1;	/* Access Enable for Master TAG ID 15 */
		unsigned int EN16           : 1;	/* Access Enable for Master TAG ID 16 */
		unsigned int EN17           : 1;	/* Access Enable for Master TAG ID 17 */
		unsigned int EN18           : 1;	/* Access Enable for Master TAG ID 18 */
		unsigned int EN19           : 1;	/* Access Enable for Master TAG ID 19 */
		unsigned int EN20           : 1;	/* Access Enable for Master TAG ID 20 */
		unsigned int EN21           : 1;	/* Access Enable for Master TAG ID 21 */
		unsigned int EN22           : 1;	/* Access Enable for Master TAG ID 22 */
		unsigned int EN23           : 1;	/* Access Enable for Master TAG ID 23 */
		unsigned int EN24           : 1;	/* Access Enable for Master TAG ID 24 */
		unsigned int EN25           : 1;	/* Access Enable for Master TAG ID 25 */
		unsigned int EN26           : 1;	/* Access Enable for Master TAG ID 26 */
		unsigned int EN27           : 1;	/* Access Enable for Master TAG ID 27 */
		unsigned int EN28           : 1;	/* Access Enable for Master TAG ID 28 */
		unsigned int EN29           : 1;	/* Access Enable for Master TAG ID 29 */
		unsigned int EN30           : 1;	/* Access Enable for Master TAG ID 30 */
		unsigned int EN31           : 1;	/* Access Enable for Master TAG ID 31 */
	} B;
	int I;
	unsigned int U;

} STM0_ACCEN0_type;
#define STM0_ACCEN0	(*( STM0_ACCEN0_type *) 0xf00000fcu)	/* Access Enable Register 0 */
#define STM1_ACCEN0	(*( STM0_ACCEN0_type *) 0xf00001fcu)	/* Access Enable Register 0 */
#define STM2_ACCEN0	(*( STM0_ACCEN0_type *) 0xf00002fcu)	/* Access Enable Register 0 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int Reserved       : 32;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} STM0_ACCEN1_type;
#define STM0_ACCEN1	(*( STM0_ACCEN1_type *) 0xf00000f8u)	/* Access Enable Register 1 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int STMCAP_63_32_  : 32;	/* Captured System Timer Bits [63:32] */
	} B;
	int I;
	unsigned int U;

} STM0_CAP_type;
#define STM0_CAP	(*( STM0_CAP_type *) 0xf000002cu)	/* Timer Capture Register */
#define STM0_CAPSV	(*( STM0_CAP_type *) 0xf0000054u)	/* Timer Capture Register Second View */
#define STM1_CAP	(*( STM0_CAP_type *) 0xf000012cu)	/* Timer Capture Register */
#define STM1_CAPSV	(*( STM0_CAP_type *) 0xf0000154u)	/* Timer Capture Register Second View */
#define STM2_CAP	(*( STM0_CAP_type *) 0xf000022cu)	/* Timer Capture Register */
#define STM2_CAPSV	(*( STM0_CAP_type *) 0xf0000254u)	/* Timer Capture Register Second View */

typedef volatile union
{
	struct
	{ 
		unsigned int DISR           : 1;	/* Module Disable Request Bit */
		/* const */ unsigned int DISS           : 1;	/* Module Disable Status Bit */
		unsigned int                : 1;
		unsigned int EDIS           : 1;	/* Sleep Mode Enable Control */
		unsigned int                : 28;
	} B;
	int I;
	unsigned int U;

} STM0_CLC_type;
#define STM0_CLC	(*( STM0_CLC_type *) 0xf0000000u)	/* Clock Control Register */
#define STM1_CLC	(*( STM0_CLC_type *) 0xf0000100u)	/* Clock Control Register */
#define STM2_CLC	(*( STM0_CLC_type *) 0xf0000200u)	/* Clock Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int MSIZE0         : 5;	/* Compare Register Size for CMP0 */
		unsigned int                : 3;
		unsigned int MSTART0        : 5;	/* Start Bit Location for CMP0 */
		unsigned int                : 3;
		unsigned int MSIZE1         : 5;	/* Compare Register Size for CMP1 */
		unsigned int                : 3;
		unsigned int MSTART1        : 5;	/* Start Bit Location for CMP1 */
		unsigned int                : 3;
	} B;
	int I;
	unsigned int U;

} STM0_CMCON_type;
#define STM0_CMCON	(*( STM0_CMCON_type *) 0xf0000038u)	/* Compare Match Control Register */
#define STM1_CMCON	(*( STM0_CMCON_type *) 0xf0000138u)	/* Compare Match Control Register */
#define STM2_CMCON	(*( STM0_CMCON_type *) 0xf0000238u)	/* Compare Match Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int CMPVAL         : 32;	/* Compare Value of Compare Register x */
	} B;
	int I;
	unsigned int U;

} STM0_CMP0_type;
#define STM0_CMP0	(*( STM0_CMP0_type *) 0xf0000030u)	/* Compare Register 0 */
#define STM0_CMP1	(*( STM0_CMP0_type *) 0xf0000034u)	/* Compare Register 1 */
#define STM1_CMP0	(*( STM0_CMP0_type *) 0xf0000130u)	/* Compare Register 0 */
#define STM1_CMP1	(*( STM0_CMP0_type *) 0xf0000134u)	/* Compare Register 1 */
#define STM2_CMP0	(*( STM0_CMP0_type *) 0xf0000230u)	/* Compare Register 0 */
#define STM2_CMP1	(*( STM0_CMP0_type *) 0xf0000234u)	/* Compare Register 1 */

typedef volatile union
{
	struct
	{ 
		unsigned int CMP0EN         : 1;	/* Compare Register CMP0 Interrupt Enable Control */
		/* const */ unsigned int CMP0IR         : 1;	/* Compare Register CMP0 Interrupt Request Flag */
		unsigned int CMP0OS         : 1;	/* Compare Register CMP0 Interrupt Output Selection */
		unsigned int                : 1;
		unsigned int CMP1EN         : 1;	/* Compare Register CMP1 Interrupt Enable Control */
		/* const */ unsigned int CMP1IR         : 1;	/* Compare Register CMP1 Interrupt Request Flag */
		unsigned int CMP1OS         : 1;	/* Compare Register CMP1 Interrupt Output Selection */
		unsigned int                : 25;
	} B;
	int I;
	unsigned int U;

} STM0_ICR_type;
#define STM0_ICR	(*( STM0_ICR_type *) 0xf000003cu)	/* Interrupt Control Register */
#define STM1_ICR	(*( STM0_ICR_type *) 0xf000013cu)	/* Interrupt Control Register */
#define STM2_ICR	(*( STM0_ICR_type *) 0xf000023cu)	/* Interrupt Control Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int MODREV         : 8;	/* Module Revision Number */
		/* const */ unsigned int MODTYPE        : 8;	/* Module Type */
		/* const */ unsigned int MODNUM         : 16;	/* Module Number Value */
	} B;
	int I;
	unsigned int U;

} STM0_ID_type;
#define STM0_ID	(*( STM0_ID_type *) 0xf0000008u)	/* Module Identification Register */
#define STM1_ID	(*( STM0_ID_type *) 0xf0000108u)	/* Module Identification Register */
#define STM2_ID	(*( STM0_ID_type *) 0xf0000208u)	/* Module Identification Register */

typedef volatile union
{
	struct
	{ 
		unsigned int CMP0IRR        : 1;	/* Reset Compare Register CMP0 Interrupt Flag */
		unsigned int CMP0IRS        : 1;	/* Set Compare Register CMP0 Interrupt Flag */
		unsigned int CMP1IRR        : 1;	/* Reset Compare Register CMP1 Interrupt Flag */
		unsigned int CMP1IRS        : 1;	/* Set Compare Register CMP1 Interrupt Flag */
		unsigned int                : 28;
	} B;
	int I;
	unsigned int U;

} STM0_ISCR_type;
#define STM0_ISCR	(*( STM0_ISCR_type *) 0xf0000040u)	/* Interrupt Set/Clear Register */
#define STM1_ISCR	(*( STM0_ISCR_type *) 0xf0000140u)	/* Interrupt Set/Clear Register */
#define STM2_ISCR	(*( STM0_ISCR_type *) 0xf0000240u)	/* Interrupt Set/Clear Register */

typedef volatile union
{
	struct
	{ 
		unsigned int RST            : 1;	/* Kernel Reset */
		unsigned int RSTSTAT        : 1;	/* Kernel Reset Status */
		unsigned int                : 30;
	} B;
	int I;
	unsigned int U;

} STM0_KRST0_type;
#define STM0_KRST0	(*( STM0_KRST0_type *) 0xf00000f4u)	/* Kernel Reset Register 0 */
#define STM1_KRST0	(*( STM0_KRST0_type *) 0xf00001f4u)	/* Kernel Reset Register 0 */
#define STM2_KRST0	(*( STM0_KRST0_type *) 0xf00002f4u)	/* Kernel Reset Register 0 */

typedef volatile union
{
	struct
	{ 
		unsigned int RST            : 1;	/* Kernel Reset */
		unsigned int                : 31;
	} B;
	int I;
	unsigned int U;

} STM0_KRST1_type;
#define STM0_KRST1	(*( STM0_KRST1_type *) 0xf00000f0u)	/* Kernel Reset Register 1 */
#define STM1_KRST1	(*( STM0_KRST1_type *) 0xf00001f0u)	/* Kernel Reset Register 1 */
#define STM2_KRST1	(*( STM0_KRST1_type *) 0xf00002f0u)	/* Kernel Reset Register 1 */

typedef volatile union
{
	struct
	{ 
		unsigned int CLR            : 1;	/* Kernel Reset Status Clear */
		unsigned int                : 31;
	} B;
	int I;
	unsigned int U;

} STM0_KRSTCLR_type;
#define STM0_KRSTCLR	(*( STM0_KRSTCLR_type *) 0xf00000ecu)	/* Kernel Reset Status Clear Register */
#define STM1_KRSTCLR	(*( STM0_KRSTCLR_type *) 0xf00001ecu)	/* Kernel Reset Status Clear Register */
#define STM2_KRSTCLR	(*( STM0_KRSTCLR_type *) 0xf00002ecu)	/* Kernel Reset Status Clear Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32                : 24;
		unsigned __sfrbit32 SUS            : 4;	/* OCDS Suspend Control */
		unsigned __sfrbit32 SUS_P          : 1;	/* SUS Write Protection */
		/* const */ unsigned __sfrbit32 SUSSTA         : 1;	/* Suspend State */
		unsigned __sfrbit32                : 2;
	} B;
	int I;
	unsigned int U;

} STM0_OCS_type;
#define STM0_OCS	(*( STM0_OCS_type *) 0xf00000e8u)	/* OCDS Control and Status */
#define STM1_OCS	(*( STM0_OCS_type *) 0xf00001e8u)	/* OCDS Control and Status */
#define STM2_OCS	(*( STM0_OCS_type *) 0xf00002e8u)	/* OCDS Control and Status */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int STM_31_0_      : 32;	/* System Timer Bits [31:0] */
	} B;
	int I;
	unsigned int U;

} STM0_TIM0_type;
#define STM0_TIM0	(*( STM0_TIM0_type *) 0xf0000010u)	/* Timer Register 0 */
#define STM0_TIM0SV	(*( STM0_TIM0_type *) 0xf0000050u)	/* Timer Register 0 Second View */
#define STM1_TIM0	(*( STM0_TIM0_type *) 0xf0000110u)	/* Timer Register 0 */
#define STM1_TIM0SV	(*( STM0_TIM0_type *) 0xf0000150u)	/* Timer Register 0 Second View */
#define STM2_TIM0	(*( STM0_TIM0_type *) 0xf0000210u)	/* Timer Register 0 */
#define STM2_TIM0SV	(*( STM0_TIM0_type *) 0xf0000250u)	/* Timer Register 0 Second View */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int STM_35_4_      : 32;	/* System Timer Bits [35:4] */
	} B;
	int I;
	unsigned int U;

} STM0_TIM1_type;
#define STM0_TIM1	(*( STM0_TIM1_type *) 0xf0000014u)	/* Timer Register 1 */
#define STM1_TIM1	(*( STM0_TIM1_type *) 0xf0000114u)	/* Timer Register 1 */
#define STM2_TIM1	(*( STM0_TIM1_type *) 0xf0000214u)	/* Timer Register 1 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int STM_39_8_      : 32;	/* System Timer Bits [39:8] */
	} B;
	int I;
	unsigned int U;

} STM0_TIM2_type;
#define STM0_TIM2	(*( STM0_TIM2_type *) 0xf0000018u)	/* Timer Register 2 */
#define STM1_TIM2	(*( STM0_TIM2_type *) 0xf0000118u)	/* Timer Register 2 */
#define STM2_TIM2	(*( STM0_TIM2_type *) 0xf0000218u)	/* Timer Register 2 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int STM_43_12_     : 32;	/* System Timer Bits [43:12] */
	} B;
	int I;
	unsigned int U;

} STM0_TIM3_type;
#define STM0_TIM3	(*( STM0_TIM3_type *) 0xf000001cu)	/* Timer Register 3 */
#define STM1_TIM3	(*( STM0_TIM3_type *) 0xf000011cu)	/* Timer Register 3 */
#define STM2_TIM3	(*( STM0_TIM3_type *) 0xf000021cu)	/* Timer Register 3 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int STM_47_16_     : 32;	/* System Timer Bits [47:16] */
	} B;
	int I;
	unsigned int U;

} STM0_TIM4_type;
#define STM0_TIM4	(*( STM0_TIM4_type *) 0xf0000020u)	/* Timer Register 4 */
#define STM1_TIM4	(*( STM0_TIM4_type *) 0xf0000120u)	/* Timer Register 4 */
#define STM2_TIM4	(*( STM0_TIM4_type *) 0xf0000220u)	/* Timer Register 4 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int STM_51_20_     : 32;	/* System Timer Bits [51:20] */
	} B;
	int I;
	unsigned int U;

} STM0_TIM5_type;
#define STM0_TIM5	(*( STM0_TIM5_type *) 0xf0000024u)	/* Timer Register 5 */
#define STM1_TIM5	(*( STM0_TIM5_type *) 0xf0000124u)	/* Timer Register 5 */
#define STM2_TIM5	(*( STM0_TIM5_type *) 0xf0000224u)	/* Timer Register 5 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int STM_63_32_     : 32;	/* System Timer Bits [63:32] */
	} B;
	int I;
	unsigned int U;

} STM0_TIM6_type;
#define STM0_TIM6	(*( STM0_TIM6_type *) 0xf0000028u)	/* Timer Register 6 */
#define STM1_TIM6	(*( STM0_TIM6_type *) 0xf0000128u)	/* Timer Register 6 */
#define STM2_TIM6	(*( STM0_TIM6_type *) 0xf0000228u)	/* Timer Register 6 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int Reserved       : 32;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} STM1_ACCEN1_type;
#define STM1_ACCEN1	(*( STM1_ACCEN1_type *) 0xf00001f8u)	/* Access Enable Register 1 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int Reserved       : 32;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} STM2_ACCEN1_type;
#define STM2_ACCEN1	(*( STM2_ACCEN1_type *) 0xf00002f8u)	/* Access Enable Register 1 */

#define SYSTIME_LOW	STM0_TIM0.U
#define SYSTIME_HIGH	STM0_CAP.U
#define SYSTIME0_LOW	STM0_TIM0.U
#define SYSTIME0_HIGH	STM0_CAP.U
#define SYSTIME1_LOW	STM1_TIM0.U
#define SYSTIME1_HIGH	STM1_CAP.U
#define SYSTIME2_LOW	STM2_TIM0.U
#define SYSTIME2_HIGH	STM2_CAP.U

/* OCDS */
typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 DATA           : 32;	/* Read/Write Data */
	} B;
	int I;
	unsigned int U;

} CBS_COMDATA_type;
#define CBS_COMDATA	(*( CBS_COMDATA_type *) 0xf0000468u)	/* Communication Mode Data Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 ADDR           : 32;	/* Source Address */
	} B;
	int I;
	unsigned int U;

} CBS_ICTSA_type;
#define CBS_ICTSA	(*( CBS_ICTSA_type *) 0xf0000488u)	/* Internally Controlled Trace Source Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 ADDR           : 32;	/* Destination Address */
	} B;
	int I;
	unsigned int U;

} CBS_ICTTA_type;
#define CBS_ICTTA	(*( CBS_ICTTA_type *) 0xf000048cu)	/* Internally Controlled Trace Destination Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 SET_CRS        : 1;	/* Set Read Sync Flag */
		unsigned __sfrbit32 SET_CWS        : 1;	/* Set Write Sync Flag */
		unsigned __sfrbit32 SET_CS         : 1;	/* Set Communication Synchronization Flag */
		unsigned __sfrbit32 CLR_CS         : 1;	/* Clear Communication Synchronization Flag */
		unsigned __sfrbit32 CHANNEL_P      : 1;	/* CHANNEL Write Protection */
		unsigned __sfrbit32 CHANNEL        : 3;	/* Channel Indication */
		unsigned __sfrbit32                : 8;
		unsigned __sfrbit32 SET_INT_MOD    : 1;	/* Enter Internal Mode */
		unsigned __sfrbit32                : 1;
		unsigned __sfrbit32 SET_INT_TRC    : 1;	/* Enable Internally Controlled Triggered Transfer */
		unsigned __sfrbit32 CLR_INT_TRC    : 1;	/* Disable Internally Controlled Triggered Transfer */
		unsigned __sfrbit32 TRC_MOD_P      : 1;	/* TRC_MOD Write Protection */
		unsigned __sfrbit32 TRC_MOD        : 2;	/* Data Size Definition for Triggered Transfer */
		unsigned __sfrbit32                : 1;
		/* const */ unsigned __sfrbit32 INT_MOD        : 1;	/* Internal Mode Enabled Flag */
		/* const */ unsigned __sfrbit32 INT_TRC        : 1;	/* Internally Controlled Triggered Transfer Enable */
		unsigned __sfrbit32                : 6;
	} B;
	int I;
	unsigned int U;

} CBS_INTMOD_type;
#define CBS_INTMOD	(*( CBS_INTMOD_type *) 0xf0000484u)	/* Internal Mode Status and Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32                : 4;
		/* const */ unsigned __sfrbit32 CRSYNC         : 1;	/* Communication Mode Read Sync Flag */
		/* const */ unsigned __sfrbit32 CWSYNC         : 1;	/* Communication Mode Write Sync Flag */
		unsigned __sfrbit32 CW_ACK         : 1;	/* Communication Mode Write Acknowledge */
		/* const */ unsigned __sfrbit32 COM_SYNC       : 1;	/* Communication Mode Synchronization Flag */
		/* const */ unsigned __sfrbit32 HOSTED         : 1;	/* Tool Interface in Use */
		unsigned __sfrbit32                : 3;
		/* const */ unsigned __sfrbit32 CHANNEL        : 3;	/* Channel Indication */
		unsigned __sfrbit32                : 17;
	} B;
	int I;
	unsigned int U;

} CBS_IOSR_type;
#define CBS_IOSR	(*( CBS_IOSR_type *) 0xf000046cu)	/* IOClient Status and Control Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned __sfrbit32 MOD_REV        : 8;	/* Module Revision */
		/* const */ unsigned __sfrbit32 MOD_TYPE       : 8;	/* Module Type */
		/* const */ unsigned __sfrbit32 MOD_NUMBER     : 16;	/* Module Number */
	} B;
	int I;
	unsigned int U;

} CBS_JDPID_type;
#define CBS_JDPID	(*( CBS_JDPID_type *) 0xf0000408u)	/* Module Identification Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 JTAG_ID        : 32;	/* JTAG Device ID */
	} B;
	int I;
	unsigned int U;

} CBS_JTAGID_type;
#define CBS_JTAGID	(*( CBS_JTAGID_type *) 0xf0000464u)	/* JTAG Device Identification Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 OC0_P          : 1;	/* OC0 Write Protection */
		unsigned __sfrbit32 OC0            : 1;	/* Set/Clear OCDS Control Bits Bus Domain */
		unsigned __sfrbit32 OC1_P          : 1;	/* OC1 Write Protection */
		unsigned __sfrbit32 OC1            : 1;	/* Set/Clear OCDS Control Bits Bus Domain */
		unsigned __sfrbit32 OC2_P          : 1;	/* OC2 Write Protection */
		unsigned __sfrbit32 OC2            : 1;	/* Set/Clear OCDS Control Bits Bus Domain */
		unsigned __sfrbit32 OC3_P          : 1;	/* OC3 Write Protection */
		unsigned __sfrbit32 OC3            : 1;	/* Set/Clear OCDS Control Bits Bus Domain */
		unsigned __sfrbit32 OC4_P          : 1;	/* OC4 Write Protection */
		unsigned __sfrbit32 OC4            : 1;	/* Set/Clear OCDS Control Bits Bus Domain */
		unsigned __sfrbit32 OC5_P          : 1;	/* OC5 Write Protection */
		unsigned __sfrbit32 OC5            : 1;	/* Set/Clear OCDS Control Bits Bus Domain */
		unsigned __sfrbit32 WDTSUS_P       : 1;	/* WDTSUS Write Protection */
		unsigned __sfrbit32 WDTSUS         : 1;	/* Set/Clear Watchdog Timer Suspension Control */
		unsigned __sfrbit32 STABLE_P       : 1;	/* STABLE Write Protection */
		unsigned __sfrbit32 STABLE         : 1;	/* Initialize Application Reset Indication */
		unsigned __sfrbit32 OJC0_P         : 1;	/* OJC0 Write Protection */
		unsigned __sfrbit32 OJC0           : 1;	/* Set/Clear OCDS Control Bits IOClient Domain */
		unsigned __sfrbit32 OJC1_P         : 1;	/* OJC1 Write Protection */
		unsigned __sfrbit32 OJC1           : 1;	/* Set/Clear OCDS Control Bits IOClient Domain */
		unsigned __sfrbit32 OJC2_P         : 1;	/* OJC2 Write Protection */
		unsigned __sfrbit32 OJC2           : 1;	/* Set/Clear OCDS Control Bits IOClient Domain */
		unsigned __sfrbit32 OJC3_P         : 1;	/* OJC3 Write Protection */
		unsigned __sfrbit32 OJC3           : 1;	/* Set/Clear OCDS Control Bits IOClient Domain */
		unsigned __sfrbit32 OJC4_P         : 1;	/* OJC4 Write Protection */
		unsigned __sfrbit32 OJC4           : 1;	/* Set/Clear OCDS Control Bits IOClient Domain */
		unsigned __sfrbit32 OJC5_P         : 1;	/* OJC5 Write Protection */
		unsigned __sfrbit32 OJC5           : 1;	/* Set/Clear OCDS Control Bits IOClient Domain */
		unsigned __sfrbit32 OJC6_P         : 1;	/* OJC6 Write Protection */
		unsigned __sfrbit32 OJC6           : 1;	/* Set/Clear OCDS Control Bits IOClient Domain */
		unsigned __sfrbit32 OJC7_P         : 1;	/* OJC7 Write Protection */
		unsigned __sfrbit32 OJC7           : 1;	/* Set/Clear OCDS Control Bits IOClient Domain */
	} B;
	int I;
	unsigned int U;

} CBS_OCNTRL_type;
#define CBS_OCNTRL	(*( CBS_OCNTRL_type *) 0xf000047cu)	/* OSCU Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 PAT            : 8;	/* OCDS Enabling Pattern */
		unsigned __sfrbit32 DS             : 1;	/* Disable OCDS */
		unsigned __sfrbit32 OCO            : 1;	/* OCDS Clock Off */
		unsigned __sfrbit32                : 6;
		unsigned __sfrbit32 IF_LCK_P       : 1;	/* IF_LCK Write Protection */
		unsigned __sfrbit32 IF_LCK         : 1;	/* Set/Clear Interface Locked Indication */
		unsigned __sfrbit32 AUT_OK_P       : 1;	/* AUT_OK Write Protection */
		unsigned __sfrbit32 AUT_OK         : 1;	/* Set/Clear the Authorization OK Indication */
		unsigned __sfrbit32                : 12;
	} B;
	int I;
	unsigned int U;

} CBS_OEC_type;
#define CBS_OEC	(*( CBS_OEC_type *) 0xf0000478u)	/* OCDS Enable Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 DAPMODE        : 3;	/* DAP Interface Mode */
		unsigned __sfrbit32 DAPRST         : 1;	/* DAP Protocol Clear */
		unsigned __sfrbit32                : 4;
		unsigned __sfrbit32 F_JTAG         : 1;	/* Forced JTAG Mode */
		unsigned __sfrbit32 N_JTAG         : 1;	/* No Switch to JTAG */
		unsigned __sfrbit32                : 2;
		unsigned __sfrbit32 PADCTL         : 4;	/* Pad Control for Debug Interface Pins */
		unsigned __sfrbit32                : 16;
	} B;
	int I;
	unsigned int U;

} CBS_OIFM_type;
#define CBS_OIFM	(*( CBS_OIFM_type *) 0xf000040cu)	/* OCDS Interface Mode Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned __sfrbit32 OEN            : 1;	/* OCDS Enabled Flag */
		/* const */ unsigned __sfrbit32 OC0            : 1;	/* OCDS Control Bits System Bus Domain */
		/* const */ unsigned __sfrbit32 OC1            : 1;	/* OCDS Control Bits System Bus Domain */
		/* const */ unsigned __sfrbit32 OC2            : 1;	/* OCDS Control Bits System Bus Domain */
		/* const */ unsigned __sfrbit32 ENIDIS         : 1;	/* OCDS ENDINIT Protection Override */
		/* const */ unsigned __sfrbit32 EECTRC         : 1;	/* On Chip Trace Enable */
		/* const */ unsigned __sfrbit32 EECDIS         : 1;	/* Emulation Logic Disable */
		/* const */ unsigned __sfrbit32 WDTSUS         : 1;	/* Control of Watchdog Timer Suspension */
		/* const */ unsigned __sfrbit32 HARR           : 1;	/* Halt after Reset Request */
		/* const */ unsigned __sfrbit32 OJC1           : 1;	/* OCDS Control Bits IOClient Domain */
		/* const */ unsigned __sfrbit32 OJC2           : 1;	/* OCDS Control Bits IOClient Domain */
		/* const */ unsigned __sfrbit32 OJC3           : 1;	/* OCDS Control Bits IOClient Domain */
		/* const */ unsigned __sfrbit32 RSTCL0         : 1;	/* OCDS System Reset Request */
		/* const */ unsigned __sfrbit32 RSTCL1         : 1;	/* OCDS Debug Reset Request */
		/* const */ unsigned __sfrbit32 OJC6           : 1;	/* OCDS Control Bits IOClient Domain */
		/* const */ unsigned __sfrbit32 RSTCL3         : 1;	/* OCDS Application Reset Request */
		/* const */ unsigned __sfrbit32 IF_LCK         : 1;	/* Interface Locked Indication */
		/* const */ unsigned __sfrbit32 AUT_OK         : 1;	/* Authorization OK Indication */
		/* const */ unsigned __sfrbit32 STABLE         : 1;	/* Application Reset Indication */
		/* const */ unsigned __sfrbit32 OCO            : 1;	/* OCDS debug resource Clock On Indication */
		/* const */ unsigned __sfrbit32                : 12;
	} B;
	int I;
	unsigned int U;

} CBS_OSTATE_type;
#define CBS_OSTATE	(*( CBS_OSTATE_type *) 0xf0000480u)	/* OSCU Status Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned __sfrbit32 C0             : 1;	/* Capture of BRKOUT Signal of CPU0 */
		/* const */ unsigned __sfrbit32 C1             : 1;	/* Capture of BRKOUT Signal of CPU1 */
		/* const */ unsigned __sfrbit32 C2             : 1;	/* Capture of BRKOUT Signal of CPU2 */
		/* const */ unsigned __sfrbit32                : 28;
		/* const */ unsigned __sfrbit32 HSM            : 1;	/* Capture of BRKOUT Signal of HSM */
	} B;
	int I;
	unsigned int U;

} CBS_TCCB_type;
#define CBS_TCCB	(*( CBS_TCCB_type *) 0xf00004b0u)	/* TG Capture for Cores - BRKOUT */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned __sfrbit32 C0             : 1;	/* Capture of HALT Signal of CPU0 */
		/* const */ unsigned __sfrbit32 C1             : 1;	/* Capture of HALT Signal of CPU1 */
		/* const */ unsigned __sfrbit32 C2             : 1;	/* Capture of HALT Signal of CPU2 */
		/* const */ unsigned __sfrbit32                : 28;
		/* const */ unsigned __sfrbit32 HSM            : 1;	/* Capture of HALT Signal of HSM */
	} B;
	int I;
	unsigned int U;

} CBS_TCCH_type;
#define CBS_TCCH	(*( CBS_TCCH_type *) 0xf00004b4u)	/* TG Capture for Cores - HALT */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned __sfrbit32 P0             : 1;	/* Capture of Trigger Input Pin 0 */
		/* const */ unsigned __sfrbit32 P1             : 1;	/* Capture of Trigger Input Pin 1 */
		/* const */ unsigned __sfrbit32 P2             : 1;	/* Capture of Trigger Input Pin 2 */
		/* const */ unsigned __sfrbit32 P3             : 1;	/* Capture of Trigger Input Pin 3 */
		/* const */ unsigned __sfrbit32 P4             : 1;	/* Capture of Trigger Input Pin 4 */
		/* const */ unsigned __sfrbit32 P5             : 1;	/* Capture of Trigger Input Pin 5 */
		/* const */ unsigned __sfrbit32 P6             : 1;	/* Capture of Trigger Input Pin 6 */
		/* const */ unsigned __sfrbit32 P7             : 1;	/* Capture of Trigger Input Pin 7 */
		/* const */ unsigned __sfrbit32                : 24;
	} B;
	int I;
	unsigned int U;

} CBS_TCIP_type;
#define CBS_TCIP	(*( CBS_TCIP_type *) 0xf000041cu)	/* TG Capture for TG Input Pins */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned __sfrbit32 BRK            : 1;	/* Capture of MCDS break_out */
		/* const */ unsigned __sfrbit32 SUS            : 1;	/* Capture of MCDS suspend_out */
		/* const */ unsigned __sfrbit32                : 6;
		/* const */ unsigned __sfrbit32 T0             : 1;	/* Capture of MCDS trig_out 0 */
		/* const */ unsigned __sfrbit32 T1             : 1;	/* Capture of MCDS trig_out 1 */
		/* const */ unsigned __sfrbit32 T2             : 1;	/* Capture of MCDS trig_out 2 */
		/* const */ unsigned __sfrbit32 T3             : 1;	/* Capture of MCDS trig_out 3 */
		/* const */ unsigned __sfrbit32                : 20;
	} B;
	int I;
	unsigned int U;

} CBS_TCM_type;
#define CBS_TCM	(*( CBS_TCM_type *) 0xf00004bcu)	/* TG Capture for MCDS */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned __sfrbit32 OTGB0          : 16;	/* Capture Bits for OTGB0 */
		/* const */ unsigned __sfrbit32 OTGB1          : 16;	/* Capture Bits for OTGB1 */
	} B;
	int I;
	unsigned int U;

} CBS_TCTGB_type;
#define CBS_TCTGB	(*( CBS_TCTGB_type *) 0xf00004b8u)	/* TG Capture for OTGB0/1 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned __sfrbit32                : 1;
		/* const */ unsigned __sfrbit32 TL1            : 1;	/* Capture of Trigger Line 1 */
		/* const */ unsigned __sfrbit32 TL2            : 1;	/* Capture of Trigger Line 2 */
		/* const */ unsigned __sfrbit32 TL3            : 1;	/* Capture of Trigger Line 3 */
		/* const */ unsigned __sfrbit32 TL4            : 1;	/* Capture of Trigger Line 4 */
		/* const */ unsigned __sfrbit32 TL5            : 1;	/* Capture of Trigger Line 5 */
		/* const */ unsigned __sfrbit32 TL6            : 1;	/* Capture of Trigger Line 6 */
		/* const */ unsigned __sfrbit32 TL7            : 1;	/* Capture of Trigger Line 7 */
		/* const */ unsigned __sfrbit32                : 24;
	} B;
	int I;
	unsigned int U;

} CBS_TCTL_type;
#define CBS_TCTL	(*( CBS_TCTL_type *) 0xf0000474u)	/* TG Capture for TG Lines */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 PIN0           : 4;	/* Trigger Pin 0 to Trigger Line Routing */
		unsigned __sfrbit32 PIN1           : 4;	/* Trigger Pin 1 to Trigger Line Routing */
		unsigned __sfrbit32 PIN2           : 4;	/* Trigger Pin 2 to Trigger Line Routing */
		unsigned __sfrbit32 PIN3           : 4;	/* Trigger Pin 3 to Trigger Line Routing */
		unsigned __sfrbit32 PIN4           : 4;	/* Trigger Pin 4 to Trigger Line Routing */
		unsigned __sfrbit32 PIN5           : 4;	/* Trigger Pin 5 to Trigger Line Routing */
		unsigned __sfrbit32 PIN6           : 4;	/* Trigger Pin 6 to Trigger Line Routing */
		unsigned __sfrbit32 PIN7           : 4;	/* Trigger Pin 7 to Trigger Line Routing */
	} B;
	int I;
	unsigned int U;

} CBS_TIPR_type;
#define CBS_TIPR	(*( CBS_TIPR_type *) 0xf0000410u)	/* TG Input Pins Routing */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 C0             : 1;	/* CPU0 as Suspend Target */
		unsigned __sfrbit32 C1             : 1;	/* CPU1 as Suspend Target */
		unsigned __sfrbit32 C2             : 1;	/* CPU2 as Suspend Target */
		unsigned __sfrbit32                : 25;
		unsigned __sfrbit32 HSS            : 1;	/* HSSL as Suspend Target */
		unsigned __sfrbit32 DMA            : 1;	/* DMA as Suspend Target */
		unsigned __sfrbit32                : 1;
		unsigned __sfrbit32 HSM            : 1;	/* HSM as Suspend Target */
	} B;
	int I;
	unsigned int U;

} CBS_TL1ST_type;
#define CBS_TL1ST	(*( CBS_TL1ST_type *) 0xf0000494u)	/* TG Line 1 Suspend Targets */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32                : 4;
		unsigned __sfrbit32 TLSP1          : 4;	/* TG Line Signal Processing */
		unsigned __sfrbit32 TLSP2          : 4;	/* TG Line Signal Processing */
		unsigned __sfrbit32 TLSP3          : 4;	/* TG Line Signal Processing */
		unsigned __sfrbit32 TLSP4          : 4;	/* TG Line Signal Processing */
		unsigned __sfrbit32 TLSP5          : 4;	/* TG Line Signal Processing */
		unsigned __sfrbit32 TLSP6          : 4;	/* TG Line Signal Processing */
		unsigned __sfrbit32 TLSP7          : 4;	/* TG Line Signal Processing */
	} B;
	int I;
	unsigned int U;

} CBS_TLC_type;
#define CBS_TLC	(*( CBS_TLC_type *) 0xf0000490u)	/* TG Line Control */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 TGL            : 4;	/* Trigger Line to Counter Routing */
		unsigned __sfrbit32 LE             : 3;	/* Level or Edge Counting */
		unsigned __sfrbit32                : 1;
		unsigned __sfrbit32 CLR            : 2;	/* Clear and Enable Counter(s) */
		unsigned __sfrbit32                : 2;
		unsigned __sfrbit32 STOP           : 2;	/* Stop Counter(s) */
		unsigned __sfrbit32                : 18;
	} B;
	int I;
	unsigned int U;

} CBS_TLCC0_type;
#define CBS_TLCC0	(*( CBS_TLCC0_type *) 0xf0000440u)	/* TG Line Counter Control */
#define CBS_TLCC1	(*( CBS_TLCC0_type *) 0xf0000444u)	/* TG Line Counter Control */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32                : 1;
		unsigned __sfrbit32 TL1            : 1;	/* Capture and Hold Enable for Trigger Line 1 */
		unsigned __sfrbit32 TL2            : 1;	/* Capture and Hold Enable for Trigger Line 2 */
		unsigned __sfrbit32 TL3            : 1;	/* Capture and Hold Enable for Trigger Line 3 */
		unsigned __sfrbit32                : 28;
	} B;
	int I;
	unsigned int U;

} CBS_TLCHE_type;
#define CBS_TLCHE	(*( CBS_TLCHE_type *) 0xf0000498u)	/* TG Line Capture and Hold Enable */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32                : 1;
		unsigned __sfrbit32 TL1            : 1;	/* Capture and Hold Clear for Trigger Line 1 */
		unsigned __sfrbit32 TL2            : 1;	/* Capture and Hold Clear for Trigger Line 2 */
		unsigned __sfrbit32 TL3            : 1;	/* Capture and Hold Clear for Trigger Line 3 */
		unsigned __sfrbit32                : 28;
	} B;
	int I;
	unsigned int U;

} CBS_TLCHS_type;
#define CBS_TLCHS	(*( CBS_TLCHS_type *) 0xf000049cu)	/* TG Line Capture and Hold Clear */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned __sfrbit32 CV             : 31;	/* Count Value */
		/* const */ unsigned __sfrbit32 SO             : 1;	/* Sticky Overflow Bit */
	} B;
	int I;
	unsigned int U;

} CBS_TLCV0_type;
#define CBS_TLCV0	(*( CBS_TLCV0_type *) 0xf0000450u)	/* TG Line Counter Value */
#define CBS_TLCV1	(*( CBS_TLCV0_type *) 0xf0000454u)	/* TG Line Counter Value */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned __sfrbit32                : 1;
		/* const */ unsigned __sfrbit32 TL1            : 1;	/* Current State of Trigger Line 1 */
		/* const */ unsigned __sfrbit32 TL2            : 1;	/* Current State of Trigger Line 2 */
		/* const */ unsigned __sfrbit32 TL3            : 1;	/* Current State of Trigger Line 3 */
		/* const */ unsigned __sfrbit32 TL4            : 1;	/* Current State of Trigger Line 4 */
		/* const */ unsigned __sfrbit32 TL5            : 1;	/* Current State of Trigger Line 5 */
		/* const */ unsigned __sfrbit32 TL6            : 1;	/* Current State of Trigger Line 6 */
		/* const */ unsigned __sfrbit32 TL7            : 1;	/* Current State of Trigger Line 7 */
		/* const */ unsigned __sfrbit32                : 24;
	} B;
	int I;
	unsigned int U;

} CBS_TLS_type;
#define CBS_TLS	(*( CBS_TLS_type *) 0xf0000470u)	/* TG Line State */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 TGL            : 4;	/* Timer to Trigger Line Routing */
		unsigned __sfrbit32 VTZ            : 1;	/* TG Line Value when Timer Value is Zero */
		unsigned __sfrbit32                : 11;
		unsigned __sfrbit32 TIM            : 16;	/* Timer Value */
	} B;
	int I;
	unsigned int U;

} CBS_TLT_type;
#define CBS_TLT	(*( CBS_TLT_type *) 0xf00004a8u)	/* TG Line Timer */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32                : 2;
		unsigned __sfrbit32 TL1            : 2;	/* TG Line Enabling for Trigger to Host (TRIG) */
		unsigned __sfrbit32 TL2            : 2;	/* TG Line Enabling for Trigger to Host (TRIG) */
		unsigned __sfrbit32 TL3            : 2;	/* TG Line Enabling for Trigger to Host (TRIG) */
		unsigned __sfrbit32 TL4            : 2;	/* TG Line Enabling for Trigger to Host (TRIG) */
		unsigned __sfrbit32 TL5            : 2;	/* TG Line Enabling for Trigger to Host (TRIG) */
		unsigned __sfrbit32 TL6            : 2;	/* TG Line Enabling for Trigger to Host (TRIG) */
		unsigned __sfrbit32 TL7            : 2;	/* TG Line Enabling for Trigger to Host (TRIG) */
		unsigned __sfrbit32                : 16;
	} B;
	int I;
	unsigned int U;

} CBS_TLTTH_type;
#define CBS_TLTTH	(*( CBS_TLTTH_type *) 0xf00004acu)	/* TG Lines for Trigger to Host */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 PIN0           : 2;	/* Pulse Stretch Control for Trigger Pin 0 */
		unsigned __sfrbit32 PIN1           : 2;	/* Pulse Stretch Control for Trigger Pin 1 */
		unsigned __sfrbit32 PIN2           : 2;	/* Pulse Stretch Control for Trigger Pin 2 */
		unsigned __sfrbit32 PIN3           : 2;	/* Pulse Stretch Control for Trigger Pin 3 */
		unsigned __sfrbit32 PIN4           : 2;	/* Pulse Stretch Control for Trigger Pin 4 */
		unsigned __sfrbit32 PIN5           : 2;	/* Pulse Stretch Control for Trigger Pin 5 */
		unsigned __sfrbit32 PIN6           : 2;	/* Pulse Stretch Control for Trigger Pin 6 */
		unsigned __sfrbit32 PIN7           : 2;	/* Pulse Stretch Control for Trigger Pin 7 */
		unsigned __sfrbit32                : 16;
	} B;
	int I;
	unsigned int U;

} CBS_TOPPS_type;
#define CBS_TOPPS	(*( CBS_TOPPS_type *) 0xf0000418u)	/* TG Output Pins Pulse Stretcher */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 PIN0           : 4;	/* Trigger Line to Trigger Pin 0 Routing */
		unsigned __sfrbit32 PIN1           : 4;	/* Trigger Line to Trigger Pin 1 Routing */
		unsigned __sfrbit32 PIN2           : 4;	/* Trigger Line to Trigger Pin 2 Routing */
		unsigned __sfrbit32 PIN3           : 4;	/* Trigger Line to Trigger Pin 3 Routing */
		unsigned __sfrbit32 PIN4           : 4;	/* Trigger Line to Trigger Pin 4 Routing */
		unsigned __sfrbit32 PIN5           : 4;	/* Trigger Line to Trigger Pin 5 Routing */
		unsigned __sfrbit32 PIN6           : 4;	/* Trigger Line to Trigger Pin 6 Routing */
		unsigned __sfrbit32 PIN7           : 4;	/* Trigger Line to Trigger Pin 7 Routing */
	} B;
	int I;
	unsigned int U;

} CBS_TOPR_type;
#define CBS_TOPR	(*( CBS_TOPR_type *) 0xf0000414u)	/* TG Output Pins Routing */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 HALT           : 4;	/* HALT to Trigger Line Routing */
		unsigned __sfrbit32 BRKOUT         : 4;	/* BRKOUT to Trigger Line Routing */
		unsigned __sfrbit32 BT1            : 1;	/* BRKOUT to Trigger Line 1 Routing */
		unsigned __sfrbit32                : 11;
		unsigned __sfrbit32 BRKIN          : 4;	/* Trigger Line to BRKIN Routing */
		unsigned __sfrbit32 SUSIN          : 4;	/* Trigger Line to SUSIN Routing */
		unsigned __sfrbit32                : 4;
	} B;
	int I;
	unsigned int U;

} CBS_TRC0_type;
#define CBS_TRC0	(*( CBS_TRC0_type *) 0xf0000420u)	/* TG Routing for CPU0 */
#define CBS_TRC1	(*( CBS_TRC0_type *) 0xf0000424u)	/* TG Routing for CPU1 */
#define CBS_TRC2	(*( CBS_TRC0_type *) 0xf0000428u)	/* TG Routing for CPU2 */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 TR0EV          : 4;	/* TRxEVT to Trigger Line Routing */
		unsigned __sfrbit32                : 4;
		unsigned __sfrbit32 TR2EV          : 4;	/* TRxEVT to Trigger Line Routing */
		unsigned __sfrbit32                : 4;
		unsigned __sfrbit32 TR4EV          : 4;	/* TRxEVT to Trigger Line Routing */
		unsigned __sfrbit32                : 4;
		unsigned __sfrbit32 TR6EV          : 4;	/* TRxEVT to Trigger Line Routing */
		unsigned __sfrbit32                : 4;
	} B;
	int I;
	unsigned int U;

} CBS_TREC0_type;
#define CBS_TREC0	(*( CBS_TREC0_type *) 0xf00004c0u)	/* TG Routing Events of CPU0 */
#define CBS_TREC1	(*( CBS_TREC0_type *) 0xf00004c4u)	/* TG Routing Events of CPU1 */
#define CBS_TREC2	(*( CBS_TREC0_type *) 0xf00004c8u)	/* TG Routing Events of CPU2 */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 HALT           : 4;	/* HALT to Trigger Line Routing */
		unsigned __sfrbit32 BRKOUT         : 4;	/* BRKOUT to Trigger Line Routing */
		unsigned __sfrbit32 BT1            : 1;	/* BRKOUT to Trigger Line 1 Routing */
		unsigned __sfrbit32                : 11;
		unsigned __sfrbit32 BRKIN          : 4;	/* Trigger Line to BRKIN Routing */
		unsigned __sfrbit32 SUSIN          : 4;	/* Trigger Line to SUSIN Routing */
		unsigned __sfrbit32                : 4;
	} B;
	int I;
	unsigned int U;

} CBS_TRHSM_type;
#define CBS_TRHSM	(*( CBS_TRHSM_type *) 0xf0000438u)	/* TG Routing for HSM Control */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned __sfrbit32 TRGx_0         : 1;	/* Service Request Bits */
		/* const */ unsigned __sfrbit32 TRGx_1         : 1;	/* Service Request Bits */
		/* const */ unsigned __sfrbit32 TRGx_2         : 1;	/* Service Request Bits */
		/* const */ unsigned __sfrbit32 TRGx_3         : 1;	/* Service Request Bits */
		/* const */ unsigned __sfrbit32 TRGx_4         : 1;	/* Service Request Bits */
		/* const */ unsigned __sfrbit32 TRGx_5         : 1;	/* Service Request Bits */
		/* const */ unsigned __sfrbit32 TRGx_6         : 1;	/* Service Request Bits */
		/* const */ unsigned __sfrbit32 TRGx_7         : 1;	/* Service Request Bits */
		/* const */ unsigned __sfrbit32 TRGx_8         : 1;	/* Service Request Bits */
		/* const */ unsigned __sfrbit32 TRGx_9         : 1;	/* Service Request Bits */
		/* const */ unsigned __sfrbit32 TRGx_10        : 1;	/* Service Request Bits */
		/* const */ unsigned __sfrbit32 TRGx_11        : 1;	/* Service Request Bits */
		/* const */ unsigned __sfrbit32 TRGx_12        : 1;	/* Service Request Bits */
		/* const */ unsigned __sfrbit32 TRGx_13        : 1;	/* Service Request Bits */
		/* const */ unsigned __sfrbit32 TRGx_14        : 1;	/* Service Request Bits */
		/* const */ unsigned __sfrbit32 TRGx_15        : 1;	/* Service Request Bits */
		/* const */ unsigned __sfrbit32 TRGx_16        : 1;	/* Service Request Bits */
		/* const */ unsigned __sfrbit32 TRGx_17        : 1;	/* Service Request Bits */
		/* const */ unsigned __sfrbit32 TRGx_18        : 1;	/* Service Request Bits */
		/* const */ unsigned __sfrbit32 TRGx_19        : 1;	/* Service Request Bits */
		/* const */ unsigned __sfrbit32 TRGx_20        : 1;	/* Service Request Bits */
		/* const */ unsigned __sfrbit32 TRGx_21        : 1;	/* Service Request Bits */
		/* const */ unsigned __sfrbit32 TRGx_22        : 1;	/* Service Request Bits */
		/* const */ unsigned __sfrbit32 TRGx_23        : 1;	/* Service Request Bits */
		/* const */ unsigned __sfrbit32 x              : 8;	/* TRIG register number */
	} B;
	int I;
	unsigned int U;

} CBS_TRIG0_type;
#define CBS_TRIG0	(*( CBS_TRIG0_type *) 0xf0000500u)	/* Trigger to Host Register 0 */
#define CBS_TRIG1	(*( CBS_TRIG0_type *) 0xf0000504u)	/* Trigger to Host Register 1 */
#define CBS_TRIG10	(*( CBS_TRIG0_type *) 0xf0000528u)	/* Trigger to Host Register 10 */
#define CBS_TRIG11	(*( CBS_TRIG0_type *) 0xf000052cu)	/* Trigger to Host Register 11 */
#define CBS_TRIG12	(*( CBS_TRIG0_type *) 0xf0000530u)	/* Trigger to Host Register 12 */
#define CBS_TRIG13	(*( CBS_TRIG0_type *) 0xf0000534u)	/* Trigger to Host Register 13 */
#define CBS_TRIG14	(*( CBS_TRIG0_type *) 0xf0000538u)	/* Trigger to Host Register 14 */
#define CBS_TRIG15	(*( CBS_TRIG0_type *) 0xf000053cu)	/* Trigger to Host Register 15 */
#define CBS_TRIG16	(*( CBS_TRIG0_type *) 0xf0000540u)	/* Trigger to Host Register 16 */
#define CBS_TRIG17	(*( CBS_TRIG0_type *) 0xf0000544u)	/* Trigger to Host Register 17 */
#define CBS_TRIG18	(*( CBS_TRIG0_type *) 0xf0000548u)	/* Trigger to Host Register 18 */
#define CBS_TRIG19	(*( CBS_TRIG0_type *) 0xf000054cu)	/* Trigger to Host Register 19 */
#define CBS_TRIG2	(*( CBS_TRIG0_type *) 0xf0000508u)	/* Trigger to Host Register 2 */
#define CBS_TRIG20	(*( CBS_TRIG0_type *) 0xf0000550u)	/* Trigger to Host Register 20 */
#define CBS_TRIG21	(*( CBS_TRIG0_type *) 0xf0000554u)	/* Trigger to Host Register 21 */
#define CBS_TRIG3	(*( CBS_TRIG0_type *) 0xf000050cu)	/* Trigger to Host Register 3 */
#define CBS_TRIG4	(*( CBS_TRIG0_type *) 0xf0000510u)	/* Trigger to Host Register 4 */
#define CBS_TRIG5	(*( CBS_TRIG0_type *) 0xf0000514u)	/* Trigger to Host Register 5 */
#define CBS_TRIG6	(*( CBS_TRIG0_type *) 0xf0000518u)	/* Trigger to Host Register 6 */
#define CBS_TRIG7	(*( CBS_TRIG0_type *) 0xf000051cu)	/* Trigger to Host Register 7 */
#define CBS_TRIG8	(*( CBS_TRIG0_type *) 0xf0000520u)	/* Trigger to Host Register 8 */
#define CBS_TRIG9	(*( CBS_TRIG0_type *) 0xf0000524u)	/* Trigger to Host Register 9 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned __sfrbit32 TRGx_0         : 1;	/* Request Bits of most important register TRIGx */
		/* const */ unsigned __sfrbit32 TRGx_1         : 1;	/* Request Bits of most important register TRIGx */
		/* const */ unsigned __sfrbit32 TRGx_2         : 1;	/* Request Bits of most important register TRIGx */
		/* const */ unsigned __sfrbit32 TRGx_3         : 1;	/* Request Bits of most important register TRIGx */
		/* const */ unsigned __sfrbit32 TRGx_4         : 1;	/* Request Bits of most important register TRIGx */
		/* const */ unsigned __sfrbit32 TRGx_5         : 1;	/* Request Bits of most important register TRIGx */
		/* const */ unsigned __sfrbit32 TRGx_6         : 1;	/* Request Bits of most important register TRIGx */
		/* const */ unsigned __sfrbit32 TRGx_7         : 1;	/* Request Bits of most important register TRIGx */
		/* const */ unsigned __sfrbit32 TRGx_8         : 1;	/* Request Bits of most important register TRIGx */
		/* const */ unsigned __sfrbit32 TRGx_9         : 1;	/* Request Bits of most important register TRIGx */
		/* const */ unsigned __sfrbit32 TRGx_10        : 1;	/* Request Bits of most important register TRIGx */
		/* const */ unsigned __sfrbit32 TRGx_11        : 1;	/* Request Bits of most important register TRIGx */
		/* const */ unsigned __sfrbit32 TRGx_12        : 1;	/* Request Bits of most important register TRIGx */
		/* const */ unsigned __sfrbit32 TRGx_13        : 1;	/* Request Bits of most important register TRIGx */
		/* const */ unsigned __sfrbit32 TRGx_14        : 1;	/* Request Bits of most important register TRIGx */
		/* const */ unsigned __sfrbit32 TRGx_15        : 1;	/* Request Bits of most important register TRIGx */
		/* const */ unsigned __sfrbit32 TRGx_16        : 1;	/* Request Bits of most important register TRIGx */
		/* const */ unsigned __sfrbit32 TRGx_17        : 1;	/* Request Bits of most important register TRIGx */
		/* const */ unsigned __sfrbit32 TRGx_18        : 1;	/* Request Bits of most important register TRIGx */
		/* const */ unsigned __sfrbit32 TRGx_19        : 1;	/* Request Bits of most important register TRIGx */
		/* const */ unsigned __sfrbit32 TRGx_20        : 1;	/* Request Bits of most important register TRIGx */
		/* const */ unsigned __sfrbit32 TRGx_21        : 1;	/* Request Bits of most important register TRIGx */
		/* const */ unsigned __sfrbit32 TRGx_22        : 1;	/* Request Bits of most important register TRIGx */
		/* const */ unsigned __sfrbit32 TRGx_23        : 1;	/* Request Bits of most important register TRIGx */
		/* const */ unsigned __sfrbit32 x              : 8;	/* Index of most important register TRIGx */
	} B;
	int I;
	unsigned int U;

} CBS_TRIGC_type;
#define CBS_TRIGC	(*( CBS_TRIGC_type *) 0xf00004a4u)	/* Clear Trigger to Host Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 BITNUM         : 13;	/* Service Request Bit Number to Set */
		unsigned __sfrbit32                : 19;
	} B;
	int I;
	unsigned int U;

} CBS_TRIGS_type;
#define CBS_TRIGS	(*( CBS_TRIGS_type *) 0xf00004a0u)	/* Set Trigger to Host Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32                : 4;
		unsigned __sfrbit32 BRKOUT         : 4;	/* MCDS break_out to Trigger Line Routing */
		unsigned __sfrbit32 SUSOUT         : 4;	/* MCDS suspend_out to Trigger Line Routing */
		unsigned __sfrbit32                : 8;
		unsigned __sfrbit32 BRKIN          : 4;	/* Trigger Line to MCDS break_in Routing */
		unsigned __sfrbit32                : 8;
	} B;
	int I;
	unsigned int U;

} CBS_TRMC_type;
#define CBS_TRMC	(*( CBS_TRMC_type *) 0xf000043cu)	/* TG Routing for MCDS Control */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 TG0            : 4;	/* MCDS trig_out 0 to Trigger Line Routing */
		unsigned __sfrbit32 TG1            : 4;	/* MCDS trig_out 1 to Trigger Line Routing */
		unsigned __sfrbit32 TG2            : 4;	/* MCDS trig_out 2 to Trigger Line Routing */
		unsigned __sfrbit32 TG3            : 4;	/* MCDS trig_out 3 to Trigger Line Routing */
		unsigned __sfrbit32                : 16;
	} B;
	int I;
	unsigned int U;

} CBS_TRMT_type;
#define CBS_TRMT	(*( CBS_TRMT_type *) 0xf00004dcu)	/* TG Routing for MCDS Triggers */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 TT             : 4;	/* Trigger Line to Cerberus? Triggered Transfer Routing */
		unsigned __sfrbit32                : 12;
		unsigned __sfrbit32 SRC0           : 4;	/* Trigger Line to SRC0 Interrupt Routing */
		unsigned __sfrbit32 SRC1           : 4;	/* Trigger Line to SRC1 Interrupt Routing */
		unsigned __sfrbit32                : 8;
	} B;
	int I;
	unsigned int U;

} CBS_TRSS_type;
#define CBS_TRSS	(*( CBS_TRSS_type *) 0xf0000460u)	/* TG Routing for Special Signals */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 TG8            : 4;	/* OTGB0 Bit 8 to Trigger Line Routing */
		unsigned __sfrbit32 TG9            : 4;	/* OTGB0 Bit 9 to Trigger Line Routing */
		unsigned __sfrbit32 TG10           : 4;	/* OTGB0 Bit 10 to Trigger Line Routing */
		unsigned __sfrbit32 TG11           : 4;	/* OTGB0 Bit 11 to Trigger Line Routing */
		unsigned __sfrbit32 TG12           : 4;	/* OTGB0 Bit 12 to Trigger Line Routing */
		unsigned __sfrbit32 TG13           : 4;	/* OTGB0 Bit 13 to Trigger Line Routing */
		unsigned __sfrbit32 TG14           : 4;	/* OTGB0 Bit 14 to Trigger Line Routing */
		unsigned __sfrbit32 TG15           : 4;	/* OTGB0 Bit 15 to Trigger Line Routing */
	} B;
	int I;
	unsigned int U;

} CBS_TRTGB0H_type;
#define CBS_TRTGB0H	(*( CBS_TRTGB0H_type *) 0xf00004e4u)	/* TG Routing for OTGB0 Bits [15:8] */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 TG0            : 4;	/* OTGB0 Bit 0 to Trigger Line Routing */
		unsigned __sfrbit32 TG1            : 4;	/* OTGB0 Bit 1 to Trigger Line Routing */
		unsigned __sfrbit32 TG2            : 4;	/* OTGB0 Bit 2 to Trigger Line Routing */
		unsigned __sfrbit32 TG3            : 4;	/* OTGB0 Bit 3 to Trigger Line Routing */
		unsigned __sfrbit32 TG4            : 4;	/* OTGB0 Bit 4 to Trigger Line Routing */
		unsigned __sfrbit32 TG5            : 4;	/* OTGB0 Bit 5 to Trigger Line Routing */
		unsigned __sfrbit32 TG6            : 4;	/* OTGB0 Bit 6 to Trigger Line Routing */
		unsigned __sfrbit32 TG7            : 4;	/* OTGB0 Bit 7 to Trigger Line Routing */
	} B;
	int I;
	unsigned int U;

} CBS_TRTGB0L_type;
#define CBS_TRTGB0L	(*( CBS_TRTGB0L_type *) 0xf00004e0u)	/* TG Routing for OTGB0 Bits [7:0] */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 TG8            : 4;	/* OTGB1 Bit 8 to Trigger Line Routing */
		unsigned __sfrbit32 TG9            : 4;	/* OTGB1 Bit 9 to Trigger Line Routing */
		unsigned __sfrbit32 TG10           : 4;	/* OTGB1 Bit 10 to Trigger Line Routing */
		unsigned __sfrbit32 TG11           : 4;	/* OTGB1 Bit 11 to Trigger Line Routing */
		unsigned __sfrbit32 TG12           : 4;	/* OTGB1 Bit 12 to Trigger Line Routing */
		unsigned __sfrbit32 TG13           : 4;	/* OTGB1 Bit 13 to Trigger Line Routing */
		unsigned __sfrbit32 TG14           : 4;	/* OTGB1 Bit 14 to Trigger Line Routing */
		unsigned __sfrbit32 TG15           : 4;	/* OTGB1 Bit 15 to Trigger Line Routing */
	} B;
	int I;
	unsigned int U;

} CBS_TRTGB1H_type;
#define CBS_TRTGB1H	(*( CBS_TRTGB1H_type *) 0xf00004ecu)	/* TG Routing for OTGB1 Bits [15:8] */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 TG0            : 4;	/* OTGB1 Bit 0 to Trigger Line Routing */
		unsigned __sfrbit32 TG1            : 4;	/* OTGB1 Bit 1 to Trigger Line Routing */
		unsigned __sfrbit32 TG2            : 4;	/* OTGB1 Bit 2 to Trigger Line Routing */
		unsigned __sfrbit32 TG3            : 4;	/* OTGB1 Bit 3 to Trigger Line Routing */
		unsigned __sfrbit32 TG4            : 4;	/* OTGB1 Bit 4 to Trigger Line Routing */
		unsigned __sfrbit32 TG5            : 4;	/* OTGB1 Bit 5 to Trigger Line Routing */
		unsigned __sfrbit32 TG6            : 4;	/* OTGB1 Bit 6 to Trigger Line Routing */
		unsigned __sfrbit32 TG7            : 4;	/* OTGB1 Bit 7 to Trigger Line Routing */
	} B;
	int I;
	unsigned int U;

} CBS_TRTGB1L_type;
#define CBS_TRTGB1L	(*( CBS_TRTGB1L_type *) 0xf00004e8u)	/* TG Routing for OTGB1 Bits [7:0] */


/* ASCLIN */
typedef volatile union
{
	struct
	{ 
		unsigned int EN0            : 1;	/* Access Enable for Master TAG ID 0 */
		unsigned int EN1            : 1;	/* Access Enable for Master TAG ID 1 */
		unsigned int EN2            : 1;	/* Access Enable for Master TAG ID 2 */
		unsigned int EN3            : 1;	/* Access Enable for Master TAG ID 3 */
		unsigned int EN4            : 1;	/* Access Enable for Master TAG ID 4 */
		unsigned int EN5            : 1;	/* Access Enable for Master TAG ID 5 */
		unsigned int EN6            : 1;	/* Access Enable for Master TAG ID 6 */
		unsigned int EN7            : 1;	/* Access Enable for Master TAG ID 7 */
		unsigned int EN8            : 1;	/* Access Enable for Master TAG ID 8 */
		unsigned int EN9            : 1;	/* Access Enable for Master TAG ID 9 */
		unsigned int EN10           : 1;	/* Access Enable for Master TAG ID 10 */
		unsigned int EN11           : 1;	/* Access Enable for Master TAG ID 11 */
		unsigned int EN12           : 1;	/* Access Enable for Master TAG ID 12 */
		unsigned int EN13           : 1;	/* Access Enable for Master TAG ID 13 */
		unsigned int EN14           : 1;	/* Access Enable for Master TAG ID 14 */
		unsigned int EN15           : 1;	/* Access Enable for Master TAG ID 15 */
		unsigned int EN16           : 1;	/* Access Enable for Master TAG ID 16 */
		unsigned int EN17           : 1;	/* Access Enable for Master TAG ID 17 */
		unsigned int EN18           : 1;	/* Access Enable for Master TAG ID 18 */
		unsigned int EN19           : 1;	/* Access Enable for Master TAG ID 19 */
		unsigned int EN20           : 1;	/* Access Enable for Master TAG ID 20 */
		unsigned int EN21           : 1;	/* Access Enable for Master TAG ID 21 */
		unsigned int EN22           : 1;	/* Access Enable for Master TAG ID 22 */
		unsigned int EN23           : 1;	/* Access Enable for Master TAG ID 23 */
		unsigned int EN24           : 1;	/* Access Enable for Master TAG ID 24 */
		unsigned int EN25           : 1;	/* Access Enable for Master TAG ID 25 */
		unsigned int EN26           : 1;	/* Access Enable for Master TAG ID 26 */
		unsigned int EN27           : 1;	/* Access Enable for Master TAG ID 27 */
		unsigned int EN28           : 1;	/* Access Enable for Master TAG ID 28 */
		unsigned int EN29           : 1;	/* Access Enable for Master TAG ID 29 */
		unsigned int EN30           : 1;	/* Access Enable for Master TAG ID 30 */
		unsigned int EN31           : 1;	/* Access Enable for Master TAG ID 31 */
	} B;
	int I;
	unsigned int U;

} ASCLIN0_ACCEN0_type;
#define ASCLIN0_ACCEN0	(*( ASCLIN0_ACCEN0_type *) 0xf00006fcu)	/* Access Enable Register 0 */
#define ASCLIN1_ACCEN0	(*( ASCLIN0_ACCEN0_type *) 0xf00007fcu)	/* Access Enable Register 0 */
#define ASCLIN2_ACCEN0	(*( ASCLIN0_ACCEN0_type *) 0xf00008fcu)	/* Access Enable Register 0 */
#define ASCLIN3_ACCEN0	(*( ASCLIN0_ACCEN0_type *) 0xf00009fcu)	/* Access Enable Register 0 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int Reserved       : 32;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} ASCLIN0_ACCEN1_type;
#define ASCLIN0_ACCEN1	(*( ASCLIN0_ACCEN1_type *) 0xf00006f8u)	/* Access Enable Register 1 */

typedef volatile union
{
	struct
	{ 
		unsigned int PRESCALER      : 12;	/* Prescaling of the Fractional Divider */
		unsigned int                : 4;
		unsigned int OVERSAMPLING   : 4;	/* Oversampling Factor */
		unsigned int                : 4;
		unsigned int SAMPLEPOINT    : 4;	/* Sample Point Position */
		unsigned int                : 3;
		unsigned int SM             : 1;	/* Sample Mode */
	} B;
	int I;
	unsigned int U;

} ASCLIN0_BITCON_type;
#define ASCLIN0_BITCON	(*( ASCLIN0_BITCON_type *) 0xf0000614u)	/* Bit Configuration Register */
#define ASCLIN1_BITCON	(*( ASCLIN0_BITCON_type *) 0xf0000714u)	/* Bit Configuration Register */
#define ASCLIN2_BITCON	(*( ASCLIN0_BITCON_type *) 0xf0000814u)	/* Bit Configuration Register */
#define ASCLIN3_BITCON	(*( ASCLIN0_BITCON_type *) 0xf0000914u)	/* Bit Configuration Register */

typedef volatile union
{
	struct
	{ 
		unsigned int LOWERLIMIT     : 8;	/* Lower Limit */
		unsigned int UPPERLIMIT     : 8;	/* Upper Limit */
		/* const */ unsigned int MEASURED       : 12;	/* Measured Value of the Denominator */
		unsigned int                : 4;
	} B;
	int I;
	unsigned int U;

} ASCLIN0_BRD_type;
#define ASCLIN0_BRD	(*( ASCLIN0_BRD_type *) 0xf0000624u)	/* Baud Rate Detection Register */
#define ASCLIN1_BRD	(*( ASCLIN0_BRD_type *) 0xf0000724u)	/* Baud Rate Detection Register */
#define ASCLIN2_BRD	(*( ASCLIN0_BRD_type *) 0xf0000824u)	/* Baud Rate Detection Register */
#define ASCLIN3_BRD	(*( ASCLIN0_BRD_type *) 0xf0000924u)	/* Baud Rate Detection Register */

typedef volatile union
{
	struct
	{ 
		unsigned int DENOMINATOR    : 12;	/* Denominator */
		unsigned int                : 4;
		unsigned int NUMERATOR      : 12;	/* Numerator */
		unsigned int                : 4;
	} B;
	int I;
	unsigned int U;

} ASCLIN0_BRG_type;
#define ASCLIN0_BRG	(*( ASCLIN0_BRG_type *) 0xf0000620u)	/* Baud Rate Generation Register */
#define ASCLIN1_BRG	(*( ASCLIN0_BRG_type *) 0xf0000720u)	/* Baud Rate Generation Register */
#define ASCLIN2_BRG	(*( ASCLIN0_BRG_type *) 0xf0000820u)	/* Baud Rate Generation Register */
#define ASCLIN3_BRG	(*( ASCLIN0_BRG_type *) 0xf0000920u)	/* Baud Rate Generation Register */

typedef volatile union
{
	struct
	{ 
		unsigned int DISR           : 1;	/* Module Disable Request Bit */
		/* const */ unsigned int DISS           : 1;	/* Module Disable Status Bit */
		unsigned int                : 1;
		unsigned int EDIS           : 1;	/* Sleep Mode Enable Control */
		unsigned int                : 28;
	} B;
	int I;
	unsigned int U;

} ASCLIN0_CLC_type;
#define ASCLIN0_CLC	(*( ASCLIN0_CLC_type *) 0xf0000600u)	/* Clock Control Register */
#define ASCLIN1_CLC	(*( ASCLIN0_CLC_type *) 0xf0000700u)	/* Clock Control Register */
#define ASCLIN2_CLC	(*( ASCLIN0_CLC_type *) 0xf0000800u)	/* Clock Control Register */
#define ASCLIN3_CLC	(*( ASCLIN0_CLC_type *) 0xf0000900u)	/* Clock Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int CLKSEL         : 5;	/* Baud Rate Logic Clock Select */
		unsigned int                : 26;
		/* const */ unsigned int CON            : 1;	/* Clock On Flag */
	} B;
	int I;
	unsigned int U;

} ASCLIN0_CSR_type;
#define ASCLIN0_CSR	(*( ASCLIN0_CSR_type *) 0xf000064cu)	/* Clock Selection Register */
#define ASCLIN1_CSR	(*( ASCLIN0_CSR_type *) 0xf000074cu)	/* Clock Selection Register */
#define ASCLIN2_CSR	(*( ASCLIN0_CSR_type *) 0xf000084cu)	/* Clock Selection Register */
#define ASCLIN3_CSR	(*( ASCLIN0_CSR_type *) 0xf000094cu)	/* Clock Selection Register */

typedef volatile union
{
	struct
	{ 
		unsigned int DATLEN         : 4;	/* Data Length */
		unsigned int                : 9;
		unsigned int HO             : 1;	/* Header Only */
		unsigned int RM             : 1;	/* Response Mode */
		unsigned int CSM            : 1;	/* Checksum Mode */
		unsigned int RESPONSE       : 8;	/* Response Timeout Threshold Value */
		unsigned int                : 8;
	} B;
	int I;
	unsigned int U;

} ASCLIN0_DATCON_type;
#define ASCLIN0_DATCON	(*( ASCLIN0_DATCON_type *) 0xf000061cu)	/* Data Configuration Register */
#define ASCLIN1_DATCON	(*( ASCLIN0_DATCON_type *) 0xf000071cu)	/* Data Configuration Register */
#define ASCLIN2_DATCON	(*( ASCLIN0_DATCON_type *) 0xf000081cu)	/* Data Configuration Register */
#define ASCLIN3_DATCON	(*( ASCLIN0_DATCON_type *) 0xf000091cu)	/* Data Configuration Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int TH             : 1;	/* Transmit Header End Flag */
		/* const */ unsigned int TR             : 1;	/* Transmit Response End Flag */
		/* const */ unsigned int RH             : 1;	/* Receive Header End Flag */
		/* const */ unsigned int RR             : 1;	/* Receive Response End Flag */
		/* const */ unsigned int                : 1;
		/* const */ unsigned int FED            : 1;	/* Falling Edge from Level 1 to Level 0 Detected */
		/* const */ unsigned int RED            : 1;	/* Rising Edge from Level 0 to Level 1 Detected */
		/* const */ unsigned int                : 6;
		/* const */ unsigned int TWRQ           : 1;	/* Transmit Wake Request Flag */
		/* const */ unsigned int THRQ           : 1;	/* Transmit Header Request Flag */
		/* const */ unsigned int TRRQ           : 1;	/* Transmit Response Request Flag */
		/* const */ unsigned int PE             : 1;	/* Parity Error Flag */
		/* const */ unsigned int TC             : 1;	/* Transmission Completed Flag */
		/* const */ unsigned int FE             : 1;	/* Framing Error Flag */
		/* const */ unsigned int HT             : 1;	/* Header Timeout Flag */
		/* const */ unsigned int RT             : 1;	/* Response Timeout Flag */
		/* const */ unsigned int BD             : 1;	/* Break Detected Flag */
		/* const */ unsigned int LP             : 1;	/* LIN Parity Error Flag */
		/* const */ unsigned int LA             : 1;	/* LIN Autobaud Detection Error Flag */
		/* const */ unsigned int LC             : 1;	/* LIN Checksum Error Flag */
		/* const */ unsigned int CE             : 1;	/* Collision Detection Error Flag */
		/* const */ unsigned int RFO            : 1;	/* Receive FIFO Overflow Flag */
		/* const */ unsigned int RFU            : 1;	/* Receive FIFO Underflow Flag */
		/* const */ unsigned int RFL            : 1;	/* Receive FIFO Level Flag */
		/* const */ unsigned int                : 1;
		/* const */ unsigned int TFO            : 1;	/* Transmit FIFO Overflow Flag */
		/* const */ unsigned int TFL            : 1;	/* Transmit FIFO Level Flag */
	} B;
	int I;
	unsigned int U;

} ASCLIN0_FLAGS_type;
#define ASCLIN0_FLAGS	(*( ASCLIN0_FLAGS_type *) 0xf0000634u)	/* Flags Register */
#define ASCLIN1_FLAGS	(*( ASCLIN0_FLAGS_type *) 0xf0000734u)	/* Flags Register */
#define ASCLIN2_FLAGS	(*( ASCLIN0_FLAGS_type *) 0xf0000834u)	/* Flags Register */
#define ASCLIN3_FLAGS	(*( ASCLIN0_FLAGS_type *) 0xf0000934u)	/* Flags Register */

typedef volatile union
{
	struct
	{ 
		unsigned int THC            : 1;	/* Flag Clear Bit */
		unsigned int TRC            : 1;	/* Flag Clear Bit */
		unsigned int RHC            : 1;	/* Flag Clear Bit */
		unsigned int RRC            : 1;	/* Flag Clear Bit */
		unsigned int                : 1;
		unsigned int FEDC           : 1;	/* Flag Clear Bit */
		unsigned int REDC           : 1;	/* Flag Clear Bit */
		unsigned int                : 6;
		unsigned int TWRQC          : 1;	/* Flag Clear Bit */
		unsigned int THRQC          : 1;	/* Flag Clear Bit */
		unsigned int TRRQC          : 1;	/* Flag Clear Bit */
		unsigned int PEC            : 1;	/* Flag Clear Bit */
		unsigned int TCC            : 1;	/* Flag Clear Bit */
		unsigned int FEC            : 1;	/* Flag Clear Bit */
		unsigned int HTC            : 1;	/* Flag Clear Bit */
		unsigned int RTC            : 1;	/* Flag Clear Bit */
		unsigned int BDC            : 1;	/* Flag Clear Bit */
		unsigned int LPC            : 1;	/* Flag Clear Bit */
		unsigned int LAC            : 1;	/* Flag Clear Bit */
		unsigned int LCC            : 1;	/* Flag Clear Bit */
		unsigned int CEC            : 1;	/* Flag Clear Bit */
		unsigned int RFOC           : 1;	/* Flag Clear Bit */
		unsigned int RFUC           : 1;	/* Flag Clear Bit */
		unsigned int RFLC           : 1;	/* Flag Clear Bit */
		unsigned int                : 1;
		unsigned int TFOC           : 1;	/* Flag Clear Bit */
		unsigned int TFLC           : 1;	/* Flag Clear Bit */
	} B;
	int I;
	unsigned int U;

} ASCLIN0_FLAGSCLEAR_type;
#define ASCLIN0_FLAGSCLEAR	(*( ASCLIN0_FLAGSCLEAR_type *) 0xf000063cu)	/* Flags Clear Register */
#define ASCLIN1_FLAGSCLEAR	(*( ASCLIN0_FLAGSCLEAR_type *) 0xf000073cu)	/* Flags Clear Register */
#define ASCLIN2_FLAGSCLEAR	(*( ASCLIN0_FLAGSCLEAR_type *) 0xf000083cu)	/* Flags Clear Register */
#define ASCLIN3_FLAGSCLEAR	(*( ASCLIN0_FLAGSCLEAR_type *) 0xf000093cu)	/* Flags Clear Register */

typedef volatile union
{
	struct
	{ 
		unsigned int THE            : 1;	/* Flag Enable Bit */
		unsigned int TRE            : 1;	/* Flag Enable Bit */
		unsigned int RHE            : 1;	/* Flag Enable Bit */
		unsigned int RRE            : 1;	/* Flag Enable Bit */
		unsigned int                : 1;
		unsigned int FEDE           : 1;	/* Flag Enable Bit */
		unsigned int REDE           : 1;	/* Flag Enable Bit */
		unsigned int                : 9;
		unsigned int PEE            : 1;	/* Flag Enable Bit */
		unsigned int TCE            : 1;	/* Flag Enable Bit */
		unsigned int FEE            : 1;	/* Flag Enable Bit */
		unsigned int HTE            : 1;	/* Flag Enable Bit */
		unsigned int RTE            : 1;	/* Flag Enable Bit */
		unsigned int BDE            : 1;	/* Flag Enable Bit */
		unsigned int LPE            : 1;	/* Flag Enable Bit */
		unsigned int ABE            : 1;	/* Flag Enable Bit */
		unsigned int LCE            : 1;	/* Flag Enable Bit */
		unsigned int CEE            : 1;	/* Flag Enable Bit */
		unsigned int RFOE           : 1;	/* Flag Enable Bit */
		unsigned int RFUE           : 1;	/* Flag Enable Bit */
		unsigned int RFLE           : 1;	/* Flag Enable Bit */
		unsigned int                : 1;
		unsigned int TFOE           : 1;	/* Flag Enable Bit */
		unsigned int TFLE           : 1;	/* Flag Enable Bit */
	} B;
	int I;
	unsigned int U;

} ASCLIN0_FLAGSENABLE_type;
#define ASCLIN0_FLAGSENABLE	(*( ASCLIN0_FLAGSENABLE_type *) 0xf0000640u)	/* Flags Enable Register */
#define ASCLIN1_FLAGSENABLE	(*( ASCLIN0_FLAGSENABLE_type *) 0xf0000740u)	/* Flags Enable Register */
#define ASCLIN2_FLAGSENABLE	(*( ASCLIN0_FLAGSENABLE_type *) 0xf0000840u)	/* Flags Enable Register */
#define ASCLIN3_FLAGSENABLE	(*( ASCLIN0_FLAGSENABLE_type *) 0xf0000940u)	/* Flags Enable Register */

typedef volatile union
{
	struct
	{ 
		unsigned int THS            : 1;	/* Flag Set Bit */
		unsigned int TRS            : 1;	/* Flag Set Bit */
		unsigned int RHS            : 1;	/* Flag Set Bit */
		unsigned int RRS            : 1;	/* Flag Set Bit */
		unsigned int                : 1;
		unsigned int FEDS           : 1;	/* Flag Set Bit */
		unsigned int REDS           : 1;	/* Flag Set Bit */
		unsigned int                : 6;
		unsigned int TWRQS          : 1;	/* Flag Set Bit */
		unsigned int THRQS          : 1;	/* Flag Set Bit */
		unsigned int TRRQS          : 1;	/* Flag Set Bit */
		unsigned int PES            : 1;	/* Flag Set Bit */
		unsigned int TCS            : 1;	/* Flag Set Bit */
		unsigned int FES            : 1;	/* Flag Set Bit */
		unsigned int HTS            : 1;	/* Flag Set Bit */
		unsigned int RTS            : 1;	/* Flag Set Bit */
		unsigned int BDS            : 1;	/* Flag Set Bit */
		unsigned int LPS            : 1;	/* Flag Set Bit */
		unsigned int LAS            : 1;	/* Flag Set Bit */
		unsigned int LCS            : 1;	/* Flag Set Bit */
		unsigned int CES            : 1;	/* Flag Set Bit */
		unsigned int RFOS           : 1;	/* Flag Set Bit */
		unsigned int RFUS           : 1;	/* Flag Set Bit */
		unsigned int RFLS           : 1;	/* Flag Set Bit */
		unsigned int                : 1;
		unsigned int TFOS           : 1;	/* Flag Set Bit */
		unsigned int TFLS           : 1;	/* Flag Set Bit */
	} B;
	int I;
	unsigned int U;

} ASCLIN0_FLAGSSET_type;
#define ASCLIN0_FLAGSSET	(*( ASCLIN0_FLAGSSET_type *) 0xf0000638u)	/* Flags Set Register */
#define ASCLIN1_FLAGSSET	(*( ASCLIN0_FLAGSSET_type *) 0xf0000738u)	/* Flags Set Register */
#define ASCLIN2_FLAGSSET	(*( ASCLIN0_FLAGSSET_type *) 0xf0000838u)	/* Flags Set Register */
#define ASCLIN3_FLAGSSET	(*( ASCLIN0_FLAGSSET_type *) 0xf0000938u)	/* Flags Set Register */

typedef volatile union
{
	struct
	{ 
		unsigned int                : 6;
		unsigned int IDLE           : 3;	/* Duration of the IDLE delay */
		unsigned int STOP           : 3;	/* Number of Stop Bits */
		unsigned int LEAD           : 3;	/* Duration of the Leading Delay */
		unsigned int                : 1;
		unsigned int MODE           : 2;	/* Mode Selection */
		unsigned int                : 10;
		unsigned int MSB            : 1;	/* Shift Direction */
		unsigned int CEN            : 1;	/* Collision Detection Enable */
		unsigned int PEN            : 1;	/* Parity Enable */
		unsigned int ODD            : 1;	/* Parity Type */
	} B;
	int I;
	unsigned int U;

} ASCLIN0_FRAMECON_type;
#define ASCLIN0_FRAMECON	(*( ASCLIN0_FRAMECON_type *) 0xf0000618u)	/* Frame Control Register */
#define ASCLIN1_FRAMECON	(*( ASCLIN0_FRAMECON_type *) 0xf0000718u)	/* Frame Control Register */
#define ASCLIN2_FRAMECON	(*( ASCLIN0_FRAMECON_type *) 0xf0000818u)	/* Frame Control Register */
#define ASCLIN3_FRAMECON	(*( ASCLIN0_FRAMECON_type *) 0xf0000918u)	/* Frame Control Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int MODREV         : 8;	/* Module Revision Number */
		/* const */ unsigned int MODTYPE        : 8;	/* Module Type */
		/* const */ unsigned int MODNUMBER      : 16;	/* Module Number Value */
	} B;
	int I;
	unsigned int U;

} ASCLIN0_ID_type;
#define ASCLIN0_ID	(*( ASCLIN0_ID_type *) 0xf0000608u)	/* Module Identification Register */
#define ASCLIN1_ID	(*( ASCLIN0_ID_type *) 0xf0000708u)	/* Module Identification Register */
#define ASCLIN2_ID	(*( ASCLIN0_ID_type *) 0xf0000808u)	/* Module Identification Register */
#define ASCLIN3_ID	(*( ASCLIN0_ID_type *) 0xf0000908u)	/* Module Identification Register */

typedef volatile union
{
	struct
	{ 
		unsigned int ALTI           : 3;	/* Alternate Input Select */
		unsigned int                : 1;
		unsigned int DEPTH          : 6;	/* Digital Glitch Filter Depth */
		unsigned int                : 6;
		unsigned int CTS            : 2;	/* CTS Select */
		unsigned int                : 7;
		unsigned int RCPOL          : 1;	/* RTS CTS Polarity */
		unsigned int CPOL           : 1;	/* Clock Polarity in Synchronous Mode */
		unsigned int SPOL           : 1;	/* Slave Polarity in Synchronous Mode */
		unsigned int LB             : 1;	/* Loop Back Mode */
		unsigned int CTSEN          : 1;	/* Input Signal CTS Enable */
		/* const */ unsigned int RXM            : 1;	/* Receive Monitor */
		/* const */ unsigned int TXM            : 1;	/* Transmit Monitor */
	} B;
	int I;
	unsigned int U;

} ASCLIN0_IOCR_type;
#define ASCLIN0_IOCR	(*( ASCLIN0_IOCR_type *) 0xf0000604u)	/* Input and Output Control Register */
#define ASCLIN1_IOCR	(*( ASCLIN0_IOCR_type *) 0xf0000704u)	/* Input and Output Control Register */
#define ASCLIN2_IOCR	(*( ASCLIN0_IOCR_type *) 0xf0000804u)	/* Input and Output Control Register */
#define ASCLIN3_IOCR	(*( ASCLIN0_IOCR_type *) 0xf0000904u)	/* Input and Output Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int RST            : 1;	/* Kernel Reset */
		/* const */ unsigned int RSTSTAT        : 1;	/* Kernel Reset Status */
		unsigned int                : 30;
	} B;
	int I;
	unsigned int U;

} ASCLIN0_KRST0_type;
#define ASCLIN0_KRST0	(*( ASCLIN0_KRST0_type *) 0xf00006f4u)	/* Kernel Reset Register 0 */
#define ASCLIN1_KRST0	(*( ASCLIN0_KRST0_type *) 0xf00007f4u)	/* Kernel Reset Register 0 */
#define ASCLIN2_KRST0	(*( ASCLIN0_KRST0_type *) 0xf00008f4u)	/* Kernel Reset Register 0 */
#define ASCLIN3_KRST0	(*( ASCLIN0_KRST0_type *) 0xf00009f4u)	/* Kernel Reset Register 0 */

typedef volatile union
{
	struct
	{ 
		unsigned int RST            : 1;	/* Kernel Reset */
		unsigned int                : 31;
	} B;
	int I;
	unsigned int U;

} ASCLIN0_KRST1_type;
#define ASCLIN0_KRST1	(*( ASCLIN0_KRST1_type *) 0xf00006f0u)	/* Kernel Reset Register 1 */
#define ASCLIN1_KRST1	(*( ASCLIN0_KRST1_type *) 0xf00007f0u)	/* Kernel Reset Register 1 */
#define ASCLIN2_KRST1	(*( ASCLIN0_KRST1_type *) 0xf00008f0u)	/* Kernel Reset Register 1 */
#define ASCLIN3_KRST1	(*( ASCLIN0_KRST1_type *) 0xf00009f0u)	/* Kernel Reset Register 1 */

typedef volatile union
{
	struct
	{ 
		unsigned int CLR            : 1;	/* Kernel Reset Status Clear */
		unsigned int                : 31;
	} B;
	int I;
	unsigned int U;

} ASCLIN0_KRSTCLR_type;
#define ASCLIN0_KRSTCLR	(*( ASCLIN0_KRSTCLR_type *) 0xf00006ecu)	/* Kernel Reset Status Clear Register */
#define ASCLIN1_KRSTCLR	(*( ASCLIN0_KRSTCLR_type *) 0xf00007ecu)	/* Kernel Reset Status Clear Register */
#define ASCLIN2_KRSTCLR	(*( ASCLIN0_KRSTCLR_type *) 0xf00008ecu)	/* Kernel Reset Status Clear Register */
#define ASCLIN3_KRSTCLR	(*( ASCLIN0_KRSTCLR_type *) 0xf00009ecu)	/* Kernel Reset Status Clear Register */

typedef volatile union
{
	struct
	{ 
		unsigned int BREAK          : 6;	/* Break Pulse Generation and Detection */
		unsigned int                : 26;
	} B;
	int I;
	unsigned int U;

} ASCLIN0_LINBTIMER_type;
#define ASCLIN0_LINBTIMER	(*( ASCLIN0_LINBTIMER_type *) 0xf000062cu)	/* LIN Break Timer Register */
#define ASCLIN1_LINBTIMER	(*( ASCLIN0_LINBTIMER_type *) 0xf000072cu)	/* LIN Break Timer Register */
#define ASCLIN2_LINBTIMER	(*( ASCLIN0_LINBTIMER_type *) 0xf000082cu)	/* LIN Break Timer Register */
#define ASCLIN3_LINBTIMER	(*( ASCLIN0_LINBTIMER_type *) 0xf000092cu)	/* LIN Break Timer Register */

typedef volatile union
{
	struct
	{ 
		unsigned int                : 23;
		unsigned int CSI            : 1;	/* Checksum Injection */
		unsigned int                : 1;
		unsigned int CSEN           : 1;	/* Hardware Checksum Enable */
		unsigned int MS             : 1;	/* Master Slave Mode */
		unsigned int ABD            : 1;	/* Autobaud Detection */
		unsigned int                : 4;
	} B;
	int I;
	unsigned int U;

} ASCLIN0_LINCON_type;
#define ASCLIN0_LINCON	(*( ASCLIN0_LINCON_type *) 0xf0000628u)	/* LIN Control Register */
#define ASCLIN1_LINCON	(*( ASCLIN0_LINCON_type *) 0xf0000728u)	/* LIN Control Register */
#define ASCLIN2_LINCON	(*( ASCLIN0_LINCON_type *) 0xf0000828u)	/* LIN Control Register */
#define ASCLIN3_LINCON	(*( ASCLIN0_LINCON_type *) 0xf0000928u)	/* LIN Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int HEADER         : 8;	/* Header Timeout Threshold Value */
		unsigned int                : 24;
	} B;
	int I;
	unsigned int U;

} ASCLIN0_LINHTIMER_type;
#define ASCLIN0_LINHTIMER	(*( ASCLIN0_LINHTIMER_type *) 0xf0000630u)	/* LIN Header Timer Register */
#define ASCLIN1_LINHTIMER	(*( ASCLIN0_LINHTIMER_type *) 0xf0000730u)	/* LIN Header Timer Register */
#define ASCLIN2_LINHTIMER	(*( ASCLIN0_LINHTIMER_type *) 0xf0000830u)	/* LIN Header Timer Register */
#define ASCLIN3_LINHTIMER	(*( ASCLIN0_LINHTIMER_type *) 0xf0000930u)	/* LIN Header Timer Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32                : 24;
		unsigned __sfrbit32 SUS            : 4;	/* OCDS Suspend Control */
		unsigned __sfrbit32 SUS_P          : 1;	/* SUS Write Protection */
		/* const */ unsigned __sfrbit32 SUSSTA         : 1;	/* Suspend State */
		unsigned __sfrbit32                : 2;
	} B;
	int I;
	unsigned int U;

} ASCLIN0_OCS_type;
#define ASCLIN0_OCS	(*( ASCLIN0_OCS_type *) 0xf00006e8u)	/* OCDS Control and Status */
#define ASCLIN1_OCS	(*( ASCLIN0_OCS_type *) 0xf00007e8u)	/* OCDS Control and Status */
#define ASCLIN2_OCS	(*( ASCLIN0_OCS_type *) 0xf00008e8u)	/* OCDS Control and Status */
#define ASCLIN3_OCS	(*( ASCLIN0_OCS_type *) 0xf00009e8u)	/* OCDS Control and Status */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int DATA           : 32;	/* Data */
	} B;
	int I;
	unsigned int U;

} ASCLIN0_RXDATA_type;
#define ASCLIN0_RXDATA	(*( ASCLIN0_RXDATA_type *) 0xf0000648u)	/* Receive Data Register */
#define ASCLIN0_RXDATAD	(*( ASCLIN0_RXDATA_type *) 0xf0000650u)	/* Receive Data Debug Register */
#define ASCLIN1_RXDATA	(*( ASCLIN0_RXDATA_type *) 0xf0000748u)	/* Receive Data Register */
#define ASCLIN1_RXDATAD	(*( ASCLIN0_RXDATA_type *) 0xf0000750u)	/* Receive Data Debug Register */
#define ASCLIN2_RXDATA	(*( ASCLIN0_RXDATA_type *) 0xf0000848u)	/* Receive Data Register */
#define ASCLIN2_RXDATAD	(*( ASCLIN0_RXDATA_type *) 0xf0000850u)	/* Receive Data Debug Register */
#define ASCLIN3_RXDATA	(*( ASCLIN0_RXDATA_type *) 0xf0000948u)	/* Receive Data Register */
#define ASCLIN3_RXDATAD	(*( ASCLIN0_RXDATA_type *) 0xf0000950u)	/* Receive Data Debug Register */

typedef volatile union
{
	struct
	{ 
		unsigned int FLUSH          : 1;	/* Flush the receive FIFO */
		unsigned int ENI            : 1;	/* Receive FIFO Inlet Enable */
		unsigned int                : 4;
		unsigned int OUTW           : 2;	/* Receive FIFO Outlet Width */
		unsigned int INTLEVEL       : 4;	/* FIFO Interrupt Level */
		unsigned int                : 4;
		/* const */ unsigned int FILL           : 5;	/* FIFO Filling Level */
		unsigned int                : 10;
		unsigned int BUF            : 1;	/* Receive Buffer Mode */
	} B;
	int I;
	unsigned int U;

} ASCLIN0_RXFIFOCON_type;
#define ASCLIN0_RXFIFOCON	(*( ASCLIN0_RXFIFOCON_type *) 0xf0000610u)	/* RX FIFO Configuration Register */
#define ASCLIN1_RXFIFOCON	(*( ASCLIN0_RXFIFOCON_type *) 0xf0000710u)	/* RX FIFO Configuration Register */
#define ASCLIN2_RXFIFOCON	(*( ASCLIN0_RXFIFOCON_type *) 0xf0000810u)	/* RX FIFO Configuration Register */
#define ASCLIN3_RXFIFOCON	(*( ASCLIN0_RXFIFOCON_type *) 0xf0000910u)	/* RX FIFO Configuration Register */

typedef volatile union
{
	struct
	{ 
		unsigned int DATA           : 32;	/* Data */
	} B;
	int I;
	unsigned int U;

} ASCLIN0_TXDATA_type;
#define ASCLIN0_TXDATA	(*( ASCLIN0_TXDATA_type *) 0xf0000644u)	/* Transmit Data Register */
#define ASCLIN1_TXDATA	(*( ASCLIN0_TXDATA_type *) 0xf0000744u)	/* Transmit Data Register */
#define ASCLIN2_TXDATA	(*( ASCLIN0_TXDATA_type *) 0xf0000844u)	/* Transmit Data Register */
#define ASCLIN3_TXDATA	(*( ASCLIN0_TXDATA_type *) 0xf0000944u)	/* Transmit Data Register */

typedef volatile union
{
	struct
	{ 
		unsigned int FLUSH          : 1;	/* Flush the transmit FIFO */
		unsigned int ENO            : 1;	/* Transmit FIFO Outlet Enable */
		unsigned int                : 4;
		unsigned int INW            : 2;	/* Transmit FIFO Inlet Width */
		unsigned int INTLEVEL       : 4;	/* FIFO Interrupt Level */
		unsigned int                : 4;
		/* const */ unsigned int FILL           : 5;	/* FIFO Filling Level */
		unsigned int                : 11;
	} B;
	int I;
	unsigned int U;

} ASCLIN0_TXFIFOCON_type;
#define ASCLIN0_TXFIFOCON	(*( ASCLIN0_TXFIFOCON_type *) 0xf000060cu)	/* TX FIFO Configuration Register */
#define ASCLIN1_TXFIFOCON	(*( ASCLIN0_TXFIFOCON_type *) 0xf000070cu)	/* TX FIFO Configuration Register */
#define ASCLIN2_TXFIFOCON	(*( ASCLIN0_TXFIFOCON_type *) 0xf000080cu)	/* TX FIFO Configuration Register */
#define ASCLIN3_TXFIFOCON	(*( ASCLIN0_TXFIFOCON_type *) 0xf000090cu)	/* TX FIFO Configuration Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int Reserved       : 32;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} ASCLIN1_ACCEN1_type;
#define ASCLIN1_ACCEN1	(*( ASCLIN1_ACCEN1_type *) 0xf00007f8u)	/* Access Enable Register 1 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int Reserved       : 32;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} ASCLIN2_ACCEN1_type;
#define ASCLIN2_ACCEN1	(*( ASCLIN2_ACCEN1_type *) 0xf00008f8u)	/* Access Enable Register 1 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int Reserved       : 32;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} ASCLIN3_ACCEN1_type;
#define ASCLIN3_ACCEN1	(*( ASCLIN3_ACCEN1_type *) 0xf00009f8u)	/* Access Enable Register 1 */


/* QSPI */
typedef volatile union
{
	struct
	{ 
		unsigned int EN0            : 1;	/* Access Enable for Master TAG ID 0 */
		unsigned int EN1            : 1;	/* Access Enable for Master TAG ID 1 */
		unsigned int EN2            : 1;	/* Access Enable for Master TAG ID 2 */
		unsigned int EN3            : 1;	/* Access Enable for Master TAG ID 3 */
		unsigned int EN4            : 1;	/* Access Enable for Master TAG ID 4 */
		unsigned int EN5            : 1;	/* Access Enable for Master TAG ID 5 */
		unsigned int EN6            : 1;	/* Access Enable for Master TAG ID 6 */
		unsigned int EN7            : 1;	/* Access Enable for Master TAG ID 7 */
		unsigned int EN8            : 1;	/* Access Enable for Master TAG ID 8 */
		unsigned int EN9            : 1;	/* Access Enable for Master TAG ID 9 */
		unsigned int EN10           : 1;	/* Access Enable for Master TAG ID 10 */
		unsigned int EN11           : 1;	/* Access Enable for Master TAG ID 11 */
		unsigned int EN12           : 1;	/* Access Enable for Master TAG ID 12 */
		unsigned int EN13           : 1;	/* Access Enable for Master TAG ID 13 */
		unsigned int EN14           : 1;	/* Access Enable for Master TAG ID 14 */
		unsigned int EN15           : 1;	/* Access Enable for Master TAG ID 15 */
		unsigned int EN16           : 1;	/* Access Enable for Master TAG ID 16 */
		unsigned int EN17           : 1;	/* Access Enable for Master TAG ID 17 */
		unsigned int EN18           : 1;	/* Access Enable for Master TAG ID 18 */
		unsigned int EN19           : 1;	/* Access Enable for Master TAG ID 19 */
		unsigned int EN20           : 1;	/* Access Enable for Master TAG ID 20 */
		unsigned int EN21           : 1;	/* Access Enable for Master TAG ID 21 */
		unsigned int EN22           : 1;	/* Access Enable for Master TAG ID 22 */
		unsigned int EN23           : 1;	/* Access Enable for Master TAG ID 23 */
		unsigned int EN24           : 1;	/* Access Enable for Master TAG ID 24 */
		unsigned int EN25           : 1;	/* Access Enable for Master TAG ID 25 */
		unsigned int EN26           : 1;	/* Access Enable for Master TAG ID 26 */
		unsigned int EN27           : 1;	/* Access Enable for Master TAG ID 27 */
		unsigned int EN28           : 1;	/* Access Enable for Master TAG ID 28 */
		unsigned int EN29           : 1;	/* Access Enable for Master TAG ID 29 */
		unsigned int EN30           : 1;	/* Access Enable for Master TAG ID 30 */
		unsigned int EN31           : 1;	/* Access Enable for Master TAG ID 31 */
	} B;
	int I;
	unsigned int U;

} QSPI0_ACCEN0_type;
#define QSPI0_ACCEN0	(*( QSPI0_ACCEN0_type *) 0xf0001cfcu)	/* Access Enable Register 0 */
#define QSPI1_ACCEN0	(*( QSPI0_ACCEN0_type *) 0xf0001dfcu)	/* Access Enable Register 0 */
#define QSPI2_ACCEN0	(*( QSPI0_ACCEN0_type *) 0xf0001efcu)	/* Access Enable Register 0 */
#define QSPI3_ACCEN0	(*( QSPI0_ACCEN0_type *) 0xf0001ffcu)	/* Access Enable Register 0 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int Reserved       : 32;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} QSPI0_ACCEN1_type;
#define QSPI0_ACCEN1	(*( QSPI0_ACCEN1_type *) 0xf0001cf8u)	/* Access Enable Register 1 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int LAST           : 1;	/* Last Word in a Frame */
		/* const */ unsigned int IPRE           : 3;	/* Prescaler for the Idle Delay */
		/* const */ unsigned int IDLE           : 3;	/* Idle Delay Length */
		/* const */ unsigned int LPRE           : 3;	/* Prescaler for the Leading Delay */
		/* const */ unsigned int LEAD           : 3;	/* Leading Delay Length */
		/* const */ unsigned int TPRE           : 3;	/* Prescaler for the Trailing Delay */
		/* const */ unsigned int TRAIL          : 3;	/* Trailing Delay Length */
		/* const */ unsigned int PARTYP         : 1;	/* Parity Type */
		/* const */ unsigned int UINT           : 1;	/* User Interrupt at the PT1 Event in the Subsequent Frames */
		/* const */ unsigned int MSB            : 1;	/* Shift MSB or LSB First */
		/* const */ unsigned int BYTE           : 1;	/* Byte */
		/* const */ unsigned int DL             : 5;	/* Data Length */
		/* const */ unsigned int CS             : 4;	/* Channel Select */
	} B;
	int I;
	unsigned int U;

} QSPI0_BACON_type;
#define QSPI0_BACON	(*( QSPI0_BACON_type *) 0xf0001c18u)	/* Basic Configuration Register */
#define QSPI1_BACON	(*( QSPI0_BACON_type *) 0xf0001d18u)	/* Basic Configuration Register */
#define QSPI2_BACON	(*( QSPI0_BACON_type *) 0xf0001e18u)	/* Basic Configuration Register */
#define QSPI3_BACON	(*( QSPI0_BACON_type *) 0xf0001f18u)	/* Basic Configuration Register */

typedef volatile union
{
	struct
	{ 
		unsigned int E              : 32;	/* Entry Point to the TxFIFO */
	} B;
	int I;
	unsigned int U;

} QSPI0_BACONENTRY_type;
#define QSPI0_BACONENTRY	(*( QSPI0_BACONENTRY_type *) 0xf0001c60u)	/* BACON_ENTRY Register */
#define QSPI0_DATAENTRY0	(*( QSPI0_BACONENTRY_type *) 0xf0001c64u)	/* DATA_ENTRY Register 0 */
#define QSPI0_DATAENTRY1	(*( QSPI0_BACONENTRY_type *) 0xf0001c68u)	/* DATA_ENTRY Register 1 */
#define QSPI0_DATAENTRY2	(*( QSPI0_BACONENTRY_type *) 0xf0001c6cu)	/* DATA_ENTRY Register 2 */
#define QSPI0_DATAENTRY3	(*( QSPI0_BACONENTRY_type *) 0xf0001c70u)	/* DATA_ENTRY Register 3 */
#define QSPI0_DATAENTRY4	(*( QSPI0_BACONENTRY_type *) 0xf0001c74u)	/* DATA_ENTRY Register 4 */
#define QSPI0_DATAENTRY5	(*( QSPI0_BACONENTRY_type *) 0xf0001c78u)	/* DATA_ENTRY Register 5 */
#define QSPI0_DATAENTRY6	(*( QSPI0_BACONENTRY_type *) 0xf0001c7cu)	/* DATA_ENTRY Register 6 */
#define QSPI0_DATAENTRY7	(*( QSPI0_BACONENTRY_type *) 0xf0001c80u)	/* DATA_ENTRY Register 7 */
#define QSPI0_MIXENTRY	(*( QSPI0_BACONENTRY_type *) 0xf0001c5cu)	/* MIX_ENTRY Register */
#define QSPI1_BACONENTRY	(*( QSPI0_BACONENTRY_type *) 0xf0001d60u)	/* BACON_ENTRY Register */
#define QSPI1_DATAENTRY0	(*( QSPI0_BACONENTRY_type *) 0xf0001d64u)	/* DATA_ENTRY Register 0 */
#define QSPI1_DATAENTRY1	(*( QSPI0_BACONENTRY_type *) 0xf0001d68u)	/* DATA_ENTRY Register 1 */
#define QSPI1_DATAENTRY2	(*( QSPI0_BACONENTRY_type *) 0xf0001d6cu)	/* DATA_ENTRY Register 2 */
#define QSPI1_DATAENTRY3	(*( QSPI0_BACONENTRY_type *) 0xf0001d70u)	/* DATA_ENTRY Register 3 */
#define QSPI1_DATAENTRY4	(*( QSPI0_BACONENTRY_type *) 0xf0001d74u)	/* DATA_ENTRY Register 4 */
#define QSPI1_DATAENTRY5	(*( QSPI0_BACONENTRY_type *) 0xf0001d78u)	/* DATA_ENTRY Register 5 */
#define QSPI1_DATAENTRY6	(*( QSPI0_BACONENTRY_type *) 0xf0001d7cu)	/* DATA_ENTRY Register 6 */
#define QSPI1_DATAENTRY7	(*( QSPI0_BACONENTRY_type *) 0xf0001d80u)	/* DATA_ENTRY Register 7 */
#define QSPI1_MIXENTRY	(*( QSPI0_BACONENTRY_type *) 0xf0001d5cu)	/* MIX_ENTRY Register */
#define QSPI2_BACONENTRY	(*( QSPI0_BACONENTRY_type *) 0xf0001e60u)	/* BACON_ENTRY Register */
#define QSPI2_DATAENTRY0	(*( QSPI0_BACONENTRY_type *) 0xf0001e64u)	/* DATA_ENTRY Register 0 */
#define QSPI2_DATAENTRY1	(*( QSPI0_BACONENTRY_type *) 0xf0001e68u)	/* DATA_ENTRY Register 1 */
#define QSPI2_DATAENTRY2	(*( QSPI0_BACONENTRY_type *) 0xf0001e6cu)	/* DATA_ENTRY Register 2 */
#define QSPI2_DATAENTRY3	(*( QSPI0_BACONENTRY_type *) 0xf0001e70u)	/* DATA_ENTRY Register 3 */
#define QSPI2_DATAENTRY4	(*( QSPI0_BACONENTRY_type *) 0xf0001e74u)	/* DATA_ENTRY Register 4 */
#define QSPI2_DATAENTRY5	(*( QSPI0_BACONENTRY_type *) 0xf0001e78u)	/* DATA_ENTRY Register 5 */
#define QSPI2_DATAENTRY6	(*( QSPI0_BACONENTRY_type *) 0xf0001e7cu)	/* DATA_ENTRY Register 6 */
#define QSPI2_DATAENTRY7	(*( QSPI0_BACONENTRY_type *) 0xf0001e80u)	/* DATA_ENTRY Register 7 */
#define QSPI2_MIXENTRY	(*( QSPI0_BACONENTRY_type *) 0xf0001e5cu)	/* MIX_ENTRY Register */
#define QSPI3_BACONENTRY	(*( QSPI0_BACONENTRY_type *) 0xf0001f60u)	/* BACON_ENTRY Register */
#define QSPI3_DATAENTRY0	(*( QSPI0_BACONENTRY_type *) 0xf0001f64u)	/* DATA_ENTRY Register 0 */
#define QSPI3_DATAENTRY1	(*( QSPI0_BACONENTRY_type *) 0xf0001f68u)	/* DATA_ENTRY Register 1 */
#define QSPI3_DATAENTRY2	(*( QSPI0_BACONENTRY_type *) 0xf0001f6cu)	/* DATA_ENTRY Register 2 */
#define QSPI3_DATAENTRY3	(*( QSPI0_BACONENTRY_type *) 0xf0001f70u)	/* DATA_ENTRY Register 3 */
#define QSPI3_DATAENTRY4	(*( QSPI0_BACONENTRY_type *) 0xf0001f74u)	/* DATA_ENTRY Register 4 */
#define QSPI3_DATAENTRY5	(*( QSPI0_BACONENTRY_type *) 0xf0001f78u)	/* DATA_ENTRY Register 5 */
#define QSPI3_DATAENTRY6	(*( QSPI0_BACONENTRY_type *) 0xf0001f7cu)	/* DATA_ENTRY Register 6 */
#define QSPI3_DATAENTRY7	(*( QSPI0_BACONENTRY_type *) 0xf0001f80u)	/* DATA_ENTRY Register 7 */
#define QSPI3_MIXENTRY	(*( QSPI0_BACONENTRY_type *) 0xf0001f5cu)	/* MIX_ENTRY Register */

typedef volatile union
{
	struct
	{ 
		unsigned int DISR           : 1;	/* Module Disable Request Bit */
		/* const */ unsigned int DISS           : 1;	/* Module Disable Status Bit */
		unsigned int                : 1;
		unsigned int EDIS           : 1;	/* Sleep Mode Enable Control */
		unsigned int                : 28;
	} B;
	int I;
	unsigned int U;

} QSPI0_CLC_type;
#define QSPI0_CLC	(*( QSPI0_CLC_type *) 0xf0001c00u)	/* Clock Control Register */
#define QSPI1_CLC	(*( QSPI0_CLC_type *) 0xf0001d00u)	/* Clock Control Register */
#define QSPI2_CLC	(*( QSPI0_CLC_type *) 0xf0001e00u)	/* Clock Control Register */
#define QSPI3_CLC	(*( QSPI0_CLC_type *) 0xf0001f00u)	/* Clock Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int Q              : 6;	/* Time Quantum */
		unsigned int A              : 2;	/* Bit Segment 1 */
		unsigned int B              : 2;	/* Bit Segment 2 */
		unsigned int C              : 2;	/* Bit Segment 3 */
		unsigned int CPH            : 1;	/* Clock Phase */
		unsigned int CPOL           : 1;	/* Clock Polarity */
		unsigned int PAREN          : 1;	/* Enable Parity Check */
		unsigned int                : 15;
		unsigned int BE             : 2;	/* Permutate bytes to / from Big Endian */
	} B;
	int I;
	unsigned int U;

} QSPI0_ECON0_type;
#define QSPI0_ECON0	(*( QSPI0_ECON0_type *) 0xf0001c20u)	/* Configuration Extension 0 */
#define QSPI0_ECON1	(*( QSPI0_ECON0_type *) 0xf0001c24u)	/* Configuration Extension 1 */
#define QSPI0_ECON2	(*( QSPI0_ECON0_type *) 0xf0001c28u)	/* Configuration Extension 2 */
#define QSPI0_ECON3	(*( QSPI0_ECON0_type *) 0xf0001c2cu)	/* Configuration Extension 3 */
#define QSPI0_ECON4	(*( QSPI0_ECON0_type *) 0xf0001c30u)	/* Configuration Extension 4 */
#define QSPI0_ECON5	(*( QSPI0_ECON0_type *) 0xf0001c34u)	/* Configuration Extension 5 */
#define QSPI0_ECON6	(*( QSPI0_ECON0_type *) 0xf0001c38u)	/* Configuration Extension 6 */
#define QSPI0_ECON7	(*( QSPI0_ECON0_type *) 0xf0001c3cu)	/* Configuration Extension 7 */
#define QSPI1_ECON0	(*( QSPI0_ECON0_type *) 0xf0001d20u)	/* Configuration Extension 0 */
#define QSPI1_ECON1	(*( QSPI0_ECON0_type *) 0xf0001d24u)	/* Configuration Extension 1 */
#define QSPI1_ECON2	(*( QSPI0_ECON0_type *) 0xf0001d28u)	/* Configuration Extension 2 */
#define QSPI1_ECON3	(*( QSPI0_ECON0_type *) 0xf0001d2cu)	/* Configuration Extension 3 */
#define QSPI1_ECON4	(*( QSPI0_ECON0_type *) 0xf0001d30u)	/* Configuration Extension 4 */
#define QSPI1_ECON5	(*( QSPI0_ECON0_type *) 0xf0001d34u)	/* Configuration Extension 5 */
#define QSPI1_ECON6	(*( QSPI0_ECON0_type *) 0xf0001d38u)	/* Configuration Extension 6 */
#define QSPI1_ECON7	(*( QSPI0_ECON0_type *) 0xf0001d3cu)	/* Configuration Extension 7 */
#define QSPI2_ECON0	(*( QSPI0_ECON0_type *) 0xf0001e20u)	/* Configuration Extension 0 */
#define QSPI2_ECON1	(*( QSPI0_ECON0_type *) 0xf0001e24u)	/* Configuration Extension 1 */
#define QSPI2_ECON2	(*( QSPI0_ECON0_type *) 0xf0001e28u)	/* Configuration Extension 2 */
#define QSPI2_ECON3	(*( QSPI0_ECON0_type *) 0xf0001e2cu)	/* Configuration Extension 3 */
#define QSPI2_ECON4	(*( QSPI0_ECON0_type *) 0xf0001e30u)	/* Configuration Extension 4 */
#define QSPI2_ECON5	(*( QSPI0_ECON0_type *) 0xf0001e34u)	/* Configuration Extension 5 */
#define QSPI2_ECON6	(*( QSPI0_ECON0_type *) 0xf0001e38u)	/* Configuration Extension 6 */
#define QSPI2_ECON7	(*( QSPI0_ECON0_type *) 0xf0001e3cu)	/* Configuration Extension 7 */
#define QSPI3_ECON0	(*( QSPI0_ECON0_type *) 0xf0001f20u)	/* Configuration Extension 0 */
#define QSPI3_ECON1	(*( QSPI0_ECON0_type *) 0xf0001f24u)	/* Configuration Extension 1 */
#define QSPI3_ECON2	(*( QSPI0_ECON0_type *) 0xf0001f28u)	/* Configuration Extension 2 */
#define QSPI3_ECON3	(*( QSPI0_ECON0_type *) 0xf0001f2cu)	/* Configuration Extension 3 */
#define QSPI3_ECON4	(*( QSPI0_ECON0_type *) 0xf0001f30u)	/* Configuration Extension 4 */
#define QSPI3_ECON5	(*( QSPI0_ECON0_type *) 0xf0001f34u)	/* Configuration Extension 5 */
#define QSPI3_ECON6	(*( QSPI0_ECON0_type *) 0xf0001f38u)	/* Configuration Extension 6 */
#define QSPI3_ECON7	(*( QSPI0_ECON0_type *) 0xf0001f3cu)	/* Configuration Extension 7 */

typedef volatile union
{
	struct
	{ 
		unsigned int ERRORCLEARS    : 9;	/* Write Only Bits for Clearing the Error Flags */
		unsigned int TXC            : 1;	/* Transmit Event Flag Clear */
		unsigned int RXC            : 1;	/* Receive Event Flag Clear */
		unsigned int PT1C           : 1;	/* PT1 Event Flag Clear */
		unsigned int PT2C           : 1;	/* PT2 Event Flag Clear */
		unsigned int                : 2;
		unsigned int USRC           : 1;	/* User Event Flag Clear */
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} QSPI0_FLAGSCLEAR_type;
#define QSPI0_FLAGSCLEAR	(*( QSPI0_FLAGSCLEAR_type *) 0xf0001c54u)	/* Flags Clear Register */
#define QSPI1_FLAGSCLEAR	(*( QSPI0_FLAGSCLEAR_type *) 0xf0001d54u)	/* Flags Clear Register */
#define QSPI2_FLAGSCLEAR	(*( QSPI0_FLAGSCLEAR_type *) 0xf0001e54u)	/* Flags Clear Register */
#define QSPI3_FLAGSCLEAR	(*( QSPI0_FLAGSCLEAR_type *) 0xf0001f54u)	/* Flags Clear Register */

typedef volatile union
{
	struct
	{ 
		unsigned int TQ             : 8;	/* Global Time Quantum Length */
		unsigned int                : 1;
		unsigned int SI             : 1;	/* Status Injection */
		unsigned int EXPECT         : 4;	/* Time-Out Value for the Expect Phase */
		unsigned int LB             : 1;	/* Loop-Back Control */
		unsigned int DEL0           : 1;	/* Delayed Mode for SLSO0 */
		unsigned int STROBE         : 5;	/* Strobe Delay for SLSO0 in Delayed Mode */
		unsigned int SRF            : 1;	/* Stop on RxFIFO Full */
		unsigned int STIP           : 1;	/* Slave Transmit Idle State Polarity */
		unsigned int                : 1;
		unsigned int EN             : 1;	/* Enable Bit */
		unsigned int MS             : 2;	/* Master Slave Mode */
		unsigned int AREN           : 1;	/* Automatic Reset Enable */
		unsigned int RESETS         : 4;	/* Bits for resetting sub-modules per software */
	} B;
	int I;
	unsigned int U;

} QSPI0_GLOBALCON_type;
#define QSPI0_GLOBALCON	(*( QSPI0_GLOBALCON_type *) 0xf0001c10u)	/* Global Configuration Register */
#define QSPI1_GLOBALCON	(*( QSPI0_GLOBALCON_type *) 0xf0001d10u)	/* Global Configuration Register */
#define QSPI2_GLOBALCON	(*( QSPI0_GLOBALCON_type *) 0xf0001e10u)	/* Global Configuration Register */
#define QSPI3_GLOBALCON	(*( QSPI0_GLOBALCON_type *) 0xf0001f10u)	/* Global Configuration Register */

typedef volatile union
{
	struct
	{ 
		unsigned int ERRORENS       : 9;	/* Error Enable Bits */
		unsigned int TXEN           : 1;	/* Tx Interrupt Event Enable */
		unsigned int RXEN           : 1;	/* RX Interrupt Event Enable */
		unsigned int PT1EN          : 1;	/* Interrupt on PT1 Event Enable */
		unsigned int PT2EN          : 1;	/* Interrupt on PT2 Event Enable */
		unsigned int                : 2;
		unsigned int USREN          : 1;	/* Interrupt on USR Event Enable */
		unsigned int TXFIFOINT      : 2;	/* Transmit FIFO Interrupt Threshold */
		unsigned int RXFIFOINT      : 2;	/* Receive FIFO Interrupt Threshold */
		unsigned int PT1            : 3;	/* Phase Transition Event 1 */
		unsigned int PT2            : 3;	/* Phase Transition Event 2 */
		unsigned int TXFM           : 2;	/* TXFIFO Mode */
		unsigned int RXFM           : 2;	/* RXFIFO Mode */
		unsigned int                : 2;
	} B;
	int I;
	unsigned int U;

} QSPI0_GLOBALCON1_type;
#define QSPI0_GLOBALCON1	(*( QSPI0_GLOBALCON1_type *) 0xf0001c14u)	/* Global Configuration Register 1 */
#define QSPI1_GLOBALCON1	(*( QSPI0_GLOBALCON1_type *) 0xf0001d14u)	/* Global Configuration Register 1 */
#define QSPI2_GLOBALCON1	(*( QSPI0_GLOBALCON1_type *) 0xf0001e14u)	/* Global Configuration Register 1 */
#define QSPI3_GLOBALCON1	(*( QSPI0_GLOBALCON1_type *) 0xf0001f14u)	/* Global Configuration Register 1 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int MODREV         : 8;	/* Module Revision Number */
		/* const */ unsigned int MODTYPE        : 8;	/* Module Type */
		/* const */ unsigned int MODNUMBER      : 16;	/* Module Number Value */
	} B;
	int I;
	unsigned int U;

} QSPI0_ID_type;
#define QSPI0_ID	(*( QSPI0_ID_type *) 0xf0001c08u)	/* Module Identification Register */
#define QSPI1_ID	(*( QSPI0_ID_type *) 0xf0001d08u)	/* Module Identification Register */
#define QSPI2_ID	(*( QSPI0_ID_type *) 0xf0001e08u)	/* Module Identification Register */
#define QSPI3_ID	(*( QSPI0_ID_type *) 0xf0001f08u)	/* Module Identification Register */

typedef volatile union
{
	struct
	{ 
		unsigned int RST            : 1;	/* Kernel Reset */
		/* const */ unsigned int RSTSTAT        : 1;	/* Kernel Reset Status */
		unsigned int                : 30;
	} B;
	int I;
	unsigned int U;

} QSPI0_KRST0_type;
#define QSPI0_KRST0	(*( QSPI0_KRST0_type *) 0xf0001cf4u)	/* Kernel Reset Register 0 */
#define QSPI1_KRST0	(*( QSPI0_KRST0_type *) 0xf0001df4u)	/* Kernel Reset Register 0 */
#define QSPI2_KRST0	(*( QSPI0_KRST0_type *) 0xf0001ef4u)	/* Kernel Reset Register 0 */
#define QSPI3_KRST0	(*( QSPI0_KRST0_type *) 0xf0001ff4u)	/* Kernel Reset Register 0 */

typedef volatile union
{
	struct
	{ 
		unsigned int RST            : 1;	/* Kernel Reset */
		unsigned int                : 31;
	} B;
	int I;
	unsigned int U;

} QSPI0_KRST1_type;
#define QSPI0_KRST1	(*( QSPI0_KRST1_type *) 0xf0001cf0u)	/* Kernel Reset Register 1 */
#define QSPI1_KRST1	(*( QSPI0_KRST1_type *) 0xf0001df0u)	/* Kernel Reset Register 1 */
#define QSPI2_KRST1	(*( QSPI0_KRST1_type *) 0xf0001ef0u)	/* Kernel Reset Register 1 */
#define QSPI3_KRST1	(*( QSPI0_KRST1_type *) 0xf0001ff0u)	/* Kernel Reset Register 1 */

typedef volatile union
{
	struct
	{ 
		unsigned int CLR            : 1;	/* Kernel Reset Status Clear */
		unsigned int                : 31;
	} B;
	int I;
	unsigned int U;

} QSPI0_KRSTCLR_type;
#define QSPI0_KRSTCLR	(*( QSPI0_KRSTCLR_type *) 0xf0001cecu)	/* Kernel Reset Status Clear Register */
#define QSPI1_KRSTCLR	(*( QSPI0_KRSTCLR_type *) 0xf0001decu)	/* Kernel Reset Status Clear Register */
#define QSPI2_KRSTCLR	(*( QSPI0_KRSTCLR_type *) 0xf0001eecu)	/* Kernel Reset Status Clear Register */
#define QSPI3_KRSTCLR	(*( QSPI0_KRSTCLR_type *) 0xf0001fecu)	/* Kernel Reset Status Clear Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32                : 24;
		unsigned __sfrbit32 SUS            : 4;	/* OCDS Suspend Control */
		unsigned __sfrbit32 SUS_P          : 1;	/* SUS Write Protection */
		/* const */ unsigned __sfrbit32 SUSSTA         : 1;	/* Suspend State */
		unsigned __sfrbit32                : 2;
	} B;
	int I;
	unsigned int U;

} QSPI0_OCS_type;
#define QSPI0_OCS	(*( QSPI0_OCS_type *) 0xf0001ce8u)	/* OCDS Control and Status */
#define QSPI1_OCS	(*( QSPI0_OCS_type *) 0xf0001de8u)	/* OCDS Control and Status */
#define QSPI2_OCS	(*( QSPI0_OCS_type *) 0xf0001ee8u)	/* OCDS Control and Status */
#define QSPI3_OCS	(*( QSPI0_OCS_type *) 0xf0001fe8u)	/* OCDS Control and Status */

typedef volatile union
{
	struct
	{ 
		unsigned int MRIS           : 3;	/* Master Mode Receive Input Select */
		unsigned int                : 1;
		unsigned int SRIS           : 3;	/* Slave Mode Receive Input Select */
		unsigned int                : 1;
		unsigned int SCIS           : 3;	/* Slave Mode Clock Input Select */
		unsigned int                : 1;
		unsigned int SLSIS          : 3;	/* Slave Mode Slave Select Input Selection */
		unsigned int                : 17;
	} B;
	int I;
	unsigned int U;

} QSPI0_PISEL_type;
#define QSPI0_PISEL	(*( QSPI0_PISEL_type *) 0xf0001c04u)	/* Port Input Select Register */
#define QSPI1_PISEL	(*( QSPI0_PISEL_type *) 0xf0001d04u)	/* Port Input Select Register */
#define QSPI2_PISEL	(*( QSPI0_PISEL_type *) 0xf0001e04u)	/* Port Input Select Register */
#define QSPI3_PISEL	(*( QSPI0_PISEL_type *) 0xf0001f04u)	/* Port Input Select Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int E              : 32;	/* Read Point from the RxFIFO */
	} B;
	int I;
	unsigned int U;

} QSPI0_RXEXIT_type;
#define QSPI0_RXEXIT	(*( QSPI0_RXEXIT_type *) 0xf0001c90u)	/* RX_EXIT Register */
#define QSPI0_RXEXITD	(*( QSPI0_RXEXIT_type *) 0xf0001c94u)	/* RX_EXIT Debug Register */
#define QSPI1_RXEXIT	(*( QSPI0_RXEXIT_type *) 0xf0001d90u)	/* RX_EXIT Register */
#define QSPI1_RXEXITD	(*( QSPI0_RXEXIT_type *) 0xf0001d94u)	/* RX_EXIT Debug Register */
#define QSPI2_RXEXIT	(*( QSPI0_RXEXIT_type *) 0xf0001e90u)	/* RX_EXIT Register */
#define QSPI2_RXEXITD	(*( QSPI0_RXEXIT_type *) 0xf0001e94u)	/* RX_EXIT Debug Register */
#define QSPI3_RXEXIT	(*( QSPI0_RXEXIT_type *) 0xf0001f90u)	/* RX_EXIT Register */
#define QSPI3_RXEXITD	(*( QSPI0_RXEXIT_type *) 0xf0001f94u)	/* RX_EXIT Debug Register */

typedef volatile union
{
	struct
	{ 
		unsigned int AOL            : 16;	/* Active Output Level for the SLSO Outputs */
		unsigned int OEN            : 16;	/* Enable Bits for the SLSO Outputs */
	} B;
	int I;
	unsigned int U;

} QSPI0_SSOC_type;
#define QSPI0_SSOC	(*( QSPI0_SSOC_type *) 0xf0001c48u)	/* Slave Select Output Control Register */
#define QSPI1_SSOC	(*( QSPI0_SSOC_type *) 0xf0001d48u)	/* Slave Select Output Control Register */
#define QSPI2_SSOC	(*( QSPI0_SSOC_type *) 0xf0001e48u)	/* Slave Select Output Control Register */
#define QSPI3_SSOC	(*( QSPI0_SSOC_type *) 0xf0001f48u)	/* Slave Select Output Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int ERRORFLAGS     : 9;	/* Sticky Flags Signalling Errors */
		unsigned int TXF            : 1;	/* Transmit Interrupt Request Flag */
		unsigned int RXF            : 1;	/* Receive Interrupt Request Flag */
		unsigned int PT1F           : 1;	/* Phase Transition 1 Flag */
		unsigned int PT2F           : 1;	/* Phase Transition 2 Flag */
		unsigned int                : 2;
		unsigned int USRF           : 1;	/* User Interrupt Request Flag */
		/* const */ unsigned int TXFIFOLEVEL    : 3;	/* TXFIFO Filling Level */
		/* const */ unsigned int RXFIFOLEVEL    : 3;	/* RXFIFO Filling Level */
		/* const */ unsigned int SLAVESEL       : 4;	/* Currently Active Slave Select Flag */
		/* const */ unsigned int RPV            : 1;	/* Received Parity Value */
		/* const */ unsigned int TPV            : 1;	/* Transmitted Parity Value */
		/* const */ unsigned int PHASE          : 4;	/* Flags the ongoing phase */
	} B;
	int I;
	unsigned int U;

} QSPI0_STATUS_type;
#define QSPI0_STATUS	(*( QSPI0_STATUS_type *) 0xf0001c40u)	/* Status Register */
#define QSPI1_STATUS	(*( QSPI0_STATUS_type *) 0xf0001d40u)	/* Status Register */
#define QSPI2_STATUS	(*( QSPI0_STATUS_type *) 0xf0001e40u)	/* Status Register */
#define QSPI3_STATUS	(*( QSPI0_STATUS_type *) 0xf0001f40u)	/* Status Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int BITCOUNT       : 8;	/* Number of the bit shifted out */
		unsigned int                : 20;
		unsigned int BRDEN          : 1;	/* Baud Rate Deviation Enable */
		unsigned int BRD            : 1;	/* Baud Rate Deviation Flag */
		unsigned int SPDEN          : 1;	/* Spike Detection Enable */
		unsigned int SPD            : 1;	/* Spike Detection Flag */
	} B;
	int I;
	unsigned int U;

} QSPI0_STATUS1_type;
#define QSPI0_STATUS1	(*( QSPI0_STATUS1_type *) 0xf0001c44u)	/* Status Register 1 */
#define QSPI1_STATUS1	(*( QSPI0_STATUS1_type *) 0xf0001d44u)	/* Status Register 1 */
#define QSPI2_STATUS1	(*( QSPI0_STATUS1_type *) 0xf0001e44u)	/* Status Register 1 */
#define QSPI3_STATUS1	(*( QSPI0_STATUS1_type *) 0xf0001f44u)	/* Status Register 1 */

typedef volatile union
{
	struct
	{ 
		unsigned int XDL            : 16;	/* Extended Data Length */
		/* const */ unsigned int BYTECOUNT      : 16;	/* Extended Data Length */
	} B;
	int I;
	unsigned int U;

} QSPI0_XXLCON_type;
#define QSPI0_XXLCON	(*( QSPI0_XXLCON_type *) 0xf0001c58u)	/* Extra Large Data Configuration Register */
#define QSPI1_XXLCON	(*( QSPI0_XXLCON_type *) 0xf0001d58u)	/* Extra Large Data Configuration Register */
#define QSPI2_XXLCON	(*( QSPI0_XXLCON_type *) 0xf0001e58u)	/* Extra Large Data Configuration Register */
#define QSPI3_XXLCON	(*( QSPI0_XXLCON_type *) 0xf0001f58u)	/* Extra Large Data Configuration Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int Reserved       : 32;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} QSPI1_ACCEN1_type;
#define QSPI1_ACCEN1	(*( QSPI1_ACCEN1_type *) 0xf0001df8u)	/* Access Enable Register 1 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int Reserved       : 32;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} QSPI2_ACCEN1_type;
#define QSPI2_ACCEN1	(*( QSPI2_ACCEN1_type *) 0xf0001ef8u)	/* Access Enable Register 1 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int Reserved       : 32;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} QSPI3_ACCEN1_type;
#define QSPI3_ACCEN1	(*( QSPI3_ACCEN1_type *) 0xf0001ff8u)	/* Access Enable Register 1 */


/* HSSL */
typedef volatile union
{
	struct
	{ 
		unsigned int EN0            : 1;	/* Access Enable for Master TAG ID 0 */
		unsigned int EN1            : 1;	/* Access Enable for Master TAG ID 1 */
		unsigned int EN2            : 1;	/* Access Enable for Master TAG ID 2 */
		unsigned int EN3            : 1;	/* Access Enable for Master TAG ID 3 */
		unsigned int EN4            : 1;	/* Access Enable for Master TAG ID 4 */
		unsigned int EN5            : 1;	/* Access Enable for Master TAG ID 5 */
		unsigned int EN6            : 1;	/* Access Enable for Master TAG ID 6 */
		unsigned int EN7            : 1;	/* Access Enable for Master TAG ID 7 */
		unsigned int EN8            : 1;	/* Access Enable for Master TAG ID 8 */
		unsigned int EN9            : 1;	/* Access Enable for Master TAG ID 9 */
		unsigned int EN10           : 1;	/* Access Enable for Master TAG ID 10 */
		unsigned int EN11           : 1;	/* Access Enable for Master TAG ID 11 */
		unsigned int EN12           : 1;	/* Access Enable for Master TAG ID 12 */
		unsigned int EN13           : 1;	/* Access Enable for Master TAG ID 13 */
		unsigned int EN14           : 1;	/* Access Enable for Master TAG ID 14 */
		unsigned int EN15           : 1;	/* Access Enable for Master TAG ID 15 */
		unsigned int EN16           : 1;	/* Access Enable for Master TAG ID 16 */
		unsigned int EN17           : 1;	/* Access Enable for Master TAG ID 17 */
		unsigned int EN18           : 1;	/* Access Enable for Master TAG ID 18 */
		unsigned int EN19           : 1;	/* Access Enable for Master TAG ID 19 */
		unsigned int EN20           : 1;	/* Access Enable for Master TAG ID 20 */
		unsigned int EN21           : 1;	/* Access Enable for Master TAG ID 21 */
		unsigned int EN22           : 1;	/* Access Enable for Master TAG ID 22 */
		unsigned int EN23           : 1;	/* Access Enable for Master TAG ID 23 */
		unsigned int EN24           : 1;	/* Access Enable for Master TAG ID 24 */
		unsigned int EN25           : 1;	/* Access Enable for Master TAG ID 25 */
		unsigned int EN26           : 1;	/* Access Enable for Master TAG ID 26 */
		unsigned int EN27           : 1;	/* Access Enable for Master TAG ID 27 */
		unsigned int EN28           : 1;	/* Access Enable for Master TAG ID 28 */
		unsigned int EN29           : 1;	/* Access Enable for Master TAG ID 29 */
		unsigned int EN30           : 1;	/* Access Enable for Master TAG ID 30 */
		unsigned int EN31           : 1;	/* Access Enable for Master TAG ID 31 */
	} B;
	int I;
	unsigned int U;

} HSSL_ACCEN0_type;
#define HSSL_ACCEN0	(*( HSSL_ACCEN0_type *) 0xf00800fcu)	/* Access Enable Register 0 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int Reserved       : 32;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} HSSL_ACCEN1_type;
#define HSSL_ACCEN1	(*( HSSL_ACCEN1_type *) 0xf00800f8u)	/* Access Enable Register 1 */

typedef volatile union
{
	struct
	{ 
		unsigned int ARW0           : 2;	/* Access Rule for Window 0 */
		unsigned int ARW1           : 2;	/* Access Rule for Window 1 */
		unsigned int ARW2           : 2;	/* Access Rule for Window 2 */
		unsigned int ARW3           : 2;	/* Access Rule for Window 3 */
		unsigned int                : 8;
		/* const */ unsigned int MAVCH          : 2;	/* Memory Access Violation Channel */
		unsigned int                : 14;
	} B;
	int I;
	unsigned int U;

} HSSL_AR_type;
#define HSSL_AR	(*( HSSL_AR_type *) 0xf00800e0u)	/* Access Rules Register */

typedef volatile union
{
	struct
	{ 
		unsigned int                : 8;
		unsigned int AWE            : 24;	/* Access Window End Address */
	} B;
	int I;
	unsigned int U;

} HSSL_AWEND0_type;
#define HSSL_AWEND0	(*( HSSL_AWEND0_type *) 0xf00800c4u)	/* Access Window End Register 0 */
#define HSSL_AWEND1	(*( HSSL_AWEND0_type *) 0xf00800ccu)	/* Access Window End Register 1 */
#define HSSL_AWEND2	(*( HSSL_AWEND0_type *) 0xf00800d4u)	/* Access Window End Register 2 */
#define HSSL_AWEND3	(*( HSSL_AWEND0_type *) 0xf00800dcu)	/* Access Window End Register 3 */

typedef volatile union
{
	struct
	{ 
		unsigned int                : 8;
		unsigned int AWS            : 24;	/* Access Window Start Address */
	} B;
	int I;
	unsigned int U;

} HSSL_AWSTART0_type;
#define HSSL_AWSTART0	(*( HSSL_AWSTART0_type *) 0xf00800c0u)	/* Access Window Start Register 0 */
#define HSSL_AWSTART1	(*( HSSL_AWSTART0_type *) 0xf00800c8u)	/* Access Window Start Register 1 */
#define HSSL_AWSTART2	(*( HSSL_AWSTART0_type *) 0xf00800d0u)	/* Access Window Start Register 2 */
#define HSSL_AWSTART3	(*( HSSL_AWSTART0_type *) 0xf00800d8u)	/* Access Window Start Register 3 */

typedef volatile union
{
	struct
	{ 
		unsigned int PREDIV         : 14;	/* Global Predivider */
		unsigned int                : 2;
		unsigned int SMT            : 1;	/* Streaming Mode Transmitter */
		unsigned int SMR            : 1;	/* Streaming Mode Receiver */
		unsigned int SCM            : 1;	/* Streaming Channel Mode */
		unsigned int CCC            : 1;	/* Channel Code Control */
		unsigned int                : 12;
	} B;
	int I;
	unsigned int U;

} HSSL_CFG_type;
#define HSSL_CFG	(*( HSSL_CFG_type *) 0xf0080010u)	/* Configuration Register */

typedef volatile union
{
	struct
	{ 
		unsigned int DISR           : 1;	/* Module Disable Request Bit */
		/* const */ unsigned int DISS           : 1;	/* Module Disable Status Bit */
		unsigned int                : 1;
		unsigned int EDIS           : 1;	/* Sleep Mode Enable Control */
		unsigned int                : 28;
	} B;
	int I;
	unsigned int U;

} HSSL_CLC_type;
#define HSSL_CLC	(*( HSSL_CLC_type *) 0xf0080000u)	/* Clock Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int XORMASK        : 16;	/* Value to be XORed with the Calculated CRC */
		unsigned int XEN            : 1;	/* Enable the Error Injection via XORMASK */
		unsigned int                : 15;
	} B;
	int I;
	unsigned int U;

} HSSL_CRC_type;
#define HSSL_CRC	(*( HSSL_CRC_type *) 0xf008000cu)	/* CRC Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int IDQ            : 1;	/* Read ID Request */
		unsigned int TQ             : 1;	/* Trigger Request */
		/* const */ unsigned int LETT           : 3;	/* Last Error Transaction Tag */
		/* const */ unsigned int CETT           : 3;	/* Currently Expected Transaction Tag */
		/* const */ unsigned int TOCV           : 8;	/* Time Out Current Value */
		unsigned int DATLEN         : 2;	/* Data Length */
		unsigned int RWT            : 2;	/* Read Write Trigger Command Type */
		/* const */ unsigned int BSY            : 1;	/* Channel Busy */
		/* const */ unsigned int ITTAG          : 3;	/* Initiator Transaction Tag */
		unsigned int TOREL          : 8;	/* Time Out Reload Value */
	} B;
	int I;
	unsigned int U;

} HSSL_ICON0_type;
#define HSSL_ICON0	(*( HSSL_ICON0_type *) 0xf0080034u)	/* Initiator Control Data Register 0 */
#define HSSL_ICON1	(*( HSSL_ICON0_type *) 0xf0080044u)	/* Initiator Control Data Register 1 */
#define HSSL_ICON2	(*( HSSL_ICON0_type *) 0xf0080054u)	/* Initiator Control Data Register 2 */
#define HSSL_ICON3	(*( HSSL_ICON0_type *) 0xf0080064u)	/* Initiator Control Data Register 3 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int MODREV         : 8;	/* Module Revision Number */
		/* const */ unsigned int MODTYPE        : 8;	/* Module Type */
		/* const */ unsigned int MODNUMBER      : 16;	/* Module Number Value */
	} B;
	int I;
	unsigned int U;

} HSSL_ID_type;
#define HSSL_ID	(*( HSSL_ID_type *) 0xf0080008u)	/* Module Identification Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int DATA           : 32;	/* Data Delivered by a Read Response Frame */
	} B;
	int I;
	unsigned int U;

} HSSL_IRD0_type;
#define HSSL_IRD0	(*( HSSL_IRD0_type *) 0xf008003cu)	/* Initiator Read Data Register */
#define HSSL_IRD1	(*( HSSL_IRD0_type *) 0xf008004cu)	/* Initiator Read Data Register */
#define HSSL_IRD2	(*( HSSL_IRD0_type *) 0xf008005cu)	/* Initiator Read Data Register */
#define HSSL_IRD3	(*( HSSL_IRD0_type *) 0xf008006cu)	/* Initiator Read Data Register */

typedef volatile union
{
	struct
	{ 
		unsigned int ADDRESS        : 32;	/* Address Part of the Payload of a Write Frame */
	} B;
	int I;
	unsigned int U;

} HSSL_IRWA0_type;
#define HSSL_IRWA0	(*( HSSL_IRWA0_type *) 0xf0080038u)	/* Initiator Read Write Address Register */
#define HSSL_IRWA1	(*( HSSL_IRWA0_type *) 0xf0080048u)	/* Initiator Read Write Address Register */
#define HSSL_IRWA2	(*( HSSL_IRWA0_type *) 0xf0080058u)	/* Initiator Read Write Address Register */
#define HSSL_IRWA3	(*( HSSL_IRWA0_type *) 0xf0080068u)	/* Initiator Read Write Address Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int                : 5;
		/* const */ unsigned int CURR           : 27;	/* Address of the Memory Location for the Current Transfer */
	} B;
	int I;
	unsigned int U;

} HSSL_ISCA_type;
#define HSSL_ISCA	(*( HSSL_ISCA_type *) 0xf00800a8u)	/* Initiator Stream Current Address Register */
#define HSSL_TSCA	(*( HSSL_ISCA_type *) 0xf00800b8u)	/* Target Stream Current Address Register */

typedef volatile union
{
	struct
	{ 
		unsigned int RELCOUNT       : 16;	/* Reload Count Number */
		/* const */ unsigned int CURCOUNT       : 16;	/* Current Count Number */
	} B;
	int I;
	unsigned int U;

} HSSL_ISFC_type;
#define HSSL_ISFC	(*( HSSL_ISFC_type *) 0xf00800acu)	/* Initiator Stream Frame Count Register */
#define HSSL_TSFC	(*( HSSL_ISFC_type *) 0xf00800bcu)	/* Target Stream Frame Count Register */

typedef volatile union
{
	struct
	{ 
		unsigned int                : 5;
		unsigned int START          : 27;	/* Start Address for the Memory Range */
	} B;
	int I;
	unsigned int U;

} HSSL_ISSA0_type;
#define HSSL_ISSA0	(*( HSSL_ISSA0_type *) 0xf00800a0u)	/* Initiator Stream Start Address Register */
#define HSSL_ISSA1	(*( HSSL_ISSA0_type *) 0xf00800a4u)	/* Initiator Stream Start Address Register */

typedef volatile union
{
	struct
	{ 
		unsigned int DATA           : 32;	/* Data Part of the Payload of a Write Frame */
	} B;
	int I;
	unsigned int U;

} HSSL_IWD0_type;
#define HSSL_IWD0	(*( HSSL_IWD0_type *) 0xf0080030u)	/* Initiator Write Data Register 0 */
#define HSSL_IWD1	(*( HSSL_IWD0_type *) 0xf0080040u)	/* Initiator Write Data Register 1 */
#define HSSL_IWD2	(*( HSSL_IWD0_type *) 0xf0080050u)	/* Initiator Write Data Register 2 */
#define HSSL_IWD3	(*( HSSL_IWD0_type *) 0xf0080060u)	/* Initiator Write Data Register 3 */

typedef volatile union
{
	struct
	{ 
		unsigned int RST            : 1;	/* Kernel Reset */
		/* const */ unsigned int RSTSTAT        : 1;	/* Kernel Reset Status */
		unsigned int                : 30;
	} B;
	int I;
	unsigned int U;

} HSSL_KRST0_type;
#define HSSL_KRST0	(*( HSSL_KRST0_type *) 0xf00800f4u)	/* Kernel Reset Register 0 */

typedef volatile union
{
	struct
	{ 
		unsigned int RST            : 1;	/* Kernel Reset */
		unsigned int                : 31;
	} B;
	int I;
	unsigned int U;

} HSSL_KRST1_type;
#define HSSL_KRST1	(*( HSSL_KRST1_type *) 0xf00800f0u)	/* Kernel Reset Register 1 */

typedef volatile union
{
	struct
	{ 
		unsigned int CLR            : 1;	/* Kernel Reset Status Clear */
		unsigned int                : 31;
	} B;
	int I;
	unsigned int U;

} HSSL_KRSTCLR_type;
#define HSSL_KRSTCLR	(*( HSSL_KRSTCLR_type *) 0xf00800ecu)	/* Kernel Reset Status Clear Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int NACK           : 4;	/* Not Acknowledge Error - Target Error */
		/* const */ unsigned int TTE            : 4;	/* Transaction Tag Error */
		/* const */ unsigned int TIMEOUT        : 4;	/* Timeout Error */
		/* const */ unsigned int UNEXPECTED     : 4;	/* Unexpected Type of Frame Error */
		/* const */ unsigned int                : 2;
		/* const */ unsigned int TMB            : 1;	/* Target Memory Block */
		/* const */ unsigned int IMB            : 1;	/* Initiator Memory Block */
		/* const */ unsigned int ISB            : 1;	/* Initiator Stream Block Request */
		/* const */ unsigned int MAV            : 1;	/* Memory Access Violation */
		/* const */ unsigned int SRIE           : 1;	/* SRI/SPB Bus Access Error */
		/* const */ unsigned int PIE1           : 1;	/* PHY Inconsistency Error 1 */
		/* const */ unsigned int PIE2           : 1;	/* PHY Inconsistency Error 2 */
		/* const */ unsigned int CRCE           : 1;	/* CRC Error */
		/* const */ unsigned int                : 2;
		/* const */ unsigned int TSE            : 1;	/* Target Stream Enable */
		/* const */ unsigned int TEI            : 1;	/* Transmit Enable Input */
		/* const */ unsigned int TEO            : 1;	/* Transmit Enable Output */
		/* const */ unsigned int INI            : 1;	/* Initialize Mode */
	} B;
	int I;
	unsigned int U;

} HSSL_MFLAGS_type;
#define HSSL_MFLAGS	(*( HSSL_MFLAGS_type *) 0xf0080018u)	/* Miscellaneous Flags Register */

typedef volatile union
{
	struct
	{ 
		unsigned int NACKC          : 4;	/* NACK Flags Clear */
		unsigned int TTEC           : 4;	/* Transaction Tag Error Flags Clear */
		unsigned int TIMEOUTC       : 4;	/* Timeout Error Flags Clear */
		unsigned int UNEXPECTEDC    : 4;	/* Unexpected Error Flags Clear */
		unsigned int                : 2;
		unsigned int TMBC           : 1;	/* Target Memory Block Flag Clear */
		unsigned int IMBC           : 1;	/* Initiator Memory Block Flag Clear */
		unsigned int ISBC           : 1;	/* Initiator Stream Block Request Clear */
		unsigned int MAVC           : 1;	/* MAV Flag Clear */
		unsigned int SRIEC          : 1;	/* SRI/SPB Bus Access Error Flag Clear */
		unsigned int PIE1C          : 1;	/* PIE1 Error Flag Clear */
		unsigned int PIE2C          : 1;	/* PIE2 Error Flag Clear */
		unsigned int CRCEC          : 1;	/* CRC Error Flag Clear */
		unsigned int                : 2;
		unsigned int TSEC           : 1;	/* Target Stream Enable Flag Clear */
		unsigned int                : 1;
		unsigned int TEOC           : 1;	/* Transmit Enable Flag Clear */
		unsigned int INIC           : 1;	/* Initialize Mode Flag Clear */
	} B;
	int I;
	unsigned int U;

} HSSL_MFLAGSCL_type;
#define HSSL_MFLAGSCL	(*( HSSL_MFLAGSCL_type *) 0xf0080020u)	/* Miscellaneous Flags Clear Register */

typedef volatile union
{
	struct
	{ 
		unsigned int NACKEN         : 4;	/* Not Acknowledge Error Enable Bits */
		unsigned int TTEEN          : 4;	/* Transaction Tag Error Enable Bits */
		unsigned int TIMEOUTEN      : 4;	/* Timeout Error Enable Bits */
		unsigned int UNEXPECTEDEN   : 4;	/* Unexpected Error Enable Bits */
		unsigned int                : 5;
		unsigned int MAVEN          : 1;	/* MAV Enable Bit */
		unsigned int SRIEEN         : 1;	/* SRI/SPB Bus Access Error Enable Bit */
		unsigned int PIE1EN         : 1;	/* PIE1 Error Enable Bit */
		unsigned int PIE2EN         : 1;	/* PIE2 Error Enable Bit */
		unsigned int CRCEEN         : 1;	/* CRC Error Enable Bit */
		unsigned int                : 3;
		unsigned int TEIEN          : 1;	/* TEI Enable Bit */
		unsigned int                : 2;
	} B;
	int I;
	unsigned int U;

} HSSL_MFLAGSEN_type;
#define HSSL_MFLAGSEN	(*( HSSL_MFLAGSEN_type *) 0xf0080024u)	/* Flags Enable Register */

typedef volatile union
{
	struct
	{ 
		unsigned int NACKS          : 4;	/* NACK Flags Set */
		unsigned int TTES           : 4;	/* Transaction Tag Error Flags Set */
		unsigned int TIMEOUTS       : 4;	/* Timeout Error Flags Set */
		unsigned int UNEXPECTEDS    : 4;	/* Unexpected Error Flags Set */
		unsigned int                : 2;
		unsigned int TMBS           : 1;	/* Target Memory Block Flag Set */
		unsigned int IMBS           : 1;	/* Initiator Memory Block Flag Set */
		unsigned int ISBS           : 1;	/* Initiator Stream Block Request Set */
		unsigned int MAVS           : 1;	/* MAV Flag Set */
		unsigned int SRIES          : 1;	/* SRI/SPB Bus Access Error Flag Set */
		unsigned int PIE1S          : 1;	/* PIE1 Error Flag Set */
		unsigned int PIE2S          : 1;	/* PIE2 Error Flag Set */
		unsigned int CRCES          : 1;	/* CRC Error Flag Set */
		unsigned int                : 2;
		unsigned int TSES           : 1;	/* Target Stream Enable Flag Set */
		unsigned int                : 1;
		unsigned int TEOS           : 1;	/* Transmit Enable Flag Set */
		unsigned int INIS           : 1;	/* Initialize Mode Flag Set */
	} B;
	int I;
	unsigned int U;

} HSSL_MFLAGSSET_type;
#define HSSL_MFLAGSSET	(*( HSSL_MFLAGSSET_type *) 0xf008001cu)	/* Miscellaneous Flags Set Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 TGS            : 2;	/* Trigger Set for OTGB0/1 */
		unsigned __sfrbit32 TGB            : 1;	/* OTGB0/1 Bus Select */
		unsigned __sfrbit32 TG_P           : 1;	/* TGS, TGB Write Protection */
		unsigned __sfrbit32                : 20;
		unsigned __sfrbit32 SUS            : 4;	/* OCDS Suspend Control */
		unsigned __sfrbit32 SUS_P          : 1;	/* SUS Write Protection */
		/* const */ unsigned __sfrbit32 SUSSTA         : 1;	/* Suspend State */
		unsigned __sfrbit32                : 2;
	} B;
	int I;
	unsigned int U;

} HSSL_OCS_type;
#define HSSL_OCS	(*( HSSL_OCS_type *) 0xf00800e8u)	/* OCDS Control and Status */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int I              : 4;	/* Request Flags for Initiated Commands */
		/* const */ unsigned int T              : 4;	/* Request Flags for Commands Arrived at Target */
		/* const */ unsigned int R              : 4;	/* Request Flags for Response Frames at the Target */
		/* const */ unsigned int                : 4;
		/* const */ unsigned int E0             : 2;	/* Expect Flags for Activated Timeout Timer 0 */
		/* const */ unsigned int E1             : 2;	/* Expect Flags for Activated Timeout Timer 1 */
		/* const */ unsigned int E2             : 2;	/* Expect Flags for Activated Timeout Timer 2 */
		/* const */ unsigned int E3             : 2;	/* Expect Flags for Activated Timeout Timer 3 */
		/* const */ unsigned int                : 4;
		/* const */ unsigned int IS             : 1;	/* I Flag for Stream Frames */
		/* const */ unsigned int RS             : 1;	/* R Flag for Stream Frames */
		/* const */ unsigned int TS             : 1;	/* T Flag for Stream Frames */
		/* const */ unsigned int ES             : 1;	/* E Flag for Stream Frames */
	} B;
	int I;
	unsigned int U;

} HSSL_QFLAGS_type;
#define HSSL_QFLAGS	(*( HSSL_QFLAGS_type *) 0xf0080014u)	/* Request Flags Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int RXFL           : 2;	/* Stream RxFIFO Filling Level */
		/* const */ unsigned int TXFL           : 2;	/* Stream TxFIFO Filling Level */
		/* const */ unsigned int EXFL           : 2;	/* Stream Expect FIFO Filling Level */
		/* const */ unsigned int                : 9;
		/* const */ unsigned int ISF            : 1;	/* Initiator Stream Frame Request */
		/* const */ unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} HSSL_SFSFLAGS_type;
#define HSSL_SFSFLAGS	(*( HSSL_SFSFLAGS_type *) 0xf0080028u)	/* Stream FIFOs Status Flags Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int A              : 32;	/* Address Part of the Payload of a Write Command Frame or a Read Command Frame or ID Frame */
	} B;
	int I;
	unsigned int U;

} HSSL_TCA0_type;
#define HSSL_TCA0	(*( HSSL_TCA0_type *) 0xf0080074u)	/* Target Current Address Register 0 */
#define HSSL_TCA1	(*( HSSL_TCA0_type *) 0xf008007cu)	/* Target Current Address Register 1 */
#define HSSL_TCA2	(*( HSSL_TCA0_type *) 0xf0080084u)	/* Target Current Address Register 2 */
#define HSSL_TCA3	(*( HSSL_TCA0_type *) 0xf008008cu)	/* Target Current Address Register 3 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int D              : 32;	/* Data Part of the Payload of a Write Command Frame or Read Data of a Read Command Frame */
	} B;
	int I;
	unsigned int U;

} HSSL_TCD0_type;
#define HSSL_TCD0	(*( HSSL_TCD0_type *) 0xf0080070u)	/* Target Current Data Register 0 */
#define HSSL_TCD1	(*( HSSL_TCD0_type *) 0xf0080078u)	/* Target Current Data Register 1 */
#define HSSL_TCD2	(*( HSSL_TCD0_type *) 0xf0080080u)	/* Target Current Data Register 2 */
#define HSSL_TCD3	(*( HSSL_TCD0_type *) 0xf0080088u)	/* Target Current Data Register 3 */

typedef volatile union
{
	struct
	{ 
		unsigned int A              : 32;	/* Address Pointer */
	} B;
	int I;
	unsigned int U;

} HSSL_TIDADD_type;
#define HSSL_TIDADD	(*( HSSL_TIDADD_type *) 0xf0080094u)	/* Target ID Address Register */

typedef volatile union
{
	struct
	{ 
		unsigned int                : 5;
		unsigned int ADDR           : 27;	/* Start Address for the Memory Range */
	} B;
	int I;
	unsigned int U;

} HSSL_TSSA0_type;
#define HSSL_TSSA0	(*( HSSL_TSSA0_type *) 0xf00800b0u)	/* Target Stream Start Address Register 0 */
#define HSSL_TSSA1	(*( HSSL_TSSA0_type *) 0xf00800b4u)	/* Target Stream Start Address Register 1 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int LASTCC0        : 5;	/* Last Command Code */
		/* const */ unsigned int LASTTT0        : 3;	/* Last Transaction Tag */
		/* const */ unsigned int LASTCC1        : 5;	/* Last Command Code */
		/* const */ unsigned int LASTTT1        : 3;	/* Last Transaction Tag */
		/* const */ unsigned int LASTCC2        : 5;	/* Last Command Code */
		/* const */ unsigned int LASTTT2        : 3;	/* Last Transaction Tag */
		/* const */ unsigned int LASTCC3        : 5;	/* Last Command Code */
		/* const */ unsigned int LASTTT3        : 3;	/* Last Transaction Tag */
	} B;
	int I;
	unsigned int U;

} HSSL_TSTAT_type;
#define HSSL_TSTAT	(*( HSSL_TSTAT_type *) 0xf0080090u)	/* Target Status Register */


/* HSCT */
typedef volatile union
{
	struct
	{ 
		unsigned int EN0            : 1;	/* Access Enable for Master TAG ID 0 */
		unsigned int EN1            : 1;	/* Access Enable for Master TAG ID 1 */
		unsigned int EN2            : 1;	/* Access Enable for Master TAG ID 2 */
		unsigned int EN3            : 1;	/* Access Enable for Master TAG ID 3 */
		unsigned int EN4            : 1;	/* Access Enable for Master TAG ID 4 */
		unsigned int EN5            : 1;	/* Access Enable for Master TAG ID 5 */
		unsigned int EN6            : 1;	/* Access Enable for Master TAG ID 6 */
		unsigned int EN7            : 1;	/* Access Enable for Master TAG ID 7 */
		unsigned int EN8            : 1;	/* Access Enable for Master TAG ID 8 */
		unsigned int EN9            : 1;	/* Access Enable for Master TAG ID 9 */
		unsigned int EN10           : 1;	/* Access Enable for Master TAG ID 10 */
		unsigned int EN11           : 1;	/* Access Enable for Master TAG ID 11 */
		unsigned int EN12           : 1;	/* Access Enable for Master TAG ID 12 */
		unsigned int EN13           : 1;	/* Access Enable for Master TAG ID 13 */
		unsigned int EN14           : 1;	/* Access Enable for Master TAG ID 14 */
		unsigned int EN15           : 1;	/* Access Enable for Master TAG ID 15 */
		unsigned int EN16           : 1;	/* Access Enable for Master TAG ID 16 */
		unsigned int EN17           : 1;	/* Access Enable for Master TAG ID 17 */
		unsigned int EN18           : 1;	/* Access Enable for Master TAG ID 18 */
		unsigned int EN19           : 1;	/* Access Enable for Master TAG ID 19 */
		unsigned int EN20           : 1;	/* Access Enable for Master TAG ID 20 */
		unsigned int EN21           : 1;	/* Access Enable for Master TAG ID 21 */
		unsigned int EN22           : 1;	/* Access Enable for Master TAG ID 22 */
		unsigned int EN23           : 1;	/* Access Enable for Master TAG ID 23 */
		unsigned int EN24           : 1;	/* Access Enable for Master TAG ID 24 */
		unsigned int EN25           : 1;	/* Access Enable for Master TAG ID 25 */
		unsigned int EN26           : 1;	/* Access Enable for Master TAG ID 26 */
		unsigned int EN27           : 1;	/* Access Enable for Master TAG ID 27 */
		unsigned int EN28           : 1;	/* Access Enable for Master TAG ID 28 */
		unsigned int EN29           : 1;	/* Access Enable for Master TAG ID 29 */
		unsigned int EN30           : 1;	/* Access Enable for Master TAG ID 30 */
		unsigned int EN31           : 1;	/* Access Enable for Master TAG ID 31 */
	} B;
	int I;
	unsigned int U;

} HSCT_ACCEN0_type;
#define HSCT_ACCEN0	(*( HSCT_ACCEN0_type *) 0xf009fffcu)	/* Access Enable Register 0 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int Reserved       : 32;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} HSCT_ACCEN1_type;
#define HSCT_ACCEN1	(*( HSCT_ACCEN1_type *) 0xf009fff8u)	/* Access Enable Register 1 */

typedef volatile union
{
	struct
	{ 
		unsigned int DISR           : 1;	/* Module Disable Request Bit */
		/* const */ unsigned int DISS           : 1;	/* Module Disable Status Bit */
		unsigned int                : 1;
		unsigned int EDIS           : 1;	/* Sleep Mode Enable Control */
		unsigned int                : 28;
	} B;
	int I;
	unsigned int U;

} HSCT_CLC_type;
#define HSCT_CLC	(*( HSCT_CLC_type *) 0xf0090000u)	/* Clock Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int                : 1;
		unsigned int PLLPON         : 1;	/* PLL Power On (Master Mode only) */
		unsigned int PLLPE          : 6;	/* PLL phase enable - allows to enable/disable each of the 6 Phase outputs. */
		unsigned int PLLWMF         : 6;	/* PLL frequency control word multiplication factor */
		unsigned int PLLKPKI        : 1;	/* KP/KI Setting */
		unsigned int PHYRST         : 1;	/* Physical Layer Reset */
		unsigned int PLLKP          : 3;	/* KP of PLL - Configuration of PLL beta coefficients of proportional part of loop filter */
		unsigned int PLLKI          : 3;	/* KI of PLL - Configuration of PLL alpha coefficients of integral part of loop filter */
		unsigned int PLLIVR         : 4;	/* Adjustment for integrated voltage regulator */
		unsigned int                : 2;
		unsigned int OSCCLKEN       : 1;	/* Enable Oscillator Clock as PLL reference clock */
		unsigned int                : 3;
	} B;
	int I;
	unsigned int U;

} HSCT_CONFIGPHY_type;
#define HSCT_CONFIGPHY	(*( HSCT_CONFIGPHY_type *) 0xf0090030u)	/* Configuration physical layer register */

typedef volatile union
{
	struct
	{ 
		unsigned int CTS_FRAME      : 1;	/* Transmit CTS Frame Generation */
		unsigned int CTS_TXD        : 1;	/* Disable TX CTS signaling */
		unsigned int CTS_RXD        : 1;	/* Disable RX CTS detection */
		unsigned int HSSL_CTS_FBD   : 1;	/* Disable HSSL interface CTS Frame Blocking */
		unsigned int                : 28;
	} B;
	int I;
	unsigned int U;

} HSCT_CTSCTRL_type;
#define HSCT_CTSCTRL	(*( HSCT_CTSCTRL_type *) 0xf009001cu)	/* Clear To Send Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int TX_DIS         : 1;	/* Disable HSCT Transmit path in Master interface */
		unsigned int RX_DIS         : 1;	/* Disable HSCT Receive path in Master interface */
		unsigned int RX_HEPD        : 1;	/* Disable RX Header Error Discard Payload data. */
		unsigned int                : 29;
	} B;
	int I;
	unsigned int U;

} HSCT_DISABLE_type;
#define HSCT_DISABLE	(*( HSCT_DISABLE_type *) 0xf0090020u)	/* Transmission Disable Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int MOD_REV        : 8;	/* Module Revision Number */
		/* const */ unsigned int MOD_TYPE       : 8;	/* Module Number Type */
		/* const */ unsigned int MOD_NUM        : 16;	/* Module Number for module identification */
	} B;
	int I;
	unsigned int U;

} HSCT_ID_type;
#define HSCT_ID	(*( HSCT_ID_type *) 0xf0090008u)	/* Module Identification Register */

typedef volatile union
{
	struct
	{ 
		unsigned int IFCVS          : 8;	/* Master Mode - Interface Control Value to be send to Slave interface */
		unsigned int SIFCV          : 1;	/* Master Mode - Slave IF control frame trigger */
		unsigned int                : 7;
		unsigned int MRXSPEED       : 2;	/* Master Mode RX speed */
		unsigned int MTXSPEED       : 2;	/* Master Mode TX speed */
		unsigned int IFTESTMD       : 1;	/* Master Mode Interface Test Mode */
		unsigned int                : 11;
	} B;
	int I;
	unsigned int U;

} HSCT_IFCTRL_type;
#define HSCT_IFCTRL	(*( HSCT_IFCTRL_type *) 0xf0090014u)	/* CPU transfer control register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int RX_STAT        : 3;	/* HSCT slave interface Status for RX link */
		/* const */ unsigned int TX_STAT        : 2;	/* HSCT slave interface Status for TX link */
		/* const */ unsigned int                : 27;
	} B;
	int I;
	unsigned int U;

} HSCT_IFSTAT_type;
#define HSCT_IFSTAT	(*( HSCT_IFSTAT_type *) 0xf0090028u)	/* Interface Status Register */

typedef volatile union
{
	struct
	{ 
		unsigned int                : 1;
		unsigned int SYS_CLK_EN     : 1;	/* Enable SysClk in Master interface */
		unsigned int SRCF           : 1;	/* Select SysClk / Reference Clock Frequency rate */
		unsigned int IFM            : 1;	/* Select Interface Mode */
		unsigned int                : 6;
		unsigned int LHLR           : 1;	/* Loopback path at Slave interface side at higher layer system RAM. */
		unsigned int                : 5;
		unsigned int TXHD           : 3;	/* Transmit High Speed Divider. */
		unsigned int RXHD           : 3;	/* Receive High Speed Divider. */
		unsigned int                : 10;
	} B;
	int I;
	unsigned int U;

} HSCT_INIT_type;
#define HSCT_INIT	(*( HSCT_INIT_type *) 0xf0090010u)	/* Initialization register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int                : 1;
		/* const */ unsigned int HER            : 1;	/* Header error detected */
		/* const */ unsigned int PYER           : 1;	/* Payload error detected */
		/* const */ unsigned int CER            : 1;	/* HSCT command error */
		/* const */ unsigned int IFCFS          : 1;	/* HSCT interface control frame send */
		/* const */ unsigned int SMER           : 1;	/* Speed Mode Switch Error (Master Mode only) */
		/* const */ unsigned int USMSF          : 1;	/* Unsolicited message frame send finished */
		/* const */ unsigned int PLER           : 1;	/* PLL lost lock error */
		/* const */ unsigned int USM            : 1;	/* Unsolicited Message Received */
		/* const */ unsigned int PAR            : 1;	/* PING Answer Received */
		/* const */ unsigned int TXTE           : 1;	/* TX transfer error occurred on a disabled TX channel. */
		/* const */ unsigned int SFO            : 1;	/* Synchronization FIFO overflow (in RX direction) */
		/* const */ unsigned int SFU            : 1;	/* Synchronization FIFO underflow (in TX direction) */
		/* const */ unsigned int                : 19;
	} B;
	int I;
	unsigned int U;

} HSCT_IRQ_type;
#define HSCT_IRQ	(*( HSCT_IRQ_type *) 0xf0090040u)	/* Interrupt register */

typedef volatile union
{
	struct
	{ 
		unsigned int                : 1;
		unsigned int HERCLR         : 1;	/* Header error detected interrupt clear */
		unsigned int PYERCLR        : 1;	/* Payload error detected interrupt clear */
		unsigned int CERCLR         : 1;	/* HSCT command error interrupt clear */
		unsigned int IFCFSCLR       : 1;	/* HSCT interface control command send interrupt clear */
		unsigned int SMERCLR        : 1;	/* Speed Mode Switch Error interrupt clear */
		unsigned int USMSFCLR       : 1;	/* Unsolicited message frame send finished interrupt clear */
		unsigned int PLERCLR        : 1;	/* PLL lost lock error interrupt clear */
		unsigned int USMCLR         : 1;	/* Unsolicited Message received clear */
		unsigned int PARCLR         : 1;	/* PING Answer received clear */
		unsigned int TXTECLR        : 1;	/* TX disable error interrupt clear */
		unsigned int SFOCLR         : 1;	/* Synchronization FIFO overflow (in RX direction) interrupt clear */
		unsigned int SFUCLR         : 1;	/* Synchronization FIFO underflow (in TX direction) interrupt clear */
		unsigned int                : 19;
	} B;
	int I;
	unsigned int U;

} HSCT_IRQCLR_type;
#define HSCT_IRQCLR	(*( HSCT_IRQCLR_type *) 0xf0090048u)	/* Interrupt clear register */

typedef volatile union
{
	struct
	{ 
		unsigned int                : 1;
		unsigned int HEREN          : 1;	/* Header error detected interrupt enable */
		unsigned int PYEREN         : 1;	/* Payload error detected interrupt enable */
		unsigned int CEREN          : 1;	/* HSCT command error interrupt enable */
		unsigned int IFCFSEN        : 1;	/* HSCT interface control command send enable */
		unsigned int SMEREN         : 1;	/* Speed Mode Switch Error interrupt enable */
		unsigned int USMSFEN        : 1;	/* Unsolicited message frame send finished */
		unsigned int PLEREN         : 1;	/* PLL lost lock error interrupt enable */
		unsigned int USMEN          : 1;	/* Unsolicited Message received enable */
		unsigned int PAREN          : 1;	/* PING Answer Received enable */
		unsigned int TXTEEN         : 1;	/* TX disable error interrupt enable */
		unsigned int SFOEN          : 1;	/* Synchronization FIFO overflow (in RX direction) interrupt enable */
		unsigned int SFUEN          : 1;	/* Synchronization FIFO underflow (in TX direction) interrupt enable */
		unsigned int                : 19;
	} B;
	int I;
	unsigned int U;

} HSCT_IRQEN_type;
#define HSCT_IRQEN	(*( HSCT_IRQEN_type *) 0xf0090044u)	/* Interrupt enable register */

typedef volatile union
{
	struct
	{ 
		unsigned int RST            : 1;	/* Kernel Reset */
		/* const */ unsigned int RSTSTAT        : 1;	/* Kernel Reset Status */
		unsigned int                : 30;
	} B;
	int I;
	unsigned int U;

} HSCT_KRST0_type;
#define HSCT_KRST0	(*( HSCT_KRST0_type *) 0xf009fff4u)	/* Reset Register 0 */

typedef volatile union
{
	struct
	{ 
		unsigned int RST            : 1;	/* Kernel Reset */
		unsigned int                : 31;
	} B;
	int I;
	unsigned int U;

} HSCT_KRST1_type;
#define HSCT_KRST1	(*( HSCT_KRST1_type *) 0xf009fff0u)	/* Reset Register 1 */

typedef volatile union
{
	struct
	{ 
		unsigned int CLR            : 1;	/* Kernel Reset Status Clear */
		unsigned int                : 31;
	} B;
	int I;
	unsigned int U;

} HSCT_KRSTCLR_type;
#define HSCT_KRSTCLR	(*( HSCT_KRSTCLR_type *) 0xf009ffecu)	/* Reset Status Clear Register */

typedef volatile union
{
	struct
	{ 
		unsigned int TGS            : 2;	/* Trigger Set for OTGB0/1 */
		unsigned int TGB            : 1;	/* OTGB0/1 Bus Select */
		unsigned int TG_P           : 1;	/* TGS, TGB Write Protection */
		unsigned int                : 20;
		unsigned int SUS            : 4;	/* OCDS Suspend Control */
		unsigned int SUS_P          : 1;	/* SUS Write Protection */
		/* const */ unsigned int SUSSTA         : 1;	/* Suspend State */
		unsigned int                : 2;
	} B;
	int I;
	unsigned int U;

} HSCT_OCS_type;
#define HSCT_OCS	(*( HSCT_OCS_type *) 0xf009ffe8u)	/* OCDS Control and Status */

typedef volatile union
{
	struct
	{ 
		unsigned int SLPEN          : 1;	/* Sleep mode enabled */
		unsigned int SLPCLKG        : 1;	/* Clock Gating in Sleep Mode */
		unsigned int                : 30;
	} B;
	int I;
	unsigned int U;

} HSCT_SLEEPCTRL_type;
#define HSCT_SLEEPCTRL	(*( HSCT_SLEEPCTRL_type *) 0xf0090018u)	/* Sleep Control Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int RX_PSIZE       : 3;	/* RX (receiving) Payload Size */
		/* const */ unsigned int RX_CHANNEL     : 4;	/* RX (receiving) Logical Channel Type */
		/* const */ unsigned int RX_SLEEP       : 1;	/* RX (receiving) Sleep Mode Status */
		/* const */ unsigned int TX_SLEEP       : 1;	/* TX (transmitting) Sleep Mode Status */
		/* const */ unsigned int                : 3;
		/* const */ unsigned int TX_PSIZE       : 3;	/* Transmission Payload Size */
		/* const */ unsigned int                : 1;
		/* const */ unsigned int TX_CHANNEL_TYPE: 4;	/* Transmission Logical Channel Type */
		/* const */ unsigned int                : 4;
		/* const */ unsigned int LIFCCMDR       : 8;	/* Last Interface Control Command Received */
	} B;
	int I;
	unsigned int U;

} HSCT_STAT_type;
#define HSCT_STAT	(*( HSCT_STAT_type *) 0xf0090024u)	/* Status Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int PLOCK          : 1;	/* PLL locked */
		/* const */ unsigned int RXLSA          : 1;	/* Receiver in Low speed */
		/* const */ unsigned int TXLSA          : 1;	/* Transmitter in Low speed */
		/* const */ unsigned int                : 29;
	} B;
	int I;
	unsigned int U;

} HSCT_STATPHY_type;
#define HSCT_STATPHY	(*( HSCT_STATPHY_type *) 0xf0090034u)	/* STATPHY */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int USMR           : 32;	/* Unsolicited status message received */
	} B;
	int I;
	unsigned int U;

} HSCT_USMR_type;
#define HSCT_USMR	(*( HSCT_USMR_type *) 0xf0090050u)	/* Unsolicited Status Message Received */

typedef volatile union
{
	struct
	{ 
		unsigned int USMS           : 32;	/* Unsolicited status message send */
	} B;
	int I;
	unsigned int U;

} HSCT_USMS_type;
#define HSCT_USMS	(*( HSCT_USMS_type *) 0xf0090054u)	/* Unsolicited Status Message Send */


/* MSC */
typedef volatile union
{
	struct
	{ 
		unsigned int LOW            : 4;	/* Duration of the Low Phase of the Shift Clock */
		unsigned int HIGH           : 4;	/* Duration of the High Phase of the Shift Clock */
		unsigned int OIP            : 2;	/* Overflow Interrupt Node Pointer */
		unsigned int OASR           : 1;	/* Overflow Alternate Service Request */
		unsigned int                : 1;
		/* const */ unsigned int OVF            : 1;	/* Overflow Flag */
		unsigned int OFM            : 2;	/* Overflow Flag Modify */
		unsigned int OIE            : 1;	/* Overflow Interrupt Enable */
		unsigned int NDA            : 3;	/* N Divider ABRA */
		unsigned int UIP            : 2;	/* Underflow Interrupt Node Pointer */
		unsigned int UASR           : 1;	/* Underflow Alternate Service Request */
		unsigned int                : 1;
		/* const */ unsigned int UNF            : 1;	/* Underflow Flag */
		unsigned int UFM            : 2;	/* Underflow Flag Modify */
		unsigned int UIE            : 1;	/* Underflow Interrupt Enable */
		unsigned int CLKSEL         : 3;	/* Clock Select */
		unsigned int                : 1;
		unsigned int ABB            : 1;	/* Asynchronous Block Bypass */
	} B;
	int I;
	unsigned int U;

} MSC0_ABC_type;
#define MSC0_ABC	(*( MSC0_ABC_type *) 0xf0002680u)	/* Asynchronous Block Configuration Register */
#define MSC1_ABC	(*( MSC0_ABC_type *) 0xf0002780u)	/* Asynchronous Block Configuration Register */

typedef volatile union
{
	struct
	{ 
		unsigned int EN0            : 1;	/* Access Enable for Master TAG ID 0 */
		unsigned int EN1            : 1;	/* Access Enable for Master TAG ID 1 */
		unsigned int EN2            : 1;	/* Access Enable for Master TAG ID 2 */
		unsigned int EN3            : 1;	/* Access Enable for Master TAG ID 3 */
		unsigned int EN4            : 1;	/* Access Enable for Master TAG ID 4 */
		unsigned int EN5            : 1;	/* Access Enable for Master TAG ID 5 */
		unsigned int EN6            : 1;	/* Access Enable for Master TAG ID 6 */
		unsigned int EN7            : 1;	/* Access Enable for Master TAG ID 7 */
		unsigned int EN8            : 1;	/* Access Enable for Master TAG ID 8 */
		unsigned int EN9            : 1;	/* Access Enable for Master TAG ID 9 */
		unsigned int EN10           : 1;	/* Access Enable for Master TAG ID 10 */
		unsigned int EN11           : 1;	/* Access Enable for Master TAG ID 11 */
		unsigned int EN12           : 1;	/* Access Enable for Master TAG ID 12 */
		unsigned int EN13           : 1;	/* Access Enable for Master TAG ID 13 */
		unsigned int EN14           : 1;	/* Access Enable for Master TAG ID 14 */
		unsigned int EN15           : 1;	/* Access Enable for Master TAG ID 15 */
		unsigned int EN16           : 1;	/* Access Enable for Master TAG ID 16 */
		unsigned int EN17           : 1;	/* Access Enable for Master TAG ID 17 */
		unsigned int EN18           : 1;	/* Access Enable for Master TAG ID 18 */
		unsigned int EN19           : 1;	/* Access Enable for Master TAG ID 19 */
		unsigned int EN20           : 1;	/* Access Enable for Master TAG ID 20 */
		unsigned int EN21           : 1;	/* Access Enable for Master TAG ID 21 */
		unsigned int EN22           : 1;	/* Access Enable for Master TAG ID 22 */
		unsigned int EN23           : 1;	/* Access Enable for Master TAG ID 23 */
		unsigned int EN24           : 1;	/* Access Enable for Master TAG ID 24 */
		unsigned int EN25           : 1;	/* Access Enable for Master TAG ID 25 */
		unsigned int EN26           : 1;	/* Access Enable for Master TAG ID 26 */
		unsigned int EN27           : 1;	/* Access Enable for Master TAG ID 27 */
		unsigned int EN28           : 1;	/* Access Enable for Master TAG ID 28 */
		unsigned int EN29           : 1;	/* Access Enable for Master TAG ID 29 */
		unsigned int EN30           : 1;	/* Access Enable for Master TAG ID 30 */
		unsigned int EN31           : 1;	/* Access Enable for Master TAG ID 31 */
	} B;
	int I;
	unsigned int U;

} MSC0_ACCEN0_type;
#define MSC0_ACCEN0	(*( MSC0_ACCEN0_type *) 0xf00026fcu)	/* Access Enable Register 0 */
#define MSC1_ACCEN0	(*( MSC0_ACCEN0_type *) 0xf00027fcu)	/* Access Enable Register 0 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int Reserved       : 32;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} MSC0_ACCEN1_type;
#define MSC0_ACCEN1	(*( MSC0_ACCEN1_type *) 0xf00026f8u)	/* Access Enable Register 1 */

typedef volatile union
{
	struct
	{ 
		unsigned int DISR           : 1;	/* Module Disable Request Bit */
		/* const */ unsigned int DISS           : 1;	/* Module Disable Status Bit */
		unsigned int                : 1;
		unsigned int EDIS           : 1;	/* Sleep Mode Enable Control */
		unsigned int                : 28;
	} B;
	int I;
	unsigned int U;

} MSC0_CLC_type;
#define MSC0_CLC	(*( MSC0_CLC_type *) 0xf0002600u)	/* Clock Control Register */
#define MSC1_CLC	(*( MSC0_CLC_type *) 0xf0002700u)	/* Clock Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int DCL            : 16;	/* Downstream Command for SRL Shift Register */
		unsigned int DCH            : 16;	/* Downstream Command for SRH Shift Register */
	} B;
	int I;
	unsigned int U;

} MSC0_DC_type;
#define MSC0_DC	(*( MSC0_DC_type *) 0xf0002620u)	/* Downstream Command Register */
#define MSC1_DC	(*( MSC0_DC_type *) 0xf0002720u)	/* Downstream Command Register */

typedef volatile union
{
	struct
	{ 
		unsigned int DDL            : 16;	/* Downstream Data for SRL Shift Register */
		unsigned int DDH            : 16;	/* Downstream Data for SRH Shift Register */
	} B;
	int I;
	unsigned int U;

} MSC0_DD_type;
#define MSC0_DD	(*( MSC0_DD_type *) 0xf000261cu)	/* Downstream Data Register */
#define MSC1_DD	(*( MSC0_DD_type *) 0xf000271cu)	/* Downstream Data Register */

typedef volatile union
{
	struct
	{ 
		unsigned int DDLE           : 16;	/* Downstream Data Extension for SRL Shift Register */
		unsigned int DDHE           : 16;	/* Downstream Data Extension for SRH Shift Register */
	} B;
	int I;
	unsigned int U;

} MSC0_DDE_type;
#define MSC0_DDE	(*( MSC0_DDE_type *) 0xf000266cu)	/* Downstream Data Extension Register */
#define MSC1_DDE	(*( MSC0_DDE_type *) 0xf000276cu)	/* Downstream Data Extension Register */

typedef volatile union
{
	struct
	{ 
		unsigned int DDLM           : 16;	/* Downstream Data Mirror for SRL Shift Register */
		unsigned int DDHM           : 16;	/* Downstream Data Mirror for SRH Shift Register */
	} B;
	int I;
	unsigned int U;

} MSC0_DDM_type;
#define MSC0_DDM	(*( MSC0_DDM_type *) 0xf0002670u)	/* Downstream Data Mirror Register */
#define MSC1_DDM	(*( MSC0_DDM_type *) 0xf0002770u)	/* Downstream Data Mirror Register */

typedef volatile union
{
	struct
	{ 
		unsigned int TM             : 1;	/* Transmission Mode */
		/* const */ unsigned int CP             : 1;	/* Command Pending */
		/* const */ unsigned int DP             : 1;	/* Data Pending */
		unsigned int NDBL           : 5;	/* Number of SRL Bits Shifted at Data Frames */
		unsigned int NDBH           : 5;	/* Number of SRH Bits Shifted at Data Frames */
		unsigned int ENSELL         : 1;	/* Enable SRL Active Phase Selection Bit */
		unsigned int ENSELH         : 1;	/* Enable SRH Active Phase Selection Bit */
		/* const */ unsigned int DSDIS          : 1;	/* Downstream Disable */
		unsigned int NBC            : 6;	/* Number of Bits Shifted at Command Frames */
		unsigned int                : 2;
		unsigned int PPD            : 5;	/* Passive Phase Length at Data Frames */
		unsigned int                : 3;
	} B;
	int I;
	unsigned int U;

} MSC0_DSC_type;
#define MSC0_DSC	(*( MSC0_DSC_type *) 0xf0002614u)	/* Downstream Control Register */
#define MSC1_DSC	(*( MSC0_DSC_type *) 0xf0002714u)	/* Downstream Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int NDBHE          : 1;	/* Number of SRH Bits Shifted at Data Frames Extension */
		unsigned int NDBLE          : 1;	/* Number of SRH Bits Shifted at Data Frames Extension */
		unsigned int                : 12;
		unsigned int EXEN           : 1;	/* Extension Enable */
		/* const */ unsigned int CCF            : 1;	/* Command-Comand Flag */
		unsigned int INJENP0        : 1;	/* Injection Enable of the Pin 0 Signal */
		unsigned int INJPOSP0       : 6;	/* Injection Position of the Pin 0 Signal */
		unsigned int                : 1;
		unsigned int INJENP1        : 1;	/* Injection Enable of the Pin 1 Signal */
		unsigned int INJPOSP1       : 6;	/* Injection Position of the Pin 1 Signal */
		unsigned int CDCM           : 1;	/* Command-Data-Comand in Data Repetition Mode */
	} B;
	int I;
	unsigned int U;

} MSC0_DSCE_type;
#define MSC0_DSCE	(*( MSC0_DSCE_type *) 0xf0002658u)	/* Downstream Control Enhanced Register 1 */
#define MSC1_DSCE	(*( MSC0_DSCE_type *) 0xf0002758u)	/* Downstream Control Enhanced Register 1 */

typedef volatile union
{
	struct
	{ 
		unsigned int SH0            : 2;	/* Select Source for SRH */
		unsigned int SH1            : 2;	/* Select Source for SRH */
		unsigned int SH2            : 2;	/* Select Source for SRH */
		unsigned int SH3            : 2;	/* Select Source for SRH */
		unsigned int SH4            : 2;	/* Select Source for SRH */
		unsigned int SH5            : 2;	/* Select Source for SRH */
		unsigned int SH6            : 2;	/* Select Source for SRH */
		unsigned int SH7            : 2;	/* Select Source for SRH */
		unsigned int SH8            : 2;	/* Select Source for SRH */
		unsigned int SH9            : 2;	/* Select Source for SRH */
		unsigned int SH10           : 2;	/* Select Source for SRH */
		unsigned int SH11           : 2;	/* Select Source for SRH */
		unsigned int SH12           : 2;	/* Select Source for SRH */
		unsigned int SH13           : 2;	/* Select Source for SRH */
		unsigned int SH14           : 2;	/* Select Source for SRH */
		unsigned int SH15           : 2;	/* Select Source for SRH */
	} B;
	int I;
	unsigned int U;

} MSC0_DSDSH_type;
#define MSC0_DSDSH	(*( MSC0_DSDSH_type *) 0xf0002628u)	/* Downstream Select Data Source High Register */
#define MSC1_DSDSH	(*( MSC0_DSDSH_type *) 0xf0002728u)	/* Downstream Select Data Source High Register */

typedef volatile union
{
	struct
	{ 
		unsigned int SH16           : 2;	/* Select Source for SRH */
		unsigned int SH17           : 2;	/* Select Source for SRH */
		unsigned int SH18           : 2;	/* Select Source for SRH */
		unsigned int SH19           : 2;	/* Select Source for SRH */
		unsigned int SH20           : 2;	/* Select Source for SRH */
		unsigned int SH21           : 2;	/* Select Source for SRH */
		unsigned int SH22           : 2;	/* Select Source for SRH */
		unsigned int SH23           : 2;	/* Select Source for SRH */
		unsigned int SH24           : 2;	/* Select Source for SRH */
		unsigned int SH25           : 2;	/* Select Source for SRH */
		unsigned int SH26           : 2;	/* Select Source for SRH */
		unsigned int SH27           : 2;	/* Select Source for SRH */
		unsigned int SH28           : 2;	/* Select Source for SRH */
		unsigned int SH29           : 2;	/* Select Source for SRH */
		unsigned int SH30           : 2;	/* Select Source for SRH */
		unsigned int SH31           : 2;	/* Select Source for SRH */
	} B;
	int I;
	unsigned int U;

} MSC0_DSDSHE_type;
#define MSC0_DSDSHE	(*( MSC0_DSDSHE_type *) 0xf0002664u)	/* Downstream Select Data Source High Register */
#define MSC1_DSDSHE	(*( MSC0_DSDSHE_type *) 0xf0002764u)	/* Downstream Select Data Source High Register */

typedef volatile union
{
	struct
	{ 
		unsigned int SL0            : 2;	/* Select Source for SRL */
		unsigned int SL1            : 2;	/* Select Source for SRL */
		unsigned int SL2            : 2;	/* Select Source for SRL */
		unsigned int SL3            : 2;	/* Select Source for SRL */
		unsigned int SL4            : 2;	/* Select Source for SRL */
		unsigned int SL5            : 2;	/* Select Source for SRL */
		unsigned int SL6            : 2;	/* Select Source for SRL */
		unsigned int SL7            : 2;	/* Select Source for SRL */
		unsigned int SL8            : 2;	/* Select Source for SRL */
		unsigned int SL9            : 2;	/* Select Source for SRL */
		unsigned int SL10           : 2;	/* Select Source for SRL */
		unsigned int SL11           : 2;	/* Select Source for SRL */
		unsigned int SL12           : 2;	/* Select Source for SRL */
		unsigned int SL13           : 2;	/* Select Source for SRL */
		unsigned int SL14           : 2;	/* Select Source for SRL */
		unsigned int SL15           : 2;	/* Select Source for SRL */
	} B;
	int I;
	unsigned int U;

} MSC0_DSDSL_type;
#define MSC0_DSDSL	(*( MSC0_DSDSL_type *) 0xf0002624u)	/* Downstream Select Data Source Low Register */
#define MSC1_DSDSL	(*( MSC0_DSDSL_type *) 0xf0002724u)	/* Downstream Select Data Source Low Register */

typedef volatile union
{
	struct
	{ 
		unsigned int SL16           : 2;	/* Select Source for SRL */
		unsigned int SL17           : 2;	/* Select Source for SRL */
		unsigned int SL18           : 2;	/* Select Source for SRL */
		unsigned int SL19           : 2;	/* Select Source for SRL */
		unsigned int SL20           : 2;	/* Select Source for SRL */
		unsigned int SL21           : 2;	/* Select Source for SRL */
		unsigned int SL22           : 2;	/* Select Source for SRL */
		unsigned int SL23           : 2;	/* Select Source for SRL */
		unsigned int SL24           : 2;	/* Select Source for SRL */
		unsigned int SL25           : 2;	/* Select Source for SRL */
		unsigned int SL26           : 2;	/* Select Source for SRL */
		unsigned int SL27           : 2;	/* Select Source for SRL */
		unsigned int SL28           : 2;	/* Select Source for SRL */
		unsigned int SL29           : 2;	/* Select Source for SRL */
		unsigned int SL30           : 2;	/* Select Source for SRL */
		unsigned int SL31           : 2;	/* Select Source for SRL */
	} B;
	int I;
	unsigned int U;

} MSC0_DSDSLE_type;
#define MSC0_DSDSLE	(*( MSC0_DSDSLE_type *) 0xf0002660u)	/* Downstream Select Data Source Low Extension Register */
#define MSC1_DSDSLE	(*( MSC0_DSDSLE_type *) 0xf0002760u)	/* Downstream Select Data Source Low Extension Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int PFC            : 4;	/* Passive Time Frame Counter */
		unsigned int                : 4;
		unsigned int NPTF           : 4;	/* Number Of Passive Time Frames */
		unsigned int                : 4;
		/* const */ unsigned int DC             : 8;	/* Downstream Counter */
		/* const */ unsigned int DFA            : 1;	/* Data Frame Active */
		/* const */ unsigned int CFA            : 1;	/* Command Frame Active */
		unsigned int                : 6;
	} B;
	int I;
	unsigned int U;

} MSC0_DSS_type;
#define MSC0_DSS	(*( MSC0_DSS_type *) 0xf0002618u)	/* Downstream Status Register */
#define MSC1_DSS	(*( MSC0_DSS_type *) 0xf0002718u)	/* Downstream Status Register */

typedef volatile union
{
	struct
	{ 
		unsigned int PPDE           : 2;	/* Passive Phase Length at Data Frames Extension */
		unsigned int PPCE           : 6;	/* Passive Phase Length at Control Frames Extension */
		unsigned int NDD            : 4;	/* N Divider Downstream */
		unsigned int                : 20;
	} B;
	int I;
	unsigned int U;

} MSC0_DSTE_type;
#define MSC0_DSTE	(*( MSC0_DSTE_type *) 0xf0002674u)	/* Downstream Timing Extension Register */
#define MSC1_DSTE	(*( MSC0_DSTE_type *) 0xf0002774u)	/* Downstream Timing Extension Register */

typedef volatile union
{
	struct
	{ 
		unsigned int ENL0           : 1;	/* Emergency Stop Enable for Bit 0 in SRL */
		unsigned int ENL1           : 1;	/* Emergency Stop Enable for Bit 1 in SRL */
		unsigned int ENL2           : 1;	/* Emergency Stop Enable for Bit 2 in SRL */
		unsigned int ENL3           : 1;	/* Emergency Stop Enable for Bit 3 in SRL */
		unsigned int ENL4           : 1;	/* Emergency Stop Enable for Bit 4 in SRL */
		unsigned int ENL5           : 1;	/* Emergency Stop Enable for Bit 5 in SRL */
		unsigned int ENL6           : 1;	/* Emergency Stop Enable for Bit 6 in SRL */
		unsigned int ENL7           : 1;	/* Emergency Stop Enable for Bit 7 in SRL */
		unsigned int ENL8           : 1;	/* Emergency Stop Enable for Bit 8 in SRL */
		unsigned int ENL9           : 1;	/* Emergency Stop Enable for Bit 9 in SRL */
		unsigned int ENL10          : 1;	/* Emergency Stop Enable for Bit 10 in SRL */
		unsigned int ENL11          : 1;	/* Emergency Stop Enable for Bit 11 in SRL */
		unsigned int ENL12          : 1;	/* Emergency Stop Enable for Bit 12 in SRL */
		unsigned int ENL13          : 1;	/* Emergency Stop Enable for Bit 13 in SRL */
		unsigned int ENL14          : 1;	/* Emergency Stop Enable for Bit 14 in SRL */
		unsigned int ENL15          : 1;	/* Emergency Stop Enable for Bit 15 in SRL */
		unsigned int ENH0           : 1;	/* Emergency Stop Enable for Bit 0 in SRH */
		unsigned int ENH1           : 1;	/* Emergency Stop Enable for Bit 1 in SRH */
		unsigned int ENH2           : 1;	/* Emergency Stop Enable for Bit 2 in SRH */
		unsigned int ENH3           : 1;	/* Emergency Stop Enable for Bit 3 in SRH */
		unsigned int ENH4           : 1;	/* Emergency Stop Enable for Bit 4 in SRH */
		unsigned int ENH5           : 1;	/* Emergency Stop Enable for Bit 5 in SRH */
		unsigned int ENH6           : 1;	/* Emergency Stop Enable for Bit 6 in SRH */
		unsigned int ENH7           : 1;	/* Emergency Stop Enable for Bit 7 in SRH */
		unsigned int ENH8           : 1;	/* Emergency Stop Enable for Bit 8 in SRH */
		unsigned int ENH9           : 1;	/* Emergency Stop Enable for Bit 9 in SRH */
		unsigned int ENH10          : 1;	/* Emergency Stop Enable for Bit 10 in SRH */
		unsigned int ENH11          : 1;	/* Emergency Stop Enable for Bit 11 in SRH */
		unsigned int ENH12          : 1;	/* Emergency Stop Enable for Bit 12 in SRH */
		unsigned int ENH13          : 1;	/* Emergency Stop Enable for Bit 13 in SRH */
		unsigned int ENH14          : 1;	/* Emergency Stop Enable for Bit 14 in SRH */
		unsigned int ENH15          : 1;	/* Emergency Stop Enable for Bit 15 in SRH */
	} B;
	int I;
	unsigned int U;

} MSC0_ESR_type;
#define MSC0_ESR	(*( MSC0_ESR_type *) 0xf000262cu)	/* Emergency Stop Register */
#define MSC1_ESR	(*( MSC0_ESR_type *) 0xf000272cu)	/* Emergency Stop Register */

typedef volatile union
{
	struct
	{ 
		unsigned int ENL16          : 1;	/* Emergency Stop Enable for Bit 16 in SRL */
		unsigned int ENL17          : 1;	/* Emergency Stop Enable for Bit 17 in SRL */
		unsigned int ENL18          : 1;	/* Emergency Stop Enable for Bit 18 in SRL */
		unsigned int ENL19          : 1;	/* Emergency Stop Enable for Bit 19 in SRL */
		unsigned int ENL20          : 1;	/* Emergency Stop Enable for Bit 20 in SRL */
		unsigned int ENL21          : 1;	/* Emergency Stop Enable for Bit 21 in SRL */
		unsigned int ENL22          : 1;	/* Emergency Stop Enable for Bit 22 in SRL */
		unsigned int ENL23          : 1;	/* Emergency Stop Enable for Bit 23 in SRL */
		unsigned int ENL24          : 1;	/* Emergency Stop Enable for Bit 24 in SRL */
		unsigned int ENL25          : 1;	/* Emergency Stop Enable for Bit 25 in SRL */
		unsigned int ENL26          : 1;	/* Emergency Stop Enable for Bit 26 in SRL */
		unsigned int ENL27          : 1;	/* Emergency Stop Enable for Bit 27 in SRL */
		unsigned int ENL28          : 1;	/* Emergency Stop Enable for Bit 28 in SRL */
		unsigned int ENL29          : 1;	/* Emergency Stop Enable for Bit 29 in SRL */
		unsigned int ENL30          : 1;	/* Emergency Stop Enable for Bit 30 in SRL */
		unsigned int ENL31          : 1;	/* Emergency Stop Enable for Bit 31 in SRL */
		unsigned int ENH16          : 1;	/* Emergency Stop Enable for Bit 16 in SRH */
		unsigned int ENH17          : 1;	/* Emergency Stop Enable for Bit 17 in SRH */
		unsigned int ENH18          : 1;	/* Emergency Stop Enable for Bit 18 in SRH */
		unsigned int ENH19          : 1;	/* Emergency Stop Enable for Bit 19 in SRH */
		unsigned int ENH20          : 1;	/* Emergency Stop Enable for Bit 20 in SRH */
		unsigned int ENH21          : 1;	/* Emergency Stop Enable for Bit 21 in SRH */
		unsigned int ENH22          : 1;	/* Emergency Stop Enable for Bit 22 in SRH */
		unsigned int ENH23          : 1;	/* Emergency Stop Enable for Bit 23 in SRH */
		unsigned int ENH24          : 1;	/* Emergency Stop Enable for Bit 24 in SRH */
		unsigned int ENH25          : 1;	/* Emergency Stop Enable for Bit 25 in SRH */
		unsigned int ENH26          : 1;	/* Emergency Stop Enable for Bit 26 in SRH */
		unsigned int ENH27          : 1;	/* Emergency Stop Enable for Bit 27 in SRH */
		unsigned int ENH28          : 1;	/* Emergency Stop Enable for Bit 28 in SRH */
		unsigned int ENH29          : 1;	/* Emergency Stop Enable for Bit 29 in SRH */
		unsigned int ENH30          : 1;	/* Emergency Stop Enable for Bit 30 in SRH */
		unsigned int ENH31          : 1;	/* Emergency Stop Enable for Bit 31 in SRH */
	} B;
	int I;
	unsigned int U;

} MSC0_ESRE_type;
#define MSC0_ESRE	(*( MSC0_ESRE_type *) 0xf0002668u)	/* Emergency Stop Extension Register */
#define MSC1_ESRE	(*( MSC0_ESRE_type *) 0xf0002768u)	/* Emergency Stop Extension Register */

typedef volatile union
{
	struct
	{ 
		unsigned int STEP           : 10;	/* Step Value */
		unsigned int                : 4;
		unsigned int DM             : 2;	/* Divider Mode */
		/* const */ unsigned int RESULT         : 10;	/* Result Value */
		unsigned int                : 4;
		unsigned int ENHW           : 1;	/* Enable Hardware Clock Control */
		unsigned int DISCLK         : 1;	/* Disable Clock */
	} B;
	int I;
	unsigned int U;

} MSC0_FDR_type;
#define MSC0_FDR	(*( MSC0_FDR_type *) 0xf000260cu)	/* Fractional Divider Register */
#define MSC1_FDR	(*( MSC0_FDR_type *) 0xf000270cu)	/* Fractional Divider Register */

typedef volatile union
{
	struct
	{ 
		unsigned int EDIP           : 2;	/* Data Frame Interrupt Node Pointer */
		unsigned int EDIE           : 2;	/* Data Frame Interrupt Enable */
		unsigned int ECIP           : 2;	/* Command Frame Interrupt Node Pointer */
		unsigned int                : 1;
		unsigned int ECIE           : 1;	/* Command Frame Interrupt Enable */
		unsigned int TFIP           : 2;	/* Time Frame Interrupt Pointer */
		unsigned int                : 1;
		unsigned int TFIE           : 1;	/* Time Frame Interrupt Enable */
		unsigned int RDIP           : 2;	/* Receive Data Interrupt Pointer */
		unsigned int RDIE           : 2;	/* Receive Data Interrupt Enable */
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} MSC0_ICR_type;
#define MSC0_ICR	(*( MSC0_ICR_type *) 0xf0002640u)	/* Interrupt Control Register */
#define MSC1_ICR	(*( MSC0_ICR_type *) 0xf0002740u)	/* Interrupt Control Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int MODREV         : 8;	/* Module Revision Number */
		/* const */ unsigned int MODTYPE        : 8;	/* Module Type */
		/* const */ unsigned int MODNUM         : 16;	/* Module Number Value */
	} B;
	int I;
	unsigned int U;

} MSC0_ID_type;
#define MSC0_ID	(*( MSC0_ID_type *) 0xf0002608u)	/* Module Identification Register */
#define MSC1_ID	(*( MSC0_ID_type *) 0xf0002708u)	/* Module Identification Register */

typedef volatile union
{
	struct
	{ 
		unsigned int CDEDI          : 1;	/* Clear DEDI Flag */
		unsigned int CDECI          : 1;	/* Clear DECI Flag */
		unsigned int CDTFI          : 1;	/* Clear DTFI Flag */
		unsigned int CURDI          : 1;	/* Clear URDI Flag */
		unsigned int CDP            : 1;	/* Clear DP Flag */
		unsigned int CCP            : 1;	/* Clear CP Flag */
		unsigned int CDDIS          : 1;	/* Clear DSDIS Flag */
		unsigned int                : 9;
		unsigned int SDEDI          : 1;	/* Set DEDI Flag */
		unsigned int SDECI          : 1;	/* Set DECI Flag */
		unsigned int SDTFI          : 1;	/* Set DTFI Flag */
		unsigned int SURDI          : 1;	/* Set URDI Flag */
		unsigned int SDP            : 1;	/* Set DP Bit */
		unsigned int SCP            : 1;	/* Set CP Flag */
		unsigned int SDDIS          : 1;	/* Set DSDIS Flag */
		unsigned int                : 9;
	} B;
	int I;
	unsigned int U;

} MSC0_ISC_type;
#define MSC0_ISC	(*( MSC0_ISC_type *) 0xf0002648u)	/* Interrupt Set Clear Register */
#define MSC1_ISC	(*( MSC0_ISC_type *) 0xf0002748u)	/* Interrupt Set Clear Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int DEDI           : 1;	/* Data Frame Interrupt Flag */
		/* const */ unsigned int DECI           : 1;	/* Command Frame Interrupt Flag */
		/* const */ unsigned int DTFI           : 1;	/* Time Frame Interrupt Flag */
		/* const */ unsigned int URDI           : 1;	/* Receive Data Interrupt Flag */
		/* const */ unsigned int                : 28;
	} B;
	int I;
	unsigned int U;

} MSC0_ISR_type;
#define MSC0_ISR	(*( MSC0_ISR_type *) 0xf0002644u)	/* Interrupt Status Register */
#define MSC1_ISR	(*( MSC0_ISR_type *) 0xf0002744u)	/* Interrupt Status Register */

typedef volatile union
{
	struct
	{ 
		unsigned int RST            : 1;	/* Kernel Reset */
		/* const */ unsigned int RSTSTAT        : 1;	/* Kernel Reset Status */
		unsigned int                : 30;
	} B;
	int I;
	unsigned int U;

} MSC0_KRST0_type;
#define MSC0_KRST0	(*( MSC0_KRST0_type *) 0xf00026f4u)	/* Kernel Reset Register 0 */
#define MSC1_KRST0	(*( MSC0_KRST0_type *) 0xf00027f4u)	/* Kernel Reset Register 0 */

typedef volatile union
{
	struct
	{ 
		unsigned int RST            : 1;	/* Kernel Reset */
		unsigned int                : 31;
	} B;
	int I;
	unsigned int U;

} MSC0_KRST1_type;
#define MSC0_KRST1	(*( MSC0_KRST1_type *) 0xf00026f0u)	/* Kernel Reset Register 1 */
#define MSC1_KRST1	(*( MSC0_KRST1_type *) 0xf00027f0u)	/* Kernel Reset Register 1 */

typedef volatile union
{
	struct
	{ 
		unsigned int CLR            : 1;	/* Kernel Reset Status Clear */
		unsigned int                : 31;
	} B;
	int I;
	unsigned int U;

} MSC0_KRSTCLR_type;
#define MSC0_KRSTCLR	(*( MSC0_KRSTCLR_type *) 0xf00026ecu)	/* Kernel Reset Status Clear Register */
#define MSC1_KRSTCLR	(*( MSC0_KRSTCLR_type *) 0xf00027ecu)	/* Kernel Reset Status Clear Register */

typedef volatile union
{
	struct
	{ 
		unsigned int CLP            : 1;	/* FCLP Line Polarity */
		unsigned int SLP            : 1;	/* SOP Line Polarity */
		unsigned int CSLP           : 1;	/* Chip Selection Lines Polarity */
		unsigned int ILP            : 1;	/* SDI Line Polarity */
		unsigned int                : 4;
		unsigned int CLKCTRL        : 1;	/* Clock Control */
		unsigned int CSL            : 2;	/* Chip Enable Selection for ENL */
		unsigned int CSH            : 2;	/* Chip Enable Selection for ENH */
		unsigned int CSC            : 2;	/* Chip Enable Selection for ENC */
		unsigned int                : 1;
		unsigned int SDISEL         : 3;	/* Serial Data Input Selection */
		unsigned int                : 13;
	} B;
	int I;
	unsigned int U;

} MSC0_OCR_type;
#define MSC0_OCR	(*( MSC0_OCR_type *) 0xf000264cu)	/* Output Control Register */
#define MSC1_OCR	(*( MSC0_OCR_type *) 0xf000274cu)	/* Output Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32                : 24;
		unsigned __sfrbit32 SUS            : 4;	/* OCDS Suspend Control */
		unsigned __sfrbit32 SUS_P          : 1;	/* SUS Write Protection */
		/* const */ unsigned __sfrbit32 SUSSTA         : 1;	/* Suspend State */
		unsigned __sfrbit32                : 2;
	} B;
	int I;
	unsigned int U;

} MSC0_OCS_type;
#define MSC0_OCS	(*( MSC0_OCS_type *) 0xf00026e8u)	/* OCDS Control and Status */
#define MSC1_OCS	(*( MSC0_OCS_type *) 0xf00027e8u)	/* OCDS Control and Status */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int DATA           : 8;	/* Received Data */
		unsigned int                : 8;
		/* const */ unsigned int V              : 1;	/* Valid Bit */
		/* const */ unsigned int P              : 1;	/* Parity Bit */
		unsigned int C              : 1;	/* Clear Bit */
		/* const */ unsigned int LABF           : 2;	/* Lower Address Bit Field */
		/* const */ unsigned int IPF            : 1;	/* Internal Parity Flag */
		/* const */ unsigned int PERR           : 1;	/* Parity Error */
		unsigned int                : 9;
	} B;
	int I;
	unsigned int U;

} MSC0_UD0_type;
#define MSC0_UD0	(*( MSC0_UD0_type *) 0xf0002630u)	/* Upstream Data Register 0 */
#define MSC0_UD1	(*( MSC0_UD0_type *) 0xf0002634u)	/* Upstream Data Register 1 */
#define MSC0_UD2	(*( MSC0_UD0_type *) 0xf0002638u)	/* Upstream Data Register 2 */
#define MSC0_UD3	(*( MSC0_UD0_type *) 0xf000263cu)	/* Upstream Data Register 3 */
#define MSC1_UD0	(*( MSC0_UD0_type *) 0xf0002730u)	/* Upstream Data Register 0 */
#define MSC1_UD1	(*( MSC0_UD0_type *) 0xf0002734u)	/* Upstream Data Register 1 */
#define MSC1_UD2	(*( MSC0_UD0_type *) 0xf0002738u)	/* Upstream Data Register 2 */
#define MSC1_UD3	(*( MSC0_UD0_type *) 0xf000273cu)	/* Upstream Data Register 3 */

typedef volatile union
{
	struct
	{ 
		unsigned int USTOPRE        : 4;	/* Upstream Timeout Prescaler */
		unsigned int USTOVAL        : 4;	/* Upstream Timeout Value */
		unsigned int USTOEN         : 1;	/* Upstream Timeout Interrupt Enable */
		/* const */ unsigned int USTF           : 1;	/* Upstream Timeout Flag */
		unsigned int USTC           : 1;	/* Upstream Timout Clear */
		unsigned int USTS           : 1;	/* Upstream Timout Set */
		unsigned int                : 1;
		unsigned int UTASR          : 1;	/* Upstream Timout Alternate Service Request */
		unsigned int USTOIP         : 2;	/* Upstream Timout Interrupt Node Pointer */
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} MSC0_USCE_type;
#define MSC0_USCE	(*( MSC0_USCE_type *) 0xf000265cu)	/* Upstream Control Enhanced Register 1 */
#define MSC1_USCE	(*( MSC0_USCE_type *) 0xf000275cu)	/* Upstream Control Enhanced Register 1 */

typedef volatile union
{
	struct
	{ 
		unsigned int UFT            : 1;	/* Upstream Channel Frame Type */
		unsigned int URR            : 3;	/* Upstream Channel Receiving Rate */
		unsigned int PCTR           : 1;	/* Parity Control */
		unsigned int SRDC           : 1;	/* Service Request Delay Control */
		unsigned int                : 10;
		/* const */ unsigned int UC             : 5;	/* Upstream Counter */
		unsigned int                : 11;
	} B;
	int I;
	unsigned int U;

} MSC0_USR_type;
#define MSC0_USR	(*( MSC0_USR_type *) 0xf0002610u)	/* Upstream Status Register */
#define MSC1_USR	(*( MSC0_USR_type *) 0xf0002710u)	/* Upstream Status Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int Reserved       : 32;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} MSC1_ACCEN1_type;
#define MSC1_ACCEN1	(*( MSC1_ACCEN1_type *) 0xf00027f8u)	/* Access Enable Register 1 */


/* MultiCAN */
typedef volatile union
{
	struct
	{ 
		unsigned int EN0            : 1;	/* Access Enable for Master TAG ID 0 */
		unsigned int EN1            : 1;	/* Access Enable for Master TAG ID 1 */
		unsigned int EN2            : 1;	/* Access Enable for Master TAG ID 2 */
		unsigned int EN3            : 1;	/* Access Enable for Master TAG ID 3 */
		unsigned int EN4            : 1;	/* Access Enable for Master TAG ID 4 */
		unsigned int EN5            : 1;	/* Access Enable for Master TAG ID 5 */
		unsigned int EN6            : 1;	/* Access Enable for Master TAG ID 6 */
		unsigned int EN7            : 1;	/* Access Enable for Master TAG ID 7 */
		unsigned int EN8            : 1;	/* Access Enable for Master TAG ID 8 */
		unsigned int EN9            : 1;	/* Access Enable for Master TAG ID 9 */
		unsigned int EN10           : 1;	/* Access Enable for Master TAG ID 10 */
		unsigned int EN11           : 1;	/* Access Enable for Master TAG ID 11 */
		unsigned int EN12           : 1;	/* Access Enable for Master TAG ID 12 */
		unsigned int EN13           : 1;	/* Access Enable for Master TAG ID 13 */
		unsigned int EN14           : 1;	/* Access Enable for Master TAG ID 14 */
		unsigned int EN15           : 1;	/* Access Enable for Master TAG ID 15 */
		unsigned int EN16           : 1;	/* Access Enable for Master TAG ID 16 */
		unsigned int EN17           : 1;	/* Access Enable for Master TAG ID 17 */
		unsigned int EN18           : 1;	/* Access Enable for Master TAG ID 18 */
		unsigned int EN19           : 1;	/* Access Enable for Master TAG ID 19 */
		unsigned int EN20           : 1;	/* Access Enable for Master TAG ID 20 */
		unsigned int EN21           : 1;	/* Access Enable for Master TAG ID 21 */
		unsigned int EN22           : 1;	/* Access Enable for Master TAG ID 22 */
		unsigned int EN23           : 1;	/* Access Enable for Master TAG ID 23 */
		unsigned int EN24           : 1;	/* Access Enable for Master TAG ID 24 */
		unsigned int EN25           : 1;	/* Access Enable for Master TAG ID 25 */
		unsigned int EN26           : 1;	/* Access Enable for Master TAG ID 26 */
		unsigned int EN27           : 1;	/* Access Enable for Master TAG ID 27 */
		unsigned int EN28           : 1;	/* Access Enable for Master TAG ID 28 */
		unsigned int EN29           : 1;	/* Access Enable for Master TAG ID 29 */
		unsigned int EN30           : 1;	/* Access Enable for Master TAG ID 30 */
		unsigned int EN31           : 1;	/* Access Enable for Master TAG ID 31 */
	} B;
	int I;
	unsigned int U;

} CAN_ACCEN0_type;
#define CAN_ACCEN0	(*( CAN_ACCEN0_type *) 0xf00180fcu)	/* Access Enable Register 0 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int Reserved       : 32;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} CAN_ACCEN1_type;
#define CAN_ACCEN1	(*( CAN_ACCEN1_type *) 0xf00180f8u)	/* Access Enable Register 1 */

typedef volatile union
{
	struct
	{ 
		unsigned int DISR           : 1;	/* Module Disable Request Bit */
		/* const */ unsigned int DISS           : 1;	/* Module Disable Status Bit */
		unsigned int                : 1;
		unsigned int EDIS           : 1;	/* Sleep Mode Enable Control */
		unsigned int                : 28;
	} B;
	int I;
	unsigned int U;

} CAN_CLC_type;
#define CAN_CLC	(*( CAN_CLC_type *) 0xf0018000u)	/* CAN Clock Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int DB0            : 8;	/* Data Byte 0 of Message Object n */
		unsigned int DB1            : 8;	/* Data Byte 1 of Message Object n */
		unsigned int DB2            : 8;	/* Data Byte 2 of Message Object n */
		unsigned int DB3            : 8;	/* Data Byte 3 of Message Object n */
	} B;
	int I;
	unsigned int U;

} CAN_EM0ODATA3_type;
#define CAN_EM0ODATA3	(*( CAN_EM0ODATA3_type *) 0xf001900cu)	/* Extended Message Object 0 Data 3 Register */
#define CAN_EM100ODATA3	(*( CAN_EM0ODATA3_type *) 0xf0019c8cu)	/* Extended Message Object 100 Data 3 Register */
#define CAN_EM101ODATA3	(*( CAN_EM0ODATA3_type *) 0xf0019cacu)	/* Extended Message Object 101 Data 3 Register */
#define CAN_EM102ODATA3	(*( CAN_EM0ODATA3_type *) 0xf0019cccu)	/* Extended Message Object 102 Data 3 Register */
#define CAN_EM103ODATA3	(*( CAN_EM0ODATA3_type *) 0xf0019cecu)	/* Extended Message Object 103 Data 3 Register */
#define CAN_EM104ODATA3	(*( CAN_EM0ODATA3_type *) 0xf0019d0cu)	/* Extended Message Object 104 Data 3 Register */
#define CAN_EM105ODATA3	(*( CAN_EM0ODATA3_type *) 0xf0019d2cu)	/* Extended Message Object 105 Data 3 Register */
#define CAN_EM106ODATA3	(*( CAN_EM0ODATA3_type *) 0xf0019d4cu)	/* Extended Message Object 106 Data 3 Register */
#define CAN_EM107ODATA3	(*( CAN_EM0ODATA3_type *) 0xf0019d6cu)	/* Extended Message Object 107 Data 3 Register */
#define CAN_EM108ODATA3	(*( CAN_EM0ODATA3_type *) 0xf0019d8cu)	/* Extended Message Object 108 Data 3 Register */
#define CAN_EM109ODATA3	(*( CAN_EM0ODATA3_type *) 0xf0019dacu)	/* Extended Message Object 109 Data 3 Register */
#define CAN_EM10ODATA3	(*( CAN_EM0ODATA3_type *) 0xf001914cu)	/* Extended Message Object 10 Data 3 Register */
#define CAN_EM110ODATA3	(*( CAN_EM0ODATA3_type *) 0xf0019dccu)	/* Extended Message Object 110 Data 3 Register */
#define CAN_EM111ODATA3	(*( CAN_EM0ODATA3_type *) 0xf0019decu)	/* Extended Message Object 111 Data 3 Register */
#define CAN_EM112ODATA3	(*( CAN_EM0ODATA3_type *) 0xf0019e0cu)	/* Extended Message Object 112 Data 3 Register */
#define CAN_EM113ODATA3	(*( CAN_EM0ODATA3_type *) 0xf0019e2cu)	/* Extended Message Object 113 Data 3 Register */
#define CAN_EM114ODATA3	(*( CAN_EM0ODATA3_type *) 0xf0019e4cu)	/* Extended Message Object 114 Data 3 Register */
#define CAN_EM115ODATA3	(*( CAN_EM0ODATA3_type *) 0xf0019e6cu)	/* Extended Message Object 115 Data 3 Register */
#define CAN_EM116ODATA3	(*( CAN_EM0ODATA3_type *) 0xf0019e8cu)	/* Extended Message Object 116 Data 3 Register */
#define CAN_EM117ODATA3	(*( CAN_EM0ODATA3_type *) 0xf0019eacu)	/* Extended Message Object 117 Data 3 Register */
#define CAN_EM118ODATA3	(*( CAN_EM0ODATA3_type *) 0xf0019eccu)	/* Extended Message Object 118 Data 3 Register */
#define CAN_EM119ODATA3	(*( CAN_EM0ODATA3_type *) 0xf0019eecu)	/* Extended Message Object 119 Data 3 Register */
#define CAN_EM11ODATA3	(*( CAN_EM0ODATA3_type *) 0xf001916cu)	/* Extended Message Object 11 Data 3 Register */
#define CAN_EM120ODATA3	(*( CAN_EM0ODATA3_type *) 0xf0019f0cu)	/* Extended Message Object 120 Data 3 Register */
#define CAN_EM121ODATA3	(*( CAN_EM0ODATA3_type *) 0xf0019f2cu)	/* Extended Message Object 121 Data 3 Register */
#define CAN_EM122ODATA3	(*( CAN_EM0ODATA3_type *) 0xf0019f4cu)	/* Extended Message Object 122 Data 3 Register */
#define CAN_EM123ODATA3	(*( CAN_EM0ODATA3_type *) 0xf0019f6cu)	/* Extended Message Object 123 Data 3 Register */
#define CAN_EM124ODATA3	(*( CAN_EM0ODATA3_type *) 0xf0019f8cu)	/* Extended Message Object 124 Data 3 Register */
#define CAN_EM125ODATA3	(*( CAN_EM0ODATA3_type *) 0xf0019facu)	/* Extended Message Object 125 Data 3 Register */
#define CAN_EM126ODATA3	(*( CAN_EM0ODATA3_type *) 0xf0019fccu)	/* Extended Message Object 126 Data 3 Register */
#define CAN_EM127ODATA3	(*( CAN_EM0ODATA3_type *) 0xf0019fecu)	/* Extended Message Object 127 Data 3 Register */
#define CAN_EM128ODATA3	(*( CAN_EM0ODATA3_type *) 0xf001a00cu)	/* Extended Message Object 128 Data 3 Register */
#define CAN_EM129ODATA3	(*( CAN_EM0ODATA3_type *) 0xf001a02cu)	/* Extended Message Object 129 Data 3 Register */
#define CAN_EM12ODATA3	(*( CAN_EM0ODATA3_type *) 0xf001918cu)	/* Extended Message Object 12 Data 3 Register */
#define CAN_EM130ODATA3	(*( CAN_EM0ODATA3_type *) 0xf001a04cu)	/* Extended Message Object 130 Data 3 Register */
#define CAN_EM131ODATA3	(*( CAN_EM0ODATA3_type *) 0xf001a06cu)	/* Extended Message Object 131 Data 3 Register */
#define CAN_EM132ODATA3	(*( CAN_EM0ODATA3_type *) 0xf001a08cu)	/* Extended Message Object 132 Data 3 Register */
#define CAN_EM133ODATA3	(*( CAN_EM0ODATA3_type *) 0xf001a0acu)	/* Extended Message Object 133 Data 3 Register */
#define CAN_EM134ODATA3	(*( CAN_EM0ODATA3_type *) 0xf001a0ccu)	/* Extended Message Object 134 Data 3 Register */
#define CAN_EM135ODATA3	(*( CAN_EM0ODATA3_type *) 0xf001a0ecu)	/* Extended Message Object 135 Data 3 Register */
#define CAN_EM136ODATA3	(*( CAN_EM0ODATA3_type *) 0xf001a10cu)	/* Extended Message Object 136 Data 3 Register */
#define CAN_EM137ODATA3	(*( CAN_EM0ODATA3_type *) 0xf001a12cu)	/* Extended Message Object 137 Data 3 Register */
#define CAN_EM138ODATA3	(*( CAN_EM0ODATA3_type *) 0xf001a14cu)	/* Extended Message Object 138 Data 3 Register */
#define CAN_EM139ODATA3	(*( CAN_EM0ODATA3_type *) 0xf001a16cu)	/* Extended Message Object 139 Data 3 Register */
#define CAN_EM13ODATA3	(*( CAN_EM0ODATA3_type *) 0xf00191acu)	/* Extended Message Object 13 Data 3 Register */
#define CAN_EM140ODATA3	(*( CAN_EM0ODATA3_type *) 0xf001a18cu)	/* Extended Message Object 140 Data 3 Register */
#define CAN_EM141ODATA3	(*( CAN_EM0ODATA3_type *) 0xf001a1acu)	/* Extended Message Object 141 Data 3 Register */
#define CAN_EM142ODATA3	(*( CAN_EM0ODATA3_type *) 0xf001a1ccu)	/* Extended Message Object 142 Data 3 Register */
#define CAN_EM143ODATA3	(*( CAN_EM0ODATA3_type *) 0xf001a1ecu)	/* Extended Message Object 143 Data 3 Register */
#define CAN_EM144ODATA3	(*( CAN_EM0ODATA3_type *) 0xf001a20cu)	/* Extended Message Object 144 Data 3 Register */
#define CAN_EM145ODATA3	(*( CAN_EM0ODATA3_type *) 0xf001a22cu)	/* Extended Message Object 145 Data 3 Register */
#define CAN_EM146ODATA3	(*( CAN_EM0ODATA3_type *) 0xf001a24cu)	/* Extended Message Object 146 Data 3 Register */
#define CAN_EM147ODATA3	(*( CAN_EM0ODATA3_type *) 0xf001a26cu)	/* Extended Message Object 147 Data 3 Register */
#define CAN_EM148ODATA3	(*( CAN_EM0ODATA3_type *) 0xf001a28cu)	/* Extended Message Object 148 Data 3 Register */
#define CAN_EM149ODATA3	(*( CAN_EM0ODATA3_type *) 0xf001a2acu)	/* Extended Message Object 149 Data 3 Register */
#define CAN_EM14ODATA3	(*( CAN_EM0ODATA3_type *) 0xf00191ccu)	/* Extended Message Object 14 Data 3 Register */
#define CAN_EM150ODATA3	(*( CAN_EM0ODATA3_type *) 0xf001a2ccu)	/* Extended Message Object 150 Data 3 Register */
#define CAN_EM151ODATA3	(*( CAN_EM0ODATA3_type *) 0xf001a2ecu)	/* Extended Message Object 151 Data 3 Register */
#define CAN_EM152ODATA3	(*( CAN_EM0ODATA3_type *) 0xf001a30cu)	/* Extended Message Object 152 Data 3 Register */
#define CAN_EM153ODATA3	(*( CAN_EM0ODATA3_type *) 0xf001a32cu)	/* Extended Message Object 153 Data 3 Register */
#define CAN_EM154ODATA3	(*( CAN_EM0ODATA3_type *) 0xf001a34cu)	/* Extended Message Object 154 Data 3 Register */
#define CAN_EM155ODATA3	(*( CAN_EM0ODATA3_type *) 0xf001a36cu)	/* Extended Message Object 155 Data 3 Register */
#define CAN_EM156ODATA3	(*( CAN_EM0ODATA3_type *) 0xf001a38cu)	/* Extended Message Object 156 Data 3 Register */
#define CAN_EM157ODATA3	(*( CAN_EM0ODATA3_type *) 0xf001a3acu)	/* Extended Message Object 157 Data 3 Register */
#define CAN_EM158ODATA3	(*( CAN_EM0ODATA3_type *) 0xf001a3ccu)	/* Extended Message Object 158 Data 3 Register */
#define CAN_EM159ODATA3	(*( CAN_EM0ODATA3_type *) 0xf001a3ecu)	/* Extended Message Object 159 Data 3 Register */
#define CAN_EM15ODATA3	(*( CAN_EM0ODATA3_type *) 0xf00191ecu)	/* Extended Message Object 15 Data 3 Register */
#define CAN_EM160ODATA3	(*( CAN_EM0ODATA3_type *) 0xf001a40cu)	/* Extended Message Object 160 Data 3 Register */
#define CAN_EM161ODATA3	(*( CAN_EM0ODATA3_type *) 0xf001a42cu)	/* Extended Message Object 161 Data 3 Register */
#define CAN_EM162ODATA3	(*( CAN_EM0ODATA3_type *) 0xf001a44cu)	/* Extended Message Object 162 Data 3 Register */
#define CAN_EM163ODATA3	(*( CAN_EM0ODATA3_type *) 0xf001a46cu)	/* Extended Message Object 163 Data 3 Register */
#define CAN_EM164ODATA3	(*( CAN_EM0ODATA3_type *) 0xf001a48cu)	/* Extended Message Object 164 Data 3 Register */
#define CAN_EM165ODATA3	(*( CAN_EM0ODATA3_type *) 0xf001a4acu)	/* Extended Message Object 165 Data 3 Register */
#define CAN_EM166ODATA3	(*( CAN_EM0ODATA3_type *) 0xf001a4ccu)	/* Extended Message Object 166 Data 3 Register */
#define CAN_EM167ODATA3	(*( CAN_EM0ODATA3_type *) 0xf001a4ecu)	/* Extended Message Object 167 Data 3 Register */
#define CAN_EM168ODATA3	(*( CAN_EM0ODATA3_type *) 0xf001a50cu)	/* Extended Message Object 168 Data 3 Register */
#define CAN_EM169ODATA3	(*( CAN_EM0ODATA3_type *) 0xf001a52cu)	/* Extended Message Object 169 Data 3 Register */
#define CAN_EM16ODATA3	(*( CAN_EM0ODATA3_type *) 0xf001920cu)	/* Extended Message Object 16 Data 3 Register */
#define CAN_EM170ODATA3	(*( CAN_EM0ODATA3_type *) 0xf001a54cu)	/* Extended Message Object 170 Data 3 Register */
#define CAN_EM171ODATA3	(*( CAN_EM0ODATA3_type *) 0xf001a56cu)	/* Extended Message Object 171 Data 3 Register */
#define CAN_EM172ODATA3	(*( CAN_EM0ODATA3_type *) 0xf001a58cu)	/* Extended Message Object 172 Data 3 Register */
#define CAN_EM173ODATA3	(*( CAN_EM0ODATA3_type *) 0xf001a5acu)	/* Extended Message Object 173 Data 3 Register */
#define CAN_EM174ODATA3	(*( CAN_EM0ODATA3_type *) 0xf001a5ccu)	/* Extended Message Object 174 Data 3 Register */
#define CAN_EM175ODATA3	(*( CAN_EM0ODATA3_type *) 0xf001a5ecu)	/* Extended Message Object 175 Data 3 Register */
#define CAN_EM176ODATA3	(*( CAN_EM0ODATA3_type *) 0xf001a60cu)	/* Extended Message Object 176 Data 3 Register */
#define CAN_EM177ODATA3	(*( CAN_EM0ODATA3_type *) 0xf001a62cu)	/* Extended Message Object 177 Data 3 Register */
#define CAN_EM178ODATA3	(*( CAN_EM0ODATA3_type *) 0xf001a64cu)	/* Extended Message Object 178 Data 3 Register */
#define CAN_EM179ODATA3	(*( CAN_EM0ODATA3_type *) 0xf001a66cu)	/* Extended Message Object 179 Data 3 Register */
#define CAN_EM17ODATA3	(*( CAN_EM0ODATA3_type *) 0xf001922cu)	/* Extended Message Object 17 Data 3 Register */
#define CAN_EM180ODATA3	(*( CAN_EM0ODATA3_type *) 0xf001a68cu)	/* Extended Message Object 180 Data 3 Register */
#define CAN_EM181ODATA3	(*( CAN_EM0ODATA3_type *) 0xf001a6acu)	/* Extended Message Object 181 Data 3 Register */
#define CAN_EM182ODATA3	(*( CAN_EM0ODATA3_type *) 0xf001a6ccu)	/* Extended Message Object 182 Data 3 Register */
#define CAN_EM183ODATA3	(*( CAN_EM0ODATA3_type *) 0xf001a6ecu)	/* Extended Message Object 183 Data 3 Register */
#define CAN_EM184ODATA3	(*( CAN_EM0ODATA3_type *) 0xf001a70cu)	/* Extended Message Object 184 Data 3 Register */
#define CAN_EM185ODATA3	(*( CAN_EM0ODATA3_type *) 0xf001a72cu)	/* Extended Message Object 185 Data 3 Register */
#define CAN_EM186ODATA3	(*( CAN_EM0ODATA3_type *) 0xf001a74cu)	/* Extended Message Object 186 Data 3 Register */
#define CAN_EM187ODATA3	(*( CAN_EM0ODATA3_type *) 0xf001a76cu)	/* Extended Message Object 187 Data 3 Register */
#define CAN_EM188ODATA3	(*( CAN_EM0ODATA3_type *) 0xf001a78cu)	/* Extended Message Object 188 Data 3 Register */
#define CAN_EM189ODATA3	(*( CAN_EM0ODATA3_type *) 0xf001a7acu)	/* Extended Message Object 189 Data 3 Register */
#define CAN_EM18ODATA3	(*( CAN_EM0ODATA3_type *) 0xf001924cu)	/* Extended Message Object 18 Data 3 Register */
#define CAN_EM190ODATA3	(*( CAN_EM0ODATA3_type *) 0xf001a7ccu)	/* Extended Message Object 190 Data 3 Register */
#define CAN_EM191ODATA3	(*( CAN_EM0ODATA3_type *) 0xf001a7ecu)	/* Extended Message Object 191 Data 3 Register */
#define CAN_EM192ODATA3	(*( CAN_EM0ODATA3_type *) 0xf001a80cu)	/* Extended Message Object 192 Data 3 Register */
#define CAN_EM193ODATA3	(*( CAN_EM0ODATA3_type *) 0xf001a82cu)	/* Extended Message Object 193 Data 3 Register */
#define CAN_EM194ODATA3	(*( CAN_EM0ODATA3_type *) 0xf001a84cu)	/* Extended Message Object 194 Data 3 Register */
#define CAN_EM195ODATA3	(*( CAN_EM0ODATA3_type *) 0xf001a86cu)	/* Extended Message Object 195 Data 3 Register */
#define CAN_EM196ODATA3	(*( CAN_EM0ODATA3_type *) 0xf001a88cu)	/* Extended Message Object 196 Data 3 Register */
#define CAN_EM197ODATA3	(*( CAN_EM0ODATA3_type *) 0xf001a8acu)	/* Extended Message Object 197 Data 3 Register */
#define CAN_EM198ODATA3	(*( CAN_EM0ODATA3_type *) 0xf001a8ccu)	/* Extended Message Object 198 Data 3 Register */
#define CAN_EM199ODATA3	(*( CAN_EM0ODATA3_type *) 0xf001a8ecu)	/* Extended Message Object 199 Data 3 Register */
#define CAN_EM19ODATA3	(*( CAN_EM0ODATA3_type *) 0xf001926cu)	/* Extended Message Object 19 Data 3 Register */
#define CAN_EM1ODATA3	(*( CAN_EM0ODATA3_type *) 0xf001902cu)	/* Extended Message Object 1 Data 3 Register */
#define CAN_EM200ODATA3	(*( CAN_EM0ODATA3_type *) 0xf001a90cu)	/* Extended Message Object 200 Data 3 Register */
#define CAN_EM201ODATA3	(*( CAN_EM0ODATA3_type *) 0xf001a92cu)	/* Extended Message Object 201 Data 3 Register */
#define CAN_EM202ODATA3	(*( CAN_EM0ODATA3_type *) 0xf001a94cu)	/* Extended Message Object 202 Data 3 Register */
#define CAN_EM203ODATA3	(*( CAN_EM0ODATA3_type *) 0xf001a96cu)	/* Extended Message Object 203 Data 3 Register */
#define CAN_EM204ODATA3	(*( CAN_EM0ODATA3_type *) 0xf001a98cu)	/* Extended Message Object 204 Data 3 Register */
#define CAN_EM205ODATA3	(*( CAN_EM0ODATA3_type *) 0xf001a9acu)	/* Extended Message Object 205 Data 3 Register */
#define CAN_EM206ODATA3	(*( CAN_EM0ODATA3_type *) 0xf001a9ccu)	/* Extended Message Object 206 Data 3 Register */
#define CAN_EM207ODATA3	(*( CAN_EM0ODATA3_type *) 0xf001a9ecu)	/* Extended Message Object 207 Data 3 Register */
#define CAN_EM208ODATA3	(*( CAN_EM0ODATA3_type *) 0xf001aa0cu)	/* Extended Message Object 208 Data 3 Register */
#define CAN_EM209ODATA3	(*( CAN_EM0ODATA3_type *) 0xf001aa2cu)	/* Extended Message Object 209 Data 3 Register */
#define CAN_EM20ODATA3	(*( CAN_EM0ODATA3_type *) 0xf001928cu)	/* Extended Message Object 20 Data 3 Register */
#define CAN_EM210ODATA3	(*( CAN_EM0ODATA3_type *) 0xf001aa4cu)	/* Extended Message Object 210 Data 3 Register */
#define CAN_EM211ODATA3	(*( CAN_EM0ODATA3_type *) 0xf001aa6cu)	/* Extended Message Object 211 Data 3 Register */
#define CAN_EM212ODATA3	(*( CAN_EM0ODATA3_type *) 0xf001aa8cu)	/* Extended Message Object 212 Data 3 Register */
#define CAN_EM213ODATA3	(*( CAN_EM0ODATA3_type *) 0xf001aaacu)	/* Extended Message Object 213 Data 3 Register */
#define CAN_EM214ODATA3	(*( CAN_EM0ODATA3_type *) 0xf001aaccu)	/* Extended Message Object 214 Data 3 Register */
#define CAN_EM215ODATA3	(*( CAN_EM0ODATA3_type *) 0xf001aaecu)	/* Extended Message Object 215 Data 3 Register */
#define CAN_EM216ODATA3	(*( CAN_EM0ODATA3_type *) 0xf001ab0cu)	/* Extended Message Object 216 Data 3 Register */
#define CAN_EM217ODATA3	(*( CAN_EM0ODATA3_type *) 0xf001ab2cu)	/* Extended Message Object 217 Data 3 Register */
#define CAN_EM218ODATA3	(*( CAN_EM0ODATA3_type *) 0xf001ab4cu)	/* Extended Message Object 218 Data 3 Register */
#define CAN_EM219ODATA3	(*( CAN_EM0ODATA3_type *) 0xf001ab6cu)	/* Extended Message Object 219 Data 3 Register */
#define CAN_EM21ODATA3	(*( CAN_EM0ODATA3_type *) 0xf00192acu)	/* Extended Message Object 21 Data 3 Register */
#define CAN_EM220ODATA3	(*( CAN_EM0ODATA3_type *) 0xf001ab8cu)	/* Extended Message Object 220 Data 3 Register */
#define CAN_EM221ODATA3	(*( CAN_EM0ODATA3_type *) 0xf001abacu)	/* Extended Message Object 221 Data 3 Register */
#define CAN_EM222ODATA3	(*( CAN_EM0ODATA3_type *) 0xf001abccu)	/* Extended Message Object 222 Data 3 Register */
#define CAN_EM223ODATA3	(*( CAN_EM0ODATA3_type *) 0xf001abecu)	/* Extended Message Object 223 Data 3 Register */
#define CAN_EM224ODATA3	(*( CAN_EM0ODATA3_type *) 0xf001ac0cu)	/* Extended Message Object 224 Data 3 Register */
#define CAN_EM225ODATA3	(*( CAN_EM0ODATA3_type *) 0xf001ac2cu)	/* Extended Message Object 225 Data 3 Register */
#define CAN_EM226ODATA3	(*( CAN_EM0ODATA3_type *) 0xf001ac4cu)	/* Extended Message Object 226 Data 3 Register */
#define CAN_EM227ODATA3	(*( CAN_EM0ODATA3_type *) 0xf001ac6cu)	/* Extended Message Object 227 Data 3 Register */
#define CAN_EM228ODATA3	(*( CAN_EM0ODATA3_type *) 0xf001ac8cu)	/* Extended Message Object 228 Data 3 Register */
#define CAN_EM229ODATA3	(*( CAN_EM0ODATA3_type *) 0xf001acacu)	/* Extended Message Object 229 Data 3 Register */
#define CAN_EM22ODATA3	(*( CAN_EM0ODATA3_type *) 0xf00192ccu)	/* Extended Message Object 22 Data 3 Register */
#define CAN_EM230ODATA3	(*( CAN_EM0ODATA3_type *) 0xf001acccu)	/* Extended Message Object 230 Data 3 Register */
#define CAN_EM231ODATA3	(*( CAN_EM0ODATA3_type *) 0xf001acecu)	/* Extended Message Object 231 Data 3 Register */
#define CAN_EM232ODATA3	(*( CAN_EM0ODATA3_type *) 0xf001ad0cu)	/* Extended Message Object 232 Data 3 Register */
#define CAN_EM233ODATA3	(*( CAN_EM0ODATA3_type *) 0xf001ad2cu)	/* Extended Message Object 233 Data 3 Register */
#define CAN_EM234ODATA3	(*( CAN_EM0ODATA3_type *) 0xf001ad4cu)	/* Extended Message Object 234 Data 3 Register */
#define CAN_EM235ODATA3	(*( CAN_EM0ODATA3_type *) 0xf001ad6cu)	/* Extended Message Object 235 Data 3 Register */
#define CAN_EM236ODATA3	(*( CAN_EM0ODATA3_type *) 0xf001ad8cu)	/* Extended Message Object 236 Data 3 Register */
#define CAN_EM237ODATA3	(*( CAN_EM0ODATA3_type *) 0xf001adacu)	/* Extended Message Object 237 Data 3 Register */
#define CAN_EM238ODATA3	(*( CAN_EM0ODATA3_type *) 0xf001adccu)	/* Extended Message Object 238 Data 3 Register */
#define CAN_EM239ODATA3	(*( CAN_EM0ODATA3_type *) 0xf001adecu)	/* Extended Message Object 239 Data 3 Register */
#define CAN_EM23ODATA3	(*( CAN_EM0ODATA3_type *) 0xf00192ecu)	/* Extended Message Object 23 Data 3 Register */
#define CAN_EM240ODATA3	(*( CAN_EM0ODATA3_type *) 0xf001ae0cu)	/* Extended Message Object 240 Data 3 Register */
#define CAN_EM241ODATA3	(*( CAN_EM0ODATA3_type *) 0xf001ae2cu)	/* Extended Message Object 241 Data 3 Register */
#define CAN_EM242ODATA3	(*( CAN_EM0ODATA3_type *) 0xf001ae4cu)	/* Extended Message Object 242 Data 3 Register */
#define CAN_EM243ODATA3	(*( CAN_EM0ODATA3_type *) 0xf001ae6cu)	/* Extended Message Object 243 Data 3 Register */
#define CAN_EM244ODATA3	(*( CAN_EM0ODATA3_type *) 0xf001ae8cu)	/* Extended Message Object 244 Data 3 Register */
#define CAN_EM245ODATA3	(*( CAN_EM0ODATA3_type *) 0xf001aeacu)	/* Extended Message Object 245 Data 3 Register */
#define CAN_EM246ODATA3	(*( CAN_EM0ODATA3_type *) 0xf001aeccu)	/* Extended Message Object 246 Data 3 Register */
#define CAN_EM247ODATA3	(*( CAN_EM0ODATA3_type *) 0xf001aeecu)	/* Extended Message Object 247 Data 3 Register */
#define CAN_EM248ODATA3	(*( CAN_EM0ODATA3_type *) 0xf001af0cu)	/* Extended Message Object 248 Data 3 Register */
#define CAN_EM249ODATA3	(*( CAN_EM0ODATA3_type *) 0xf001af2cu)	/* Extended Message Object 249 Data 3 Register */
#define CAN_EM24ODATA3	(*( CAN_EM0ODATA3_type *) 0xf001930cu)	/* Extended Message Object 24 Data 3 Register */
#define CAN_EM250ODATA3	(*( CAN_EM0ODATA3_type *) 0xf001af4cu)	/* Extended Message Object 250 Data 3 Register */
#define CAN_EM251ODATA3	(*( CAN_EM0ODATA3_type *) 0xf001af6cu)	/* Extended Message Object 251 Data 3 Register */
#define CAN_EM252ODATA3	(*( CAN_EM0ODATA3_type *) 0xf001af8cu)	/* Extended Message Object 252 Data 3 Register */
#define CAN_EM253ODATA3	(*( CAN_EM0ODATA3_type *) 0xf001afacu)	/* Extended Message Object 253 Data 3 Register */
#define CAN_EM254ODATA3	(*( CAN_EM0ODATA3_type *) 0xf001afccu)	/* Extended Message Object 254 Data 3 Register */
#define CAN_EM255ODATA3	(*( CAN_EM0ODATA3_type *) 0xf001afecu)	/* Extended Message Object 255 Data 3 Register */
#define CAN_EM25ODATA3	(*( CAN_EM0ODATA3_type *) 0xf001932cu)	/* Extended Message Object 25 Data 3 Register */
#define CAN_EM26ODATA3	(*( CAN_EM0ODATA3_type *) 0xf001934cu)	/* Extended Message Object 26 Data 3 Register */
#define CAN_EM27ODATA3	(*( CAN_EM0ODATA3_type *) 0xf001936cu)	/* Extended Message Object 27 Data 3 Register */
#define CAN_EM28ODATA3	(*( CAN_EM0ODATA3_type *) 0xf001938cu)	/* Extended Message Object 28 Data 3 Register */
#define CAN_EM29ODATA3	(*( CAN_EM0ODATA3_type *) 0xf00193acu)	/* Extended Message Object 29 Data 3 Register */
#define CAN_EM2ODATA3	(*( CAN_EM0ODATA3_type *) 0xf001904cu)	/* Extended Message Object 2 Data 3 Register */
#define CAN_EM30ODATA3	(*( CAN_EM0ODATA3_type *) 0xf00193ccu)	/* Extended Message Object 30 Data 3 Register */
#define CAN_EM31ODATA3	(*( CAN_EM0ODATA3_type *) 0xf00193ecu)	/* Extended Message Object 31 Data 3 Register */
#define CAN_EM32ODATA3	(*( CAN_EM0ODATA3_type *) 0xf001940cu)	/* Extended Message Object 32 Data 3 Register */
#define CAN_EM33ODATA3	(*( CAN_EM0ODATA3_type *) 0xf001942cu)	/* Extended Message Object 33 Data 3 Register */
#define CAN_EM34ODATA3	(*( CAN_EM0ODATA3_type *) 0xf001944cu)	/* Extended Message Object 34 Data 3 Register */
#define CAN_EM35ODATA3	(*( CAN_EM0ODATA3_type *) 0xf001946cu)	/* Extended Message Object 35 Data 3 Register */
#define CAN_EM36ODATA3	(*( CAN_EM0ODATA3_type *) 0xf001948cu)	/* Extended Message Object 36 Data 3 Register */
#define CAN_EM37ODATA3	(*( CAN_EM0ODATA3_type *) 0xf00194acu)	/* Extended Message Object 37 Data 3 Register */
#define CAN_EM38ODATA3	(*( CAN_EM0ODATA3_type *) 0xf00194ccu)	/* Extended Message Object 38 Data 3 Register */
#define CAN_EM39ODATA3	(*( CAN_EM0ODATA3_type *) 0xf00194ecu)	/* Extended Message Object 39 Data 3 Register */
#define CAN_EM3ODATA3	(*( CAN_EM0ODATA3_type *) 0xf001906cu)	/* Extended Message Object 3 Data 3 Register */
#define CAN_EM40ODATA3	(*( CAN_EM0ODATA3_type *) 0xf001950cu)	/* Extended Message Object 40 Data 3 Register */
#define CAN_EM41ODATA3	(*( CAN_EM0ODATA3_type *) 0xf001952cu)	/* Extended Message Object 41 Data 3 Register */
#define CAN_EM42ODATA3	(*( CAN_EM0ODATA3_type *) 0xf001954cu)	/* Extended Message Object 42 Data 3 Register */
#define CAN_EM43ODATA3	(*( CAN_EM0ODATA3_type *) 0xf001956cu)	/* Extended Message Object 43 Data 3 Register */
#define CAN_EM44ODATA3	(*( CAN_EM0ODATA3_type *) 0xf001958cu)	/* Extended Message Object 44 Data 3 Register */
#define CAN_EM45ODATA3	(*( CAN_EM0ODATA3_type *) 0xf00195acu)	/* Extended Message Object 45 Data 3 Register */
#define CAN_EM46ODATA3	(*( CAN_EM0ODATA3_type *) 0xf00195ccu)	/* Extended Message Object 46 Data 3 Register */
#define CAN_EM47ODATA3	(*( CAN_EM0ODATA3_type *) 0xf00195ecu)	/* Extended Message Object 47 Data 3 Register */
#define CAN_EM48ODATA3	(*( CAN_EM0ODATA3_type *) 0xf001960cu)	/* Extended Message Object 48 Data 3 Register */
#define CAN_EM49ODATA3	(*( CAN_EM0ODATA3_type *) 0xf001962cu)	/* Extended Message Object 49 Data 3 Register */
#define CAN_EM4ODATA3	(*( CAN_EM0ODATA3_type *) 0xf001908cu)	/* Extended Message Object 4 Data 3 Register */
#define CAN_EM50ODATA3	(*( CAN_EM0ODATA3_type *) 0xf001964cu)	/* Extended Message Object 50 Data 3 Register */
#define CAN_EM51ODATA3	(*( CAN_EM0ODATA3_type *) 0xf001966cu)	/* Extended Message Object 51 Data 3 Register */
#define CAN_EM52ODATA3	(*( CAN_EM0ODATA3_type *) 0xf001968cu)	/* Extended Message Object 52 Data 3 Register */
#define CAN_EM53ODATA3	(*( CAN_EM0ODATA3_type *) 0xf00196acu)	/* Extended Message Object 53 Data 3 Register */
#define CAN_EM54ODATA3	(*( CAN_EM0ODATA3_type *) 0xf00196ccu)	/* Extended Message Object 54 Data 3 Register */
#define CAN_EM55ODATA3	(*( CAN_EM0ODATA3_type *) 0xf00196ecu)	/* Extended Message Object 55 Data 3 Register */
#define CAN_EM56ODATA3	(*( CAN_EM0ODATA3_type *) 0xf001970cu)	/* Extended Message Object 56 Data 3 Register */
#define CAN_EM57ODATA3	(*( CAN_EM0ODATA3_type *) 0xf001972cu)	/* Extended Message Object 57 Data 3 Register */
#define CAN_EM58ODATA3	(*( CAN_EM0ODATA3_type *) 0xf001974cu)	/* Extended Message Object 58 Data 3 Register */
#define CAN_EM59ODATA3	(*( CAN_EM0ODATA3_type *) 0xf001976cu)	/* Extended Message Object 59 Data 3 Register */
#define CAN_EM5ODATA3	(*( CAN_EM0ODATA3_type *) 0xf00190acu)	/* Extended Message Object 5 Data 3 Register */
#define CAN_EM60ODATA3	(*( CAN_EM0ODATA3_type *) 0xf001978cu)	/* Extended Message Object 60 Data 3 Register */
#define CAN_EM61ODATA3	(*( CAN_EM0ODATA3_type *) 0xf00197acu)	/* Extended Message Object 61 Data 3 Register */
#define CAN_EM62ODATA3	(*( CAN_EM0ODATA3_type *) 0xf00197ccu)	/* Extended Message Object 62 Data 3 Register */
#define CAN_EM63ODATA3	(*( CAN_EM0ODATA3_type *) 0xf00197ecu)	/* Extended Message Object 63 Data 3 Register */
#define CAN_EM64ODATA3	(*( CAN_EM0ODATA3_type *) 0xf001980cu)	/* Extended Message Object 64 Data 3 Register */
#define CAN_EM65ODATA3	(*( CAN_EM0ODATA3_type *) 0xf001982cu)	/* Extended Message Object 65 Data 3 Register */
#define CAN_EM66ODATA3	(*( CAN_EM0ODATA3_type *) 0xf001984cu)	/* Extended Message Object 66 Data 3 Register */
#define CAN_EM67ODATA3	(*( CAN_EM0ODATA3_type *) 0xf001986cu)	/* Extended Message Object 67 Data 3 Register */
#define CAN_EM68ODATA3	(*( CAN_EM0ODATA3_type *) 0xf001988cu)	/* Extended Message Object 68 Data 3 Register */
#define CAN_EM69ODATA3	(*( CAN_EM0ODATA3_type *) 0xf00198acu)	/* Extended Message Object 69 Data 3 Register */
#define CAN_EM6ODATA3	(*( CAN_EM0ODATA3_type *) 0xf00190ccu)	/* Extended Message Object 6 Data 3 Register */
#define CAN_EM70ODATA3	(*( CAN_EM0ODATA3_type *) 0xf00198ccu)	/* Extended Message Object 70 Data 3 Register */
#define CAN_EM71ODATA3	(*( CAN_EM0ODATA3_type *) 0xf00198ecu)	/* Extended Message Object 71 Data 3 Register */
#define CAN_EM72ODATA3	(*( CAN_EM0ODATA3_type *) 0xf001990cu)	/* Extended Message Object 72 Data 3 Register */
#define CAN_EM73ODATA3	(*( CAN_EM0ODATA3_type *) 0xf001992cu)	/* Extended Message Object 73 Data 3 Register */
#define CAN_EM74ODATA3	(*( CAN_EM0ODATA3_type *) 0xf001994cu)	/* Extended Message Object 74 Data 3 Register */
#define CAN_EM75ODATA3	(*( CAN_EM0ODATA3_type *) 0xf001996cu)	/* Extended Message Object 75 Data 3 Register */
#define CAN_EM76ODATA3	(*( CAN_EM0ODATA3_type *) 0xf001998cu)	/* Extended Message Object 76 Data 3 Register */
#define CAN_EM77ODATA3	(*( CAN_EM0ODATA3_type *) 0xf00199acu)	/* Extended Message Object 77 Data 3 Register */
#define CAN_EM78ODATA3	(*( CAN_EM0ODATA3_type *) 0xf00199ccu)	/* Extended Message Object 78 Data 3 Register */
#define CAN_EM79ODATA3	(*( CAN_EM0ODATA3_type *) 0xf00199ecu)	/* Extended Message Object 79 Data 3 Register */
#define CAN_EM7ODATA3	(*( CAN_EM0ODATA3_type *) 0xf00190ecu)	/* Extended Message Object 7 Data 3 Register */
#define CAN_EM80ODATA3	(*( CAN_EM0ODATA3_type *) 0xf0019a0cu)	/* Extended Message Object 80 Data 3 Register */
#define CAN_EM81ODATA3	(*( CAN_EM0ODATA3_type *) 0xf0019a2cu)	/* Extended Message Object 81 Data 3 Register */
#define CAN_EM82ODATA3	(*( CAN_EM0ODATA3_type *) 0xf0019a4cu)	/* Extended Message Object 82 Data 3 Register */
#define CAN_EM83ODATA3	(*( CAN_EM0ODATA3_type *) 0xf0019a6cu)	/* Extended Message Object 83 Data 3 Register */
#define CAN_EM84ODATA3	(*( CAN_EM0ODATA3_type *) 0xf0019a8cu)	/* Extended Message Object 84 Data 3 Register */
#define CAN_EM85ODATA3	(*( CAN_EM0ODATA3_type *) 0xf0019aacu)	/* Extended Message Object 85 Data 3 Register */
#define CAN_EM86ODATA3	(*( CAN_EM0ODATA3_type *) 0xf0019accu)	/* Extended Message Object 86 Data 3 Register */
#define CAN_EM87ODATA3	(*( CAN_EM0ODATA3_type *) 0xf0019aecu)	/* Extended Message Object 87 Data 3 Register */
#define CAN_EM88ODATA3	(*( CAN_EM0ODATA3_type *) 0xf0019b0cu)	/* Extended Message Object 88 Data 3 Register */
#define CAN_EM89ODATA3	(*( CAN_EM0ODATA3_type *) 0xf0019b2cu)	/* Extended Message Object 89 Data 3 Register */
#define CAN_EM8ODATA3	(*( CAN_EM0ODATA3_type *) 0xf001910cu)	/* Extended Message Object 8 Data 3 Register */
#define CAN_EM90ODATA3	(*( CAN_EM0ODATA3_type *) 0xf0019b4cu)	/* Extended Message Object 90 Data 3 Register */
#define CAN_EM91ODATA3	(*( CAN_EM0ODATA3_type *) 0xf0019b6cu)	/* Extended Message Object 91 Data 3 Register */
#define CAN_EM92ODATA3	(*( CAN_EM0ODATA3_type *) 0xf0019b8cu)	/* Extended Message Object 92 Data 3 Register */
#define CAN_EM93ODATA3	(*( CAN_EM0ODATA3_type *) 0xf0019bacu)	/* Extended Message Object 93 Data 3 Register */
#define CAN_EM94ODATA3	(*( CAN_EM0ODATA3_type *) 0xf0019bccu)	/* Extended Message Object 94 Data 3 Register */
#define CAN_EM95ODATA3	(*( CAN_EM0ODATA3_type *) 0xf0019becu)	/* Extended Message Object 95 Data 3 Register */
#define CAN_EM96ODATA3	(*( CAN_EM0ODATA3_type *) 0xf0019c0cu)	/* Extended Message Object 96 Data 3 Register */
#define CAN_EM97ODATA3	(*( CAN_EM0ODATA3_type *) 0xf0019c2cu)	/* Extended Message Object 97 Data 3 Register */
#define CAN_EM98ODATA3	(*( CAN_EM0ODATA3_type *) 0xf0019c4cu)	/* Extended Message Object 98 Data 3 Register */
#define CAN_EM99ODATA3	(*( CAN_EM0ODATA3_type *) 0xf0019c6cu)	/* Extended Message Object 99 Data 3 Register */
#define CAN_EM9ODATA3	(*( CAN_EM0ODATA3_type *) 0xf001912cu)	/* Extended Message Object 9 Data 3 Register */
#define CAN_EMO0DATA0	(*( CAN_EM0ODATA3_type *) 0xf0019000u)	/* Extended Message Object 0 Data 0 Register */
#define CAN_EMO0DATA1	(*( CAN_EM0ODATA3_type *) 0xf0019004u)	/* Extended Message Object 0 Data 1 Register */
#define CAN_EMO0DATA2	(*( CAN_EM0ODATA3_type *) 0xf0019008u)	/* Extended Message Object 0 Data 2 Register */
#define CAN_EMO0DATA4	(*( CAN_EM0ODATA3_type *) 0xf0019010u)	/* Extended Message Object 0 Data 4 Register */
#define CAN_EMO0DATA5	(*( CAN_EM0ODATA3_type *) 0xf0019014u)	/* Extended Message Object 0 Data 5 Register */
#define CAN_EMO0DATA6	(*( CAN_EM0ODATA3_type *) 0xf0019018u)	/* Extended Message Object 0 Data 6 Register */
#define CAN_EMO100DATA0	(*( CAN_EM0ODATA3_type *) 0xf0019c80u)	/* Extended Message Object 100 Data 0 Register */
#define CAN_EMO100DATA1	(*( CAN_EM0ODATA3_type *) 0xf0019c84u)	/* Extended Message Object 100 Data 1 Register */
#define CAN_EMO100DATA2	(*( CAN_EM0ODATA3_type *) 0xf0019c88u)	/* Extended Message Object 100 Data 2 Register */
#define CAN_EMO100DATA4	(*( CAN_EM0ODATA3_type *) 0xf0019c90u)	/* Extended Message Object 100 Data 4 Register */
#define CAN_EMO100DATA5	(*( CAN_EM0ODATA3_type *) 0xf0019c94u)	/* Extended Message Object 100 Data 5 Register */
#define CAN_EMO100DATA6	(*( CAN_EM0ODATA3_type *) 0xf0019c98u)	/* Extended Message Object 100 Data 6 Register */
#define CAN_EMO101DATA0	(*( CAN_EM0ODATA3_type *) 0xf0019ca0u)	/* Extended Message Object 101 Data 0 Register */
#define CAN_EMO101DATA1	(*( CAN_EM0ODATA3_type *) 0xf0019ca4u)	/* Extended Message Object 101 Data 1 Register */
#define CAN_EMO101DATA2	(*( CAN_EM0ODATA3_type *) 0xf0019ca8u)	/* Extended Message Object 101 Data 2 Register */
#define CAN_EMO101DATA4	(*( CAN_EM0ODATA3_type *) 0xf0019cb0u)	/* Extended Message Object 101 Data 4 Register */
#define CAN_EMO101DATA5	(*( CAN_EM0ODATA3_type *) 0xf0019cb4u)	/* Extended Message Object 101 Data 5 Register */
#define CAN_EMO101DATA6	(*( CAN_EM0ODATA3_type *) 0xf0019cb8u)	/* Extended Message Object 101 Data 6 Register */
#define CAN_EMO102DATA0	(*( CAN_EM0ODATA3_type *) 0xf0019cc0u)	/* Extended Message Object 102 Data 0 Register */
#define CAN_EMO102DATA1	(*( CAN_EM0ODATA3_type *) 0xf0019cc4u)	/* Extended Message Object 102 Data 1 Register */
#define CAN_EMO102DATA2	(*( CAN_EM0ODATA3_type *) 0xf0019cc8u)	/* Extended Message Object 102 Data 2 Register */
#define CAN_EMO102DATA4	(*( CAN_EM0ODATA3_type *) 0xf0019cd0u)	/* Extended Message Object 102 Data 4 Register */
#define CAN_EMO102DATA5	(*( CAN_EM0ODATA3_type *) 0xf0019cd4u)	/* Extended Message Object 102 Data 5 Register */
#define CAN_EMO102DATA6	(*( CAN_EM0ODATA3_type *) 0xf0019cd8u)	/* Extended Message Object 102 Data 6 Register */
#define CAN_EMO103DATA0	(*( CAN_EM0ODATA3_type *) 0xf0019ce0u)	/* Extended Message Object 103 Data 0 Register */
#define CAN_EMO103DATA1	(*( CAN_EM0ODATA3_type *) 0xf0019ce4u)	/* Extended Message Object 103 Data 1 Register */
#define CAN_EMO103DATA2	(*( CAN_EM0ODATA3_type *) 0xf0019ce8u)	/* Extended Message Object 103 Data 2 Register */
#define CAN_EMO103DATA4	(*( CAN_EM0ODATA3_type *) 0xf0019cf0u)	/* Extended Message Object 103 Data 4 Register */
#define CAN_EMO103DATA5	(*( CAN_EM0ODATA3_type *) 0xf0019cf4u)	/* Extended Message Object 103 Data 5 Register */
#define CAN_EMO103DATA6	(*( CAN_EM0ODATA3_type *) 0xf0019cf8u)	/* Extended Message Object 103 Data 6 Register */
#define CAN_EMO104DATA0	(*( CAN_EM0ODATA3_type *) 0xf0019d00u)	/* Extended Message Object 104 Data 0 Register */
#define CAN_EMO104DATA1	(*( CAN_EM0ODATA3_type *) 0xf0019d04u)	/* Extended Message Object 104 Data 1 Register */
#define CAN_EMO104DATA2	(*( CAN_EM0ODATA3_type *) 0xf0019d08u)	/* Extended Message Object 104 Data 2 Register */
#define CAN_EMO104DATA4	(*( CAN_EM0ODATA3_type *) 0xf0019d10u)	/* Extended Message Object 104 Data 4 Register */
#define CAN_EMO104DATA5	(*( CAN_EM0ODATA3_type *) 0xf0019d14u)	/* Extended Message Object 104 Data 5 Register */
#define CAN_EMO104DATA6	(*( CAN_EM0ODATA3_type *) 0xf0019d18u)	/* Extended Message Object 104 Data 6 Register */
#define CAN_EMO105DATA0	(*( CAN_EM0ODATA3_type *) 0xf0019d20u)	/* Extended Message Object 105 Data 0 Register */
#define CAN_EMO105DATA1	(*( CAN_EM0ODATA3_type *) 0xf0019d24u)	/* Extended Message Object 105 Data 1 Register */
#define CAN_EMO105DATA2	(*( CAN_EM0ODATA3_type *) 0xf0019d28u)	/* Extended Message Object 105 Data 2 Register */
#define CAN_EMO105DATA4	(*( CAN_EM0ODATA3_type *) 0xf0019d30u)	/* Extended Message Object 105 Data 4 Register */
#define CAN_EMO105DATA5	(*( CAN_EM0ODATA3_type *) 0xf0019d34u)	/* Extended Message Object 105 Data 5 Register */
#define CAN_EMO105DATA6	(*( CAN_EM0ODATA3_type *) 0xf0019d38u)	/* Extended Message Object 105 Data 6 Register */
#define CAN_EMO106DATA0	(*( CAN_EM0ODATA3_type *) 0xf0019d40u)	/* Extended Message Object 106 Data 0 Register */
#define CAN_EMO106DATA1	(*( CAN_EM0ODATA3_type *) 0xf0019d44u)	/* Extended Message Object 106 Data 1 Register */
#define CAN_EMO106DATA2	(*( CAN_EM0ODATA3_type *) 0xf0019d48u)	/* Extended Message Object 106 Data 2 Register */
#define CAN_EMO106DATA4	(*( CAN_EM0ODATA3_type *) 0xf0019d50u)	/* Extended Message Object 106 Data 4 Register */
#define CAN_EMO106DATA5	(*( CAN_EM0ODATA3_type *) 0xf0019d54u)	/* Extended Message Object 106 Data 5 Register */
#define CAN_EMO106DATA6	(*( CAN_EM0ODATA3_type *) 0xf0019d58u)	/* Extended Message Object 106 Data 6 Register */
#define CAN_EMO107DATA0	(*( CAN_EM0ODATA3_type *) 0xf0019d60u)	/* Extended Message Object 107 Data 0 Register */
#define CAN_EMO107DATA1	(*( CAN_EM0ODATA3_type *) 0xf0019d64u)	/* Extended Message Object 107 Data 1 Register */
#define CAN_EMO107DATA2	(*( CAN_EM0ODATA3_type *) 0xf0019d68u)	/* Extended Message Object 107 Data 2 Register */
#define CAN_EMO107DATA4	(*( CAN_EM0ODATA3_type *) 0xf0019d70u)	/* Extended Message Object 107 Data 4 Register */
#define CAN_EMO107DATA5	(*( CAN_EM0ODATA3_type *) 0xf0019d74u)	/* Extended Message Object 107 Data 5 Register */
#define CAN_EMO107DATA6	(*( CAN_EM0ODATA3_type *) 0xf0019d78u)	/* Extended Message Object 107 Data 6 Register */
#define CAN_EMO108DATA0	(*( CAN_EM0ODATA3_type *) 0xf0019d80u)	/* Extended Message Object 108 Data 0 Register */
#define CAN_EMO108DATA1	(*( CAN_EM0ODATA3_type *) 0xf0019d84u)	/* Extended Message Object 108 Data 1 Register */
#define CAN_EMO108DATA2	(*( CAN_EM0ODATA3_type *) 0xf0019d88u)	/* Extended Message Object 108 Data 2 Register */
#define CAN_EMO108DATA4	(*( CAN_EM0ODATA3_type *) 0xf0019d90u)	/* Extended Message Object 108 Data 4 Register */
#define CAN_EMO108DATA5	(*( CAN_EM0ODATA3_type *) 0xf0019d94u)	/* Extended Message Object 108 Data 5 Register */
#define CAN_EMO108DATA6	(*( CAN_EM0ODATA3_type *) 0xf0019d98u)	/* Extended Message Object 108 Data 6 Register */
#define CAN_EMO109DATA0	(*( CAN_EM0ODATA3_type *) 0xf0019da0u)	/* Extended Message Object 109 Data 0 Register */
#define CAN_EMO109DATA1	(*( CAN_EM0ODATA3_type *) 0xf0019da4u)	/* Extended Message Object 109 Data 1 Register */
#define CAN_EMO109DATA2	(*( CAN_EM0ODATA3_type *) 0xf0019da8u)	/* Extended Message Object 109 Data 2 Register */
#define CAN_EMO109DATA4	(*( CAN_EM0ODATA3_type *) 0xf0019db0u)	/* Extended Message Object 109 Data 4 Register */
#define CAN_EMO109DATA5	(*( CAN_EM0ODATA3_type *) 0xf0019db4u)	/* Extended Message Object 109 Data 5 Register */
#define CAN_EMO109DATA6	(*( CAN_EM0ODATA3_type *) 0xf0019db8u)	/* Extended Message Object 109 Data 6 Register */
#define CAN_EMO10DATA0	(*( CAN_EM0ODATA3_type *) 0xf0019140u)	/* Extended Message Object 10 Data 0 Register */
#define CAN_EMO10DATA1	(*( CAN_EM0ODATA3_type *) 0xf0019144u)	/* Extended Message Object 10 Data 1 Register */
#define CAN_EMO10DATA2	(*( CAN_EM0ODATA3_type *) 0xf0019148u)	/* Extended Message Object 10 Data 2 Register */
#define CAN_EMO10DATA4	(*( CAN_EM0ODATA3_type *) 0xf0019150u)	/* Extended Message Object 10 Data 4 Register */
#define CAN_EMO10DATA5	(*( CAN_EM0ODATA3_type *) 0xf0019154u)	/* Extended Message Object 10 Data 5 Register */
#define CAN_EMO10DATA6	(*( CAN_EM0ODATA3_type *) 0xf0019158u)	/* Extended Message Object 10 Data 6 Register */
#define CAN_EMO110DATA0	(*( CAN_EM0ODATA3_type *) 0xf0019dc0u)	/* Extended Message Object 110 Data 0 Register */
#define CAN_EMO110DATA1	(*( CAN_EM0ODATA3_type *) 0xf0019dc4u)	/* Extended Message Object 110 Data 1 Register */
#define CAN_EMO110DATA2	(*( CAN_EM0ODATA3_type *) 0xf0019dc8u)	/* Extended Message Object 110 Data 2 Register */
#define CAN_EMO110DATA4	(*( CAN_EM0ODATA3_type *) 0xf0019dd0u)	/* Extended Message Object 110 Data 4 Register */
#define CAN_EMO110DATA5	(*( CAN_EM0ODATA3_type *) 0xf0019dd4u)	/* Extended Message Object 110 Data 5 Register */
#define CAN_EMO110DATA6	(*( CAN_EM0ODATA3_type *) 0xf0019dd8u)	/* Extended Message Object 110 Data 6 Register */
#define CAN_EMO111DATA0	(*( CAN_EM0ODATA3_type *) 0xf0019de0u)	/* Extended Message Object 111 Data 0 Register */
#define CAN_EMO111DATA1	(*( CAN_EM0ODATA3_type *) 0xf0019de4u)	/* Extended Message Object 111 Data 1 Register */
#define CAN_EMO111DATA2	(*( CAN_EM0ODATA3_type *) 0xf0019de8u)	/* Extended Message Object 111 Data 2 Register */
#define CAN_EMO111DATA4	(*( CAN_EM0ODATA3_type *) 0xf0019df0u)	/* Extended Message Object 111 Data 4 Register */
#define CAN_EMO111DATA5	(*( CAN_EM0ODATA3_type *) 0xf0019df4u)	/* Extended Message Object 111 Data 5 Register */
#define CAN_EMO111DATA6	(*( CAN_EM0ODATA3_type *) 0xf0019df8u)	/* Extended Message Object 111 Data 6 Register */
#define CAN_EMO112DATA0	(*( CAN_EM0ODATA3_type *) 0xf0019e00u)	/* Extended Message Object 112 Data 0 Register */
#define CAN_EMO112DATA1	(*( CAN_EM0ODATA3_type *) 0xf0019e04u)	/* Extended Message Object 112 Data 1 Register */
#define CAN_EMO112DATA2	(*( CAN_EM0ODATA3_type *) 0xf0019e08u)	/* Extended Message Object 112 Data 2 Register */
#define CAN_EMO112DATA4	(*( CAN_EM0ODATA3_type *) 0xf0019e10u)	/* Extended Message Object 112 Data 4 Register */
#define CAN_EMO112DATA5	(*( CAN_EM0ODATA3_type *) 0xf0019e14u)	/* Extended Message Object 112 Data 5 Register */
#define CAN_EMO112DATA6	(*( CAN_EM0ODATA3_type *) 0xf0019e18u)	/* Extended Message Object 112 Data 6 Register */
#define CAN_EMO113DATA0	(*( CAN_EM0ODATA3_type *) 0xf0019e20u)	/* Extended Message Object 113 Data 0 Register */
#define CAN_EMO113DATA1	(*( CAN_EM0ODATA3_type *) 0xf0019e24u)	/* Extended Message Object 113 Data 1 Register */
#define CAN_EMO113DATA2	(*( CAN_EM0ODATA3_type *) 0xf0019e28u)	/* Extended Message Object 113 Data 2 Register */
#define CAN_EMO113DATA4	(*( CAN_EM0ODATA3_type *) 0xf0019e30u)	/* Extended Message Object 113 Data 4 Register */
#define CAN_EMO113DATA5	(*( CAN_EM0ODATA3_type *) 0xf0019e34u)	/* Extended Message Object 113 Data 5 Register */
#define CAN_EMO113DATA6	(*( CAN_EM0ODATA3_type *) 0xf0019e38u)	/* Extended Message Object 113 Data 6 Register */
#define CAN_EMO114DATA0	(*( CAN_EM0ODATA3_type *) 0xf0019e40u)	/* Extended Message Object 114 Data 0 Register */
#define CAN_EMO114DATA1	(*( CAN_EM0ODATA3_type *) 0xf0019e44u)	/* Extended Message Object 114 Data 1 Register */
#define CAN_EMO114DATA2	(*( CAN_EM0ODATA3_type *) 0xf0019e48u)	/* Extended Message Object 114 Data 2 Register */
#define CAN_EMO114DATA4	(*( CAN_EM0ODATA3_type *) 0xf0019e50u)	/* Extended Message Object 114 Data 4 Register */
#define CAN_EMO114DATA5	(*( CAN_EM0ODATA3_type *) 0xf0019e54u)	/* Extended Message Object 114 Data 5 Register */
#define CAN_EMO114DATA6	(*( CAN_EM0ODATA3_type *) 0xf0019e58u)	/* Extended Message Object 114 Data 6 Register */
#define CAN_EMO115DATA0	(*( CAN_EM0ODATA3_type *) 0xf0019e60u)	/* Extended Message Object 115 Data 0 Register */
#define CAN_EMO115DATA1	(*( CAN_EM0ODATA3_type *) 0xf0019e64u)	/* Extended Message Object 115 Data 1 Register */
#define CAN_EMO115DATA2	(*( CAN_EM0ODATA3_type *) 0xf0019e68u)	/* Extended Message Object 115 Data 2 Register */
#define CAN_EMO115DATA4	(*( CAN_EM0ODATA3_type *) 0xf0019e70u)	/* Extended Message Object 115 Data 4 Register */
#define CAN_EMO115DATA5	(*( CAN_EM0ODATA3_type *) 0xf0019e74u)	/* Extended Message Object 115 Data 5 Register */
#define CAN_EMO115DATA6	(*( CAN_EM0ODATA3_type *) 0xf0019e78u)	/* Extended Message Object 115 Data 6 Register */
#define CAN_EMO116DATA0	(*( CAN_EM0ODATA3_type *) 0xf0019e80u)	/* Extended Message Object 116 Data 0 Register */
#define CAN_EMO116DATA1	(*( CAN_EM0ODATA3_type *) 0xf0019e84u)	/* Extended Message Object 116 Data 1 Register */
#define CAN_EMO116DATA2	(*( CAN_EM0ODATA3_type *) 0xf0019e88u)	/* Extended Message Object 116 Data 2 Register */
#define CAN_EMO116DATA4	(*( CAN_EM0ODATA3_type *) 0xf0019e90u)	/* Extended Message Object 116 Data 4 Register */
#define CAN_EMO116DATA5	(*( CAN_EM0ODATA3_type *) 0xf0019e94u)	/* Extended Message Object 116 Data 5 Register */
#define CAN_EMO116DATA6	(*( CAN_EM0ODATA3_type *) 0xf0019e98u)	/* Extended Message Object 116 Data 6 Register */
#define CAN_EMO117DATA0	(*( CAN_EM0ODATA3_type *) 0xf0019ea0u)	/* Extended Message Object 117 Data 0 Register */
#define CAN_EMO117DATA1	(*( CAN_EM0ODATA3_type *) 0xf0019ea4u)	/* Extended Message Object 117 Data 1 Register */
#define CAN_EMO117DATA2	(*( CAN_EM0ODATA3_type *) 0xf0019ea8u)	/* Extended Message Object 117 Data 2 Register */
#define CAN_EMO117DATA4	(*( CAN_EM0ODATA3_type *) 0xf0019eb0u)	/* Extended Message Object 117 Data 4 Register */
#define CAN_EMO117DATA5	(*( CAN_EM0ODATA3_type *) 0xf0019eb4u)	/* Extended Message Object 117 Data 5 Register */
#define CAN_EMO117DATA6	(*( CAN_EM0ODATA3_type *) 0xf0019eb8u)	/* Extended Message Object 117 Data 6 Register */
#define CAN_EMO118DATA0	(*( CAN_EM0ODATA3_type *) 0xf0019ec0u)	/* Extended Message Object 118 Data 0 Register */
#define CAN_EMO118DATA1	(*( CAN_EM0ODATA3_type *) 0xf0019ec4u)	/* Extended Message Object 118 Data 1 Register */
#define CAN_EMO118DATA2	(*( CAN_EM0ODATA3_type *) 0xf0019ec8u)	/* Extended Message Object 118 Data 2 Register */
#define CAN_EMO118DATA4	(*( CAN_EM0ODATA3_type *) 0xf0019ed0u)	/* Extended Message Object 118 Data 4 Register */
#define CAN_EMO118DATA5	(*( CAN_EM0ODATA3_type *) 0xf0019ed4u)	/* Extended Message Object 118 Data 5 Register */
#define CAN_EMO118DATA6	(*( CAN_EM0ODATA3_type *) 0xf0019ed8u)	/* Extended Message Object 118 Data 6 Register */
#define CAN_EMO119DATA0	(*( CAN_EM0ODATA3_type *) 0xf0019ee0u)	/* Extended Message Object 119 Data 0 Register */
#define CAN_EMO119DATA1	(*( CAN_EM0ODATA3_type *) 0xf0019ee4u)	/* Extended Message Object 119 Data 1 Register */
#define CAN_EMO119DATA2	(*( CAN_EM0ODATA3_type *) 0xf0019ee8u)	/* Extended Message Object 119 Data 2 Register */
#define CAN_EMO119DATA4	(*( CAN_EM0ODATA3_type *) 0xf0019ef0u)	/* Extended Message Object 119 Data 4 Register */
#define CAN_EMO119DATA5	(*( CAN_EM0ODATA3_type *) 0xf0019ef4u)	/* Extended Message Object 119 Data 5 Register */
#define CAN_EMO119DATA6	(*( CAN_EM0ODATA3_type *) 0xf0019ef8u)	/* Extended Message Object 119 Data 6 Register */
#define CAN_EMO11DATA0	(*( CAN_EM0ODATA3_type *) 0xf0019160u)	/* Extended Message Object 11 Data 0 Register */
#define CAN_EMO11DATA1	(*( CAN_EM0ODATA3_type *) 0xf0019164u)	/* Extended Message Object 11 Data 1 Register */
#define CAN_EMO11DATA2	(*( CAN_EM0ODATA3_type *) 0xf0019168u)	/* Extended Message Object 11 Data 2 Register */
#define CAN_EMO11DATA4	(*( CAN_EM0ODATA3_type *) 0xf0019170u)	/* Extended Message Object 11 Data 4 Register */
#define CAN_EMO11DATA5	(*( CAN_EM0ODATA3_type *) 0xf0019174u)	/* Extended Message Object 11 Data 5 Register */
#define CAN_EMO11DATA6	(*( CAN_EM0ODATA3_type *) 0xf0019178u)	/* Extended Message Object 11 Data 6 Register */
#define CAN_EMO120DATA0	(*( CAN_EM0ODATA3_type *) 0xf0019f00u)	/* Extended Message Object 120 Data 0 Register */
#define CAN_EMO120DATA1	(*( CAN_EM0ODATA3_type *) 0xf0019f04u)	/* Extended Message Object 120 Data 1 Register */
#define CAN_EMO120DATA2	(*( CAN_EM0ODATA3_type *) 0xf0019f08u)	/* Extended Message Object 120 Data 2 Register */
#define CAN_EMO120DATA4	(*( CAN_EM0ODATA3_type *) 0xf0019f10u)	/* Extended Message Object 120 Data 4 Register */
#define CAN_EMO120DATA5	(*( CAN_EM0ODATA3_type *) 0xf0019f14u)	/* Extended Message Object 120 Data 5 Register */
#define CAN_EMO120DATA6	(*( CAN_EM0ODATA3_type *) 0xf0019f18u)	/* Extended Message Object 120 Data 6 Register */
#define CAN_EMO121DATA0	(*( CAN_EM0ODATA3_type *) 0xf0019f20u)	/* Extended Message Object 121 Data 0 Register */
#define CAN_EMO121DATA1	(*( CAN_EM0ODATA3_type *) 0xf0019f24u)	/* Extended Message Object 121 Data 1 Register */
#define CAN_EMO121DATA2	(*( CAN_EM0ODATA3_type *) 0xf0019f28u)	/* Extended Message Object 121 Data 2 Register */
#define CAN_EMO121DATA4	(*( CAN_EM0ODATA3_type *) 0xf0019f30u)	/* Extended Message Object 121 Data 4 Register */
#define CAN_EMO121DATA5	(*( CAN_EM0ODATA3_type *) 0xf0019f34u)	/* Extended Message Object 121 Data 5 Register */
#define CAN_EMO121DATA6	(*( CAN_EM0ODATA3_type *) 0xf0019f38u)	/* Extended Message Object 121 Data 6 Register */
#define CAN_EMO122DATA0	(*( CAN_EM0ODATA3_type *) 0xf0019f40u)	/* Extended Message Object 122 Data 0 Register */
#define CAN_EMO122DATA1	(*( CAN_EM0ODATA3_type *) 0xf0019f44u)	/* Extended Message Object 122 Data 1 Register */
#define CAN_EMO122DATA2	(*( CAN_EM0ODATA3_type *) 0xf0019f48u)	/* Extended Message Object 122 Data 2 Register */
#define CAN_EMO122DATA4	(*( CAN_EM0ODATA3_type *) 0xf0019f50u)	/* Extended Message Object 122 Data 4 Register */
#define CAN_EMO122DATA5	(*( CAN_EM0ODATA3_type *) 0xf0019f54u)	/* Extended Message Object 122 Data 5 Register */
#define CAN_EMO122DATA6	(*( CAN_EM0ODATA3_type *) 0xf0019f58u)	/* Extended Message Object 122 Data 6 Register */
#define CAN_EMO123DATA0	(*( CAN_EM0ODATA3_type *) 0xf0019f60u)	/* Extended Message Object 123 Data 0 Register */
#define CAN_EMO123DATA1	(*( CAN_EM0ODATA3_type *) 0xf0019f64u)	/* Extended Message Object 123 Data 1 Register */
#define CAN_EMO123DATA2	(*( CAN_EM0ODATA3_type *) 0xf0019f68u)	/* Extended Message Object 123 Data 2 Register */
#define CAN_EMO123DATA4	(*( CAN_EM0ODATA3_type *) 0xf0019f70u)	/* Extended Message Object 123 Data 4 Register */
#define CAN_EMO123DATA5	(*( CAN_EM0ODATA3_type *) 0xf0019f74u)	/* Extended Message Object 123 Data 5 Register */
#define CAN_EMO123DATA6	(*( CAN_EM0ODATA3_type *) 0xf0019f78u)	/* Extended Message Object 123 Data 6 Register */
#define CAN_EMO124DATA0	(*( CAN_EM0ODATA3_type *) 0xf0019f80u)	/* Extended Message Object 124 Data 0 Register */
#define CAN_EMO124DATA1	(*( CAN_EM0ODATA3_type *) 0xf0019f84u)	/* Extended Message Object 124 Data 1 Register */
#define CAN_EMO124DATA2	(*( CAN_EM0ODATA3_type *) 0xf0019f88u)	/* Extended Message Object 124 Data 2 Register */
#define CAN_EMO124DATA4	(*( CAN_EM0ODATA3_type *) 0xf0019f90u)	/* Extended Message Object 124 Data 4 Register */
#define CAN_EMO124DATA5	(*( CAN_EM0ODATA3_type *) 0xf0019f94u)	/* Extended Message Object 124 Data 5 Register */
#define CAN_EMO124DATA6	(*( CAN_EM0ODATA3_type *) 0xf0019f98u)	/* Extended Message Object 124 Data 6 Register */
#define CAN_EMO125DATA0	(*( CAN_EM0ODATA3_type *) 0xf0019fa0u)	/* Extended Message Object 125 Data 0 Register */
#define CAN_EMO125DATA1	(*( CAN_EM0ODATA3_type *) 0xf0019fa4u)	/* Extended Message Object 125 Data 1 Register */
#define CAN_EMO125DATA2	(*( CAN_EM0ODATA3_type *) 0xf0019fa8u)	/* Extended Message Object 125 Data 2 Register */
#define CAN_EMO125DATA4	(*( CAN_EM0ODATA3_type *) 0xf0019fb0u)	/* Extended Message Object 125 Data 4 Register */
#define CAN_EMO125DATA5	(*( CAN_EM0ODATA3_type *) 0xf0019fb4u)	/* Extended Message Object 125 Data 5 Register */
#define CAN_EMO125DATA6	(*( CAN_EM0ODATA3_type *) 0xf0019fb8u)	/* Extended Message Object 125 Data 6 Register */
#define CAN_EMO126DATA0	(*( CAN_EM0ODATA3_type *) 0xf0019fc0u)	/* Extended Message Object 126 Data 0 Register */
#define CAN_EMO126DATA1	(*( CAN_EM0ODATA3_type *) 0xf0019fc4u)	/* Extended Message Object 126 Data 1 Register */
#define CAN_EMO126DATA2	(*( CAN_EM0ODATA3_type *) 0xf0019fc8u)	/* Extended Message Object 126 Data 2 Register */
#define CAN_EMO126DATA4	(*( CAN_EM0ODATA3_type *) 0xf0019fd0u)	/* Extended Message Object 126 Data 4 Register */
#define CAN_EMO126DATA5	(*( CAN_EM0ODATA3_type *) 0xf0019fd4u)	/* Extended Message Object 126 Data 5 Register */
#define CAN_EMO126DATA6	(*( CAN_EM0ODATA3_type *) 0xf0019fd8u)	/* Extended Message Object 126 Data 6 Register */
#define CAN_EMO127DATA0	(*( CAN_EM0ODATA3_type *) 0xf0019fe0u)	/* Extended Message Object 127 Data 0 Register */
#define CAN_EMO127DATA1	(*( CAN_EM0ODATA3_type *) 0xf0019fe4u)	/* Extended Message Object 127 Data 1 Register */
#define CAN_EMO127DATA2	(*( CAN_EM0ODATA3_type *) 0xf0019fe8u)	/* Extended Message Object 127 Data 2 Register */
#define CAN_EMO127DATA4	(*( CAN_EM0ODATA3_type *) 0xf0019ff0u)	/* Extended Message Object 127 Data 4 Register */
#define CAN_EMO127DATA5	(*( CAN_EM0ODATA3_type *) 0xf0019ff4u)	/* Extended Message Object 127 Data 5 Register */
#define CAN_EMO127DATA6	(*( CAN_EM0ODATA3_type *) 0xf0019ff8u)	/* Extended Message Object 127 Data 6 Register */
#define CAN_EMO128DATA0	(*( CAN_EM0ODATA3_type *) 0xf001a000u)	/* Extended Message Object 128 Data 0 Register */
#define CAN_EMO128DATA1	(*( CAN_EM0ODATA3_type *) 0xf001a004u)	/* Extended Message Object 128 Data 1 Register */
#define CAN_EMO128DATA2	(*( CAN_EM0ODATA3_type *) 0xf001a008u)	/* Extended Message Object 128 Data 2 Register */
#define CAN_EMO128DATA4	(*( CAN_EM0ODATA3_type *) 0xf001a010u)	/* Extended Message Object 128 Data 4 Register */
#define CAN_EMO128DATA5	(*( CAN_EM0ODATA3_type *) 0xf001a014u)	/* Extended Message Object 128 Data 5 Register */
#define CAN_EMO128DATA6	(*( CAN_EM0ODATA3_type *) 0xf001a018u)	/* Extended Message Object 128 Data 6 Register */
#define CAN_EMO129DATA0	(*( CAN_EM0ODATA3_type *) 0xf001a020u)	/* Extended Message Object 129 Data 0 Register */
#define CAN_EMO129DATA1	(*( CAN_EM0ODATA3_type *) 0xf001a024u)	/* Extended Message Object 129 Data 1 Register */
#define CAN_EMO129DATA2	(*( CAN_EM0ODATA3_type *) 0xf001a028u)	/* Extended Message Object 129 Data 2 Register */
#define CAN_EMO129DATA4	(*( CAN_EM0ODATA3_type *) 0xf001a030u)	/* Extended Message Object 129 Data 4 Register */
#define CAN_EMO129DATA5	(*( CAN_EM0ODATA3_type *) 0xf001a034u)	/* Extended Message Object 129 Data 5 Register */
#define CAN_EMO129DATA6	(*( CAN_EM0ODATA3_type *) 0xf001a038u)	/* Extended Message Object 129 Data 6 Register */
#define CAN_EMO12DATA0	(*( CAN_EM0ODATA3_type *) 0xf0019180u)	/* Extended Message Object 12 Data 0 Register */
#define CAN_EMO12DATA1	(*( CAN_EM0ODATA3_type *) 0xf0019184u)	/* Extended Message Object 12 Data 1 Register */
#define CAN_EMO12DATA2	(*( CAN_EM0ODATA3_type *) 0xf0019188u)	/* Extended Message Object 12 Data 2 Register */
#define CAN_EMO12DATA4	(*( CAN_EM0ODATA3_type *) 0xf0019190u)	/* Extended Message Object 12 Data 4 Register */
#define CAN_EMO12DATA5	(*( CAN_EM0ODATA3_type *) 0xf0019194u)	/* Extended Message Object 12 Data 5 Register */
#define CAN_EMO12DATA6	(*( CAN_EM0ODATA3_type *) 0xf0019198u)	/* Extended Message Object 12 Data 6 Register */
#define CAN_EMO130DATA0	(*( CAN_EM0ODATA3_type *) 0xf001a040u)	/* Extended Message Object 130 Data 0 Register */
#define CAN_EMO130DATA1	(*( CAN_EM0ODATA3_type *) 0xf001a044u)	/* Extended Message Object 130 Data 1 Register */
#define CAN_EMO130DATA2	(*( CAN_EM0ODATA3_type *) 0xf001a048u)	/* Extended Message Object 130 Data 2 Register */
#define CAN_EMO130DATA4	(*( CAN_EM0ODATA3_type *) 0xf001a050u)	/* Extended Message Object 130 Data 4 Register */
#define CAN_EMO130DATA5	(*( CAN_EM0ODATA3_type *) 0xf001a054u)	/* Extended Message Object 130 Data 5 Register */
#define CAN_EMO130DATA6	(*( CAN_EM0ODATA3_type *) 0xf001a058u)	/* Extended Message Object 130 Data 6 Register */
#define CAN_EMO131DATA0	(*( CAN_EM0ODATA3_type *) 0xf001a060u)	/* Extended Message Object 131 Data 0 Register */
#define CAN_EMO131DATA1	(*( CAN_EM0ODATA3_type *) 0xf001a064u)	/* Extended Message Object 131 Data 1 Register */
#define CAN_EMO131DATA2	(*( CAN_EM0ODATA3_type *) 0xf001a068u)	/* Extended Message Object 131 Data 2 Register */
#define CAN_EMO131DATA4	(*( CAN_EM0ODATA3_type *) 0xf001a070u)	/* Extended Message Object 131 Data 4 Register */
#define CAN_EMO131DATA5	(*( CAN_EM0ODATA3_type *) 0xf001a074u)	/* Extended Message Object 131 Data 5 Register */
#define CAN_EMO131DATA6	(*( CAN_EM0ODATA3_type *) 0xf001a078u)	/* Extended Message Object 131 Data 6 Register */
#define CAN_EMO132DATA0	(*( CAN_EM0ODATA3_type *) 0xf001a080u)	/* Extended Message Object 132 Data 0 Register */
#define CAN_EMO132DATA1	(*( CAN_EM0ODATA3_type *) 0xf001a084u)	/* Extended Message Object 132 Data 1 Register */
#define CAN_EMO132DATA2	(*( CAN_EM0ODATA3_type *) 0xf001a088u)	/* Extended Message Object 132 Data 2 Register */
#define CAN_EMO132DATA4	(*( CAN_EM0ODATA3_type *) 0xf001a090u)	/* Extended Message Object 132 Data 4 Register */
#define CAN_EMO132DATA5	(*( CAN_EM0ODATA3_type *) 0xf001a094u)	/* Extended Message Object 132 Data 5 Register */
#define CAN_EMO132DATA6	(*( CAN_EM0ODATA3_type *) 0xf001a098u)	/* Extended Message Object 132 Data 6 Register */
#define CAN_EMO133DATA0	(*( CAN_EM0ODATA3_type *) 0xf001a0a0u)	/* Extended Message Object 133 Data 0 Register */
#define CAN_EMO133DATA1	(*( CAN_EM0ODATA3_type *) 0xf001a0a4u)	/* Extended Message Object 133 Data 1 Register */
#define CAN_EMO133DATA2	(*( CAN_EM0ODATA3_type *) 0xf001a0a8u)	/* Extended Message Object 133 Data 2 Register */
#define CAN_EMO133DATA4	(*( CAN_EM0ODATA3_type *) 0xf001a0b0u)	/* Extended Message Object 133 Data 4 Register */
#define CAN_EMO133DATA5	(*( CAN_EM0ODATA3_type *) 0xf001a0b4u)	/* Extended Message Object 133 Data 5 Register */
#define CAN_EMO133DATA6	(*( CAN_EM0ODATA3_type *) 0xf001a0b8u)	/* Extended Message Object 133 Data 6 Register */
#define CAN_EMO134DATA0	(*( CAN_EM0ODATA3_type *) 0xf001a0c0u)	/* Extended Message Object 134 Data 0 Register */
#define CAN_EMO134DATA1	(*( CAN_EM0ODATA3_type *) 0xf001a0c4u)	/* Extended Message Object 134 Data 1 Register */
#define CAN_EMO134DATA2	(*( CAN_EM0ODATA3_type *) 0xf001a0c8u)	/* Extended Message Object 134 Data 2 Register */
#define CAN_EMO134DATA4	(*( CAN_EM0ODATA3_type *) 0xf001a0d0u)	/* Extended Message Object 134 Data 4 Register */
#define CAN_EMO134DATA5	(*( CAN_EM0ODATA3_type *) 0xf001a0d4u)	/* Extended Message Object 134 Data 5 Register */
#define CAN_EMO134DATA6	(*( CAN_EM0ODATA3_type *) 0xf001a0d8u)	/* Extended Message Object 134 Data 6 Register */
#define CAN_EMO135DATA0	(*( CAN_EM0ODATA3_type *) 0xf001a0e0u)	/* Extended Message Object 135 Data 0 Register */
#define CAN_EMO135DATA1	(*( CAN_EM0ODATA3_type *) 0xf001a0e4u)	/* Extended Message Object 135 Data 1 Register */
#define CAN_EMO135DATA2	(*( CAN_EM0ODATA3_type *) 0xf001a0e8u)	/* Extended Message Object 135 Data 2 Register */
#define CAN_EMO135DATA4	(*( CAN_EM0ODATA3_type *) 0xf001a0f0u)	/* Extended Message Object 135 Data 4 Register */
#define CAN_EMO135DATA5	(*( CAN_EM0ODATA3_type *) 0xf001a0f4u)	/* Extended Message Object 135 Data 5 Register */
#define CAN_EMO135DATA6	(*( CAN_EM0ODATA3_type *) 0xf001a0f8u)	/* Extended Message Object 135 Data 6 Register */
#define CAN_EMO136DATA0	(*( CAN_EM0ODATA3_type *) 0xf001a100u)	/* Extended Message Object 136 Data 0 Register */
#define CAN_EMO136DATA1	(*( CAN_EM0ODATA3_type *) 0xf001a104u)	/* Extended Message Object 136 Data 1 Register */
#define CAN_EMO136DATA2	(*( CAN_EM0ODATA3_type *) 0xf001a108u)	/* Extended Message Object 136 Data 2 Register */
#define CAN_EMO136DATA4	(*( CAN_EM0ODATA3_type *) 0xf001a110u)	/* Extended Message Object 136 Data 4 Register */
#define CAN_EMO136DATA5	(*( CAN_EM0ODATA3_type *) 0xf001a114u)	/* Extended Message Object 136 Data 5 Register */
#define CAN_EMO136DATA6	(*( CAN_EM0ODATA3_type *) 0xf001a118u)	/* Extended Message Object 136 Data 6 Register */
#define CAN_EMO137DATA0	(*( CAN_EM0ODATA3_type *) 0xf001a120u)	/* Extended Message Object 137 Data 0 Register */
#define CAN_EMO137DATA1	(*( CAN_EM0ODATA3_type *) 0xf001a124u)	/* Extended Message Object 137 Data 1 Register */
#define CAN_EMO137DATA2	(*( CAN_EM0ODATA3_type *) 0xf001a128u)	/* Extended Message Object 137 Data 2 Register */
#define CAN_EMO137DATA4	(*( CAN_EM0ODATA3_type *) 0xf001a130u)	/* Extended Message Object 137 Data 4 Register */
#define CAN_EMO137DATA5	(*( CAN_EM0ODATA3_type *) 0xf001a134u)	/* Extended Message Object 137 Data 5 Register */
#define CAN_EMO137DATA6	(*( CAN_EM0ODATA3_type *) 0xf001a138u)	/* Extended Message Object 137 Data 6 Register */
#define CAN_EMO138DATA0	(*( CAN_EM0ODATA3_type *) 0xf001a140u)	/* Extended Message Object 138 Data 0 Register */
#define CAN_EMO138DATA1	(*( CAN_EM0ODATA3_type *) 0xf001a144u)	/* Extended Message Object 138 Data 1 Register */
#define CAN_EMO138DATA2	(*( CAN_EM0ODATA3_type *) 0xf001a148u)	/* Extended Message Object 138 Data 2 Register */
#define CAN_EMO138DATA4	(*( CAN_EM0ODATA3_type *) 0xf001a150u)	/* Extended Message Object 138 Data 4 Register */
#define CAN_EMO138DATA5	(*( CAN_EM0ODATA3_type *) 0xf001a154u)	/* Extended Message Object 138 Data 5 Register */
#define CAN_EMO138DATA6	(*( CAN_EM0ODATA3_type *) 0xf001a158u)	/* Extended Message Object 138 Data 6 Register */
#define CAN_EMO139DATA0	(*( CAN_EM0ODATA3_type *) 0xf001a160u)	/* Extended Message Object 139 Data 0 Register */
#define CAN_EMO139DATA1	(*( CAN_EM0ODATA3_type *) 0xf001a164u)	/* Extended Message Object 139 Data 1 Register */
#define CAN_EMO139DATA2	(*( CAN_EM0ODATA3_type *) 0xf001a168u)	/* Extended Message Object 139 Data 2 Register */
#define CAN_EMO139DATA4	(*( CAN_EM0ODATA3_type *) 0xf001a170u)	/* Extended Message Object 139 Data 4 Register */
#define CAN_EMO139DATA5	(*( CAN_EM0ODATA3_type *) 0xf001a174u)	/* Extended Message Object 139 Data 5 Register */
#define CAN_EMO139DATA6	(*( CAN_EM0ODATA3_type *) 0xf001a178u)	/* Extended Message Object 139 Data 6 Register */
#define CAN_EMO13DATA0	(*( CAN_EM0ODATA3_type *) 0xf00191a0u)	/* Extended Message Object 13 Data 0 Register */
#define CAN_EMO13DATA1	(*( CAN_EM0ODATA3_type *) 0xf00191a4u)	/* Extended Message Object 13 Data 1 Register */
#define CAN_EMO13DATA2	(*( CAN_EM0ODATA3_type *) 0xf00191a8u)	/* Extended Message Object 13 Data 2 Register */
#define CAN_EMO13DATA4	(*( CAN_EM0ODATA3_type *) 0xf00191b0u)	/* Extended Message Object 13 Data 4 Register */
#define CAN_EMO13DATA5	(*( CAN_EM0ODATA3_type *) 0xf00191b4u)	/* Extended Message Object 13 Data 5 Register */
#define CAN_EMO13DATA6	(*( CAN_EM0ODATA3_type *) 0xf00191b8u)	/* Extended Message Object 13 Data 6 Register */
#define CAN_EMO140DATA0	(*( CAN_EM0ODATA3_type *) 0xf001a180u)	/* Extended Message Object 140 Data 0 Register */
#define CAN_EMO140DATA1	(*( CAN_EM0ODATA3_type *) 0xf001a184u)	/* Extended Message Object 140 Data 1 Register */
#define CAN_EMO140DATA2	(*( CAN_EM0ODATA3_type *) 0xf001a188u)	/* Extended Message Object 140 Data 2 Register */
#define CAN_EMO140DATA4	(*( CAN_EM0ODATA3_type *) 0xf001a190u)	/* Extended Message Object 140 Data 4 Register */
#define CAN_EMO140DATA5	(*( CAN_EM0ODATA3_type *) 0xf001a194u)	/* Extended Message Object 140 Data 5 Register */
#define CAN_EMO140DATA6	(*( CAN_EM0ODATA3_type *) 0xf001a198u)	/* Extended Message Object 140 Data 6 Register */
#define CAN_EMO141DATA0	(*( CAN_EM0ODATA3_type *) 0xf001a1a0u)	/* Extended Message Object 141 Data 0 Register */
#define CAN_EMO141DATA1	(*( CAN_EM0ODATA3_type *) 0xf001a1a4u)	/* Extended Message Object 141 Data 1 Register */
#define CAN_EMO141DATA2	(*( CAN_EM0ODATA3_type *) 0xf001a1a8u)	/* Extended Message Object 141 Data 2 Register */
#define CAN_EMO141DATA4	(*( CAN_EM0ODATA3_type *) 0xf001a1b0u)	/* Extended Message Object 141 Data 4 Register */
#define CAN_EMO141DATA5	(*( CAN_EM0ODATA3_type *) 0xf001a1b4u)	/* Extended Message Object 141 Data 5 Register */
#define CAN_EMO141DATA6	(*( CAN_EM0ODATA3_type *) 0xf001a1b8u)	/* Extended Message Object 141 Data 6 Register */
#define CAN_EMO142DATA0	(*( CAN_EM0ODATA3_type *) 0xf001a1c0u)	/* Extended Message Object 142 Data 0 Register */
#define CAN_EMO142DATA1	(*( CAN_EM0ODATA3_type *) 0xf001a1c4u)	/* Extended Message Object 142 Data 1 Register */
#define CAN_EMO142DATA2	(*( CAN_EM0ODATA3_type *) 0xf001a1c8u)	/* Extended Message Object 142 Data 2 Register */
#define CAN_EMO142DATA4	(*( CAN_EM0ODATA3_type *) 0xf001a1d0u)	/* Extended Message Object 142 Data 4 Register */
#define CAN_EMO142DATA5	(*( CAN_EM0ODATA3_type *) 0xf001a1d4u)	/* Extended Message Object 142 Data 5 Register */
#define CAN_EMO142DATA6	(*( CAN_EM0ODATA3_type *) 0xf001a1d8u)	/* Extended Message Object 142 Data 6 Register */
#define CAN_EMO143DATA0	(*( CAN_EM0ODATA3_type *) 0xf001a1e0u)	/* Extended Message Object 143 Data 0 Register */
#define CAN_EMO143DATA1	(*( CAN_EM0ODATA3_type *) 0xf001a1e4u)	/* Extended Message Object 143 Data 1 Register */
#define CAN_EMO143DATA2	(*( CAN_EM0ODATA3_type *) 0xf001a1e8u)	/* Extended Message Object 143 Data 2 Register */
#define CAN_EMO143DATA4	(*( CAN_EM0ODATA3_type *) 0xf001a1f0u)	/* Extended Message Object 143 Data 4 Register */
#define CAN_EMO143DATA5	(*( CAN_EM0ODATA3_type *) 0xf001a1f4u)	/* Extended Message Object 143 Data 5 Register */
#define CAN_EMO143DATA6	(*( CAN_EM0ODATA3_type *) 0xf001a1f8u)	/* Extended Message Object 143 Data 6 Register */
#define CAN_EMO144DATA0	(*( CAN_EM0ODATA3_type *) 0xf001a200u)	/* Extended Message Object 144 Data 0 Register */
#define CAN_EMO144DATA1	(*( CAN_EM0ODATA3_type *) 0xf001a204u)	/* Extended Message Object 144 Data 1 Register */
#define CAN_EMO144DATA2	(*( CAN_EM0ODATA3_type *) 0xf001a208u)	/* Extended Message Object 144 Data 2 Register */
#define CAN_EMO144DATA4	(*( CAN_EM0ODATA3_type *) 0xf001a210u)	/* Extended Message Object 144 Data 4 Register */
#define CAN_EMO144DATA5	(*( CAN_EM0ODATA3_type *) 0xf001a214u)	/* Extended Message Object 144 Data 5 Register */
#define CAN_EMO144DATA6	(*( CAN_EM0ODATA3_type *) 0xf001a218u)	/* Extended Message Object 144 Data 6 Register */
#define CAN_EMO145DATA0	(*( CAN_EM0ODATA3_type *) 0xf001a220u)	/* Extended Message Object 145 Data 0 Register */
#define CAN_EMO145DATA1	(*( CAN_EM0ODATA3_type *) 0xf001a224u)	/* Extended Message Object 145 Data 1 Register */
#define CAN_EMO145DATA2	(*( CAN_EM0ODATA3_type *) 0xf001a228u)	/* Extended Message Object 145 Data 2 Register */
#define CAN_EMO145DATA4	(*( CAN_EM0ODATA3_type *) 0xf001a230u)	/* Extended Message Object 145 Data 4 Register */
#define CAN_EMO145DATA5	(*( CAN_EM0ODATA3_type *) 0xf001a234u)	/* Extended Message Object 145 Data 5 Register */
#define CAN_EMO145DATA6	(*( CAN_EM0ODATA3_type *) 0xf001a238u)	/* Extended Message Object 145 Data 6 Register */
#define CAN_EMO146DATA0	(*( CAN_EM0ODATA3_type *) 0xf001a240u)	/* Extended Message Object 146 Data 0 Register */
#define CAN_EMO146DATA1	(*( CAN_EM0ODATA3_type *) 0xf001a244u)	/* Extended Message Object 146 Data 1 Register */
#define CAN_EMO146DATA2	(*( CAN_EM0ODATA3_type *) 0xf001a248u)	/* Extended Message Object 146 Data 2 Register */
#define CAN_EMO146DATA4	(*( CAN_EM0ODATA3_type *) 0xf001a250u)	/* Extended Message Object 146 Data 4 Register */
#define CAN_EMO146DATA5	(*( CAN_EM0ODATA3_type *) 0xf001a254u)	/* Extended Message Object 146 Data 5 Register */
#define CAN_EMO146DATA6	(*( CAN_EM0ODATA3_type *) 0xf001a258u)	/* Extended Message Object 146 Data 6 Register */
#define CAN_EMO147DATA0	(*( CAN_EM0ODATA3_type *) 0xf001a260u)	/* Extended Message Object 147 Data 0 Register */
#define CAN_EMO147DATA1	(*( CAN_EM0ODATA3_type *) 0xf001a264u)	/* Extended Message Object 147 Data 1 Register */
#define CAN_EMO147DATA2	(*( CAN_EM0ODATA3_type *) 0xf001a268u)	/* Extended Message Object 147 Data 2 Register */
#define CAN_EMO147DATA4	(*( CAN_EM0ODATA3_type *) 0xf001a270u)	/* Extended Message Object 147 Data 4 Register */
#define CAN_EMO147DATA5	(*( CAN_EM0ODATA3_type *) 0xf001a274u)	/* Extended Message Object 147 Data 5 Register */
#define CAN_EMO147DATA6	(*( CAN_EM0ODATA3_type *) 0xf001a278u)	/* Extended Message Object 147 Data 6 Register */
#define CAN_EMO148DATA0	(*( CAN_EM0ODATA3_type *) 0xf001a280u)	/* Extended Message Object 148 Data 0 Register */
#define CAN_EMO148DATA1	(*( CAN_EM0ODATA3_type *) 0xf001a284u)	/* Extended Message Object 148 Data 1 Register */
#define CAN_EMO148DATA2	(*( CAN_EM0ODATA3_type *) 0xf001a288u)	/* Extended Message Object 148 Data 2 Register */
#define CAN_EMO148DATA4	(*( CAN_EM0ODATA3_type *) 0xf001a290u)	/* Extended Message Object 148 Data 4 Register */
#define CAN_EMO148DATA5	(*( CAN_EM0ODATA3_type *) 0xf001a294u)	/* Extended Message Object 148 Data 5 Register */
#define CAN_EMO148DATA6	(*( CAN_EM0ODATA3_type *) 0xf001a298u)	/* Extended Message Object 148 Data 6 Register */
#define CAN_EMO149DATA0	(*( CAN_EM0ODATA3_type *) 0xf001a2a0u)	/* Extended Message Object 149 Data 0 Register */
#define CAN_EMO149DATA1	(*( CAN_EM0ODATA3_type *) 0xf001a2a4u)	/* Extended Message Object 149 Data 1 Register */
#define CAN_EMO149DATA2	(*( CAN_EM0ODATA3_type *) 0xf001a2a8u)	/* Extended Message Object 149 Data 2 Register */
#define CAN_EMO149DATA4	(*( CAN_EM0ODATA3_type *) 0xf001a2b0u)	/* Extended Message Object 149 Data 4 Register */
#define CAN_EMO149DATA5	(*( CAN_EM0ODATA3_type *) 0xf001a2b4u)	/* Extended Message Object 149 Data 5 Register */
#define CAN_EMO149DATA6	(*( CAN_EM0ODATA3_type *) 0xf001a2b8u)	/* Extended Message Object 149 Data 6 Register */
#define CAN_EMO14DATA0	(*( CAN_EM0ODATA3_type *) 0xf00191c0u)	/* Extended Message Object 14 Data 0 Register */
#define CAN_EMO14DATA1	(*( CAN_EM0ODATA3_type *) 0xf00191c4u)	/* Extended Message Object 14 Data 1 Register */
#define CAN_EMO14DATA2	(*( CAN_EM0ODATA3_type *) 0xf00191c8u)	/* Extended Message Object 14 Data 2 Register */
#define CAN_EMO14DATA4	(*( CAN_EM0ODATA3_type *) 0xf00191d0u)	/* Extended Message Object 14 Data 4 Register */
#define CAN_EMO14DATA5	(*( CAN_EM0ODATA3_type *) 0xf00191d4u)	/* Extended Message Object 14 Data 5 Register */
#define CAN_EMO14DATA6	(*( CAN_EM0ODATA3_type *) 0xf00191d8u)	/* Extended Message Object 14 Data 6 Register */
#define CAN_EMO150DATA0	(*( CAN_EM0ODATA3_type *) 0xf001a2c0u)	/* Extended Message Object 150 Data 0 Register */
#define CAN_EMO150DATA1	(*( CAN_EM0ODATA3_type *) 0xf001a2c4u)	/* Extended Message Object 150 Data 1 Register */
#define CAN_EMO150DATA2	(*( CAN_EM0ODATA3_type *) 0xf001a2c8u)	/* Extended Message Object 150 Data 2 Register */
#define CAN_EMO150DATA4	(*( CAN_EM0ODATA3_type *) 0xf001a2d0u)	/* Extended Message Object 150 Data 4 Register */
#define CAN_EMO150DATA5	(*( CAN_EM0ODATA3_type *) 0xf001a2d4u)	/* Extended Message Object 150 Data 5 Register */
#define CAN_EMO150DATA6	(*( CAN_EM0ODATA3_type *) 0xf001a2d8u)	/* Extended Message Object 150 Data 6 Register */
#define CAN_EMO151DATA0	(*( CAN_EM0ODATA3_type *) 0xf001a2e0u)	/* Extended Message Object 151 Data 0 Register */
#define CAN_EMO151DATA1	(*( CAN_EM0ODATA3_type *) 0xf001a2e4u)	/* Extended Message Object 151 Data 1 Register */
#define CAN_EMO151DATA2	(*( CAN_EM0ODATA3_type *) 0xf001a2e8u)	/* Extended Message Object 151 Data 2 Register */
#define CAN_EMO151DATA4	(*( CAN_EM0ODATA3_type *) 0xf001a2f0u)	/* Extended Message Object 151 Data 4 Register */
#define CAN_EMO151DATA5	(*( CAN_EM0ODATA3_type *) 0xf001a2f4u)	/* Extended Message Object 151 Data 5 Register */
#define CAN_EMO151DATA6	(*( CAN_EM0ODATA3_type *) 0xf001a2f8u)	/* Extended Message Object 151 Data 6 Register */
#define CAN_EMO152DATA0	(*( CAN_EM0ODATA3_type *) 0xf001a300u)	/* Extended Message Object 152 Data 0 Register */
#define CAN_EMO152DATA1	(*( CAN_EM0ODATA3_type *) 0xf001a304u)	/* Extended Message Object 152 Data 1 Register */
#define CAN_EMO152DATA2	(*( CAN_EM0ODATA3_type *) 0xf001a308u)	/* Extended Message Object 152 Data 2 Register */
#define CAN_EMO152DATA4	(*( CAN_EM0ODATA3_type *) 0xf001a310u)	/* Extended Message Object 152 Data 4 Register */
#define CAN_EMO152DATA5	(*( CAN_EM0ODATA3_type *) 0xf001a314u)	/* Extended Message Object 152 Data 5 Register */
#define CAN_EMO152DATA6	(*( CAN_EM0ODATA3_type *) 0xf001a318u)	/* Extended Message Object 152 Data 6 Register */
#define CAN_EMO153DATA0	(*( CAN_EM0ODATA3_type *) 0xf001a320u)	/* Extended Message Object 153 Data 0 Register */
#define CAN_EMO153DATA1	(*( CAN_EM0ODATA3_type *) 0xf001a324u)	/* Extended Message Object 153 Data 1 Register */
#define CAN_EMO153DATA2	(*( CAN_EM0ODATA3_type *) 0xf001a328u)	/* Extended Message Object 153 Data 2 Register */
#define CAN_EMO153DATA4	(*( CAN_EM0ODATA3_type *) 0xf001a330u)	/* Extended Message Object 153 Data 4 Register */
#define CAN_EMO153DATA5	(*( CAN_EM0ODATA3_type *) 0xf001a334u)	/* Extended Message Object 153 Data 5 Register */
#define CAN_EMO153DATA6	(*( CAN_EM0ODATA3_type *) 0xf001a338u)	/* Extended Message Object 153 Data 6 Register */
#define CAN_EMO154DATA0	(*( CAN_EM0ODATA3_type *) 0xf001a340u)	/* Extended Message Object 154 Data 0 Register */
#define CAN_EMO154DATA1	(*( CAN_EM0ODATA3_type *) 0xf001a344u)	/* Extended Message Object 154 Data 1 Register */
#define CAN_EMO154DATA2	(*( CAN_EM0ODATA3_type *) 0xf001a348u)	/* Extended Message Object 154 Data 2 Register */
#define CAN_EMO154DATA4	(*( CAN_EM0ODATA3_type *) 0xf001a350u)	/* Extended Message Object 154 Data 4 Register */
#define CAN_EMO154DATA5	(*( CAN_EM0ODATA3_type *) 0xf001a354u)	/* Extended Message Object 154 Data 5 Register */
#define CAN_EMO154DATA6	(*( CAN_EM0ODATA3_type *) 0xf001a358u)	/* Extended Message Object 154 Data 6 Register */
#define CAN_EMO155DATA0	(*( CAN_EM0ODATA3_type *) 0xf001a360u)	/* Extended Message Object 155 Data 0 Register */
#define CAN_EMO155DATA1	(*( CAN_EM0ODATA3_type *) 0xf001a364u)	/* Extended Message Object 155 Data 1 Register */
#define CAN_EMO155DATA2	(*( CAN_EM0ODATA3_type *) 0xf001a368u)	/* Extended Message Object 155 Data 2 Register */
#define CAN_EMO155DATA4	(*( CAN_EM0ODATA3_type *) 0xf001a370u)	/* Extended Message Object 155 Data 4 Register */
#define CAN_EMO155DATA5	(*( CAN_EM0ODATA3_type *) 0xf001a374u)	/* Extended Message Object 155 Data 5 Register */
#define CAN_EMO155DATA6	(*( CAN_EM0ODATA3_type *) 0xf001a378u)	/* Extended Message Object 155 Data 6 Register */
#define CAN_EMO156DATA0	(*( CAN_EM0ODATA3_type *) 0xf001a380u)	/* Extended Message Object 156 Data 0 Register */
#define CAN_EMO156DATA1	(*( CAN_EM0ODATA3_type *) 0xf001a384u)	/* Extended Message Object 156 Data 1 Register */
#define CAN_EMO156DATA2	(*( CAN_EM0ODATA3_type *) 0xf001a388u)	/* Extended Message Object 156 Data 2 Register */
#define CAN_EMO156DATA4	(*( CAN_EM0ODATA3_type *) 0xf001a390u)	/* Extended Message Object 156 Data 4 Register */
#define CAN_EMO156DATA5	(*( CAN_EM0ODATA3_type *) 0xf001a394u)	/* Extended Message Object 156 Data 5 Register */
#define CAN_EMO156DATA6	(*( CAN_EM0ODATA3_type *) 0xf001a398u)	/* Extended Message Object 156 Data 6 Register */
#define CAN_EMO157DATA0	(*( CAN_EM0ODATA3_type *) 0xf001a3a0u)	/* Extended Message Object 157 Data 0 Register */
#define CAN_EMO157DATA1	(*( CAN_EM0ODATA3_type *) 0xf001a3a4u)	/* Extended Message Object 157 Data 1 Register */
#define CAN_EMO157DATA2	(*( CAN_EM0ODATA3_type *) 0xf001a3a8u)	/* Extended Message Object 157 Data 2 Register */
#define CAN_EMO157DATA4	(*( CAN_EM0ODATA3_type *) 0xf001a3b0u)	/* Extended Message Object 157 Data 4 Register */
#define CAN_EMO157DATA5	(*( CAN_EM0ODATA3_type *) 0xf001a3b4u)	/* Extended Message Object 157 Data 5 Register */
#define CAN_EMO157DATA6	(*( CAN_EM0ODATA3_type *) 0xf001a3b8u)	/* Extended Message Object 157 Data 6 Register */
#define CAN_EMO158DATA0	(*( CAN_EM0ODATA3_type *) 0xf001a3c0u)	/* Extended Message Object 158 Data 0 Register */
#define CAN_EMO158DATA1	(*( CAN_EM0ODATA3_type *) 0xf001a3c4u)	/* Extended Message Object 158 Data 1 Register */
#define CAN_EMO158DATA2	(*( CAN_EM0ODATA3_type *) 0xf001a3c8u)	/* Extended Message Object 158 Data 2 Register */
#define CAN_EMO158DATA4	(*( CAN_EM0ODATA3_type *) 0xf001a3d0u)	/* Extended Message Object 158 Data 4 Register */
#define CAN_EMO158DATA5	(*( CAN_EM0ODATA3_type *) 0xf001a3d4u)	/* Extended Message Object 158 Data 5 Register */
#define CAN_EMO158DATA6	(*( CAN_EM0ODATA3_type *) 0xf001a3d8u)	/* Extended Message Object 158 Data 6 Register */
#define CAN_EMO159DATA0	(*( CAN_EM0ODATA3_type *) 0xf001a3e0u)	/* Extended Message Object 159 Data 0 Register */
#define CAN_EMO159DATA1	(*( CAN_EM0ODATA3_type *) 0xf001a3e4u)	/* Extended Message Object 159 Data 1 Register */
#define CAN_EMO159DATA2	(*( CAN_EM0ODATA3_type *) 0xf001a3e8u)	/* Extended Message Object 159 Data 2 Register */
#define CAN_EMO159DATA4	(*( CAN_EM0ODATA3_type *) 0xf001a3f0u)	/* Extended Message Object 159 Data 4 Register */
#define CAN_EMO159DATA5	(*( CAN_EM0ODATA3_type *) 0xf001a3f4u)	/* Extended Message Object 159 Data 5 Register */
#define CAN_EMO159DATA6	(*( CAN_EM0ODATA3_type *) 0xf001a3f8u)	/* Extended Message Object 159 Data 6 Register */
#define CAN_EMO15DATA0	(*( CAN_EM0ODATA3_type *) 0xf00191e0u)	/* Extended Message Object 15 Data 0 Register */
#define CAN_EMO15DATA1	(*( CAN_EM0ODATA3_type *) 0xf00191e4u)	/* Extended Message Object 15 Data 1 Register */
#define CAN_EMO15DATA2	(*( CAN_EM0ODATA3_type *) 0xf00191e8u)	/* Extended Message Object 15 Data 2 Register */
#define CAN_EMO15DATA4	(*( CAN_EM0ODATA3_type *) 0xf00191f0u)	/* Extended Message Object 15 Data 4 Register */
#define CAN_EMO15DATA5	(*( CAN_EM0ODATA3_type *) 0xf00191f4u)	/* Extended Message Object 15 Data 5 Register */
#define CAN_EMO15DATA6	(*( CAN_EM0ODATA3_type *) 0xf00191f8u)	/* Extended Message Object 15 Data 6 Register */
#define CAN_EMO160DATA0	(*( CAN_EM0ODATA3_type *) 0xf001a400u)	/* Extended Message Object 160 Data 0 Register */
#define CAN_EMO160DATA1	(*( CAN_EM0ODATA3_type *) 0xf001a404u)	/* Extended Message Object 160 Data 1 Register */
#define CAN_EMO160DATA2	(*( CAN_EM0ODATA3_type *) 0xf001a408u)	/* Extended Message Object 160 Data 2 Register */
#define CAN_EMO160DATA4	(*( CAN_EM0ODATA3_type *) 0xf001a410u)	/* Extended Message Object 160 Data 4 Register */
#define CAN_EMO160DATA5	(*( CAN_EM0ODATA3_type *) 0xf001a414u)	/* Extended Message Object 160 Data 5 Register */
#define CAN_EMO160DATA6	(*( CAN_EM0ODATA3_type *) 0xf001a418u)	/* Extended Message Object 160 Data 6 Register */
#define CAN_EMO161DATA0	(*( CAN_EM0ODATA3_type *) 0xf001a420u)	/* Extended Message Object 161 Data 0 Register */
#define CAN_EMO161DATA1	(*( CAN_EM0ODATA3_type *) 0xf001a424u)	/* Extended Message Object 161 Data 1 Register */
#define CAN_EMO161DATA2	(*( CAN_EM0ODATA3_type *) 0xf001a428u)	/* Extended Message Object 161 Data 2 Register */
#define CAN_EMO161DATA4	(*( CAN_EM0ODATA3_type *) 0xf001a430u)	/* Extended Message Object 161 Data 4 Register */
#define CAN_EMO161DATA5	(*( CAN_EM0ODATA3_type *) 0xf001a434u)	/* Extended Message Object 161 Data 5 Register */
#define CAN_EMO161DATA6	(*( CAN_EM0ODATA3_type *) 0xf001a438u)	/* Extended Message Object 161 Data 6 Register */
#define CAN_EMO162DATA0	(*( CAN_EM0ODATA3_type *) 0xf001a440u)	/* Extended Message Object 162 Data 0 Register */
#define CAN_EMO162DATA1	(*( CAN_EM0ODATA3_type *) 0xf001a444u)	/* Extended Message Object 162 Data 1 Register */
#define CAN_EMO162DATA2	(*( CAN_EM0ODATA3_type *) 0xf001a448u)	/* Extended Message Object 162 Data 2 Register */
#define CAN_EMO162DATA4	(*( CAN_EM0ODATA3_type *) 0xf001a450u)	/* Extended Message Object 162 Data 4 Register */
#define CAN_EMO162DATA5	(*( CAN_EM0ODATA3_type *) 0xf001a454u)	/* Extended Message Object 162 Data 5 Register */
#define CAN_EMO162DATA6	(*( CAN_EM0ODATA3_type *) 0xf001a458u)	/* Extended Message Object 162 Data 6 Register */
#define CAN_EMO163DATA0	(*( CAN_EM0ODATA3_type *) 0xf001a460u)	/* Extended Message Object 163 Data 0 Register */
#define CAN_EMO163DATA1	(*( CAN_EM0ODATA3_type *) 0xf001a464u)	/* Extended Message Object 163 Data 1 Register */
#define CAN_EMO163DATA2	(*( CAN_EM0ODATA3_type *) 0xf001a468u)	/* Extended Message Object 163 Data 2 Register */
#define CAN_EMO163DATA4	(*( CAN_EM0ODATA3_type *) 0xf001a470u)	/* Extended Message Object 163 Data 4 Register */
#define CAN_EMO163DATA5	(*( CAN_EM0ODATA3_type *) 0xf001a474u)	/* Extended Message Object 163 Data 5 Register */
#define CAN_EMO163DATA6	(*( CAN_EM0ODATA3_type *) 0xf001a478u)	/* Extended Message Object 163 Data 6 Register */
#define CAN_EMO164DATA0	(*( CAN_EM0ODATA3_type *) 0xf001a480u)	/* Extended Message Object 164 Data 0 Register */
#define CAN_EMO164DATA1	(*( CAN_EM0ODATA3_type *) 0xf001a484u)	/* Extended Message Object 164 Data 1 Register */
#define CAN_EMO164DATA2	(*( CAN_EM0ODATA3_type *) 0xf001a488u)	/* Extended Message Object 164 Data 2 Register */
#define CAN_EMO164DATA4	(*( CAN_EM0ODATA3_type *) 0xf001a490u)	/* Extended Message Object 164 Data 4 Register */
#define CAN_EMO164DATA5	(*( CAN_EM0ODATA3_type *) 0xf001a494u)	/* Extended Message Object 164 Data 5 Register */
#define CAN_EMO164DATA6	(*( CAN_EM0ODATA3_type *) 0xf001a498u)	/* Extended Message Object 164 Data 6 Register */
#define CAN_EMO165DATA0	(*( CAN_EM0ODATA3_type *) 0xf001a4a0u)	/* Extended Message Object 165 Data 0 Register */
#define CAN_EMO165DATA1	(*( CAN_EM0ODATA3_type *) 0xf001a4a4u)	/* Extended Message Object 165 Data 1 Register */
#define CAN_EMO165DATA2	(*( CAN_EM0ODATA3_type *) 0xf001a4a8u)	/* Extended Message Object 165 Data 2 Register */
#define CAN_EMO165DATA4	(*( CAN_EM0ODATA3_type *) 0xf001a4b0u)	/* Extended Message Object 165 Data 4 Register */
#define CAN_EMO165DATA5	(*( CAN_EM0ODATA3_type *) 0xf001a4b4u)	/* Extended Message Object 165 Data 5 Register */
#define CAN_EMO165DATA6	(*( CAN_EM0ODATA3_type *) 0xf001a4b8u)	/* Extended Message Object 165 Data 6 Register */
#define CAN_EMO166DATA0	(*( CAN_EM0ODATA3_type *) 0xf001a4c0u)	/* Extended Message Object 166 Data 0 Register */
#define CAN_EMO166DATA1	(*( CAN_EM0ODATA3_type *) 0xf001a4c4u)	/* Extended Message Object 166 Data 1 Register */
#define CAN_EMO166DATA2	(*( CAN_EM0ODATA3_type *) 0xf001a4c8u)	/* Extended Message Object 166 Data 2 Register */
#define CAN_EMO166DATA4	(*( CAN_EM0ODATA3_type *) 0xf001a4d0u)	/* Extended Message Object 166 Data 4 Register */
#define CAN_EMO166DATA5	(*( CAN_EM0ODATA3_type *) 0xf001a4d4u)	/* Extended Message Object 166 Data 5 Register */
#define CAN_EMO166DATA6	(*( CAN_EM0ODATA3_type *) 0xf001a4d8u)	/* Extended Message Object 166 Data 6 Register */
#define CAN_EMO167DATA0	(*( CAN_EM0ODATA3_type *) 0xf001a4e0u)	/* Extended Message Object 167 Data 0 Register */
#define CAN_EMO167DATA1	(*( CAN_EM0ODATA3_type *) 0xf001a4e4u)	/* Extended Message Object 167 Data 1 Register */
#define CAN_EMO167DATA2	(*( CAN_EM0ODATA3_type *) 0xf001a4e8u)	/* Extended Message Object 167 Data 2 Register */
#define CAN_EMO167DATA4	(*( CAN_EM0ODATA3_type *) 0xf001a4f0u)	/* Extended Message Object 167 Data 4 Register */
#define CAN_EMO167DATA5	(*( CAN_EM0ODATA3_type *) 0xf001a4f4u)	/* Extended Message Object 167 Data 5 Register */
#define CAN_EMO167DATA6	(*( CAN_EM0ODATA3_type *) 0xf001a4f8u)	/* Extended Message Object 167 Data 6 Register */
#define CAN_EMO168DATA0	(*( CAN_EM0ODATA3_type *) 0xf001a500u)	/* Extended Message Object 168 Data 0 Register */
#define CAN_EMO168DATA1	(*( CAN_EM0ODATA3_type *) 0xf001a504u)	/* Extended Message Object 168 Data 1 Register */
#define CAN_EMO168DATA2	(*( CAN_EM0ODATA3_type *) 0xf001a508u)	/* Extended Message Object 168 Data 2 Register */
#define CAN_EMO168DATA4	(*( CAN_EM0ODATA3_type *) 0xf001a510u)	/* Extended Message Object 168 Data 4 Register */
#define CAN_EMO168DATA5	(*( CAN_EM0ODATA3_type *) 0xf001a514u)	/* Extended Message Object 168 Data 5 Register */
#define CAN_EMO168DATA6	(*( CAN_EM0ODATA3_type *) 0xf001a518u)	/* Extended Message Object 168 Data 6 Register */
#define CAN_EMO169DATA0	(*( CAN_EM0ODATA3_type *) 0xf001a520u)	/* Extended Message Object 169 Data 0 Register */
#define CAN_EMO169DATA1	(*( CAN_EM0ODATA3_type *) 0xf001a524u)	/* Extended Message Object 169 Data 1 Register */
#define CAN_EMO169DATA2	(*( CAN_EM0ODATA3_type *) 0xf001a528u)	/* Extended Message Object 169 Data 2 Register */
#define CAN_EMO169DATA4	(*( CAN_EM0ODATA3_type *) 0xf001a530u)	/* Extended Message Object 169 Data 4 Register */
#define CAN_EMO169DATA5	(*( CAN_EM0ODATA3_type *) 0xf001a534u)	/* Extended Message Object 169 Data 5 Register */
#define CAN_EMO169DATA6	(*( CAN_EM0ODATA3_type *) 0xf001a538u)	/* Extended Message Object 169 Data 6 Register */
#define CAN_EMO16DATA0	(*( CAN_EM0ODATA3_type *) 0xf0019200u)	/* Extended Message Object 16 Data 0 Register */
#define CAN_EMO16DATA1	(*( CAN_EM0ODATA3_type *) 0xf0019204u)	/* Extended Message Object 16 Data 1 Register */
#define CAN_EMO16DATA2	(*( CAN_EM0ODATA3_type *) 0xf0019208u)	/* Extended Message Object 16 Data 2 Register */
#define CAN_EMO16DATA4	(*( CAN_EM0ODATA3_type *) 0xf0019210u)	/* Extended Message Object 16 Data 4 Register */
#define CAN_EMO16DATA5	(*( CAN_EM0ODATA3_type *) 0xf0019214u)	/* Extended Message Object 16 Data 5 Register */
#define CAN_EMO16DATA6	(*( CAN_EM0ODATA3_type *) 0xf0019218u)	/* Extended Message Object 16 Data 6 Register */
#define CAN_EMO170DATA0	(*( CAN_EM0ODATA3_type *) 0xf001a540u)	/* Extended Message Object 170 Data 0 Register */
#define CAN_EMO170DATA1	(*( CAN_EM0ODATA3_type *) 0xf001a544u)	/* Extended Message Object 170 Data 1 Register */
#define CAN_EMO170DATA2	(*( CAN_EM0ODATA3_type *) 0xf001a548u)	/* Extended Message Object 170 Data 2 Register */
#define CAN_EMO170DATA4	(*( CAN_EM0ODATA3_type *) 0xf001a550u)	/* Extended Message Object 170 Data 4 Register */
#define CAN_EMO170DATA5	(*( CAN_EM0ODATA3_type *) 0xf001a554u)	/* Extended Message Object 170 Data 5 Register */
#define CAN_EMO170DATA6	(*( CAN_EM0ODATA3_type *) 0xf001a558u)	/* Extended Message Object 170 Data 6 Register */
#define CAN_EMO171DATA0	(*( CAN_EM0ODATA3_type *) 0xf001a560u)	/* Extended Message Object 171 Data 0 Register */
#define CAN_EMO171DATA1	(*( CAN_EM0ODATA3_type *) 0xf001a564u)	/* Extended Message Object 171 Data 1 Register */
#define CAN_EMO171DATA2	(*( CAN_EM0ODATA3_type *) 0xf001a568u)	/* Extended Message Object 171 Data 2 Register */
#define CAN_EMO171DATA4	(*( CAN_EM0ODATA3_type *) 0xf001a570u)	/* Extended Message Object 171 Data 4 Register */
#define CAN_EMO171DATA5	(*( CAN_EM0ODATA3_type *) 0xf001a574u)	/* Extended Message Object 171 Data 5 Register */
#define CAN_EMO171DATA6	(*( CAN_EM0ODATA3_type *) 0xf001a578u)	/* Extended Message Object 171 Data 6 Register */
#define CAN_EMO172DATA0	(*( CAN_EM0ODATA3_type *) 0xf001a580u)	/* Extended Message Object 172 Data 0 Register */
#define CAN_EMO172DATA1	(*( CAN_EM0ODATA3_type *) 0xf001a584u)	/* Extended Message Object 172 Data 1 Register */
#define CAN_EMO172DATA2	(*( CAN_EM0ODATA3_type *) 0xf001a588u)	/* Extended Message Object 172 Data 2 Register */
#define CAN_EMO172DATA4	(*( CAN_EM0ODATA3_type *) 0xf001a590u)	/* Extended Message Object 172 Data 4 Register */
#define CAN_EMO172DATA5	(*( CAN_EM0ODATA3_type *) 0xf001a594u)	/* Extended Message Object 172 Data 5 Register */
#define CAN_EMO172DATA6	(*( CAN_EM0ODATA3_type *) 0xf001a598u)	/* Extended Message Object 172 Data 6 Register */
#define CAN_EMO173DATA0	(*( CAN_EM0ODATA3_type *) 0xf001a5a0u)	/* Extended Message Object 173 Data 0 Register */
#define CAN_EMO173DATA1	(*( CAN_EM0ODATA3_type *) 0xf001a5a4u)	/* Extended Message Object 173 Data 1 Register */
#define CAN_EMO173DATA2	(*( CAN_EM0ODATA3_type *) 0xf001a5a8u)	/* Extended Message Object 173 Data 2 Register */
#define CAN_EMO173DATA4	(*( CAN_EM0ODATA3_type *) 0xf001a5b0u)	/* Extended Message Object 173 Data 4 Register */
#define CAN_EMO173DATA5	(*( CAN_EM0ODATA3_type *) 0xf001a5b4u)	/* Extended Message Object 173 Data 5 Register */
#define CAN_EMO173DATA6	(*( CAN_EM0ODATA3_type *) 0xf001a5b8u)	/* Extended Message Object 173 Data 6 Register */
#define CAN_EMO174DATA0	(*( CAN_EM0ODATA3_type *) 0xf001a5c0u)	/* Extended Message Object 174 Data 0 Register */
#define CAN_EMO174DATA1	(*( CAN_EM0ODATA3_type *) 0xf001a5c4u)	/* Extended Message Object 174 Data 1 Register */
#define CAN_EMO174DATA2	(*( CAN_EM0ODATA3_type *) 0xf001a5c8u)	/* Extended Message Object 174 Data 2 Register */
#define CAN_EMO174DATA4	(*( CAN_EM0ODATA3_type *) 0xf001a5d0u)	/* Extended Message Object 174 Data 4 Register */
#define CAN_EMO174DATA5	(*( CAN_EM0ODATA3_type *) 0xf001a5d4u)	/* Extended Message Object 174 Data 5 Register */
#define CAN_EMO174DATA6	(*( CAN_EM0ODATA3_type *) 0xf001a5d8u)	/* Extended Message Object 174 Data 6 Register */
#define CAN_EMO175DATA0	(*( CAN_EM0ODATA3_type *) 0xf001a5e0u)	/* Extended Message Object 175 Data 0 Register */
#define CAN_EMO175DATA1	(*( CAN_EM0ODATA3_type *) 0xf001a5e4u)	/* Extended Message Object 175 Data 1 Register */
#define CAN_EMO175DATA2	(*( CAN_EM0ODATA3_type *) 0xf001a5e8u)	/* Extended Message Object 175 Data 2 Register */
#define CAN_EMO175DATA4	(*( CAN_EM0ODATA3_type *) 0xf001a5f0u)	/* Extended Message Object 175 Data 4 Register */
#define CAN_EMO175DATA5	(*( CAN_EM0ODATA3_type *) 0xf001a5f4u)	/* Extended Message Object 175 Data 5 Register */
#define CAN_EMO175DATA6	(*( CAN_EM0ODATA3_type *) 0xf001a5f8u)	/* Extended Message Object 175 Data 6 Register */
#define CAN_EMO176DATA0	(*( CAN_EM0ODATA3_type *) 0xf001a600u)	/* Extended Message Object 176 Data 0 Register */
#define CAN_EMO176DATA1	(*( CAN_EM0ODATA3_type *) 0xf001a604u)	/* Extended Message Object 176 Data 1 Register */
#define CAN_EMO176DATA2	(*( CAN_EM0ODATA3_type *) 0xf001a608u)	/* Extended Message Object 176 Data 2 Register */
#define CAN_EMO176DATA4	(*( CAN_EM0ODATA3_type *) 0xf001a610u)	/* Extended Message Object 176 Data 4 Register */
#define CAN_EMO176DATA5	(*( CAN_EM0ODATA3_type *) 0xf001a614u)	/* Extended Message Object 176 Data 5 Register */
#define CAN_EMO176DATA6	(*( CAN_EM0ODATA3_type *) 0xf001a618u)	/* Extended Message Object 176 Data 6 Register */
#define CAN_EMO177DATA0	(*( CAN_EM0ODATA3_type *) 0xf001a620u)	/* Extended Message Object 177 Data 0 Register */
#define CAN_EMO177DATA1	(*( CAN_EM0ODATA3_type *) 0xf001a624u)	/* Extended Message Object 177 Data 1 Register */
#define CAN_EMO177DATA2	(*( CAN_EM0ODATA3_type *) 0xf001a628u)	/* Extended Message Object 177 Data 2 Register */
#define CAN_EMO177DATA4	(*( CAN_EM0ODATA3_type *) 0xf001a630u)	/* Extended Message Object 177 Data 4 Register */
#define CAN_EMO177DATA5	(*( CAN_EM0ODATA3_type *) 0xf001a634u)	/* Extended Message Object 177 Data 5 Register */
#define CAN_EMO177DATA6	(*( CAN_EM0ODATA3_type *) 0xf001a638u)	/* Extended Message Object 177 Data 6 Register */
#define CAN_EMO178DATA0	(*( CAN_EM0ODATA3_type *) 0xf001a640u)	/* Extended Message Object 178 Data 0 Register */
#define CAN_EMO178DATA1	(*( CAN_EM0ODATA3_type *) 0xf001a644u)	/* Extended Message Object 178 Data 1 Register */
#define CAN_EMO178DATA2	(*( CAN_EM0ODATA3_type *) 0xf001a648u)	/* Extended Message Object 178 Data 2 Register */
#define CAN_EMO178DATA4	(*( CAN_EM0ODATA3_type *) 0xf001a650u)	/* Extended Message Object 178 Data 4 Register */
#define CAN_EMO178DATA5	(*( CAN_EM0ODATA3_type *) 0xf001a654u)	/* Extended Message Object 178 Data 5 Register */
#define CAN_EMO178DATA6	(*( CAN_EM0ODATA3_type *) 0xf001a658u)	/* Extended Message Object 178 Data 6 Register */
#define CAN_EMO179DATA0	(*( CAN_EM0ODATA3_type *) 0xf001a660u)	/* Extended Message Object 179 Data 0 Register */
#define CAN_EMO179DATA1	(*( CAN_EM0ODATA3_type *) 0xf001a664u)	/* Extended Message Object 179 Data 1 Register */
#define CAN_EMO179DATA2	(*( CAN_EM0ODATA3_type *) 0xf001a668u)	/* Extended Message Object 179 Data 2 Register */
#define CAN_EMO179DATA4	(*( CAN_EM0ODATA3_type *) 0xf001a670u)	/* Extended Message Object 179 Data 4 Register */
#define CAN_EMO179DATA5	(*( CAN_EM0ODATA3_type *) 0xf001a674u)	/* Extended Message Object 179 Data 5 Register */
#define CAN_EMO179DATA6	(*( CAN_EM0ODATA3_type *) 0xf001a678u)	/* Extended Message Object 179 Data 6 Register */
#define CAN_EMO17DATA0	(*( CAN_EM0ODATA3_type *) 0xf0019220u)	/* Extended Message Object 17 Data 0 Register */
#define CAN_EMO17DATA1	(*( CAN_EM0ODATA3_type *) 0xf0019224u)	/* Extended Message Object 17 Data 1 Register */
#define CAN_EMO17DATA2	(*( CAN_EM0ODATA3_type *) 0xf0019228u)	/* Extended Message Object 17 Data 2 Register */
#define CAN_EMO17DATA4	(*( CAN_EM0ODATA3_type *) 0xf0019230u)	/* Extended Message Object 17 Data 4 Register */
#define CAN_EMO17DATA5	(*( CAN_EM0ODATA3_type *) 0xf0019234u)	/* Extended Message Object 17 Data 5 Register */
#define CAN_EMO17DATA6	(*( CAN_EM0ODATA3_type *) 0xf0019238u)	/* Extended Message Object 17 Data 6 Register */
#define CAN_EMO180DATA0	(*( CAN_EM0ODATA3_type *) 0xf001a680u)	/* Extended Message Object 180 Data 0 Register */
#define CAN_EMO180DATA1	(*( CAN_EM0ODATA3_type *) 0xf001a684u)	/* Extended Message Object 180 Data 1 Register */
#define CAN_EMO180DATA2	(*( CAN_EM0ODATA3_type *) 0xf001a688u)	/* Extended Message Object 180 Data 2 Register */
#define CAN_EMO180DATA4	(*( CAN_EM0ODATA3_type *) 0xf001a690u)	/* Extended Message Object 180 Data 4 Register */
#define CAN_EMO180DATA5	(*( CAN_EM0ODATA3_type *) 0xf001a694u)	/* Extended Message Object 180 Data 5 Register */
#define CAN_EMO180DATA6	(*( CAN_EM0ODATA3_type *) 0xf001a698u)	/* Extended Message Object 180 Data 6 Register */
#define CAN_EMO181DATA0	(*( CAN_EM0ODATA3_type *) 0xf001a6a0u)	/* Extended Message Object 181 Data 0 Register */
#define CAN_EMO181DATA1	(*( CAN_EM0ODATA3_type *) 0xf001a6a4u)	/* Extended Message Object 181 Data 1 Register */
#define CAN_EMO181DATA2	(*( CAN_EM0ODATA3_type *) 0xf001a6a8u)	/* Extended Message Object 181 Data 2 Register */
#define CAN_EMO181DATA4	(*( CAN_EM0ODATA3_type *) 0xf001a6b0u)	/* Extended Message Object 181 Data 4 Register */
#define CAN_EMO181DATA5	(*( CAN_EM0ODATA3_type *) 0xf001a6b4u)	/* Extended Message Object 181 Data 5 Register */
#define CAN_EMO181DATA6	(*( CAN_EM0ODATA3_type *) 0xf001a6b8u)	/* Extended Message Object 181 Data 6 Register */
#define CAN_EMO182DATA0	(*( CAN_EM0ODATA3_type *) 0xf001a6c0u)	/* Extended Message Object 182 Data 0 Register */
#define CAN_EMO182DATA1	(*( CAN_EM0ODATA3_type *) 0xf001a6c4u)	/* Extended Message Object 182 Data 1 Register */
#define CAN_EMO182DATA2	(*( CAN_EM0ODATA3_type *) 0xf001a6c8u)	/* Extended Message Object 182 Data 2 Register */
#define CAN_EMO182DATA4	(*( CAN_EM0ODATA3_type *) 0xf001a6d0u)	/* Extended Message Object 182 Data 4 Register */
#define CAN_EMO182DATA5	(*( CAN_EM0ODATA3_type *) 0xf001a6d4u)	/* Extended Message Object 182 Data 5 Register */
#define CAN_EMO182DATA6	(*( CAN_EM0ODATA3_type *) 0xf001a6d8u)	/* Extended Message Object 182 Data 6 Register */
#define CAN_EMO183DATA0	(*( CAN_EM0ODATA3_type *) 0xf001a6e0u)	/* Extended Message Object 183 Data 0 Register */
#define CAN_EMO183DATA1	(*( CAN_EM0ODATA3_type *) 0xf001a6e4u)	/* Extended Message Object 183 Data 1 Register */
#define CAN_EMO183DATA2	(*( CAN_EM0ODATA3_type *) 0xf001a6e8u)	/* Extended Message Object 183 Data 2 Register */
#define CAN_EMO183DATA4	(*( CAN_EM0ODATA3_type *) 0xf001a6f0u)	/* Extended Message Object 183 Data 4 Register */
#define CAN_EMO183DATA5	(*( CAN_EM0ODATA3_type *) 0xf001a6f4u)	/* Extended Message Object 183 Data 5 Register */
#define CAN_EMO183DATA6	(*( CAN_EM0ODATA3_type *) 0xf001a6f8u)	/* Extended Message Object 183 Data 6 Register */
#define CAN_EMO184DATA0	(*( CAN_EM0ODATA3_type *) 0xf001a700u)	/* Extended Message Object 184 Data 0 Register */
#define CAN_EMO184DATA1	(*( CAN_EM0ODATA3_type *) 0xf001a704u)	/* Extended Message Object 184 Data 1 Register */
#define CAN_EMO184DATA2	(*( CAN_EM0ODATA3_type *) 0xf001a708u)	/* Extended Message Object 184 Data 2 Register */
#define CAN_EMO184DATA4	(*( CAN_EM0ODATA3_type *) 0xf001a710u)	/* Extended Message Object 184 Data 4 Register */
#define CAN_EMO184DATA5	(*( CAN_EM0ODATA3_type *) 0xf001a714u)	/* Extended Message Object 184 Data 5 Register */
#define CAN_EMO184DATA6	(*( CAN_EM0ODATA3_type *) 0xf001a718u)	/* Extended Message Object 184 Data 6 Register */
#define CAN_EMO185DATA0	(*( CAN_EM0ODATA3_type *) 0xf001a720u)	/* Extended Message Object 185 Data 0 Register */
#define CAN_EMO185DATA1	(*( CAN_EM0ODATA3_type *) 0xf001a724u)	/* Extended Message Object 185 Data 1 Register */
#define CAN_EMO185DATA2	(*( CAN_EM0ODATA3_type *) 0xf001a728u)	/* Extended Message Object 185 Data 2 Register */
#define CAN_EMO185DATA4	(*( CAN_EM0ODATA3_type *) 0xf001a730u)	/* Extended Message Object 185 Data 4 Register */
#define CAN_EMO185DATA5	(*( CAN_EM0ODATA3_type *) 0xf001a734u)	/* Extended Message Object 185 Data 5 Register */
#define CAN_EMO185DATA6	(*( CAN_EM0ODATA3_type *) 0xf001a738u)	/* Extended Message Object 185 Data 6 Register */
#define CAN_EMO186DATA0	(*( CAN_EM0ODATA3_type *) 0xf001a740u)	/* Extended Message Object 186 Data 0 Register */
#define CAN_EMO186DATA1	(*( CAN_EM0ODATA3_type *) 0xf001a744u)	/* Extended Message Object 186 Data 1 Register */
#define CAN_EMO186DATA2	(*( CAN_EM0ODATA3_type *) 0xf001a748u)	/* Extended Message Object 186 Data 2 Register */
#define CAN_EMO186DATA4	(*( CAN_EM0ODATA3_type *) 0xf001a750u)	/* Extended Message Object 186 Data 4 Register */
#define CAN_EMO186DATA5	(*( CAN_EM0ODATA3_type *) 0xf001a754u)	/* Extended Message Object 186 Data 5 Register */
#define CAN_EMO186DATA6	(*( CAN_EM0ODATA3_type *) 0xf001a758u)	/* Extended Message Object 186 Data 6 Register */
#define CAN_EMO187DATA0	(*( CAN_EM0ODATA3_type *) 0xf001a760u)	/* Extended Message Object 187 Data 0 Register */
#define CAN_EMO187DATA1	(*( CAN_EM0ODATA3_type *) 0xf001a764u)	/* Extended Message Object 187 Data 1 Register */
#define CAN_EMO187DATA2	(*( CAN_EM0ODATA3_type *) 0xf001a768u)	/* Extended Message Object 187 Data 2 Register */
#define CAN_EMO187DATA4	(*( CAN_EM0ODATA3_type *) 0xf001a770u)	/* Extended Message Object 187 Data 4 Register */
#define CAN_EMO187DATA5	(*( CAN_EM0ODATA3_type *) 0xf001a774u)	/* Extended Message Object 187 Data 5 Register */
#define CAN_EMO187DATA6	(*( CAN_EM0ODATA3_type *) 0xf001a778u)	/* Extended Message Object 187 Data 6 Register */
#define CAN_EMO188DATA0	(*( CAN_EM0ODATA3_type *) 0xf001a780u)	/* Extended Message Object 188 Data 0 Register */
#define CAN_EMO188DATA1	(*( CAN_EM0ODATA3_type *) 0xf001a784u)	/* Extended Message Object 188 Data 1 Register */
#define CAN_EMO188DATA2	(*( CAN_EM0ODATA3_type *) 0xf001a788u)	/* Extended Message Object 188 Data 2 Register */
#define CAN_EMO188DATA4	(*( CAN_EM0ODATA3_type *) 0xf001a790u)	/* Extended Message Object 188 Data 4 Register */
#define CAN_EMO188DATA5	(*( CAN_EM0ODATA3_type *) 0xf001a794u)	/* Extended Message Object 188 Data 5 Register */
#define CAN_EMO188DATA6	(*( CAN_EM0ODATA3_type *) 0xf001a798u)	/* Extended Message Object 188 Data 6 Register */
#define CAN_EMO189DATA0	(*( CAN_EM0ODATA3_type *) 0xf001a7a0u)	/* Extended Message Object 189 Data 0 Register */
#define CAN_EMO189DATA1	(*( CAN_EM0ODATA3_type *) 0xf001a7a4u)	/* Extended Message Object 189 Data 1 Register */
#define CAN_EMO189DATA2	(*( CAN_EM0ODATA3_type *) 0xf001a7a8u)	/* Extended Message Object 189 Data 2 Register */
#define CAN_EMO189DATA4	(*( CAN_EM0ODATA3_type *) 0xf001a7b0u)	/* Extended Message Object 189 Data 4 Register */
#define CAN_EMO189DATA5	(*( CAN_EM0ODATA3_type *) 0xf001a7b4u)	/* Extended Message Object 189 Data 5 Register */
#define CAN_EMO189DATA6	(*( CAN_EM0ODATA3_type *) 0xf001a7b8u)	/* Extended Message Object 189 Data 6 Register */
#define CAN_EMO18DATA0	(*( CAN_EM0ODATA3_type *) 0xf0019240u)	/* Extended Message Object 18 Data 0 Register */
#define CAN_EMO18DATA1	(*( CAN_EM0ODATA3_type *) 0xf0019244u)	/* Extended Message Object 18 Data 1 Register */
#define CAN_EMO18DATA2	(*( CAN_EM0ODATA3_type *) 0xf0019248u)	/* Extended Message Object 18 Data 2 Register */
#define CAN_EMO18DATA4	(*( CAN_EM0ODATA3_type *) 0xf0019250u)	/* Extended Message Object 18 Data 4 Register */
#define CAN_EMO18DATA5	(*( CAN_EM0ODATA3_type *) 0xf0019254u)	/* Extended Message Object 18 Data 5 Register */
#define CAN_EMO18DATA6	(*( CAN_EM0ODATA3_type *) 0xf0019258u)	/* Extended Message Object 18 Data 6 Register */
#define CAN_EMO190DATA0	(*( CAN_EM0ODATA3_type *) 0xf001a7c0u)	/* Extended Message Object 190 Data 0 Register */
#define CAN_EMO190DATA1	(*( CAN_EM0ODATA3_type *) 0xf001a7c4u)	/* Extended Message Object 190 Data 1 Register */
#define CAN_EMO190DATA2	(*( CAN_EM0ODATA3_type *) 0xf001a7c8u)	/* Extended Message Object 190 Data 2 Register */
#define CAN_EMO190DATA4	(*( CAN_EM0ODATA3_type *) 0xf001a7d0u)	/* Extended Message Object 190 Data 4 Register */
#define CAN_EMO190DATA5	(*( CAN_EM0ODATA3_type *) 0xf001a7d4u)	/* Extended Message Object 190 Data 5 Register */
#define CAN_EMO190DATA6	(*( CAN_EM0ODATA3_type *) 0xf001a7d8u)	/* Extended Message Object 190 Data 6 Register */
#define CAN_EMO191DATA0	(*( CAN_EM0ODATA3_type *) 0xf001a7e0u)	/* Extended Message Object 191 Data 0 Register */
#define CAN_EMO191DATA1	(*( CAN_EM0ODATA3_type *) 0xf001a7e4u)	/* Extended Message Object 191 Data 1 Register */
#define CAN_EMO191DATA2	(*( CAN_EM0ODATA3_type *) 0xf001a7e8u)	/* Extended Message Object 191 Data 2 Register */
#define CAN_EMO191DATA4	(*( CAN_EM0ODATA3_type *) 0xf001a7f0u)	/* Extended Message Object 191 Data 4 Register */
#define CAN_EMO191DATA5	(*( CAN_EM0ODATA3_type *) 0xf001a7f4u)	/* Extended Message Object 191 Data 5 Register */
#define CAN_EMO191DATA6	(*( CAN_EM0ODATA3_type *) 0xf001a7f8u)	/* Extended Message Object 191 Data 6 Register */
#define CAN_EMO192DATA0	(*( CAN_EM0ODATA3_type *) 0xf001a800u)	/* Extended Message Object 192 Data 0 Register */
#define CAN_EMO192DATA1	(*( CAN_EM0ODATA3_type *) 0xf001a804u)	/* Extended Message Object 192 Data 1 Register */
#define CAN_EMO192DATA2	(*( CAN_EM0ODATA3_type *) 0xf001a808u)	/* Extended Message Object 192 Data 2 Register */
#define CAN_EMO192DATA4	(*( CAN_EM0ODATA3_type *) 0xf001a810u)	/* Extended Message Object 192 Data 4 Register */
#define CAN_EMO192DATA5	(*( CAN_EM0ODATA3_type *) 0xf001a814u)	/* Extended Message Object 192 Data 5 Register */
#define CAN_EMO192DATA6	(*( CAN_EM0ODATA3_type *) 0xf001a818u)	/* Extended Message Object 192 Data 6 Register */
#define CAN_EMO193DATA0	(*( CAN_EM0ODATA3_type *) 0xf001a820u)	/* Extended Message Object 193 Data 0 Register */
#define CAN_EMO193DATA1	(*( CAN_EM0ODATA3_type *) 0xf001a824u)	/* Extended Message Object 193 Data 1 Register */
#define CAN_EMO193DATA2	(*( CAN_EM0ODATA3_type *) 0xf001a828u)	/* Extended Message Object 193 Data 2 Register */
#define CAN_EMO193DATA4	(*( CAN_EM0ODATA3_type *) 0xf001a830u)	/* Extended Message Object 193 Data 4 Register */
#define CAN_EMO193DATA5	(*( CAN_EM0ODATA3_type *) 0xf001a834u)	/* Extended Message Object 193 Data 5 Register */
#define CAN_EMO193DATA6	(*( CAN_EM0ODATA3_type *) 0xf001a838u)	/* Extended Message Object 193 Data 6 Register */
#define CAN_EMO194DATA0	(*( CAN_EM0ODATA3_type *) 0xf001a840u)	/* Extended Message Object 194 Data 0 Register */
#define CAN_EMO194DATA1	(*( CAN_EM0ODATA3_type *) 0xf001a844u)	/* Extended Message Object 194 Data 1 Register */
#define CAN_EMO194DATA2	(*( CAN_EM0ODATA3_type *) 0xf001a848u)	/* Extended Message Object 194 Data 2 Register */
#define CAN_EMO194DATA4	(*( CAN_EM0ODATA3_type *) 0xf001a850u)	/* Extended Message Object 194 Data 4 Register */
#define CAN_EMO194DATA5	(*( CAN_EM0ODATA3_type *) 0xf001a854u)	/* Extended Message Object 194 Data 5 Register */
#define CAN_EMO194DATA6	(*( CAN_EM0ODATA3_type *) 0xf001a858u)	/* Extended Message Object 194 Data 6 Register */
#define CAN_EMO195DATA0	(*( CAN_EM0ODATA3_type *) 0xf001a860u)	/* Extended Message Object 195 Data 0 Register */
#define CAN_EMO195DATA1	(*( CAN_EM0ODATA3_type *) 0xf001a864u)	/* Extended Message Object 195 Data 1 Register */
#define CAN_EMO195DATA2	(*( CAN_EM0ODATA3_type *) 0xf001a868u)	/* Extended Message Object 195 Data 2 Register */
#define CAN_EMO195DATA4	(*( CAN_EM0ODATA3_type *) 0xf001a870u)	/* Extended Message Object 195 Data 4 Register */
#define CAN_EMO195DATA5	(*( CAN_EM0ODATA3_type *) 0xf001a874u)	/* Extended Message Object 195 Data 5 Register */
#define CAN_EMO195DATA6	(*( CAN_EM0ODATA3_type *) 0xf001a878u)	/* Extended Message Object 195 Data 6 Register */
#define CAN_EMO196DATA0	(*( CAN_EM0ODATA3_type *) 0xf001a880u)	/* Extended Message Object 196 Data 0 Register */
#define CAN_EMO196DATA1	(*( CAN_EM0ODATA3_type *) 0xf001a884u)	/* Extended Message Object 196 Data 1 Register */
#define CAN_EMO196DATA2	(*( CAN_EM0ODATA3_type *) 0xf001a888u)	/* Extended Message Object 196 Data 2 Register */
#define CAN_EMO196DATA4	(*( CAN_EM0ODATA3_type *) 0xf001a890u)	/* Extended Message Object 196 Data 4 Register */
#define CAN_EMO196DATA5	(*( CAN_EM0ODATA3_type *) 0xf001a894u)	/* Extended Message Object 196 Data 5 Register */
#define CAN_EMO196DATA6	(*( CAN_EM0ODATA3_type *) 0xf001a898u)	/* Extended Message Object 196 Data 6 Register */
#define CAN_EMO197DATA0	(*( CAN_EM0ODATA3_type *) 0xf001a8a0u)	/* Extended Message Object 197 Data 0 Register */
#define CAN_EMO197DATA1	(*( CAN_EM0ODATA3_type *) 0xf001a8a4u)	/* Extended Message Object 197 Data 1 Register */
#define CAN_EMO197DATA2	(*( CAN_EM0ODATA3_type *) 0xf001a8a8u)	/* Extended Message Object 197 Data 2 Register */
#define CAN_EMO197DATA4	(*( CAN_EM0ODATA3_type *) 0xf001a8b0u)	/* Extended Message Object 197 Data 4 Register */
#define CAN_EMO197DATA5	(*( CAN_EM0ODATA3_type *) 0xf001a8b4u)	/* Extended Message Object 197 Data 5 Register */
#define CAN_EMO197DATA6	(*( CAN_EM0ODATA3_type *) 0xf001a8b8u)	/* Extended Message Object 197 Data 6 Register */
#define CAN_EMO198DATA0	(*( CAN_EM0ODATA3_type *) 0xf001a8c0u)	/* Extended Message Object 198 Data 0 Register */
#define CAN_EMO198DATA1	(*( CAN_EM0ODATA3_type *) 0xf001a8c4u)	/* Extended Message Object 198 Data 1 Register */
#define CAN_EMO198DATA2	(*( CAN_EM0ODATA3_type *) 0xf001a8c8u)	/* Extended Message Object 198 Data 2 Register */
#define CAN_EMO198DATA4	(*( CAN_EM0ODATA3_type *) 0xf001a8d0u)	/* Extended Message Object 198 Data 4 Register */
#define CAN_EMO198DATA5	(*( CAN_EM0ODATA3_type *) 0xf001a8d4u)	/* Extended Message Object 198 Data 5 Register */
#define CAN_EMO198DATA6	(*( CAN_EM0ODATA3_type *) 0xf001a8d8u)	/* Extended Message Object 198 Data 6 Register */
#define CAN_EMO199DATA0	(*( CAN_EM0ODATA3_type *) 0xf001a8e0u)	/* Extended Message Object 199 Data 0 Register */
#define CAN_EMO199DATA1	(*( CAN_EM0ODATA3_type *) 0xf001a8e4u)	/* Extended Message Object 199 Data 1 Register */
#define CAN_EMO199DATA2	(*( CAN_EM0ODATA3_type *) 0xf001a8e8u)	/* Extended Message Object 199 Data 2 Register */
#define CAN_EMO199DATA4	(*( CAN_EM0ODATA3_type *) 0xf001a8f0u)	/* Extended Message Object 199 Data 4 Register */
#define CAN_EMO199DATA5	(*( CAN_EM0ODATA3_type *) 0xf001a8f4u)	/* Extended Message Object 199 Data 5 Register */
#define CAN_EMO199DATA6	(*( CAN_EM0ODATA3_type *) 0xf001a8f8u)	/* Extended Message Object 199 Data 6 Register */
#define CAN_EMO19DATA0	(*( CAN_EM0ODATA3_type *) 0xf0019260u)	/* Extended Message Object 19 Data 0 Register */
#define CAN_EMO19DATA1	(*( CAN_EM0ODATA3_type *) 0xf0019264u)	/* Extended Message Object 19 Data 1 Register */
#define CAN_EMO19DATA2	(*( CAN_EM0ODATA3_type *) 0xf0019268u)	/* Extended Message Object 19 Data 2 Register */
#define CAN_EMO19DATA4	(*( CAN_EM0ODATA3_type *) 0xf0019270u)	/* Extended Message Object 19 Data 4 Register */
#define CAN_EMO19DATA5	(*( CAN_EM0ODATA3_type *) 0xf0019274u)	/* Extended Message Object 19 Data 5 Register */
#define CAN_EMO19DATA6	(*( CAN_EM0ODATA3_type *) 0xf0019278u)	/* Extended Message Object 19 Data 6 Register */
#define CAN_EMO1DATA0	(*( CAN_EM0ODATA3_type *) 0xf0019020u)	/* Extended Message Object 1 Data 0 Register */
#define CAN_EMO1DATA1	(*( CAN_EM0ODATA3_type *) 0xf0019024u)	/* Extended Message Object 1 Data 1 Register */
#define CAN_EMO1DATA2	(*( CAN_EM0ODATA3_type *) 0xf0019028u)	/* Extended Message Object 1 Data 2 Register */
#define CAN_EMO1DATA4	(*( CAN_EM0ODATA3_type *) 0xf0019030u)	/* Extended Message Object 1 Data 4 Register */
#define CAN_EMO1DATA5	(*( CAN_EM0ODATA3_type *) 0xf0019034u)	/* Extended Message Object 1 Data 5 Register */
#define CAN_EMO1DATA6	(*( CAN_EM0ODATA3_type *) 0xf0019038u)	/* Extended Message Object 1 Data 6 Register */
#define CAN_EMO200DATA0	(*( CAN_EM0ODATA3_type *) 0xf001a900u)	/* Extended Message Object 200 Data 0 Register */
#define CAN_EMO200DATA1	(*( CAN_EM0ODATA3_type *) 0xf001a904u)	/* Extended Message Object 200 Data 1 Register */
#define CAN_EMO200DATA2	(*( CAN_EM0ODATA3_type *) 0xf001a908u)	/* Extended Message Object 200 Data 2 Register */
#define CAN_EMO200DATA4	(*( CAN_EM0ODATA3_type *) 0xf001a910u)	/* Extended Message Object 200 Data 4 Register */
#define CAN_EMO200DATA5	(*( CAN_EM0ODATA3_type *) 0xf001a914u)	/* Extended Message Object 200 Data 5 Register */
#define CAN_EMO200DATA6	(*( CAN_EM0ODATA3_type *) 0xf001a918u)	/* Extended Message Object 200 Data 6 Register */
#define CAN_EMO201DATA0	(*( CAN_EM0ODATA3_type *) 0xf001a920u)	/* Extended Message Object 201 Data 0 Register */
#define CAN_EMO201DATA1	(*( CAN_EM0ODATA3_type *) 0xf001a924u)	/* Extended Message Object 201 Data 1 Register */
#define CAN_EMO201DATA2	(*( CAN_EM0ODATA3_type *) 0xf001a928u)	/* Extended Message Object 201 Data 2 Register */
#define CAN_EMO201DATA4	(*( CAN_EM0ODATA3_type *) 0xf001a930u)	/* Extended Message Object 201 Data 4 Register */
#define CAN_EMO201DATA5	(*( CAN_EM0ODATA3_type *) 0xf001a934u)	/* Extended Message Object 201 Data 5 Register */
#define CAN_EMO201DATA6	(*( CAN_EM0ODATA3_type *) 0xf001a938u)	/* Extended Message Object 201 Data 6 Register */
#define CAN_EMO202DATA0	(*( CAN_EM0ODATA3_type *) 0xf001a940u)	/* Extended Message Object 202 Data 0 Register */
#define CAN_EMO202DATA1	(*( CAN_EM0ODATA3_type *) 0xf001a944u)	/* Extended Message Object 202 Data 1 Register */
#define CAN_EMO202DATA2	(*( CAN_EM0ODATA3_type *) 0xf001a948u)	/* Extended Message Object 202 Data 2 Register */
#define CAN_EMO202DATA4	(*( CAN_EM0ODATA3_type *) 0xf001a950u)	/* Extended Message Object 202 Data 4 Register */
#define CAN_EMO202DATA5	(*( CAN_EM0ODATA3_type *) 0xf001a954u)	/* Extended Message Object 202 Data 5 Register */
#define CAN_EMO202DATA6	(*( CAN_EM0ODATA3_type *) 0xf001a958u)	/* Extended Message Object 202 Data 6 Register */
#define CAN_EMO203DATA0	(*( CAN_EM0ODATA3_type *) 0xf001a960u)	/* Extended Message Object 203 Data 0 Register */
#define CAN_EMO203DATA1	(*( CAN_EM0ODATA3_type *) 0xf001a964u)	/* Extended Message Object 203 Data 1 Register */
#define CAN_EMO203DATA2	(*( CAN_EM0ODATA3_type *) 0xf001a968u)	/* Extended Message Object 203 Data 2 Register */
#define CAN_EMO203DATA4	(*( CAN_EM0ODATA3_type *) 0xf001a970u)	/* Extended Message Object 203 Data 4 Register */
#define CAN_EMO203DATA5	(*( CAN_EM0ODATA3_type *) 0xf001a974u)	/* Extended Message Object 203 Data 5 Register */
#define CAN_EMO203DATA6	(*( CAN_EM0ODATA3_type *) 0xf001a978u)	/* Extended Message Object 203 Data 6 Register */
#define CAN_EMO204DATA0	(*( CAN_EM0ODATA3_type *) 0xf001a980u)	/* Extended Message Object 204 Data 0 Register */
#define CAN_EMO204DATA1	(*( CAN_EM0ODATA3_type *) 0xf001a984u)	/* Extended Message Object 204 Data 1 Register */
#define CAN_EMO204DATA2	(*( CAN_EM0ODATA3_type *) 0xf001a988u)	/* Extended Message Object 204 Data 2 Register */
#define CAN_EMO204DATA4	(*( CAN_EM0ODATA3_type *) 0xf001a990u)	/* Extended Message Object 204 Data 4 Register */
#define CAN_EMO204DATA5	(*( CAN_EM0ODATA3_type *) 0xf001a994u)	/* Extended Message Object 204 Data 5 Register */
#define CAN_EMO204DATA6	(*( CAN_EM0ODATA3_type *) 0xf001a998u)	/* Extended Message Object 204 Data 6 Register */
#define CAN_EMO205DATA0	(*( CAN_EM0ODATA3_type *) 0xf001a9a0u)	/* Extended Message Object 205 Data 0 Register */
#define CAN_EMO205DATA1	(*( CAN_EM0ODATA3_type *) 0xf001a9a4u)	/* Extended Message Object 205 Data 1 Register */
#define CAN_EMO205DATA2	(*( CAN_EM0ODATA3_type *) 0xf001a9a8u)	/* Extended Message Object 205 Data 2 Register */
#define CAN_EMO205DATA4	(*( CAN_EM0ODATA3_type *) 0xf001a9b0u)	/* Extended Message Object 205 Data 4 Register */
#define CAN_EMO205DATA5	(*( CAN_EM0ODATA3_type *) 0xf001a9b4u)	/* Extended Message Object 205 Data 5 Register */
#define CAN_EMO205DATA6	(*( CAN_EM0ODATA3_type *) 0xf001a9b8u)	/* Extended Message Object 205 Data 6 Register */
#define CAN_EMO206DATA0	(*( CAN_EM0ODATA3_type *) 0xf001a9c0u)	/* Extended Message Object 206 Data 0 Register */
#define CAN_EMO206DATA1	(*( CAN_EM0ODATA3_type *) 0xf001a9c4u)	/* Extended Message Object 206 Data 1 Register */
#define CAN_EMO206DATA2	(*( CAN_EM0ODATA3_type *) 0xf001a9c8u)	/* Extended Message Object 206 Data 2 Register */
#define CAN_EMO206DATA4	(*( CAN_EM0ODATA3_type *) 0xf001a9d0u)	/* Extended Message Object 206 Data 4 Register */
#define CAN_EMO206DATA5	(*( CAN_EM0ODATA3_type *) 0xf001a9d4u)	/* Extended Message Object 206 Data 5 Register */
#define CAN_EMO206DATA6	(*( CAN_EM0ODATA3_type *) 0xf001a9d8u)	/* Extended Message Object 206 Data 6 Register */
#define CAN_EMO207DATA0	(*( CAN_EM0ODATA3_type *) 0xf001a9e0u)	/* Extended Message Object 207 Data 0 Register */
#define CAN_EMO207DATA1	(*( CAN_EM0ODATA3_type *) 0xf001a9e4u)	/* Extended Message Object 207 Data 1 Register */
#define CAN_EMO207DATA2	(*( CAN_EM0ODATA3_type *) 0xf001a9e8u)	/* Extended Message Object 207 Data 2 Register */
#define CAN_EMO207DATA4	(*( CAN_EM0ODATA3_type *) 0xf001a9f0u)	/* Extended Message Object 207 Data 4 Register */
#define CAN_EMO207DATA5	(*( CAN_EM0ODATA3_type *) 0xf001a9f4u)	/* Extended Message Object 207 Data 5 Register */
#define CAN_EMO207DATA6	(*( CAN_EM0ODATA3_type *) 0xf001a9f8u)	/* Extended Message Object 207 Data 6 Register */
#define CAN_EMO208DATA0	(*( CAN_EM0ODATA3_type *) 0xf001aa00u)	/* Extended Message Object 208 Data 0 Register */
#define CAN_EMO208DATA1	(*( CAN_EM0ODATA3_type *) 0xf001aa04u)	/* Extended Message Object 208 Data 1 Register */
#define CAN_EMO208DATA2	(*( CAN_EM0ODATA3_type *) 0xf001aa08u)	/* Extended Message Object 208 Data 2 Register */
#define CAN_EMO208DATA4	(*( CAN_EM0ODATA3_type *) 0xf001aa10u)	/* Extended Message Object 208 Data 4 Register */
#define CAN_EMO208DATA5	(*( CAN_EM0ODATA3_type *) 0xf001aa14u)	/* Extended Message Object 208 Data 5 Register */
#define CAN_EMO208DATA6	(*( CAN_EM0ODATA3_type *) 0xf001aa18u)	/* Extended Message Object 208 Data 6 Register */
#define CAN_EMO209DATA0	(*( CAN_EM0ODATA3_type *) 0xf001aa20u)	/* Extended Message Object 209 Data 0 Register */
#define CAN_EMO209DATA1	(*( CAN_EM0ODATA3_type *) 0xf001aa24u)	/* Extended Message Object 209 Data 1 Register */
#define CAN_EMO209DATA2	(*( CAN_EM0ODATA3_type *) 0xf001aa28u)	/* Extended Message Object 209 Data 2 Register */
#define CAN_EMO209DATA4	(*( CAN_EM0ODATA3_type *) 0xf001aa30u)	/* Extended Message Object 209 Data 4 Register */
#define CAN_EMO209DATA5	(*( CAN_EM0ODATA3_type *) 0xf001aa34u)	/* Extended Message Object 209 Data 5 Register */
#define CAN_EMO209DATA6	(*( CAN_EM0ODATA3_type *) 0xf001aa38u)	/* Extended Message Object 209 Data 6 Register */
#define CAN_EMO20DATA0	(*( CAN_EM0ODATA3_type *) 0xf0019280u)	/* Extended Message Object 20 Data 0 Register */
#define CAN_EMO20DATA1	(*( CAN_EM0ODATA3_type *) 0xf0019284u)	/* Extended Message Object 20 Data 1 Register */
#define CAN_EMO20DATA2	(*( CAN_EM0ODATA3_type *) 0xf0019288u)	/* Extended Message Object 20 Data 2 Register */
#define CAN_EMO20DATA4	(*( CAN_EM0ODATA3_type *) 0xf0019290u)	/* Extended Message Object 20 Data 4 Register */
#define CAN_EMO20DATA5	(*( CAN_EM0ODATA3_type *) 0xf0019294u)	/* Extended Message Object 20 Data 5 Register */
#define CAN_EMO20DATA6	(*( CAN_EM0ODATA3_type *) 0xf0019298u)	/* Extended Message Object 20 Data 6 Register */
#define CAN_EMO210DATA0	(*( CAN_EM0ODATA3_type *) 0xf001aa40u)	/* Extended Message Object 210 Data 0 Register */
#define CAN_EMO210DATA1	(*( CAN_EM0ODATA3_type *) 0xf001aa44u)	/* Extended Message Object 210 Data 1 Register */
#define CAN_EMO210DATA2	(*( CAN_EM0ODATA3_type *) 0xf001aa48u)	/* Extended Message Object 210 Data 2 Register */
#define CAN_EMO210DATA4	(*( CAN_EM0ODATA3_type *) 0xf001aa50u)	/* Extended Message Object 210 Data 4 Register */
#define CAN_EMO210DATA5	(*( CAN_EM0ODATA3_type *) 0xf001aa54u)	/* Extended Message Object 210 Data 5 Register */
#define CAN_EMO210DATA6	(*( CAN_EM0ODATA3_type *) 0xf001aa58u)	/* Extended Message Object 210 Data 6 Register */
#define CAN_EMO211DATA0	(*( CAN_EM0ODATA3_type *) 0xf001aa60u)	/* Extended Message Object 211 Data 0 Register */
#define CAN_EMO211DATA1	(*( CAN_EM0ODATA3_type *) 0xf001aa64u)	/* Extended Message Object 211 Data 1 Register */
#define CAN_EMO211DATA2	(*( CAN_EM0ODATA3_type *) 0xf001aa68u)	/* Extended Message Object 211 Data 2 Register */
#define CAN_EMO211DATA4	(*( CAN_EM0ODATA3_type *) 0xf001aa70u)	/* Extended Message Object 211 Data 4 Register */
#define CAN_EMO211DATA5	(*( CAN_EM0ODATA3_type *) 0xf001aa74u)	/* Extended Message Object 211 Data 5 Register */
#define CAN_EMO211DATA6	(*( CAN_EM0ODATA3_type *) 0xf001aa78u)	/* Extended Message Object 211 Data 6 Register */
#define CAN_EMO212DATA0	(*( CAN_EM0ODATA3_type *) 0xf001aa80u)	/* Extended Message Object 212 Data 0 Register */
#define CAN_EMO212DATA1	(*( CAN_EM0ODATA3_type *) 0xf001aa84u)	/* Extended Message Object 212 Data 1 Register */
#define CAN_EMO212DATA2	(*( CAN_EM0ODATA3_type *) 0xf001aa88u)	/* Extended Message Object 212 Data 2 Register */
#define CAN_EMO212DATA4	(*( CAN_EM0ODATA3_type *) 0xf001aa90u)	/* Extended Message Object 212 Data 4 Register */
#define CAN_EMO212DATA5	(*( CAN_EM0ODATA3_type *) 0xf001aa94u)	/* Extended Message Object 212 Data 5 Register */
#define CAN_EMO212DATA6	(*( CAN_EM0ODATA3_type *) 0xf001aa98u)	/* Extended Message Object 212 Data 6 Register */
#define CAN_EMO213DATA0	(*( CAN_EM0ODATA3_type *) 0xf001aaa0u)	/* Extended Message Object 213 Data 0 Register */
#define CAN_EMO213DATA1	(*( CAN_EM0ODATA3_type *) 0xf001aaa4u)	/* Extended Message Object 213 Data 1 Register */
#define CAN_EMO213DATA2	(*( CAN_EM0ODATA3_type *) 0xf001aaa8u)	/* Extended Message Object 213 Data 2 Register */
#define CAN_EMO213DATA4	(*( CAN_EM0ODATA3_type *) 0xf001aab0u)	/* Extended Message Object 213 Data 4 Register */
#define CAN_EMO213DATA5	(*( CAN_EM0ODATA3_type *) 0xf001aab4u)	/* Extended Message Object 213 Data 5 Register */
#define CAN_EMO213DATA6	(*( CAN_EM0ODATA3_type *) 0xf001aab8u)	/* Extended Message Object 213 Data 6 Register */
#define CAN_EMO214DATA0	(*( CAN_EM0ODATA3_type *) 0xf001aac0u)	/* Extended Message Object 214 Data 0 Register */
#define CAN_EMO214DATA1	(*( CAN_EM0ODATA3_type *) 0xf001aac4u)	/* Extended Message Object 214 Data 1 Register */
#define CAN_EMO214DATA2	(*( CAN_EM0ODATA3_type *) 0xf001aac8u)	/* Extended Message Object 214 Data 2 Register */
#define CAN_EMO214DATA4	(*( CAN_EM0ODATA3_type *) 0xf001aad0u)	/* Extended Message Object 214 Data 4 Register */
#define CAN_EMO214DATA5	(*( CAN_EM0ODATA3_type *) 0xf001aad4u)	/* Extended Message Object 214 Data 5 Register */
#define CAN_EMO214DATA6	(*( CAN_EM0ODATA3_type *) 0xf001aad8u)	/* Extended Message Object 214 Data 6 Register */
#define CAN_EMO215DATA0	(*( CAN_EM0ODATA3_type *) 0xf001aae0u)	/* Extended Message Object 215 Data 0 Register */
#define CAN_EMO215DATA1	(*( CAN_EM0ODATA3_type *) 0xf001aae4u)	/* Extended Message Object 215 Data 1 Register */
#define CAN_EMO215DATA2	(*( CAN_EM0ODATA3_type *) 0xf001aae8u)	/* Extended Message Object 215 Data 2 Register */
#define CAN_EMO215DATA4	(*( CAN_EM0ODATA3_type *) 0xf001aaf0u)	/* Extended Message Object 215 Data 4 Register */
#define CAN_EMO215DATA5	(*( CAN_EM0ODATA3_type *) 0xf001aaf4u)	/* Extended Message Object 215 Data 5 Register */
#define CAN_EMO215DATA6	(*( CAN_EM0ODATA3_type *) 0xf001aaf8u)	/* Extended Message Object 215 Data 6 Register */
#define CAN_EMO216DATA0	(*( CAN_EM0ODATA3_type *) 0xf001ab00u)	/* Extended Message Object 216 Data 0 Register */
#define CAN_EMO216DATA1	(*( CAN_EM0ODATA3_type *) 0xf001ab04u)	/* Extended Message Object 216 Data 1 Register */
#define CAN_EMO216DATA2	(*( CAN_EM0ODATA3_type *) 0xf001ab08u)	/* Extended Message Object 216 Data 2 Register */
#define CAN_EMO216DATA4	(*( CAN_EM0ODATA3_type *) 0xf001ab10u)	/* Extended Message Object 216 Data 4 Register */
#define CAN_EMO216DATA5	(*( CAN_EM0ODATA3_type *) 0xf001ab14u)	/* Extended Message Object 216 Data 5 Register */
#define CAN_EMO216DATA6	(*( CAN_EM0ODATA3_type *) 0xf001ab18u)	/* Extended Message Object 216 Data 6 Register */
#define CAN_EMO217DATA0	(*( CAN_EM0ODATA3_type *) 0xf001ab20u)	/* Extended Message Object 217 Data 0 Register */
#define CAN_EMO217DATA1	(*( CAN_EM0ODATA3_type *) 0xf001ab24u)	/* Extended Message Object 217 Data 1 Register */
#define CAN_EMO217DATA2	(*( CAN_EM0ODATA3_type *) 0xf001ab28u)	/* Extended Message Object 217 Data 2 Register */
#define CAN_EMO217DATA4	(*( CAN_EM0ODATA3_type *) 0xf001ab30u)	/* Extended Message Object 217 Data 4 Register */
#define CAN_EMO217DATA5	(*( CAN_EM0ODATA3_type *) 0xf001ab34u)	/* Extended Message Object 217 Data 5 Register */
#define CAN_EMO217DATA6	(*( CAN_EM0ODATA3_type *) 0xf001ab38u)	/* Extended Message Object 217 Data 6 Register */
#define CAN_EMO218DATA0	(*( CAN_EM0ODATA3_type *) 0xf001ab40u)	/* Extended Message Object 218 Data 0 Register */
#define CAN_EMO218DATA1	(*( CAN_EM0ODATA3_type *) 0xf001ab44u)	/* Extended Message Object 218 Data 1 Register */
#define CAN_EMO218DATA2	(*( CAN_EM0ODATA3_type *) 0xf001ab48u)	/* Extended Message Object 218 Data 2 Register */
#define CAN_EMO218DATA4	(*( CAN_EM0ODATA3_type *) 0xf001ab50u)	/* Extended Message Object 218 Data 4 Register */
#define CAN_EMO218DATA5	(*( CAN_EM0ODATA3_type *) 0xf001ab54u)	/* Extended Message Object 218 Data 5 Register */
#define CAN_EMO218DATA6	(*( CAN_EM0ODATA3_type *) 0xf001ab58u)	/* Extended Message Object 218 Data 6 Register */
#define CAN_EMO219DATA0	(*( CAN_EM0ODATA3_type *) 0xf001ab60u)	/* Extended Message Object 219 Data 0 Register */
#define CAN_EMO219DATA1	(*( CAN_EM0ODATA3_type *) 0xf001ab64u)	/* Extended Message Object 219 Data 1 Register */
#define CAN_EMO219DATA2	(*( CAN_EM0ODATA3_type *) 0xf001ab68u)	/* Extended Message Object 219 Data 2 Register */
#define CAN_EMO219DATA4	(*( CAN_EM0ODATA3_type *) 0xf001ab70u)	/* Extended Message Object 219 Data 4 Register */
#define CAN_EMO219DATA5	(*( CAN_EM0ODATA3_type *) 0xf001ab74u)	/* Extended Message Object 219 Data 5 Register */
#define CAN_EMO219DATA6	(*( CAN_EM0ODATA3_type *) 0xf001ab78u)	/* Extended Message Object 219 Data 6 Register */
#define CAN_EMO21DATA0	(*( CAN_EM0ODATA3_type *) 0xf00192a0u)	/* Extended Message Object 21 Data 0 Register */
#define CAN_EMO21DATA1	(*( CAN_EM0ODATA3_type *) 0xf00192a4u)	/* Extended Message Object 21 Data 1 Register */
#define CAN_EMO21DATA2	(*( CAN_EM0ODATA3_type *) 0xf00192a8u)	/* Extended Message Object 21 Data 2 Register */
#define CAN_EMO21DATA4	(*( CAN_EM0ODATA3_type *) 0xf00192b0u)	/* Extended Message Object 21 Data 4 Register */
#define CAN_EMO21DATA5	(*( CAN_EM0ODATA3_type *) 0xf00192b4u)	/* Extended Message Object 21 Data 5 Register */
#define CAN_EMO21DATA6	(*( CAN_EM0ODATA3_type *) 0xf00192b8u)	/* Extended Message Object 21 Data 6 Register */
#define CAN_EMO220DATA0	(*( CAN_EM0ODATA3_type *) 0xf001ab80u)	/* Extended Message Object 220 Data 0 Register */
#define CAN_EMO220DATA1	(*( CAN_EM0ODATA3_type *) 0xf001ab84u)	/* Extended Message Object 220 Data 1 Register */
#define CAN_EMO220DATA2	(*( CAN_EM0ODATA3_type *) 0xf001ab88u)	/* Extended Message Object 220 Data 2 Register */
#define CAN_EMO220DATA4	(*( CAN_EM0ODATA3_type *) 0xf001ab90u)	/* Extended Message Object 220 Data 4 Register */
#define CAN_EMO220DATA5	(*( CAN_EM0ODATA3_type *) 0xf001ab94u)	/* Extended Message Object 220 Data 5 Register */
#define CAN_EMO220DATA6	(*( CAN_EM0ODATA3_type *) 0xf001ab98u)	/* Extended Message Object 220 Data 6 Register */
#define CAN_EMO221DATA0	(*( CAN_EM0ODATA3_type *) 0xf001aba0u)	/* Extended Message Object 221 Data 0 Register */
#define CAN_EMO221DATA1	(*( CAN_EM0ODATA3_type *) 0xf001aba4u)	/* Extended Message Object 221 Data 1 Register */
#define CAN_EMO221DATA2	(*( CAN_EM0ODATA3_type *) 0xf001aba8u)	/* Extended Message Object 221 Data 2 Register */
#define CAN_EMO221DATA4	(*( CAN_EM0ODATA3_type *) 0xf001abb0u)	/* Extended Message Object 221 Data 4 Register */
#define CAN_EMO221DATA5	(*( CAN_EM0ODATA3_type *) 0xf001abb4u)	/* Extended Message Object 221 Data 5 Register */
#define CAN_EMO221DATA6	(*( CAN_EM0ODATA3_type *) 0xf001abb8u)	/* Extended Message Object 221 Data 6 Register */
#define CAN_EMO222DATA0	(*( CAN_EM0ODATA3_type *) 0xf001abc0u)	/* Extended Message Object 222 Data 0 Register */
#define CAN_EMO222DATA1	(*( CAN_EM0ODATA3_type *) 0xf001abc4u)	/* Extended Message Object 222 Data 1 Register */
#define CAN_EMO222DATA2	(*( CAN_EM0ODATA3_type *) 0xf001abc8u)	/* Extended Message Object 222 Data 2 Register */
#define CAN_EMO222DATA4	(*( CAN_EM0ODATA3_type *) 0xf001abd0u)	/* Extended Message Object 222 Data 4 Register */
#define CAN_EMO222DATA5	(*( CAN_EM0ODATA3_type *) 0xf001abd4u)	/* Extended Message Object 222 Data 5 Register */
#define CAN_EMO222DATA6	(*( CAN_EM0ODATA3_type *) 0xf001abd8u)	/* Extended Message Object 222 Data 6 Register */
#define CAN_EMO223DATA0	(*( CAN_EM0ODATA3_type *) 0xf001abe0u)	/* Extended Message Object 223 Data 0 Register */
#define CAN_EMO223DATA1	(*( CAN_EM0ODATA3_type *) 0xf001abe4u)	/* Extended Message Object 223 Data 1 Register */
#define CAN_EMO223DATA2	(*( CAN_EM0ODATA3_type *) 0xf001abe8u)	/* Extended Message Object 223 Data 2 Register */
#define CAN_EMO223DATA4	(*( CAN_EM0ODATA3_type *) 0xf001abf0u)	/* Extended Message Object 223 Data 4 Register */
#define CAN_EMO223DATA5	(*( CAN_EM0ODATA3_type *) 0xf001abf4u)	/* Extended Message Object 223 Data 5 Register */
#define CAN_EMO223DATA6	(*( CAN_EM0ODATA3_type *) 0xf001abf8u)	/* Extended Message Object 223 Data 6 Register */
#define CAN_EMO224DATA0	(*( CAN_EM0ODATA3_type *) 0xf001ac00u)	/* Extended Message Object 224 Data 0 Register */
#define CAN_EMO224DATA1	(*( CAN_EM0ODATA3_type *) 0xf001ac04u)	/* Extended Message Object 224 Data 1 Register */
#define CAN_EMO224DATA2	(*( CAN_EM0ODATA3_type *) 0xf001ac08u)	/* Extended Message Object 224 Data 2 Register */
#define CAN_EMO224DATA4	(*( CAN_EM0ODATA3_type *) 0xf001ac10u)	/* Extended Message Object 224 Data 4 Register */
#define CAN_EMO224DATA5	(*( CAN_EM0ODATA3_type *) 0xf001ac14u)	/* Extended Message Object 224 Data 5 Register */
#define CAN_EMO224DATA6	(*( CAN_EM0ODATA3_type *) 0xf001ac18u)	/* Extended Message Object 224 Data 6 Register */
#define CAN_EMO225DATA0	(*( CAN_EM0ODATA3_type *) 0xf001ac20u)	/* Extended Message Object 225 Data 0 Register */
#define CAN_EMO225DATA1	(*( CAN_EM0ODATA3_type *) 0xf001ac24u)	/* Extended Message Object 225 Data 1 Register */
#define CAN_EMO225DATA2	(*( CAN_EM0ODATA3_type *) 0xf001ac28u)	/* Extended Message Object 225 Data 2 Register */
#define CAN_EMO225DATA4	(*( CAN_EM0ODATA3_type *) 0xf001ac30u)	/* Extended Message Object 225 Data 4 Register */
#define CAN_EMO225DATA5	(*( CAN_EM0ODATA3_type *) 0xf001ac34u)	/* Extended Message Object 225 Data 5 Register */
#define CAN_EMO225DATA6	(*( CAN_EM0ODATA3_type *) 0xf001ac38u)	/* Extended Message Object 225 Data 6 Register */
#define CAN_EMO226DATA0	(*( CAN_EM0ODATA3_type *) 0xf001ac40u)	/* Extended Message Object 226 Data 0 Register */
#define CAN_EMO226DATA1	(*( CAN_EM0ODATA3_type *) 0xf001ac44u)	/* Extended Message Object 226 Data 1 Register */
#define CAN_EMO226DATA2	(*( CAN_EM0ODATA3_type *) 0xf001ac48u)	/* Extended Message Object 226 Data 2 Register */
#define CAN_EMO226DATA4	(*( CAN_EM0ODATA3_type *) 0xf001ac50u)	/* Extended Message Object 226 Data 4 Register */
#define CAN_EMO226DATA5	(*( CAN_EM0ODATA3_type *) 0xf001ac54u)	/* Extended Message Object 226 Data 5 Register */
#define CAN_EMO226DATA6	(*( CAN_EM0ODATA3_type *) 0xf001ac58u)	/* Extended Message Object 226 Data 6 Register */
#define CAN_EMO227DATA0	(*( CAN_EM0ODATA3_type *) 0xf001ac60u)	/* Extended Message Object 227 Data 0 Register */
#define CAN_EMO227DATA1	(*( CAN_EM0ODATA3_type *) 0xf001ac64u)	/* Extended Message Object 227 Data 1 Register */
#define CAN_EMO227DATA2	(*( CAN_EM0ODATA3_type *) 0xf001ac68u)	/* Extended Message Object 227 Data 2 Register */
#define CAN_EMO227DATA4	(*( CAN_EM0ODATA3_type *) 0xf001ac70u)	/* Extended Message Object 227 Data 4 Register */
#define CAN_EMO227DATA5	(*( CAN_EM0ODATA3_type *) 0xf001ac74u)	/* Extended Message Object 227 Data 5 Register */
#define CAN_EMO227DATA6	(*( CAN_EM0ODATA3_type *) 0xf001ac78u)	/* Extended Message Object 227 Data 6 Register */
#define CAN_EMO228DATA0	(*( CAN_EM0ODATA3_type *) 0xf001ac80u)	/* Extended Message Object 228 Data 0 Register */
#define CAN_EMO228DATA1	(*( CAN_EM0ODATA3_type *) 0xf001ac84u)	/* Extended Message Object 228 Data 1 Register */
#define CAN_EMO228DATA2	(*( CAN_EM0ODATA3_type *) 0xf001ac88u)	/* Extended Message Object 228 Data 2 Register */
#define CAN_EMO228DATA4	(*( CAN_EM0ODATA3_type *) 0xf001ac90u)	/* Extended Message Object 228 Data 4 Register */
#define CAN_EMO228DATA5	(*( CAN_EM0ODATA3_type *) 0xf001ac94u)	/* Extended Message Object 228 Data 5 Register */
#define CAN_EMO228DATA6	(*( CAN_EM0ODATA3_type *) 0xf001ac98u)	/* Extended Message Object 228 Data 6 Register */
#define CAN_EMO229DATA0	(*( CAN_EM0ODATA3_type *) 0xf001aca0u)	/* Extended Message Object 229 Data 0 Register */
#define CAN_EMO229DATA1	(*( CAN_EM0ODATA3_type *) 0xf001aca4u)	/* Extended Message Object 229 Data 1 Register */
#define CAN_EMO229DATA2	(*( CAN_EM0ODATA3_type *) 0xf001aca8u)	/* Extended Message Object 229 Data 2 Register */
#define CAN_EMO229DATA4	(*( CAN_EM0ODATA3_type *) 0xf001acb0u)	/* Extended Message Object 229 Data 4 Register */
#define CAN_EMO229DATA5	(*( CAN_EM0ODATA3_type *) 0xf001acb4u)	/* Extended Message Object 229 Data 5 Register */
#define CAN_EMO229DATA6	(*( CAN_EM0ODATA3_type *) 0xf001acb8u)	/* Extended Message Object 229 Data 6 Register */
#define CAN_EMO22DATA0	(*( CAN_EM0ODATA3_type *) 0xf00192c0u)	/* Extended Message Object 22 Data 0 Register */
#define CAN_EMO22DATA1	(*( CAN_EM0ODATA3_type *) 0xf00192c4u)	/* Extended Message Object 22 Data 1 Register */
#define CAN_EMO22DATA2	(*( CAN_EM0ODATA3_type *) 0xf00192c8u)	/* Extended Message Object 22 Data 2 Register */
#define CAN_EMO22DATA4	(*( CAN_EM0ODATA3_type *) 0xf00192d0u)	/* Extended Message Object 22 Data 4 Register */
#define CAN_EMO22DATA5	(*( CAN_EM0ODATA3_type *) 0xf00192d4u)	/* Extended Message Object 22 Data 5 Register */
#define CAN_EMO22DATA6	(*( CAN_EM0ODATA3_type *) 0xf00192d8u)	/* Extended Message Object 22 Data 6 Register */
#define CAN_EMO230DATA0	(*( CAN_EM0ODATA3_type *) 0xf001acc0u)	/* Extended Message Object 230 Data 0 Register */
#define CAN_EMO230DATA1	(*( CAN_EM0ODATA3_type *) 0xf001acc4u)	/* Extended Message Object 230 Data 1 Register */
#define CAN_EMO230DATA2	(*( CAN_EM0ODATA3_type *) 0xf001acc8u)	/* Extended Message Object 230 Data 2 Register */
#define CAN_EMO230DATA4	(*( CAN_EM0ODATA3_type *) 0xf001acd0u)	/* Extended Message Object 230 Data 4 Register */
#define CAN_EMO230DATA5	(*( CAN_EM0ODATA3_type *) 0xf001acd4u)	/* Extended Message Object 230 Data 5 Register */
#define CAN_EMO230DATA6	(*( CAN_EM0ODATA3_type *) 0xf001acd8u)	/* Extended Message Object 230 Data 6 Register */
#define CAN_EMO231DATA0	(*( CAN_EM0ODATA3_type *) 0xf001ace0u)	/* Extended Message Object 231 Data 0 Register */
#define CAN_EMO231DATA1	(*( CAN_EM0ODATA3_type *) 0xf001ace4u)	/* Extended Message Object 231 Data 1 Register */
#define CAN_EMO231DATA2	(*( CAN_EM0ODATA3_type *) 0xf001ace8u)	/* Extended Message Object 231 Data 2 Register */
#define CAN_EMO231DATA4	(*( CAN_EM0ODATA3_type *) 0xf001acf0u)	/* Extended Message Object 231 Data 4 Register */
#define CAN_EMO231DATA5	(*( CAN_EM0ODATA3_type *) 0xf001acf4u)	/* Extended Message Object 231 Data 5 Register */
#define CAN_EMO231DATA6	(*( CAN_EM0ODATA3_type *) 0xf001acf8u)	/* Extended Message Object 231 Data 6 Register */
#define CAN_EMO232DATA0	(*( CAN_EM0ODATA3_type *) 0xf001ad00u)	/* Extended Message Object 232 Data 0 Register */
#define CAN_EMO232DATA1	(*( CAN_EM0ODATA3_type *) 0xf001ad04u)	/* Extended Message Object 232 Data 1 Register */
#define CAN_EMO232DATA2	(*( CAN_EM0ODATA3_type *) 0xf001ad08u)	/* Extended Message Object 232 Data 2 Register */
#define CAN_EMO232DATA4	(*( CAN_EM0ODATA3_type *) 0xf001ad10u)	/* Extended Message Object 232 Data 4 Register */
#define CAN_EMO232DATA5	(*( CAN_EM0ODATA3_type *) 0xf001ad14u)	/* Extended Message Object 232 Data 5 Register */
#define CAN_EMO232DATA6	(*( CAN_EM0ODATA3_type *) 0xf001ad18u)	/* Extended Message Object 232 Data 6 Register */
#define CAN_EMO233DATA0	(*( CAN_EM0ODATA3_type *) 0xf001ad20u)	/* Extended Message Object 233 Data 0 Register */
#define CAN_EMO233DATA1	(*( CAN_EM0ODATA3_type *) 0xf001ad24u)	/* Extended Message Object 233 Data 1 Register */
#define CAN_EMO233DATA2	(*( CAN_EM0ODATA3_type *) 0xf001ad28u)	/* Extended Message Object 233 Data 2 Register */
#define CAN_EMO233DATA4	(*( CAN_EM0ODATA3_type *) 0xf001ad30u)	/* Extended Message Object 233 Data 4 Register */
#define CAN_EMO233DATA5	(*( CAN_EM0ODATA3_type *) 0xf001ad34u)	/* Extended Message Object 233 Data 5 Register */
#define CAN_EMO233DATA6	(*( CAN_EM0ODATA3_type *) 0xf001ad38u)	/* Extended Message Object 233 Data 6 Register */
#define CAN_EMO234DATA0	(*( CAN_EM0ODATA3_type *) 0xf001ad40u)	/* Extended Message Object 234 Data 0 Register */
#define CAN_EMO234DATA1	(*( CAN_EM0ODATA3_type *) 0xf001ad44u)	/* Extended Message Object 234 Data 1 Register */
#define CAN_EMO234DATA2	(*( CAN_EM0ODATA3_type *) 0xf001ad48u)	/* Extended Message Object 234 Data 2 Register */
#define CAN_EMO234DATA4	(*( CAN_EM0ODATA3_type *) 0xf001ad50u)	/* Extended Message Object 234 Data 4 Register */
#define CAN_EMO234DATA5	(*( CAN_EM0ODATA3_type *) 0xf001ad54u)	/* Extended Message Object 234 Data 5 Register */
#define CAN_EMO234DATA6	(*( CAN_EM0ODATA3_type *) 0xf001ad58u)	/* Extended Message Object 234 Data 6 Register */
#define CAN_EMO235DATA0	(*( CAN_EM0ODATA3_type *) 0xf001ad60u)	/* Extended Message Object 235 Data 0 Register */
#define CAN_EMO235DATA1	(*( CAN_EM0ODATA3_type *) 0xf001ad64u)	/* Extended Message Object 235 Data 1 Register */
#define CAN_EMO235DATA2	(*( CAN_EM0ODATA3_type *) 0xf001ad68u)	/* Extended Message Object 235 Data 2 Register */
#define CAN_EMO235DATA4	(*( CAN_EM0ODATA3_type *) 0xf001ad70u)	/* Extended Message Object 235 Data 4 Register */
#define CAN_EMO235DATA5	(*( CAN_EM0ODATA3_type *) 0xf001ad74u)	/* Extended Message Object 235 Data 5 Register */
#define CAN_EMO235DATA6	(*( CAN_EM0ODATA3_type *) 0xf001ad78u)	/* Extended Message Object 235 Data 6 Register */
#define CAN_EMO236DATA0	(*( CAN_EM0ODATA3_type *) 0xf001ad80u)	/* Extended Message Object 236 Data 0 Register */
#define CAN_EMO236DATA1	(*( CAN_EM0ODATA3_type *) 0xf001ad84u)	/* Extended Message Object 236 Data 1 Register */
#define CAN_EMO236DATA2	(*( CAN_EM0ODATA3_type *) 0xf001ad88u)	/* Extended Message Object 236 Data 2 Register */
#define CAN_EMO236DATA4	(*( CAN_EM0ODATA3_type *) 0xf001ad90u)	/* Extended Message Object 236 Data 4 Register */
#define CAN_EMO236DATA5	(*( CAN_EM0ODATA3_type *) 0xf001ad94u)	/* Extended Message Object 236 Data 5 Register */
#define CAN_EMO236DATA6	(*( CAN_EM0ODATA3_type *) 0xf001ad98u)	/* Extended Message Object 236 Data 6 Register */
#define CAN_EMO237DATA0	(*( CAN_EM0ODATA3_type *) 0xf001ada0u)	/* Extended Message Object 237 Data 0 Register */
#define CAN_EMO237DATA1	(*( CAN_EM0ODATA3_type *) 0xf001ada4u)	/* Extended Message Object 237 Data 1 Register */
#define CAN_EMO237DATA2	(*( CAN_EM0ODATA3_type *) 0xf001ada8u)	/* Extended Message Object 237 Data 2 Register */
#define CAN_EMO237DATA4	(*( CAN_EM0ODATA3_type *) 0xf001adb0u)	/* Extended Message Object 237 Data 4 Register */
#define CAN_EMO237DATA5	(*( CAN_EM0ODATA3_type *) 0xf001adb4u)	/* Extended Message Object 237 Data 5 Register */
#define CAN_EMO237DATA6	(*( CAN_EM0ODATA3_type *) 0xf001adb8u)	/* Extended Message Object 237 Data 6 Register */
#define CAN_EMO238DATA0	(*( CAN_EM0ODATA3_type *) 0xf001adc0u)	/* Extended Message Object 238 Data 0 Register */
#define CAN_EMO238DATA1	(*( CAN_EM0ODATA3_type *) 0xf001adc4u)	/* Extended Message Object 238 Data 1 Register */
#define CAN_EMO238DATA2	(*( CAN_EM0ODATA3_type *) 0xf001adc8u)	/* Extended Message Object 238 Data 2 Register */
#define CAN_EMO238DATA4	(*( CAN_EM0ODATA3_type *) 0xf001add0u)	/* Extended Message Object 238 Data 4 Register */
#define CAN_EMO238DATA5	(*( CAN_EM0ODATA3_type *) 0xf001add4u)	/* Extended Message Object 238 Data 5 Register */
#define CAN_EMO238DATA6	(*( CAN_EM0ODATA3_type *) 0xf001add8u)	/* Extended Message Object 238 Data 6 Register */
#define CAN_EMO239DATA0	(*( CAN_EM0ODATA3_type *) 0xf001ade0u)	/* Extended Message Object 239 Data 0 Register */
#define CAN_EMO239DATA1	(*( CAN_EM0ODATA3_type *) 0xf001ade4u)	/* Extended Message Object 239 Data 1 Register */
#define CAN_EMO239DATA2	(*( CAN_EM0ODATA3_type *) 0xf001ade8u)	/* Extended Message Object 239 Data 2 Register */
#define CAN_EMO239DATA4	(*( CAN_EM0ODATA3_type *) 0xf001adf0u)	/* Extended Message Object 239 Data 4 Register */
#define CAN_EMO239DATA5	(*( CAN_EM0ODATA3_type *) 0xf001adf4u)	/* Extended Message Object 239 Data 5 Register */
#define CAN_EMO239DATA6	(*( CAN_EM0ODATA3_type *) 0xf001adf8u)	/* Extended Message Object 239 Data 6 Register */
#define CAN_EMO23DATA0	(*( CAN_EM0ODATA3_type *) 0xf00192e0u)	/* Extended Message Object 23 Data 0 Register */
#define CAN_EMO23DATA1	(*( CAN_EM0ODATA3_type *) 0xf00192e4u)	/* Extended Message Object 23 Data 1 Register */
#define CAN_EMO23DATA2	(*( CAN_EM0ODATA3_type *) 0xf00192e8u)	/* Extended Message Object 23 Data 2 Register */
#define CAN_EMO23DATA4	(*( CAN_EM0ODATA3_type *) 0xf00192f0u)	/* Extended Message Object 23 Data 4 Register */
#define CAN_EMO23DATA5	(*( CAN_EM0ODATA3_type *) 0xf00192f4u)	/* Extended Message Object 23 Data 5 Register */
#define CAN_EMO23DATA6	(*( CAN_EM0ODATA3_type *) 0xf00192f8u)	/* Extended Message Object 23 Data 6 Register */
#define CAN_EMO240DATA0	(*( CAN_EM0ODATA3_type *) 0xf001ae00u)	/* Extended Message Object 240 Data 0 Register */
#define CAN_EMO240DATA1	(*( CAN_EM0ODATA3_type *) 0xf001ae04u)	/* Extended Message Object 240 Data 1 Register */
#define CAN_EMO240DATA2	(*( CAN_EM0ODATA3_type *) 0xf001ae08u)	/* Extended Message Object 240 Data 2 Register */
#define CAN_EMO240DATA4	(*( CAN_EM0ODATA3_type *) 0xf001ae10u)	/* Extended Message Object 240 Data 4 Register */
#define CAN_EMO240DATA5	(*( CAN_EM0ODATA3_type *) 0xf001ae14u)	/* Extended Message Object 240 Data 5 Register */
#define CAN_EMO240DATA6	(*( CAN_EM0ODATA3_type *) 0xf001ae18u)	/* Extended Message Object 240 Data 6 Register */
#define CAN_EMO241DATA0	(*( CAN_EM0ODATA3_type *) 0xf001ae20u)	/* Extended Message Object 241 Data 0 Register */
#define CAN_EMO241DATA1	(*( CAN_EM0ODATA3_type *) 0xf001ae24u)	/* Extended Message Object 241 Data 1 Register */
#define CAN_EMO241DATA2	(*( CAN_EM0ODATA3_type *) 0xf001ae28u)	/* Extended Message Object 241 Data 2 Register */
#define CAN_EMO241DATA4	(*( CAN_EM0ODATA3_type *) 0xf001ae30u)	/* Extended Message Object 241 Data 4 Register */
#define CAN_EMO241DATA5	(*( CAN_EM0ODATA3_type *) 0xf001ae34u)	/* Extended Message Object 241 Data 5 Register */
#define CAN_EMO241DATA6	(*( CAN_EM0ODATA3_type *) 0xf001ae38u)	/* Extended Message Object 241 Data 6 Register */
#define CAN_EMO242DATA0	(*( CAN_EM0ODATA3_type *) 0xf001ae40u)	/* Extended Message Object 242 Data 0 Register */
#define CAN_EMO242DATA1	(*( CAN_EM0ODATA3_type *) 0xf001ae44u)	/* Extended Message Object 242 Data 1 Register */
#define CAN_EMO242DATA2	(*( CAN_EM0ODATA3_type *) 0xf001ae48u)	/* Extended Message Object 242 Data 2 Register */
#define CAN_EMO242DATA4	(*( CAN_EM0ODATA3_type *) 0xf001ae50u)	/* Extended Message Object 242 Data 4 Register */
#define CAN_EMO242DATA5	(*( CAN_EM0ODATA3_type *) 0xf001ae54u)	/* Extended Message Object 242 Data 5 Register */
#define CAN_EMO242DATA6	(*( CAN_EM0ODATA3_type *) 0xf001ae58u)	/* Extended Message Object 242 Data 6 Register */
#define CAN_EMO243DATA0	(*( CAN_EM0ODATA3_type *) 0xf001ae60u)	/* Extended Message Object 243 Data 0 Register */
#define CAN_EMO243DATA1	(*( CAN_EM0ODATA3_type *) 0xf001ae64u)	/* Extended Message Object 243 Data 1 Register */
#define CAN_EMO243DATA2	(*( CAN_EM0ODATA3_type *) 0xf001ae68u)	/* Extended Message Object 243 Data 2 Register */
#define CAN_EMO243DATA4	(*( CAN_EM0ODATA3_type *) 0xf001ae70u)	/* Extended Message Object 243 Data 4 Register */
#define CAN_EMO243DATA5	(*( CAN_EM0ODATA3_type *) 0xf001ae74u)	/* Extended Message Object 243 Data 5 Register */
#define CAN_EMO243DATA6	(*( CAN_EM0ODATA3_type *) 0xf001ae78u)	/* Extended Message Object 243 Data 6 Register */
#define CAN_EMO244DATA0	(*( CAN_EM0ODATA3_type *) 0xf001ae80u)	/* Extended Message Object 244 Data 0 Register */
#define CAN_EMO244DATA1	(*( CAN_EM0ODATA3_type *) 0xf001ae84u)	/* Extended Message Object 244 Data 1 Register */
#define CAN_EMO244DATA2	(*( CAN_EM0ODATA3_type *) 0xf001ae88u)	/* Extended Message Object 244 Data 2 Register */
#define CAN_EMO244DATA4	(*( CAN_EM0ODATA3_type *) 0xf001ae90u)	/* Extended Message Object 244 Data 4 Register */
#define CAN_EMO244DATA5	(*( CAN_EM0ODATA3_type *) 0xf001ae94u)	/* Extended Message Object 244 Data 5 Register */
#define CAN_EMO244DATA6	(*( CAN_EM0ODATA3_type *) 0xf001ae98u)	/* Extended Message Object 244 Data 6 Register */
#define CAN_EMO245DATA0	(*( CAN_EM0ODATA3_type *) 0xf001aea0u)	/* Extended Message Object 245 Data 0 Register */
#define CAN_EMO245DATA1	(*( CAN_EM0ODATA3_type *) 0xf001aea4u)	/* Extended Message Object 245 Data 1 Register */
#define CAN_EMO245DATA2	(*( CAN_EM0ODATA3_type *) 0xf001aea8u)	/* Extended Message Object 245 Data 2 Register */
#define CAN_EMO245DATA4	(*( CAN_EM0ODATA3_type *) 0xf001aeb0u)	/* Extended Message Object 245 Data 4 Register */
#define CAN_EMO245DATA5	(*( CAN_EM0ODATA3_type *) 0xf001aeb4u)	/* Extended Message Object 245 Data 5 Register */
#define CAN_EMO245DATA6	(*( CAN_EM0ODATA3_type *) 0xf001aeb8u)	/* Extended Message Object 245 Data 6 Register */
#define CAN_EMO246DATA0	(*( CAN_EM0ODATA3_type *) 0xf001aec0u)	/* Extended Message Object 246 Data 0 Register */
#define CAN_EMO246DATA1	(*( CAN_EM0ODATA3_type *) 0xf001aec4u)	/* Extended Message Object 246 Data 1 Register */
#define CAN_EMO246DATA2	(*( CAN_EM0ODATA3_type *) 0xf001aec8u)	/* Extended Message Object 246 Data 2 Register */
#define CAN_EMO246DATA4	(*( CAN_EM0ODATA3_type *) 0xf001aed0u)	/* Extended Message Object 246 Data 4 Register */
#define CAN_EMO246DATA5	(*( CAN_EM0ODATA3_type *) 0xf001aed4u)	/* Extended Message Object 246 Data 5 Register */
#define CAN_EMO246DATA6	(*( CAN_EM0ODATA3_type *) 0xf001aed8u)	/* Extended Message Object 246 Data 6 Register */
#define CAN_EMO247DATA0	(*( CAN_EM0ODATA3_type *) 0xf001aee0u)	/* Extended Message Object 247 Data 0 Register */
#define CAN_EMO247DATA1	(*( CAN_EM0ODATA3_type *) 0xf001aee4u)	/* Extended Message Object 247 Data 1 Register */
#define CAN_EMO247DATA2	(*( CAN_EM0ODATA3_type *) 0xf001aee8u)	/* Extended Message Object 247 Data 2 Register */
#define CAN_EMO247DATA4	(*( CAN_EM0ODATA3_type *) 0xf001aef0u)	/* Extended Message Object 247 Data 4 Register */
#define CAN_EMO247DATA5	(*( CAN_EM0ODATA3_type *) 0xf001aef4u)	/* Extended Message Object 247 Data 5 Register */
#define CAN_EMO247DATA6	(*( CAN_EM0ODATA3_type *) 0xf001aef8u)	/* Extended Message Object 247 Data 6 Register */
#define CAN_EMO248DATA0	(*( CAN_EM0ODATA3_type *) 0xf001af00u)	/* Extended Message Object 248 Data 0 Register */
#define CAN_EMO248DATA1	(*( CAN_EM0ODATA3_type *) 0xf001af04u)	/* Extended Message Object 248 Data 1 Register */
#define CAN_EMO248DATA2	(*( CAN_EM0ODATA3_type *) 0xf001af08u)	/* Extended Message Object 248 Data 2 Register */
#define CAN_EMO248DATA4	(*( CAN_EM0ODATA3_type *) 0xf001af10u)	/* Extended Message Object 248 Data 4 Register */
#define CAN_EMO248DATA5	(*( CAN_EM0ODATA3_type *) 0xf001af14u)	/* Extended Message Object 248 Data 5 Register */
#define CAN_EMO248DATA6	(*( CAN_EM0ODATA3_type *) 0xf001af18u)	/* Extended Message Object 248 Data 6 Register */
#define CAN_EMO249DATA0	(*( CAN_EM0ODATA3_type *) 0xf001af20u)	/* Extended Message Object 249 Data 0 Register */
#define CAN_EMO249DATA1	(*( CAN_EM0ODATA3_type *) 0xf001af24u)	/* Extended Message Object 249 Data 1 Register */
#define CAN_EMO249DATA2	(*( CAN_EM0ODATA3_type *) 0xf001af28u)	/* Extended Message Object 249 Data 2 Register */
#define CAN_EMO249DATA4	(*( CAN_EM0ODATA3_type *) 0xf001af30u)	/* Extended Message Object 249 Data 4 Register */
#define CAN_EMO249DATA5	(*( CAN_EM0ODATA3_type *) 0xf001af34u)	/* Extended Message Object 249 Data 5 Register */
#define CAN_EMO249DATA6	(*( CAN_EM0ODATA3_type *) 0xf001af38u)	/* Extended Message Object 249 Data 6 Register */
#define CAN_EMO24DATA0	(*( CAN_EM0ODATA3_type *) 0xf0019300u)	/* Extended Message Object 24 Data 0 Register */
#define CAN_EMO24DATA1	(*( CAN_EM0ODATA3_type *) 0xf0019304u)	/* Extended Message Object 24 Data 1 Register */
#define CAN_EMO24DATA2	(*( CAN_EM0ODATA3_type *) 0xf0019308u)	/* Extended Message Object 24 Data 2 Register */
#define CAN_EMO24DATA4	(*( CAN_EM0ODATA3_type *) 0xf0019310u)	/* Extended Message Object 24 Data 4 Register */
#define CAN_EMO24DATA5	(*( CAN_EM0ODATA3_type *) 0xf0019314u)	/* Extended Message Object 24 Data 5 Register */
#define CAN_EMO24DATA6	(*( CAN_EM0ODATA3_type *) 0xf0019318u)	/* Extended Message Object 24 Data 6 Register */
#define CAN_EMO250DATA0	(*( CAN_EM0ODATA3_type *) 0xf001af40u)	/* Extended Message Object 250 Data 0 Register */
#define CAN_EMO250DATA1	(*( CAN_EM0ODATA3_type *) 0xf001af44u)	/* Extended Message Object 250 Data 1 Register */
#define CAN_EMO250DATA2	(*( CAN_EM0ODATA3_type *) 0xf001af48u)	/* Extended Message Object 250 Data 2 Register */
#define CAN_EMO250DATA4	(*( CAN_EM0ODATA3_type *) 0xf001af50u)	/* Extended Message Object 250 Data 4 Register */
#define CAN_EMO250DATA5	(*( CAN_EM0ODATA3_type *) 0xf001af54u)	/* Extended Message Object 250 Data 5 Register */
#define CAN_EMO250DATA6	(*( CAN_EM0ODATA3_type *) 0xf001af58u)	/* Extended Message Object 250 Data 6 Register */
#define CAN_EMO251DATA0	(*( CAN_EM0ODATA3_type *) 0xf001af60u)	/* Extended Message Object 251 Data 0 Register */
#define CAN_EMO251DATA1	(*( CAN_EM0ODATA3_type *) 0xf001af64u)	/* Extended Message Object 251 Data 1 Register */
#define CAN_EMO251DATA2	(*( CAN_EM0ODATA3_type *) 0xf001af68u)	/* Extended Message Object 251 Data 2 Register */
#define CAN_EMO251DATA4	(*( CAN_EM0ODATA3_type *) 0xf001af70u)	/* Extended Message Object 251 Data 4 Register */
#define CAN_EMO251DATA5	(*( CAN_EM0ODATA3_type *) 0xf001af74u)	/* Extended Message Object 251 Data 5 Register */
#define CAN_EMO251DATA6	(*( CAN_EM0ODATA3_type *) 0xf001af78u)	/* Extended Message Object 251 Data 6 Register */
#define CAN_EMO252DATA0	(*( CAN_EM0ODATA3_type *) 0xf001af80u)	/* Extended Message Object 252 Data 0 Register */
#define CAN_EMO252DATA1	(*( CAN_EM0ODATA3_type *) 0xf001af84u)	/* Extended Message Object 252 Data 1 Register */
#define CAN_EMO252DATA2	(*( CAN_EM0ODATA3_type *) 0xf001af88u)	/* Extended Message Object 252 Data 2 Register */
#define CAN_EMO252DATA4	(*( CAN_EM0ODATA3_type *) 0xf001af90u)	/* Extended Message Object 252 Data 4 Register */
#define CAN_EMO252DATA5	(*( CAN_EM0ODATA3_type *) 0xf001af94u)	/* Extended Message Object 252 Data 5 Register */
#define CAN_EMO252DATA6	(*( CAN_EM0ODATA3_type *) 0xf001af98u)	/* Extended Message Object 252 Data 6 Register */
#define CAN_EMO253DATA0	(*( CAN_EM0ODATA3_type *) 0xf001afa0u)	/* Extended Message Object 253 Data 0 Register */
#define CAN_EMO253DATA1	(*( CAN_EM0ODATA3_type *) 0xf001afa4u)	/* Extended Message Object 253 Data 1 Register */
#define CAN_EMO253DATA2	(*( CAN_EM0ODATA3_type *) 0xf001afa8u)	/* Extended Message Object 253 Data 2 Register */
#define CAN_EMO253DATA4	(*( CAN_EM0ODATA3_type *) 0xf001afb0u)	/* Extended Message Object 253 Data 4 Register */
#define CAN_EMO253DATA5	(*( CAN_EM0ODATA3_type *) 0xf001afb4u)	/* Extended Message Object 253 Data 5 Register */
#define CAN_EMO253DATA6	(*( CAN_EM0ODATA3_type *) 0xf001afb8u)	/* Extended Message Object 253 Data 6 Register */
#define CAN_EMO254DATA0	(*( CAN_EM0ODATA3_type *) 0xf001afc0u)	/* Extended Message Object 254 Data 0 Register */
#define CAN_EMO254DATA1	(*( CAN_EM0ODATA3_type *) 0xf001afc4u)	/* Extended Message Object 254 Data 1 Register */
#define CAN_EMO254DATA2	(*( CAN_EM0ODATA3_type *) 0xf001afc8u)	/* Extended Message Object 254 Data 2 Register */
#define CAN_EMO254DATA4	(*( CAN_EM0ODATA3_type *) 0xf001afd0u)	/* Extended Message Object 254 Data 4 Register */
#define CAN_EMO254DATA5	(*( CAN_EM0ODATA3_type *) 0xf001afd4u)	/* Extended Message Object 254 Data 5 Register */
#define CAN_EMO254DATA6	(*( CAN_EM0ODATA3_type *) 0xf001afd8u)	/* Extended Message Object 254 Data 6 Register */
#define CAN_EMO255DATA0	(*( CAN_EM0ODATA3_type *) 0xf001afe0u)	/* Extended Message Object 255 Data 0 Register */
#define CAN_EMO255DATA1	(*( CAN_EM0ODATA3_type *) 0xf001afe4u)	/* Extended Message Object 255 Data 1 Register */
#define CAN_EMO255DATA2	(*( CAN_EM0ODATA3_type *) 0xf001afe8u)	/* Extended Message Object 255 Data 2 Register */
#define CAN_EMO255DATA4	(*( CAN_EM0ODATA3_type *) 0xf001aff0u)	/* Extended Message Object 255 Data 4 Register */
#define CAN_EMO255DATA5	(*( CAN_EM0ODATA3_type *) 0xf001aff4u)	/* Extended Message Object 255 Data 5 Register */
#define CAN_EMO255DATA6	(*( CAN_EM0ODATA3_type *) 0xf001aff8u)	/* Extended Message Object 255 Data 6 Register */
#define CAN_EMO25DATA0	(*( CAN_EM0ODATA3_type *) 0xf0019320u)	/* Extended Message Object 25 Data 0 Register */
#define CAN_EMO25DATA1	(*( CAN_EM0ODATA3_type *) 0xf0019324u)	/* Extended Message Object 25 Data 1 Register */
#define CAN_EMO25DATA2	(*( CAN_EM0ODATA3_type *) 0xf0019328u)	/* Extended Message Object 25 Data 2 Register */
#define CAN_EMO25DATA4	(*( CAN_EM0ODATA3_type *) 0xf0019330u)	/* Extended Message Object 25 Data 4 Register */
#define CAN_EMO25DATA5	(*( CAN_EM0ODATA3_type *) 0xf0019334u)	/* Extended Message Object 25 Data 5 Register */
#define CAN_EMO25DATA6	(*( CAN_EM0ODATA3_type *) 0xf0019338u)	/* Extended Message Object 25 Data 6 Register */
#define CAN_EMO26DATA0	(*( CAN_EM0ODATA3_type *) 0xf0019340u)	/* Extended Message Object 26 Data 0 Register */
#define CAN_EMO26DATA1	(*( CAN_EM0ODATA3_type *) 0xf0019344u)	/* Extended Message Object 26 Data 1 Register */
#define CAN_EMO26DATA2	(*( CAN_EM0ODATA3_type *) 0xf0019348u)	/* Extended Message Object 26 Data 2 Register */
#define CAN_EMO26DATA4	(*( CAN_EM0ODATA3_type *) 0xf0019350u)	/* Extended Message Object 26 Data 4 Register */
#define CAN_EMO26DATA5	(*( CAN_EM0ODATA3_type *) 0xf0019354u)	/* Extended Message Object 26 Data 5 Register */
#define CAN_EMO26DATA6	(*( CAN_EM0ODATA3_type *) 0xf0019358u)	/* Extended Message Object 26 Data 6 Register */
#define CAN_EMO27DATA0	(*( CAN_EM0ODATA3_type *) 0xf0019360u)	/* Extended Message Object 27 Data 0 Register */
#define CAN_EMO27DATA1	(*( CAN_EM0ODATA3_type *) 0xf0019364u)	/* Extended Message Object 27 Data 1 Register */
#define CAN_EMO27DATA2	(*( CAN_EM0ODATA3_type *) 0xf0019368u)	/* Extended Message Object 27 Data 2 Register */
#define CAN_EMO27DATA4	(*( CAN_EM0ODATA3_type *) 0xf0019370u)	/* Extended Message Object 27 Data 4 Register */
#define CAN_EMO27DATA5	(*( CAN_EM0ODATA3_type *) 0xf0019374u)	/* Extended Message Object 27 Data 5 Register */
#define CAN_EMO27DATA6	(*( CAN_EM0ODATA3_type *) 0xf0019378u)	/* Extended Message Object 27 Data 6 Register */
#define CAN_EMO28DATA0	(*( CAN_EM0ODATA3_type *) 0xf0019380u)	/* Extended Message Object 28 Data 0 Register */
#define CAN_EMO28DATA1	(*( CAN_EM0ODATA3_type *) 0xf0019384u)	/* Extended Message Object 28 Data 1 Register */
#define CAN_EMO28DATA2	(*( CAN_EM0ODATA3_type *) 0xf0019388u)	/* Extended Message Object 28 Data 2 Register */
#define CAN_EMO28DATA4	(*( CAN_EM0ODATA3_type *) 0xf0019390u)	/* Extended Message Object 28 Data 4 Register */
#define CAN_EMO28DATA5	(*( CAN_EM0ODATA3_type *) 0xf0019394u)	/* Extended Message Object 28 Data 5 Register */
#define CAN_EMO28DATA6	(*( CAN_EM0ODATA3_type *) 0xf0019398u)	/* Extended Message Object 28 Data 6 Register */
#define CAN_EMO29DATA0	(*( CAN_EM0ODATA3_type *) 0xf00193a0u)	/* Extended Message Object 29 Data 0 Register */
#define CAN_EMO29DATA1	(*( CAN_EM0ODATA3_type *) 0xf00193a4u)	/* Extended Message Object 29 Data 1 Register */
#define CAN_EMO29DATA2	(*( CAN_EM0ODATA3_type *) 0xf00193a8u)	/* Extended Message Object 29 Data 2 Register */
#define CAN_EMO29DATA4	(*( CAN_EM0ODATA3_type *) 0xf00193b0u)	/* Extended Message Object 29 Data 4 Register */
#define CAN_EMO29DATA5	(*( CAN_EM0ODATA3_type *) 0xf00193b4u)	/* Extended Message Object 29 Data 5 Register */
#define CAN_EMO29DATA6	(*( CAN_EM0ODATA3_type *) 0xf00193b8u)	/* Extended Message Object 29 Data 6 Register */
#define CAN_EMO2DATA0	(*( CAN_EM0ODATA3_type *) 0xf0019040u)	/* Extended Message Object 2 Data 0 Register */
#define CAN_EMO2DATA1	(*( CAN_EM0ODATA3_type *) 0xf0019044u)	/* Extended Message Object 2 Data 1 Register */
#define CAN_EMO2DATA2	(*( CAN_EM0ODATA3_type *) 0xf0019048u)	/* Extended Message Object 2 Data 2 Register */
#define CAN_EMO2DATA4	(*( CAN_EM0ODATA3_type *) 0xf0019050u)	/* Extended Message Object 2 Data 4 Register */
#define CAN_EMO2DATA5	(*( CAN_EM0ODATA3_type *) 0xf0019054u)	/* Extended Message Object 2 Data 5 Register */
#define CAN_EMO2DATA6	(*( CAN_EM0ODATA3_type *) 0xf0019058u)	/* Extended Message Object 2 Data 6 Register */
#define CAN_EMO30DATA0	(*( CAN_EM0ODATA3_type *) 0xf00193c0u)	/* Extended Message Object 30 Data 0 Register */
#define CAN_EMO30DATA1	(*( CAN_EM0ODATA3_type *) 0xf00193c4u)	/* Extended Message Object 30 Data 1 Register */
#define CAN_EMO30DATA2	(*( CAN_EM0ODATA3_type *) 0xf00193c8u)	/* Extended Message Object 30 Data 2 Register */
#define CAN_EMO30DATA4	(*( CAN_EM0ODATA3_type *) 0xf00193d0u)	/* Extended Message Object 30 Data 4 Register */
#define CAN_EMO30DATA5	(*( CAN_EM0ODATA3_type *) 0xf00193d4u)	/* Extended Message Object 30 Data 5 Register */
#define CAN_EMO30DATA6	(*( CAN_EM0ODATA3_type *) 0xf00193d8u)	/* Extended Message Object 30 Data 6 Register */
#define CAN_EMO31DATA0	(*( CAN_EM0ODATA3_type *) 0xf00193e0u)	/* Extended Message Object 31 Data 0 Register */
#define CAN_EMO31DATA1	(*( CAN_EM0ODATA3_type *) 0xf00193e4u)	/* Extended Message Object 31 Data 1 Register */
#define CAN_EMO31DATA2	(*( CAN_EM0ODATA3_type *) 0xf00193e8u)	/* Extended Message Object 31 Data 2 Register */
#define CAN_EMO31DATA4	(*( CAN_EM0ODATA3_type *) 0xf00193f0u)	/* Extended Message Object 31 Data 4 Register */
#define CAN_EMO31DATA5	(*( CAN_EM0ODATA3_type *) 0xf00193f4u)	/* Extended Message Object 31 Data 5 Register */
#define CAN_EMO31DATA6	(*( CAN_EM0ODATA3_type *) 0xf00193f8u)	/* Extended Message Object 31 Data 6 Register */
#define CAN_EMO32DATA0	(*( CAN_EM0ODATA3_type *) 0xf0019400u)	/* Extended Message Object 32 Data 0 Register */
#define CAN_EMO32DATA1	(*( CAN_EM0ODATA3_type *) 0xf0019404u)	/* Extended Message Object 32 Data 1 Register */
#define CAN_EMO32DATA2	(*( CAN_EM0ODATA3_type *) 0xf0019408u)	/* Extended Message Object 32 Data 2 Register */
#define CAN_EMO32DATA4	(*( CAN_EM0ODATA3_type *) 0xf0019410u)	/* Extended Message Object 32 Data 4 Register */
#define CAN_EMO32DATA5	(*( CAN_EM0ODATA3_type *) 0xf0019414u)	/* Extended Message Object 32 Data 5 Register */
#define CAN_EMO32DATA6	(*( CAN_EM0ODATA3_type *) 0xf0019418u)	/* Extended Message Object 32 Data 6 Register */
#define CAN_EMO33DATA0	(*( CAN_EM0ODATA3_type *) 0xf0019420u)	/* Extended Message Object 33 Data 0 Register */
#define CAN_EMO33DATA1	(*( CAN_EM0ODATA3_type *) 0xf0019424u)	/* Extended Message Object 33 Data 1 Register */
#define CAN_EMO33DATA2	(*( CAN_EM0ODATA3_type *) 0xf0019428u)	/* Extended Message Object 33 Data 2 Register */
#define CAN_EMO33DATA4	(*( CAN_EM0ODATA3_type *) 0xf0019430u)	/* Extended Message Object 33 Data 4 Register */
#define CAN_EMO33DATA5	(*( CAN_EM0ODATA3_type *) 0xf0019434u)	/* Extended Message Object 33 Data 5 Register */
#define CAN_EMO33DATA6	(*( CAN_EM0ODATA3_type *) 0xf0019438u)	/* Extended Message Object 33 Data 6 Register */
#define CAN_EMO34DATA0	(*( CAN_EM0ODATA3_type *) 0xf0019440u)	/* Extended Message Object 34 Data 0 Register */
#define CAN_EMO34DATA1	(*( CAN_EM0ODATA3_type *) 0xf0019444u)	/* Extended Message Object 34 Data 1 Register */
#define CAN_EMO34DATA2	(*( CAN_EM0ODATA3_type *) 0xf0019448u)	/* Extended Message Object 34 Data 2 Register */
#define CAN_EMO34DATA4	(*( CAN_EM0ODATA3_type *) 0xf0019450u)	/* Extended Message Object 34 Data 4 Register */
#define CAN_EMO34DATA5	(*( CAN_EM0ODATA3_type *) 0xf0019454u)	/* Extended Message Object 34 Data 5 Register */
#define CAN_EMO34DATA6	(*( CAN_EM0ODATA3_type *) 0xf0019458u)	/* Extended Message Object 34 Data 6 Register */
#define CAN_EMO35DATA0	(*( CAN_EM0ODATA3_type *) 0xf0019460u)	/* Extended Message Object 35 Data 0 Register */
#define CAN_EMO35DATA1	(*( CAN_EM0ODATA3_type *) 0xf0019464u)	/* Extended Message Object 35 Data 1 Register */
#define CAN_EMO35DATA2	(*( CAN_EM0ODATA3_type *) 0xf0019468u)	/* Extended Message Object 35 Data 2 Register */
#define CAN_EMO35DATA4	(*( CAN_EM0ODATA3_type *) 0xf0019470u)	/* Extended Message Object 35 Data 4 Register */
#define CAN_EMO35DATA5	(*( CAN_EM0ODATA3_type *) 0xf0019474u)	/* Extended Message Object 35 Data 5 Register */
#define CAN_EMO35DATA6	(*( CAN_EM0ODATA3_type *) 0xf0019478u)	/* Extended Message Object 35 Data 6 Register */
#define CAN_EMO36DATA0	(*( CAN_EM0ODATA3_type *) 0xf0019480u)	/* Extended Message Object 36 Data 0 Register */
#define CAN_EMO36DATA1	(*( CAN_EM0ODATA3_type *) 0xf0019484u)	/* Extended Message Object 36 Data 1 Register */
#define CAN_EMO36DATA2	(*( CAN_EM0ODATA3_type *) 0xf0019488u)	/* Extended Message Object 36 Data 2 Register */
#define CAN_EMO36DATA4	(*( CAN_EM0ODATA3_type *) 0xf0019490u)	/* Extended Message Object 36 Data 4 Register */
#define CAN_EMO36DATA5	(*( CAN_EM0ODATA3_type *) 0xf0019494u)	/* Extended Message Object 36 Data 5 Register */
#define CAN_EMO36DATA6	(*( CAN_EM0ODATA3_type *) 0xf0019498u)	/* Extended Message Object 36 Data 6 Register */
#define CAN_EMO37DATA0	(*( CAN_EM0ODATA3_type *) 0xf00194a0u)	/* Extended Message Object 37 Data 0 Register */
#define CAN_EMO37DATA1	(*( CAN_EM0ODATA3_type *) 0xf00194a4u)	/* Extended Message Object 37 Data 1 Register */
#define CAN_EMO37DATA2	(*( CAN_EM0ODATA3_type *) 0xf00194a8u)	/* Extended Message Object 37 Data 2 Register */
#define CAN_EMO37DATA4	(*( CAN_EM0ODATA3_type *) 0xf00194b0u)	/* Extended Message Object 37 Data 4 Register */
#define CAN_EMO37DATA5	(*( CAN_EM0ODATA3_type *) 0xf00194b4u)	/* Extended Message Object 37 Data 5 Register */
#define CAN_EMO37DATA6	(*( CAN_EM0ODATA3_type *) 0xf00194b8u)	/* Extended Message Object 37 Data 6 Register */
#define CAN_EMO38DATA0	(*( CAN_EM0ODATA3_type *) 0xf00194c0u)	/* Extended Message Object 38 Data 0 Register */
#define CAN_EMO38DATA1	(*( CAN_EM0ODATA3_type *) 0xf00194c4u)	/* Extended Message Object 38 Data 1 Register */
#define CAN_EMO38DATA2	(*( CAN_EM0ODATA3_type *) 0xf00194c8u)	/* Extended Message Object 38 Data 2 Register */
#define CAN_EMO38DATA4	(*( CAN_EM0ODATA3_type *) 0xf00194d0u)	/* Extended Message Object 38 Data 4 Register */
#define CAN_EMO38DATA5	(*( CAN_EM0ODATA3_type *) 0xf00194d4u)	/* Extended Message Object 38 Data 5 Register */
#define CAN_EMO38DATA6	(*( CAN_EM0ODATA3_type *) 0xf00194d8u)	/* Extended Message Object 38 Data 6 Register */
#define CAN_EMO39DATA0	(*( CAN_EM0ODATA3_type *) 0xf00194e0u)	/* Extended Message Object 39 Data 0 Register */
#define CAN_EMO39DATA1	(*( CAN_EM0ODATA3_type *) 0xf00194e4u)	/* Extended Message Object 39 Data 1 Register */
#define CAN_EMO39DATA2	(*( CAN_EM0ODATA3_type *) 0xf00194e8u)	/* Extended Message Object 39 Data 2 Register */
#define CAN_EMO39DATA4	(*( CAN_EM0ODATA3_type *) 0xf00194f0u)	/* Extended Message Object 39 Data 4 Register */
#define CAN_EMO39DATA5	(*( CAN_EM0ODATA3_type *) 0xf00194f4u)	/* Extended Message Object 39 Data 5 Register */
#define CAN_EMO39DATA6	(*( CAN_EM0ODATA3_type *) 0xf00194f8u)	/* Extended Message Object 39 Data 6 Register */
#define CAN_EMO3DATA0	(*( CAN_EM0ODATA3_type *) 0xf0019060u)	/* Extended Message Object 3 Data 0 Register */
#define CAN_EMO3DATA1	(*( CAN_EM0ODATA3_type *) 0xf0019064u)	/* Extended Message Object 3 Data 1 Register */
#define CAN_EMO3DATA2	(*( CAN_EM0ODATA3_type *) 0xf0019068u)	/* Extended Message Object 3 Data 2 Register */
#define CAN_EMO3DATA4	(*( CAN_EM0ODATA3_type *) 0xf0019070u)	/* Extended Message Object 3 Data 4 Register */
#define CAN_EMO3DATA5	(*( CAN_EM0ODATA3_type *) 0xf0019074u)	/* Extended Message Object 3 Data 5 Register */
#define CAN_EMO3DATA6	(*( CAN_EM0ODATA3_type *) 0xf0019078u)	/* Extended Message Object 3 Data 6 Register */
#define CAN_EMO40DATA0	(*( CAN_EM0ODATA3_type *) 0xf0019500u)	/* Extended Message Object 40 Data 0 Register */
#define CAN_EMO40DATA1	(*( CAN_EM0ODATA3_type *) 0xf0019504u)	/* Extended Message Object 40 Data 1 Register */
#define CAN_EMO40DATA2	(*( CAN_EM0ODATA3_type *) 0xf0019508u)	/* Extended Message Object 40 Data 2 Register */
#define CAN_EMO40DATA4	(*( CAN_EM0ODATA3_type *) 0xf0019510u)	/* Extended Message Object 40 Data 4 Register */
#define CAN_EMO40DATA5	(*( CAN_EM0ODATA3_type *) 0xf0019514u)	/* Extended Message Object 40 Data 5 Register */
#define CAN_EMO40DATA6	(*( CAN_EM0ODATA3_type *) 0xf0019518u)	/* Extended Message Object 40 Data 6 Register */
#define CAN_EMO41DATA0	(*( CAN_EM0ODATA3_type *) 0xf0019520u)	/* Extended Message Object 41 Data 0 Register */
#define CAN_EMO41DATA1	(*( CAN_EM0ODATA3_type *) 0xf0019524u)	/* Extended Message Object 41 Data 1 Register */
#define CAN_EMO41DATA2	(*( CAN_EM0ODATA3_type *) 0xf0019528u)	/* Extended Message Object 41 Data 2 Register */
#define CAN_EMO41DATA4	(*( CAN_EM0ODATA3_type *) 0xf0019530u)	/* Extended Message Object 41 Data 4 Register */
#define CAN_EMO41DATA5	(*( CAN_EM0ODATA3_type *) 0xf0019534u)	/* Extended Message Object 41 Data 5 Register */
#define CAN_EMO41DATA6	(*( CAN_EM0ODATA3_type *) 0xf0019538u)	/* Extended Message Object 41 Data 6 Register */
#define CAN_EMO42DATA0	(*( CAN_EM0ODATA3_type *) 0xf0019540u)	/* Extended Message Object 42 Data 0 Register */
#define CAN_EMO42DATA1	(*( CAN_EM0ODATA3_type *) 0xf0019544u)	/* Extended Message Object 42 Data 1 Register */
#define CAN_EMO42DATA2	(*( CAN_EM0ODATA3_type *) 0xf0019548u)	/* Extended Message Object 42 Data 2 Register */
#define CAN_EMO42DATA4	(*( CAN_EM0ODATA3_type *) 0xf0019550u)	/* Extended Message Object 42 Data 4 Register */
#define CAN_EMO42DATA5	(*( CAN_EM0ODATA3_type *) 0xf0019554u)	/* Extended Message Object 42 Data 5 Register */
#define CAN_EMO42DATA6	(*( CAN_EM0ODATA3_type *) 0xf0019558u)	/* Extended Message Object 42 Data 6 Register */
#define CAN_EMO43DATA0	(*( CAN_EM0ODATA3_type *) 0xf0019560u)	/* Extended Message Object 43 Data 0 Register */
#define CAN_EMO43DATA1	(*( CAN_EM0ODATA3_type *) 0xf0019564u)	/* Extended Message Object 43 Data 1 Register */
#define CAN_EMO43DATA2	(*( CAN_EM0ODATA3_type *) 0xf0019568u)	/* Extended Message Object 43 Data 2 Register */
#define CAN_EMO43DATA4	(*( CAN_EM0ODATA3_type *) 0xf0019570u)	/* Extended Message Object 43 Data 4 Register */
#define CAN_EMO43DATA5	(*( CAN_EM0ODATA3_type *) 0xf0019574u)	/* Extended Message Object 43 Data 5 Register */
#define CAN_EMO43DATA6	(*( CAN_EM0ODATA3_type *) 0xf0019578u)	/* Extended Message Object 43 Data 6 Register */
#define CAN_EMO44DATA0	(*( CAN_EM0ODATA3_type *) 0xf0019580u)	/* Extended Message Object 44 Data 0 Register */
#define CAN_EMO44DATA1	(*( CAN_EM0ODATA3_type *) 0xf0019584u)	/* Extended Message Object 44 Data 1 Register */
#define CAN_EMO44DATA2	(*( CAN_EM0ODATA3_type *) 0xf0019588u)	/* Extended Message Object 44 Data 2 Register */
#define CAN_EMO44DATA4	(*( CAN_EM0ODATA3_type *) 0xf0019590u)	/* Extended Message Object 44 Data 4 Register */
#define CAN_EMO44DATA5	(*( CAN_EM0ODATA3_type *) 0xf0019594u)	/* Extended Message Object 44 Data 5 Register */
#define CAN_EMO44DATA6	(*( CAN_EM0ODATA3_type *) 0xf0019598u)	/* Extended Message Object 44 Data 6 Register */
#define CAN_EMO45DATA0	(*( CAN_EM0ODATA3_type *) 0xf00195a0u)	/* Extended Message Object 45 Data 0 Register */
#define CAN_EMO45DATA1	(*( CAN_EM0ODATA3_type *) 0xf00195a4u)	/* Extended Message Object 45 Data 1 Register */
#define CAN_EMO45DATA2	(*( CAN_EM0ODATA3_type *) 0xf00195a8u)	/* Extended Message Object 45 Data 2 Register */
#define CAN_EMO45DATA4	(*( CAN_EM0ODATA3_type *) 0xf00195b0u)	/* Extended Message Object 45 Data 4 Register */
#define CAN_EMO45DATA5	(*( CAN_EM0ODATA3_type *) 0xf00195b4u)	/* Extended Message Object 45 Data 5 Register */
#define CAN_EMO45DATA6	(*( CAN_EM0ODATA3_type *) 0xf00195b8u)	/* Extended Message Object 45 Data 6 Register */
#define CAN_EMO46DATA0	(*( CAN_EM0ODATA3_type *) 0xf00195c0u)	/* Extended Message Object 46 Data 0 Register */
#define CAN_EMO46DATA1	(*( CAN_EM0ODATA3_type *) 0xf00195c4u)	/* Extended Message Object 46 Data 1 Register */
#define CAN_EMO46DATA2	(*( CAN_EM0ODATA3_type *) 0xf00195c8u)	/* Extended Message Object 46 Data 2 Register */
#define CAN_EMO46DATA4	(*( CAN_EM0ODATA3_type *) 0xf00195d0u)	/* Extended Message Object 46 Data 4 Register */
#define CAN_EMO46DATA5	(*( CAN_EM0ODATA3_type *) 0xf00195d4u)	/* Extended Message Object 46 Data 5 Register */
#define CAN_EMO46DATA6	(*( CAN_EM0ODATA3_type *) 0xf00195d8u)	/* Extended Message Object 46 Data 6 Register */
#define CAN_EMO47DATA0	(*( CAN_EM0ODATA3_type *) 0xf00195e0u)	/* Extended Message Object 47 Data 0 Register */
#define CAN_EMO47DATA1	(*( CAN_EM0ODATA3_type *) 0xf00195e4u)	/* Extended Message Object 47 Data 1 Register */
#define CAN_EMO47DATA2	(*( CAN_EM0ODATA3_type *) 0xf00195e8u)	/* Extended Message Object 47 Data 2 Register */
#define CAN_EMO47DATA4	(*( CAN_EM0ODATA3_type *) 0xf00195f0u)	/* Extended Message Object 47 Data 4 Register */
#define CAN_EMO47DATA5	(*( CAN_EM0ODATA3_type *) 0xf00195f4u)	/* Extended Message Object 47 Data 5 Register */
#define CAN_EMO47DATA6	(*( CAN_EM0ODATA3_type *) 0xf00195f8u)	/* Extended Message Object 47 Data 6 Register */
#define CAN_EMO48DATA0	(*( CAN_EM0ODATA3_type *) 0xf0019600u)	/* Extended Message Object 48 Data 0 Register */
#define CAN_EMO48DATA1	(*( CAN_EM0ODATA3_type *) 0xf0019604u)	/* Extended Message Object 48 Data 1 Register */
#define CAN_EMO48DATA2	(*( CAN_EM0ODATA3_type *) 0xf0019608u)	/* Extended Message Object 48 Data 2 Register */
#define CAN_EMO48DATA4	(*( CAN_EM0ODATA3_type *) 0xf0019610u)	/* Extended Message Object 48 Data 4 Register */
#define CAN_EMO48DATA5	(*( CAN_EM0ODATA3_type *) 0xf0019614u)	/* Extended Message Object 48 Data 5 Register */
#define CAN_EMO48DATA6	(*( CAN_EM0ODATA3_type *) 0xf0019618u)	/* Extended Message Object 48 Data 6 Register */
#define CAN_EMO49DATA0	(*( CAN_EM0ODATA3_type *) 0xf0019620u)	/* Extended Message Object 49 Data 0 Register */
#define CAN_EMO49DATA1	(*( CAN_EM0ODATA3_type *) 0xf0019624u)	/* Extended Message Object 49 Data 1 Register */
#define CAN_EMO49DATA2	(*( CAN_EM0ODATA3_type *) 0xf0019628u)	/* Extended Message Object 49 Data 2 Register */
#define CAN_EMO49DATA4	(*( CAN_EM0ODATA3_type *) 0xf0019630u)	/* Extended Message Object 49 Data 4 Register */
#define CAN_EMO49DATA5	(*( CAN_EM0ODATA3_type *) 0xf0019634u)	/* Extended Message Object 49 Data 5 Register */
#define CAN_EMO49DATA6	(*( CAN_EM0ODATA3_type *) 0xf0019638u)	/* Extended Message Object 49 Data 6 Register */
#define CAN_EMO4DATA0	(*( CAN_EM0ODATA3_type *) 0xf0019080u)	/* Extended Message Object 4 Data 0 Register */
#define CAN_EMO4DATA1	(*( CAN_EM0ODATA3_type *) 0xf0019084u)	/* Extended Message Object 4 Data 1 Register */
#define CAN_EMO4DATA2	(*( CAN_EM0ODATA3_type *) 0xf0019088u)	/* Extended Message Object 4 Data 2 Register */
#define CAN_EMO4DATA4	(*( CAN_EM0ODATA3_type *) 0xf0019090u)	/* Extended Message Object 4 Data 4 Register */
#define CAN_EMO4DATA5	(*( CAN_EM0ODATA3_type *) 0xf0019094u)	/* Extended Message Object 4 Data 5 Register */
#define CAN_EMO4DATA6	(*( CAN_EM0ODATA3_type *) 0xf0019098u)	/* Extended Message Object 4 Data 6 Register */
#define CAN_EMO50DATA0	(*( CAN_EM0ODATA3_type *) 0xf0019640u)	/* Extended Message Object 50 Data 0 Register */
#define CAN_EMO50DATA1	(*( CAN_EM0ODATA3_type *) 0xf0019644u)	/* Extended Message Object 50 Data 1 Register */
#define CAN_EMO50DATA2	(*( CAN_EM0ODATA3_type *) 0xf0019648u)	/* Extended Message Object 50 Data 2 Register */
#define CAN_EMO50DATA4	(*( CAN_EM0ODATA3_type *) 0xf0019650u)	/* Extended Message Object 50 Data 4 Register */
#define CAN_EMO50DATA5	(*( CAN_EM0ODATA3_type *) 0xf0019654u)	/* Extended Message Object 50 Data 5 Register */
#define CAN_EMO50DATA6	(*( CAN_EM0ODATA3_type *) 0xf0019658u)	/* Extended Message Object 50 Data 6 Register */
#define CAN_EMO51DATA0	(*( CAN_EM0ODATA3_type *) 0xf0019660u)	/* Extended Message Object 51 Data 0 Register */
#define CAN_EMO51DATA1	(*( CAN_EM0ODATA3_type *) 0xf0019664u)	/* Extended Message Object 51 Data 1 Register */
#define CAN_EMO51DATA2	(*( CAN_EM0ODATA3_type *) 0xf0019668u)	/* Extended Message Object 51 Data 2 Register */
#define CAN_EMO51DATA4	(*( CAN_EM0ODATA3_type *) 0xf0019670u)	/* Extended Message Object 51 Data 4 Register */
#define CAN_EMO51DATA5	(*( CAN_EM0ODATA3_type *) 0xf0019674u)	/* Extended Message Object 51 Data 5 Register */
#define CAN_EMO51DATA6	(*( CAN_EM0ODATA3_type *) 0xf0019678u)	/* Extended Message Object 51 Data 6 Register */
#define CAN_EMO52DATA0	(*( CAN_EM0ODATA3_type *) 0xf0019680u)	/* Extended Message Object 52 Data 0 Register */
#define CAN_EMO52DATA1	(*( CAN_EM0ODATA3_type *) 0xf0019684u)	/* Extended Message Object 52 Data 1 Register */
#define CAN_EMO52DATA2	(*( CAN_EM0ODATA3_type *) 0xf0019688u)	/* Extended Message Object 52 Data 2 Register */
#define CAN_EMO52DATA4	(*( CAN_EM0ODATA3_type *) 0xf0019690u)	/* Extended Message Object 52 Data 4 Register */
#define CAN_EMO52DATA5	(*( CAN_EM0ODATA3_type *) 0xf0019694u)	/* Extended Message Object 52 Data 5 Register */
#define CAN_EMO52DATA6	(*( CAN_EM0ODATA3_type *) 0xf0019698u)	/* Extended Message Object 52 Data 6 Register */
#define CAN_EMO53DATA0	(*( CAN_EM0ODATA3_type *) 0xf00196a0u)	/* Extended Message Object 53 Data 0 Register */
#define CAN_EMO53DATA1	(*( CAN_EM0ODATA3_type *) 0xf00196a4u)	/* Extended Message Object 53 Data 1 Register */
#define CAN_EMO53DATA2	(*( CAN_EM0ODATA3_type *) 0xf00196a8u)	/* Extended Message Object 53 Data 2 Register */
#define CAN_EMO53DATA4	(*( CAN_EM0ODATA3_type *) 0xf00196b0u)	/* Extended Message Object 53 Data 4 Register */
#define CAN_EMO53DATA5	(*( CAN_EM0ODATA3_type *) 0xf00196b4u)	/* Extended Message Object 53 Data 5 Register */
#define CAN_EMO53DATA6	(*( CAN_EM0ODATA3_type *) 0xf00196b8u)	/* Extended Message Object 53 Data 6 Register */
#define CAN_EMO54DATA0	(*( CAN_EM0ODATA3_type *) 0xf00196c0u)	/* Extended Message Object 54 Data 0 Register */
#define CAN_EMO54DATA1	(*( CAN_EM0ODATA3_type *) 0xf00196c4u)	/* Extended Message Object 54 Data 1 Register */
#define CAN_EMO54DATA2	(*( CAN_EM0ODATA3_type *) 0xf00196c8u)	/* Extended Message Object 54 Data 2 Register */
#define CAN_EMO54DATA4	(*( CAN_EM0ODATA3_type *) 0xf00196d0u)	/* Extended Message Object 54 Data 4 Register */
#define CAN_EMO54DATA5	(*( CAN_EM0ODATA3_type *) 0xf00196d4u)	/* Extended Message Object 54 Data 5 Register */
#define CAN_EMO54DATA6	(*( CAN_EM0ODATA3_type *) 0xf00196d8u)	/* Extended Message Object 54 Data 6 Register */
#define CAN_EMO55DATA0	(*( CAN_EM0ODATA3_type *) 0xf00196e0u)	/* Extended Message Object 55 Data 0 Register */
#define CAN_EMO55DATA1	(*( CAN_EM0ODATA3_type *) 0xf00196e4u)	/* Extended Message Object 55 Data 1 Register */
#define CAN_EMO55DATA2	(*( CAN_EM0ODATA3_type *) 0xf00196e8u)	/* Extended Message Object 55 Data 2 Register */
#define CAN_EMO55DATA4	(*( CAN_EM0ODATA3_type *) 0xf00196f0u)	/* Extended Message Object 55 Data 4 Register */
#define CAN_EMO55DATA5	(*( CAN_EM0ODATA3_type *) 0xf00196f4u)	/* Extended Message Object 55 Data 5 Register */
#define CAN_EMO55DATA6	(*( CAN_EM0ODATA3_type *) 0xf00196f8u)	/* Extended Message Object 55 Data 6 Register */
#define CAN_EMO56DATA0	(*( CAN_EM0ODATA3_type *) 0xf0019700u)	/* Extended Message Object 56 Data 0 Register */
#define CAN_EMO56DATA1	(*( CAN_EM0ODATA3_type *) 0xf0019704u)	/* Extended Message Object 56 Data 1 Register */
#define CAN_EMO56DATA2	(*( CAN_EM0ODATA3_type *) 0xf0019708u)	/* Extended Message Object 56 Data 2 Register */
#define CAN_EMO56DATA4	(*( CAN_EM0ODATA3_type *) 0xf0019710u)	/* Extended Message Object 56 Data 4 Register */
#define CAN_EMO56DATA5	(*( CAN_EM0ODATA3_type *) 0xf0019714u)	/* Extended Message Object 56 Data 5 Register */
#define CAN_EMO56DATA6	(*( CAN_EM0ODATA3_type *) 0xf0019718u)	/* Extended Message Object 56 Data 6 Register */
#define CAN_EMO57DATA0	(*( CAN_EM0ODATA3_type *) 0xf0019720u)	/* Extended Message Object 57 Data 0 Register */
#define CAN_EMO57DATA1	(*( CAN_EM0ODATA3_type *) 0xf0019724u)	/* Extended Message Object 57 Data 1 Register */
#define CAN_EMO57DATA2	(*( CAN_EM0ODATA3_type *) 0xf0019728u)	/* Extended Message Object 57 Data 2 Register */
#define CAN_EMO57DATA4	(*( CAN_EM0ODATA3_type *) 0xf0019730u)	/* Extended Message Object 57 Data 4 Register */
#define CAN_EMO57DATA5	(*( CAN_EM0ODATA3_type *) 0xf0019734u)	/* Extended Message Object 57 Data 5 Register */
#define CAN_EMO57DATA6	(*( CAN_EM0ODATA3_type *) 0xf0019738u)	/* Extended Message Object 57 Data 6 Register */
#define CAN_EMO58DATA0	(*( CAN_EM0ODATA3_type *) 0xf0019740u)	/* Extended Message Object 58 Data 0 Register */
#define CAN_EMO58DATA1	(*( CAN_EM0ODATA3_type *) 0xf0019744u)	/* Extended Message Object 58 Data 1 Register */
#define CAN_EMO58DATA2	(*( CAN_EM0ODATA3_type *) 0xf0019748u)	/* Extended Message Object 58 Data 2 Register */
#define CAN_EMO58DATA4	(*( CAN_EM0ODATA3_type *) 0xf0019750u)	/* Extended Message Object 58 Data 4 Register */
#define CAN_EMO58DATA5	(*( CAN_EM0ODATA3_type *) 0xf0019754u)	/* Extended Message Object 58 Data 5 Register */
#define CAN_EMO58DATA6	(*( CAN_EM0ODATA3_type *) 0xf0019758u)	/* Extended Message Object 58 Data 6 Register */
#define CAN_EMO59DATA0	(*( CAN_EM0ODATA3_type *) 0xf0019760u)	/* Extended Message Object 59 Data 0 Register */
#define CAN_EMO59DATA1	(*( CAN_EM0ODATA3_type *) 0xf0019764u)	/* Extended Message Object 59 Data 1 Register */
#define CAN_EMO59DATA2	(*( CAN_EM0ODATA3_type *) 0xf0019768u)	/* Extended Message Object 59 Data 2 Register */
#define CAN_EMO59DATA4	(*( CAN_EM0ODATA3_type *) 0xf0019770u)	/* Extended Message Object 59 Data 4 Register */
#define CAN_EMO59DATA5	(*( CAN_EM0ODATA3_type *) 0xf0019774u)	/* Extended Message Object 59 Data 5 Register */
#define CAN_EMO59DATA6	(*( CAN_EM0ODATA3_type *) 0xf0019778u)	/* Extended Message Object 59 Data 6 Register */
#define CAN_EMO5DATA0	(*( CAN_EM0ODATA3_type *) 0xf00190a0u)	/* Extended Message Object 5 Data 0 Register */
#define CAN_EMO5DATA1	(*( CAN_EM0ODATA3_type *) 0xf00190a4u)	/* Extended Message Object 5 Data 1 Register */
#define CAN_EMO5DATA2	(*( CAN_EM0ODATA3_type *) 0xf00190a8u)	/* Extended Message Object 5 Data 2 Register */
#define CAN_EMO5DATA4	(*( CAN_EM0ODATA3_type *) 0xf00190b0u)	/* Extended Message Object 5 Data 4 Register */
#define CAN_EMO5DATA5	(*( CAN_EM0ODATA3_type *) 0xf00190b4u)	/* Extended Message Object 5 Data 5 Register */
#define CAN_EMO5DATA6	(*( CAN_EM0ODATA3_type *) 0xf00190b8u)	/* Extended Message Object 5 Data 6 Register */
#define CAN_EMO60DATA0	(*( CAN_EM0ODATA3_type *) 0xf0019780u)	/* Extended Message Object 60 Data 0 Register */
#define CAN_EMO60DATA1	(*( CAN_EM0ODATA3_type *) 0xf0019784u)	/* Extended Message Object 60 Data 1 Register */
#define CAN_EMO60DATA2	(*( CAN_EM0ODATA3_type *) 0xf0019788u)	/* Extended Message Object 60 Data 2 Register */
#define CAN_EMO60DATA4	(*( CAN_EM0ODATA3_type *) 0xf0019790u)	/* Extended Message Object 60 Data 4 Register */
#define CAN_EMO60DATA5	(*( CAN_EM0ODATA3_type *) 0xf0019794u)	/* Extended Message Object 60 Data 5 Register */
#define CAN_EMO60DATA6	(*( CAN_EM0ODATA3_type *) 0xf0019798u)	/* Extended Message Object 60 Data 6 Register */
#define CAN_EMO61DATA0	(*( CAN_EM0ODATA3_type *) 0xf00197a0u)	/* Extended Message Object 61 Data 0 Register */
#define CAN_EMO61DATA1	(*( CAN_EM0ODATA3_type *) 0xf00197a4u)	/* Extended Message Object 61 Data 1 Register */
#define CAN_EMO61DATA2	(*( CAN_EM0ODATA3_type *) 0xf00197a8u)	/* Extended Message Object 61 Data 2 Register */
#define CAN_EMO61DATA4	(*( CAN_EM0ODATA3_type *) 0xf00197b0u)	/* Extended Message Object 61 Data 4 Register */
#define CAN_EMO61DATA5	(*( CAN_EM0ODATA3_type *) 0xf00197b4u)	/* Extended Message Object 61 Data 5 Register */
#define CAN_EMO61DATA6	(*( CAN_EM0ODATA3_type *) 0xf00197b8u)	/* Extended Message Object 61 Data 6 Register */
#define CAN_EMO62DATA0	(*( CAN_EM0ODATA3_type *) 0xf00197c0u)	/* Extended Message Object 62 Data 0 Register */
#define CAN_EMO62DATA1	(*( CAN_EM0ODATA3_type *) 0xf00197c4u)	/* Extended Message Object 62 Data 1 Register */
#define CAN_EMO62DATA2	(*( CAN_EM0ODATA3_type *) 0xf00197c8u)	/* Extended Message Object 62 Data 2 Register */
#define CAN_EMO62DATA4	(*( CAN_EM0ODATA3_type *) 0xf00197d0u)	/* Extended Message Object 62 Data 4 Register */
#define CAN_EMO62DATA5	(*( CAN_EM0ODATA3_type *) 0xf00197d4u)	/* Extended Message Object 62 Data 5 Register */
#define CAN_EMO62DATA6	(*( CAN_EM0ODATA3_type *) 0xf00197d8u)	/* Extended Message Object 62 Data 6 Register */
#define CAN_EMO63DATA0	(*( CAN_EM0ODATA3_type *) 0xf00197e0u)	/* Extended Message Object 63 Data 0 Register */
#define CAN_EMO63DATA1	(*( CAN_EM0ODATA3_type *) 0xf00197e4u)	/* Extended Message Object 63 Data 1 Register */
#define CAN_EMO63DATA2	(*( CAN_EM0ODATA3_type *) 0xf00197e8u)	/* Extended Message Object 63 Data 2 Register */
#define CAN_EMO63DATA4	(*( CAN_EM0ODATA3_type *) 0xf00197f0u)	/* Extended Message Object 63 Data 4 Register */
#define CAN_EMO63DATA5	(*( CAN_EM0ODATA3_type *) 0xf00197f4u)	/* Extended Message Object 63 Data 5 Register */
#define CAN_EMO63DATA6	(*( CAN_EM0ODATA3_type *) 0xf00197f8u)	/* Extended Message Object 63 Data 6 Register */
#define CAN_EMO64DATA0	(*( CAN_EM0ODATA3_type *) 0xf0019800u)	/* Extended Message Object 64 Data 0 Register */
#define CAN_EMO64DATA1	(*( CAN_EM0ODATA3_type *) 0xf0019804u)	/* Extended Message Object 64 Data 1 Register */
#define CAN_EMO64DATA2	(*( CAN_EM0ODATA3_type *) 0xf0019808u)	/* Extended Message Object 64 Data 2 Register */
#define CAN_EMO64DATA4	(*( CAN_EM0ODATA3_type *) 0xf0019810u)	/* Extended Message Object 64 Data 4 Register */
#define CAN_EMO64DATA5	(*( CAN_EM0ODATA3_type *) 0xf0019814u)	/* Extended Message Object 64 Data 5 Register */
#define CAN_EMO64DATA6	(*( CAN_EM0ODATA3_type *) 0xf0019818u)	/* Extended Message Object 64 Data 6 Register */
#define CAN_EMO65DATA0	(*( CAN_EM0ODATA3_type *) 0xf0019820u)	/* Extended Message Object 65 Data 0 Register */
#define CAN_EMO65DATA1	(*( CAN_EM0ODATA3_type *) 0xf0019824u)	/* Extended Message Object 65 Data 1 Register */
#define CAN_EMO65DATA2	(*( CAN_EM0ODATA3_type *) 0xf0019828u)	/* Extended Message Object 65 Data 2 Register */
#define CAN_EMO65DATA4	(*( CAN_EM0ODATA3_type *) 0xf0019830u)	/* Extended Message Object 65 Data 4 Register */
#define CAN_EMO65DATA5	(*( CAN_EM0ODATA3_type *) 0xf0019834u)	/* Extended Message Object 65 Data 5 Register */
#define CAN_EMO65DATA6	(*( CAN_EM0ODATA3_type *) 0xf0019838u)	/* Extended Message Object 65 Data 6 Register */
#define CAN_EMO66DATA0	(*( CAN_EM0ODATA3_type *) 0xf0019840u)	/* Extended Message Object 66 Data 0 Register */
#define CAN_EMO66DATA1	(*( CAN_EM0ODATA3_type *) 0xf0019844u)	/* Extended Message Object 66 Data 1 Register */
#define CAN_EMO66DATA2	(*( CAN_EM0ODATA3_type *) 0xf0019848u)	/* Extended Message Object 66 Data 2 Register */
#define CAN_EMO66DATA4	(*( CAN_EM0ODATA3_type *) 0xf0019850u)	/* Extended Message Object 66 Data 4 Register */
#define CAN_EMO66DATA5	(*( CAN_EM0ODATA3_type *) 0xf0019854u)	/* Extended Message Object 66 Data 5 Register */
#define CAN_EMO66DATA6	(*( CAN_EM0ODATA3_type *) 0xf0019858u)	/* Extended Message Object 66 Data 6 Register */
#define CAN_EMO67DATA0	(*( CAN_EM0ODATA3_type *) 0xf0019860u)	/* Extended Message Object 67 Data 0 Register */
#define CAN_EMO67DATA1	(*( CAN_EM0ODATA3_type *) 0xf0019864u)	/* Extended Message Object 67 Data 1 Register */
#define CAN_EMO67DATA2	(*( CAN_EM0ODATA3_type *) 0xf0019868u)	/* Extended Message Object 67 Data 2 Register */
#define CAN_EMO67DATA4	(*( CAN_EM0ODATA3_type *) 0xf0019870u)	/* Extended Message Object 67 Data 4 Register */
#define CAN_EMO67DATA5	(*( CAN_EM0ODATA3_type *) 0xf0019874u)	/* Extended Message Object 67 Data 5 Register */
#define CAN_EMO67DATA6	(*( CAN_EM0ODATA3_type *) 0xf0019878u)	/* Extended Message Object 67 Data 6 Register */
#define CAN_EMO68DATA0	(*( CAN_EM0ODATA3_type *) 0xf0019880u)	/* Extended Message Object 68 Data 0 Register */
#define CAN_EMO68DATA1	(*( CAN_EM0ODATA3_type *) 0xf0019884u)	/* Extended Message Object 68 Data 1 Register */
#define CAN_EMO68DATA2	(*( CAN_EM0ODATA3_type *) 0xf0019888u)	/* Extended Message Object 68 Data 2 Register */
#define CAN_EMO68DATA4	(*( CAN_EM0ODATA3_type *) 0xf0019890u)	/* Extended Message Object 68 Data 4 Register */
#define CAN_EMO68DATA5	(*( CAN_EM0ODATA3_type *) 0xf0019894u)	/* Extended Message Object 68 Data 5 Register */
#define CAN_EMO68DATA6	(*( CAN_EM0ODATA3_type *) 0xf0019898u)	/* Extended Message Object 68 Data 6 Register */
#define CAN_EMO69DATA0	(*( CAN_EM0ODATA3_type *) 0xf00198a0u)	/* Extended Message Object 69 Data 0 Register */
#define CAN_EMO69DATA1	(*( CAN_EM0ODATA3_type *) 0xf00198a4u)	/* Extended Message Object 69 Data 1 Register */
#define CAN_EMO69DATA2	(*( CAN_EM0ODATA3_type *) 0xf00198a8u)	/* Extended Message Object 69 Data 2 Register */
#define CAN_EMO69DATA4	(*( CAN_EM0ODATA3_type *) 0xf00198b0u)	/* Extended Message Object 69 Data 4 Register */
#define CAN_EMO69DATA5	(*( CAN_EM0ODATA3_type *) 0xf00198b4u)	/* Extended Message Object 69 Data 5 Register */
#define CAN_EMO69DATA6	(*( CAN_EM0ODATA3_type *) 0xf00198b8u)	/* Extended Message Object 69 Data 6 Register */
#define CAN_EMO6DATA0	(*( CAN_EM0ODATA3_type *) 0xf00190c0u)	/* Extended Message Object 6 Data 0 Register */
#define CAN_EMO6DATA1	(*( CAN_EM0ODATA3_type *) 0xf00190c4u)	/* Extended Message Object 6 Data 1 Register */
#define CAN_EMO6DATA2	(*( CAN_EM0ODATA3_type *) 0xf00190c8u)	/* Extended Message Object 6 Data 2 Register */
#define CAN_EMO6DATA4	(*( CAN_EM0ODATA3_type *) 0xf00190d0u)	/* Extended Message Object 6 Data 4 Register */
#define CAN_EMO6DATA5	(*( CAN_EM0ODATA3_type *) 0xf00190d4u)	/* Extended Message Object 6 Data 5 Register */
#define CAN_EMO6DATA6	(*( CAN_EM0ODATA3_type *) 0xf00190d8u)	/* Extended Message Object 6 Data 6 Register */
#define CAN_EMO70DATA0	(*( CAN_EM0ODATA3_type *) 0xf00198c0u)	/* Extended Message Object 70 Data 0 Register */
#define CAN_EMO70DATA1	(*( CAN_EM0ODATA3_type *) 0xf00198c4u)	/* Extended Message Object 70 Data 1 Register */
#define CAN_EMO70DATA2	(*( CAN_EM0ODATA3_type *) 0xf00198c8u)	/* Extended Message Object 70 Data 2 Register */
#define CAN_EMO70DATA4	(*( CAN_EM0ODATA3_type *) 0xf00198d0u)	/* Extended Message Object 70 Data 4 Register */
#define CAN_EMO70DATA5	(*( CAN_EM0ODATA3_type *) 0xf00198d4u)	/* Extended Message Object 70 Data 5 Register */
#define CAN_EMO70DATA6	(*( CAN_EM0ODATA3_type *) 0xf00198d8u)	/* Extended Message Object 70 Data 6 Register */
#define CAN_EMO71DATA0	(*( CAN_EM0ODATA3_type *) 0xf00198e0u)	/* Extended Message Object 71 Data 0 Register */
#define CAN_EMO71DATA1	(*( CAN_EM0ODATA3_type *) 0xf00198e4u)	/* Extended Message Object 71 Data 1 Register */
#define CAN_EMO71DATA2	(*( CAN_EM0ODATA3_type *) 0xf00198e8u)	/* Extended Message Object 71 Data 2 Register */
#define CAN_EMO71DATA4	(*( CAN_EM0ODATA3_type *) 0xf00198f0u)	/* Extended Message Object 71 Data 4 Register */
#define CAN_EMO71DATA5	(*( CAN_EM0ODATA3_type *) 0xf00198f4u)	/* Extended Message Object 71 Data 5 Register */
#define CAN_EMO71DATA6	(*( CAN_EM0ODATA3_type *) 0xf00198f8u)	/* Extended Message Object 71 Data 6 Register */
#define CAN_EMO72DATA0	(*( CAN_EM0ODATA3_type *) 0xf0019900u)	/* Extended Message Object 72 Data 0 Register */
#define CAN_EMO72DATA1	(*( CAN_EM0ODATA3_type *) 0xf0019904u)	/* Extended Message Object 72 Data 1 Register */
#define CAN_EMO72DATA2	(*( CAN_EM0ODATA3_type *) 0xf0019908u)	/* Extended Message Object 72 Data 2 Register */
#define CAN_EMO72DATA4	(*( CAN_EM0ODATA3_type *) 0xf0019910u)	/* Extended Message Object 72 Data 4 Register */
#define CAN_EMO72DATA5	(*( CAN_EM0ODATA3_type *) 0xf0019914u)	/* Extended Message Object 72 Data 5 Register */
#define CAN_EMO72DATA6	(*( CAN_EM0ODATA3_type *) 0xf0019918u)	/* Extended Message Object 72 Data 6 Register */
#define CAN_EMO73DATA0	(*( CAN_EM0ODATA3_type *) 0xf0019920u)	/* Extended Message Object 73 Data 0 Register */
#define CAN_EMO73DATA1	(*( CAN_EM0ODATA3_type *) 0xf0019924u)	/* Extended Message Object 73 Data 1 Register */
#define CAN_EMO73DATA2	(*( CAN_EM0ODATA3_type *) 0xf0019928u)	/* Extended Message Object 73 Data 2 Register */
#define CAN_EMO73DATA4	(*( CAN_EM0ODATA3_type *) 0xf0019930u)	/* Extended Message Object 73 Data 4 Register */
#define CAN_EMO73DATA5	(*( CAN_EM0ODATA3_type *) 0xf0019934u)	/* Extended Message Object 73 Data 5 Register */
#define CAN_EMO73DATA6	(*( CAN_EM0ODATA3_type *) 0xf0019938u)	/* Extended Message Object 73 Data 6 Register */
#define CAN_EMO74DATA0	(*( CAN_EM0ODATA3_type *) 0xf0019940u)	/* Extended Message Object 74 Data 0 Register */
#define CAN_EMO74DATA1	(*( CAN_EM0ODATA3_type *) 0xf0019944u)	/* Extended Message Object 74 Data 1 Register */
#define CAN_EMO74DATA2	(*( CAN_EM0ODATA3_type *) 0xf0019948u)	/* Extended Message Object 74 Data 2 Register */
#define CAN_EMO74DATA4	(*( CAN_EM0ODATA3_type *) 0xf0019950u)	/* Extended Message Object 74 Data 4 Register */
#define CAN_EMO74DATA5	(*( CAN_EM0ODATA3_type *) 0xf0019954u)	/* Extended Message Object 74 Data 5 Register */
#define CAN_EMO74DATA6	(*( CAN_EM0ODATA3_type *) 0xf0019958u)	/* Extended Message Object 74 Data 6 Register */
#define CAN_EMO75DATA0	(*( CAN_EM0ODATA3_type *) 0xf0019960u)	/* Extended Message Object 75 Data 0 Register */
#define CAN_EMO75DATA1	(*( CAN_EM0ODATA3_type *) 0xf0019964u)	/* Extended Message Object 75 Data 1 Register */
#define CAN_EMO75DATA2	(*( CAN_EM0ODATA3_type *) 0xf0019968u)	/* Extended Message Object 75 Data 2 Register */
#define CAN_EMO75DATA4	(*( CAN_EM0ODATA3_type *) 0xf0019970u)	/* Extended Message Object 75 Data 4 Register */
#define CAN_EMO75DATA5	(*( CAN_EM0ODATA3_type *) 0xf0019974u)	/* Extended Message Object 75 Data 5 Register */
#define CAN_EMO75DATA6	(*( CAN_EM0ODATA3_type *) 0xf0019978u)	/* Extended Message Object 75 Data 6 Register */
#define CAN_EMO76DATA0	(*( CAN_EM0ODATA3_type *) 0xf0019980u)	/* Extended Message Object 76 Data 0 Register */
#define CAN_EMO76DATA1	(*( CAN_EM0ODATA3_type *) 0xf0019984u)	/* Extended Message Object 76 Data 1 Register */
#define CAN_EMO76DATA2	(*( CAN_EM0ODATA3_type *) 0xf0019988u)	/* Extended Message Object 76 Data 2 Register */
#define CAN_EMO76DATA4	(*( CAN_EM0ODATA3_type *) 0xf0019990u)	/* Extended Message Object 76 Data 4 Register */
#define CAN_EMO76DATA5	(*( CAN_EM0ODATA3_type *) 0xf0019994u)	/* Extended Message Object 76 Data 5 Register */
#define CAN_EMO76DATA6	(*( CAN_EM0ODATA3_type *) 0xf0019998u)	/* Extended Message Object 76 Data 6 Register */
#define CAN_EMO77DATA0	(*( CAN_EM0ODATA3_type *) 0xf00199a0u)	/* Extended Message Object 77 Data 0 Register */
#define CAN_EMO77DATA1	(*( CAN_EM0ODATA3_type *) 0xf00199a4u)	/* Extended Message Object 77 Data 1 Register */
#define CAN_EMO77DATA2	(*( CAN_EM0ODATA3_type *) 0xf00199a8u)	/* Extended Message Object 77 Data 2 Register */
#define CAN_EMO77DATA4	(*( CAN_EM0ODATA3_type *) 0xf00199b0u)	/* Extended Message Object 77 Data 4 Register */
#define CAN_EMO77DATA5	(*( CAN_EM0ODATA3_type *) 0xf00199b4u)	/* Extended Message Object 77 Data 5 Register */
#define CAN_EMO77DATA6	(*( CAN_EM0ODATA3_type *) 0xf00199b8u)	/* Extended Message Object 77 Data 6 Register */
#define CAN_EMO78DATA0	(*( CAN_EM0ODATA3_type *) 0xf00199c0u)	/* Extended Message Object 78 Data 0 Register */
#define CAN_EMO78DATA1	(*( CAN_EM0ODATA3_type *) 0xf00199c4u)	/* Extended Message Object 78 Data 1 Register */
#define CAN_EMO78DATA2	(*( CAN_EM0ODATA3_type *) 0xf00199c8u)	/* Extended Message Object 78 Data 2 Register */
#define CAN_EMO78DATA4	(*( CAN_EM0ODATA3_type *) 0xf00199d0u)	/* Extended Message Object 78 Data 4 Register */
#define CAN_EMO78DATA5	(*( CAN_EM0ODATA3_type *) 0xf00199d4u)	/* Extended Message Object 78 Data 5 Register */
#define CAN_EMO78DATA6	(*( CAN_EM0ODATA3_type *) 0xf00199d8u)	/* Extended Message Object 78 Data 6 Register */
#define CAN_EMO79DATA0	(*( CAN_EM0ODATA3_type *) 0xf00199e0u)	/* Extended Message Object 79 Data 0 Register */
#define CAN_EMO79DATA1	(*( CAN_EM0ODATA3_type *) 0xf00199e4u)	/* Extended Message Object 79 Data 1 Register */
#define CAN_EMO79DATA2	(*( CAN_EM0ODATA3_type *) 0xf00199e8u)	/* Extended Message Object 79 Data 2 Register */
#define CAN_EMO79DATA4	(*( CAN_EM0ODATA3_type *) 0xf00199f0u)	/* Extended Message Object 79 Data 4 Register */
#define CAN_EMO79DATA5	(*( CAN_EM0ODATA3_type *) 0xf00199f4u)	/* Extended Message Object 79 Data 5 Register */
#define CAN_EMO79DATA6	(*( CAN_EM0ODATA3_type *) 0xf00199f8u)	/* Extended Message Object 79 Data 6 Register */
#define CAN_EMO7DATA0	(*( CAN_EM0ODATA3_type *) 0xf00190e0u)	/* Extended Message Object 7 Data 0 Register */
#define CAN_EMO7DATA1	(*( CAN_EM0ODATA3_type *) 0xf00190e4u)	/* Extended Message Object 7 Data 1 Register */
#define CAN_EMO7DATA2	(*( CAN_EM0ODATA3_type *) 0xf00190e8u)	/* Extended Message Object 7 Data 2 Register */
#define CAN_EMO7DATA4	(*( CAN_EM0ODATA3_type *) 0xf00190f0u)	/* Extended Message Object 7 Data 4 Register */
#define CAN_EMO7DATA5	(*( CAN_EM0ODATA3_type *) 0xf00190f4u)	/* Extended Message Object 7 Data 5 Register */
#define CAN_EMO7DATA6	(*( CAN_EM0ODATA3_type *) 0xf00190f8u)	/* Extended Message Object 7 Data 6 Register */
#define CAN_EMO80DATA0	(*( CAN_EM0ODATA3_type *) 0xf0019a00u)	/* Extended Message Object 80 Data 0 Register */
#define CAN_EMO80DATA1	(*( CAN_EM0ODATA3_type *) 0xf0019a04u)	/* Extended Message Object 80 Data 1 Register */
#define CAN_EMO80DATA2	(*( CAN_EM0ODATA3_type *) 0xf0019a08u)	/* Extended Message Object 80 Data 2 Register */
#define CAN_EMO80DATA4	(*( CAN_EM0ODATA3_type *) 0xf0019a10u)	/* Extended Message Object 80 Data 4 Register */
#define CAN_EMO80DATA5	(*( CAN_EM0ODATA3_type *) 0xf0019a14u)	/* Extended Message Object 80 Data 5 Register */
#define CAN_EMO80DATA6	(*( CAN_EM0ODATA3_type *) 0xf0019a18u)	/* Extended Message Object 80 Data 6 Register */
#define CAN_EMO81DATA0	(*( CAN_EM0ODATA3_type *) 0xf0019a20u)	/* Extended Message Object 81 Data 0 Register */
#define CAN_EMO81DATA1	(*( CAN_EM0ODATA3_type *) 0xf0019a24u)	/* Extended Message Object 81 Data 1 Register */
#define CAN_EMO81DATA2	(*( CAN_EM0ODATA3_type *) 0xf0019a28u)	/* Extended Message Object 81 Data 2 Register */
#define CAN_EMO81DATA4	(*( CAN_EM0ODATA3_type *) 0xf0019a30u)	/* Extended Message Object 81 Data 4 Register */
#define CAN_EMO81DATA5	(*( CAN_EM0ODATA3_type *) 0xf0019a34u)	/* Extended Message Object 81 Data 5 Register */
#define CAN_EMO81DATA6	(*( CAN_EM0ODATA3_type *) 0xf0019a38u)	/* Extended Message Object 81 Data 6 Register */
#define CAN_EMO82DATA0	(*( CAN_EM0ODATA3_type *) 0xf0019a40u)	/* Extended Message Object 82 Data 0 Register */
#define CAN_EMO82DATA1	(*( CAN_EM0ODATA3_type *) 0xf0019a44u)	/* Extended Message Object 82 Data 1 Register */
#define CAN_EMO82DATA2	(*( CAN_EM0ODATA3_type *) 0xf0019a48u)	/* Extended Message Object 82 Data 2 Register */
#define CAN_EMO82DATA4	(*( CAN_EM0ODATA3_type *) 0xf0019a50u)	/* Extended Message Object 82 Data 4 Register */
#define CAN_EMO82DATA5	(*( CAN_EM0ODATA3_type *) 0xf0019a54u)	/* Extended Message Object 82 Data 5 Register */
#define CAN_EMO82DATA6	(*( CAN_EM0ODATA3_type *) 0xf0019a58u)	/* Extended Message Object 82 Data 6 Register */
#define CAN_EMO83DATA0	(*( CAN_EM0ODATA3_type *) 0xf0019a60u)	/* Extended Message Object 83 Data 0 Register */
#define CAN_EMO83DATA1	(*( CAN_EM0ODATA3_type *) 0xf0019a64u)	/* Extended Message Object 83 Data 1 Register */
#define CAN_EMO83DATA2	(*( CAN_EM0ODATA3_type *) 0xf0019a68u)	/* Extended Message Object 83 Data 2 Register */
#define CAN_EMO83DATA4	(*( CAN_EM0ODATA3_type *) 0xf0019a70u)	/* Extended Message Object 83 Data 4 Register */
#define CAN_EMO83DATA5	(*( CAN_EM0ODATA3_type *) 0xf0019a74u)	/* Extended Message Object 83 Data 5 Register */
#define CAN_EMO83DATA6	(*( CAN_EM0ODATA3_type *) 0xf0019a78u)	/* Extended Message Object 83 Data 6 Register */
#define CAN_EMO84DATA0	(*( CAN_EM0ODATA3_type *) 0xf0019a80u)	/* Extended Message Object 84 Data 0 Register */
#define CAN_EMO84DATA1	(*( CAN_EM0ODATA3_type *) 0xf0019a84u)	/* Extended Message Object 84 Data 1 Register */
#define CAN_EMO84DATA2	(*( CAN_EM0ODATA3_type *) 0xf0019a88u)	/* Extended Message Object 84 Data 2 Register */
#define CAN_EMO84DATA4	(*( CAN_EM0ODATA3_type *) 0xf0019a90u)	/* Extended Message Object 84 Data 4 Register */
#define CAN_EMO84DATA5	(*( CAN_EM0ODATA3_type *) 0xf0019a94u)	/* Extended Message Object 84 Data 5 Register */
#define CAN_EMO84DATA6	(*( CAN_EM0ODATA3_type *) 0xf0019a98u)	/* Extended Message Object 84 Data 6 Register */
#define CAN_EMO85DATA0	(*( CAN_EM0ODATA3_type *) 0xf0019aa0u)	/* Extended Message Object 85 Data 0 Register */
#define CAN_EMO85DATA1	(*( CAN_EM0ODATA3_type *) 0xf0019aa4u)	/* Extended Message Object 85 Data 1 Register */
#define CAN_EMO85DATA2	(*( CAN_EM0ODATA3_type *) 0xf0019aa8u)	/* Extended Message Object 85 Data 2 Register */
#define CAN_EMO85DATA4	(*( CAN_EM0ODATA3_type *) 0xf0019ab0u)	/* Extended Message Object 85 Data 4 Register */
#define CAN_EMO85DATA5	(*( CAN_EM0ODATA3_type *) 0xf0019ab4u)	/* Extended Message Object 85 Data 5 Register */
#define CAN_EMO85DATA6	(*( CAN_EM0ODATA3_type *) 0xf0019ab8u)	/* Extended Message Object 85 Data 6 Register */
#define CAN_EMO86DATA0	(*( CAN_EM0ODATA3_type *) 0xf0019ac0u)	/* Extended Message Object 86 Data 0 Register */
#define CAN_EMO86DATA1	(*( CAN_EM0ODATA3_type *) 0xf0019ac4u)	/* Extended Message Object 86 Data 1 Register */
#define CAN_EMO86DATA2	(*( CAN_EM0ODATA3_type *) 0xf0019ac8u)	/* Extended Message Object 86 Data 2 Register */
#define CAN_EMO86DATA4	(*( CAN_EM0ODATA3_type *) 0xf0019ad0u)	/* Extended Message Object 86 Data 4 Register */
#define CAN_EMO86DATA5	(*( CAN_EM0ODATA3_type *) 0xf0019ad4u)	/* Extended Message Object 86 Data 5 Register */
#define CAN_EMO86DATA6	(*( CAN_EM0ODATA3_type *) 0xf0019ad8u)	/* Extended Message Object 86 Data 6 Register */
#define CAN_EMO87DATA0	(*( CAN_EM0ODATA3_type *) 0xf0019ae0u)	/* Extended Message Object 87 Data 0 Register */
#define CAN_EMO87DATA1	(*( CAN_EM0ODATA3_type *) 0xf0019ae4u)	/* Extended Message Object 87 Data 1 Register */
#define CAN_EMO87DATA2	(*( CAN_EM0ODATA3_type *) 0xf0019ae8u)	/* Extended Message Object 87 Data 2 Register */
#define CAN_EMO87DATA4	(*( CAN_EM0ODATA3_type *) 0xf0019af0u)	/* Extended Message Object 87 Data 4 Register */
#define CAN_EMO87DATA5	(*( CAN_EM0ODATA3_type *) 0xf0019af4u)	/* Extended Message Object 87 Data 5 Register */
#define CAN_EMO87DATA6	(*( CAN_EM0ODATA3_type *) 0xf0019af8u)	/* Extended Message Object 87 Data 6 Register */
#define CAN_EMO88DATA0	(*( CAN_EM0ODATA3_type *) 0xf0019b00u)	/* Extended Message Object 88 Data 0 Register */
#define CAN_EMO88DATA1	(*( CAN_EM0ODATA3_type *) 0xf0019b04u)	/* Extended Message Object 88 Data 1 Register */
#define CAN_EMO88DATA2	(*( CAN_EM0ODATA3_type *) 0xf0019b08u)	/* Extended Message Object 88 Data 2 Register */
#define CAN_EMO88DATA4	(*( CAN_EM0ODATA3_type *) 0xf0019b10u)	/* Extended Message Object 88 Data 4 Register */
#define CAN_EMO88DATA5	(*( CAN_EM0ODATA3_type *) 0xf0019b14u)	/* Extended Message Object 88 Data 5 Register */
#define CAN_EMO88DATA6	(*( CAN_EM0ODATA3_type *) 0xf0019b18u)	/* Extended Message Object 88 Data 6 Register */
#define CAN_EMO89DATA0	(*( CAN_EM0ODATA3_type *) 0xf0019b20u)	/* Extended Message Object 89 Data 0 Register */
#define CAN_EMO89DATA1	(*( CAN_EM0ODATA3_type *) 0xf0019b24u)	/* Extended Message Object 89 Data 1 Register */
#define CAN_EMO89DATA2	(*( CAN_EM0ODATA3_type *) 0xf0019b28u)	/* Extended Message Object 89 Data 2 Register */
#define CAN_EMO89DATA4	(*( CAN_EM0ODATA3_type *) 0xf0019b30u)	/* Extended Message Object 89 Data 4 Register */
#define CAN_EMO89DATA5	(*( CAN_EM0ODATA3_type *) 0xf0019b34u)	/* Extended Message Object 89 Data 5 Register */
#define CAN_EMO89DATA6	(*( CAN_EM0ODATA3_type *) 0xf0019b38u)	/* Extended Message Object 89 Data 6 Register */
#define CAN_EMO8DATA0	(*( CAN_EM0ODATA3_type *) 0xf0019100u)	/* Extended Message Object 8 Data 0 Register */
#define CAN_EMO8DATA1	(*( CAN_EM0ODATA3_type *) 0xf0019104u)	/* Extended Message Object 8 Data 1 Register */
#define CAN_EMO8DATA2	(*( CAN_EM0ODATA3_type *) 0xf0019108u)	/* Extended Message Object 8 Data 2 Register */
#define CAN_EMO8DATA4	(*( CAN_EM0ODATA3_type *) 0xf0019110u)	/* Extended Message Object 8 Data 4 Register */
#define CAN_EMO8DATA5	(*( CAN_EM0ODATA3_type *) 0xf0019114u)	/* Extended Message Object 8 Data 5 Register */
#define CAN_EMO8DATA6	(*( CAN_EM0ODATA3_type *) 0xf0019118u)	/* Extended Message Object 8 Data 6 Register */
#define CAN_EMO90DATA0	(*( CAN_EM0ODATA3_type *) 0xf0019b40u)	/* Extended Message Object 90 Data 0 Register */
#define CAN_EMO90DATA1	(*( CAN_EM0ODATA3_type *) 0xf0019b44u)	/* Extended Message Object 90 Data 1 Register */
#define CAN_EMO90DATA2	(*( CAN_EM0ODATA3_type *) 0xf0019b48u)	/* Extended Message Object 90 Data 2 Register */
#define CAN_EMO90DATA4	(*( CAN_EM0ODATA3_type *) 0xf0019b50u)	/* Extended Message Object 90 Data 4 Register */
#define CAN_EMO90DATA5	(*( CAN_EM0ODATA3_type *) 0xf0019b54u)	/* Extended Message Object 90 Data 5 Register */
#define CAN_EMO90DATA6	(*( CAN_EM0ODATA3_type *) 0xf0019b58u)	/* Extended Message Object 90 Data 6 Register */
#define CAN_EMO91DATA0	(*( CAN_EM0ODATA3_type *) 0xf0019b60u)	/* Extended Message Object 91 Data 0 Register */
#define CAN_EMO91DATA1	(*( CAN_EM0ODATA3_type *) 0xf0019b64u)	/* Extended Message Object 91 Data 1 Register */
#define CAN_EMO91DATA2	(*( CAN_EM0ODATA3_type *) 0xf0019b68u)	/* Extended Message Object 91 Data 2 Register */
#define CAN_EMO91DATA4	(*( CAN_EM0ODATA3_type *) 0xf0019b70u)	/* Extended Message Object 91 Data 4 Register */
#define CAN_EMO91DATA5	(*( CAN_EM0ODATA3_type *) 0xf0019b74u)	/* Extended Message Object 91 Data 5 Register */
#define CAN_EMO91DATA6	(*( CAN_EM0ODATA3_type *) 0xf0019b78u)	/* Extended Message Object 91 Data 6 Register */
#define CAN_EMO92DATA0	(*( CAN_EM0ODATA3_type *) 0xf0019b80u)	/* Extended Message Object 92 Data 0 Register */
#define CAN_EMO92DATA1	(*( CAN_EM0ODATA3_type *) 0xf0019b84u)	/* Extended Message Object 92 Data 1 Register */
#define CAN_EMO92DATA2	(*( CAN_EM0ODATA3_type *) 0xf0019b88u)	/* Extended Message Object 92 Data 2 Register */
#define CAN_EMO92DATA4	(*( CAN_EM0ODATA3_type *) 0xf0019b90u)	/* Extended Message Object 92 Data 4 Register */
#define CAN_EMO92DATA5	(*( CAN_EM0ODATA3_type *) 0xf0019b94u)	/* Extended Message Object 92 Data 5 Register */
#define CAN_EMO92DATA6	(*( CAN_EM0ODATA3_type *) 0xf0019b98u)	/* Extended Message Object 92 Data 6 Register */
#define CAN_EMO93DATA0	(*( CAN_EM0ODATA3_type *) 0xf0019ba0u)	/* Extended Message Object 93 Data 0 Register */
#define CAN_EMO93DATA1	(*( CAN_EM0ODATA3_type *) 0xf0019ba4u)	/* Extended Message Object 93 Data 1 Register */
#define CAN_EMO93DATA2	(*( CAN_EM0ODATA3_type *) 0xf0019ba8u)	/* Extended Message Object 93 Data 2 Register */
#define CAN_EMO93DATA4	(*( CAN_EM0ODATA3_type *) 0xf0019bb0u)	/* Extended Message Object 93 Data 4 Register */
#define CAN_EMO93DATA5	(*( CAN_EM0ODATA3_type *) 0xf0019bb4u)	/* Extended Message Object 93 Data 5 Register */
#define CAN_EMO93DATA6	(*( CAN_EM0ODATA3_type *) 0xf0019bb8u)	/* Extended Message Object 93 Data 6 Register */
#define CAN_EMO94DATA0	(*( CAN_EM0ODATA3_type *) 0xf0019bc0u)	/* Extended Message Object 94 Data 0 Register */
#define CAN_EMO94DATA1	(*( CAN_EM0ODATA3_type *) 0xf0019bc4u)	/* Extended Message Object 94 Data 1 Register */
#define CAN_EMO94DATA2	(*( CAN_EM0ODATA3_type *) 0xf0019bc8u)	/* Extended Message Object 94 Data 2 Register */
#define CAN_EMO94DATA4	(*( CAN_EM0ODATA3_type *) 0xf0019bd0u)	/* Extended Message Object 94 Data 4 Register */
#define CAN_EMO94DATA5	(*( CAN_EM0ODATA3_type *) 0xf0019bd4u)	/* Extended Message Object 94 Data 5 Register */
#define CAN_EMO94DATA6	(*( CAN_EM0ODATA3_type *) 0xf0019bd8u)	/* Extended Message Object 94 Data 6 Register */
#define CAN_EMO95DATA0	(*( CAN_EM0ODATA3_type *) 0xf0019be0u)	/* Extended Message Object 95 Data 0 Register */
#define CAN_EMO95DATA1	(*( CAN_EM0ODATA3_type *) 0xf0019be4u)	/* Extended Message Object 95 Data 1 Register */
#define CAN_EMO95DATA2	(*( CAN_EM0ODATA3_type *) 0xf0019be8u)	/* Extended Message Object 95 Data 2 Register */
#define CAN_EMO95DATA4	(*( CAN_EM0ODATA3_type *) 0xf0019bf0u)	/* Extended Message Object 95 Data 4 Register */
#define CAN_EMO95DATA5	(*( CAN_EM0ODATA3_type *) 0xf0019bf4u)	/* Extended Message Object 95 Data 5 Register */
#define CAN_EMO95DATA6	(*( CAN_EM0ODATA3_type *) 0xf0019bf8u)	/* Extended Message Object 95 Data 6 Register */
#define CAN_EMO96DATA0	(*( CAN_EM0ODATA3_type *) 0xf0019c00u)	/* Extended Message Object 96 Data 0 Register */
#define CAN_EMO96DATA1	(*( CAN_EM0ODATA3_type *) 0xf0019c04u)	/* Extended Message Object 96 Data 1 Register */
#define CAN_EMO96DATA2	(*( CAN_EM0ODATA3_type *) 0xf0019c08u)	/* Extended Message Object 96 Data 2 Register */
#define CAN_EMO96DATA4	(*( CAN_EM0ODATA3_type *) 0xf0019c10u)	/* Extended Message Object 96 Data 4 Register */
#define CAN_EMO96DATA5	(*( CAN_EM0ODATA3_type *) 0xf0019c14u)	/* Extended Message Object 96 Data 5 Register */
#define CAN_EMO96DATA6	(*( CAN_EM0ODATA3_type *) 0xf0019c18u)	/* Extended Message Object 96 Data 6 Register */
#define CAN_EMO97DATA0	(*( CAN_EM0ODATA3_type *) 0xf0019c20u)	/* Extended Message Object 97 Data 0 Register */
#define CAN_EMO97DATA1	(*( CAN_EM0ODATA3_type *) 0xf0019c24u)	/* Extended Message Object 97 Data 1 Register */
#define CAN_EMO97DATA2	(*( CAN_EM0ODATA3_type *) 0xf0019c28u)	/* Extended Message Object 97 Data 2 Register */
#define CAN_EMO97DATA4	(*( CAN_EM0ODATA3_type *) 0xf0019c30u)	/* Extended Message Object 97 Data 4 Register */
#define CAN_EMO97DATA5	(*( CAN_EM0ODATA3_type *) 0xf0019c34u)	/* Extended Message Object 97 Data 5 Register */
#define CAN_EMO97DATA6	(*( CAN_EM0ODATA3_type *) 0xf0019c38u)	/* Extended Message Object 97 Data 6 Register */
#define CAN_EMO98DATA0	(*( CAN_EM0ODATA3_type *) 0xf0019c40u)	/* Extended Message Object 98 Data 0 Register */
#define CAN_EMO98DATA1	(*( CAN_EM0ODATA3_type *) 0xf0019c44u)	/* Extended Message Object 98 Data 1 Register */
#define CAN_EMO98DATA2	(*( CAN_EM0ODATA3_type *) 0xf0019c48u)	/* Extended Message Object 98 Data 2 Register */
#define CAN_EMO98DATA4	(*( CAN_EM0ODATA3_type *) 0xf0019c50u)	/* Extended Message Object 98 Data 4 Register */
#define CAN_EMO98DATA5	(*( CAN_EM0ODATA3_type *) 0xf0019c54u)	/* Extended Message Object 98 Data 5 Register */
#define CAN_EMO98DATA6	(*( CAN_EM0ODATA3_type *) 0xf0019c58u)	/* Extended Message Object 98 Data 6 Register */
#define CAN_EMO99DATA0	(*( CAN_EM0ODATA3_type *) 0xf0019c60u)	/* Extended Message Object 99 Data 0 Register */
#define CAN_EMO99DATA1	(*( CAN_EM0ODATA3_type *) 0xf0019c64u)	/* Extended Message Object 99 Data 1 Register */
#define CAN_EMO99DATA2	(*( CAN_EM0ODATA3_type *) 0xf0019c68u)	/* Extended Message Object 99 Data 2 Register */
#define CAN_EMO99DATA4	(*( CAN_EM0ODATA3_type *) 0xf0019c70u)	/* Extended Message Object 99 Data 4 Register */
#define CAN_EMO99DATA5	(*( CAN_EM0ODATA3_type *) 0xf0019c74u)	/* Extended Message Object 99 Data 5 Register */
#define CAN_EMO99DATA6	(*( CAN_EM0ODATA3_type *) 0xf0019c78u)	/* Extended Message Object 99 Data 6 Register */
#define CAN_EMO9DATA0	(*( CAN_EM0ODATA3_type *) 0xf0019120u)	/* Extended Message Object 9 Data 0 Register */
#define CAN_EMO9DATA1	(*( CAN_EM0ODATA3_type *) 0xf0019124u)	/* Extended Message Object 9 Data 1 Register */
#define CAN_EMO9DATA2	(*( CAN_EM0ODATA3_type *) 0xf0019128u)	/* Extended Message Object 9 Data 2 Register */
#define CAN_EMO9DATA4	(*( CAN_EM0ODATA3_type *) 0xf0019130u)	/* Extended Message Object 9 Data 4 Register */
#define CAN_EMO9DATA5	(*( CAN_EM0ODATA3_type *) 0xf0019134u)	/* Extended Message Object 9 Data 5 Register */
#define CAN_EMO9DATA6	(*( CAN_EM0ODATA3_type *) 0xf0019138u)	/* Extended Message Object 9 Data 6 Register */
#define CAN_MODATAL0	(*( CAN_EM0ODATA3_type *) 0xf0019010u)	/* Message Object 0 Data Register Low */
#define CAN_MODATAL1	(*( CAN_EM0ODATA3_type *) 0xf0019030u)	/* Message Object 1 Data Register Low */
#define CAN_MODATAL10	(*( CAN_EM0ODATA3_type *) 0xf0019150u)	/* Message Object 10 Data Register Low */
#define CAN_MODATAL100	(*( CAN_EM0ODATA3_type *) 0xf0019c90u)	/* Message Object 100 Data Register Low */
#define CAN_MODATAL101	(*( CAN_EM0ODATA3_type *) 0xf0019cb0u)	/* Message Object 101 Data Register Low */
#define CAN_MODATAL102	(*( CAN_EM0ODATA3_type *) 0xf0019cd0u)	/* Message Object 102 Data Register Low */
#define CAN_MODATAL103	(*( CAN_EM0ODATA3_type *) 0xf0019cf0u)	/* Message Object 103 Data Register Low */
#define CAN_MODATAL104	(*( CAN_EM0ODATA3_type *) 0xf0019d10u)	/* Message Object 104 Data Register Low */
#define CAN_MODATAL105	(*( CAN_EM0ODATA3_type *) 0xf0019d30u)	/* Message Object 105 Data Register Low */
#define CAN_MODATAL106	(*( CAN_EM0ODATA3_type *) 0xf0019d50u)	/* Message Object 106 Data Register Low */
#define CAN_MODATAL107	(*( CAN_EM0ODATA3_type *) 0xf0019d70u)	/* Message Object 107 Data Register Low */
#define CAN_MODATAL108	(*( CAN_EM0ODATA3_type *) 0xf0019d90u)	/* Message Object 108 Data Register Low */
#define CAN_MODATAL109	(*( CAN_EM0ODATA3_type *) 0xf0019db0u)	/* Message Object 109 Data Register Low */
#define CAN_MODATAL11	(*( CAN_EM0ODATA3_type *) 0xf0019170u)	/* Message Object 11 Data Register Low */
#define CAN_MODATAL110	(*( CAN_EM0ODATA3_type *) 0xf0019dd0u)	/* Message Object 110 Data Register Low */
#define CAN_MODATAL111	(*( CAN_EM0ODATA3_type *) 0xf0019df0u)	/* Message Object 111 Data Register Low */
#define CAN_MODATAL112	(*( CAN_EM0ODATA3_type *) 0xf0019e10u)	/* Message Object 112 Data Register Low */
#define CAN_MODATAL113	(*( CAN_EM0ODATA3_type *) 0xf0019e30u)	/* Message Object 113 Data Register Low */
#define CAN_MODATAL114	(*( CAN_EM0ODATA3_type *) 0xf0019e50u)	/* Message Object 114 Data Register Low */
#define CAN_MODATAL115	(*( CAN_EM0ODATA3_type *) 0xf0019e70u)	/* Message Object 115 Data Register Low */
#define CAN_MODATAL116	(*( CAN_EM0ODATA3_type *) 0xf0019e90u)	/* Message Object 116 Data Register Low */
#define CAN_MODATAL117	(*( CAN_EM0ODATA3_type *) 0xf0019eb0u)	/* Message Object 117 Data Register Low */
#define CAN_MODATAL118	(*( CAN_EM0ODATA3_type *) 0xf0019ed0u)	/* Message Object 118 Data Register Low */
#define CAN_MODATAL119	(*( CAN_EM0ODATA3_type *) 0xf0019ef0u)	/* Message Object 119 Data Register Low */
#define CAN_MODATAL12	(*( CAN_EM0ODATA3_type *) 0xf0019190u)	/* Message Object 12 Data Register Low */
#define CAN_MODATAL120	(*( CAN_EM0ODATA3_type *) 0xf0019f10u)	/* Message Object 120 Data Register Low */
#define CAN_MODATAL121	(*( CAN_EM0ODATA3_type *) 0xf0019f30u)	/* Message Object 121 Data Register Low */
#define CAN_MODATAL122	(*( CAN_EM0ODATA3_type *) 0xf0019f50u)	/* Message Object 122 Data Register Low */
#define CAN_MODATAL123	(*( CAN_EM0ODATA3_type *) 0xf0019f70u)	/* Message Object 123 Data Register Low */
#define CAN_MODATAL124	(*( CAN_EM0ODATA3_type *) 0xf0019f90u)	/* Message Object 124 Data Register Low */
#define CAN_MODATAL125	(*( CAN_EM0ODATA3_type *) 0xf0019fb0u)	/* Message Object 125 Data Register Low */
#define CAN_MODATAL126	(*( CAN_EM0ODATA3_type *) 0xf0019fd0u)	/* Message Object 126 Data Register Low */
#define CAN_MODATAL127	(*( CAN_EM0ODATA3_type *) 0xf0019ff0u)	/* Message Object 127 Data Register Low */
#define CAN_MODATAL128	(*( CAN_EM0ODATA3_type *) 0xf001a010u)	/* Message Object 128 Data Register Low */
#define CAN_MODATAL129	(*( CAN_EM0ODATA3_type *) 0xf001a030u)	/* Message Object 129 Data Register Low */
#define CAN_MODATAL13	(*( CAN_EM0ODATA3_type *) 0xf00191b0u)	/* Message Object 13 Data Register Low */
#define CAN_MODATAL130	(*( CAN_EM0ODATA3_type *) 0xf001a050u)	/* Message Object 130 Data Register Low */
#define CAN_MODATAL131	(*( CAN_EM0ODATA3_type *) 0xf001a070u)	/* Message Object 131 Data Register Low */
#define CAN_MODATAL132	(*( CAN_EM0ODATA3_type *) 0xf001a090u)	/* Message Object 132 Data Register Low */
#define CAN_MODATAL133	(*( CAN_EM0ODATA3_type *) 0xf001a0b0u)	/* Message Object 133 Data Register Low */
#define CAN_MODATAL134	(*( CAN_EM0ODATA3_type *) 0xf001a0d0u)	/* Message Object 134 Data Register Low */
#define CAN_MODATAL135	(*( CAN_EM0ODATA3_type *) 0xf001a0f0u)	/* Message Object 135 Data Register Low */
#define CAN_MODATAL136	(*( CAN_EM0ODATA3_type *) 0xf001a110u)	/* Message Object 136 Data Register Low */
#define CAN_MODATAL137	(*( CAN_EM0ODATA3_type *) 0xf001a130u)	/* Message Object 137 Data Register Low */
#define CAN_MODATAL138	(*( CAN_EM0ODATA3_type *) 0xf001a150u)	/* Message Object 138 Data Register Low */
#define CAN_MODATAL139	(*( CAN_EM0ODATA3_type *) 0xf001a170u)	/* Message Object 139 Data Register Low */
#define CAN_MODATAL14	(*( CAN_EM0ODATA3_type *) 0xf00191d0u)	/* Message Object 14 Data Register Low */
#define CAN_MODATAL140	(*( CAN_EM0ODATA3_type *) 0xf001a190u)	/* Message Object 140 Data Register Low */
#define CAN_MODATAL141	(*( CAN_EM0ODATA3_type *) 0xf001a1b0u)	/* Message Object 141 Data Register Low */
#define CAN_MODATAL142	(*( CAN_EM0ODATA3_type *) 0xf001a1d0u)	/* Message Object 142 Data Register Low */
#define CAN_MODATAL143	(*( CAN_EM0ODATA3_type *) 0xf001a1f0u)	/* Message Object 143 Data Register Low */
#define CAN_MODATAL144	(*( CAN_EM0ODATA3_type *) 0xf001a210u)	/* Message Object 144 Data Register Low */
#define CAN_MODATAL145	(*( CAN_EM0ODATA3_type *) 0xf001a230u)	/* Message Object 145 Data Register Low */
#define CAN_MODATAL146	(*( CAN_EM0ODATA3_type *) 0xf001a250u)	/* Message Object 146 Data Register Low */
#define CAN_MODATAL147	(*( CAN_EM0ODATA3_type *) 0xf001a270u)	/* Message Object 147 Data Register Low */
#define CAN_MODATAL148	(*( CAN_EM0ODATA3_type *) 0xf001a290u)	/* Message Object 148 Data Register Low */
#define CAN_MODATAL149	(*( CAN_EM0ODATA3_type *) 0xf001a2b0u)	/* Message Object 149 Data Register Low */
#define CAN_MODATAL15	(*( CAN_EM0ODATA3_type *) 0xf00191f0u)	/* Message Object 15 Data Register Low */
#define CAN_MODATAL150	(*( CAN_EM0ODATA3_type *) 0xf001a2d0u)	/* Message Object 150 Data Register Low */
#define CAN_MODATAL151	(*( CAN_EM0ODATA3_type *) 0xf001a2f0u)	/* Message Object 151 Data Register Low */
#define CAN_MODATAL152	(*( CAN_EM0ODATA3_type *) 0xf001a310u)	/* Message Object 152 Data Register Low */
#define CAN_MODATAL153	(*( CAN_EM0ODATA3_type *) 0xf001a330u)	/* Message Object 153 Data Register Low */
#define CAN_MODATAL154	(*( CAN_EM0ODATA3_type *) 0xf001a350u)	/* Message Object 154 Data Register Low */
#define CAN_MODATAL155	(*( CAN_EM0ODATA3_type *) 0xf001a370u)	/* Message Object 155 Data Register Low */
#define CAN_MODATAL156	(*( CAN_EM0ODATA3_type *) 0xf001a390u)	/* Message Object 156 Data Register Low */
#define CAN_MODATAL157	(*( CAN_EM0ODATA3_type *) 0xf001a3b0u)	/* Message Object 157 Data Register Low */
#define CAN_MODATAL158	(*( CAN_EM0ODATA3_type *) 0xf001a3d0u)	/* Message Object 158 Data Register Low */
#define CAN_MODATAL159	(*( CAN_EM0ODATA3_type *) 0xf001a3f0u)	/* Message Object 159 Data Register Low */
#define CAN_MODATAL16	(*( CAN_EM0ODATA3_type *) 0xf0019210u)	/* Message Object 16 Data Register Low */
#define CAN_MODATAL160	(*( CAN_EM0ODATA3_type *) 0xf001a410u)	/* Message Object 160 Data Register Low */
#define CAN_MODATAL161	(*( CAN_EM0ODATA3_type *) 0xf001a430u)	/* Message Object 161 Data Register Low */
#define CAN_MODATAL162	(*( CAN_EM0ODATA3_type *) 0xf001a450u)	/* Message Object 162 Data Register Low */
#define CAN_MODATAL163	(*( CAN_EM0ODATA3_type *) 0xf001a470u)	/* Message Object 163 Data Register Low */
#define CAN_MODATAL164	(*( CAN_EM0ODATA3_type *) 0xf001a490u)	/* Message Object 164 Data Register Low */
#define CAN_MODATAL165	(*( CAN_EM0ODATA3_type *) 0xf001a4b0u)	/* Message Object 165 Data Register Low */
#define CAN_MODATAL166	(*( CAN_EM0ODATA3_type *) 0xf001a4d0u)	/* Message Object 166 Data Register Low */
#define CAN_MODATAL167	(*( CAN_EM0ODATA3_type *) 0xf001a4f0u)	/* Message Object 167 Data Register Low */
#define CAN_MODATAL168	(*( CAN_EM0ODATA3_type *) 0xf001a510u)	/* Message Object 168 Data Register Low */
#define CAN_MODATAL169	(*( CAN_EM0ODATA3_type *) 0xf001a530u)	/* Message Object 169 Data Register Low */
#define CAN_MODATAL17	(*( CAN_EM0ODATA3_type *) 0xf0019230u)	/* Message Object 17 Data Register Low */
#define CAN_MODATAL170	(*( CAN_EM0ODATA3_type *) 0xf001a550u)	/* Message Object 170 Data Register Low */
#define CAN_MODATAL171	(*( CAN_EM0ODATA3_type *) 0xf001a570u)	/* Message Object 171 Data Register Low */
#define CAN_MODATAL172	(*( CAN_EM0ODATA3_type *) 0xf001a590u)	/* Message Object 172 Data Register Low */
#define CAN_MODATAL173	(*( CAN_EM0ODATA3_type *) 0xf001a5b0u)	/* Message Object 173 Data Register Low */
#define CAN_MODATAL174	(*( CAN_EM0ODATA3_type *) 0xf001a5d0u)	/* Message Object 174 Data Register Low */
#define CAN_MODATAL175	(*( CAN_EM0ODATA3_type *) 0xf001a5f0u)	/* Message Object 175 Data Register Low */
#define CAN_MODATAL176	(*( CAN_EM0ODATA3_type *) 0xf001a610u)	/* Message Object 176 Data Register Low */
#define CAN_MODATAL177	(*( CAN_EM0ODATA3_type *) 0xf001a630u)	/* Message Object 177 Data Register Low */
#define CAN_MODATAL178	(*( CAN_EM0ODATA3_type *) 0xf001a650u)	/* Message Object 178 Data Register Low */
#define CAN_MODATAL179	(*( CAN_EM0ODATA3_type *) 0xf001a670u)	/* Message Object 179 Data Register Low */
#define CAN_MODATAL18	(*( CAN_EM0ODATA3_type *) 0xf0019250u)	/* Message Object 18 Data Register Low */
#define CAN_MODATAL180	(*( CAN_EM0ODATA3_type *) 0xf001a690u)	/* Message Object 180 Data Register Low */
#define CAN_MODATAL181	(*( CAN_EM0ODATA3_type *) 0xf001a6b0u)	/* Message Object 181 Data Register Low */
#define CAN_MODATAL182	(*( CAN_EM0ODATA3_type *) 0xf001a6d0u)	/* Message Object 182 Data Register Low */
#define CAN_MODATAL183	(*( CAN_EM0ODATA3_type *) 0xf001a6f0u)	/* Message Object 183 Data Register Low */
#define CAN_MODATAL184	(*( CAN_EM0ODATA3_type *) 0xf001a710u)	/* Message Object 184 Data Register Low */
#define CAN_MODATAL185	(*( CAN_EM0ODATA3_type *) 0xf001a730u)	/* Message Object 185 Data Register Low */
#define CAN_MODATAL186	(*( CAN_EM0ODATA3_type *) 0xf001a750u)	/* Message Object 186 Data Register Low */
#define CAN_MODATAL187	(*( CAN_EM0ODATA3_type *) 0xf001a770u)	/* Message Object 187 Data Register Low */
#define CAN_MODATAL188	(*( CAN_EM0ODATA3_type *) 0xf001a790u)	/* Message Object 188 Data Register Low */
#define CAN_MODATAL189	(*( CAN_EM0ODATA3_type *) 0xf001a7b0u)	/* Message Object 189 Data Register Low */
#define CAN_MODATAL19	(*( CAN_EM0ODATA3_type *) 0xf0019270u)	/* Message Object 19 Data Register Low */
#define CAN_MODATAL190	(*( CAN_EM0ODATA3_type *) 0xf001a7d0u)	/* Message Object 190 Data Register Low */
#define CAN_MODATAL191	(*( CAN_EM0ODATA3_type *) 0xf001a7f0u)	/* Message Object 191 Data Register Low */
#define CAN_MODATAL192	(*( CAN_EM0ODATA3_type *) 0xf001a810u)	/* Message Object 192 Data Register Low */
#define CAN_MODATAL193	(*( CAN_EM0ODATA3_type *) 0xf001a830u)	/* Message Object 193 Data Register Low */
#define CAN_MODATAL194	(*( CAN_EM0ODATA3_type *) 0xf001a850u)	/* Message Object 194 Data Register Low */
#define CAN_MODATAL195	(*( CAN_EM0ODATA3_type *) 0xf001a870u)	/* Message Object 195 Data Register Low */
#define CAN_MODATAL196	(*( CAN_EM0ODATA3_type *) 0xf001a890u)	/* Message Object 196 Data Register Low */
#define CAN_MODATAL197	(*( CAN_EM0ODATA3_type *) 0xf001a8b0u)	/* Message Object 197 Data Register Low */
#define CAN_MODATAL198	(*( CAN_EM0ODATA3_type *) 0xf001a8d0u)	/* Message Object 198 Data Register Low */
#define CAN_MODATAL199	(*( CAN_EM0ODATA3_type *) 0xf001a8f0u)	/* Message Object 199 Data Register Low */
#define CAN_MODATAL2	(*( CAN_EM0ODATA3_type *) 0xf0019050u)	/* Message Object 2 Data Register Low */
#define CAN_MODATAL20	(*( CAN_EM0ODATA3_type *) 0xf0019290u)	/* Message Object 20 Data Register Low */
#define CAN_MODATAL200	(*( CAN_EM0ODATA3_type *) 0xf001a910u)	/* Message Object 200 Data Register Low */
#define CAN_MODATAL201	(*( CAN_EM0ODATA3_type *) 0xf001a930u)	/* Message Object 201 Data Register Low */
#define CAN_MODATAL202	(*( CAN_EM0ODATA3_type *) 0xf001a950u)	/* Message Object 202 Data Register Low */
#define CAN_MODATAL203	(*( CAN_EM0ODATA3_type *) 0xf001a970u)	/* Message Object 203 Data Register Low */
#define CAN_MODATAL204	(*( CAN_EM0ODATA3_type *) 0xf001a990u)	/* Message Object 204 Data Register Low */
#define CAN_MODATAL205	(*( CAN_EM0ODATA3_type *) 0xf001a9b0u)	/* Message Object 205 Data Register Low */
#define CAN_MODATAL206	(*( CAN_EM0ODATA3_type *) 0xf001a9d0u)	/* Message Object 206 Data Register Low */
#define CAN_MODATAL207	(*( CAN_EM0ODATA3_type *) 0xf001a9f0u)	/* Message Object 207 Data Register Low */
#define CAN_MODATAL208	(*( CAN_EM0ODATA3_type *) 0xf001aa10u)	/* Message Object 208 Data Register Low */
#define CAN_MODATAL209	(*( CAN_EM0ODATA3_type *) 0xf001aa30u)	/* Message Object 209 Data Register Low */
#define CAN_MODATAL21	(*( CAN_EM0ODATA3_type *) 0xf00192b0u)	/* Message Object 21 Data Register Low */
#define CAN_MODATAL210	(*( CAN_EM0ODATA3_type *) 0xf001aa50u)	/* Message Object 210 Data Register Low */
#define CAN_MODATAL211	(*( CAN_EM0ODATA3_type *) 0xf001aa70u)	/* Message Object 211 Data Register Low */
#define CAN_MODATAL212	(*( CAN_EM0ODATA3_type *) 0xf001aa90u)	/* Message Object 212 Data Register Low */
#define CAN_MODATAL213	(*( CAN_EM0ODATA3_type *) 0xf001aab0u)	/* Message Object 213 Data Register Low */
#define CAN_MODATAL214	(*( CAN_EM0ODATA3_type *) 0xf001aad0u)	/* Message Object 214 Data Register Low */
#define CAN_MODATAL215	(*( CAN_EM0ODATA3_type *) 0xf001aaf0u)	/* Message Object 215 Data Register Low */
#define CAN_MODATAL216	(*( CAN_EM0ODATA3_type *) 0xf001ab10u)	/* Message Object 216 Data Register Low */
#define CAN_MODATAL217	(*( CAN_EM0ODATA3_type *) 0xf001ab30u)	/* Message Object 217 Data Register Low */
#define CAN_MODATAL218	(*( CAN_EM0ODATA3_type *) 0xf001ab50u)	/* Message Object 218 Data Register Low */
#define CAN_MODATAL219	(*( CAN_EM0ODATA3_type *) 0xf001ab70u)	/* Message Object 219 Data Register Low */
#define CAN_MODATAL22	(*( CAN_EM0ODATA3_type *) 0xf00192d0u)	/* Message Object 22 Data Register Low */
#define CAN_MODATAL220	(*( CAN_EM0ODATA3_type *) 0xf001ab90u)	/* Message Object 220 Data Register Low */
#define CAN_MODATAL221	(*( CAN_EM0ODATA3_type *) 0xf001abb0u)	/* Message Object 221 Data Register Low */
#define CAN_MODATAL222	(*( CAN_EM0ODATA3_type *) 0xf001abd0u)	/* Message Object 222 Data Register Low */
#define CAN_MODATAL223	(*( CAN_EM0ODATA3_type *) 0xf001abf0u)	/* Message Object 223 Data Register Low */
#define CAN_MODATAL224	(*( CAN_EM0ODATA3_type *) 0xf001ac10u)	/* Message Object 224 Data Register Low */
#define CAN_MODATAL225	(*( CAN_EM0ODATA3_type *) 0xf001ac30u)	/* Message Object 225 Data Register Low */
#define CAN_MODATAL226	(*( CAN_EM0ODATA3_type *) 0xf001ac50u)	/* Message Object 226 Data Register Low */
#define CAN_MODATAL227	(*( CAN_EM0ODATA3_type *) 0xf001ac70u)	/* Message Object 227 Data Register Low */
#define CAN_MODATAL228	(*( CAN_EM0ODATA3_type *) 0xf001ac90u)	/* Message Object 228 Data Register Low */
#define CAN_MODATAL229	(*( CAN_EM0ODATA3_type *) 0xf001acb0u)	/* Message Object 229 Data Register Low */
#define CAN_MODATAL23	(*( CAN_EM0ODATA3_type *) 0xf00192f0u)	/* Message Object 23 Data Register Low */
#define CAN_MODATAL230	(*( CAN_EM0ODATA3_type *) 0xf001acd0u)	/* Message Object 230 Data Register Low */
#define CAN_MODATAL231	(*( CAN_EM0ODATA3_type *) 0xf001acf0u)	/* Message Object 231 Data Register Low */
#define CAN_MODATAL232	(*( CAN_EM0ODATA3_type *) 0xf001ad10u)	/* Message Object 232 Data Register Low */
#define CAN_MODATAL233	(*( CAN_EM0ODATA3_type *) 0xf001ad30u)	/* Message Object 233 Data Register Low */
#define CAN_MODATAL234	(*( CAN_EM0ODATA3_type *) 0xf001ad50u)	/* Message Object 234 Data Register Low */
#define CAN_MODATAL235	(*( CAN_EM0ODATA3_type *) 0xf001ad70u)	/* Message Object 235 Data Register Low */
#define CAN_MODATAL236	(*( CAN_EM0ODATA3_type *) 0xf001ad90u)	/* Message Object 236 Data Register Low */
#define CAN_MODATAL237	(*( CAN_EM0ODATA3_type *) 0xf001adb0u)	/* Message Object 237 Data Register Low */
#define CAN_MODATAL238	(*( CAN_EM0ODATA3_type *) 0xf001add0u)	/* Message Object 238 Data Register Low */
#define CAN_MODATAL239	(*( CAN_EM0ODATA3_type *) 0xf001adf0u)	/* Message Object 239 Data Register Low */
#define CAN_MODATAL24	(*( CAN_EM0ODATA3_type *) 0xf0019310u)	/* Message Object 24 Data Register Low */
#define CAN_MODATAL240	(*( CAN_EM0ODATA3_type *) 0xf001ae10u)	/* Message Object 240 Data Register Low */
#define CAN_MODATAL241	(*( CAN_EM0ODATA3_type *) 0xf001ae30u)	/* Message Object 241 Data Register Low */
#define CAN_MODATAL242	(*( CAN_EM0ODATA3_type *) 0xf001ae50u)	/* Message Object 242 Data Register Low */
#define CAN_MODATAL243	(*( CAN_EM0ODATA3_type *) 0xf001ae70u)	/* Message Object 243 Data Register Low */
#define CAN_MODATAL244	(*( CAN_EM0ODATA3_type *) 0xf001ae90u)	/* Message Object 244 Data Register Low */
#define CAN_MODATAL245	(*( CAN_EM0ODATA3_type *) 0xf001aeb0u)	/* Message Object 245 Data Register Low */
#define CAN_MODATAL246	(*( CAN_EM0ODATA3_type *) 0xf001aed0u)	/* Message Object 246 Data Register Low */
#define CAN_MODATAL247	(*( CAN_EM0ODATA3_type *) 0xf001aef0u)	/* Message Object 247 Data Register Low */
#define CAN_MODATAL248	(*( CAN_EM0ODATA3_type *) 0xf001af10u)	/* Message Object 248 Data Register Low */
#define CAN_MODATAL249	(*( CAN_EM0ODATA3_type *) 0xf001af30u)	/* Message Object 249 Data Register Low */
#define CAN_MODATAL25	(*( CAN_EM0ODATA3_type *) 0xf0019330u)	/* Message Object 25 Data Register Low */
#define CAN_MODATAL250	(*( CAN_EM0ODATA3_type *) 0xf001af50u)	/* Message Object 250 Data Register Low */
#define CAN_MODATAL251	(*( CAN_EM0ODATA3_type *) 0xf001af70u)	/* Message Object 251 Data Register Low */
#define CAN_MODATAL252	(*( CAN_EM0ODATA3_type *) 0xf001af90u)	/* Message Object 252 Data Register Low */
#define CAN_MODATAL253	(*( CAN_EM0ODATA3_type *) 0xf001afb0u)	/* Message Object 253 Data Register Low */
#define CAN_MODATAL254	(*( CAN_EM0ODATA3_type *) 0xf001afd0u)	/* Message Object 254 Data Register Low */
#define CAN_MODATAL255	(*( CAN_EM0ODATA3_type *) 0xf001aff0u)	/* Message Object 255 Data Register Low */
#define CAN_MODATAL26	(*( CAN_EM0ODATA3_type *) 0xf0019350u)	/* Message Object 26 Data Register Low */
#define CAN_MODATAL27	(*( CAN_EM0ODATA3_type *) 0xf0019370u)	/* Message Object 27 Data Register Low */
#define CAN_MODATAL28	(*( CAN_EM0ODATA3_type *) 0xf0019390u)	/* Message Object 28 Data Register Low */
#define CAN_MODATAL29	(*( CAN_EM0ODATA3_type *) 0xf00193b0u)	/* Message Object 29 Data Register Low */
#define CAN_MODATAL3	(*( CAN_EM0ODATA3_type *) 0xf0019070u)	/* Message Object 3 Data Register Low */
#define CAN_MODATAL30	(*( CAN_EM0ODATA3_type *) 0xf00193d0u)	/* Message Object 30 Data Register Low */
#define CAN_MODATAL31	(*( CAN_EM0ODATA3_type *) 0xf00193f0u)	/* Message Object 31 Data Register Low */
#define CAN_MODATAL32	(*( CAN_EM0ODATA3_type *) 0xf0019410u)	/* Message Object 32 Data Register Low */
#define CAN_MODATAL33	(*( CAN_EM0ODATA3_type *) 0xf0019430u)	/* Message Object 33 Data Register Low */
#define CAN_MODATAL34	(*( CAN_EM0ODATA3_type *) 0xf0019450u)	/* Message Object 34 Data Register Low */
#define CAN_MODATAL35	(*( CAN_EM0ODATA3_type *) 0xf0019470u)	/* Message Object 35 Data Register Low */
#define CAN_MODATAL36	(*( CAN_EM0ODATA3_type *) 0xf0019490u)	/* Message Object 36 Data Register Low */
#define CAN_MODATAL37	(*( CAN_EM0ODATA3_type *) 0xf00194b0u)	/* Message Object 37 Data Register Low */
#define CAN_MODATAL38	(*( CAN_EM0ODATA3_type *) 0xf00194d0u)	/* Message Object 38 Data Register Low */
#define CAN_MODATAL39	(*( CAN_EM0ODATA3_type *) 0xf00194f0u)	/* Message Object 39 Data Register Low */
#define CAN_MODATAL4	(*( CAN_EM0ODATA3_type *) 0xf0019090u)	/* Message Object 4 Data Register Low */
#define CAN_MODATAL40	(*( CAN_EM0ODATA3_type *) 0xf0019510u)	/* Message Object 40 Data Register Low */
#define CAN_MODATAL41	(*( CAN_EM0ODATA3_type *) 0xf0019530u)	/* Message Object 41 Data Register Low */
#define CAN_MODATAL42	(*( CAN_EM0ODATA3_type *) 0xf0019550u)	/* Message Object 42 Data Register Low */
#define CAN_MODATAL43	(*( CAN_EM0ODATA3_type *) 0xf0019570u)	/* Message Object 43 Data Register Low */
#define CAN_MODATAL44	(*( CAN_EM0ODATA3_type *) 0xf0019590u)	/* Message Object 44 Data Register Low */
#define CAN_MODATAL45	(*( CAN_EM0ODATA3_type *) 0xf00195b0u)	/* Message Object 45 Data Register Low */
#define CAN_MODATAL46	(*( CAN_EM0ODATA3_type *) 0xf00195d0u)	/* Message Object 46 Data Register Low */
#define CAN_MODATAL47	(*( CAN_EM0ODATA3_type *) 0xf00195f0u)	/* Message Object 47 Data Register Low */
#define CAN_MODATAL48	(*( CAN_EM0ODATA3_type *) 0xf0019610u)	/* Message Object 48 Data Register Low */
#define CAN_MODATAL49	(*( CAN_EM0ODATA3_type *) 0xf0019630u)	/* Message Object 49 Data Register Low */
#define CAN_MODATAL5	(*( CAN_EM0ODATA3_type *) 0xf00190b0u)	/* Message Object 5 Data Register Low */
#define CAN_MODATAL50	(*( CAN_EM0ODATA3_type *) 0xf0019650u)	/* Message Object 50 Data Register Low */
#define CAN_MODATAL51	(*( CAN_EM0ODATA3_type *) 0xf0019670u)	/* Message Object 51 Data Register Low */
#define CAN_MODATAL52	(*( CAN_EM0ODATA3_type *) 0xf0019690u)	/* Message Object 52 Data Register Low */
#define CAN_MODATAL53	(*( CAN_EM0ODATA3_type *) 0xf00196b0u)	/* Message Object 53 Data Register Low */
#define CAN_MODATAL54	(*( CAN_EM0ODATA3_type *) 0xf00196d0u)	/* Message Object 54 Data Register Low */
#define CAN_MODATAL55	(*( CAN_EM0ODATA3_type *) 0xf00196f0u)	/* Message Object 55 Data Register Low */
#define CAN_MODATAL56	(*( CAN_EM0ODATA3_type *) 0xf0019710u)	/* Message Object 56 Data Register Low */
#define CAN_MODATAL57	(*( CAN_EM0ODATA3_type *) 0xf0019730u)	/* Message Object 57 Data Register Low */
#define CAN_MODATAL58	(*( CAN_EM0ODATA3_type *) 0xf0019750u)	/* Message Object 58 Data Register Low */
#define CAN_MODATAL59	(*( CAN_EM0ODATA3_type *) 0xf0019770u)	/* Message Object 59 Data Register Low */
#define CAN_MODATAL6	(*( CAN_EM0ODATA3_type *) 0xf00190d0u)	/* Message Object 6 Data Register Low */
#define CAN_MODATAL60	(*( CAN_EM0ODATA3_type *) 0xf0019790u)	/* Message Object 60 Data Register Low */
#define CAN_MODATAL61	(*( CAN_EM0ODATA3_type *) 0xf00197b0u)	/* Message Object 61 Data Register Low */
#define CAN_MODATAL62	(*( CAN_EM0ODATA3_type *) 0xf00197d0u)	/* Message Object 62 Data Register Low */
#define CAN_MODATAL63	(*( CAN_EM0ODATA3_type *) 0xf00197f0u)	/* Message Object 63 Data Register Low */
#define CAN_MODATAL64	(*( CAN_EM0ODATA3_type *) 0xf0019810u)	/* Message Object 64 Data Register Low */
#define CAN_MODATAL65	(*( CAN_EM0ODATA3_type *) 0xf0019830u)	/* Message Object 65 Data Register Low */
#define CAN_MODATAL66	(*( CAN_EM0ODATA3_type *) 0xf0019850u)	/* Message Object 66 Data Register Low */
#define CAN_MODATAL67	(*( CAN_EM0ODATA3_type *) 0xf0019870u)	/* Message Object 67 Data Register Low */
#define CAN_MODATAL68	(*( CAN_EM0ODATA3_type *) 0xf0019890u)	/* Message Object 68 Data Register Low */
#define CAN_MODATAL69	(*( CAN_EM0ODATA3_type *) 0xf00198b0u)	/* Message Object 69 Data Register Low */
#define CAN_MODATAL7	(*( CAN_EM0ODATA3_type *) 0xf00190f0u)	/* Message Object 7 Data Register Low */
#define CAN_MODATAL70	(*( CAN_EM0ODATA3_type *) 0xf00198d0u)	/* Message Object 70 Data Register Low */
#define CAN_MODATAL71	(*( CAN_EM0ODATA3_type *) 0xf00198f0u)	/* Message Object 71 Data Register Low */
#define CAN_MODATAL72	(*( CAN_EM0ODATA3_type *) 0xf0019910u)	/* Message Object 72 Data Register Low */
#define CAN_MODATAL73	(*( CAN_EM0ODATA3_type *) 0xf0019930u)	/* Message Object 73 Data Register Low */
#define CAN_MODATAL74	(*( CAN_EM0ODATA3_type *) 0xf0019950u)	/* Message Object 74 Data Register Low */
#define CAN_MODATAL75	(*( CAN_EM0ODATA3_type *) 0xf0019970u)	/* Message Object 75 Data Register Low */
#define CAN_MODATAL76	(*( CAN_EM0ODATA3_type *) 0xf0019990u)	/* Message Object 76 Data Register Low */
#define CAN_MODATAL77	(*( CAN_EM0ODATA3_type *) 0xf00199b0u)	/* Message Object 77 Data Register Low */
#define CAN_MODATAL78	(*( CAN_EM0ODATA3_type *) 0xf00199d0u)	/* Message Object 78 Data Register Low */
#define CAN_MODATAL79	(*( CAN_EM0ODATA3_type *) 0xf00199f0u)	/* Message Object 79 Data Register Low */
#define CAN_MODATAL8	(*( CAN_EM0ODATA3_type *) 0xf0019110u)	/* Message Object 8 Data Register Low */
#define CAN_MODATAL80	(*( CAN_EM0ODATA3_type *) 0xf0019a10u)	/* Message Object 80 Data Register Low */
#define CAN_MODATAL81	(*( CAN_EM0ODATA3_type *) 0xf0019a30u)	/* Message Object 81 Data Register Low */
#define CAN_MODATAL82	(*( CAN_EM0ODATA3_type *) 0xf0019a50u)	/* Message Object 82 Data Register Low */
#define CAN_MODATAL83	(*( CAN_EM0ODATA3_type *) 0xf0019a70u)	/* Message Object 83 Data Register Low */
#define CAN_MODATAL84	(*( CAN_EM0ODATA3_type *) 0xf0019a90u)	/* Message Object 84 Data Register Low */
#define CAN_MODATAL85	(*( CAN_EM0ODATA3_type *) 0xf0019ab0u)	/* Message Object 85 Data Register Low */
#define CAN_MODATAL86	(*( CAN_EM0ODATA3_type *) 0xf0019ad0u)	/* Message Object 86 Data Register Low */
#define CAN_MODATAL87	(*( CAN_EM0ODATA3_type *) 0xf0019af0u)	/* Message Object 87 Data Register Low */
#define CAN_MODATAL88	(*( CAN_EM0ODATA3_type *) 0xf0019b10u)	/* Message Object 88 Data Register Low */
#define CAN_MODATAL89	(*( CAN_EM0ODATA3_type *) 0xf0019b30u)	/* Message Object 89 Data Register Low */
#define CAN_MODATAL9	(*( CAN_EM0ODATA3_type *) 0xf0019130u)	/* Message Object 9 Data Register Low */
#define CAN_MODATAL90	(*( CAN_EM0ODATA3_type *) 0xf0019b50u)	/* Message Object 90 Data Register Low */
#define CAN_MODATAL91	(*( CAN_EM0ODATA3_type *) 0xf0019b70u)	/* Message Object 91 Data Register Low */
#define CAN_MODATAL92	(*( CAN_EM0ODATA3_type *) 0xf0019b90u)	/* Message Object 92 Data Register Low */
#define CAN_MODATAL93	(*( CAN_EM0ODATA3_type *) 0xf0019bb0u)	/* Message Object 93 Data Register Low */
#define CAN_MODATAL94	(*( CAN_EM0ODATA3_type *) 0xf0019bd0u)	/* Message Object 94 Data Register Low */
#define CAN_MODATAL95	(*( CAN_EM0ODATA3_type *) 0xf0019bf0u)	/* Message Object 95 Data Register Low */
#define CAN_MODATAL96	(*( CAN_EM0ODATA3_type *) 0xf0019c10u)	/* Message Object 96 Data Register Low */
#define CAN_MODATAL97	(*( CAN_EM0ODATA3_type *) 0xf0019c30u)	/* Message Object 97 Data Register Low */
#define CAN_MODATAL98	(*( CAN_EM0ODATA3_type *) 0xf0019c50u)	/* Message Object 98 Data Register Low */
#define CAN_MODATAL99	(*( CAN_EM0ODATA3_type *) 0xf0019c70u)	/* Message Object 99 Data Register Low */

typedef volatile union
{
	struct
	{ 
		unsigned int STEP           : 10;	/* Step Value */
		unsigned int                : 4;
		unsigned int DM             : 2;	/* Divider Mode */
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} CAN_FDR_type;
#define CAN_FDR	(*( CAN_FDR_type *) 0xf001800cu)	/* CAN Fractional Divider Register */

typedef volatile union
{
	struct
	{ 
		unsigned int FBRP           : 6;	/* Fast Baud Rate Prescaler */
		unsigned int FSJW           : 2;	/* Fast (Re) Synchronization Jump Width */
		unsigned int FTSEG1         : 4;	/* Fast Time Segment Before Sample Point */
		unsigned int FTSEG2         : 3;	/* Fast Time Segment After Sample Point */
		unsigned int                : 17;
	} B;
	int I;
	unsigned int U;

} CAN_FNBTR0_type;
#define CAN_FNBTR0	(*( CAN_FNBTR0_type *) 0xf0018238u)	/* Fast Node 0 Bit Timing Register */
#define CAN_FNBTR1	(*( CAN_FNBTR0_type *) 0xf0018338u)	/* Fast Node 1 Bit Timing Register */
#define CAN_FNBTR2	(*( CAN_FNBTR0_type *) 0xf0018438u)	/* Fast Node 2 Bit Timing Register */
#define CAN_FNBTR3	(*( CAN_FNBTR0_type *) 0xf0018538u)	/* Fast Node 3 Bit Timing Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int MOD_REV        : 8;	/* Module Revision Number */
		/* const */ unsigned int MOD_TYPE       : 8;	/* Module Type */
		/* const */ unsigned int MOD_NUMBER     : 16;	/* Module Number Value */
	} B;
	int I;
	unsigned int U;

} CAN_ID_type;
#define CAN_ID	(*( CAN_ID_type *) 0xf0018008u)	/* Module Identification Register */

typedef volatile union
{
	struct
	{ 
		unsigned int RST            : 1;	/* Kernel Reset */
		unsigned int RSTSTAT        : 1;	/* Kernel Reset Status */
		unsigned int                : 30;
	} B;
	int I;
	unsigned int U;

} CAN_KRST0_type;
#define CAN_KRST0	(*( CAN_KRST0_type *) 0xf00180f4u)	/* Kernel Reset Register 0 */

typedef volatile union
{
	struct
	{ 
		unsigned int RST            : 1;	/* Kernel Reset */
		unsigned int                : 31;
	} B;
	int I;
	unsigned int U;

} CAN_KRST1_type;
#define CAN_KRST1	(*( CAN_KRST1_type *) 0xf00180f0u)	/* Kernel Reset Register 1 */

typedef volatile union
{
	struct
	{ 
		unsigned int CLR            : 1;	/* Kernel Reset Status Clear */
		unsigned int                : 31;
	} B;
	int I;
	unsigned int U;

} CAN_KRSTCLR_type;
#define CAN_KRSTCLR	(*( CAN_KRSTCLR_type *) 0xf00180ecu)	/* Kernel Reset Status Clear Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int BEGIN          : 8;	/* List Begin */
		/* const */ unsigned int END            : 8;	/* List End */
		/* const */ unsigned int SIZE           : 8;	/* List Size */
		/* const */ unsigned int EMPTY          : 1;	/* List Empty Indication */
		/* const */ unsigned int                : 7;
	} B;
	int I;
	unsigned int U;

} CAN_LIST0_type;
#define CAN_LIST0	(*( CAN_LIST0_type *) 0xf0018100u)	/* List Register 0 */
#define CAN_LIST1	(*( CAN_LIST0_type *) 0xf0018104u)	/* List Register 1 */
#define CAN_LIST10	(*( CAN_LIST0_type *) 0xf0018128u)	/* List Register 10 */
#define CAN_LIST11	(*( CAN_LIST0_type *) 0xf001812cu)	/* List Register 11 */
#define CAN_LIST12	(*( CAN_LIST0_type *) 0xf0018130u)	/* List Register 12 */
#define CAN_LIST13	(*( CAN_LIST0_type *) 0xf0018134u)	/* List Register 13 */
#define CAN_LIST14	(*( CAN_LIST0_type *) 0xf0018138u)	/* List Register 14 */
#define CAN_LIST15	(*( CAN_LIST0_type *) 0xf001813cu)	/* List Register 15 */
#define CAN_LIST2	(*( CAN_LIST0_type *) 0xf0018108u)	/* List Register 2 */
#define CAN_LIST3	(*( CAN_LIST0_type *) 0xf001810cu)	/* List Register 3 */
#define CAN_LIST4	(*( CAN_LIST0_type *) 0xf0018110u)	/* List Register 4 */
#define CAN_LIST5	(*( CAN_LIST0_type *) 0xf0018114u)	/* List Register 5 */
#define CAN_LIST6	(*( CAN_LIST0_type *) 0xf0018118u)	/* List Register 6 */
#define CAN_LIST7	(*( CAN_LIST0_type *) 0xf001811cu)	/* List Register 7 */
#define CAN_LIST8	(*( CAN_LIST0_type *) 0xf0018120u)	/* List Register 8 */
#define CAN_LIST9	(*( CAN_LIST0_type *) 0xf0018124u)	/* List Register 9 */

typedef volatile union
{
	struct
	{ 
		unsigned int CLKSEL         : 4;	/* Baud Rate Logic Clock Select */
		unsigned int                : 8;
		unsigned int MPSEL          : 4;	/* Message Pending Selector */
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} CAN_MCR_type;
#define CAN_MCR	(*( CAN_MCR_type *) 0xf00181c8u)	/* Module Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int TH             : 16;	/* Threshold */
		unsigned int INP            : 4;	/* Interrupt Node Pointer */
		unsigned int NODE           : 3;	/* Node */
		unsigned int                : 1;
		unsigned int ANYED          : 1;	/* Any Edge */
		unsigned int CAPEIE         : 1;	/* Capture Event Interrupt Enable */
		unsigned int                : 1;
		unsigned int DEPTH          : 3;	/* Digital Glitch Filter Depth */
		unsigned int SOF            : 1;	/* Start Of Frame */
		unsigned int                : 1;
	} B;
	int I;
	unsigned int U;

} CAN_MECR_type;
#define CAN_MECR	(*( CAN_MECR_type *) 0xf00181d0u)	/* Measure Control Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int CAPT           : 16;	/* Captured Timer */
		/* const */ unsigned int CAPRED         : 1;	/* Captured Rising Edge */
		unsigned int CAPE           : 1;	/* Capture Event */
		unsigned int                : 14;
	} B;
	int I;
	unsigned int U;

} CAN_MESTAT_type;
#define CAN_MESTAT	(*( CAN_MESTAT_type *) 0xf00181d4u)	/* Measure Status Register */

typedef volatile union
{
	struct
	{ 
		unsigned int IT             : 16;	/* Interrupt Trigger */
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} CAN_MITR_type;
#define CAN_MITR	(*( CAN_MITR_type *) 0xf00181ccu)	/* Module Interrupt Trigger Register */

typedef volatile union
{
	struct
	{ 
		unsigned int AM             : 29;	/* Acceptance Mask for Message Identifier */
		unsigned int MIDE           : 1;	/* Acceptance Mask Bit for Message IDE Bit */
		unsigned int                : 2;
	} B;
	int I;
	unsigned int U;

} CAN_MOAMR0_type;
#define CAN_MOAMR0	(*( CAN_MOAMR0_type *) 0xf001900cu)	/* Message Object 0 Acceptance Mask Register */
#define CAN_MOAMR1	(*( CAN_MOAMR0_type *) 0xf001902cu)	/* Message Object 1 Acceptance Mask Register */
#define CAN_MOAMR10	(*( CAN_MOAMR0_type *) 0xf001914cu)	/* Message Object 10 Acceptance Mask Register */
#define CAN_MOAMR100	(*( CAN_MOAMR0_type *) 0xf0019c8cu)	/* Message Object 100 Acceptance Mask Register */
#define CAN_MOAMR101	(*( CAN_MOAMR0_type *) 0xf0019cacu)	/* Message Object 101 Acceptance Mask Register */
#define CAN_MOAMR102	(*( CAN_MOAMR0_type *) 0xf0019cccu)	/* Message Object 102 Acceptance Mask Register */
#define CAN_MOAMR103	(*( CAN_MOAMR0_type *) 0xf0019cecu)	/* Message Object 103 Acceptance Mask Register */
#define CAN_MOAMR104	(*( CAN_MOAMR0_type *) 0xf0019d0cu)	/* Message Object 104 Acceptance Mask Register */
#define CAN_MOAMR105	(*( CAN_MOAMR0_type *) 0xf0019d2cu)	/* Message Object 105 Acceptance Mask Register */
#define CAN_MOAMR106	(*( CAN_MOAMR0_type *) 0xf0019d4cu)	/* Message Object 106 Acceptance Mask Register */
#define CAN_MOAMR107	(*( CAN_MOAMR0_type *) 0xf0019d6cu)	/* Message Object 107 Acceptance Mask Register */
#define CAN_MOAMR108	(*( CAN_MOAMR0_type *) 0xf0019d8cu)	/* Message Object 108 Acceptance Mask Register */
#define CAN_MOAMR109	(*( CAN_MOAMR0_type *) 0xf0019dacu)	/* Message Object 109 Acceptance Mask Register */
#define CAN_MOAMR11	(*( CAN_MOAMR0_type *) 0xf001916cu)	/* Message Object 11 Acceptance Mask Register */
#define CAN_MOAMR110	(*( CAN_MOAMR0_type *) 0xf0019dccu)	/* Message Object 110 Acceptance Mask Register */
#define CAN_MOAMR111	(*( CAN_MOAMR0_type *) 0xf0019decu)	/* Message Object 111 Acceptance Mask Register */
#define CAN_MOAMR112	(*( CAN_MOAMR0_type *) 0xf0019e0cu)	/* Message Object 112 Acceptance Mask Register */
#define CAN_MOAMR113	(*( CAN_MOAMR0_type *) 0xf0019e2cu)	/* Message Object 113 Acceptance Mask Register */
#define CAN_MOAMR114	(*( CAN_MOAMR0_type *) 0xf0019e4cu)	/* Message Object 114 Acceptance Mask Register */
#define CAN_MOAMR115	(*( CAN_MOAMR0_type *) 0xf0019e6cu)	/* Message Object 115 Acceptance Mask Register */
#define CAN_MOAMR116	(*( CAN_MOAMR0_type *) 0xf0019e8cu)	/* Message Object 116 Acceptance Mask Register */
#define CAN_MOAMR117	(*( CAN_MOAMR0_type *) 0xf0019eacu)	/* Message Object 117 Acceptance Mask Register */
#define CAN_MOAMR118	(*( CAN_MOAMR0_type *) 0xf0019eccu)	/* Message Object 118 Acceptance Mask Register */
#define CAN_MOAMR119	(*( CAN_MOAMR0_type *) 0xf0019eecu)	/* Message Object 119 Acceptance Mask Register */
#define CAN_MOAMR12	(*( CAN_MOAMR0_type *) 0xf001918cu)	/* Message Object 12 Acceptance Mask Register */
#define CAN_MOAMR120	(*( CAN_MOAMR0_type *) 0xf0019f0cu)	/* Message Object 120 Acceptance Mask Register */
#define CAN_MOAMR121	(*( CAN_MOAMR0_type *) 0xf0019f2cu)	/* Message Object 121 Acceptance Mask Register */
#define CAN_MOAMR122	(*( CAN_MOAMR0_type *) 0xf0019f4cu)	/* Message Object 122 Acceptance Mask Register */
#define CAN_MOAMR123	(*( CAN_MOAMR0_type *) 0xf0019f6cu)	/* Message Object 123 Acceptance Mask Register */
#define CAN_MOAMR124	(*( CAN_MOAMR0_type *) 0xf0019f8cu)	/* Message Object 124 Acceptance Mask Register */
#define CAN_MOAMR125	(*( CAN_MOAMR0_type *) 0xf0019facu)	/* Message Object 125 Acceptance Mask Register */
#define CAN_MOAMR126	(*( CAN_MOAMR0_type *) 0xf0019fccu)	/* Message Object 126 Acceptance Mask Register */
#define CAN_MOAMR127	(*( CAN_MOAMR0_type *) 0xf0019fecu)	/* Message Object 127 Acceptance Mask Register */
#define CAN_MOAMR128	(*( CAN_MOAMR0_type *) 0xf001a00cu)	/* Message Object 128 Acceptance Mask Register */
#define CAN_MOAMR129	(*( CAN_MOAMR0_type *) 0xf001a02cu)	/* Message Object 129 Acceptance Mask Register */
#define CAN_MOAMR13	(*( CAN_MOAMR0_type *) 0xf00191acu)	/* Message Object 13 Acceptance Mask Register */
#define CAN_MOAMR130	(*( CAN_MOAMR0_type *) 0xf001a04cu)	/* Message Object 130 Acceptance Mask Register */
#define CAN_MOAMR131	(*( CAN_MOAMR0_type *) 0xf001a06cu)	/* Message Object 131 Acceptance Mask Register */
#define CAN_MOAMR132	(*( CAN_MOAMR0_type *) 0xf001a08cu)	/* Message Object 132 Acceptance Mask Register */
#define CAN_MOAMR133	(*( CAN_MOAMR0_type *) 0xf001a0acu)	/* Message Object 133 Acceptance Mask Register */
#define CAN_MOAMR134	(*( CAN_MOAMR0_type *) 0xf001a0ccu)	/* Message Object 134 Acceptance Mask Register */
#define CAN_MOAMR135	(*( CAN_MOAMR0_type *) 0xf001a0ecu)	/* Message Object 135 Acceptance Mask Register */
#define CAN_MOAMR136	(*( CAN_MOAMR0_type *) 0xf001a10cu)	/* Message Object 136 Acceptance Mask Register */
#define CAN_MOAMR137	(*( CAN_MOAMR0_type *) 0xf001a12cu)	/* Message Object 137 Acceptance Mask Register */
#define CAN_MOAMR138	(*( CAN_MOAMR0_type *) 0xf001a14cu)	/* Message Object 138 Acceptance Mask Register */
#define CAN_MOAMR139	(*( CAN_MOAMR0_type *) 0xf001a16cu)	/* Message Object 139 Acceptance Mask Register */
#define CAN_MOAMR14	(*( CAN_MOAMR0_type *) 0xf00191ccu)	/* Message Object 14 Acceptance Mask Register */
#define CAN_MOAMR140	(*( CAN_MOAMR0_type *) 0xf001a18cu)	/* Message Object 140 Acceptance Mask Register */
#define CAN_MOAMR141	(*( CAN_MOAMR0_type *) 0xf001a1acu)	/* Message Object 141 Acceptance Mask Register */
#define CAN_MOAMR142	(*( CAN_MOAMR0_type *) 0xf001a1ccu)	/* Message Object 142 Acceptance Mask Register */
#define CAN_MOAMR143	(*( CAN_MOAMR0_type *) 0xf001a1ecu)	/* Message Object 143 Acceptance Mask Register */
#define CAN_MOAMR144	(*( CAN_MOAMR0_type *) 0xf001a20cu)	/* Message Object 144 Acceptance Mask Register */
#define CAN_MOAMR145	(*( CAN_MOAMR0_type *) 0xf001a22cu)	/* Message Object 145 Acceptance Mask Register */
#define CAN_MOAMR146	(*( CAN_MOAMR0_type *) 0xf001a24cu)	/* Message Object 146 Acceptance Mask Register */
#define CAN_MOAMR147	(*( CAN_MOAMR0_type *) 0xf001a26cu)	/* Message Object 147 Acceptance Mask Register */
#define CAN_MOAMR148	(*( CAN_MOAMR0_type *) 0xf001a28cu)	/* Message Object 148 Acceptance Mask Register */
#define CAN_MOAMR149	(*( CAN_MOAMR0_type *) 0xf001a2acu)	/* Message Object 149 Acceptance Mask Register */
#define CAN_MOAMR15	(*( CAN_MOAMR0_type *) 0xf00191ecu)	/* Message Object 15 Acceptance Mask Register */
#define CAN_MOAMR150	(*( CAN_MOAMR0_type *) 0xf001a2ccu)	/* Message Object 150 Acceptance Mask Register */
#define CAN_MOAMR151	(*( CAN_MOAMR0_type *) 0xf001a2ecu)	/* Message Object 151 Acceptance Mask Register */
#define CAN_MOAMR152	(*( CAN_MOAMR0_type *) 0xf001a30cu)	/* Message Object 152 Acceptance Mask Register */
#define CAN_MOAMR153	(*( CAN_MOAMR0_type *) 0xf001a32cu)	/* Message Object 153 Acceptance Mask Register */
#define CAN_MOAMR154	(*( CAN_MOAMR0_type *) 0xf001a34cu)	/* Message Object 154 Acceptance Mask Register */
#define CAN_MOAMR155	(*( CAN_MOAMR0_type *) 0xf001a36cu)	/* Message Object 155 Acceptance Mask Register */
#define CAN_MOAMR156	(*( CAN_MOAMR0_type *) 0xf001a38cu)	/* Message Object 156 Acceptance Mask Register */
#define CAN_MOAMR157	(*( CAN_MOAMR0_type *) 0xf001a3acu)	/* Message Object 157 Acceptance Mask Register */
#define CAN_MOAMR158	(*( CAN_MOAMR0_type *) 0xf001a3ccu)	/* Message Object 158 Acceptance Mask Register */
#define CAN_MOAMR159	(*( CAN_MOAMR0_type *) 0xf001a3ecu)	/* Message Object 159 Acceptance Mask Register */
#define CAN_MOAMR16	(*( CAN_MOAMR0_type *) 0xf001920cu)	/* Message Object 16 Acceptance Mask Register */
#define CAN_MOAMR160	(*( CAN_MOAMR0_type *) 0xf001a40cu)	/* Message Object 160 Acceptance Mask Register */
#define CAN_MOAMR161	(*( CAN_MOAMR0_type *) 0xf001a42cu)	/* Message Object 161 Acceptance Mask Register */
#define CAN_MOAMR162	(*( CAN_MOAMR0_type *) 0xf001a44cu)	/* Message Object 162 Acceptance Mask Register */
#define CAN_MOAMR163	(*( CAN_MOAMR0_type *) 0xf001a46cu)	/* Message Object 163 Acceptance Mask Register */
#define CAN_MOAMR164	(*( CAN_MOAMR0_type *) 0xf001a48cu)	/* Message Object 164 Acceptance Mask Register */
#define CAN_MOAMR165	(*( CAN_MOAMR0_type *) 0xf001a4acu)	/* Message Object 165 Acceptance Mask Register */
#define CAN_MOAMR166	(*( CAN_MOAMR0_type *) 0xf001a4ccu)	/* Message Object 166 Acceptance Mask Register */
#define CAN_MOAMR167	(*( CAN_MOAMR0_type *) 0xf001a4ecu)	/* Message Object 167 Acceptance Mask Register */
#define CAN_MOAMR168	(*( CAN_MOAMR0_type *) 0xf001a50cu)	/* Message Object 168 Acceptance Mask Register */
#define CAN_MOAMR169	(*( CAN_MOAMR0_type *) 0xf001a52cu)	/* Message Object 169 Acceptance Mask Register */
#define CAN_MOAMR17	(*( CAN_MOAMR0_type *) 0xf001922cu)	/* Message Object 17 Acceptance Mask Register */
#define CAN_MOAMR170	(*( CAN_MOAMR0_type *) 0xf001a54cu)	/* Message Object 170 Acceptance Mask Register */
#define CAN_MOAMR171	(*( CAN_MOAMR0_type *) 0xf001a56cu)	/* Message Object 171 Acceptance Mask Register */
#define CAN_MOAMR172	(*( CAN_MOAMR0_type *) 0xf001a58cu)	/* Message Object 172 Acceptance Mask Register */
#define CAN_MOAMR173	(*( CAN_MOAMR0_type *) 0xf001a5acu)	/* Message Object 173 Acceptance Mask Register */
#define CAN_MOAMR174	(*( CAN_MOAMR0_type *) 0xf001a5ccu)	/* Message Object 174 Acceptance Mask Register */
#define CAN_MOAMR175	(*( CAN_MOAMR0_type *) 0xf001a5ecu)	/* Message Object 175 Acceptance Mask Register */
#define CAN_MOAMR176	(*( CAN_MOAMR0_type *) 0xf001a60cu)	/* Message Object 176 Acceptance Mask Register */
#define CAN_MOAMR177	(*( CAN_MOAMR0_type *) 0xf001a62cu)	/* Message Object 177 Acceptance Mask Register */
#define CAN_MOAMR178	(*( CAN_MOAMR0_type *) 0xf001a64cu)	/* Message Object 178 Acceptance Mask Register */
#define CAN_MOAMR179	(*( CAN_MOAMR0_type *) 0xf001a66cu)	/* Message Object 179 Acceptance Mask Register */
#define CAN_MOAMR18	(*( CAN_MOAMR0_type *) 0xf001924cu)	/* Message Object 18 Acceptance Mask Register */
#define CAN_MOAMR180	(*( CAN_MOAMR0_type *) 0xf001a68cu)	/* Message Object 180 Acceptance Mask Register */
#define CAN_MOAMR181	(*( CAN_MOAMR0_type *) 0xf001a6acu)	/* Message Object 181 Acceptance Mask Register */
#define CAN_MOAMR182	(*( CAN_MOAMR0_type *) 0xf001a6ccu)	/* Message Object 182 Acceptance Mask Register */
#define CAN_MOAMR183	(*( CAN_MOAMR0_type *) 0xf001a6ecu)	/* Message Object 183 Acceptance Mask Register */
#define CAN_MOAMR184	(*( CAN_MOAMR0_type *) 0xf001a70cu)	/* Message Object 184 Acceptance Mask Register */
#define CAN_MOAMR185	(*( CAN_MOAMR0_type *) 0xf001a72cu)	/* Message Object 185 Acceptance Mask Register */
#define CAN_MOAMR186	(*( CAN_MOAMR0_type *) 0xf001a74cu)	/* Message Object 186 Acceptance Mask Register */
#define CAN_MOAMR187	(*( CAN_MOAMR0_type *) 0xf001a76cu)	/* Message Object 187 Acceptance Mask Register */
#define CAN_MOAMR188	(*( CAN_MOAMR0_type *) 0xf001a78cu)	/* Message Object 188 Acceptance Mask Register */
#define CAN_MOAMR189	(*( CAN_MOAMR0_type *) 0xf001a7acu)	/* Message Object 189 Acceptance Mask Register */
#define CAN_MOAMR19	(*( CAN_MOAMR0_type *) 0xf001926cu)	/* Message Object 19 Acceptance Mask Register */
#define CAN_MOAMR190	(*( CAN_MOAMR0_type *) 0xf001a7ccu)	/* Message Object 190 Acceptance Mask Register */
#define CAN_MOAMR191	(*( CAN_MOAMR0_type *) 0xf001a7ecu)	/* Message Object 191 Acceptance Mask Register */
#define CAN_MOAMR192	(*( CAN_MOAMR0_type *) 0xf001a80cu)	/* Message Object 192 Acceptance Mask Register */
#define CAN_MOAMR193	(*( CAN_MOAMR0_type *) 0xf001a82cu)	/* Message Object 193 Acceptance Mask Register */
#define CAN_MOAMR194	(*( CAN_MOAMR0_type *) 0xf001a84cu)	/* Message Object 194 Acceptance Mask Register */
#define CAN_MOAMR195	(*( CAN_MOAMR0_type *) 0xf001a86cu)	/* Message Object 195 Acceptance Mask Register */
#define CAN_MOAMR196	(*( CAN_MOAMR0_type *) 0xf001a88cu)	/* Message Object 196 Acceptance Mask Register */
#define CAN_MOAMR197	(*( CAN_MOAMR0_type *) 0xf001a8acu)	/* Message Object 197 Acceptance Mask Register */
#define CAN_MOAMR198	(*( CAN_MOAMR0_type *) 0xf001a8ccu)	/* Message Object 198 Acceptance Mask Register */
#define CAN_MOAMR199	(*( CAN_MOAMR0_type *) 0xf001a8ecu)	/* Message Object 199 Acceptance Mask Register */
#define CAN_MOAMR2	(*( CAN_MOAMR0_type *) 0xf001904cu)	/* Message Object 2 Acceptance Mask Register */
#define CAN_MOAMR20	(*( CAN_MOAMR0_type *) 0xf001928cu)	/* Message Object 20 Acceptance Mask Register */
#define CAN_MOAMR200	(*( CAN_MOAMR0_type *) 0xf001a90cu)	/* Message Object 200 Acceptance Mask Register */
#define CAN_MOAMR201	(*( CAN_MOAMR0_type *) 0xf001a92cu)	/* Message Object 201 Acceptance Mask Register */
#define CAN_MOAMR202	(*( CAN_MOAMR0_type *) 0xf001a94cu)	/* Message Object 202 Acceptance Mask Register */
#define CAN_MOAMR203	(*( CAN_MOAMR0_type *) 0xf001a96cu)	/* Message Object 203 Acceptance Mask Register */
#define CAN_MOAMR204	(*( CAN_MOAMR0_type *) 0xf001a98cu)	/* Message Object 204 Acceptance Mask Register */
#define CAN_MOAMR205	(*( CAN_MOAMR0_type *) 0xf001a9acu)	/* Message Object 205 Acceptance Mask Register */
#define CAN_MOAMR206	(*( CAN_MOAMR0_type *) 0xf001a9ccu)	/* Message Object 206 Acceptance Mask Register */
#define CAN_MOAMR207	(*( CAN_MOAMR0_type *) 0xf001a9ecu)	/* Message Object 207 Acceptance Mask Register */
#define CAN_MOAMR208	(*( CAN_MOAMR0_type *) 0xf001aa0cu)	/* Message Object 208 Acceptance Mask Register */
#define CAN_MOAMR209	(*( CAN_MOAMR0_type *) 0xf001aa2cu)	/* Message Object 209 Acceptance Mask Register */
#define CAN_MOAMR21	(*( CAN_MOAMR0_type *) 0xf00192acu)	/* Message Object 21 Acceptance Mask Register */
#define CAN_MOAMR210	(*( CAN_MOAMR0_type *) 0xf001aa4cu)	/* Message Object 210 Acceptance Mask Register */
#define CAN_MOAMR211	(*( CAN_MOAMR0_type *) 0xf001aa6cu)	/* Message Object 211 Acceptance Mask Register */
#define CAN_MOAMR212	(*( CAN_MOAMR0_type *) 0xf001aa8cu)	/* Message Object 212 Acceptance Mask Register */
#define CAN_MOAMR213	(*( CAN_MOAMR0_type *) 0xf001aaacu)	/* Message Object 213 Acceptance Mask Register */
#define CAN_MOAMR214	(*( CAN_MOAMR0_type *) 0xf001aaccu)	/* Message Object 214 Acceptance Mask Register */
#define CAN_MOAMR215	(*( CAN_MOAMR0_type *) 0xf001aaecu)	/* Message Object 215 Acceptance Mask Register */
#define CAN_MOAMR216	(*( CAN_MOAMR0_type *) 0xf001ab0cu)	/* Message Object 216 Acceptance Mask Register */
#define CAN_MOAMR217	(*( CAN_MOAMR0_type *) 0xf001ab2cu)	/* Message Object 217 Acceptance Mask Register */
#define CAN_MOAMR218	(*( CAN_MOAMR0_type *) 0xf001ab4cu)	/* Message Object 218 Acceptance Mask Register */
#define CAN_MOAMR219	(*( CAN_MOAMR0_type *) 0xf001ab6cu)	/* Message Object 219 Acceptance Mask Register */
#define CAN_MOAMR22	(*( CAN_MOAMR0_type *) 0xf00192ccu)	/* Message Object 22 Acceptance Mask Register */
#define CAN_MOAMR220	(*( CAN_MOAMR0_type *) 0xf001ab8cu)	/* Message Object 220 Acceptance Mask Register */
#define CAN_MOAMR221	(*( CAN_MOAMR0_type *) 0xf001abacu)	/* Message Object 221 Acceptance Mask Register */
#define CAN_MOAMR222	(*( CAN_MOAMR0_type *) 0xf001abccu)	/* Message Object 222 Acceptance Mask Register */
#define CAN_MOAMR223	(*( CAN_MOAMR0_type *) 0xf001abecu)	/* Message Object 223 Acceptance Mask Register */
#define CAN_MOAMR224	(*( CAN_MOAMR0_type *) 0xf001ac0cu)	/* Message Object 224 Acceptance Mask Register */
#define CAN_MOAMR225	(*( CAN_MOAMR0_type *) 0xf001ac2cu)	/* Message Object 225 Acceptance Mask Register */
#define CAN_MOAMR226	(*( CAN_MOAMR0_type *) 0xf001ac4cu)	/* Message Object 226 Acceptance Mask Register */
#define CAN_MOAMR227	(*( CAN_MOAMR0_type *) 0xf001ac6cu)	/* Message Object 227 Acceptance Mask Register */
#define CAN_MOAMR228	(*( CAN_MOAMR0_type *) 0xf001ac8cu)	/* Message Object 228 Acceptance Mask Register */
#define CAN_MOAMR229	(*( CAN_MOAMR0_type *) 0xf001acacu)	/* Message Object 229 Acceptance Mask Register */
#define CAN_MOAMR23	(*( CAN_MOAMR0_type *) 0xf00192ecu)	/* Message Object 23 Acceptance Mask Register */
#define CAN_MOAMR230	(*( CAN_MOAMR0_type *) 0xf001acccu)	/* Message Object 230 Acceptance Mask Register */
#define CAN_MOAMR231	(*( CAN_MOAMR0_type *) 0xf001acecu)	/* Message Object 231 Acceptance Mask Register */
#define CAN_MOAMR232	(*( CAN_MOAMR0_type *) 0xf001ad0cu)	/* Message Object 232 Acceptance Mask Register */
#define CAN_MOAMR233	(*( CAN_MOAMR0_type *) 0xf001ad2cu)	/* Message Object 233 Acceptance Mask Register */
#define CAN_MOAMR234	(*( CAN_MOAMR0_type *) 0xf001ad4cu)	/* Message Object 234 Acceptance Mask Register */
#define CAN_MOAMR235	(*( CAN_MOAMR0_type *) 0xf001ad6cu)	/* Message Object 235 Acceptance Mask Register */
#define CAN_MOAMR236	(*( CAN_MOAMR0_type *) 0xf001ad8cu)	/* Message Object 236 Acceptance Mask Register */
#define CAN_MOAMR237	(*( CAN_MOAMR0_type *) 0xf001adacu)	/* Message Object 237 Acceptance Mask Register */
#define CAN_MOAMR238	(*( CAN_MOAMR0_type *) 0xf001adccu)	/* Message Object 238 Acceptance Mask Register */
#define CAN_MOAMR239	(*( CAN_MOAMR0_type *) 0xf001adecu)	/* Message Object 239 Acceptance Mask Register */
#define CAN_MOAMR24	(*( CAN_MOAMR0_type *) 0xf001930cu)	/* Message Object 24 Acceptance Mask Register */
#define CAN_MOAMR240	(*( CAN_MOAMR0_type *) 0xf001ae0cu)	/* Message Object 240 Acceptance Mask Register */
#define CAN_MOAMR241	(*( CAN_MOAMR0_type *) 0xf001ae2cu)	/* Message Object 241 Acceptance Mask Register */
#define CAN_MOAMR242	(*( CAN_MOAMR0_type *) 0xf001ae4cu)	/* Message Object 242 Acceptance Mask Register */
#define CAN_MOAMR243	(*( CAN_MOAMR0_type *) 0xf001ae6cu)	/* Message Object 243 Acceptance Mask Register */
#define CAN_MOAMR244	(*( CAN_MOAMR0_type *) 0xf001ae8cu)	/* Message Object 244 Acceptance Mask Register */
#define CAN_MOAMR245	(*( CAN_MOAMR0_type *) 0xf001aeacu)	/* Message Object 245 Acceptance Mask Register */
#define CAN_MOAMR246	(*( CAN_MOAMR0_type *) 0xf001aeccu)	/* Message Object 246 Acceptance Mask Register */
#define CAN_MOAMR247	(*( CAN_MOAMR0_type *) 0xf001aeecu)	/* Message Object 247 Acceptance Mask Register */
#define CAN_MOAMR248	(*( CAN_MOAMR0_type *) 0xf001af0cu)	/* Message Object 248 Acceptance Mask Register */
#define CAN_MOAMR249	(*( CAN_MOAMR0_type *) 0xf001af2cu)	/* Message Object 249 Acceptance Mask Register */
#define CAN_MOAMR25	(*( CAN_MOAMR0_type *) 0xf001932cu)	/* Message Object 25 Acceptance Mask Register */
#define CAN_MOAMR250	(*( CAN_MOAMR0_type *) 0xf001af4cu)	/* Message Object 250 Acceptance Mask Register */
#define CAN_MOAMR251	(*( CAN_MOAMR0_type *) 0xf001af6cu)	/* Message Object 251 Acceptance Mask Register */
#define CAN_MOAMR252	(*( CAN_MOAMR0_type *) 0xf001af8cu)	/* Message Object 252 Acceptance Mask Register */
#define CAN_MOAMR253	(*( CAN_MOAMR0_type *) 0xf001afacu)	/* Message Object 253 Acceptance Mask Register */
#define CAN_MOAMR254	(*( CAN_MOAMR0_type *) 0xf001afccu)	/* Message Object 254 Acceptance Mask Register */
#define CAN_MOAMR255	(*( CAN_MOAMR0_type *) 0xf001afecu)	/* Message Object 255 Acceptance Mask Register */
#define CAN_MOAMR26	(*( CAN_MOAMR0_type *) 0xf001934cu)	/* Message Object 26 Acceptance Mask Register */
#define CAN_MOAMR27	(*( CAN_MOAMR0_type *) 0xf001936cu)	/* Message Object 27 Acceptance Mask Register */
#define CAN_MOAMR28	(*( CAN_MOAMR0_type *) 0xf001938cu)	/* Message Object 28 Acceptance Mask Register */
#define CAN_MOAMR29	(*( CAN_MOAMR0_type *) 0xf00193acu)	/* Message Object 29 Acceptance Mask Register */
#define CAN_MOAMR3	(*( CAN_MOAMR0_type *) 0xf001906cu)	/* Message Object 3 Acceptance Mask Register */
#define CAN_MOAMR30	(*( CAN_MOAMR0_type *) 0xf00193ccu)	/* Message Object 30 Acceptance Mask Register */
#define CAN_MOAMR31	(*( CAN_MOAMR0_type *) 0xf00193ecu)	/* Message Object 31 Acceptance Mask Register */
#define CAN_MOAMR32	(*( CAN_MOAMR0_type *) 0xf001940cu)	/* Message Object 32 Acceptance Mask Register */
#define CAN_MOAMR33	(*( CAN_MOAMR0_type *) 0xf001942cu)	/* Message Object 33 Acceptance Mask Register */
#define CAN_MOAMR34	(*( CAN_MOAMR0_type *) 0xf001944cu)	/* Message Object 34 Acceptance Mask Register */
#define CAN_MOAMR35	(*( CAN_MOAMR0_type *) 0xf001946cu)	/* Message Object 35 Acceptance Mask Register */
#define CAN_MOAMR36	(*( CAN_MOAMR0_type *) 0xf001948cu)	/* Message Object 36 Acceptance Mask Register */
#define CAN_MOAMR37	(*( CAN_MOAMR0_type *) 0xf00194acu)	/* Message Object 37 Acceptance Mask Register */
#define CAN_MOAMR38	(*( CAN_MOAMR0_type *) 0xf00194ccu)	/* Message Object 38 Acceptance Mask Register */
#define CAN_MOAMR39	(*( CAN_MOAMR0_type *) 0xf00194ecu)	/* Message Object 39 Acceptance Mask Register */
#define CAN_MOAMR4	(*( CAN_MOAMR0_type *) 0xf001908cu)	/* Message Object 4 Acceptance Mask Register */
#define CAN_MOAMR40	(*( CAN_MOAMR0_type *) 0xf001950cu)	/* Message Object 40 Acceptance Mask Register */
#define CAN_MOAMR41	(*( CAN_MOAMR0_type *) 0xf001952cu)	/* Message Object 41 Acceptance Mask Register */
#define CAN_MOAMR42	(*( CAN_MOAMR0_type *) 0xf001954cu)	/* Message Object 42 Acceptance Mask Register */
#define CAN_MOAMR43	(*( CAN_MOAMR0_type *) 0xf001956cu)	/* Message Object 43 Acceptance Mask Register */
#define CAN_MOAMR44	(*( CAN_MOAMR0_type *) 0xf001958cu)	/* Message Object 44 Acceptance Mask Register */
#define CAN_MOAMR45	(*( CAN_MOAMR0_type *) 0xf00195acu)	/* Message Object 45 Acceptance Mask Register */
#define CAN_MOAMR46	(*( CAN_MOAMR0_type *) 0xf00195ccu)	/* Message Object 46 Acceptance Mask Register */
#define CAN_MOAMR47	(*( CAN_MOAMR0_type *) 0xf00195ecu)	/* Message Object 47 Acceptance Mask Register */
#define CAN_MOAMR48	(*( CAN_MOAMR0_type *) 0xf001960cu)	/* Message Object 48 Acceptance Mask Register */
#define CAN_MOAMR49	(*( CAN_MOAMR0_type *) 0xf001962cu)	/* Message Object 49 Acceptance Mask Register */
#define CAN_MOAMR5	(*( CAN_MOAMR0_type *) 0xf00190acu)	/* Message Object 5 Acceptance Mask Register */
#define CAN_MOAMR50	(*( CAN_MOAMR0_type *) 0xf001964cu)	/* Message Object 50 Acceptance Mask Register */
#define CAN_MOAMR51	(*( CAN_MOAMR0_type *) 0xf001966cu)	/* Message Object 51 Acceptance Mask Register */
#define CAN_MOAMR52	(*( CAN_MOAMR0_type *) 0xf001968cu)	/* Message Object 52 Acceptance Mask Register */
#define CAN_MOAMR53	(*( CAN_MOAMR0_type *) 0xf00196acu)	/* Message Object 53 Acceptance Mask Register */
#define CAN_MOAMR54	(*( CAN_MOAMR0_type *) 0xf00196ccu)	/* Message Object 54 Acceptance Mask Register */
#define CAN_MOAMR55	(*( CAN_MOAMR0_type *) 0xf00196ecu)	/* Message Object 55 Acceptance Mask Register */
#define CAN_MOAMR56	(*( CAN_MOAMR0_type *) 0xf001970cu)	/* Message Object 56 Acceptance Mask Register */
#define CAN_MOAMR57	(*( CAN_MOAMR0_type *) 0xf001972cu)	/* Message Object 57 Acceptance Mask Register */
#define CAN_MOAMR58	(*( CAN_MOAMR0_type *) 0xf001974cu)	/* Message Object 58 Acceptance Mask Register */
#define CAN_MOAMR59	(*( CAN_MOAMR0_type *) 0xf001976cu)	/* Message Object 59 Acceptance Mask Register */
#define CAN_MOAMR6	(*( CAN_MOAMR0_type *) 0xf00190ccu)	/* Message Object 6 Acceptance Mask Register */
#define CAN_MOAMR60	(*( CAN_MOAMR0_type *) 0xf001978cu)	/* Message Object 60 Acceptance Mask Register */
#define CAN_MOAMR61	(*( CAN_MOAMR0_type *) 0xf00197acu)	/* Message Object 61 Acceptance Mask Register */
#define CAN_MOAMR62	(*( CAN_MOAMR0_type *) 0xf00197ccu)	/* Message Object 62 Acceptance Mask Register */
#define CAN_MOAMR63	(*( CAN_MOAMR0_type *) 0xf00197ecu)	/* Message Object 63 Acceptance Mask Register */
#define CAN_MOAMR64	(*( CAN_MOAMR0_type *) 0xf001980cu)	/* Message Object 64 Acceptance Mask Register */
#define CAN_MOAMR65	(*( CAN_MOAMR0_type *) 0xf001982cu)	/* Message Object 65 Acceptance Mask Register */
#define CAN_MOAMR66	(*( CAN_MOAMR0_type *) 0xf001984cu)	/* Message Object 66 Acceptance Mask Register */
#define CAN_MOAMR67	(*( CAN_MOAMR0_type *) 0xf001986cu)	/* Message Object 67 Acceptance Mask Register */
#define CAN_MOAMR68	(*( CAN_MOAMR0_type *) 0xf001988cu)	/* Message Object 68 Acceptance Mask Register */
#define CAN_MOAMR69	(*( CAN_MOAMR0_type *) 0xf00198acu)	/* Message Object 69 Acceptance Mask Register */
#define CAN_MOAMR7	(*( CAN_MOAMR0_type *) 0xf00190ecu)	/* Message Object 7 Acceptance Mask Register */
#define CAN_MOAMR70	(*( CAN_MOAMR0_type *) 0xf00198ccu)	/* Message Object 70 Acceptance Mask Register */
#define CAN_MOAMR71	(*( CAN_MOAMR0_type *) 0xf00198ecu)	/* Message Object 71 Acceptance Mask Register */
#define CAN_MOAMR72	(*( CAN_MOAMR0_type *) 0xf001990cu)	/* Message Object 72 Acceptance Mask Register */
#define CAN_MOAMR73	(*( CAN_MOAMR0_type *) 0xf001992cu)	/* Message Object 73 Acceptance Mask Register */
#define CAN_MOAMR74	(*( CAN_MOAMR0_type *) 0xf001994cu)	/* Message Object 74 Acceptance Mask Register */
#define CAN_MOAMR75	(*( CAN_MOAMR0_type *) 0xf001996cu)	/* Message Object 75 Acceptance Mask Register */
#define CAN_MOAMR76	(*( CAN_MOAMR0_type *) 0xf001998cu)	/* Message Object 76 Acceptance Mask Register */
#define CAN_MOAMR77	(*( CAN_MOAMR0_type *) 0xf00199acu)	/* Message Object 77 Acceptance Mask Register */
#define CAN_MOAMR78	(*( CAN_MOAMR0_type *) 0xf00199ccu)	/* Message Object 78 Acceptance Mask Register */
#define CAN_MOAMR79	(*( CAN_MOAMR0_type *) 0xf00199ecu)	/* Message Object 79 Acceptance Mask Register */
#define CAN_MOAMR8	(*( CAN_MOAMR0_type *) 0xf001910cu)	/* Message Object 8 Acceptance Mask Register */
#define CAN_MOAMR80	(*( CAN_MOAMR0_type *) 0xf0019a0cu)	/* Message Object 80 Acceptance Mask Register */
#define CAN_MOAMR81	(*( CAN_MOAMR0_type *) 0xf0019a2cu)	/* Message Object 81 Acceptance Mask Register */
#define CAN_MOAMR82	(*( CAN_MOAMR0_type *) 0xf0019a4cu)	/* Message Object 82 Acceptance Mask Register */
#define CAN_MOAMR83	(*( CAN_MOAMR0_type *) 0xf0019a6cu)	/* Message Object 83 Acceptance Mask Register */
#define CAN_MOAMR84	(*( CAN_MOAMR0_type *) 0xf0019a8cu)	/* Message Object 84 Acceptance Mask Register */
#define CAN_MOAMR85	(*( CAN_MOAMR0_type *) 0xf0019aacu)	/* Message Object 85 Acceptance Mask Register */
#define CAN_MOAMR86	(*( CAN_MOAMR0_type *) 0xf0019accu)	/* Message Object 86 Acceptance Mask Register */
#define CAN_MOAMR87	(*( CAN_MOAMR0_type *) 0xf0019aecu)	/* Message Object 87 Acceptance Mask Register */
#define CAN_MOAMR88	(*( CAN_MOAMR0_type *) 0xf0019b0cu)	/* Message Object 88 Acceptance Mask Register */
#define CAN_MOAMR89	(*( CAN_MOAMR0_type *) 0xf0019b2cu)	/* Message Object 89 Acceptance Mask Register */
#define CAN_MOAMR9	(*( CAN_MOAMR0_type *) 0xf001912cu)	/* Message Object 9 Acceptance Mask Register */
#define CAN_MOAMR90	(*( CAN_MOAMR0_type *) 0xf0019b4cu)	/* Message Object 90 Acceptance Mask Register */
#define CAN_MOAMR91	(*( CAN_MOAMR0_type *) 0xf0019b6cu)	/* Message Object 91 Acceptance Mask Register */
#define CAN_MOAMR92	(*( CAN_MOAMR0_type *) 0xf0019b8cu)	/* Message Object 92 Acceptance Mask Register */
#define CAN_MOAMR93	(*( CAN_MOAMR0_type *) 0xf0019bacu)	/* Message Object 93 Acceptance Mask Register */
#define CAN_MOAMR94	(*( CAN_MOAMR0_type *) 0xf0019bccu)	/* Message Object 94 Acceptance Mask Register */
#define CAN_MOAMR95	(*( CAN_MOAMR0_type *) 0xf0019becu)	/* Message Object 95 Acceptance Mask Register */
#define CAN_MOAMR96	(*( CAN_MOAMR0_type *) 0xf0019c0cu)	/* Message Object 96 Acceptance Mask Register */
#define CAN_MOAMR97	(*( CAN_MOAMR0_type *) 0xf0019c2cu)	/* Message Object 97 Acceptance Mask Register */
#define CAN_MOAMR98	(*( CAN_MOAMR0_type *) 0xf0019c4cu)	/* Message Object 98 Acceptance Mask Register */
#define CAN_MOAMR99	(*( CAN_MOAMR0_type *) 0xf0019c6cu)	/* Message Object 99 Acceptance Mask Register */

typedef volatile union
{
	struct
	{ 
		unsigned int ID             : 29;	/* CAN Identifier of Message Object n */
		unsigned int IDE            : 1;	/* Identifier Extension Bit of Message Object n */
		unsigned int PRI            : 2;	/* Priority Class */
	} B;
	int I;
	unsigned int U;

} CAN_MOAR0_type;
#define CAN_MOAR0	(*( CAN_MOAR0_type *) 0xf0019018u)	/* Message Object 0 Arbitration Register */
#define CAN_MOAR1	(*( CAN_MOAR0_type *) 0xf0019038u)	/* Message Object 1 Arbitration Register */
#define CAN_MOAR10	(*( CAN_MOAR0_type *) 0xf0019158u)	/* Message Object 10 Arbitration Register */
#define CAN_MOAR100	(*( CAN_MOAR0_type *) 0xf0019c98u)	/* Message Object 100 Arbitration Register */
#define CAN_MOAR101	(*( CAN_MOAR0_type *) 0xf0019cb8u)	/* Message Object 101 Arbitration Register */
#define CAN_MOAR102	(*( CAN_MOAR0_type *) 0xf0019cd8u)	/* Message Object 102 Arbitration Register */
#define CAN_MOAR103	(*( CAN_MOAR0_type *) 0xf0019cf8u)	/* Message Object 103 Arbitration Register */
#define CAN_MOAR104	(*( CAN_MOAR0_type *) 0xf0019d18u)	/* Message Object 104 Arbitration Register */
#define CAN_MOAR105	(*( CAN_MOAR0_type *) 0xf0019d38u)	/* Message Object 105 Arbitration Register */
#define CAN_MOAR106	(*( CAN_MOAR0_type *) 0xf0019d58u)	/* Message Object 106 Arbitration Register */
#define CAN_MOAR107	(*( CAN_MOAR0_type *) 0xf0019d78u)	/* Message Object 107 Arbitration Register */
#define CAN_MOAR108	(*( CAN_MOAR0_type *) 0xf0019d98u)	/* Message Object 108 Arbitration Register */
#define CAN_MOAR109	(*( CAN_MOAR0_type *) 0xf0019db8u)	/* Message Object 109 Arbitration Register */
#define CAN_MOAR11	(*( CAN_MOAR0_type *) 0xf0019178u)	/* Message Object 11 Arbitration Register */
#define CAN_MOAR110	(*( CAN_MOAR0_type *) 0xf0019dd8u)	/* Message Object 110 Arbitration Register */
#define CAN_MOAR111	(*( CAN_MOAR0_type *) 0xf0019df8u)	/* Message Object 111 Arbitration Register */
#define CAN_MOAR112	(*( CAN_MOAR0_type *) 0xf0019e18u)	/* Message Object 112 Arbitration Register */
#define CAN_MOAR113	(*( CAN_MOAR0_type *) 0xf0019e38u)	/* Message Object 113 Arbitration Register */
#define CAN_MOAR114	(*( CAN_MOAR0_type *) 0xf0019e58u)	/* Message Object 114 Arbitration Register */
#define CAN_MOAR115	(*( CAN_MOAR0_type *) 0xf0019e78u)	/* Message Object 115 Arbitration Register */
#define CAN_MOAR116	(*( CAN_MOAR0_type *) 0xf0019e98u)	/* Message Object 116 Arbitration Register */
#define CAN_MOAR117	(*( CAN_MOAR0_type *) 0xf0019eb8u)	/* Message Object 117 Arbitration Register */
#define CAN_MOAR118	(*( CAN_MOAR0_type *) 0xf0019ed8u)	/* Message Object 118 Arbitration Register */
#define CAN_MOAR119	(*( CAN_MOAR0_type *) 0xf0019ef8u)	/* Message Object 119 Arbitration Register */
#define CAN_MOAR12	(*( CAN_MOAR0_type *) 0xf0019198u)	/* Message Object 12 Arbitration Register */
#define CAN_MOAR120	(*( CAN_MOAR0_type *) 0xf0019f18u)	/* Message Object 120 Arbitration Register */
#define CAN_MOAR121	(*( CAN_MOAR0_type *) 0xf0019f38u)	/* Message Object 121 Arbitration Register */
#define CAN_MOAR122	(*( CAN_MOAR0_type *) 0xf0019f58u)	/* Message Object 122 Arbitration Register */
#define CAN_MOAR123	(*( CAN_MOAR0_type *) 0xf0019f78u)	/* Message Object 123 Arbitration Register */
#define CAN_MOAR124	(*( CAN_MOAR0_type *) 0xf0019f98u)	/* Message Object 124 Arbitration Register */
#define CAN_MOAR125	(*( CAN_MOAR0_type *) 0xf0019fb8u)	/* Message Object 125 Arbitration Register */
#define CAN_MOAR126	(*( CAN_MOAR0_type *) 0xf0019fd8u)	/* Message Object 126 Arbitration Register */
#define CAN_MOAR127	(*( CAN_MOAR0_type *) 0xf0019ff8u)	/* Message Object 127 Arbitration Register */
#define CAN_MOAR128	(*( CAN_MOAR0_type *) 0xf001a018u)	/* Message Object 128 Arbitration Register */
#define CAN_MOAR129	(*( CAN_MOAR0_type *) 0xf001a038u)	/* Message Object 129 Arbitration Register */
#define CAN_MOAR13	(*( CAN_MOAR0_type *) 0xf00191b8u)	/* Message Object 13 Arbitration Register */
#define CAN_MOAR130	(*( CAN_MOAR0_type *) 0xf001a058u)	/* Message Object 130 Arbitration Register */
#define CAN_MOAR131	(*( CAN_MOAR0_type *) 0xf001a078u)	/* Message Object 131 Arbitration Register */
#define CAN_MOAR132	(*( CAN_MOAR0_type *) 0xf001a098u)	/* Message Object 132 Arbitration Register */
#define CAN_MOAR133	(*( CAN_MOAR0_type *) 0xf001a0b8u)	/* Message Object 133 Arbitration Register */
#define CAN_MOAR134	(*( CAN_MOAR0_type *) 0xf001a0d8u)	/* Message Object 134 Arbitration Register */
#define CAN_MOAR135	(*( CAN_MOAR0_type *) 0xf001a0f8u)	/* Message Object 135 Arbitration Register */
#define CAN_MOAR136	(*( CAN_MOAR0_type *) 0xf001a118u)	/* Message Object 136 Arbitration Register */
#define CAN_MOAR137	(*( CAN_MOAR0_type *) 0xf001a138u)	/* Message Object 137 Arbitration Register */
#define CAN_MOAR138	(*( CAN_MOAR0_type *) 0xf001a158u)	/* Message Object 138 Arbitration Register */
#define CAN_MOAR139	(*( CAN_MOAR0_type *) 0xf001a178u)	/* Message Object 139 Arbitration Register */
#define CAN_MOAR14	(*( CAN_MOAR0_type *) 0xf00191d8u)	/* Message Object 14 Arbitration Register */
#define CAN_MOAR140	(*( CAN_MOAR0_type *) 0xf001a198u)	/* Message Object 140 Arbitration Register */
#define CAN_MOAR141	(*( CAN_MOAR0_type *) 0xf001a1b8u)	/* Message Object 141 Arbitration Register */
#define CAN_MOAR142	(*( CAN_MOAR0_type *) 0xf001a1d8u)	/* Message Object 142 Arbitration Register */
#define CAN_MOAR143	(*( CAN_MOAR0_type *) 0xf001a1f8u)	/* Message Object 143 Arbitration Register */
#define CAN_MOAR144	(*( CAN_MOAR0_type *) 0xf001a218u)	/* Message Object 144 Arbitration Register */
#define CAN_MOAR145	(*( CAN_MOAR0_type *) 0xf001a238u)	/* Message Object 145 Arbitration Register */
#define CAN_MOAR146	(*( CAN_MOAR0_type *) 0xf001a258u)	/* Message Object 146 Arbitration Register */
#define CAN_MOAR147	(*( CAN_MOAR0_type *) 0xf001a278u)	/* Message Object 147 Arbitration Register */
#define CAN_MOAR148	(*( CAN_MOAR0_type *) 0xf001a298u)	/* Message Object 148 Arbitration Register */
#define CAN_MOAR149	(*( CAN_MOAR0_type *) 0xf001a2b8u)	/* Message Object 149 Arbitration Register */
#define CAN_MOAR15	(*( CAN_MOAR0_type *) 0xf00191f8u)	/* Message Object 15 Arbitration Register */
#define CAN_MOAR150	(*( CAN_MOAR0_type *) 0xf001a2d8u)	/* Message Object 150 Arbitration Register */
#define CAN_MOAR151	(*( CAN_MOAR0_type *) 0xf001a2f8u)	/* Message Object 151 Arbitration Register */
#define CAN_MOAR152	(*( CAN_MOAR0_type *) 0xf001a318u)	/* Message Object 152 Arbitration Register */
#define CAN_MOAR153	(*( CAN_MOAR0_type *) 0xf001a338u)	/* Message Object 153 Arbitration Register */
#define CAN_MOAR154	(*( CAN_MOAR0_type *) 0xf001a358u)	/* Message Object 154 Arbitration Register */
#define CAN_MOAR155	(*( CAN_MOAR0_type *) 0xf001a378u)	/* Message Object 155 Arbitration Register */
#define CAN_MOAR156	(*( CAN_MOAR0_type *) 0xf001a398u)	/* Message Object 156 Arbitration Register */
#define CAN_MOAR157	(*( CAN_MOAR0_type *) 0xf001a3b8u)	/* Message Object 157 Arbitration Register */
#define CAN_MOAR158	(*( CAN_MOAR0_type *) 0xf001a3d8u)	/* Message Object 158 Arbitration Register */
#define CAN_MOAR159	(*( CAN_MOAR0_type *) 0xf001a3f8u)	/* Message Object 159 Arbitration Register */
#define CAN_MOAR16	(*( CAN_MOAR0_type *) 0xf0019218u)	/* Message Object 16 Arbitration Register */
#define CAN_MOAR160	(*( CAN_MOAR0_type *) 0xf001a418u)	/* Message Object 160 Arbitration Register */
#define CAN_MOAR161	(*( CAN_MOAR0_type *) 0xf001a438u)	/* Message Object 161 Arbitration Register */
#define CAN_MOAR162	(*( CAN_MOAR0_type *) 0xf001a458u)	/* Message Object 162 Arbitration Register */
#define CAN_MOAR163	(*( CAN_MOAR0_type *) 0xf001a478u)	/* Message Object 163 Arbitration Register */
#define CAN_MOAR164	(*( CAN_MOAR0_type *) 0xf001a498u)	/* Message Object 164 Arbitration Register */
#define CAN_MOAR165	(*( CAN_MOAR0_type *) 0xf001a4b8u)	/* Message Object 165 Arbitration Register */
#define CAN_MOAR166	(*( CAN_MOAR0_type *) 0xf001a4d8u)	/* Message Object 166 Arbitration Register */
#define CAN_MOAR167	(*( CAN_MOAR0_type *) 0xf001a4f8u)	/* Message Object 167 Arbitration Register */
#define CAN_MOAR168	(*( CAN_MOAR0_type *) 0xf001a518u)	/* Message Object 168 Arbitration Register */
#define CAN_MOAR169	(*( CAN_MOAR0_type *) 0xf001a538u)	/* Message Object 169 Arbitration Register */
#define CAN_MOAR17	(*( CAN_MOAR0_type *) 0xf0019238u)	/* Message Object 17 Arbitration Register */
#define CAN_MOAR170	(*( CAN_MOAR0_type *) 0xf001a558u)	/* Message Object 170 Arbitration Register */
#define CAN_MOAR171	(*( CAN_MOAR0_type *) 0xf001a578u)	/* Message Object 171 Arbitration Register */
#define CAN_MOAR172	(*( CAN_MOAR0_type *) 0xf001a598u)	/* Message Object 172 Arbitration Register */
#define CAN_MOAR173	(*( CAN_MOAR0_type *) 0xf001a5b8u)	/* Message Object 173 Arbitration Register */
#define CAN_MOAR174	(*( CAN_MOAR0_type *) 0xf001a5d8u)	/* Message Object 174 Arbitration Register */
#define CAN_MOAR175	(*( CAN_MOAR0_type *) 0xf001a5f8u)	/* Message Object 175 Arbitration Register */
#define CAN_MOAR176	(*( CAN_MOAR0_type *) 0xf001a618u)	/* Message Object 176 Arbitration Register */
#define CAN_MOAR177	(*( CAN_MOAR0_type *) 0xf001a638u)	/* Message Object 177 Arbitration Register */
#define CAN_MOAR178	(*( CAN_MOAR0_type *) 0xf001a658u)	/* Message Object 178 Arbitration Register */
#define CAN_MOAR179	(*( CAN_MOAR0_type *) 0xf001a678u)	/* Message Object 179 Arbitration Register */
#define CAN_MOAR18	(*( CAN_MOAR0_type *) 0xf0019258u)	/* Message Object 18 Arbitration Register */
#define CAN_MOAR180	(*( CAN_MOAR0_type *) 0xf001a698u)	/* Message Object 180 Arbitration Register */
#define CAN_MOAR181	(*( CAN_MOAR0_type *) 0xf001a6b8u)	/* Message Object 181 Arbitration Register */
#define CAN_MOAR182	(*( CAN_MOAR0_type *) 0xf001a6d8u)	/* Message Object 182 Arbitration Register */
#define CAN_MOAR183	(*( CAN_MOAR0_type *) 0xf001a6f8u)	/* Message Object 183 Arbitration Register */
#define CAN_MOAR184	(*( CAN_MOAR0_type *) 0xf001a718u)	/* Message Object 184 Arbitration Register */
#define CAN_MOAR185	(*( CAN_MOAR0_type *) 0xf001a738u)	/* Message Object 185 Arbitration Register */
#define CAN_MOAR186	(*( CAN_MOAR0_type *) 0xf001a758u)	/* Message Object 186 Arbitration Register */
#define CAN_MOAR187	(*( CAN_MOAR0_type *) 0xf001a778u)	/* Message Object 187 Arbitration Register */
#define CAN_MOAR188	(*( CAN_MOAR0_type *) 0xf001a798u)	/* Message Object 188 Arbitration Register */
#define CAN_MOAR189	(*( CAN_MOAR0_type *) 0xf001a7b8u)	/* Message Object 189 Arbitration Register */
#define CAN_MOAR19	(*( CAN_MOAR0_type *) 0xf0019278u)	/* Message Object 19 Arbitration Register */
#define CAN_MOAR190	(*( CAN_MOAR0_type *) 0xf001a7d8u)	/* Message Object 190 Arbitration Register */
#define CAN_MOAR191	(*( CAN_MOAR0_type *) 0xf001a7f8u)	/* Message Object 191 Arbitration Register */
#define CAN_MOAR192	(*( CAN_MOAR0_type *) 0xf001a818u)	/* Message Object 192 Arbitration Register */
#define CAN_MOAR193	(*( CAN_MOAR0_type *) 0xf001a838u)	/* Message Object 193 Arbitration Register */
#define CAN_MOAR194	(*( CAN_MOAR0_type *) 0xf001a858u)	/* Message Object 194 Arbitration Register */
#define CAN_MOAR195	(*( CAN_MOAR0_type *) 0xf001a878u)	/* Message Object 195 Arbitration Register */
#define CAN_MOAR196	(*( CAN_MOAR0_type *) 0xf001a898u)	/* Message Object 196 Arbitration Register */
#define CAN_MOAR197	(*( CAN_MOAR0_type *) 0xf001a8b8u)	/* Message Object 197 Arbitration Register */
#define CAN_MOAR198	(*( CAN_MOAR0_type *) 0xf001a8d8u)	/* Message Object 198 Arbitration Register */
#define CAN_MOAR199	(*( CAN_MOAR0_type *) 0xf001a8f8u)	/* Message Object 199 Arbitration Register */
#define CAN_MOAR2	(*( CAN_MOAR0_type *) 0xf0019058u)	/* Message Object 2 Arbitration Register */
#define CAN_MOAR20	(*( CAN_MOAR0_type *) 0xf0019298u)	/* Message Object 20 Arbitration Register */
#define CAN_MOAR200	(*( CAN_MOAR0_type *) 0xf001a918u)	/* Message Object 200 Arbitration Register */
#define CAN_MOAR201	(*( CAN_MOAR0_type *) 0xf001a938u)	/* Message Object 201 Arbitration Register */
#define CAN_MOAR202	(*( CAN_MOAR0_type *) 0xf001a958u)	/* Message Object 202 Arbitration Register */
#define CAN_MOAR203	(*( CAN_MOAR0_type *) 0xf001a978u)	/* Message Object 203 Arbitration Register */
#define CAN_MOAR204	(*( CAN_MOAR0_type *) 0xf001a998u)	/* Message Object 204 Arbitration Register */
#define CAN_MOAR205	(*( CAN_MOAR0_type *) 0xf001a9b8u)	/* Message Object 205 Arbitration Register */
#define CAN_MOAR206	(*( CAN_MOAR0_type *) 0xf001a9d8u)	/* Message Object 206 Arbitration Register */
#define CAN_MOAR207	(*( CAN_MOAR0_type *) 0xf001a9f8u)	/* Message Object 207 Arbitration Register */
#define CAN_MOAR208	(*( CAN_MOAR0_type *) 0xf001aa18u)	/* Message Object 208 Arbitration Register */
#define CAN_MOAR209	(*( CAN_MOAR0_type *) 0xf001aa38u)	/* Message Object 209 Arbitration Register */
#define CAN_MOAR21	(*( CAN_MOAR0_type *) 0xf00192b8u)	/* Message Object 21 Arbitration Register */
#define CAN_MOAR210	(*( CAN_MOAR0_type *) 0xf001aa58u)	/* Message Object 210 Arbitration Register */
#define CAN_MOAR211	(*( CAN_MOAR0_type *) 0xf001aa78u)	/* Message Object 211 Arbitration Register */
#define CAN_MOAR212	(*( CAN_MOAR0_type *) 0xf001aa98u)	/* Message Object 212 Arbitration Register */
#define CAN_MOAR213	(*( CAN_MOAR0_type *) 0xf001aab8u)	/* Message Object 213 Arbitration Register */
#define CAN_MOAR214	(*( CAN_MOAR0_type *) 0xf001aad8u)	/* Message Object 214 Arbitration Register */
#define CAN_MOAR215	(*( CAN_MOAR0_type *) 0xf001aaf8u)	/* Message Object 215 Arbitration Register */
#define CAN_MOAR216	(*( CAN_MOAR0_type *) 0xf001ab18u)	/* Message Object 216 Arbitration Register */
#define CAN_MOAR217	(*( CAN_MOAR0_type *) 0xf001ab38u)	/* Message Object 217 Arbitration Register */
#define CAN_MOAR218	(*( CAN_MOAR0_type *) 0xf001ab58u)	/* Message Object 218 Arbitration Register */
#define CAN_MOAR219	(*( CAN_MOAR0_type *) 0xf001ab78u)	/* Message Object 219 Arbitration Register */
#define CAN_MOAR22	(*( CAN_MOAR0_type *) 0xf00192d8u)	/* Message Object 22 Arbitration Register */
#define CAN_MOAR220	(*( CAN_MOAR0_type *) 0xf001ab98u)	/* Message Object 220 Arbitration Register */
#define CAN_MOAR221	(*( CAN_MOAR0_type *) 0xf001abb8u)	/* Message Object 221 Arbitration Register */
#define CAN_MOAR222	(*( CAN_MOAR0_type *) 0xf001abd8u)	/* Message Object 222 Arbitration Register */
#define CAN_MOAR223	(*( CAN_MOAR0_type *) 0xf001abf8u)	/* Message Object 223 Arbitration Register */
#define CAN_MOAR224	(*( CAN_MOAR0_type *) 0xf001ac18u)	/* Message Object 224 Arbitration Register */
#define CAN_MOAR225	(*( CAN_MOAR0_type *) 0xf001ac38u)	/* Message Object 225 Arbitration Register */
#define CAN_MOAR226	(*( CAN_MOAR0_type *) 0xf001ac58u)	/* Message Object 226 Arbitration Register */
#define CAN_MOAR227	(*( CAN_MOAR0_type *) 0xf001ac78u)	/* Message Object 227 Arbitration Register */
#define CAN_MOAR228	(*( CAN_MOAR0_type *) 0xf001ac98u)	/* Message Object 228 Arbitration Register */
#define CAN_MOAR229	(*( CAN_MOAR0_type *) 0xf001acb8u)	/* Message Object 229 Arbitration Register */
#define CAN_MOAR23	(*( CAN_MOAR0_type *) 0xf00192f8u)	/* Message Object 23 Arbitration Register */
#define CAN_MOAR230	(*( CAN_MOAR0_type *) 0xf001acd8u)	/* Message Object 230 Arbitration Register */
#define CAN_MOAR231	(*( CAN_MOAR0_type *) 0xf001acf8u)	/* Message Object 231 Arbitration Register */
#define CAN_MOAR232	(*( CAN_MOAR0_type *) 0xf001ad18u)	/* Message Object 232 Arbitration Register */
#define CAN_MOAR233	(*( CAN_MOAR0_type *) 0xf001ad38u)	/* Message Object 233 Arbitration Register */
#define CAN_MOAR234	(*( CAN_MOAR0_type *) 0xf001ad58u)	/* Message Object 234 Arbitration Register */
#define CAN_MOAR235	(*( CAN_MOAR0_type *) 0xf001ad78u)	/* Message Object 235 Arbitration Register */
#define CAN_MOAR236	(*( CAN_MOAR0_type *) 0xf001ad98u)	/* Message Object 236 Arbitration Register */
#define CAN_MOAR237	(*( CAN_MOAR0_type *) 0xf001adb8u)	/* Message Object 237 Arbitration Register */
#define CAN_MOAR238	(*( CAN_MOAR0_type *) 0xf001add8u)	/* Message Object 238 Arbitration Register */
#define CAN_MOAR239	(*( CAN_MOAR0_type *) 0xf001adf8u)	/* Message Object 239 Arbitration Register */
#define CAN_MOAR24	(*( CAN_MOAR0_type *) 0xf0019318u)	/* Message Object 24 Arbitration Register */
#define CAN_MOAR240	(*( CAN_MOAR0_type *) 0xf001ae18u)	/* Message Object 240 Arbitration Register */
#define CAN_MOAR241	(*( CAN_MOAR0_type *) 0xf001ae38u)	/* Message Object 241 Arbitration Register */
#define CAN_MOAR242	(*( CAN_MOAR0_type *) 0xf001ae58u)	/* Message Object 242 Arbitration Register */
#define CAN_MOAR243	(*( CAN_MOAR0_type *) 0xf001ae78u)	/* Message Object 243 Arbitration Register */
#define CAN_MOAR244	(*( CAN_MOAR0_type *) 0xf001ae98u)	/* Message Object 244 Arbitration Register */
#define CAN_MOAR245	(*( CAN_MOAR0_type *) 0xf001aeb8u)	/* Message Object 245 Arbitration Register */
#define CAN_MOAR246	(*( CAN_MOAR0_type *) 0xf001aed8u)	/* Message Object 246 Arbitration Register */
#define CAN_MOAR247	(*( CAN_MOAR0_type *) 0xf001aef8u)	/* Message Object 247 Arbitration Register */
#define CAN_MOAR248	(*( CAN_MOAR0_type *) 0xf001af18u)	/* Message Object 248 Arbitration Register */
#define CAN_MOAR249	(*( CAN_MOAR0_type *) 0xf001af38u)	/* Message Object 249 Arbitration Register */
#define CAN_MOAR25	(*( CAN_MOAR0_type *) 0xf0019338u)	/* Message Object 25 Arbitration Register */
#define CAN_MOAR250	(*( CAN_MOAR0_type *) 0xf001af58u)	/* Message Object 250 Arbitration Register */
#define CAN_MOAR251	(*( CAN_MOAR0_type *) 0xf001af78u)	/* Message Object 251 Arbitration Register */
#define CAN_MOAR252	(*( CAN_MOAR0_type *) 0xf001af98u)	/* Message Object 252 Arbitration Register */
#define CAN_MOAR253	(*( CAN_MOAR0_type *) 0xf001afb8u)	/* Message Object 253 Arbitration Register */
#define CAN_MOAR254	(*( CAN_MOAR0_type *) 0xf001afd8u)	/* Message Object 254 Arbitration Register */
#define CAN_MOAR255	(*( CAN_MOAR0_type *) 0xf001aff8u)	/* Message Object 255 Arbitration Register */
#define CAN_MOAR26	(*( CAN_MOAR0_type *) 0xf0019358u)	/* Message Object 26 Arbitration Register */
#define CAN_MOAR27	(*( CAN_MOAR0_type *) 0xf0019378u)	/* Message Object 27 Arbitration Register */
#define CAN_MOAR28	(*( CAN_MOAR0_type *) 0xf0019398u)	/* Message Object 28 Arbitration Register */
#define CAN_MOAR29	(*( CAN_MOAR0_type *) 0xf00193b8u)	/* Message Object 29 Arbitration Register */
#define CAN_MOAR3	(*( CAN_MOAR0_type *) 0xf0019078u)	/* Message Object 3 Arbitration Register */
#define CAN_MOAR30	(*( CAN_MOAR0_type *) 0xf00193d8u)	/* Message Object 30 Arbitration Register */
#define CAN_MOAR31	(*( CAN_MOAR0_type *) 0xf00193f8u)	/* Message Object 31 Arbitration Register */
#define CAN_MOAR32	(*( CAN_MOAR0_type *) 0xf0019418u)	/* Message Object 32 Arbitration Register */
#define CAN_MOAR33	(*( CAN_MOAR0_type *) 0xf0019438u)	/* Message Object 33 Arbitration Register */
#define CAN_MOAR34	(*( CAN_MOAR0_type *) 0xf0019458u)	/* Message Object 34 Arbitration Register */
#define CAN_MOAR35	(*( CAN_MOAR0_type *) 0xf0019478u)	/* Message Object 35 Arbitration Register */
#define CAN_MOAR36	(*( CAN_MOAR0_type *) 0xf0019498u)	/* Message Object 36 Arbitration Register */
#define CAN_MOAR37	(*( CAN_MOAR0_type *) 0xf00194b8u)	/* Message Object 37 Arbitration Register */
#define CAN_MOAR38	(*( CAN_MOAR0_type *) 0xf00194d8u)	/* Message Object 38 Arbitration Register */
#define CAN_MOAR39	(*( CAN_MOAR0_type *) 0xf00194f8u)	/* Message Object 39 Arbitration Register */
#define CAN_MOAR4	(*( CAN_MOAR0_type *) 0xf0019098u)	/* Message Object 4 Arbitration Register */
#define CAN_MOAR40	(*( CAN_MOAR0_type *) 0xf0019518u)	/* Message Object 40 Arbitration Register */
#define CAN_MOAR41	(*( CAN_MOAR0_type *) 0xf0019538u)	/* Message Object 41 Arbitration Register */
#define CAN_MOAR42	(*( CAN_MOAR0_type *) 0xf0019558u)	/* Message Object 42 Arbitration Register */
#define CAN_MOAR43	(*( CAN_MOAR0_type *) 0xf0019578u)	/* Message Object 43 Arbitration Register */
#define CAN_MOAR44	(*( CAN_MOAR0_type *) 0xf0019598u)	/* Message Object 44 Arbitration Register */
#define CAN_MOAR45	(*( CAN_MOAR0_type *) 0xf00195b8u)	/* Message Object 45 Arbitration Register */
#define CAN_MOAR46	(*( CAN_MOAR0_type *) 0xf00195d8u)	/* Message Object 46 Arbitration Register */
#define CAN_MOAR47	(*( CAN_MOAR0_type *) 0xf00195f8u)	/* Message Object 47 Arbitration Register */
#define CAN_MOAR48	(*( CAN_MOAR0_type *) 0xf0019618u)	/* Message Object 48 Arbitration Register */
#define CAN_MOAR49	(*( CAN_MOAR0_type *) 0xf0019638u)	/* Message Object 49 Arbitration Register */
#define CAN_MOAR5	(*( CAN_MOAR0_type *) 0xf00190b8u)	/* Message Object 5 Arbitration Register */
#define CAN_MOAR50	(*( CAN_MOAR0_type *) 0xf0019658u)	/* Message Object 50 Arbitration Register */
#define CAN_MOAR51	(*( CAN_MOAR0_type *) 0xf0019678u)	/* Message Object 51 Arbitration Register */
#define CAN_MOAR52	(*( CAN_MOAR0_type *) 0xf0019698u)	/* Message Object 52 Arbitration Register */
#define CAN_MOAR53	(*( CAN_MOAR0_type *) 0xf00196b8u)	/* Message Object 53 Arbitration Register */
#define CAN_MOAR54	(*( CAN_MOAR0_type *) 0xf00196d8u)	/* Message Object 54 Arbitration Register */
#define CAN_MOAR55	(*( CAN_MOAR0_type *) 0xf00196f8u)	/* Message Object 55 Arbitration Register */
#define CAN_MOAR56	(*( CAN_MOAR0_type *) 0xf0019718u)	/* Message Object 56 Arbitration Register */
#define CAN_MOAR57	(*( CAN_MOAR0_type *) 0xf0019738u)	/* Message Object 57 Arbitration Register */
#define CAN_MOAR58	(*( CAN_MOAR0_type *) 0xf0019758u)	/* Message Object 58 Arbitration Register */
#define CAN_MOAR59	(*( CAN_MOAR0_type *) 0xf0019778u)	/* Message Object 59 Arbitration Register */
#define CAN_MOAR6	(*( CAN_MOAR0_type *) 0xf00190d8u)	/* Message Object 6 Arbitration Register */
#define CAN_MOAR60	(*( CAN_MOAR0_type *) 0xf0019798u)	/* Message Object 60 Arbitration Register */
#define CAN_MOAR61	(*( CAN_MOAR0_type *) 0xf00197b8u)	/* Message Object 61 Arbitration Register */
#define CAN_MOAR62	(*( CAN_MOAR0_type *) 0xf00197d8u)	/* Message Object 62 Arbitration Register */
#define CAN_MOAR63	(*( CAN_MOAR0_type *) 0xf00197f8u)	/* Message Object 63 Arbitration Register */
#define CAN_MOAR64	(*( CAN_MOAR0_type *) 0xf0019818u)	/* Message Object 64 Arbitration Register */
#define CAN_MOAR65	(*( CAN_MOAR0_type *) 0xf0019838u)	/* Message Object 65 Arbitration Register */
#define CAN_MOAR66	(*( CAN_MOAR0_type *) 0xf0019858u)	/* Message Object 66 Arbitration Register */
#define CAN_MOAR67	(*( CAN_MOAR0_type *) 0xf0019878u)	/* Message Object 67 Arbitration Register */
#define CAN_MOAR68	(*( CAN_MOAR0_type *) 0xf0019898u)	/* Message Object 68 Arbitration Register */
#define CAN_MOAR69	(*( CAN_MOAR0_type *) 0xf00198b8u)	/* Message Object 69 Arbitration Register */
#define CAN_MOAR7	(*( CAN_MOAR0_type *) 0xf00190f8u)	/* Message Object 7 Arbitration Register */
#define CAN_MOAR70	(*( CAN_MOAR0_type *) 0xf00198d8u)	/* Message Object 70 Arbitration Register */
#define CAN_MOAR71	(*( CAN_MOAR0_type *) 0xf00198f8u)	/* Message Object 71 Arbitration Register */
#define CAN_MOAR72	(*( CAN_MOAR0_type *) 0xf0019918u)	/* Message Object 72 Arbitration Register */
#define CAN_MOAR73	(*( CAN_MOAR0_type *) 0xf0019938u)	/* Message Object 73 Arbitration Register */
#define CAN_MOAR74	(*( CAN_MOAR0_type *) 0xf0019958u)	/* Message Object 74 Arbitration Register */
#define CAN_MOAR75	(*( CAN_MOAR0_type *) 0xf0019978u)	/* Message Object 75 Arbitration Register */
#define CAN_MOAR76	(*( CAN_MOAR0_type *) 0xf0019998u)	/* Message Object 76 Arbitration Register */
#define CAN_MOAR77	(*( CAN_MOAR0_type *) 0xf00199b8u)	/* Message Object 77 Arbitration Register */
#define CAN_MOAR78	(*( CAN_MOAR0_type *) 0xf00199d8u)	/* Message Object 78 Arbitration Register */
#define CAN_MOAR79	(*( CAN_MOAR0_type *) 0xf00199f8u)	/* Message Object 79 Arbitration Register */
#define CAN_MOAR8	(*( CAN_MOAR0_type *) 0xf0019118u)	/* Message Object 8 Arbitration Register */
#define CAN_MOAR80	(*( CAN_MOAR0_type *) 0xf0019a18u)	/* Message Object 80 Arbitration Register */
#define CAN_MOAR81	(*( CAN_MOAR0_type *) 0xf0019a38u)	/* Message Object 81 Arbitration Register */
#define CAN_MOAR82	(*( CAN_MOAR0_type *) 0xf0019a58u)	/* Message Object 82 Arbitration Register */
#define CAN_MOAR83	(*( CAN_MOAR0_type *) 0xf0019a78u)	/* Message Object 83 Arbitration Register */
#define CAN_MOAR84	(*( CAN_MOAR0_type *) 0xf0019a98u)	/* Message Object 84 Arbitration Register */
#define CAN_MOAR85	(*( CAN_MOAR0_type *) 0xf0019ab8u)	/* Message Object 85 Arbitration Register */
#define CAN_MOAR86	(*( CAN_MOAR0_type *) 0xf0019ad8u)	/* Message Object 86 Arbitration Register */
#define CAN_MOAR87	(*( CAN_MOAR0_type *) 0xf0019af8u)	/* Message Object 87 Arbitration Register */
#define CAN_MOAR88	(*( CAN_MOAR0_type *) 0xf0019b18u)	/* Message Object 88 Arbitration Register */
#define CAN_MOAR89	(*( CAN_MOAR0_type *) 0xf0019b38u)	/* Message Object 89 Arbitration Register */
#define CAN_MOAR9	(*( CAN_MOAR0_type *) 0xf0019138u)	/* Message Object 9 Arbitration Register */
#define CAN_MOAR90	(*( CAN_MOAR0_type *) 0xf0019b58u)	/* Message Object 90 Arbitration Register */
#define CAN_MOAR91	(*( CAN_MOAR0_type *) 0xf0019b78u)	/* Message Object 91 Arbitration Register */
#define CAN_MOAR92	(*( CAN_MOAR0_type *) 0xf0019b98u)	/* Message Object 92 Arbitration Register */
#define CAN_MOAR93	(*( CAN_MOAR0_type *) 0xf0019bb8u)	/* Message Object 93 Arbitration Register */
#define CAN_MOAR94	(*( CAN_MOAR0_type *) 0xf0019bd8u)	/* Message Object 94 Arbitration Register */
#define CAN_MOAR95	(*( CAN_MOAR0_type *) 0xf0019bf8u)	/* Message Object 95 Arbitration Register */
#define CAN_MOAR96	(*( CAN_MOAR0_type *) 0xf0019c18u)	/* Message Object 96 Arbitration Register */
#define CAN_MOAR97	(*( CAN_MOAR0_type *) 0xf0019c38u)	/* Message Object 97 Arbitration Register */
#define CAN_MOAR98	(*( CAN_MOAR0_type *) 0xf0019c58u)	/* Message Object 98 Arbitration Register */
#define CAN_MOAR99	(*( CAN_MOAR0_type *) 0xf0019c78u)	/* Message Object 99 Arbitration Register */

typedef volatile union
{
	struct
	{ 
		unsigned int RESRXPND       : 1;	/* Reset/Set Receive Pending */
		unsigned int RESTXPND       : 1;	/* Reset/Set Transmit Pending */
		unsigned int RESRXUPD       : 1;	/* Reset/Set Receive Updating */
		unsigned int RESNEWDAT      : 1;	/* Reset/Set New Data */
		unsigned int RESMSGLST      : 1;	/* Reset/Set Message Lost */
		unsigned int RESMSGVAL      : 1;	/* Reset/Set Message Valid */
		unsigned int RESRTSEL       : 1;	/* Reset/Set Receive/Transmit Selected */
		unsigned int RESRXEN        : 1;	/* Reset/Set Receive Enable */
		unsigned int RESTXRQ        : 1;	/* Reset/Set Transmit Request */
		unsigned int RESTXEN0       : 1;	/* Reset/Set Transmit Enable 0 */
		unsigned int RESTXEN1       : 1;	/* Reset/Set Transmit Enable 1 */
		unsigned int RESDIR         : 1;	/* Reset/Set Message Direction */
		unsigned int                : 4;
		unsigned int SETRXPND       : 1;	/* Reset/Set Receive Pending */
		unsigned int SETTXPND       : 1;	/* Reset/Set Transmit Pending */
		unsigned int SETRXUPD       : 1;	/* Reset/Set Receive Updating */
		unsigned int SETNEWDAT      : 1;	/* Reset/Set New Data */
		unsigned int SETMSGLST      : 1;	/* Reset/Set Message Lost */
		unsigned int SETMSGVAL      : 1;	/* Reset/Set Message Valid */
		unsigned int SETRTSEL       : 1;	/* Reset/Set Receive/Transmit Selected */
		unsigned int SETRXEN        : 1;	/* Reset/Set Receive Enable */
		unsigned int SETTXRQ        : 1;	/* Reset/Set Transmit Request */
		unsigned int SETTXEN0       : 1;	/* Reset/Set Transmit Enable 0 */
		unsigned int SETTXEN1       : 1;	/* Reset/Set Transmit Enable 1 */
		unsigned int SETDIR         : 1;	/* Reset/Set Message Direction */
		unsigned int                : 4;
	} B;
	int I;
	unsigned int U;

} CAN_MOCTR0_type;
#define CAN_MOCTR0	(*( CAN_MOCTR0_type *) 0xf001901cu)	/* Message Object 0 Control Register */
#define CAN_MOCTR1	(*( CAN_MOCTR0_type *) 0xf001903cu)	/* Message Object 1 Control Register */
#define CAN_MOCTR10	(*( CAN_MOCTR0_type *) 0xf001915cu)	/* Message Object 10 Control Register */
#define CAN_MOCTR100	(*( CAN_MOCTR0_type *) 0xf0019c9cu)	/* Message Object 100 Control Register */
#define CAN_MOCTR101	(*( CAN_MOCTR0_type *) 0xf0019cbcu)	/* Message Object 101 Control Register */
#define CAN_MOCTR102	(*( CAN_MOCTR0_type *) 0xf0019cdcu)	/* Message Object 102 Control Register */
#define CAN_MOCTR103	(*( CAN_MOCTR0_type *) 0xf0019cfcu)	/* Message Object 103 Control Register */
#define CAN_MOCTR104	(*( CAN_MOCTR0_type *) 0xf0019d1cu)	/* Message Object 104 Control Register */
#define CAN_MOCTR105	(*( CAN_MOCTR0_type *) 0xf0019d3cu)	/* Message Object 105 Control Register */
#define CAN_MOCTR106	(*( CAN_MOCTR0_type *) 0xf0019d5cu)	/* Message Object 106 Control Register */
#define CAN_MOCTR107	(*( CAN_MOCTR0_type *) 0xf0019d7cu)	/* Message Object 107 Control Register */
#define CAN_MOCTR108	(*( CAN_MOCTR0_type *) 0xf0019d9cu)	/* Message Object 108 Control Register */
#define CAN_MOCTR109	(*( CAN_MOCTR0_type *) 0xf0019dbcu)	/* Message Object 109 Control Register */
#define CAN_MOCTR11	(*( CAN_MOCTR0_type *) 0xf001917cu)	/* Message Object 11 Control Register */
#define CAN_MOCTR110	(*( CAN_MOCTR0_type *) 0xf0019ddcu)	/* Message Object 110 Control Register */
#define CAN_MOCTR111	(*( CAN_MOCTR0_type *) 0xf0019dfcu)	/* Message Object 111 Control Register */
#define CAN_MOCTR112	(*( CAN_MOCTR0_type *) 0xf0019e1cu)	/* Message Object 112 Control Register */
#define CAN_MOCTR113	(*( CAN_MOCTR0_type *) 0xf0019e3cu)	/* Message Object 113 Control Register */
#define CAN_MOCTR114	(*( CAN_MOCTR0_type *) 0xf0019e5cu)	/* Message Object 114 Control Register */
#define CAN_MOCTR115	(*( CAN_MOCTR0_type *) 0xf0019e7cu)	/* Message Object 115 Control Register */
#define CAN_MOCTR116	(*( CAN_MOCTR0_type *) 0xf0019e9cu)	/* Message Object 116 Control Register */
#define CAN_MOCTR117	(*( CAN_MOCTR0_type *) 0xf0019ebcu)	/* Message Object 117 Control Register */
#define CAN_MOCTR118	(*( CAN_MOCTR0_type *) 0xf0019edcu)	/* Message Object 118 Control Register */
#define CAN_MOCTR119	(*( CAN_MOCTR0_type *) 0xf0019efcu)	/* Message Object 119 Control Register */
#define CAN_MOCTR12	(*( CAN_MOCTR0_type *) 0xf001919cu)	/* Message Object 12 Control Register */
#define CAN_MOCTR120	(*( CAN_MOCTR0_type *) 0xf0019f1cu)	/* Message Object 120 Control Register */
#define CAN_MOCTR121	(*( CAN_MOCTR0_type *) 0xf0019f3cu)	/* Message Object 121 Control Register */
#define CAN_MOCTR122	(*( CAN_MOCTR0_type *) 0xf0019f5cu)	/* Message Object 122 Control Register */
#define CAN_MOCTR123	(*( CAN_MOCTR0_type *) 0xf0019f7cu)	/* Message Object 123 Control Register */
#define CAN_MOCTR124	(*( CAN_MOCTR0_type *) 0xf0019f9cu)	/* Message Object 124 Control Register */
#define CAN_MOCTR125	(*( CAN_MOCTR0_type *) 0xf0019fbcu)	/* Message Object 125 Control Register */
#define CAN_MOCTR126	(*( CAN_MOCTR0_type *) 0xf0019fdcu)	/* Message Object 126 Control Register */
#define CAN_MOCTR127	(*( CAN_MOCTR0_type *) 0xf0019ffcu)	/* Message Object 127 Control Register */
#define CAN_MOCTR128	(*( CAN_MOCTR0_type *) 0xf001a01cu)	/* Message Object 128 Control Register */
#define CAN_MOCTR129	(*( CAN_MOCTR0_type *) 0xf001a03cu)	/* Message Object 129 Control Register */
#define CAN_MOCTR13	(*( CAN_MOCTR0_type *) 0xf00191bcu)	/* Message Object 13 Control Register */
#define CAN_MOCTR130	(*( CAN_MOCTR0_type *) 0xf001a05cu)	/* Message Object 130 Control Register */
#define CAN_MOCTR131	(*( CAN_MOCTR0_type *) 0xf001a07cu)	/* Message Object 131 Control Register */
#define CAN_MOCTR132	(*( CAN_MOCTR0_type *) 0xf001a09cu)	/* Message Object 132 Control Register */
#define CAN_MOCTR133	(*( CAN_MOCTR0_type *) 0xf001a0bcu)	/* Message Object 133 Control Register */
#define CAN_MOCTR134	(*( CAN_MOCTR0_type *) 0xf001a0dcu)	/* Message Object 134 Control Register */
#define CAN_MOCTR135	(*( CAN_MOCTR0_type *) 0xf001a0fcu)	/* Message Object 135 Control Register */
#define CAN_MOCTR136	(*( CAN_MOCTR0_type *) 0xf001a11cu)	/* Message Object 136 Control Register */
#define CAN_MOCTR137	(*( CAN_MOCTR0_type *) 0xf001a13cu)	/* Message Object 137 Control Register */
#define CAN_MOCTR138	(*( CAN_MOCTR0_type *) 0xf001a15cu)	/* Message Object 138 Control Register */
#define CAN_MOCTR139	(*( CAN_MOCTR0_type *) 0xf001a17cu)	/* Message Object 139 Control Register */
#define CAN_MOCTR14	(*( CAN_MOCTR0_type *) 0xf00191dcu)	/* Message Object 14 Control Register */
#define CAN_MOCTR140	(*( CAN_MOCTR0_type *) 0xf001a19cu)	/* Message Object 140 Control Register */
#define CAN_MOCTR141	(*( CAN_MOCTR0_type *) 0xf001a1bcu)	/* Message Object 141 Control Register */
#define CAN_MOCTR142	(*( CAN_MOCTR0_type *) 0xf001a1dcu)	/* Message Object 142 Control Register */
#define CAN_MOCTR143	(*( CAN_MOCTR0_type *) 0xf001a1fcu)	/* Message Object 143 Control Register */
#define CAN_MOCTR144	(*( CAN_MOCTR0_type *) 0xf001a21cu)	/* Message Object 144 Control Register */
#define CAN_MOCTR145	(*( CAN_MOCTR0_type *) 0xf001a23cu)	/* Message Object 145 Control Register */
#define CAN_MOCTR146	(*( CAN_MOCTR0_type *) 0xf001a25cu)	/* Message Object 146 Control Register */
#define CAN_MOCTR147	(*( CAN_MOCTR0_type *) 0xf001a27cu)	/* Message Object 147 Control Register */
#define CAN_MOCTR148	(*( CAN_MOCTR0_type *) 0xf001a29cu)	/* Message Object 148 Control Register */
#define CAN_MOCTR149	(*( CAN_MOCTR0_type *) 0xf001a2bcu)	/* Message Object 149 Control Register */
#define CAN_MOCTR15	(*( CAN_MOCTR0_type *) 0xf00191fcu)	/* Message Object 15 Control Register */
#define CAN_MOCTR150	(*( CAN_MOCTR0_type *) 0xf001a2dcu)	/* Message Object 150 Control Register */
#define CAN_MOCTR151	(*( CAN_MOCTR0_type *) 0xf001a2fcu)	/* Message Object 151 Control Register */
#define CAN_MOCTR152	(*( CAN_MOCTR0_type *) 0xf001a31cu)	/* Message Object 152 Control Register */
#define CAN_MOCTR153	(*( CAN_MOCTR0_type *) 0xf001a33cu)	/* Message Object 153 Control Register */
#define CAN_MOCTR154	(*( CAN_MOCTR0_type *) 0xf001a35cu)	/* Message Object 154 Control Register */
#define CAN_MOCTR155	(*( CAN_MOCTR0_type *) 0xf001a37cu)	/* Message Object 155 Control Register */
#define CAN_MOCTR156	(*( CAN_MOCTR0_type *) 0xf001a39cu)	/* Message Object 156 Control Register */
#define CAN_MOCTR157	(*( CAN_MOCTR0_type *) 0xf001a3bcu)	/* Message Object 157 Control Register */
#define CAN_MOCTR158	(*( CAN_MOCTR0_type *) 0xf001a3dcu)	/* Message Object 158 Control Register */
#define CAN_MOCTR159	(*( CAN_MOCTR0_type *) 0xf001a3fcu)	/* Message Object 159 Control Register */
#define CAN_MOCTR16	(*( CAN_MOCTR0_type *) 0xf001921cu)	/* Message Object 16 Control Register */
#define CAN_MOCTR160	(*( CAN_MOCTR0_type *) 0xf001a41cu)	/* Message Object 160 Control Register */
#define CAN_MOCTR161	(*( CAN_MOCTR0_type *) 0xf001a43cu)	/* Message Object 161 Control Register */
#define CAN_MOCTR162	(*( CAN_MOCTR0_type *) 0xf001a45cu)	/* Message Object 162 Control Register */
#define CAN_MOCTR163	(*( CAN_MOCTR0_type *) 0xf001a47cu)	/* Message Object 163 Control Register */
#define CAN_MOCTR164	(*( CAN_MOCTR0_type *) 0xf001a49cu)	/* Message Object 164 Control Register */
#define CAN_MOCTR165	(*( CAN_MOCTR0_type *) 0xf001a4bcu)	/* Message Object 165 Control Register */
#define CAN_MOCTR166	(*( CAN_MOCTR0_type *) 0xf001a4dcu)	/* Message Object 166 Control Register */
#define CAN_MOCTR167	(*( CAN_MOCTR0_type *) 0xf001a4fcu)	/* Message Object 167 Control Register */
#define CAN_MOCTR168	(*( CAN_MOCTR0_type *) 0xf001a51cu)	/* Message Object 168 Control Register */
#define CAN_MOCTR169	(*( CAN_MOCTR0_type *) 0xf001a53cu)	/* Message Object 169 Control Register */
#define CAN_MOCTR17	(*( CAN_MOCTR0_type *) 0xf001923cu)	/* Message Object 17 Control Register */
#define CAN_MOCTR170	(*( CAN_MOCTR0_type *) 0xf001a55cu)	/* Message Object 170 Control Register */
#define CAN_MOCTR171	(*( CAN_MOCTR0_type *) 0xf001a57cu)	/* Message Object 171 Control Register */
#define CAN_MOCTR172	(*( CAN_MOCTR0_type *) 0xf001a59cu)	/* Message Object 172 Control Register */
#define CAN_MOCTR173	(*( CAN_MOCTR0_type *) 0xf001a5bcu)	/* Message Object 173 Control Register */
#define CAN_MOCTR174	(*( CAN_MOCTR0_type *) 0xf001a5dcu)	/* Message Object 174 Control Register */
#define CAN_MOCTR175	(*( CAN_MOCTR0_type *) 0xf001a5fcu)	/* Message Object 175 Control Register */
#define CAN_MOCTR176	(*( CAN_MOCTR0_type *) 0xf001a61cu)	/* Message Object 176 Control Register */
#define CAN_MOCTR177	(*( CAN_MOCTR0_type *) 0xf001a63cu)	/* Message Object 177 Control Register */
#define CAN_MOCTR178	(*( CAN_MOCTR0_type *) 0xf001a65cu)	/* Message Object 178 Control Register */
#define CAN_MOCTR179	(*( CAN_MOCTR0_type *) 0xf001a67cu)	/* Message Object 179 Control Register */
#define CAN_MOCTR18	(*( CAN_MOCTR0_type *) 0xf001925cu)	/* Message Object 18 Control Register */
#define CAN_MOCTR180	(*( CAN_MOCTR0_type *) 0xf001a69cu)	/* Message Object 180 Control Register */
#define CAN_MOCTR181	(*( CAN_MOCTR0_type *) 0xf001a6bcu)	/* Message Object 181 Control Register */
#define CAN_MOCTR182	(*( CAN_MOCTR0_type *) 0xf001a6dcu)	/* Message Object 182 Control Register */
#define CAN_MOCTR183	(*( CAN_MOCTR0_type *) 0xf001a6fcu)	/* Message Object 183 Control Register */
#define CAN_MOCTR184	(*( CAN_MOCTR0_type *) 0xf001a71cu)	/* Message Object 184 Control Register */
#define CAN_MOCTR185	(*( CAN_MOCTR0_type *) 0xf001a73cu)	/* Message Object 185 Control Register */
#define CAN_MOCTR186	(*( CAN_MOCTR0_type *) 0xf001a75cu)	/* Message Object 186 Control Register */
#define CAN_MOCTR187	(*( CAN_MOCTR0_type *) 0xf001a77cu)	/* Message Object 187 Control Register */
#define CAN_MOCTR188	(*( CAN_MOCTR0_type *) 0xf001a79cu)	/* Message Object 188 Control Register */
#define CAN_MOCTR189	(*( CAN_MOCTR0_type *) 0xf001a7bcu)	/* Message Object 189 Control Register */
#define CAN_MOCTR19	(*( CAN_MOCTR0_type *) 0xf001927cu)	/* Message Object 19 Control Register */
#define CAN_MOCTR190	(*( CAN_MOCTR0_type *) 0xf001a7dcu)	/* Message Object 190 Control Register */
#define CAN_MOCTR191	(*( CAN_MOCTR0_type *) 0xf001a7fcu)	/* Message Object 191 Control Register */
#define CAN_MOCTR192	(*( CAN_MOCTR0_type *) 0xf001a81cu)	/* Message Object 192 Control Register */
#define CAN_MOCTR193	(*( CAN_MOCTR0_type *) 0xf001a83cu)	/* Message Object 193 Control Register */
#define CAN_MOCTR194	(*( CAN_MOCTR0_type *) 0xf001a85cu)	/* Message Object 194 Control Register */
#define CAN_MOCTR195	(*( CAN_MOCTR0_type *) 0xf001a87cu)	/* Message Object 195 Control Register */
#define CAN_MOCTR196	(*( CAN_MOCTR0_type *) 0xf001a89cu)	/* Message Object 196 Control Register */
#define CAN_MOCTR197	(*( CAN_MOCTR0_type *) 0xf001a8bcu)	/* Message Object 197 Control Register */
#define CAN_MOCTR198	(*( CAN_MOCTR0_type *) 0xf001a8dcu)	/* Message Object 198 Control Register */
#define CAN_MOCTR199	(*( CAN_MOCTR0_type *) 0xf001a8fcu)	/* Message Object 199 Control Register */
#define CAN_MOCTR2	(*( CAN_MOCTR0_type *) 0xf001905cu)	/* Message Object 2 Control Register */
#define CAN_MOCTR20	(*( CAN_MOCTR0_type *) 0xf001929cu)	/* Message Object 20 Control Register */
#define CAN_MOCTR200	(*( CAN_MOCTR0_type *) 0xf001a91cu)	/* Message Object 200 Control Register */
#define CAN_MOCTR201	(*( CAN_MOCTR0_type *) 0xf001a93cu)	/* Message Object 201 Control Register */
#define CAN_MOCTR202	(*( CAN_MOCTR0_type *) 0xf001a95cu)	/* Message Object 202 Control Register */
#define CAN_MOCTR203	(*( CAN_MOCTR0_type *) 0xf001a97cu)	/* Message Object 203 Control Register */
#define CAN_MOCTR204	(*( CAN_MOCTR0_type *) 0xf001a99cu)	/* Message Object 204 Control Register */
#define CAN_MOCTR205	(*( CAN_MOCTR0_type *) 0xf001a9bcu)	/* Message Object 205 Control Register */
#define CAN_MOCTR206	(*( CAN_MOCTR0_type *) 0xf001a9dcu)	/* Message Object 206 Control Register */
#define CAN_MOCTR207	(*( CAN_MOCTR0_type *) 0xf001a9fcu)	/* Message Object 207 Control Register */
#define CAN_MOCTR208	(*( CAN_MOCTR0_type *) 0xf001aa1cu)	/* Message Object 208 Control Register */
#define CAN_MOCTR209	(*( CAN_MOCTR0_type *) 0xf001aa3cu)	/* Message Object 209 Control Register */
#define CAN_MOCTR21	(*( CAN_MOCTR0_type *) 0xf00192bcu)	/* Message Object 21 Control Register */
#define CAN_MOCTR210	(*( CAN_MOCTR0_type *) 0xf001aa5cu)	/* Message Object 210 Control Register */
#define CAN_MOCTR211	(*( CAN_MOCTR0_type *) 0xf001aa7cu)	/* Message Object 211 Control Register */
#define CAN_MOCTR212	(*( CAN_MOCTR0_type *) 0xf001aa9cu)	/* Message Object 212 Control Register */
#define CAN_MOCTR213	(*( CAN_MOCTR0_type *) 0xf001aabcu)	/* Message Object 213 Control Register */
#define CAN_MOCTR214	(*( CAN_MOCTR0_type *) 0xf001aadcu)	/* Message Object 214 Control Register */
#define CAN_MOCTR215	(*( CAN_MOCTR0_type *) 0xf001aafcu)	/* Message Object 215 Control Register */
#define CAN_MOCTR216	(*( CAN_MOCTR0_type *) 0xf001ab1cu)	/* Message Object 216 Control Register */
#define CAN_MOCTR217	(*( CAN_MOCTR0_type *) 0xf001ab3cu)	/* Message Object 217 Control Register */
#define CAN_MOCTR218	(*( CAN_MOCTR0_type *) 0xf001ab5cu)	/* Message Object 218 Control Register */
#define CAN_MOCTR219	(*( CAN_MOCTR0_type *) 0xf001ab7cu)	/* Message Object 219 Control Register */
#define CAN_MOCTR22	(*( CAN_MOCTR0_type *) 0xf00192dcu)	/* Message Object 22 Control Register */
#define CAN_MOCTR220	(*( CAN_MOCTR0_type *) 0xf001ab9cu)	/* Message Object 220 Control Register */
#define CAN_MOCTR221	(*( CAN_MOCTR0_type *) 0xf001abbcu)	/* Message Object 221 Control Register */
#define CAN_MOCTR222	(*( CAN_MOCTR0_type *) 0xf001abdcu)	/* Message Object 222 Control Register */
#define CAN_MOCTR223	(*( CAN_MOCTR0_type *) 0xf001abfcu)	/* Message Object 223 Control Register */
#define CAN_MOCTR224	(*( CAN_MOCTR0_type *) 0xf001ac1cu)	/* Message Object 224 Control Register */
#define CAN_MOCTR225	(*( CAN_MOCTR0_type *) 0xf001ac3cu)	/* Message Object 225 Control Register */
#define CAN_MOCTR226	(*( CAN_MOCTR0_type *) 0xf001ac5cu)	/* Message Object 226 Control Register */
#define CAN_MOCTR227	(*( CAN_MOCTR0_type *) 0xf001ac7cu)	/* Message Object 227 Control Register */
#define CAN_MOCTR228	(*( CAN_MOCTR0_type *) 0xf001ac9cu)	/* Message Object 228 Control Register */
#define CAN_MOCTR229	(*( CAN_MOCTR0_type *) 0xf001acbcu)	/* Message Object 229 Control Register */
#define CAN_MOCTR23	(*( CAN_MOCTR0_type *) 0xf00192fcu)	/* Message Object 23 Control Register */
#define CAN_MOCTR230	(*( CAN_MOCTR0_type *) 0xf001acdcu)	/* Message Object 230 Control Register */
#define CAN_MOCTR231	(*( CAN_MOCTR0_type *) 0xf001acfcu)	/* Message Object 231 Control Register */
#define CAN_MOCTR232	(*( CAN_MOCTR0_type *) 0xf001ad1cu)	/* Message Object 232 Control Register */
#define CAN_MOCTR233	(*( CAN_MOCTR0_type *) 0xf001ad3cu)	/* Message Object 233 Control Register */
#define CAN_MOCTR234	(*( CAN_MOCTR0_type *) 0xf001ad5cu)	/* Message Object 234 Control Register */
#define CAN_MOCTR235	(*( CAN_MOCTR0_type *) 0xf001ad7cu)	/* Message Object 235 Control Register */
#define CAN_MOCTR236	(*( CAN_MOCTR0_type *) 0xf001ad9cu)	/* Message Object 236 Control Register */
#define CAN_MOCTR237	(*( CAN_MOCTR0_type *) 0xf001adbcu)	/* Message Object 237 Control Register */
#define CAN_MOCTR238	(*( CAN_MOCTR0_type *) 0xf001addcu)	/* Message Object 238 Control Register */
#define CAN_MOCTR239	(*( CAN_MOCTR0_type *) 0xf001adfcu)	/* Message Object 239 Control Register */
#define CAN_MOCTR24	(*( CAN_MOCTR0_type *) 0xf001931cu)	/* Message Object 24 Control Register */
#define CAN_MOCTR240	(*( CAN_MOCTR0_type *) 0xf001ae1cu)	/* Message Object 240 Control Register */
#define CAN_MOCTR241	(*( CAN_MOCTR0_type *) 0xf001ae3cu)	/* Message Object 241 Control Register */
#define CAN_MOCTR242	(*( CAN_MOCTR0_type *) 0xf001ae5cu)	/* Message Object 242 Control Register */
#define CAN_MOCTR243	(*( CAN_MOCTR0_type *) 0xf001ae7cu)	/* Message Object 243 Control Register */
#define CAN_MOCTR244	(*( CAN_MOCTR0_type *) 0xf001ae9cu)	/* Message Object 244 Control Register */
#define CAN_MOCTR245	(*( CAN_MOCTR0_type *) 0xf001aebcu)	/* Message Object 245 Control Register */
#define CAN_MOCTR246	(*( CAN_MOCTR0_type *) 0xf001aedcu)	/* Message Object 246 Control Register */
#define CAN_MOCTR247	(*( CAN_MOCTR0_type *) 0xf001aefcu)	/* Message Object 247 Control Register */
#define CAN_MOCTR248	(*( CAN_MOCTR0_type *) 0xf001af1cu)	/* Message Object 248 Control Register */
#define CAN_MOCTR249	(*( CAN_MOCTR0_type *) 0xf001af3cu)	/* Message Object 249 Control Register */
#define CAN_MOCTR25	(*( CAN_MOCTR0_type *) 0xf001933cu)	/* Message Object 25 Control Register */
#define CAN_MOCTR250	(*( CAN_MOCTR0_type *) 0xf001af5cu)	/* Message Object 250 Control Register */
#define CAN_MOCTR251	(*( CAN_MOCTR0_type *) 0xf001af7cu)	/* Message Object 251 Control Register */
#define CAN_MOCTR252	(*( CAN_MOCTR0_type *) 0xf001af9cu)	/* Message Object 252 Control Register */
#define CAN_MOCTR253	(*( CAN_MOCTR0_type *) 0xf001afbcu)	/* Message Object 253 Control Register */
#define CAN_MOCTR254	(*( CAN_MOCTR0_type *) 0xf001afdcu)	/* Message Object 254 Control Register */
#define CAN_MOCTR255	(*( CAN_MOCTR0_type *) 0xf001affcu)	/* Message Object 255 Control Register */
#define CAN_MOCTR26	(*( CAN_MOCTR0_type *) 0xf001935cu)	/* Message Object 26 Control Register */
#define CAN_MOCTR27	(*( CAN_MOCTR0_type *) 0xf001937cu)	/* Message Object 27 Control Register */
#define CAN_MOCTR28	(*( CAN_MOCTR0_type *) 0xf001939cu)	/* Message Object 28 Control Register */
#define CAN_MOCTR29	(*( CAN_MOCTR0_type *) 0xf00193bcu)	/* Message Object 29 Control Register */
#define CAN_MOCTR3	(*( CAN_MOCTR0_type *) 0xf001907cu)	/* Message Object 3 Control Register */
#define CAN_MOCTR30	(*( CAN_MOCTR0_type *) 0xf00193dcu)	/* Message Object 30 Control Register */
#define CAN_MOCTR31	(*( CAN_MOCTR0_type *) 0xf00193fcu)	/* Message Object 31 Control Register */
#define CAN_MOCTR32	(*( CAN_MOCTR0_type *) 0xf001941cu)	/* Message Object 32 Control Register */
#define CAN_MOCTR33	(*( CAN_MOCTR0_type *) 0xf001943cu)	/* Message Object 33 Control Register */
#define CAN_MOCTR34	(*( CAN_MOCTR0_type *) 0xf001945cu)	/* Message Object 34 Control Register */
#define CAN_MOCTR35	(*( CAN_MOCTR0_type *) 0xf001947cu)	/* Message Object 35 Control Register */
#define CAN_MOCTR36	(*( CAN_MOCTR0_type *) 0xf001949cu)	/* Message Object 36 Control Register */
#define CAN_MOCTR37	(*( CAN_MOCTR0_type *) 0xf00194bcu)	/* Message Object 37 Control Register */
#define CAN_MOCTR38	(*( CAN_MOCTR0_type *) 0xf00194dcu)	/* Message Object 38 Control Register */
#define CAN_MOCTR39	(*( CAN_MOCTR0_type *) 0xf00194fcu)	/* Message Object 39 Control Register */
#define CAN_MOCTR4	(*( CAN_MOCTR0_type *) 0xf001909cu)	/* Message Object 4 Control Register */
#define CAN_MOCTR40	(*( CAN_MOCTR0_type *) 0xf001951cu)	/* Message Object 40 Control Register */
#define CAN_MOCTR41	(*( CAN_MOCTR0_type *) 0xf001953cu)	/* Message Object 41 Control Register */
#define CAN_MOCTR42	(*( CAN_MOCTR0_type *) 0xf001955cu)	/* Message Object 42 Control Register */
#define CAN_MOCTR43	(*( CAN_MOCTR0_type *) 0xf001957cu)	/* Message Object 43 Control Register */
#define CAN_MOCTR44	(*( CAN_MOCTR0_type *) 0xf001959cu)	/* Message Object 44 Control Register */
#define CAN_MOCTR45	(*( CAN_MOCTR0_type *) 0xf00195bcu)	/* Message Object 45 Control Register */
#define CAN_MOCTR46	(*( CAN_MOCTR0_type *) 0xf00195dcu)	/* Message Object 46 Control Register */
#define CAN_MOCTR47	(*( CAN_MOCTR0_type *) 0xf00195fcu)	/* Message Object 47 Control Register */
#define CAN_MOCTR48	(*( CAN_MOCTR0_type *) 0xf001961cu)	/* Message Object 48 Control Register */
#define CAN_MOCTR49	(*( CAN_MOCTR0_type *) 0xf001963cu)	/* Message Object 49 Control Register */
#define CAN_MOCTR5	(*( CAN_MOCTR0_type *) 0xf00190bcu)	/* Message Object 5 Control Register */
#define CAN_MOCTR50	(*( CAN_MOCTR0_type *) 0xf001965cu)	/* Message Object 50 Control Register */
#define CAN_MOCTR51	(*( CAN_MOCTR0_type *) 0xf001967cu)	/* Message Object 51 Control Register */
#define CAN_MOCTR52	(*( CAN_MOCTR0_type *) 0xf001969cu)	/* Message Object 52 Control Register */
#define CAN_MOCTR53	(*( CAN_MOCTR0_type *) 0xf00196bcu)	/* Message Object 53 Control Register */
#define CAN_MOCTR54	(*( CAN_MOCTR0_type *) 0xf00196dcu)	/* Message Object 54 Control Register */
#define CAN_MOCTR55	(*( CAN_MOCTR0_type *) 0xf00196fcu)	/* Message Object 55 Control Register */
#define CAN_MOCTR56	(*( CAN_MOCTR0_type *) 0xf001971cu)	/* Message Object 56 Control Register */
#define CAN_MOCTR57	(*( CAN_MOCTR0_type *) 0xf001973cu)	/* Message Object 57 Control Register */
#define CAN_MOCTR58	(*( CAN_MOCTR0_type *) 0xf001975cu)	/* Message Object 58 Control Register */
#define CAN_MOCTR59	(*( CAN_MOCTR0_type *) 0xf001977cu)	/* Message Object 59 Control Register */
#define CAN_MOCTR6	(*( CAN_MOCTR0_type *) 0xf00190dcu)	/* Message Object 6 Control Register */
#define CAN_MOCTR60	(*( CAN_MOCTR0_type *) 0xf001979cu)	/* Message Object 60 Control Register */
#define CAN_MOCTR61	(*( CAN_MOCTR0_type *) 0xf00197bcu)	/* Message Object 61 Control Register */
#define CAN_MOCTR62	(*( CAN_MOCTR0_type *) 0xf00197dcu)	/* Message Object 62 Control Register */
#define CAN_MOCTR63	(*( CAN_MOCTR0_type *) 0xf00197fcu)	/* Message Object 63 Control Register */
#define CAN_MOCTR64	(*( CAN_MOCTR0_type *) 0xf001981cu)	/* Message Object 64 Control Register */
#define CAN_MOCTR65	(*( CAN_MOCTR0_type *) 0xf001983cu)	/* Message Object 65 Control Register */
#define CAN_MOCTR66	(*( CAN_MOCTR0_type *) 0xf001985cu)	/* Message Object 66 Control Register */
#define CAN_MOCTR67	(*( CAN_MOCTR0_type *) 0xf001987cu)	/* Message Object 67 Control Register */
#define CAN_MOCTR68	(*( CAN_MOCTR0_type *) 0xf001989cu)	/* Message Object 68 Control Register */
#define CAN_MOCTR69	(*( CAN_MOCTR0_type *) 0xf00198bcu)	/* Message Object 69 Control Register */
#define CAN_MOCTR7	(*( CAN_MOCTR0_type *) 0xf00190fcu)	/* Message Object 7 Control Register */
#define CAN_MOCTR70	(*( CAN_MOCTR0_type *) 0xf00198dcu)	/* Message Object 70 Control Register */
#define CAN_MOCTR71	(*( CAN_MOCTR0_type *) 0xf00198fcu)	/* Message Object 71 Control Register */
#define CAN_MOCTR72	(*( CAN_MOCTR0_type *) 0xf001991cu)	/* Message Object 72 Control Register */
#define CAN_MOCTR73	(*( CAN_MOCTR0_type *) 0xf001993cu)	/* Message Object 73 Control Register */
#define CAN_MOCTR74	(*( CAN_MOCTR0_type *) 0xf001995cu)	/* Message Object 74 Control Register */
#define CAN_MOCTR75	(*( CAN_MOCTR0_type *) 0xf001997cu)	/* Message Object 75 Control Register */
#define CAN_MOCTR76	(*( CAN_MOCTR0_type *) 0xf001999cu)	/* Message Object 76 Control Register */
#define CAN_MOCTR77	(*( CAN_MOCTR0_type *) 0xf00199bcu)	/* Message Object 77 Control Register */
#define CAN_MOCTR78	(*( CAN_MOCTR0_type *) 0xf00199dcu)	/* Message Object 78 Control Register */
#define CAN_MOCTR79	(*( CAN_MOCTR0_type *) 0xf00199fcu)	/* Message Object 79 Control Register */
#define CAN_MOCTR8	(*( CAN_MOCTR0_type *) 0xf001911cu)	/* Message Object 8 Control Register */
#define CAN_MOCTR80	(*( CAN_MOCTR0_type *) 0xf0019a1cu)	/* Message Object 80 Control Register */
#define CAN_MOCTR81	(*( CAN_MOCTR0_type *) 0xf0019a3cu)	/* Message Object 81 Control Register */
#define CAN_MOCTR82	(*( CAN_MOCTR0_type *) 0xf0019a5cu)	/* Message Object 82 Control Register */
#define CAN_MOCTR83	(*( CAN_MOCTR0_type *) 0xf0019a7cu)	/* Message Object 83 Control Register */
#define CAN_MOCTR84	(*( CAN_MOCTR0_type *) 0xf0019a9cu)	/* Message Object 84 Control Register */
#define CAN_MOCTR85	(*( CAN_MOCTR0_type *) 0xf0019abcu)	/* Message Object 85 Control Register */
#define CAN_MOCTR86	(*( CAN_MOCTR0_type *) 0xf0019adcu)	/* Message Object 86 Control Register */
#define CAN_MOCTR87	(*( CAN_MOCTR0_type *) 0xf0019afcu)	/* Message Object 87 Control Register */
#define CAN_MOCTR88	(*( CAN_MOCTR0_type *) 0xf0019b1cu)	/* Message Object 88 Control Register */
#define CAN_MOCTR89	(*( CAN_MOCTR0_type *) 0xf0019b3cu)	/* Message Object 89 Control Register */
#define CAN_MOCTR9	(*( CAN_MOCTR0_type *) 0xf001913cu)	/* Message Object 9 Control Register */
#define CAN_MOCTR90	(*( CAN_MOCTR0_type *) 0xf0019b5cu)	/* Message Object 90 Control Register */
#define CAN_MOCTR91	(*( CAN_MOCTR0_type *) 0xf0019b7cu)	/* Message Object 91 Control Register */
#define CAN_MOCTR92	(*( CAN_MOCTR0_type *) 0xf0019b9cu)	/* Message Object 92 Control Register */
#define CAN_MOCTR93	(*( CAN_MOCTR0_type *) 0xf0019bbcu)	/* Message Object 93 Control Register */
#define CAN_MOCTR94	(*( CAN_MOCTR0_type *) 0xf0019bdcu)	/* Message Object 94 Control Register */
#define CAN_MOCTR95	(*( CAN_MOCTR0_type *) 0xf0019bfcu)	/* Message Object 95 Control Register */
#define CAN_MOCTR96	(*( CAN_MOCTR0_type *) 0xf0019c1cu)	/* Message Object 96 Control Register */
#define CAN_MOCTR97	(*( CAN_MOCTR0_type *) 0xf0019c3cu)	/* Message Object 97 Control Register */
#define CAN_MOCTR98	(*( CAN_MOCTR0_type *) 0xf0019c5cu)	/* Message Object 98 Control Register */
#define CAN_MOCTR99	(*( CAN_MOCTR0_type *) 0xf0019c7cu)	/* Message Object 99 Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int DB4            : 8;	/* Data Byte 4 of Message Object n */
		unsigned int DB5            : 8;	/* Data Byte 5 of Message Object n */
		unsigned int DB6            : 8;	/* Data Byte 6 of Message Object n */
		unsigned int DB7            : 8;	/* Data Byte 7 of Message Object n */
	} B;
	int I;
	unsigned int U;

} CAN_MODATAH0_type;
#define CAN_MODATAH0	(*( CAN_MODATAH0_type *) 0xf0019014u)	/* Message Object 0 Data Register High */
#define CAN_MODATAH1	(*( CAN_MODATAH0_type *) 0xf0019034u)	/* Message Object 1 Data Register High */
#define CAN_MODATAH10	(*( CAN_MODATAH0_type *) 0xf0019154u)	/* Message Object 10 Data Register High */
#define CAN_MODATAH100	(*( CAN_MODATAH0_type *) 0xf0019c94u)	/* Message Object 100 Data Register High */
#define CAN_MODATAH101	(*( CAN_MODATAH0_type *) 0xf0019cb4u)	/* Message Object 101 Data Register High */
#define CAN_MODATAH102	(*( CAN_MODATAH0_type *) 0xf0019cd4u)	/* Message Object 102 Data Register High */
#define CAN_MODATAH103	(*( CAN_MODATAH0_type *) 0xf0019cf4u)	/* Message Object 103 Data Register High */
#define CAN_MODATAH104	(*( CAN_MODATAH0_type *) 0xf0019d14u)	/* Message Object 104 Data Register High */
#define CAN_MODATAH105	(*( CAN_MODATAH0_type *) 0xf0019d34u)	/* Message Object 105 Data Register High */
#define CAN_MODATAH106	(*( CAN_MODATAH0_type *) 0xf0019d54u)	/* Message Object 106 Data Register High */
#define CAN_MODATAH107	(*( CAN_MODATAH0_type *) 0xf0019d74u)	/* Message Object 107 Data Register High */
#define CAN_MODATAH108	(*( CAN_MODATAH0_type *) 0xf0019d94u)	/* Message Object 108 Data Register High */
#define CAN_MODATAH109	(*( CAN_MODATAH0_type *) 0xf0019db4u)	/* Message Object 109 Data Register High */
#define CAN_MODATAH11	(*( CAN_MODATAH0_type *) 0xf0019174u)	/* Message Object 11 Data Register High */
#define CAN_MODATAH110	(*( CAN_MODATAH0_type *) 0xf0019dd4u)	/* Message Object 110 Data Register High */
#define CAN_MODATAH111	(*( CAN_MODATAH0_type *) 0xf0019df4u)	/* Message Object 111 Data Register High */
#define CAN_MODATAH112	(*( CAN_MODATAH0_type *) 0xf0019e14u)	/* Message Object 112 Data Register High */
#define CAN_MODATAH113	(*( CAN_MODATAH0_type *) 0xf0019e34u)	/* Message Object 113 Data Register High */
#define CAN_MODATAH114	(*( CAN_MODATAH0_type *) 0xf0019e54u)	/* Message Object 114 Data Register High */
#define CAN_MODATAH115	(*( CAN_MODATAH0_type *) 0xf0019e74u)	/* Message Object 115 Data Register High */
#define CAN_MODATAH116	(*( CAN_MODATAH0_type *) 0xf0019e94u)	/* Message Object 116 Data Register High */
#define CAN_MODATAH117	(*( CAN_MODATAH0_type *) 0xf0019eb4u)	/* Message Object 117 Data Register High */
#define CAN_MODATAH118	(*( CAN_MODATAH0_type *) 0xf0019ed4u)	/* Message Object 118 Data Register High */
#define CAN_MODATAH119	(*( CAN_MODATAH0_type *) 0xf0019ef4u)	/* Message Object 119 Data Register High */
#define CAN_MODATAH12	(*( CAN_MODATAH0_type *) 0xf0019194u)	/* Message Object 12 Data Register High */
#define CAN_MODATAH120	(*( CAN_MODATAH0_type *) 0xf0019f14u)	/* Message Object 120 Data Register High */
#define CAN_MODATAH121	(*( CAN_MODATAH0_type *) 0xf0019f34u)	/* Message Object 121 Data Register High */
#define CAN_MODATAH122	(*( CAN_MODATAH0_type *) 0xf0019f54u)	/* Message Object 122 Data Register High */
#define CAN_MODATAH123	(*( CAN_MODATAH0_type *) 0xf0019f74u)	/* Message Object 123 Data Register High */
#define CAN_MODATAH124	(*( CAN_MODATAH0_type *) 0xf0019f94u)	/* Message Object 124 Data Register High */
#define CAN_MODATAH125	(*( CAN_MODATAH0_type *) 0xf0019fb4u)	/* Message Object 125 Data Register High */
#define CAN_MODATAH126	(*( CAN_MODATAH0_type *) 0xf0019fd4u)	/* Message Object 126 Data Register High */
#define CAN_MODATAH127	(*( CAN_MODATAH0_type *) 0xf0019ff4u)	/* Message Object 127 Data Register High */
#define CAN_MODATAH128	(*( CAN_MODATAH0_type *) 0xf001a014u)	/* Message Object 128 Data Register High */
#define CAN_MODATAH129	(*( CAN_MODATAH0_type *) 0xf001a034u)	/* Message Object 129 Data Register High */
#define CAN_MODATAH13	(*( CAN_MODATAH0_type *) 0xf00191b4u)	/* Message Object 13 Data Register High */
#define CAN_MODATAH130	(*( CAN_MODATAH0_type *) 0xf001a054u)	/* Message Object 130 Data Register High */
#define CAN_MODATAH131	(*( CAN_MODATAH0_type *) 0xf001a074u)	/* Message Object 131 Data Register High */
#define CAN_MODATAH132	(*( CAN_MODATAH0_type *) 0xf001a094u)	/* Message Object 132 Data Register High */
#define CAN_MODATAH133	(*( CAN_MODATAH0_type *) 0xf001a0b4u)	/* Message Object 133 Data Register High */
#define CAN_MODATAH134	(*( CAN_MODATAH0_type *) 0xf001a0d4u)	/* Message Object 134 Data Register High */
#define CAN_MODATAH135	(*( CAN_MODATAH0_type *) 0xf001a0f4u)	/* Message Object 135 Data Register High */
#define CAN_MODATAH136	(*( CAN_MODATAH0_type *) 0xf001a114u)	/* Message Object 136 Data Register High */
#define CAN_MODATAH137	(*( CAN_MODATAH0_type *) 0xf001a134u)	/* Message Object 137 Data Register High */
#define CAN_MODATAH138	(*( CAN_MODATAH0_type *) 0xf001a154u)	/* Message Object 138 Data Register High */
#define CAN_MODATAH139	(*( CAN_MODATAH0_type *) 0xf001a174u)	/* Message Object 139 Data Register High */
#define CAN_MODATAH14	(*( CAN_MODATAH0_type *) 0xf00191d4u)	/* Message Object 14 Data Register High */
#define CAN_MODATAH140	(*( CAN_MODATAH0_type *) 0xf001a194u)	/* Message Object 140 Data Register High */
#define CAN_MODATAH141	(*( CAN_MODATAH0_type *) 0xf001a1b4u)	/* Message Object 141 Data Register High */
#define CAN_MODATAH142	(*( CAN_MODATAH0_type *) 0xf001a1d4u)	/* Message Object 142 Data Register High */
#define CAN_MODATAH143	(*( CAN_MODATAH0_type *) 0xf001a1f4u)	/* Message Object 143 Data Register High */
#define CAN_MODATAH144	(*( CAN_MODATAH0_type *) 0xf001a214u)	/* Message Object 144 Data Register High */
#define CAN_MODATAH145	(*( CAN_MODATAH0_type *) 0xf001a234u)	/* Message Object 145 Data Register High */
#define CAN_MODATAH146	(*( CAN_MODATAH0_type *) 0xf001a254u)	/* Message Object 146 Data Register High */
#define CAN_MODATAH147	(*( CAN_MODATAH0_type *) 0xf001a274u)	/* Message Object 147 Data Register High */
#define CAN_MODATAH148	(*( CAN_MODATAH0_type *) 0xf001a294u)	/* Message Object 148 Data Register High */
#define CAN_MODATAH149	(*( CAN_MODATAH0_type *) 0xf001a2b4u)	/* Message Object 149 Data Register High */
#define CAN_MODATAH15	(*( CAN_MODATAH0_type *) 0xf00191f4u)	/* Message Object 15 Data Register High */
#define CAN_MODATAH150	(*( CAN_MODATAH0_type *) 0xf001a2d4u)	/* Message Object 150 Data Register High */
#define CAN_MODATAH151	(*( CAN_MODATAH0_type *) 0xf001a2f4u)	/* Message Object 151 Data Register High */
#define CAN_MODATAH152	(*( CAN_MODATAH0_type *) 0xf001a314u)	/* Message Object 152 Data Register High */
#define CAN_MODATAH153	(*( CAN_MODATAH0_type *) 0xf001a334u)	/* Message Object 153 Data Register High */
#define CAN_MODATAH154	(*( CAN_MODATAH0_type *) 0xf001a354u)	/* Message Object 154 Data Register High */
#define CAN_MODATAH155	(*( CAN_MODATAH0_type *) 0xf001a374u)	/* Message Object 155 Data Register High */
#define CAN_MODATAH156	(*( CAN_MODATAH0_type *) 0xf001a394u)	/* Message Object 156 Data Register High */
#define CAN_MODATAH157	(*( CAN_MODATAH0_type *) 0xf001a3b4u)	/* Message Object 157 Data Register High */
#define CAN_MODATAH158	(*( CAN_MODATAH0_type *) 0xf001a3d4u)	/* Message Object 158 Data Register High */
#define CAN_MODATAH159	(*( CAN_MODATAH0_type *) 0xf001a3f4u)	/* Message Object 159 Data Register High */
#define CAN_MODATAH16	(*( CAN_MODATAH0_type *) 0xf0019214u)	/* Message Object 16 Data Register High */
#define CAN_MODATAH160	(*( CAN_MODATAH0_type *) 0xf001a414u)	/* Message Object 160 Data Register High */
#define CAN_MODATAH161	(*( CAN_MODATAH0_type *) 0xf001a434u)	/* Message Object 161 Data Register High */
#define CAN_MODATAH162	(*( CAN_MODATAH0_type *) 0xf001a454u)	/* Message Object 162 Data Register High */
#define CAN_MODATAH163	(*( CAN_MODATAH0_type *) 0xf001a474u)	/* Message Object 163 Data Register High */
#define CAN_MODATAH164	(*( CAN_MODATAH0_type *) 0xf001a494u)	/* Message Object 164 Data Register High */
#define CAN_MODATAH165	(*( CAN_MODATAH0_type *) 0xf001a4b4u)	/* Message Object 165 Data Register High */
#define CAN_MODATAH166	(*( CAN_MODATAH0_type *) 0xf001a4d4u)	/* Message Object 166 Data Register High */
#define CAN_MODATAH167	(*( CAN_MODATAH0_type *) 0xf001a4f4u)	/* Message Object 167 Data Register High */
#define CAN_MODATAH168	(*( CAN_MODATAH0_type *) 0xf001a514u)	/* Message Object 168 Data Register High */
#define CAN_MODATAH169	(*( CAN_MODATAH0_type *) 0xf001a534u)	/* Message Object 169 Data Register High */
#define CAN_MODATAH17	(*( CAN_MODATAH0_type *) 0xf0019234u)	/* Message Object 17 Data Register High */
#define CAN_MODATAH170	(*( CAN_MODATAH0_type *) 0xf001a554u)	/* Message Object 170 Data Register High */
#define CAN_MODATAH171	(*( CAN_MODATAH0_type *) 0xf001a574u)	/* Message Object 171 Data Register High */
#define CAN_MODATAH172	(*( CAN_MODATAH0_type *) 0xf001a594u)	/* Message Object 172 Data Register High */
#define CAN_MODATAH173	(*( CAN_MODATAH0_type *) 0xf001a5b4u)	/* Message Object 173 Data Register High */
#define CAN_MODATAH174	(*( CAN_MODATAH0_type *) 0xf001a5d4u)	/* Message Object 174 Data Register High */
#define CAN_MODATAH175	(*( CAN_MODATAH0_type *) 0xf001a5f4u)	/* Message Object 175 Data Register High */
#define CAN_MODATAH176	(*( CAN_MODATAH0_type *) 0xf001a614u)	/* Message Object 176 Data Register High */
#define CAN_MODATAH177	(*( CAN_MODATAH0_type *) 0xf001a634u)	/* Message Object 177 Data Register High */
#define CAN_MODATAH178	(*( CAN_MODATAH0_type *) 0xf001a654u)	/* Message Object 178 Data Register High */
#define CAN_MODATAH179	(*( CAN_MODATAH0_type *) 0xf001a674u)	/* Message Object 179 Data Register High */
#define CAN_MODATAH18	(*( CAN_MODATAH0_type *) 0xf0019254u)	/* Message Object 18 Data Register High */
#define CAN_MODATAH180	(*( CAN_MODATAH0_type *) 0xf001a694u)	/* Message Object 180 Data Register High */
#define CAN_MODATAH181	(*( CAN_MODATAH0_type *) 0xf001a6b4u)	/* Message Object 181 Data Register High */
#define CAN_MODATAH182	(*( CAN_MODATAH0_type *) 0xf001a6d4u)	/* Message Object 182 Data Register High */
#define CAN_MODATAH183	(*( CAN_MODATAH0_type *) 0xf001a6f4u)	/* Message Object 183 Data Register High */
#define CAN_MODATAH184	(*( CAN_MODATAH0_type *) 0xf001a714u)	/* Message Object 184 Data Register High */
#define CAN_MODATAH185	(*( CAN_MODATAH0_type *) 0xf001a734u)	/* Message Object 185 Data Register High */
#define CAN_MODATAH186	(*( CAN_MODATAH0_type *) 0xf001a754u)	/* Message Object 186 Data Register High */
#define CAN_MODATAH187	(*( CAN_MODATAH0_type *) 0xf001a774u)	/* Message Object 187 Data Register High */
#define CAN_MODATAH188	(*( CAN_MODATAH0_type *) 0xf001a794u)	/* Message Object 188 Data Register High */
#define CAN_MODATAH189	(*( CAN_MODATAH0_type *) 0xf001a7b4u)	/* Message Object 189 Data Register High */
#define CAN_MODATAH19	(*( CAN_MODATAH0_type *) 0xf0019274u)	/* Message Object 19 Data Register High */
#define CAN_MODATAH190	(*( CAN_MODATAH0_type *) 0xf001a7d4u)	/* Message Object 190 Data Register High */
#define CAN_MODATAH191	(*( CAN_MODATAH0_type *) 0xf001a7f4u)	/* Message Object 191 Data Register High */
#define CAN_MODATAH192	(*( CAN_MODATAH0_type *) 0xf001a814u)	/* Message Object 192 Data Register High */
#define CAN_MODATAH193	(*( CAN_MODATAH0_type *) 0xf001a834u)	/* Message Object 193 Data Register High */
#define CAN_MODATAH194	(*( CAN_MODATAH0_type *) 0xf001a854u)	/* Message Object 194 Data Register High */
#define CAN_MODATAH195	(*( CAN_MODATAH0_type *) 0xf001a874u)	/* Message Object 195 Data Register High */
#define CAN_MODATAH196	(*( CAN_MODATAH0_type *) 0xf001a894u)	/* Message Object 196 Data Register High */
#define CAN_MODATAH197	(*( CAN_MODATAH0_type *) 0xf001a8b4u)	/* Message Object 197 Data Register High */
#define CAN_MODATAH198	(*( CAN_MODATAH0_type *) 0xf001a8d4u)	/* Message Object 198 Data Register High */
#define CAN_MODATAH199	(*( CAN_MODATAH0_type *) 0xf001a8f4u)	/* Message Object 199 Data Register High */
#define CAN_MODATAH2	(*( CAN_MODATAH0_type *) 0xf0019054u)	/* Message Object 2 Data Register High */
#define CAN_MODATAH20	(*( CAN_MODATAH0_type *) 0xf0019294u)	/* Message Object 20 Data Register High */
#define CAN_MODATAH200	(*( CAN_MODATAH0_type *) 0xf001a914u)	/* Message Object 200 Data Register High */
#define CAN_MODATAH201	(*( CAN_MODATAH0_type *) 0xf001a934u)	/* Message Object 201 Data Register High */
#define CAN_MODATAH202	(*( CAN_MODATAH0_type *) 0xf001a954u)	/* Message Object 202 Data Register High */
#define CAN_MODATAH203	(*( CAN_MODATAH0_type *) 0xf001a974u)	/* Message Object 203 Data Register High */
#define CAN_MODATAH204	(*( CAN_MODATAH0_type *) 0xf001a994u)	/* Message Object 204 Data Register High */
#define CAN_MODATAH205	(*( CAN_MODATAH0_type *) 0xf001a9b4u)	/* Message Object 205 Data Register High */
#define CAN_MODATAH206	(*( CAN_MODATAH0_type *) 0xf001a9d4u)	/* Message Object 206 Data Register High */
#define CAN_MODATAH207	(*( CAN_MODATAH0_type *) 0xf001a9f4u)	/* Message Object 207 Data Register High */
#define CAN_MODATAH208	(*( CAN_MODATAH0_type *) 0xf001aa14u)	/* Message Object 208 Data Register High */
#define CAN_MODATAH209	(*( CAN_MODATAH0_type *) 0xf001aa34u)	/* Message Object 209 Data Register High */
#define CAN_MODATAH21	(*( CAN_MODATAH0_type *) 0xf00192b4u)	/* Message Object 21 Data Register High */
#define CAN_MODATAH210	(*( CAN_MODATAH0_type *) 0xf001aa54u)	/* Message Object 210 Data Register High */
#define CAN_MODATAH211	(*( CAN_MODATAH0_type *) 0xf001aa74u)	/* Message Object 211 Data Register High */
#define CAN_MODATAH212	(*( CAN_MODATAH0_type *) 0xf001aa94u)	/* Message Object 212 Data Register High */
#define CAN_MODATAH213	(*( CAN_MODATAH0_type *) 0xf001aab4u)	/* Message Object 213 Data Register High */
#define CAN_MODATAH214	(*( CAN_MODATAH0_type *) 0xf001aad4u)	/* Message Object 214 Data Register High */
#define CAN_MODATAH215	(*( CAN_MODATAH0_type *) 0xf001aaf4u)	/* Message Object 215 Data Register High */
#define CAN_MODATAH216	(*( CAN_MODATAH0_type *) 0xf001ab14u)	/* Message Object 216 Data Register High */
#define CAN_MODATAH217	(*( CAN_MODATAH0_type *) 0xf001ab34u)	/* Message Object 217 Data Register High */
#define CAN_MODATAH218	(*( CAN_MODATAH0_type *) 0xf001ab54u)	/* Message Object 218 Data Register High */
#define CAN_MODATAH219	(*( CAN_MODATAH0_type *) 0xf001ab74u)	/* Message Object 219 Data Register High */
#define CAN_MODATAH22	(*( CAN_MODATAH0_type *) 0xf00192d4u)	/* Message Object 22 Data Register High */
#define CAN_MODATAH220	(*( CAN_MODATAH0_type *) 0xf001ab94u)	/* Message Object 220 Data Register High */
#define CAN_MODATAH221	(*( CAN_MODATAH0_type *) 0xf001abb4u)	/* Message Object 221 Data Register High */
#define CAN_MODATAH222	(*( CAN_MODATAH0_type *) 0xf001abd4u)	/* Message Object 222 Data Register High */
#define CAN_MODATAH223	(*( CAN_MODATAH0_type *) 0xf001abf4u)	/* Message Object 223 Data Register High */
#define CAN_MODATAH224	(*( CAN_MODATAH0_type *) 0xf001ac14u)	/* Message Object 224 Data Register High */
#define CAN_MODATAH225	(*( CAN_MODATAH0_type *) 0xf001ac34u)	/* Message Object 225 Data Register High */
#define CAN_MODATAH226	(*( CAN_MODATAH0_type *) 0xf001ac54u)	/* Message Object 226 Data Register High */
#define CAN_MODATAH227	(*( CAN_MODATAH0_type *) 0xf001ac74u)	/* Message Object 227 Data Register High */
#define CAN_MODATAH228	(*( CAN_MODATAH0_type *) 0xf001ac94u)	/* Message Object 228 Data Register High */
#define CAN_MODATAH229	(*( CAN_MODATAH0_type *) 0xf001acb4u)	/* Message Object 229 Data Register High */
#define CAN_MODATAH23	(*( CAN_MODATAH0_type *) 0xf00192f4u)	/* Message Object 23 Data Register High */
#define CAN_MODATAH230	(*( CAN_MODATAH0_type *) 0xf001acd4u)	/* Message Object 230 Data Register High */
#define CAN_MODATAH231	(*( CAN_MODATAH0_type *) 0xf001acf4u)	/* Message Object 231 Data Register High */
#define CAN_MODATAH232	(*( CAN_MODATAH0_type *) 0xf001ad14u)	/* Message Object 232 Data Register High */
#define CAN_MODATAH233	(*( CAN_MODATAH0_type *) 0xf001ad34u)	/* Message Object 233 Data Register High */
#define CAN_MODATAH234	(*( CAN_MODATAH0_type *) 0xf001ad54u)	/* Message Object 234 Data Register High */
#define CAN_MODATAH235	(*( CAN_MODATAH0_type *) 0xf001ad74u)	/* Message Object 235 Data Register High */
#define CAN_MODATAH236	(*( CAN_MODATAH0_type *) 0xf001ad94u)	/* Message Object 236 Data Register High */
#define CAN_MODATAH237	(*( CAN_MODATAH0_type *) 0xf001adb4u)	/* Message Object 237 Data Register High */
#define CAN_MODATAH238	(*( CAN_MODATAH0_type *) 0xf001add4u)	/* Message Object 238 Data Register High */
#define CAN_MODATAH239	(*( CAN_MODATAH0_type *) 0xf001adf4u)	/* Message Object 239 Data Register High */
#define CAN_MODATAH24	(*( CAN_MODATAH0_type *) 0xf0019314u)	/* Message Object 24 Data Register High */
#define CAN_MODATAH240	(*( CAN_MODATAH0_type *) 0xf001ae14u)	/* Message Object 240 Data Register High */
#define CAN_MODATAH241	(*( CAN_MODATAH0_type *) 0xf001ae34u)	/* Message Object 241 Data Register High */
#define CAN_MODATAH242	(*( CAN_MODATAH0_type *) 0xf001ae54u)	/* Message Object 242 Data Register High */
#define CAN_MODATAH243	(*( CAN_MODATAH0_type *) 0xf001ae74u)	/* Message Object 243 Data Register High */
#define CAN_MODATAH244	(*( CAN_MODATAH0_type *) 0xf001ae94u)	/* Message Object 244 Data Register High */
#define CAN_MODATAH245	(*( CAN_MODATAH0_type *) 0xf001aeb4u)	/* Message Object 245 Data Register High */
#define CAN_MODATAH246	(*( CAN_MODATAH0_type *) 0xf001aed4u)	/* Message Object 246 Data Register High */
#define CAN_MODATAH247	(*( CAN_MODATAH0_type *) 0xf001aef4u)	/* Message Object 247 Data Register High */
#define CAN_MODATAH248	(*( CAN_MODATAH0_type *) 0xf001af14u)	/* Message Object 248 Data Register High */
#define CAN_MODATAH249	(*( CAN_MODATAH0_type *) 0xf001af34u)	/* Message Object 249 Data Register High */
#define CAN_MODATAH25	(*( CAN_MODATAH0_type *) 0xf0019334u)	/* Message Object 25 Data Register High */
#define CAN_MODATAH250	(*( CAN_MODATAH0_type *) 0xf001af54u)	/* Message Object 250 Data Register High */
#define CAN_MODATAH251	(*( CAN_MODATAH0_type *) 0xf001af74u)	/* Message Object 251 Data Register High */
#define CAN_MODATAH252	(*( CAN_MODATAH0_type *) 0xf001af94u)	/* Message Object 252 Data Register High */
#define CAN_MODATAH253	(*( CAN_MODATAH0_type *) 0xf001afb4u)	/* Message Object 253 Data Register High */
#define CAN_MODATAH254	(*( CAN_MODATAH0_type *) 0xf001afd4u)	/* Message Object 254 Data Register High */
#define CAN_MODATAH255	(*( CAN_MODATAH0_type *) 0xf001aff4u)	/* Message Object 255 Data Register High */
#define CAN_MODATAH26	(*( CAN_MODATAH0_type *) 0xf0019354u)	/* Message Object 26 Data Register High */
#define CAN_MODATAH27	(*( CAN_MODATAH0_type *) 0xf0019374u)	/* Message Object 27 Data Register High */
#define CAN_MODATAH28	(*( CAN_MODATAH0_type *) 0xf0019394u)	/* Message Object 28 Data Register High */
#define CAN_MODATAH29	(*( CAN_MODATAH0_type *) 0xf00193b4u)	/* Message Object 29 Data Register High */
#define CAN_MODATAH3	(*( CAN_MODATAH0_type *) 0xf0019074u)	/* Message Object 3 Data Register High */
#define CAN_MODATAH30	(*( CAN_MODATAH0_type *) 0xf00193d4u)	/* Message Object 30 Data Register High */
#define CAN_MODATAH31	(*( CAN_MODATAH0_type *) 0xf00193f4u)	/* Message Object 31 Data Register High */
#define CAN_MODATAH32	(*( CAN_MODATAH0_type *) 0xf0019414u)	/* Message Object 32 Data Register High */
#define CAN_MODATAH33	(*( CAN_MODATAH0_type *) 0xf0019434u)	/* Message Object 33 Data Register High */
#define CAN_MODATAH34	(*( CAN_MODATAH0_type *) 0xf0019454u)	/* Message Object 34 Data Register High */
#define CAN_MODATAH35	(*( CAN_MODATAH0_type *) 0xf0019474u)	/* Message Object 35 Data Register High */
#define CAN_MODATAH36	(*( CAN_MODATAH0_type *) 0xf0019494u)	/* Message Object 36 Data Register High */
#define CAN_MODATAH37	(*( CAN_MODATAH0_type *) 0xf00194b4u)	/* Message Object 37 Data Register High */
#define CAN_MODATAH38	(*( CAN_MODATAH0_type *) 0xf00194d4u)	/* Message Object 38 Data Register High */
#define CAN_MODATAH39	(*( CAN_MODATAH0_type *) 0xf00194f4u)	/* Message Object 39 Data Register High */
#define CAN_MODATAH4	(*( CAN_MODATAH0_type *) 0xf0019094u)	/* Message Object 4 Data Register High */
#define CAN_MODATAH40	(*( CAN_MODATAH0_type *) 0xf0019514u)	/* Message Object 40 Data Register High */
#define CAN_MODATAH41	(*( CAN_MODATAH0_type *) 0xf0019534u)	/* Message Object 41 Data Register High */
#define CAN_MODATAH42	(*( CAN_MODATAH0_type *) 0xf0019554u)	/* Message Object 42 Data Register High */
#define CAN_MODATAH43	(*( CAN_MODATAH0_type *) 0xf0019574u)	/* Message Object 43 Data Register High */
#define CAN_MODATAH44	(*( CAN_MODATAH0_type *) 0xf0019594u)	/* Message Object 44 Data Register High */
#define CAN_MODATAH45	(*( CAN_MODATAH0_type *) 0xf00195b4u)	/* Message Object 45 Data Register High */
#define CAN_MODATAH46	(*( CAN_MODATAH0_type *) 0xf00195d4u)	/* Message Object 46 Data Register High */
#define CAN_MODATAH47	(*( CAN_MODATAH0_type *) 0xf00195f4u)	/* Message Object 47 Data Register High */
#define CAN_MODATAH48	(*( CAN_MODATAH0_type *) 0xf0019614u)	/* Message Object 48 Data Register High */
#define CAN_MODATAH49	(*( CAN_MODATAH0_type *) 0xf0019634u)	/* Message Object 49 Data Register High */
#define CAN_MODATAH5	(*( CAN_MODATAH0_type *) 0xf00190b4u)	/* Message Object 5 Data Register High */
#define CAN_MODATAH50	(*( CAN_MODATAH0_type *) 0xf0019654u)	/* Message Object 50 Data Register High */
#define CAN_MODATAH51	(*( CAN_MODATAH0_type *) 0xf0019674u)	/* Message Object 51 Data Register High */
#define CAN_MODATAH52	(*( CAN_MODATAH0_type *) 0xf0019694u)	/* Message Object 52 Data Register High */
#define CAN_MODATAH53	(*( CAN_MODATAH0_type *) 0xf00196b4u)	/* Message Object 53 Data Register High */
#define CAN_MODATAH54	(*( CAN_MODATAH0_type *) 0xf00196d4u)	/* Message Object 54 Data Register High */
#define CAN_MODATAH55	(*( CAN_MODATAH0_type *) 0xf00196f4u)	/* Message Object 55 Data Register High */
#define CAN_MODATAH56	(*( CAN_MODATAH0_type *) 0xf0019714u)	/* Message Object 56 Data Register High */
#define CAN_MODATAH57	(*( CAN_MODATAH0_type *) 0xf0019734u)	/* Message Object 57 Data Register High */
#define CAN_MODATAH58	(*( CAN_MODATAH0_type *) 0xf0019754u)	/* Message Object 58 Data Register High */
#define CAN_MODATAH59	(*( CAN_MODATAH0_type *) 0xf0019774u)	/* Message Object 59 Data Register High */
#define CAN_MODATAH6	(*( CAN_MODATAH0_type *) 0xf00190d4u)	/* Message Object 6 Data Register High */
#define CAN_MODATAH60	(*( CAN_MODATAH0_type *) 0xf0019794u)	/* Message Object 60 Data Register High */
#define CAN_MODATAH61	(*( CAN_MODATAH0_type *) 0xf00197b4u)	/* Message Object 61 Data Register High */
#define CAN_MODATAH62	(*( CAN_MODATAH0_type *) 0xf00197d4u)	/* Message Object 62 Data Register High */
#define CAN_MODATAH63	(*( CAN_MODATAH0_type *) 0xf00197f4u)	/* Message Object 63 Data Register High */
#define CAN_MODATAH64	(*( CAN_MODATAH0_type *) 0xf0019814u)	/* Message Object 64 Data Register High */
#define CAN_MODATAH65	(*( CAN_MODATAH0_type *) 0xf0019834u)	/* Message Object 65 Data Register High */
#define CAN_MODATAH66	(*( CAN_MODATAH0_type *) 0xf0019854u)	/* Message Object 66 Data Register High */
#define CAN_MODATAH67	(*( CAN_MODATAH0_type *) 0xf0019874u)	/* Message Object 67 Data Register High */
#define CAN_MODATAH68	(*( CAN_MODATAH0_type *) 0xf0019894u)	/* Message Object 68 Data Register High */
#define CAN_MODATAH69	(*( CAN_MODATAH0_type *) 0xf00198b4u)	/* Message Object 69 Data Register High */
#define CAN_MODATAH7	(*( CAN_MODATAH0_type *) 0xf00190f4u)	/* Message Object 7 Data Register High */
#define CAN_MODATAH70	(*( CAN_MODATAH0_type *) 0xf00198d4u)	/* Message Object 70 Data Register High */
#define CAN_MODATAH71	(*( CAN_MODATAH0_type *) 0xf00198f4u)	/* Message Object 71 Data Register High */
#define CAN_MODATAH72	(*( CAN_MODATAH0_type *) 0xf0019914u)	/* Message Object 72 Data Register High */
#define CAN_MODATAH73	(*( CAN_MODATAH0_type *) 0xf0019934u)	/* Message Object 73 Data Register High */
#define CAN_MODATAH74	(*( CAN_MODATAH0_type *) 0xf0019954u)	/* Message Object 74 Data Register High */
#define CAN_MODATAH75	(*( CAN_MODATAH0_type *) 0xf0019974u)	/* Message Object 75 Data Register High */
#define CAN_MODATAH76	(*( CAN_MODATAH0_type *) 0xf0019994u)	/* Message Object 76 Data Register High */
#define CAN_MODATAH77	(*( CAN_MODATAH0_type *) 0xf00199b4u)	/* Message Object 77 Data Register High */
#define CAN_MODATAH78	(*( CAN_MODATAH0_type *) 0xf00199d4u)	/* Message Object 78 Data Register High */
#define CAN_MODATAH79	(*( CAN_MODATAH0_type *) 0xf00199f4u)	/* Message Object 79 Data Register High */
#define CAN_MODATAH8	(*( CAN_MODATAH0_type *) 0xf0019114u)	/* Message Object 8 Data Register High */
#define CAN_MODATAH80	(*( CAN_MODATAH0_type *) 0xf0019a14u)	/* Message Object 80 Data Register High */
#define CAN_MODATAH81	(*( CAN_MODATAH0_type *) 0xf0019a34u)	/* Message Object 81 Data Register High */
#define CAN_MODATAH82	(*( CAN_MODATAH0_type *) 0xf0019a54u)	/* Message Object 82 Data Register High */
#define CAN_MODATAH83	(*( CAN_MODATAH0_type *) 0xf0019a74u)	/* Message Object 83 Data Register High */
#define CAN_MODATAH84	(*( CAN_MODATAH0_type *) 0xf0019a94u)	/* Message Object 84 Data Register High */
#define CAN_MODATAH85	(*( CAN_MODATAH0_type *) 0xf0019ab4u)	/* Message Object 85 Data Register High */
#define CAN_MODATAH86	(*( CAN_MODATAH0_type *) 0xf0019ad4u)	/* Message Object 86 Data Register High */
#define CAN_MODATAH87	(*( CAN_MODATAH0_type *) 0xf0019af4u)	/* Message Object 87 Data Register High */
#define CAN_MODATAH88	(*( CAN_MODATAH0_type *) 0xf0019b14u)	/* Message Object 88 Data Register High */
#define CAN_MODATAH89	(*( CAN_MODATAH0_type *) 0xf0019b34u)	/* Message Object 89 Data Register High */
#define CAN_MODATAH9	(*( CAN_MODATAH0_type *) 0xf0019134u)	/* Message Object 9 Data Register High */
#define CAN_MODATAH90	(*( CAN_MODATAH0_type *) 0xf0019b54u)	/* Message Object 90 Data Register High */
#define CAN_MODATAH91	(*( CAN_MODATAH0_type *) 0xf0019b74u)	/* Message Object 91 Data Register High */
#define CAN_MODATAH92	(*( CAN_MODATAH0_type *) 0xf0019b94u)	/* Message Object 92 Data Register High */
#define CAN_MODATAH93	(*( CAN_MODATAH0_type *) 0xf0019bb4u)	/* Message Object 93 Data Register High */
#define CAN_MODATAH94	(*( CAN_MODATAH0_type *) 0xf0019bd4u)	/* Message Object 94 Data Register High */
#define CAN_MODATAH95	(*( CAN_MODATAH0_type *) 0xf0019bf4u)	/* Message Object 95 Data Register High */
#define CAN_MODATAH96	(*( CAN_MODATAH0_type *) 0xf0019c14u)	/* Message Object 96 Data Register High */
#define CAN_MODATAH97	(*( CAN_MODATAH0_type *) 0xf0019c34u)	/* Message Object 97 Data Register High */
#define CAN_MODATAH98	(*( CAN_MODATAH0_type *) 0xf0019c54u)	/* Message Object 98 Data Register High */
#define CAN_MODATAH99	(*( CAN_MODATAH0_type *) 0xf0019c74u)	/* Message Object 99 Data Register High */

typedef volatile union
{
	struct
	{ 
		unsigned int MMC            : 4;	/* Message Mode Control */
		unsigned int RXTOE          : 1;	/* Receive Time-Out Enable */
		unsigned int BRS            : 1;	/* Bit Rate Switch */
		unsigned int FDF            : 1;	/* CAN FD Frame Format */
		unsigned int                : 1;
		unsigned int GDFS           : 1;	/* Gateway Data Frame Send */
		unsigned int IDC            : 1;	/* Identifier Copy */
		unsigned int DLCC           : 1;	/* Data Length Code Copy */
		unsigned int DATC           : 1;	/* Data Copy */
		unsigned int                : 4;
		unsigned int RXIE           : 1;	/* Receive Interrupt Enable */
		unsigned int TXIE           : 1;	/* Transmit Interrupt Enable */
		unsigned int OVIE           : 1;	/* Overflow Interrupt Enable */
		unsigned int                : 1;
		unsigned int FRREN          : 1;	/* Foreign Remote Request Enable */
		unsigned int RMM            : 1;	/* Transmit Object Remote Monitoring */
		unsigned int SDT            : 1;	/* Single Data Transfer */
		unsigned int STT            : 1;	/* Single Transmit Trial */
		unsigned int DLC            : 4;	/* Data Length Code */
		unsigned int                : 4;
	} B;
	int I;
	unsigned int U;

} CAN_MOFCR0_type;
#define CAN_MOFCR0	(*( CAN_MOFCR0_type *) 0xf0019000u)	/* Message Object 0 Function Control Register */
#define CAN_MOFCR1	(*( CAN_MOFCR0_type *) 0xf0019020u)	/* Message Object 1 Function Control Register */
#define CAN_MOFCR10	(*( CAN_MOFCR0_type *) 0xf0019140u)	/* Message Object 10 Function Control Register */
#define CAN_MOFCR100	(*( CAN_MOFCR0_type *) 0xf0019c80u)	/* Message Object 100 Function Control Register */
#define CAN_MOFCR101	(*( CAN_MOFCR0_type *) 0xf0019ca0u)	/* Message Object 101 Function Control Register */
#define CAN_MOFCR102	(*( CAN_MOFCR0_type *) 0xf0019cc0u)	/* Message Object 102 Function Control Register */
#define CAN_MOFCR103	(*( CAN_MOFCR0_type *) 0xf0019ce0u)	/* Message Object 103 Function Control Register */
#define CAN_MOFCR104	(*( CAN_MOFCR0_type *) 0xf0019d00u)	/* Message Object 104 Function Control Register */
#define CAN_MOFCR105	(*( CAN_MOFCR0_type *) 0xf0019d20u)	/* Message Object 105 Function Control Register */
#define CAN_MOFCR106	(*( CAN_MOFCR0_type *) 0xf0019d40u)	/* Message Object 106 Function Control Register */
#define CAN_MOFCR107	(*( CAN_MOFCR0_type *) 0xf0019d60u)	/* Message Object 107 Function Control Register */
#define CAN_MOFCR108	(*( CAN_MOFCR0_type *) 0xf0019d80u)	/* Message Object 108 Function Control Register */
#define CAN_MOFCR109	(*( CAN_MOFCR0_type *) 0xf0019da0u)	/* Message Object 109 Function Control Register */
#define CAN_MOFCR11	(*( CAN_MOFCR0_type *) 0xf0019160u)	/* Message Object 11 Function Control Register */
#define CAN_MOFCR110	(*( CAN_MOFCR0_type *) 0xf0019dc0u)	/* Message Object 110 Function Control Register */
#define CAN_MOFCR111	(*( CAN_MOFCR0_type *) 0xf0019de0u)	/* Message Object 111 Function Control Register */
#define CAN_MOFCR112	(*( CAN_MOFCR0_type *) 0xf0019e00u)	/* Message Object 112 Function Control Register */
#define CAN_MOFCR113	(*( CAN_MOFCR0_type *) 0xf0019e20u)	/* Message Object 113 Function Control Register */
#define CAN_MOFCR114	(*( CAN_MOFCR0_type *) 0xf0019e40u)	/* Message Object 114 Function Control Register */
#define CAN_MOFCR115	(*( CAN_MOFCR0_type *) 0xf0019e60u)	/* Message Object 115 Function Control Register */
#define CAN_MOFCR116	(*( CAN_MOFCR0_type *) 0xf0019e80u)	/* Message Object 116 Function Control Register */
#define CAN_MOFCR117	(*( CAN_MOFCR0_type *) 0xf0019ea0u)	/* Message Object 117 Function Control Register */
#define CAN_MOFCR118	(*( CAN_MOFCR0_type *) 0xf0019ec0u)	/* Message Object 118 Function Control Register */
#define CAN_MOFCR119	(*( CAN_MOFCR0_type *) 0xf0019ee0u)	/* Message Object 119 Function Control Register */
#define CAN_MOFCR12	(*( CAN_MOFCR0_type *) 0xf0019180u)	/* Message Object 12 Function Control Register */
#define CAN_MOFCR120	(*( CAN_MOFCR0_type *) 0xf0019f00u)	/* Message Object 120 Function Control Register */
#define CAN_MOFCR121	(*( CAN_MOFCR0_type *) 0xf0019f20u)	/* Message Object 121 Function Control Register */
#define CAN_MOFCR122	(*( CAN_MOFCR0_type *) 0xf0019f40u)	/* Message Object 122 Function Control Register */
#define CAN_MOFCR123	(*( CAN_MOFCR0_type *) 0xf0019f60u)	/* Message Object 123 Function Control Register */
#define CAN_MOFCR124	(*( CAN_MOFCR0_type *) 0xf0019f80u)	/* Message Object 124 Function Control Register */
#define CAN_MOFCR125	(*( CAN_MOFCR0_type *) 0xf0019fa0u)	/* Message Object 125 Function Control Register */
#define CAN_MOFCR126	(*( CAN_MOFCR0_type *) 0xf0019fc0u)	/* Message Object 126 Function Control Register */
#define CAN_MOFCR127	(*( CAN_MOFCR0_type *) 0xf0019fe0u)	/* Message Object 127 Function Control Register */
#define CAN_MOFCR128	(*( CAN_MOFCR0_type *) 0xf001a000u)	/* Message Object 128 Function Control Register */
#define CAN_MOFCR129	(*( CAN_MOFCR0_type *) 0xf001a020u)	/* Message Object 129 Function Control Register */
#define CAN_MOFCR13	(*( CAN_MOFCR0_type *) 0xf00191a0u)	/* Message Object 13 Function Control Register */
#define CAN_MOFCR130	(*( CAN_MOFCR0_type *) 0xf001a040u)	/* Message Object 130 Function Control Register */
#define CAN_MOFCR131	(*( CAN_MOFCR0_type *) 0xf001a060u)	/* Message Object 131 Function Control Register */
#define CAN_MOFCR132	(*( CAN_MOFCR0_type *) 0xf001a080u)	/* Message Object 132 Function Control Register */
#define CAN_MOFCR133	(*( CAN_MOFCR0_type *) 0xf001a0a0u)	/* Message Object 133 Function Control Register */
#define CAN_MOFCR134	(*( CAN_MOFCR0_type *) 0xf001a0c0u)	/* Message Object 134 Function Control Register */
#define CAN_MOFCR135	(*( CAN_MOFCR0_type *) 0xf001a0e0u)	/* Message Object 135 Function Control Register */
#define CAN_MOFCR136	(*( CAN_MOFCR0_type *) 0xf001a100u)	/* Message Object 136 Function Control Register */
#define CAN_MOFCR137	(*( CAN_MOFCR0_type *) 0xf001a120u)	/* Message Object 137 Function Control Register */
#define CAN_MOFCR138	(*( CAN_MOFCR0_type *) 0xf001a140u)	/* Message Object 138 Function Control Register */
#define CAN_MOFCR139	(*( CAN_MOFCR0_type *) 0xf001a160u)	/* Message Object 139 Function Control Register */
#define CAN_MOFCR14	(*( CAN_MOFCR0_type *) 0xf00191c0u)	/* Message Object 14 Function Control Register */
#define CAN_MOFCR140	(*( CAN_MOFCR0_type *) 0xf001a180u)	/* Message Object 140 Function Control Register */
#define CAN_MOFCR141	(*( CAN_MOFCR0_type *) 0xf001a1a0u)	/* Message Object 141 Function Control Register */
#define CAN_MOFCR142	(*( CAN_MOFCR0_type *) 0xf001a1c0u)	/* Message Object 142 Function Control Register */
#define CAN_MOFCR143	(*( CAN_MOFCR0_type *) 0xf001a1e0u)	/* Message Object 143 Function Control Register */
#define CAN_MOFCR144	(*( CAN_MOFCR0_type *) 0xf001a200u)	/* Message Object 144 Function Control Register */
#define CAN_MOFCR145	(*( CAN_MOFCR0_type *) 0xf001a220u)	/* Message Object 145 Function Control Register */
#define CAN_MOFCR146	(*( CAN_MOFCR0_type *) 0xf001a240u)	/* Message Object 146 Function Control Register */
#define CAN_MOFCR147	(*( CAN_MOFCR0_type *) 0xf001a260u)	/* Message Object 147 Function Control Register */
#define CAN_MOFCR148	(*( CAN_MOFCR0_type *) 0xf001a280u)	/* Message Object 148 Function Control Register */
#define CAN_MOFCR149	(*( CAN_MOFCR0_type *) 0xf001a2a0u)	/* Message Object 149 Function Control Register */
#define CAN_MOFCR15	(*( CAN_MOFCR0_type *) 0xf00191e0u)	/* Message Object 15 Function Control Register */
#define CAN_MOFCR150	(*( CAN_MOFCR0_type *) 0xf001a2c0u)	/* Message Object 150 Function Control Register */
#define CAN_MOFCR151	(*( CAN_MOFCR0_type *) 0xf001a2e0u)	/* Message Object 151 Function Control Register */
#define CAN_MOFCR152	(*( CAN_MOFCR0_type *) 0xf001a300u)	/* Message Object 152 Function Control Register */
#define CAN_MOFCR153	(*( CAN_MOFCR0_type *) 0xf001a320u)	/* Message Object 153 Function Control Register */
#define CAN_MOFCR154	(*( CAN_MOFCR0_type *) 0xf001a340u)	/* Message Object 154 Function Control Register */
#define CAN_MOFCR155	(*( CAN_MOFCR0_type *) 0xf001a360u)	/* Message Object 155 Function Control Register */
#define CAN_MOFCR156	(*( CAN_MOFCR0_type *) 0xf001a380u)	/* Message Object 156 Function Control Register */
#define CAN_MOFCR157	(*( CAN_MOFCR0_type *) 0xf001a3a0u)	/* Message Object 157 Function Control Register */
#define CAN_MOFCR158	(*( CAN_MOFCR0_type *) 0xf001a3c0u)	/* Message Object 158 Function Control Register */
#define CAN_MOFCR159	(*( CAN_MOFCR0_type *) 0xf001a3e0u)	/* Message Object 159 Function Control Register */
#define CAN_MOFCR16	(*( CAN_MOFCR0_type *) 0xf0019200u)	/* Message Object 16 Function Control Register */
#define CAN_MOFCR160	(*( CAN_MOFCR0_type *) 0xf001a400u)	/* Message Object 160 Function Control Register */
#define CAN_MOFCR161	(*( CAN_MOFCR0_type *) 0xf001a420u)	/* Message Object 161 Function Control Register */
#define CAN_MOFCR162	(*( CAN_MOFCR0_type *) 0xf001a440u)	/* Message Object 162 Function Control Register */
#define CAN_MOFCR163	(*( CAN_MOFCR0_type *) 0xf001a460u)	/* Message Object 163 Function Control Register */
#define CAN_MOFCR164	(*( CAN_MOFCR0_type *) 0xf001a480u)	/* Message Object 164 Function Control Register */
#define CAN_MOFCR165	(*( CAN_MOFCR0_type *) 0xf001a4a0u)	/* Message Object 165 Function Control Register */
#define CAN_MOFCR166	(*( CAN_MOFCR0_type *) 0xf001a4c0u)	/* Message Object 166 Function Control Register */
#define CAN_MOFCR167	(*( CAN_MOFCR0_type *) 0xf001a4e0u)	/* Message Object 167 Function Control Register */
#define CAN_MOFCR168	(*( CAN_MOFCR0_type *) 0xf001a500u)	/* Message Object 168 Function Control Register */
#define CAN_MOFCR169	(*( CAN_MOFCR0_type *) 0xf001a520u)	/* Message Object 169 Function Control Register */
#define CAN_MOFCR17	(*( CAN_MOFCR0_type *) 0xf0019220u)	/* Message Object 17 Function Control Register */
#define CAN_MOFCR170	(*( CAN_MOFCR0_type *) 0xf001a540u)	/* Message Object 170 Function Control Register */
#define CAN_MOFCR171	(*( CAN_MOFCR0_type *) 0xf001a560u)	/* Message Object 171 Function Control Register */
#define CAN_MOFCR172	(*( CAN_MOFCR0_type *) 0xf001a580u)	/* Message Object 172 Function Control Register */
#define CAN_MOFCR173	(*( CAN_MOFCR0_type *) 0xf001a5a0u)	/* Message Object 173 Function Control Register */
#define CAN_MOFCR174	(*( CAN_MOFCR0_type *) 0xf001a5c0u)	/* Message Object 174 Function Control Register */
#define CAN_MOFCR175	(*( CAN_MOFCR0_type *) 0xf001a5e0u)	/* Message Object 175 Function Control Register */
#define CAN_MOFCR176	(*( CAN_MOFCR0_type *) 0xf001a600u)	/* Message Object 176 Function Control Register */
#define CAN_MOFCR177	(*( CAN_MOFCR0_type *) 0xf001a620u)	/* Message Object 177 Function Control Register */
#define CAN_MOFCR178	(*( CAN_MOFCR0_type *) 0xf001a640u)	/* Message Object 178 Function Control Register */
#define CAN_MOFCR179	(*( CAN_MOFCR0_type *) 0xf001a660u)	/* Message Object 179 Function Control Register */
#define CAN_MOFCR18	(*( CAN_MOFCR0_type *) 0xf0019240u)	/* Message Object 18 Function Control Register */
#define CAN_MOFCR180	(*( CAN_MOFCR0_type *) 0xf001a680u)	/* Message Object 180 Function Control Register */
#define CAN_MOFCR181	(*( CAN_MOFCR0_type *) 0xf001a6a0u)	/* Message Object 181 Function Control Register */
#define CAN_MOFCR182	(*( CAN_MOFCR0_type *) 0xf001a6c0u)	/* Message Object 182 Function Control Register */
#define CAN_MOFCR183	(*( CAN_MOFCR0_type *) 0xf001a6e0u)	/* Message Object 183 Function Control Register */
#define CAN_MOFCR184	(*( CAN_MOFCR0_type *) 0xf001a700u)	/* Message Object 184 Function Control Register */
#define CAN_MOFCR185	(*( CAN_MOFCR0_type *) 0xf001a720u)	/* Message Object 185 Function Control Register */
#define CAN_MOFCR186	(*( CAN_MOFCR0_type *) 0xf001a740u)	/* Message Object 186 Function Control Register */
#define CAN_MOFCR187	(*( CAN_MOFCR0_type *) 0xf001a760u)	/* Message Object 187 Function Control Register */
#define CAN_MOFCR188	(*( CAN_MOFCR0_type *) 0xf001a780u)	/* Message Object 188 Function Control Register */
#define CAN_MOFCR189	(*( CAN_MOFCR0_type *) 0xf001a7a0u)	/* Message Object 189 Function Control Register */
#define CAN_MOFCR19	(*( CAN_MOFCR0_type *) 0xf0019260u)	/* Message Object 19 Function Control Register */
#define CAN_MOFCR190	(*( CAN_MOFCR0_type *) 0xf001a7c0u)	/* Message Object 190 Function Control Register */
#define CAN_MOFCR191	(*( CAN_MOFCR0_type *) 0xf001a7e0u)	/* Message Object 191 Function Control Register */
#define CAN_MOFCR192	(*( CAN_MOFCR0_type *) 0xf001a800u)	/* Message Object 192 Function Control Register */
#define CAN_MOFCR193	(*( CAN_MOFCR0_type *) 0xf001a820u)	/* Message Object 193 Function Control Register */
#define CAN_MOFCR194	(*( CAN_MOFCR0_type *) 0xf001a840u)	/* Message Object 194 Function Control Register */
#define CAN_MOFCR195	(*( CAN_MOFCR0_type *) 0xf001a860u)	/* Message Object 195 Function Control Register */
#define CAN_MOFCR196	(*( CAN_MOFCR0_type *) 0xf001a880u)	/* Message Object 196 Function Control Register */
#define CAN_MOFCR197	(*( CAN_MOFCR0_type *) 0xf001a8a0u)	/* Message Object 197 Function Control Register */
#define CAN_MOFCR198	(*( CAN_MOFCR0_type *) 0xf001a8c0u)	/* Message Object 198 Function Control Register */
#define CAN_MOFCR199	(*( CAN_MOFCR0_type *) 0xf001a8e0u)	/* Message Object 199 Function Control Register */
#define CAN_MOFCR2	(*( CAN_MOFCR0_type *) 0xf0019040u)	/* Message Object 2 Function Control Register */
#define CAN_MOFCR20	(*( CAN_MOFCR0_type *) 0xf0019280u)	/* Message Object 20 Function Control Register */
#define CAN_MOFCR200	(*( CAN_MOFCR0_type *) 0xf001a900u)	/* Message Object 200 Function Control Register */
#define CAN_MOFCR201	(*( CAN_MOFCR0_type *) 0xf001a920u)	/* Message Object 201 Function Control Register */
#define CAN_MOFCR202	(*( CAN_MOFCR0_type *) 0xf001a940u)	/* Message Object 202 Function Control Register */
#define CAN_MOFCR203	(*( CAN_MOFCR0_type *) 0xf001a960u)	/* Message Object 203 Function Control Register */
#define CAN_MOFCR204	(*( CAN_MOFCR0_type *) 0xf001a980u)	/* Message Object 204 Function Control Register */
#define CAN_MOFCR205	(*( CAN_MOFCR0_type *) 0xf001a9a0u)	/* Message Object 205 Function Control Register */
#define CAN_MOFCR206	(*( CAN_MOFCR0_type *) 0xf001a9c0u)	/* Message Object 206 Function Control Register */
#define CAN_MOFCR207	(*( CAN_MOFCR0_type *) 0xf001a9e0u)	/* Message Object 207 Function Control Register */
#define CAN_MOFCR208	(*( CAN_MOFCR0_type *) 0xf001aa00u)	/* Message Object 208 Function Control Register */
#define CAN_MOFCR209	(*( CAN_MOFCR0_type *) 0xf001aa20u)	/* Message Object 209 Function Control Register */
#define CAN_MOFCR21	(*( CAN_MOFCR0_type *) 0xf00192a0u)	/* Message Object 21 Function Control Register */
#define CAN_MOFCR210	(*( CAN_MOFCR0_type *) 0xf001aa40u)	/* Message Object 210 Function Control Register */
#define CAN_MOFCR211	(*( CAN_MOFCR0_type *) 0xf001aa60u)	/* Message Object 211 Function Control Register */
#define CAN_MOFCR212	(*( CAN_MOFCR0_type *) 0xf001aa80u)	/* Message Object 212 Function Control Register */
#define CAN_MOFCR213	(*( CAN_MOFCR0_type *) 0xf001aaa0u)	/* Message Object 213 Function Control Register */
#define CAN_MOFCR214	(*( CAN_MOFCR0_type *) 0xf001aac0u)	/* Message Object 214 Function Control Register */
#define CAN_MOFCR215	(*( CAN_MOFCR0_type *) 0xf001aae0u)	/* Message Object 215 Function Control Register */
#define CAN_MOFCR216	(*( CAN_MOFCR0_type *) 0xf001ab00u)	/* Message Object 216 Function Control Register */
#define CAN_MOFCR217	(*( CAN_MOFCR0_type *) 0xf001ab20u)	/* Message Object 217 Function Control Register */
#define CAN_MOFCR218	(*( CAN_MOFCR0_type *) 0xf001ab40u)	/* Message Object 218 Function Control Register */
#define CAN_MOFCR219	(*( CAN_MOFCR0_type *) 0xf001ab60u)	/* Message Object 219 Function Control Register */
#define CAN_MOFCR22	(*( CAN_MOFCR0_type *) 0xf00192c0u)	/* Message Object 22 Function Control Register */
#define CAN_MOFCR220	(*( CAN_MOFCR0_type *) 0xf001ab80u)	/* Message Object 220 Function Control Register */
#define CAN_MOFCR221	(*( CAN_MOFCR0_type *) 0xf001aba0u)	/* Message Object 221 Function Control Register */
#define CAN_MOFCR222	(*( CAN_MOFCR0_type *) 0xf001abc0u)	/* Message Object 222 Function Control Register */
#define CAN_MOFCR223	(*( CAN_MOFCR0_type *) 0xf001abe0u)	/* Message Object 223 Function Control Register */
#define CAN_MOFCR224	(*( CAN_MOFCR0_type *) 0xf001ac00u)	/* Message Object 224 Function Control Register */
#define CAN_MOFCR225	(*( CAN_MOFCR0_type *) 0xf001ac20u)	/* Message Object 225 Function Control Register */
#define CAN_MOFCR226	(*( CAN_MOFCR0_type *) 0xf001ac40u)	/* Message Object 226 Function Control Register */
#define CAN_MOFCR227	(*( CAN_MOFCR0_type *) 0xf001ac60u)	/* Message Object 227 Function Control Register */
#define CAN_MOFCR228	(*( CAN_MOFCR0_type *) 0xf001ac80u)	/* Message Object 228 Function Control Register */
#define CAN_MOFCR229	(*( CAN_MOFCR0_type *) 0xf001aca0u)	/* Message Object 229 Function Control Register */
#define CAN_MOFCR23	(*( CAN_MOFCR0_type *) 0xf00192e0u)	/* Message Object 23 Function Control Register */
#define CAN_MOFCR230	(*( CAN_MOFCR0_type *) 0xf001acc0u)	/* Message Object 230 Function Control Register */
#define CAN_MOFCR231	(*( CAN_MOFCR0_type *) 0xf001ace0u)	/* Message Object 231 Function Control Register */
#define CAN_MOFCR232	(*( CAN_MOFCR0_type *) 0xf001ad00u)	/* Message Object 232 Function Control Register */
#define CAN_MOFCR233	(*( CAN_MOFCR0_type *) 0xf001ad20u)	/* Message Object 233 Function Control Register */
#define CAN_MOFCR234	(*( CAN_MOFCR0_type *) 0xf001ad40u)	/* Message Object 234 Function Control Register */
#define CAN_MOFCR235	(*( CAN_MOFCR0_type *) 0xf001ad60u)	/* Message Object 235 Function Control Register */
#define CAN_MOFCR236	(*( CAN_MOFCR0_type *) 0xf001ad80u)	/* Message Object 236 Function Control Register */
#define CAN_MOFCR237	(*( CAN_MOFCR0_type *) 0xf001ada0u)	/* Message Object 237 Function Control Register */
#define CAN_MOFCR238	(*( CAN_MOFCR0_type *) 0xf001adc0u)	/* Message Object 238 Function Control Register */
#define CAN_MOFCR239	(*( CAN_MOFCR0_type *) 0xf001ade0u)	/* Message Object 239 Function Control Register */
#define CAN_MOFCR24	(*( CAN_MOFCR0_type *) 0xf0019300u)	/* Message Object 24 Function Control Register */
#define CAN_MOFCR240	(*( CAN_MOFCR0_type *) 0xf001ae00u)	/* Message Object 240 Function Control Register */
#define CAN_MOFCR241	(*( CAN_MOFCR0_type *) 0xf001ae20u)	/* Message Object 241 Function Control Register */
#define CAN_MOFCR242	(*( CAN_MOFCR0_type *) 0xf001ae40u)	/* Message Object 242 Function Control Register */
#define CAN_MOFCR243	(*( CAN_MOFCR0_type *) 0xf001ae60u)	/* Message Object 243 Function Control Register */
#define CAN_MOFCR244	(*( CAN_MOFCR0_type *) 0xf001ae80u)	/* Message Object 244 Function Control Register */
#define CAN_MOFCR245	(*( CAN_MOFCR0_type *) 0xf001aea0u)	/* Message Object 245 Function Control Register */
#define CAN_MOFCR246	(*( CAN_MOFCR0_type *) 0xf001aec0u)	/* Message Object 246 Function Control Register */
#define CAN_MOFCR247	(*( CAN_MOFCR0_type *) 0xf001aee0u)	/* Message Object 247 Function Control Register */
#define CAN_MOFCR248	(*( CAN_MOFCR0_type *) 0xf001af00u)	/* Message Object 248 Function Control Register */
#define CAN_MOFCR249	(*( CAN_MOFCR0_type *) 0xf001af20u)	/* Message Object 249 Function Control Register */
#define CAN_MOFCR25	(*( CAN_MOFCR0_type *) 0xf0019320u)	/* Message Object 25 Function Control Register */
#define CAN_MOFCR250	(*( CAN_MOFCR0_type *) 0xf001af40u)	/* Message Object 250 Function Control Register */
#define CAN_MOFCR251	(*( CAN_MOFCR0_type *) 0xf001af60u)	/* Message Object 251 Function Control Register */
#define CAN_MOFCR252	(*( CAN_MOFCR0_type *) 0xf001af80u)	/* Message Object 252 Function Control Register */
#define CAN_MOFCR253	(*( CAN_MOFCR0_type *) 0xf001afa0u)	/* Message Object 253 Function Control Register */
#define CAN_MOFCR254	(*( CAN_MOFCR0_type *) 0xf001afc0u)	/* Message Object 254 Function Control Register */
#define CAN_MOFCR255	(*( CAN_MOFCR0_type *) 0xf001afe0u)	/* Message Object 255 Function Control Register */
#define CAN_MOFCR26	(*( CAN_MOFCR0_type *) 0xf0019340u)	/* Message Object 26 Function Control Register */
#define CAN_MOFCR27	(*( CAN_MOFCR0_type *) 0xf0019360u)	/* Message Object 27 Function Control Register */
#define CAN_MOFCR28	(*( CAN_MOFCR0_type *) 0xf0019380u)	/* Message Object 28 Function Control Register */
#define CAN_MOFCR29	(*( CAN_MOFCR0_type *) 0xf00193a0u)	/* Message Object 29 Function Control Register */
#define CAN_MOFCR3	(*( CAN_MOFCR0_type *) 0xf0019060u)	/* Message Object 3 Function Control Register */
#define CAN_MOFCR30	(*( CAN_MOFCR0_type *) 0xf00193c0u)	/* Message Object 30 Function Control Register */
#define CAN_MOFCR31	(*( CAN_MOFCR0_type *) 0xf00193e0u)	/* Message Object 31 Function Control Register */
#define CAN_MOFCR32	(*( CAN_MOFCR0_type *) 0xf0019400u)	/* Message Object 32 Function Control Register */
#define CAN_MOFCR33	(*( CAN_MOFCR0_type *) 0xf0019420u)	/* Message Object 33 Function Control Register */
#define CAN_MOFCR34	(*( CAN_MOFCR0_type *) 0xf0019440u)	/* Message Object 34 Function Control Register */
#define CAN_MOFCR35	(*( CAN_MOFCR0_type *) 0xf0019460u)	/* Message Object 35 Function Control Register */
#define CAN_MOFCR36	(*( CAN_MOFCR0_type *) 0xf0019480u)	/* Message Object 36 Function Control Register */
#define CAN_MOFCR37	(*( CAN_MOFCR0_type *) 0xf00194a0u)	/* Message Object 37 Function Control Register */
#define CAN_MOFCR38	(*( CAN_MOFCR0_type *) 0xf00194c0u)	/* Message Object 38 Function Control Register */
#define CAN_MOFCR39	(*( CAN_MOFCR0_type *) 0xf00194e0u)	/* Message Object 39 Function Control Register */
#define CAN_MOFCR4	(*( CAN_MOFCR0_type *) 0xf0019080u)	/* Message Object 4 Function Control Register */
#define CAN_MOFCR40	(*( CAN_MOFCR0_type *) 0xf0019500u)	/* Message Object 40 Function Control Register */
#define CAN_MOFCR41	(*( CAN_MOFCR0_type *) 0xf0019520u)	/* Message Object 41 Function Control Register */
#define CAN_MOFCR42	(*( CAN_MOFCR0_type *) 0xf0019540u)	/* Message Object 42 Function Control Register */
#define CAN_MOFCR43	(*( CAN_MOFCR0_type *) 0xf0019560u)	/* Message Object 43 Function Control Register */
#define CAN_MOFCR44	(*( CAN_MOFCR0_type *) 0xf0019580u)	/* Message Object 44 Function Control Register */
#define CAN_MOFCR45	(*( CAN_MOFCR0_type *) 0xf00195a0u)	/* Message Object 45 Function Control Register */
#define CAN_MOFCR46	(*( CAN_MOFCR0_type *) 0xf00195c0u)	/* Message Object 46 Function Control Register */
#define CAN_MOFCR47	(*( CAN_MOFCR0_type *) 0xf00195e0u)	/* Message Object 47 Function Control Register */
#define CAN_MOFCR48	(*( CAN_MOFCR0_type *) 0xf0019600u)	/* Message Object 48 Function Control Register */
#define CAN_MOFCR49	(*( CAN_MOFCR0_type *) 0xf0019620u)	/* Message Object 49 Function Control Register */
#define CAN_MOFCR5	(*( CAN_MOFCR0_type *) 0xf00190a0u)	/* Message Object 5 Function Control Register */
#define CAN_MOFCR50	(*( CAN_MOFCR0_type *) 0xf0019640u)	/* Message Object 50 Function Control Register */
#define CAN_MOFCR51	(*( CAN_MOFCR0_type *) 0xf0019660u)	/* Message Object 51 Function Control Register */
#define CAN_MOFCR52	(*( CAN_MOFCR0_type *) 0xf0019680u)	/* Message Object 52 Function Control Register */
#define CAN_MOFCR53	(*( CAN_MOFCR0_type *) 0xf00196a0u)	/* Message Object 53 Function Control Register */
#define CAN_MOFCR54	(*( CAN_MOFCR0_type *) 0xf00196c0u)	/* Message Object 54 Function Control Register */
#define CAN_MOFCR55	(*( CAN_MOFCR0_type *) 0xf00196e0u)	/* Message Object 55 Function Control Register */
#define CAN_MOFCR56	(*( CAN_MOFCR0_type *) 0xf0019700u)	/* Message Object 56 Function Control Register */
#define CAN_MOFCR57	(*( CAN_MOFCR0_type *) 0xf0019720u)	/* Message Object 57 Function Control Register */
#define CAN_MOFCR58	(*( CAN_MOFCR0_type *) 0xf0019740u)	/* Message Object 58 Function Control Register */
#define CAN_MOFCR59	(*( CAN_MOFCR0_type *) 0xf0019760u)	/* Message Object 59 Function Control Register */
#define CAN_MOFCR6	(*( CAN_MOFCR0_type *) 0xf00190c0u)	/* Message Object 6 Function Control Register */
#define CAN_MOFCR60	(*( CAN_MOFCR0_type *) 0xf0019780u)	/* Message Object 60 Function Control Register */
#define CAN_MOFCR61	(*( CAN_MOFCR0_type *) 0xf00197a0u)	/* Message Object 61 Function Control Register */
#define CAN_MOFCR62	(*( CAN_MOFCR0_type *) 0xf00197c0u)	/* Message Object 62 Function Control Register */
#define CAN_MOFCR63	(*( CAN_MOFCR0_type *) 0xf00197e0u)	/* Message Object 63 Function Control Register */
#define CAN_MOFCR64	(*( CAN_MOFCR0_type *) 0xf0019800u)	/* Message Object 64 Function Control Register */
#define CAN_MOFCR65	(*( CAN_MOFCR0_type *) 0xf0019820u)	/* Message Object 65 Function Control Register */
#define CAN_MOFCR66	(*( CAN_MOFCR0_type *) 0xf0019840u)	/* Message Object 66 Function Control Register */
#define CAN_MOFCR67	(*( CAN_MOFCR0_type *) 0xf0019860u)	/* Message Object 67 Function Control Register */
#define CAN_MOFCR68	(*( CAN_MOFCR0_type *) 0xf0019880u)	/* Message Object 68 Function Control Register */
#define CAN_MOFCR69	(*( CAN_MOFCR0_type *) 0xf00198a0u)	/* Message Object 69 Function Control Register */
#define CAN_MOFCR7	(*( CAN_MOFCR0_type *) 0xf00190e0u)	/* Message Object 7 Function Control Register */
#define CAN_MOFCR70	(*( CAN_MOFCR0_type *) 0xf00198c0u)	/* Message Object 70 Function Control Register */
#define CAN_MOFCR71	(*( CAN_MOFCR0_type *) 0xf00198e0u)	/* Message Object 71 Function Control Register */
#define CAN_MOFCR72	(*( CAN_MOFCR0_type *) 0xf0019900u)	/* Message Object 72 Function Control Register */
#define CAN_MOFCR73	(*( CAN_MOFCR0_type *) 0xf0019920u)	/* Message Object 73 Function Control Register */
#define CAN_MOFCR74	(*( CAN_MOFCR0_type *) 0xf0019940u)	/* Message Object 74 Function Control Register */
#define CAN_MOFCR75	(*( CAN_MOFCR0_type *) 0xf0019960u)	/* Message Object 75 Function Control Register */
#define CAN_MOFCR76	(*( CAN_MOFCR0_type *) 0xf0019980u)	/* Message Object 76 Function Control Register */
#define CAN_MOFCR77	(*( CAN_MOFCR0_type *) 0xf00199a0u)	/* Message Object 77 Function Control Register */
#define CAN_MOFCR78	(*( CAN_MOFCR0_type *) 0xf00199c0u)	/* Message Object 78 Function Control Register */
#define CAN_MOFCR79	(*( CAN_MOFCR0_type *) 0xf00199e0u)	/* Message Object 79 Function Control Register */
#define CAN_MOFCR8	(*( CAN_MOFCR0_type *) 0xf0019100u)	/* Message Object 8 Function Control Register */
#define CAN_MOFCR80	(*( CAN_MOFCR0_type *) 0xf0019a00u)	/* Message Object 80 Function Control Register */
#define CAN_MOFCR81	(*( CAN_MOFCR0_type *) 0xf0019a20u)	/* Message Object 81 Function Control Register */
#define CAN_MOFCR82	(*( CAN_MOFCR0_type *) 0xf0019a40u)	/* Message Object 82 Function Control Register */
#define CAN_MOFCR83	(*( CAN_MOFCR0_type *) 0xf0019a60u)	/* Message Object 83 Function Control Register */
#define CAN_MOFCR84	(*( CAN_MOFCR0_type *) 0xf0019a80u)	/* Message Object 84 Function Control Register */
#define CAN_MOFCR85	(*( CAN_MOFCR0_type *) 0xf0019aa0u)	/* Message Object 85 Function Control Register */
#define CAN_MOFCR86	(*( CAN_MOFCR0_type *) 0xf0019ac0u)	/* Message Object 86 Function Control Register */
#define CAN_MOFCR87	(*( CAN_MOFCR0_type *) 0xf0019ae0u)	/* Message Object 87 Function Control Register */
#define CAN_MOFCR88	(*( CAN_MOFCR0_type *) 0xf0019b00u)	/* Message Object 88 Function Control Register */
#define CAN_MOFCR89	(*( CAN_MOFCR0_type *) 0xf0019b20u)	/* Message Object 89 Function Control Register */
#define CAN_MOFCR9	(*( CAN_MOFCR0_type *) 0xf0019120u)	/* Message Object 9 Function Control Register */
#define CAN_MOFCR90	(*( CAN_MOFCR0_type *) 0xf0019b40u)	/* Message Object 90 Function Control Register */
#define CAN_MOFCR91	(*( CAN_MOFCR0_type *) 0xf0019b60u)	/* Message Object 91 Function Control Register */
#define CAN_MOFCR92	(*( CAN_MOFCR0_type *) 0xf0019b80u)	/* Message Object 92 Function Control Register */
#define CAN_MOFCR93	(*( CAN_MOFCR0_type *) 0xf0019ba0u)	/* Message Object 93 Function Control Register */
#define CAN_MOFCR94	(*( CAN_MOFCR0_type *) 0xf0019bc0u)	/* Message Object 94 Function Control Register */
#define CAN_MOFCR95	(*( CAN_MOFCR0_type *) 0xf0019be0u)	/* Message Object 95 Function Control Register */
#define CAN_MOFCR96	(*( CAN_MOFCR0_type *) 0xf0019c00u)	/* Message Object 96 Function Control Register */
#define CAN_MOFCR97	(*( CAN_MOFCR0_type *) 0xf0019c20u)	/* Message Object 97 Function Control Register */
#define CAN_MOFCR98	(*( CAN_MOFCR0_type *) 0xf0019c40u)	/* Message Object 98 Function Control Register */
#define CAN_MOFCR99	(*( CAN_MOFCR0_type *) 0xf0019c60u)	/* Message Object 99 Function Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int BOT            : 8;	/* Bottom Pointer */
		unsigned int TOP            : 8;	/* Top Pointer */
		unsigned int CUR            : 8;	/* Current Object Pointer */
		unsigned int SEL            : 8;	/* Object Select Pointer */
	} B;
	int I;
	unsigned int U;

} CAN_MOFGPR0_type;
#define CAN_MOFGPR0	(*( CAN_MOFGPR0_type *) 0xf0019004u)	/* Message Object 0 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR1	(*( CAN_MOFGPR0_type *) 0xf0019024u)	/* Message Object 1 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR10	(*( CAN_MOFGPR0_type *) 0xf0019144u)	/* Message Object 10 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR100	(*( CAN_MOFGPR0_type *) 0xf0019c84u)	/* Message Object 100 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR101	(*( CAN_MOFGPR0_type *) 0xf0019ca4u)	/* Message Object 101 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR102	(*( CAN_MOFGPR0_type *) 0xf0019cc4u)	/* Message Object 102 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR103	(*( CAN_MOFGPR0_type *) 0xf0019ce4u)	/* Message Object 103 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR104	(*( CAN_MOFGPR0_type *) 0xf0019d04u)	/* Message Object 104 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR105	(*( CAN_MOFGPR0_type *) 0xf0019d24u)	/* Message Object 105 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR106	(*( CAN_MOFGPR0_type *) 0xf0019d44u)	/* Message Object 106 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR107	(*( CAN_MOFGPR0_type *) 0xf0019d64u)	/* Message Object 107 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR108	(*( CAN_MOFGPR0_type *) 0xf0019d84u)	/* Message Object 108 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR109	(*( CAN_MOFGPR0_type *) 0xf0019da4u)	/* Message Object 109 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR11	(*( CAN_MOFGPR0_type *) 0xf0019164u)	/* Message Object 11 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR110	(*( CAN_MOFGPR0_type *) 0xf0019dc4u)	/* Message Object 110 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR111	(*( CAN_MOFGPR0_type *) 0xf0019de4u)	/* Message Object 111 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR112	(*( CAN_MOFGPR0_type *) 0xf0019e04u)	/* Message Object 112 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR113	(*( CAN_MOFGPR0_type *) 0xf0019e24u)	/* Message Object 113 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR114	(*( CAN_MOFGPR0_type *) 0xf0019e44u)	/* Message Object 114 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR115	(*( CAN_MOFGPR0_type *) 0xf0019e64u)	/* Message Object 115 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR116	(*( CAN_MOFGPR0_type *) 0xf0019e84u)	/* Message Object 116 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR117	(*( CAN_MOFGPR0_type *) 0xf0019ea4u)	/* Message Object 117 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR118	(*( CAN_MOFGPR0_type *) 0xf0019ec4u)	/* Message Object 118 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR119	(*( CAN_MOFGPR0_type *) 0xf0019ee4u)	/* Message Object 119 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR12	(*( CAN_MOFGPR0_type *) 0xf0019184u)	/* Message Object 12 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR120	(*( CAN_MOFGPR0_type *) 0xf0019f04u)	/* Message Object 120 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR121	(*( CAN_MOFGPR0_type *) 0xf0019f24u)	/* Message Object 121 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR122	(*( CAN_MOFGPR0_type *) 0xf0019f44u)	/* Message Object 122 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR123	(*( CAN_MOFGPR0_type *) 0xf0019f64u)	/* Message Object 123 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR124	(*( CAN_MOFGPR0_type *) 0xf0019f84u)	/* Message Object 124 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR125	(*( CAN_MOFGPR0_type *) 0xf0019fa4u)	/* Message Object 125 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR126	(*( CAN_MOFGPR0_type *) 0xf0019fc4u)	/* Message Object 126 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR127	(*( CAN_MOFGPR0_type *) 0xf0019fe4u)	/* Message Object 127 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR128	(*( CAN_MOFGPR0_type *) 0xf001a004u)	/* Message Object 128 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR129	(*( CAN_MOFGPR0_type *) 0xf001a024u)	/* Message Object 129 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR13	(*( CAN_MOFGPR0_type *) 0xf00191a4u)	/* Message Object 13 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR130	(*( CAN_MOFGPR0_type *) 0xf001a044u)	/* Message Object 130 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR131	(*( CAN_MOFGPR0_type *) 0xf001a064u)	/* Message Object 131 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR132	(*( CAN_MOFGPR0_type *) 0xf001a084u)	/* Message Object 132 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR133	(*( CAN_MOFGPR0_type *) 0xf001a0a4u)	/* Message Object 133 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR134	(*( CAN_MOFGPR0_type *) 0xf001a0c4u)	/* Message Object 134 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR135	(*( CAN_MOFGPR0_type *) 0xf001a0e4u)	/* Message Object 135 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR136	(*( CAN_MOFGPR0_type *) 0xf001a104u)	/* Message Object 136 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR137	(*( CAN_MOFGPR0_type *) 0xf001a124u)	/* Message Object 137 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR138	(*( CAN_MOFGPR0_type *) 0xf001a144u)	/* Message Object 138 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR139	(*( CAN_MOFGPR0_type *) 0xf001a164u)	/* Message Object 139 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR14	(*( CAN_MOFGPR0_type *) 0xf00191c4u)	/* Message Object 14 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR140	(*( CAN_MOFGPR0_type *) 0xf001a184u)	/* Message Object 140 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR141	(*( CAN_MOFGPR0_type *) 0xf001a1a4u)	/* Message Object 141 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR142	(*( CAN_MOFGPR0_type *) 0xf001a1c4u)	/* Message Object 142 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR143	(*( CAN_MOFGPR0_type *) 0xf001a1e4u)	/* Message Object 143 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR144	(*( CAN_MOFGPR0_type *) 0xf001a204u)	/* Message Object 144 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR145	(*( CAN_MOFGPR0_type *) 0xf001a224u)	/* Message Object 145 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR146	(*( CAN_MOFGPR0_type *) 0xf001a244u)	/* Message Object 146 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR147	(*( CAN_MOFGPR0_type *) 0xf001a264u)	/* Message Object 147 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR148	(*( CAN_MOFGPR0_type *) 0xf001a284u)	/* Message Object 148 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR149	(*( CAN_MOFGPR0_type *) 0xf001a2a4u)	/* Message Object 149 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR15	(*( CAN_MOFGPR0_type *) 0xf00191e4u)	/* Message Object 15 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR150	(*( CAN_MOFGPR0_type *) 0xf001a2c4u)	/* Message Object 150 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR151	(*( CAN_MOFGPR0_type *) 0xf001a2e4u)	/* Message Object 151 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR152	(*( CAN_MOFGPR0_type *) 0xf001a304u)	/* Message Object 152 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR153	(*( CAN_MOFGPR0_type *) 0xf001a324u)	/* Message Object 153 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR154	(*( CAN_MOFGPR0_type *) 0xf001a344u)	/* Message Object 154 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR155	(*( CAN_MOFGPR0_type *) 0xf001a364u)	/* Message Object 155 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR156	(*( CAN_MOFGPR0_type *) 0xf001a384u)	/* Message Object 156 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR157	(*( CAN_MOFGPR0_type *) 0xf001a3a4u)	/* Message Object 157 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR158	(*( CAN_MOFGPR0_type *) 0xf001a3c4u)	/* Message Object 158 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR159	(*( CAN_MOFGPR0_type *) 0xf001a3e4u)	/* Message Object 159 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR16	(*( CAN_MOFGPR0_type *) 0xf0019204u)	/* Message Object 16 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR160	(*( CAN_MOFGPR0_type *) 0xf001a404u)	/* Message Object 160 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR161	(*( CAN_MOFGPR0_type *) 0xf001a424u)	/* Message Object 161 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR162	(*( CAN_MOFGPR0_type *) 0xf001a444u)	/* Message Object 162 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR163	(*( CAN_MOFGPR0_type *) 0xf001a464u)	/* Message Object 163 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR164	(*( CAN_MOFGPR0_type *) 0xf001a484u)	/* Message Object 164 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR165	(*( CAN_MOFGPR0_type *) 0xf001a4a4u)	/* Message Object 165 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR166	(*( CAN_MOFGPR0_type *) 0xf001a4c4u)	/* Message Object 166 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR167	(*( CAN_MOFGPR0_type *) 0xf001a4e4u)	/* Message Object 167 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR168	(*( CAN_MOFGPR0_type *) 0xf001a504u)	/* Message Object 168 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR169	(*( CAN_MOFGPR0_type *) 0xf001a524u)	/* Message Object 169 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR17	(*( CAN_MOFGPR0_type *) 0xf0019224u)	/* Message Object 17 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR170	(*( CAN_MOFGPR0_type *) 0xf001a544u)	/* Message Object 170 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR171	(*( CAN_MOFGPR0_type *) 0xf001a564u)	/* Message Object 171 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR172	(*( CAN_MOFGPR0_type *) 0xf001a584u)	/* Message Object 172 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR173	(*( CAN_MOFGPR0_type *) 0xf001a5a4u)	/* Message Object 173 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR174	(*( CAN_MOFGPR0_type *) 0xf001a5c4u)	/* Message Object 174 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR175	(*( CAN_MOFGPR0_type *) 0xf001a5e4u)	/* Message Object 175 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR176	(*( CAN_MOFGPR0_type *) 0xf001a604u)	/* Message Object 176 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR177	(*( CAN_MOFGPR0_type *) 0xf001a624u)	/* Message Object 177 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR178	(*( CAN_MOFGPR0_type *) 0xf001a644u)	/* Message Object 178 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR179	(*( CAN_MOFGPR0_type *) 0xf001a664u)	/* Message Object 179 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR18	(*( CAN_MOFGPR0_type *) 0xf0019244u)	/* Message Object 18 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR180	(*( CAN_MOFGPR0_type *) 0xf001a684u)	/* Message Object 180 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR181	(*( CAN_MOFGPR0_type *) 0xf001a6a4u)	/* Message Object 181 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR182	(*( CAN_MOFGPR0_type *) 0xf001a6c4u)	/* Message Object 182 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR183	(*( CAN_MOFGPR0_type *) 0xf001a6e4u)	/* Message Object 183 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR184	(*( CAN_MOFGPR0_type *) 0xf001a704u)	/* Message Object 184 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR185	(*( CAN_MOFGPR0_type *) 0xf001a724u)	/* Message Object 185 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR186	(*( CAN_MOFGPR0_type *) 0xf001a744u)	/* Message Object 186 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR187	(*( CAN_MOFGPR0_type *) 0xf001a764u)	/* Message Object 187 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR188	(*( CAN_MOFGPR0_type *) 0xf001a784u)	/* Message Object 188 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR189	(*( CAN_MOFGPR0_type *) 0xf001a7a4u)	/* Message Object 189 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR19	(*( CAN_MOFGPR0_type *) 0xf0019264u)	/* Message Object 19 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR190	(*( CAN_MOFGPR0_type *) 0xf001a7c4u)	/* Message Object 190 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR191	(*( CAN_MOFGPR0_type *) 0xf001a7e4u)	/* Message Object 191 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR192	(*( CAN_MOFGPR0_type *) 0xf001a804u)	/* Message Object 192 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR193	(*( CAN_MOFGPR0_type *) 0xf001a824u)	/* Message Object 193 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR194	(*( CAN_MOFGPR0_type *) 0xf001a844u)	/* Message Object 194 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR195	(*( CAN_MOFGPR0_type *) 0xf001a864u)	/* Message Object 195 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR196	(*( CAN_MOFGPR0_type *) 0xf001a884u)	/* Message Object 196 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR197	(*( CAN_MOFGPR0_type *) 0xf001a8a4u)	/* Message Object 197 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR198	(*( CAN_MOFGPR0_type *) 0xf001a8c4u)	/* Message Object 198 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR199	(*( CAN_MOFGPR0_type *) 0xf001a8e4u)	/* Message Object 199 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR2	(*( CAN_MOFGPR0_type *) 0xf0019044u)	/* Message Object 2 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR20	(*( CAN_MOFGPR0_type *) 0xf0019284u)	/* Message Object 20 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR200	(*( CAN_MOFGPR0_type *) 0xf001a904u)	/* Message Object 200 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR201	(*( CAN_MOFGPR0_type *) 0xf001a924u)	/* Message Object 201 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR202	(*( CAN_MOFGPR0_type *) 0xf001a944u)	/* Message Object 202 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR203	(*( CAN_MOFGPR0_type *) 0xf001a964u)	/* Message Object 203 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR204	(*( CAN_MOFGPR0_type *) 0xf001a984u)	/* Message Object 204 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR205	(*( CAN_MOFGPR0_type *) 0xf001a9a4u)	/* Message Object 205 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR206	(*( CAN_MOFGPR0_type *) 0xf001a9c4u)	/* Message Object 206 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR207	(*( CAN_MOFGPR0_type *) 0xf001a9e4u)	/* Message Object 207 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR208	(*( CAN_MOFGPR0_type *) 0xf001aa04u)	/* Message Object 208 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR209	(*( CAN_MOFGPR0_type *) 0xf001aa24u)	/* Message Object 209 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR21	(*( CAN_MOFGPR0_type *) 0xf00192a4u)	/* Message Object 21 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR210	(*( CAN_MOFGPR0_type *) 0xf001aa44u)	/* Message Object 210 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR211	(*( CAN_MOFGPR0_type *) 0xf001aa64u)	/* Message Object 211 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR212	(*( CAN_MOFGPR0_type *) 0xf001aa84u)	/* Message Object 212 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR213	(*( CAN_MOFGPR0_type *) 0xf001aaa4u)	/* Message Object 213 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR214	(*( CAN_MOFGPR0_type *) 0xf001aac4u)	/* Message Object 214 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR215	(*( CAN_MOFGPR0_type *) 0xf001aae4u)	/* Message Object 215 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR216	(*( CAN_MOFGPR0_type *) 0xf001ab04u)	/* Message Object 216 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR217	(*( CAN_MOFGPR0_type *) 0xf001ab24u)	/* Message Object 217 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR218	(*( CAN_MOFGPR0_type *) 0xf001ab44u)	/* Message Object 218 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR219	(*( CAN_MOFGPR0_type *) 0xf001ab64u)	/* Message Object 219 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR22	(*( CAN_MOFGPR0_type *) 0xf00192c4u)	/* Message Object 22 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR220	(*( CAN_MOFGPR0_type *) 0xf001ab84u)	/* Message Object 220 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR221	(*( CAN_MOFGPR0_type *) 0xf001aba4u)	/* Message Object 221 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR222	(*( CAN_MOFGPR0_type *) 0xf001abc4u)	/* Message Object 222 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR223	(*( CAN_MOFGPR0_type *) 0xf001abe4u)	/* Message Object 223 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR224	(*( CAN_MOFGPR0_type *) 0xf001ac04u)	/* Message Object 224 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR225	(*( CAN_MOFGPR0_type *) 0xf001ac24u)	/* Message Object 225 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR226	(*( CAN_MOFGPR0_type *) 0xf001ac44u)	/* Message Object 226 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR227	(*( CAN_MOFGPR0_type *) 0xf001ac64u)	/* Message Object 227 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR228	(*( CAN_MOFGPR0_type *) 0xf001ac84u)	/* Message Object 228 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR229	(*( CAN_MOFGPR0_type *) 0xf001aca4u)	/* Message Object 229 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR23	(*( CAN_MOFGPR0_type *) 0xf00192e4u)	/* Message Object 23 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR230	(*( CAN_MOFGPR0_type *) 0xf001acc4u)	/* Message Object 230 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR231	(*( CAN_MOFGPR0_type *) 0xf001ace4u)	/* Message Object 231 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR232	(*( CAN_MOFGPR0_type *) 0xf001ad04u)	/* Message Object 232 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR233	(*( CAN_MOFGPR0_type *) 0xf001ad24u)	/* Message Object 233 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR234	(*( CAN_MOFGPR0_type *) 0xf001ad44u)	/* Message Object 234 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR235	(*( CAN_MOFGPR0_type *) 0xf001ad64u)	/* Message Object 235 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR236	(*( CAN_MOFGPR0_type *) 0xf001ad84u)	/* Message Object 236 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR237	(*( CAN_MOFGPR0_type *) 0xf001ada4u)	/* Message Object 237 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR238	(*( CAN_MOFGPR0_type *) 0xf001adc4u)	/* Message Object 238 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR239	(*( CAN_MOFGPR0_type *) 0xf001ade4u)	/* Message Object 239 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR24	(*( CAN_MOFGPR0_type *) 0xf0019304u)	/* Message Object 24 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR240	(*( CAN_MOFGPR0_type *) 0xf001ae04u)	/* Message Object 240 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR241	(*( CAN_MOFGPR0_type *) 0xf001ae24u)	/* Message Object 241 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR242	(*( CAN_MOFGPR0_type *) 0xf001ae44u)	/* Message Object 242 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR243	(*( CAN_MOFGPR0_type *) 0xf001ae64u)	/* Message Object 243 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR244	(*( CAN_MOFGPR0_type *) 0xf001ae84u)	/* Message Object 244 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR245	(*( CAN_MOFGPR0_type *) 0xf001aea4u)	/* Message Object 245 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR246	(*( CAN_MOFGPR0_type *) 0xf001aec4u)	/* Message Object 246 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR247	(*( CAN_MOFGPR0_type *) 0xf001aee4u)	/* Message Object 247 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR248	(*( CAN_MOFGPR0_type *) 0xf001af04u)	/* Message Object 248 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR249	(*( CAN_MOFGPR0_type *) 0xf001af24u)	/* Message Object 249 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR25	(*( CAN_MOFGPR0_type *) 0xf0019324u)	/* Message Object 25 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR250	(*( CAN_MOFGPR0_type *) 0xf001af44u)	/* Message Object 250 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR251	(*( CAN_MOFGPR0_type *) 0xf001af64u)	/* Message Object 251 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR252	(*( CAN_MOFGPR0_type *) 0xf001af84u)	/* Message Object 252 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR253	(*( CAN_MOFGPR0_type *) 0xf001afa4u)	/* Message Object 253 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR254	(*( CAN_MOFGPR0_type *) 0xf001afc4u)	/* Message Object 254 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR255	(*( CAN_MOFGPR0_type *) 0xf001afe4u)	/* Message Object 255 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR26	(*( CAN_MOFGPR0_type *) 0xf0019344u)	/* Message Object 26 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR27	(*( CAN_MOFGPR0_type *) 0xf0019364u)	/* Message Object 27 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR28	(*( CAN_MOFGPR0_type *) 0xf0019384u)	/* Message Object 28 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR29	(*( CAN_MOFGPR0_type *) 0xf00193a4u)	/* Message Object 29 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR3	(*( CAN_MOFGPR0_type *) 0xf0019064u)	/* Message Object 3 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR30	(*( CAN_MOFGPR0_type *) 0xf00193c4u)	/* Message Object 30 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR31	(*( CAN_MOFGPR0_type *) 0xf00193e4u)	/* Message Object 31 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR32	(*( CAN_MOFGPR0_type *) 0xf0019404u)	/* Message Object 32 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR33	(*( CAN_MOFGPR0_type *) 0xf0019424u)	/* Message Object 33 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR34	(*( CAN_MOFGPR0_type *) 0xf0019444u)	/* Message Object 34 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR35	(*( CAN_MOFGPR0_type *) 0xf0019464u)	/* Message Object 35 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR36	(*( CAN_MOFGPR0_type *) 0xf0019484u)	/* Message Object 36 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR37	(*( CAN_MOFGPR0_type *) 0xf00194a4u)	/* Message Object 37 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR38	(*( CAN_MOFGPR0_type *) 0xf00194c4u)	/* Message Object 38 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR39	(*( CAN_MOFGPR0_type *) 0xf00194e4u)	/* Message Object 39 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR4	(*( CAN_MOFGPR0_type *) 0xf0019084u)	/* Message Object 4 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR40	(*( CAN_MOFGPR0_type *) 0xf0019504u)	/* Message Object 40 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR41	(*( CAN_MOFGPR0_type *) 0xf0019524u)	/* Message Object 41 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR42	(*( CAN_MOFGPR0_type *) 0xf0019544u)	/* Message Object 42 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR43	(*( CAN_MOFGPR0_type *) 0xf0019564u)	/* Message Object 43 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR44	(*( CAN_MOFGPR0_type *) 0xf0019584u)	/* Message Object 44 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR45	(*( CAN_MOFGPR0_type *) 0xf00195a4u)	/* Message Object 45 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR46	(*( CAN_MOFGPR0_type *) 0xf00195c4u)	/* Message Object 46 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR47	(*( CAN_MOFGPR0_type *) 0xf00195e4u)	/* Message Object 47 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR48	(*( CAN_MOFGPR0_type *) 0xf0019604u)	/* Message Object 48 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR49	(*( CAN_MOFGPR0_type *) 0xf0019624u)	/* Message Object 49 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR5	(*( CAN_MOFGPR0_type *) 0xf00190a4u)	/* Message Object 5 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR50	(*( CAN_MOFGPR0_type *) 0xf0019644u)	/* Message Object 50 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR51	(*( CAN_MOFGPR0_type *) 0xf0019664u)	/* Message Object 51 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR52	(*( CAN_MOFGPR0_type *) 0xf0019684u)	/* Message Object 52 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR53	(*( CAN_MOFGPR0_type *) 0xf00196a4u)	/* Message Object 53 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR54	(*( CAN_MOFGPR0_type *) 0xf00196c4u)	/* Message Object 54 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR55	(*( CAN_MOFGPR0_type *) 0xf00196e4u)	/* Message Object 55 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR56	(*( CAN_MOFGPR0_type *) 0xf0019704u)	/* Message Object 56 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR57	(*( CAN_MOFGPR0_type *) 0xf0019724u)	/* Message Object 57 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR58	(*( CAN_MOFGPR0_type *) 0xf0019744u)	/* Message Object 58 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR59	(*( CAN_MOFGPR0_type *) 0xf0019764u)	/* Message Object 59 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR6	(*( CAN_MOFGPR0_type *) 0xf00190c4u)	/* Message Object 6 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR60	(*( CAN_MOFGPR0_type *) 0xf0019784u)	/* Message Object 60 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR61	(*( CAN_MOFGPR0_type *) 0xf00197a4u)	/* Message Object 61 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR62	(*( CAN_MOFGPR0_type *) 0xf00197c4u)	/* Message Object 62 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR63	(*( CAN_MOFGPR0_type *) 0xf00197e4u)	/* Message Object 63 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR64	(*( CAN_MOFGPR0_type *) 0xf0019804u)	/* Message Object 64 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR65	(*( CAN_MOFGPR0_type *) 0xf0019824u)	/* Message Object 65 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR66	(*( CAN_MOFGPR0_type *) 0xf0019844u)	/* Message Object 66 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR67	(*( CAN_MOFGPR0_type *) 0xf0019864u)	/* Message Object 67 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR68	(*( CAN_MOFGPR0_type *) 0xf0019884u)	/* Message Object 68 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR69	(*( CAN_MOFGPR0_type *) 0xf00198a4u)	/* Message Object 69 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR7	(*( CAN_MOFGPR0_type *) 0xf00190e4u)	/* Message Object 7 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR70	(*( CAN_MOFGPR0_type *) 0xf00198c4u)	/* Message Object 70 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR71	(*( CAN_MOFGPR0_type *) 0xf00198e4u)	/* Message Object 71 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR72	(*( CAN_MOFGPR0_type *) 0xf0019904u)	/* Message Object 72 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR73	(*( CAN_MOFGPR0_type *) 0xf0019924u)	/* Message Object 73 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR74	(*( CAN_MOFGPR0_type *) 0xf0019944u)	/* Message Object 74 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR75	(*( CAN_MOFGPR0_type *) 0xf0019964u)	/* Message Object 75 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR76	(*( CAN_MOFGPR0_type *) 0xf0019984u)	/* Message Object 76 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR77	(*( CAN_MOFGPR0_type *) 0xf00199a4u)	/* Message Object 77 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR78	(*( CAN_MOFGPR0_type *) 0xf00199c4u)	/* Message Object 78 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR79	(*( CAN_MOFGPR0_type *) 0xf00199e4u)	/* Message Object 79 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR8	(*( CAN_MOFGPR0_type *) 0xf0019104u)	/* Message Object 8 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR80	(*( CAN_MOFGPR0_type *) 0xf0019a04u)	/* Message Object 80 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR81	(*( CAN_MOFGPR0_type *) 0xf0019a24u)	/* Message Object 81 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR82	(*( CAN_MOFGPR0_type *) 0xf0019a44u)	/* Message Object 82 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR83	(*( CAN_MOFGPR0_type *) 0xf0019a64u)	/* Message Object 83 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR84	(*( CAN_MOFGPR0_type *) 0xf0019a84u)	/* Message Object 84 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR85	(*( CAN_MOFGPR0_type *) 0xf0019aa4u)	/* Message Object 85 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR86	(*( CAN_MOFGPR0_type *) 0xf0019ac4u)	/* Message Object 86 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR87	(*( CAN_MOFGPR0_type *) 0xf0019ae4u)	/* Message Object 87 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR88	(*( CAN_MOFGPR0_type *) 0xf0019b04u)	/* Message Object 88 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR89	(*( CAN_MOFGPR0_type *) 0xf0019b24u)	/* Message Object 89 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR9	(*( CAN_MOFGPR0_type *) 0xf0019124u)	/* Message Object 9 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR90	(*( CAN_MOFGPR0_type *) 0xf0019b44u)	/* Message Object 90 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR91	(*( CAN_MOFGPR0_type *) 0xf0019b64u)	/* Message Object 91 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR92	(*( CAN_MOFGPR0_type *) 0xf0019b84u)	/* Message Object 92 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR93	(*( CAN_MOFGPR0_type *) 0xf0019ba4u)	/* Message Object 93 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR94	(*( CAN_MOFGPR0_type *) 0xf0019bc4u)	/* Message Object 94 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR95	(*( CAN_MOFGPR0_type *) 0xf0019be4u)	/* Message Object 95 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR96	(*( CAN_MOFGPR0_type *) 0xf0019c04u)	/* Message Object 96 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR97	(*( CAN_MOFGPR0_type *) 0xf0019c24u)	/* Message Object 97 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR98	(*( CAN_MOFGPR0_type *) 0xf0019c44u)	/* Message Object 98 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR99	(*( CAN_MOFGPR0_type *) 0xf0019c64u)	/* Message Object 99 FIFO/Gateway Pointer Register */

typedef volatile union
{
	struct
	{ 
		unsigned int RXINP          : 4;	/* Receive Interrupt Node Pointer */
		unsigned int TXINP          : 4;	/* Transmit Interrupt Node Pointer */
		unsigned int MPN            : 8;	/* Message Pending Number */
		unsigned int CFCVAL         : 16;	/* CAN Frame Counter Value */
	} B;
	int I;
	unsigned int U;

} CAN_MOIPR0_type;
#define CAN_MOIPR0	(*( CAN_MOIPR0_type *) 0xf0019008u)	/* Message Object 0 Interrupt Pointer Register */
#define CAN_MOIPR1	(*( CAN_MOIPR0_type *) 0xf0019028u)	/* Message Object 1 Interrupt Pointer Register */
#define CAN_MOIPR10	(*( CAN_MOIPR0_type *) 0xf0019148u)	/* Message Object 10 Interrupt Pointer Register */
#define CAN_MOIPR100	(*( CAN_MOIPR0_type *) 0xf0019c88u)	/* Message Object 100 Interrupt Pointer Register */
#define CAN_MOIPR101	(*( CAN_MOIPR0_type *) 0xf0019ca8u)	/* Message Object 101 Interrupt Pointer Register */
#define CAN_MOIPR102	(*( CAN_MOIPR0_type *) 0xf0019cc8u)	/* Message Object 102 Interrupt Pointer Register */
#define CAN_MOIPR103	(*( CAN_MOIPR0_type *) 0xf0019ce8u)	/* Message Object 103 Interrupt Pointer Register */
#define CAN_MOIPR104	(*( CAN_MOIPR0_type *) 0xf0019d08u)	/* Message Object 104 Interrupt Pointer Register */
#define CAN_MOIPR105	(*( CAN_MOIPR0_type *) 0xf0019d28u)	/* Message Object 105 Interrupt Pointer Register */
#define CAN_MOIPR106	(*( CAN_MOIPR0_type *) 0xf0019d48u)	/* Message Object 106 Interrupt Pointer Register */
#define CAN_MOIPR107	(*( CAN_MOIPR0_type *) 0xf0019d68u)	/* Message Object 107 Interrupt Pointer Register */
#define CAN_MOIPR108	(*( CAN_MOIPR0_type *) 0xf0019d88u)	/* Message Object 108 Interrupt Pointer Register */
#define CAN_MOIPR109	(*( CAN_MOIPR0_type *) 0xf0019da8u)	/* Message Object 109 Interrupt Pointer Register */
#define CAN_MOIPR11	(*( CAN_MOIPR0_type *) 0xf0019168u)	/* Message Object 11 Interrupt Pointer Register */
#define CAN_MOIPR110	(*( CAN_MOIPR0_type *) 0xf0019dc8u)	/* Message Object 110 Interrupt Pointer Register */
#define CAN_MOIPR111	(*( CAN_MOIPR0_type *) 0xf0019de8u)	/* Message Object 111 Interrupt Pointer Register */
#define CAN_MOIPR112	(*( CAN_MOIPR0_type *) 0xf0019e08u)	/* Message Object 112 Interrupt Pointer Register */
#define CAN_MOIPR113	(*( CAN_MOIPR0_type *) 0xf0019e28u)	/* Message Object 113 Interrupt Pointer Register */
#define CAN_MOIPR114	(*( CAN_MOIPR0_type *) 0xf0019e48u)	/* Message Object 114 Interrupt Pointer Register */
#define CAN_MOIPR115	(*( CAN_MOIPR0_type *) 0xf0019e68u)	/* Message Object 115 Interrupt Pointer Register */
#define CAN_MOIPR116	(*( CAN_MOIPR0_type *) 0xf0019e88u)	/* Message Object 116 Interrupt Pointer Register */
#define CAN_MOIPR117	(*( CAN_MOIPR0_type *) 0xf0019ea8u)	/* Message Object 117 Interrupt Pointer Register */
#define CAN_MOIPR118	(*( CAN_MOIPR0_type *) 0xf0019ec8u)	/* Message Object 118 Interrupt Pointer Register */
#define CAN_MOIPR119	(*( CAN_MOIPR0_type *) 0xf0019ee8u)	/* Message Object 119 Interrupt Pointer Register */
#define CAN_MOIPR12	(*( CAN_MOIPR0_type *) 0xf0019188u)	/* Message Object 12 Interrupt Pointer Register */
#define CAN_MOIPR120	(*( CAN_MOIPR0_type *) 0xf0019f08u)	/* Message Object 120 Interrupt Pointer Register */
#define CAN_MOIPR121	(*( CAN_MOIPR0_type *) 0xf0019f28u)	/* Message Object 121 Interrupt Pointer Register */
#define CAN_MOIPR122	(*( CAN_MOIPR0_type *) 0xf0019f48u)	/* Message Object 122 Interrupt Pointer Register */
#define CAN_MOIPR123	(*( CAN_MOIPR0_type *) 0xf0019f68u)	/* Message Object 123 Interrupt Pointer Register */
#define CAN_MOIPR124	(*( CAN_MOIPR0_type *) 0xf0019f88u)	/* Message Object 124 Interrupt Pointer Register */
#define CAN_MOIPR125	(*( CAN_MOIPR0_type *) 0xf0019fa8u)	/* Message Object 125 Interrupt Pointer Register */
#define CAN_MOIPR126	(*( CAN_MOIPR0_type *) 0xf0019fc8u)	/* Message Object 126 Interrupt Pointer Register */
#define CAN_MOIPR127	(*( CAN_MOIPR0_type *) 0xf0019fe8u)	/* Message Object 127 Interrupt Pointer Register */
#define CAN_MOIPR128	(*( CAN_MOIPR0_type *) 0xf001a008u)	/* Message Object 128 Interrupt Pointer Register */
#define CAN_MOIPR129	(*( CAN_MOIPR0_type *) 0xf001a028u)	/* Message Object 129 Interrupt Pointer Register */
#define CAN_MOIPR13	(*( CAN_MOIPR0_type *) 0xf00191a8u)	/* Message Object 13 Interrupt Pointer Register */
#define CAN_MOIPR130	(*( CAN_MOIPR0_type *) 0xf001a048u)	/* Message Object 130 Interrupt Pointer Register */
#define CAN_MOIPR131	(*( CAN_MOIPR0_type *) 0xf001a068u)	/* Message Object 131 Interrupt Pointer Register */
#define CAN_MOIPR132	(*( CAN_MOIPR0_type *) 0xf001a088u)	/* Message Object 132 Interrupt Pointer Register */
#define CAN_MOIPR133	(*( CAN_MOIPR0_type *) 0xf001a0a8u)	/* Message Object 133 Interrupt Pointer Register */
#define CAN_MOIPR134	(*( CAN_MOIPR0_type *) 0xf001a0c8u)	/* Message Object 134 Interrupt Pointer Register */
#define CAN_MOIPR135	(*( CAN_MOIPR0_type *) 0xf001a0e8u)	/* Message Object 135 Interrupt Pointer Register */
#define CAN_MOIPR136	(*( CAN_MOIPR0_type *) 0xf001a108u)	/* Message Object 136 Interrupt Pointer Register */
#define CAN_MOIPR137	(*( CAN_MOIPR0_type *) 0xf001a128u)	/* Message Object 137 Interrupt Pointer Register */
#define CAN_MOIPR138	(*( CAN_MOIPR0_type *) 0xf001a148u)	/* Message Object 138 Interrupt Pointer Register */
#define CAN_MOIPR139	(*( CAN_MOIPR0_type *) 0xf001a168u)	/* Message Object 139 Interrupt Pointer Register */
#define CAN_MOIPR14	(*( CAN_MOIPR0_type *) 0xf00191c8u)	/* Message Object 14 Interrupt Pointer Register */
#define CAN_MOIPR140	(*( CAN_MOIPR0_type *) 0xf001a188u)	/* Message Object 140 Interrupt Pointer Register */
#define CAN_MOIPR141	(*( CAN_MOIPR0_type *) 0xf001a1a8u)	/* Message Object 141 Interrupt Pointer Register */
#define CAN_MOIPR142	(*( CAN_MOIPR0_type *) 0xf001a1c8u)	/* Message Object 142 Interrupt Pointer Register */
#define CAN_MOIPR143	(*( CAN_MOIPR0_type *) 0xf001a1e8u)	/* Message Object 143 Interrupt Pointer Register */
#define CAN_MOIPR144	(*( CAN_MOIPR0_type *) 0xf001a208u)	/* Message Object 144 Interrupt Pointer Register */
#define CAN_MOIPR145	(*( CAN_MOIPR0_type *) 0xf001a228u)	/* Message Object 145 Interrupt Pointer Register */
#define CAN_MOIPR146	(*( CAN_MOIPR0_type *) 0xf001a248u)	/* Message Object 146 Interrupt Pointer Register */
#define CAN_MOIPR147	(*( CAN_MOIPR0_type *) 0xf001a268u)	/* Message Object 147 Interrupt Pointer Register */
#define CAN_MOIPR148	(*( CAN_MOIPR0_type *) 0xf001a288u)	/* Message Object 148 Interrupt Pointer Register */
#define CAN_MOIPR149	(*( CAN_MOIPR0_type *) 0xf001a2a8u)	/* Message Object 149 Interrupt Pointer Register */
#define CAN_MOIPR15	(*( CAN_MOIPR0_type *) 0xf00191e8u)	/* Message Object 15 Interrupt Pointer Register */
#define CAN_MOIPR150	(*( CAN_MOIPR0_type *) 0xf001a2c8u)	/* Message Object 150 Interrupt Pointer Register */
#define CAN_MOIPR151	(*( CAN_MOIPR0_type *) 0xf001a2e8u)	/* Message Object 151 Interrupt Pointer Register */
#define CAN_MOIPR152	(*( CAN_MOIPR0_type *) 0xf001a308u)	/* Message Object 152 Interrupt Pointer Register */
#define CAN_MOIPR153	(*( CAN_MOIPR0_type *) 0xf001a328u)	/* Message Object 153 Interrupt Pointer Register */
#define CAN_MOIPR154	(*( CAN_MOIPR0_type *) 0xf001a348u)	/* Message Object 154 Interrupt Pointer Register */
#define CAN_MOIPR155	(*( CAN_MOIPR0_type *) 0xf001a368u)	/* Message Object 155 Interrupt Pointer Register */
#define CAN_MOIPR156	(*( CAN_MOIPR0_type *) 0xf001a388u)	/* Message Object 156 Interrupt Pointer Register */
#define CAN_MOIPR157	(*( CAN_MOIPR0_type *) 0xf001a3a8u)	/* Message Object 157 Interrupt Pointer Register */
#define CAN_MOIPR158	(*( CAN_MOIPR0_type *) 0xf001a3c8u)	/* Message Object 158 Interrupt Pointer Register */
#define CAN_MOIPR159	(*( CAN_MOIPR0_type *) 0xf001a3e8u)	/* Message Object 159 Interrupt Pointer Register */
#define CAN_MOIPR16	(*( CAN_MOIPR0_type *) 0xf0019208u)	/* Message Object 16 Interrupt Pointer Register */
#define CAN_MOIPR160	(*( CAN_MOIPR0_type *) 0xf001a408u)	/* Message Object 160 Interrupt Pointer Register */
#define CAN_MOIPR161	(*( CAN_MOIPR0_type *) 0xf001a428u)	/* Message Object 161 Interrupt Pointer Register */
#define CAN_MOIPR162	(*( CAN_MOIPR0_type *) 0xf001a448u)	/* Message Object 162 Interrupt Pointer Register */
#define CAN_MOIPR163	(*( CAN_MOIPR0_type *) 0xf001a468u)	/* Message Object 163 Interrupt Pointer Register */
#define CAN_MOIPR164	(*( CAN_MOIPR0_type *) 0xf001a488u)	/* Message Object 164 Interrupt Pointer Register */
#define CAN_MOIPR165	(*( CAN_MOIPR0_type *) 0xf001a4a8u)	/* Message Object 165 Interrupt Pointer Register */
#define CAN_MOIPR166	(*( CAN_MOIPR0_type *) 0xf001a4c8u)	/* Message Object 166 Interrupt Pointer Register */
#define CAN_MOIPR167	(*( CAN_MOIPR0_type *) 0xf001a4e8u)	/* Message Object 167 Interrupt Pointer Register */
#define CAN_MOIPR168	(*( CAN_MOIPR0_type *) 0xf001a508u)	/* Message Object 168 Interrupt Pointer Register */
#define CAN_MOIPR169	(*( CAN_MOIPR0_type *) 0xf001a528u)	/* Message Object 169 Interrupt Pointer Register */
#define CAN_MOIPR17	(*( CAN_MOIPR0_type *) 0xf0019228u)	/* Message Object 17 Interrupt Pointer Register */
#define CAN_MOIPR170	(*( CAN_MOIPR0_type *) 0xf001a548u)	/* Message Object 170 Interrupt Pointer Register */
#define CAN_MOIPR171	(*( CAN_MOIPR0_type *) 0xf001a568u)	/* Message Object 171 Interrupt Pointer Register */
#define CAN_MOIPR172	(*( CAN_MOIPR0_type *) 0xf001a588u)	/* Message Object 172 Interrupt Pointer Register */
#define CAN_MOIPR173	(*( CAN_MOIPR0_type *) 0xf001a5a8u)	/* Message Object 173 Interrupt Pointer Register */
#define CAN_MOIPR174	(*( CAN_MOIPR0_type *) 0xf001a5c8u)	/* Message Object 174 Interrupt Pointer Register */
#define CAN_MOIPR175	(*( CAN_MOIPR0_type *) 0xf001a5e8u)	/* Message Object 175 Interrupt Pointer Register */
#define CAN_MOIPR176	(*( CAN_MOIPR0_type *) 0xf001a608u)	/* Message Object 176 Interrupt Pointer Register */
#define CAN_MOIPR177	(*( CAN_MOIPR0_type *) 0xf001a628u)	/* Message Object 177 Interrupt Pointer Register */
#define CAN_MOIPR178	(*( CAN_MOIPR0_type *) 0xf001a648u)	/* Message Object 178 Interrupt Pointer Register */
#define CAN_MOIPR179	(*( CAN_MOIPR0_type *) 0xf001a668u)	/* Message Object 179 Interrupt Pointer Register */
#define CAN_MOIPR18	(*( CAN_MOIPR0_type *) 0xf0019248u)	/* Message Object 18 Interrupt Pointer Register */
#define CAN_MOIPR180	(*( CAN_MOIPR0_type *) 0xf001a688u)	/* Message Object 180 Interrupt Pointer Register */
#define CAN_MOIPR181	(*( CAN_MOIPR0_type *) 0xf001a6a8u)	/* Message Object 181 Interrupt Pointer Register */
#define CAN_MOIPR182	(*( CAN_MOIPR0_type *) 0xf001a6c8u)	/* Message Object 182 Interrupt Pointer Register */
#define CAN_MOIPR183	(*( CAN_MOIPR0_type *) 0xf001a6e8u)	/* Message Object 183 Interrupt Pointer Register */
#define CAN_MOIPR184	(*( CAN_MOIPR0_type *) 0xf001a708u)	/* Message Object 184 Interrupt Pointer Register */
#define CAN_MOIPR185	(*( CAN_MOIPR0_type *) 0xf001a728u)	/* Message Object 185 Interrupt Pointer Register */
#define CAN_MOIPR186	(*( CAN_MOIPR0_type *) 0xf001a748u)	/* Message Object 186 Interrupt Pointer Register */
#define CAN_MOIPR187	(*( CAN_MOIPR0_type *) 0xf001a768u)	/* Message Object 187 Interrupt Pointer Register */
#define CAN_MOIPR188	(*( CAN_MOIPR0_type *) 0xf001a788u)	/* Message Object 188 Interrupt Pointer Register */
#define CAN_MOIPR189	(*( CAN_MOIPR0_type *) 0xf001a7a8u)	/* Message Object 189 Interrupt Pointer Register */
#define CAN_MOIPR19	(*( CAN_MOIPR0_type *) 0xf0019268u)	/* Message Object 19 Interrupt Pointer Register */
#define CAN_MOIPR190	(*( CAN_MOIPR0_type *) 0xf001a7c8u)	/* Message Object 190 Interrupt Pointer Register */
#define CAN_MOIPR191	(*( CAN_MOIPR0_type *) 0xf001a7e8u)	/* Message Object 191 Interrupt Pointer Register */
#define CAN_MOIPR192	(*( CAN_MOIPR0_type *) 0xf001a808u)	/* Message Object 192 Interrupt Pointer Register */
#define CAN_MOIPR193	(*( CAN_MOIPR0_type *) 0xf001a828u)	/* Message Object 193 Interrupt Pointer Register */
#define CAN_MOIPR194	(*( CAN_MOIPR0_type *) 0xf001a848u)	/* Message Object 194 Interrupt Pointer Register */
#define CAN_MOIPR195	(*( CAN_MOIPR0_type *) 0xf001a868u)	/* Message Object 195 Interrupt Pointer Register */
#define CAN_MOIPR196	(*( CAN_MOIPR0_type *) 0xf001a888u)	/* Message Object 196 Interrupt Pointer Register */
#define CAN_MOIPR197	(*( CAN_MOIPR0_type *) 0xf001a8a8u)	/* Message Object 197 Interrupt Pointer Register */
#define CAN_MOIPR198	(*( CAN_MOIPR0_type *) 0xf001a8c8u)	/* Message Object 198 Interrupt Pointer Register */
#define CAN_MOIPR199	(*( CAN_MOIPR0_type *) 0xf001a8e8u)	/* Message Object 199 Interrupt Pointer Register */
#define CAN_MOIPR2	(*( CAN_MOIPR0_type *) 0xf0019048u)	/* Message Object 2 Interrupt Pointer Register */
#define CAN_MOIPR20	(*( CAN_MOIPR0_type *) 0xf0019288u)	/* Message Object 20 Interrupt Pointer Register */
#define CAN_MOIPR200	(*( CAN_MOIPR0_type *) 0xf001a908u)	/* Message Object 200 Interrupt Pointer Register */
#define CAN_MOIPR201	(*( CAN_MOIPR0_type *) 0xf001a928u)	/* Message Object 201 Interrupt Pointer Register */
#define CAN_MOIPR202	(*( CAN_MOIPR0_type *) 0xf001a948u)	/* Message Object 202 Interrupt Pointer Register */
#define CAN_MOIPR203	(*( CAN_MOIPR0_type *) 0xf001a968u)	/* Message Object 203 Interrupt Pointer Register */
#define CAN_MOIPR204	(*( CAN_MOIPR0_type *) 0xf001a988u)	/* Message Object 204 Interrupt Pointer Register */
#define CAN_MOIPR205	(*( CAN_MOIPR0_type *) 0xf001a9a8u)	/* Message Object 205 Interrupt Pointer Register */
#define CAN_MOIPR206	(*( CAN_MOIPR0_type *) 0xf001a9c8u)	/* Message Object 206 Interrupt Pointer Register */
#define CAN_MOIPR207	(*( CAN_MOIPR0_type *) 0xf001a9e8u)	/* Message Object 207 Interrupt Pointer Register */
#define CAN_MOIPR208	(*( CAN_MOIPR0_type *) 0xf001aa08u)	/* Message Object 208 Interrupt Pointer Register */
#define CAN_MOIPR209	(*( CAN_MOIPR0_type *) 0xf001aa28u)	/* Message Object 209 Interrupt Pointer Register */
#define CAN_MOIPR21	(*( CAN_MOIPR0_type *) 0xf00192a8u)	/* Message Object 21 Interrupt Pointer Register */
#define CAN_MOIPR210	(*( CAN_MOIPR0_type *) 0xf001aa48u)	/* Message Object 210 Interrupt Pointer Register */
#define CAN_MOIPR211	(*( CAN_MOIPR0_type *) 0xf001aa68u)	/* Message Object 211 Interrupt Pointer Register */
#define CAN_MOIPR212	(*( CAN_MOIPR0_type *) 0xf001aa88u)	/* Message Object 212 Interrupt Pointer Register */
#define CAN_MOIPR213	(*( CAN_MOIPR0_type *) 0xf001aaa8u)	/* Message Object 213 Interrupt Pointer Register */
#define CAN_MOIPR214	(*( CAN_MOIPR0_type *) 0xf001aac8u)	/* Message Object 214 Interrupt Pointer Register */
#define CAN_MOIPR215	(*( CAN_MOIPR0_type *) 0xf001aae8u)	/* Message Object 215 Interrupt Pointer Register */
#define CAN_MOIPR216	(*( CAN_MOIPR0_type *) 0xf001ab08u)	/* Message Object 216 Interrupt Pointer Register */
#define CAN_MOIPR217	(*( CAN_MOIPR0_type *) 0xf001ab28u)	/* Message Object 217 Interrupt Pointer Register */
#define CAN_MOIPR218	(*( CAN_MOIPR0_type *) 0xf001ab48u)	/* Message Object 218 Interrupt Pointer Register */
#define CAN_MOIPR219	(*( CAN_MOIPR0_type *) 0xf001ab68u)	/* Message Object 219 Interrupt Pointer Register */
#define CAN_MOIPR22	(*( CAN_MOIPR0_type *) 0xf00192c8u)	/* Message Object 22 Interrupt Pointer Register */
#define CAN_MOIPR220	(*( CAN_MOIPR0_type *) 0xf001ab88u)	/* Message Object 220 Interrupt Pointer Register */
#define CAN_MOIPR221	(*( CAN_MOIPR0_type *) 0xf001aba8u)	/* Message Object 221 Interrupt Pointer Register */
#define CAN_MOIPR222	(*( CAN_MOIPR0_type *) 0xf001abc8u)	/* Message Object 222 Interrupt Pointer Register */
#define CAN_MOIPR223	(*( CAN_MOIPR0_type *) 0xf001abe8u)	/* Message Object 223 Interrupt Pointer Register */
#define CAN_MOIPR224	(*( CAN_MOIPR0_type *) 0xf001ac08u)	/* Message Object 224 Interrupt Pointer Register */
#define CAN_MOIPR225	(*( CAN_MOIPR0_type *) 0xf001ac28u)	/* Message Object 225 Interrupt Pointer Register */
#define CAN_MOIPR226	(*( CAN_MOIPR0_type *) 0xf001ac48u)	/* Message Object 226 Interrupt Pointer Register */
#define CAN_MOIPR227	(*( CAN_MOIPR0_type *) 0xf001ac68u)	/* Message Object 227 Interrupt Pointer Register */
#define CAN_MOIPR228	(*( CAN_MOIPR0_type *) 0xf001ac88u)	/* Message Object 228 Interrupt Pointer Register */
#define CAN_MOIPR229	(*( CAN_MOIPR0_type *) 0xf001aca8u)	/* Message Object 229 Interrupt Pointer Register */
#define CAN_MOIPR23	(*( CAN_MOIPR0_type *) 0xf00192e8u)	/* Message Object 23 Interrupt Pointer Register */
#define CAN_MOIPR230	(*( CAN_MOIPR0_type *) 0xf001acc8u)	/* Message Object 230 Interrupt Pointer Register */
#define CAN_MOIPR231	(*( CAN_MOIPR0_type *) 0xf001ace8u)	/* Message Object 231 Interrupt Pointer Register */
#define CAN_MOIPR232	(*( CAN_MOIPR0_type *) 0xf001ad08u)	/* Message Object 232 Interrupt Pointer Register */
#define CAN_MOIPR233	(*( CAN_MOIPR0_type *) 0xf001ad28u)	/* Message Object 233 Interrupt Pointer Register */
#define CAN_MOIPR234	(*( CAN_MOIPR0_type *) 0xf001ad48u)	/* Message Object 234 Interrupt Pointer Register */
#define CAN_MOIPR235	(*( CAN_MOIPR0_type *) 0xf001ad68u)	/* Message Object 235 Interrupt Pointer Register */
#define CAN_MOIPR236	(*( CAN_MOIPR0_type *) 0xf001ad88u)	/* Message Object 236 Interrupt Pointer Register */
#define CAN_MOIPR237	(*( CAN_MOIPR0_type *) 0xf001ada8u)	/* Message Object 237 Interrupt Pointer Register */
#define CAN_MOIPR238	(*( CAN_MOIPR0_type *) 0xf001adc8u)	/* Message Object 238 Interrupt Pointer Register */
#define CAN_MOIPR239	(*( CAN_MOIPR0_type *) 0xf001ade8u)	/* Message Object 239 Interrupt Pointer Register */
#define CAN_MOIPR24	(*( CAN_MOIPR0_type *) 0xf0019308u)	/* Message Object 24 Interrupt Pointer Register */
#define CAN_MOIPR240	(*( CAN_MOIPR0_type *) 0xf001ae08u)	/* Message Object 240 Interrupt Pointer Register */
#define CAN_MOIPR241	(*( CAN_MOIPR0_type *) 0xf001ae28u)	/* Message Object 241 Interrupt Pointer Register */
#define CAN_MOIPR242	(*( CAN_MOIPR0_type *) 0xf001ae48u)	/* Message Object 242 Interrupt Pointer Register */
#define CAN_MOIPR243	(*( CAN_MOIPR0_type *) 0xf001ae68u)	/* Message Object 243 Interrupt Pointer Register */
#define CAN_MOIPR244	(*( CAN_MOIPR0_type *) 0xf001ae88u)	/* Message Object 244 Interrupt Pointer Register */
#define CAN_MOIPR245	(*( CAN_MOIPR0_type *) 0xf001aea8u)	/* Message Object 245 Interrupt Pointer Register */
#define CAN_MOIPR246	(*( CAN_MOIPR0_type *) 0xf001aec8u)	/* Message Object 246 Interrupt Pointer Register */
#define CAN_MOIPR247	(*( CAN_MOIPR0_type *) 0xf001aee8u)	/* Message Object 247 Interrupt Pointer Register */
#define CAN_MOIPR248	(*( CAN_MOIPR0_type *) 0xf001af08u)	/* Message Object 248 Interrupt Pointer Register */
#define CAN_MOIPR249	(*( CAN_MOIPR0_type *) 0xf001af28u)	/* Message Object 249 Interrupt Pointer Register */
#define CAN_MOIPR25	(*( CAN_MOIPR0_type *) 0xf0019328u)	/* Message Object 25 Interrupt Pointer Register */
#define CAN_MOIPR250	(*( CAN_MOIPR0_type *) 0xf001af48u)	/* Message Object 250 Interrupt Pointer Register */
#define CAN_MOIPR251	(*( CAN_MOIPR0_type *) 0xf001af68u)	/* Message Object 251 Interrupt Pointer Register */
#define CAN_MOIPR252	(*( CAN_MOIPR0_type *) 0xf001af88u)	/* Message Object 252 Interrupt Pointer Register */
#define CAN_MOIPR253	(*( CAN_MOIPR0_type *) 0xf001afa8u)	/* Message Object 253 Interrupt Pointer Register */
#define CAN_MOIPR254	(*( CAN_MOIPR0_type *) 0xf001afc8u)	/* Message Object 254 Interrupt Pointer Register */
#define CAN_MOIPR255	(*( CAN_MOIPR0_type *) 0xf001afe8u)	/* Message Object 255 Interrupt Pointer Register */
#define CAN_MOIPR26	(*( CAN_MOIPR0_type *) 0xf0019348u)	/* Message Object 26 Interrupt Pointer Register */
#define CAN_MOIPR27	(*( CAN_MOIPR0_type *) 0xf0019368u)	/* Message Object 27 Interrupt Pointer Register */
#define CAN_MOIPR28	(*( CAN_MOIPR0_type *) 0xf0019388u)	/* Message Object 28 Interrupt Pointer Register */
#define CAN_MOIPR29	(*( CAN_MOIPR0_type *) 0xf00193a8u)	/* Message Object 29 Interrupt Pointer Register */
#define CAN_MOIPR3	(*( CAN_MOIPR0_type *) 0xf0019068u)	/* Message Object 3 Interrupt Pointer Register */
#define CAN_MOIPR30	(*( CAN_MOIPR0_type *) 0xf00193c8u)	/* Message Object 30 Interrupt Pointer Register */
#define CAN_MOIPR31	(*( CAN_MOIPR0_type *) 0xf00193e8u)	/* Message Object 31 Interrupt Pointer Register */
#define CAN_MOIPR32	(*( CAN_MOIPR0_type *) 0xf0019408u)	/* Message Object 32 Interrupt Pointer Register */
#define CAN_MOIPR33	(*( CAN_MOIPR0_type *) 0xf0019428u)	/* Message Object 33 Interrupt Pointer Register */
#define CAN_MOIPR34	(*( CAN_MOIPR0_type *) 0xf0019448u)	/* Message Object 34 Interrupt Pointer Register */
#define CAN_MOIPR35	(*( CAN_MOIPR0_type *) 0xf0019468u)	/* Message Object 35 Interrupt Pointer Register */
#define CAN_MOIPR36	(*( CAN_MOIPR0_type *) 0xf0019488u)	/* Message Object 36 Interrupt Pointer Register */
#define CAN_MOIPR37	(*( CAN_MOIPR0_type *) 0xf00194a8u)	/* Message Object 37 Interrupt Pointer Register */
#define CAN_MOIPR38	(*( CAN_MOIPR0_type *) 0xf00194c8u)	/* Message Object 38 Interrupt Pointer Register */
#define CAN_MOIPR39	(*( CAN_MOIPR0_type *) 0xf00194e8u)	/* Message Object 39 Interrupt Pointer Register */
#define CAN_MOIPR4	(*( CAN_MOIPR0_type *) 0xf0019088u)	/* Message Object 4 Interrupt Pointer Register */
#define CAN_MOIPR40	(*( CAN_MOIPR0_type *) 0xf0019508u)	/* Message Object 40 Interrupt Pointer Register */
#define CAN_MOIPR41	(*( CAN_MOIPR0_type *) 0xf0019528u)	/* Message Object 41 Interrupt Pointer Register */
#define CAN_MOIPR42	(*( CAN_MOIPR0_type *) 0xf0019548u)	/* Message Object 42 Interrupt Pointer Register */
#define CAN_MOIPR43	(*( CAN_MOIPR0_type *) 0xf0019568u)	/* Message Object 43 Interrupt Pointer Register */
#define CAN_MOIPR44	(*( CAN_MOIPR0_type *) 0xf0019588u)	/* Message Object 44 Interrupt Pointer Register */
#define CAN_MOIPR45	(*( CAN_MOIPR0_type *) 0xf00195a8u)	/* Message Object 45 Interrupt Pointer Register */
#define CAN_MOIPR46	(*( CAN_MOIPR0_type *) 0xf00195c8u)	/* Message Object 46 Interrupt Pointer Register */
#define CAN_MOIPR47	(*( CAN_MOIPR0_type *) 0xf00195e8u)	/* Message Object 47 Interrupt Pointer Register */
#define CAN_MOIPR48	(*( CAN_MOIPR0_type *) 0xf0019608u)	/* Message Object 48 Interrupt Pointer Register */
#define CAN_MOIPR49	(*( CAN_MOIPR0_type *) 0xf0019628u)	/* Message Object 49 Interrupt Pointer Register */
#define CAN_MOIPR5	(*( CAN_MOIPR0_type *) 0xf00190a8u)	/* Message Object 5 Interrupt Pointer Register */
#define CAN_MOIPR50	(*( CAN_MOIPR0_type *) 0xf0019648u)	/* Message Object 50 Interrupt Pointer Register */
#define CAN_MOIPR51	(*( CAN_MOIPR0_type *) 0xf0019668u)	/* Message Object 51 Interrupt Pointer Register */
#define CAN_MOIPR52	(*( CAN_MOIPR0_type *) 0xf0019688u)	/* Message Object 52 Interrupt Pointer Register */
#define CAN_MOIPR53	(*( CAN_MOIPR0_type *) 0xf00196a8u)	/* Message Object 53 Interrupt Pointer Register */
#define CAN_MOIPR54	(*( CAN_MOIPR0_type *) 0xf00196c8u)	/* Message Object 54 Interrupt Pointer Register */
#define CAN_MOIPR55	(*( CAN_MOIPR0_type *) 0xf00196e8u)	/* Message Object 55 Interrupt Pointer Register */
#define CAN_MOIPR56	(*( CAN_MOIPR0_type *) 0xf0019708u)	/* Message Object 56 Interrupt Pointer Register */
#define CAN_MOIPR57	(*( CAN_MOIPR0_type *) 0xf0019728u)	/* Message Object 57 Interrupt Pointer Register */
#define CAN_MOIPR58	(*( CAN_MOIPR0_type *) 0xf0019748u)	/* Message Object 58 Interrupt Pointer Register */
#define CAN_MOIPR59	(*( CAN_MOIPR0_type *) 0xf0019768u)	/* Message Object 59 Interrupt Pointer Register */
#define CAN_MOIPR6	(*( CAN_MOIPR0_type *) 0xf00190c8u)	/* Message Object 6 Interrupt Pointer Register */
#define CAN_MOIPR60	(*( CAN_MOIPR0_type *) 0xf0019788u)	/* Message Object 60 Interrupt Pointer Register */
#define CAN_MOIPR61	(*( CAN_MOIPR0_type *) 0xf00197a8u)	/* Message Object 61 Interrupt Pointer Register */
#define CAN_MOIPR62	(*( CAN_MOIPR0_type *) 0xf00197c8u)	/* Message Object 62 Interrupt Pointer Register */
#define CAN_MOIPR63	(*( CAN_MOIPR0_type *) 0xf00197e8u)	/* Message Object 63 Interrupt Pointer Register */
#define CAN_MOIPR64	(*( CAN_MOIPR0_type *) 0xf0019808u)	/* Message Object 64 Interrupt Pointer Register */
#define CAN_MOIPR65	(*( CAN_MOIPR0_type *) 0xf0019828u)	/* Message Object 65 Interrupt Pointer Register */
#define CAN_MOIPR66	(*( CAN_MOIPR0_type *) 0xf0019848u)	/* Message Object 66 Interrupt Pointer Register */
#define CAN_MOIPR67	(*( CAN_MOIPR0_type *) 0xf0019868u)	/* Message Object 67 Interrupt Pointer Register */
#define CAN_MOIPR68	(*( CAN_MOIPR0_type *) 0xf0019888u)	/* Message Object 68 Interrupt Pointer Register */
#define CAN_MOIPR69	(*( CAN_MOIPR0_type *) 0xf00198a8u)	/* Message Object 69 Interrupt Pointer Register */
#define CAN_MOIPR7	(*( CAN_MOIPR0_type *) 0xf00190e8u)	/* Message Object 7 Interrupt Pointer Register */
#define CAN_MOIPR70	(*( CAN_MOIPR0_type *) 0xf00198c8u)	/* Message Object 70 Interrupt Pointer Register */
#define CAN_MOIPR71	(*( CAN_MOIPR0_type *) 0xf00198e8u)	/* Message Object 71 Interrupt Pointer Register */
#define CAN_MOIPR72	(*( CAN_MOIPR0_type *) 0xf0019908u)	/* Message Object 72 Interrupt Pointer Register */
#define CAN_MOIPR73	(*( CAN_MOIPR0_type *) 0xf0019928u)	/* Message Object 73 Interrupt Pointer Register */
#define CAN_MOIPR74	(*( CAN_MOIPR0_type *) 0xf0019948u)	/* Message Object 74 Interrupt Pointer Register */
#define CAN_MOIPR75	(*( CAN_MOIPR0_type *) 0xf0019968u)	/* Message Object 75 Interrupt Pointer Register */
#define CAN_MOIPR76	(*( CAN_MOIPR0_type *) 0xf0019988u)	/* Message Object 76 Interrupt Pointer Register */
#define CAN_MOIPR77	(*( CAN_MOIPR0_type *) 0xf00199a8u)	/* Message Object 77 Interrupt Pointer Register */
#define CAN_MOIPR78	(*( CAN_MOIPR0_type *) 0xf00199c8u)	/* Message Object 78 Interrupt Pointer Register */
#define CAN_MOIPR79	(*( CAN_MOIPR0_type *) 0xf00199e8u)	/* Message Object 79 Interrupt Pointer Register */
#define CAN_MOIPR8	(*( CAN_MOIPR0_type *) 0xf0019108u)	/* Message Object 8 Interrupt Pointer Register */
#define CAN_MOIPR80	(*( CAN_MOIPR0_type *) 0xf0019a08u)	/* Message Object 80 Interrupt Pointer Register */
#define CAN_MOIPR81	(*( CAN_MOIPR0_type *) 0xf0019a28u)	/* Message Object 81 Interrupt Pointer Register */
#define CAN_MOIPR82	(*( CAN_MOIPR0_type *) 0xf0019a48u)	/* Message Object 82 Interrupt Pointer Register */
#define CAN_MOIPR83	(*( CAN_MOIPR0_type *) 0xf0019a68u)	/* Message Object 83 Interrupt Pointer Register */
#define CAN_MOIPR84	(*( CAN_MOIPR0_type *) 0xf0019a88u)	/* Message Object 84 Interrupt Pointer Register */
#define CAN_MOIPR85	(*( CAN_MOIPR0_type *) 0xf0019aa8u)	/* Message Object 85 Interrupt Pointer Register */
#define CAN_MOIPR86	(*( CAN_MOIPR0_type *) 0xf0019ac8u)	/* Message Object 86 Interrupt Pointer Register */
#define CAN_MOIPR87	(*( CAN_MOIPR0_type *) 0xf0019ae8u)	/* Message Object 87 Interrupt Pointer Register */
#define CAN_MOIPR88	(*( CAN_MOIPR0_type *) 0xf0019b08u)	/* Message Object 88 Interrupt Pointer Register */
#define CAN_MOIPR89	(*( CAN_MOIPR0_type *) 0xf0019b28u)	/* Message Object 89 Interrupt Pointer Register */
#define CAN_MOIPR9	(*( CAN_MOIPR0_type *) 0xf0019128u)	/* Message Object 9 Interrupt Pointer Register */
#define CAN_MOIPR90	(*( CAN_MOIPR0_type *) 0xf0019b48u)	/* Message Object 90 Interrupt Pointer Register */
#define CAN_MOIPR91	(*( CAN_MOIPR0_type *) 0xf0019b68u)	/* Message Object 91 Interrupt Pointer Register */
#define CAN_MOIPR92	(*( CAN_MOIPR0_type *) 0xf0019b88u)	/* Message Object 92 Interrupt Pointer Register */
#define CAN_MOIPR93	(*( CAN_MOIPR0_type *) 0xf0019ba8u)	/* Message Object 93 Interrupt Pointer Register */
#define CAN_MOIPR94	(*( CAN_MOIPR0_type *) 0xf0019bc8u)	/* Message Object 94 Interrupt Pointer Register */
#define CAN_MOIPR95	(*( CAN_MOIPR0_type *) 0xf0019be8u)	/* Message Object 95 Interrupt Pointer Register */
#define CAN_MOIPR96	(*( CAN_MOIPR0_type *) 0xf0019c08u)	/* Message Object 96 Interrupt Pointer Register */
#define CAN_MOIPR97	(*( CAN_MOIPR0_type *) 0xf0019c28u)	/* Message Object 97 Interrupt Pointer Register */
#define CAN_MOIPR98	(*( CAN_MOIPR0_type *) 0xf0019c48u)	/* Message Object 98 Interrupt Pointer Register */
#define CAN_MOIPR99	(*( CAN_MOIPR0_type *) 0xf0019c68u)	/* Message Object 99 Interrupt Pointer Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int RXPND          : 1;	/* Receive Pending */
		/* const */ unsigned int TXPND          : 1;	/* Transmit Pending */
		/* const */ unsigned int RXUPD          : 1;	/* Receive Updating */
		/* const */ unsigned int NEWDAT         : 1;	/* New Data */
		/* const */ unsigned int MSGLST         : 1;	/* Message Lost */
		/* const */ unsigned int MSGVAL         : 1;	/* Message Valid */
		/* const */ unsigned int RTSEL          : 1;	/* Receive/Transmit Selected */
		/* const */ unsigned int RXEN           : 1;	/* Receive Enable */
		/* const */ unsigned int TXRQ           : 1;	/* Transmit Request */
		/* const */ unsigned int TXEN0          : 1;	/* Transmit Enable 0 */
		/* const */ unsigned int TXEN1          : 1;	/* Transmit Enable 1 */
		/* const */ unsigned int DIR            : 1;	/* Message Direction */
		/* const */ unsigned int LIST           : 4;	/* List Allocation */
		/* const */ unsigned int PPREV          : 8;	/* Pointer to Previous Message Object */
		/* const */ unsigned int PNEXT          : 8;	/* Pointer to Next Message Object */
	} B;
	int I;
	unsigned int U;

} CAN_MOSTAT0_type;
#define CAN_MOSTAT0	(*( CAN_MOSTAT0_type *) 0xf001901cu)	/* Message Object 0 Status Register */
#define CAN_MOSTAT1	(*( CAN_MOSTAT0_type *) 0xf001903cu)	/* Message Object 1 Status Register */
#define CAN_MOSTAT10	(*( CAN_MOSTAT0_type *) 0xf001915cu)	/* Message Object 10 Status Register */
#define CAN_MOSTAT100	(*( CAN_MOSTAT0_type *) 0xf0019c9cu)	/* Message Object 100 Status Register */
#define CAN_MOSTAT101	(*( CAN_MOSTAT0_type *) 0xf0019cbcu)	/* Message Object 101 Status Register */
#define CAN_MOSTAT102	(*( CAN_MOSTAT0_type *) 0xf0019cdcu)	/* Message Object 102 Status Register */
#define CAN_MOSTAT103	(*( CAN_MOSTAT0_type *) 0xf0019cfcu)	/* Message Object 103 Status Register */
#define CAN_MOSTAT104	(*( CAN_MOSTAT0_type *) 0xf0019d1cu)	/* Message Object 104 Status Register */
#define CAN_MOSTAT105	(*( CAN_MOSTAT0_type *) 0xf0019d3cu)	/* Message Object 105 Status Register */
#define CAN_MOSTAT106	(*( CAN_MOSTAT0_type *) 0xf0019d5cu)	/* Message Object 106 Status Register */
#define CAN_MOSTAT107	(*( CAN_MOSTAT0_type *) 0xf0019d7cu)	/* Message Object 107 Status Register */
#define CAN_MOSTAT108	(*( CAN_MOSTAT0_type *) 0xf0019d9cu)	/* Message Object 108 Status Register */
#define CAN_MOSTAT109	(*( CAN_MOSTAT0_type *) 0xf0019dbcu)	/* Message Object 109 Status Register */
#define CAN_MOSTAT11	(*( CAN_MOSTAT0_type *) 0xf001917cu)	/* Message Object 11 Status Register */
#define CAN_MOSTAT110	(*( CAN_MOSTAT0_type *) 0xf0019ddcu)	/* Message Object 110 Status Register */
#define CAN_MOSTAT111	(*( CAN_MOSTAT0_type *) 0xf0019dfcu)	/* Message Object 111 Status Register */
#define CAN_MOSTAT112	(*( CAN_MOSTAT0_type *) 0xf0019e1cu)	/* Message Object 112 Status Register */
#define CAN_MOSTAT113	(*( CAN_MOSTAT0_type *) 0xf0019e3cu)	/* Message Object 113 Status Register */
#define CAN_MOSTAT114	(*( CAN_MOSTAT0_type *) 0xf0019e5cu)	/* Message Object 114 Status Register */
#define CAN_MOSTAT115	(*( CAN_MOSTAT0_type *) 0xf0019e7cu)	/* Message Object 115 Status Register */
#define CAN_MOSTAT116	(*( CAN_MOSTAT0_type *) 0xf0019e9cu)	/* Message Object 116 Status Register */
#define CAN_MOSTAT117	(*( CAN_MOSTAT0_type *) 0xf0019ebcu)	/* Message Object 117 Status Register */
#define CAN_MOSTAT118	(*( CAN_MOSTAT0_type *) 0xf0019edcu)	/* Message Object 118 Status Register */
#define CAN_MOSTAT119	(*( CAN_MOSTAT0_type *) 0xf0019efcu)	/* Message Object 119 Status Register */
#define CAN_MOSTAT12	(*( CAN_MOSTAT0_type *) 0xf001919cu)	/* Message Object 12 Status Register */
#define CAN_MOSTAT120	(*( CAN_MOSTAT0_type *) 0xf0019f1cu)	/* Message Object 120 Status Register */
#define CAN_MOSTAT121	(*( CAN_MOSTAT0_type *) 0xf0019f3cu)	/* Message Object 121 Status Register */
#define CAN_MOSTAT122	(*( CAN_MOSTAT0_type *) 0xf0019f5cu)	/* Message Object 122 Status Register */
#define CAN_MOSTAT123	(*( CAN_MOSTAT0_type *) 0xf0019f7cu)	/* Message Object 123 Status Register */
#define CAN_MOSTAT124	(*( CAN_MOSTAT0_type *) 0xf0019f9cu)	/* Message Object 124 Status Register */
#define CAN_MOSTAT125	(*( CAN_MOSTAT0_type *) 0xf0019fbcu)	/* Message Object 125 Status Register */
#define CAN_MOSTAT126	(*( CAN_MOSTAT0_type *) 0xf0019fdcu)	/* Message Object 126 Status Register */
#define CAN_MOSTAT127	(*( CAN_MOSTAT0_type *) 0xf0019ffcu)	/* Message Object 127 Status Register */
#define CAN_MOSTAT128	(*( CAN_MOSTAT0_type *) 0xf001a01cu)	/* Message Object 128 Status Register */
#define CAN_MOSTAT129	(*( CAN_MOSTAT0_type *) 0xf001a03cu)	/* Message Object 129 Status Register */
#define CAN_MOSTAT13	(*( CAN_MOSTAT0_type *) 0xf00191bcu)	/* Message Object 13 Status Register */
#define CAN_MOSTAT130	(*( CAN_MOSTAT0_type *) 0xf001a05cu)	/* Message Object 130 Status Register */
#define CAN_MOSTAT131	(*( CAN_MOSTAT0_type *) 0xf001a07cu)	/* Message Object 131 Status Register */
#define CAN_MOSTAT132	(*( CAN_MOSTAT0_type *) 0xf001a09cu)	/* Message Object 132 Status Register */
#define CAN_MOSTAT133	(*( CAN_MOSTAT0_type *) 0xf001a0bcu)	/* Message Object 133 Status Register */
#define CAN_MOSTAT134	(*( CAN_MOSTAT0_type *) 0xf001a0dcu)	/* Message Object 134 Status Register */
#define CAN_MOSTAT135	(*( CAN_MOSTAT0_type *) 0xf001a0fcu)	/* Message Object 135 Status Register */
#define CAN_MOSTAT136	(*( CAN_MOSTAT0_type *) 0xf001a11cu)	/* Message Object 136 Status Register */
#define CAN_MOSTAT137	(*( CAN_MOSTAT0_type *) 0xf001a13cu)	/* Message Object 137 Status Register */
#define CAN_MOSTAT138	(*( CAN_MOSTAT0_type *) 0xf001a15cu)	/* Message Object 138 Status Register */
#define CAN_MOSTAT139	(*( CAN_MOSTAT0_type *) 0xf001a17cu)	/* Message Object 139 Status Register */
#define CAN_MOSTAT14	(*( CAN_MOSTAT0_type *) 0xf00191dcu)	/* Message Object 14 Status Register */
#define CAN_MOSTAT140	(*( CAN_MOSTAT0_type *) 0xf001a19cu)	/* Message Object 140 Status Register */
#define CAN_MOSTAT141	(*( CAN_MOSTAT0_type *) 0xf001a1bcu)	/* Message Object 141 Status Register */
#define CAN_MOSTAT142	(*( CAN_MOSTAT0_type *) 0xf001a1dcu)	/* Message Object 142 Status Register */
#define CAN_MOSTAT143	(*( CAN_MOSTAT0_type *) 0xf001a1fcu)	/* Message Object 143 Status Register */
#define CAN_MOSTAT144	(*( CAN_MOSTAT0_type *) 0xf001a21cu)	/* Message Object 144 Status Register */
#define CAN_MOSTAT145	(*( CAN_MOSTAT0_type *) 0xf001a23cu)	/* Message Object 145 Status Register */
#define CAN_MOSTAT146	(*( CAN_MOSTAT0_type *) 0xf001a25cu)	/* Message Object 146 Status Register */
#define CAN_MOSTAT147	(*( CAN_MOSTAT0_type *) 0xf001a27cu)	/* Message Object 147 Status Register */
#define CAN_MOSTAT148	(*( CAN_MOSTAT0_type *) 0xf001a29cu)	/* Message Object 148 Status Register */
#define CAN_MOSTAT149	(*( CAN_MOSTAT0_type *) 0xf001a2bcu)	/* Message Object 149 Status Register */
#define CAN_MOSTAT15	(*( CAN_MOSTAT0_type *) 0xf00191fcu)	/* Message Object 15 Status Register */
#define CAN_MOSTAT150	(*( CAN_MOSTAT0_type *) 0xf001a2dcu)	/* Message Object 150 Status Register */
#define CAN_MOSTAT151	(*( CAN_MOSTAT0_type *) 0xf001a2fcu)	/* Message Object 151 Status Register */
#define CAN_MOSTAT152	(*( CAN_MOSTAT0_type *) 0xf001a31cu)	/* Message Object 152 Status Register */
#define CAN_MOSTAT153	(*( CAN_MOSTAT0_type *) 0xf001a33cu)	/* Message Object 153 Status Register */
#define CAN_MOSTAT154	(*( CAN_MOSTAT0_type *) 0xf001a35cu)	/* Message Object 154 Status Register */
#define CAN_MOSTAT155	(*( CAN_MOSTAT0_type *) 0xf001a37cu)	/* Message Object 155 Status Register */
#define CAN_MOSTAT156	(*( CAN_MOSTAT0_type *) 0xf001a39cu)	/* Message Object 156 Status Register */
#define CAN_MOSTAT157	(*( CAN_MOSTAT0_type *) 0xf001a3bcu)	/* Message Object 157 Status Register */
#define CAN_MOSTAT158	(*( CAN_MOSTAT0_type *) 0xf001a3dcu)	/* Message Object 158 Status Register */
#define CAN_MOSTAT159	(*( CAN_MOSTAT0_type *) 0xf001a3fcu)	/* Message Object 159 Status Register */
#define CAN_MOSTAT16	(*( CAN_MOSTAT0_type *) 0xf001921cu)	/* Message Object 16 Status Register */
#define CAN_MOSTAT160	(*( CAN_MOSTAT0_type *) 0xf001a41cu)	/* Message Object 160 Status Register */
#define CAN_MOSTAT161	(*( CAN_MOSTAT0_type *) 0xf001a43cu)	/* Message Object 161 Status Register */
#define CAN_MOSTAT162	(*( CAN_MOSTAT0_type *) 0xf001a45cu)	/* Message Object 162 Status Register */
#define CAN_MOSTAT163	(*( CAN_MOSTAT0_type *) 0xf001a47cu)	/* Message Object 163 Status Register */
#define CAN_MOSTAT164	(*( CAN_MOSTAT0_type *) 0xf001a49cu)	/* Message Object 164 Status Register */
#define CAN_MOSTAT165	(*( CAN_MOSTAT0_type *) 0xf001a4bcu)	/* Message Object 165 Status Register */
#define CAN_MOSTAT166	(*( CAN_MOSTAT0_type *) 0xf001a4dcu)	/* Message Object 166 Status Register */
#define CAN_MOSTAT167	(*( CAN_MOSTAT0_type *) 0xf001a4fcu)	/* Message Object 167 Status Register */
#define CAN_MOSTAT168	(*( CAN_MOSTAT0_type *) 0xf001a51cu)	/* Message Object 168 Status Register */
#define CAN_MOSTAT169	(*( CAN_MOSTAT0_type *) 0xf001a53cu)	/* Message Object 169 Status Register */
#define CAN_MOSTAT17	(*( CAN_MOSTAT0_type *) 0xf001923cu)	/* Message Object 17 Status Register */
#define CAN_MOSTAT170	(*( CAN_MOSTAT0_type *) 0xf001a55cu)	/* Message Object 170 Status Register */
#define CAN_MOSTAT171	(*( CAN_MOSTAT0_type *) 0xf001a57cu)	/* Message Object 171 Status Register */
#define CAN_MOSTAT172	(*( CAN_MOSTAT0_type *) 0xf001a59cu)	/* Message Object 172 Status Register */
#define CAN_MOSTAT173	(*( CAN_MOSTAT0_type *) 0xf001a5bcu)	/* Message Object 173 Status Register */
#define CAN_MOSTAT174	(*( CAN_MOSTAT0_type *) 0xf001a5dcu)	/* Message Object 174 Status Register */
#define CAN_MOSTAT175	(*( CAN_MOSTAT0_type *) 0xf001a5fcu)	/* Message Object 175 Status Register */
#define CAN_MOSTAT176	(*( CAN_MOSTAT0_type *) 0xf001a61cu)	/* Message Object 176 Status Register */
#define CAN_MOSTAT177	(*( CAN_MOSTAT0_type *) 0xf001a63cu)	/* Message Object 177 Status Register */
#define CAN_MOSTAT178	(*( CAN_MOSTAT0_type *) 0xf001a65cu)	/* Message Object 178 Status Register */
#define CAN_MOSTAT179	(*( CAN_MOSTAT0_type *) 0xf001a67cu)	/* Message Object 179 Status Register */
#define CAN_MOSTAT18	(*( CAN_MOSTAT0_type *) 0xf001925cu)	/* Message Object 18 Status Register */
#define CAN_MOSTAT180	(*( CAN_MOSTAT0_type *) 0xf001a69cu)	/* Message Object 180 Status Register */
#define CAN_MOSTAT181	(*( CAN_MOSTAT0_type *) 0xf001a6bcu)	/* Message Object 181 Status Register */
#define CAN_MOSTAT182	(*( CAN_MOSTAT0_type *) 0xf001a6dcu)	/* Message Object 182 Status Register */
#define CAN_MOSTAT183	(*( CAN_MOSTAT0_type *) 0xf001a6fcu)	/* Message Object 183 Status Register */
#define CAN_MOSTAT184	(*( CAN_MOSTAT0_type *) 0xf001a71cu)	/* Message Object 184 Status Register */
#define CAN_MOSTAT185	(*( CAN_MOSTAT0_type *) 0xf001a73cu)	/* Message Object 185 Status Register */
#define CAN_MOSTAT186	(*( CAN_MOSTAT0_type *) 0xf001a75cu)	/* Message Object 186 Status Register */
#define CAN_MOSTAT187	(*( CAN_MOSTAT0_type *) 0xf001a77cu)	/* Message Object 187 Status Register */
#define CAN_MOSTAT188	(*( CAN_MOSTAT0_type *) 0xf001a79cu)	/* Message Object 188 Status Register */
#define CAN_MOSTAT189	(*( CAN_MOSTAT0_type *) 0xf001a7bcu)	/* Message Object 189 Status Register */
#define CAN_MOSTAT19	(*( CAN_MOSTAT0_type *) 0xf001927cu)	/* Message Object 19 Status Register */
#define CAN_MOSTAT190	(*( CAN_MOSTAT0_type *) 0xf001a7dcu)	/* Message Object 190 Status Register */
#define CAN_MOSTAT191	(*( CAN_MOSTAT0_type *) 0xf001a7fcu)	/* Message Object 191 Status Register */
#define CAN_MOSTAT192	(*( CAN_MOSTAT0_type *) 0xf001a81cu)	/* Message Object 192 Status Register */
#define CAN_MOSTAT193	(*( CAN_MOSTAT0_type *) 0xf001a83cu)	/* Message Object 193 Status Register */
#define CAN_MOSTAT194	(*( CAN_MOSTAT0_type *) 0xf001a85cu)	/* Message Object 194 Status Register */
#define CAN_MOSTAT195	(*( CAN_MOSTAT0_type *) 0xf001a87cu)	/* Message Object 195 Status Register */
#define CAN_MOSTAT196	(*( CAN_MOSTAT0_type *) 0xf001a89cu)	/* Message Object 196 Status Register */
#define CAN_MOSTAT197	(*( CAN_MOSTAT0_type *) 0xf001a8bcu)	/* Message Object 197 Status Register */
#define CAN_MOSTAT198	(*( CAN_MOSTAT0_type *) 0xf001a8dcu)	/* Message Object 198 Status Register */
#define CAN_MOSTAT199	(*( CAN_MOSTAT0_type *) 0xf001a8fcu)	/* Message Object 199 Status Register */
#define CAN_MOSTAT2	(*( CAN_MOSTAT0_type *) 0xf001905cu)	/* Message Object 2 Status Register */
#define CAN_MOSTAT20	(*( CAN_MOSTAT0_type *) 0xf001929cu)	/* Message Object 20 Status Register */
#define CAN_MOSTAT200	(*( CAN_MOSTAT0_type *) 0xf001a91cu)	/* Message Object 200 Status Register */
#define CAN_MOSTAT201	(*( CAN_MOSTAT0_type *) 0xf001a93cu)	/* Message Object 201 Status Register */
#define CAN_MOSTAT202	(*( CAN_MOSTAT0_type *) 0xf001a95cu)	/* Message Object 202 Status Register */
#define CAN_MOSTAT203	(*( CAN_MOSTAT0_type *) 0xf001a97cu)	/* Message Object 203 Status Register */
#define CAN_MOSTAT204	(*( CAN_MOSTAT0_type *) 0xf001a99cu)	/* Message Object 204 Status Register */
#define CAN_MOSTAT205	(*( CAN_MOSTAT0_type *) 0xf001a9bcu)	/* Message Object 205 Status Register */
#define CAN_MOSTAT206	(*( CAN_MOSTAT0_type *) 0xf001a9dcu)	/* Message Object 206 Status Register */
#define CAN_MOSTAT207	(*( CAN_MOSTAT0_type *) 0xf001a9fcu)	/* Message Object 207 Status Register */
#define CAN_MOSTAT208	(*( CAN_MOSTAT0_type *) 0xf001aa1cu)	/* Message Object 208 Status Register */
#define CAN_MOSTAT209	(*( CAN_MOSTAT0_type *) 0xf001aa3cu)	/* Message Object 209 Status Register */
#define CAN_MOSTAT21	(*( CAN_MOSTAT0_type *) 0xf00192bcu)	/* Message Object 21 Status Register */
#define CAN_MOSTAT210	(*( CAN_MOSTAT0_type *) 0xf001aa5cu)	/* Message Object 210 Status Register */
#define CAN_MOSTAT211	(*( CAN_MOSTAT0_type *) 0xf001aa7cu)	/* Message Object 211 Status Register */
#define CAN_MOSTAT212	(*( CAN_MOSTAT0_type *) 0xf001aa9cu)	/* Message Object 212 Status Register */
#define CAN_MOSTAT213	(*( CAN_MOSTAT0_type *) 0xf001aabcu)	/* Message Object 213 Status Register */
#define CAN_MOSTAT214	(*( CAN_MOSTAT0_type *) 0xf001aadcu)	/* Message Object 214 Status Register */
#define CAN_MOSTAT215	(*( CAN_MOSTAT0_type *) 0xf001aafcu)	/* Message Object 215 Status Register */
#define CAN_MOSTAT216	(*( CAN_MOSTAT0_type *) 0xf001ab1cu)	/* Message Object 216 Status Register */
#define CAN_MOSTAT217	(*( CAN_MOSTAT0_type *) 0xf001ab3cu)	/* Message Object 217 Status Register */
#define CAN_MOSTAT218	(*( CAN_MOSTAT0_type *) 0xf001ab5cu)	/* Message Object 218 Status Register */
#define CAN_MOSTAT219	(*( CAN_MOSTAT0_type *) 0xf001ab7cu)	/* Message Object 219 Status Register */
#define CAN_MOSTAT22	(*( CAN_MOSTAT0_type *) 0xf00192dcu)	/* Message Object 22 Status Register */
#define CAN_MOSTAT220	(*( CAN_MOSTAT0_type *) 0xf001ab9cu)	/* Message Object 220 Status Register */
#define CAN_MOSTAT221	(*( CAN_MOSTAT0_type *) 0xf001abbcu)	/* Message Object 221 Status Register */
#define CAN_MOSTAT222	(*( CAN_MOSTAT0_type *) 0xf001abdcu)	/* Message Object 222 Status Register */
#define CAN_MOSTAT223	(*( CAN_MOSTAT0_type *) 0xf001abfcu)	/* Message Object 223 Status Register */
#define CAN_MOSTAT224	(*( CAN_MOSTAT0_type *) 0xf001ac1cu)	/* Message Object 224 Status Register */
#define CAN_MOSTAT225	(*( CAN_MOSTAT0_type *) 0xf001ac3cu)	/* Message Object 225 Status Register */
#define CAN_MOSTAT226	(*( CAN_MOSTAT0_type *) 0xf001ac5cu)	/* Message Object 226 Status Register */
#define CAN_MOSTAT227	(*( CAN_MOSTAT0_type *) 0xf001ac7cu)	/* Message Object 227 Status Register */
#define CAN_MOSTAT228	(*( CAN_MOSTAT0_type *) 0xf001ac9cu)	/* Message Object 228 Status Register */
#define CAN_MOSTAT229	(*( CAN_MOSTAT0_type *) 0xf001acbcu)	/* Message Object 229 Status Register */
#define CAN_MOSTAT23	(*( CAN_MOSTAT0_type *) 0xf00192fcu)	/* Message Object 23 Status Register */
#define CAN_MOSTAT230	(*( CAN_MOSTAT0_type *) 0xf001acdcu)	/* Message Object 230 Status Register */
#define CAN_MOSTAT231	(*( CAN_MOSTAT0_type *) 0xf001acfcu)	/* Message Object 231 Status Register */
#define CAN_MOSTAT232	(*( CAN_MOSTAT0_type *) 0xf001ad1cu)	/* Message Object 232 Status Register */
#define CAN_MOSTAT233	(*( CAN_MOSTAT0_type *) 0xf001ad3cu)	/* Message Object 233 Status Register */
#define CAN_MOSTAT234	(*( CAN_MOSTAT0_type *) 0xf001ad5cu)	/* Message Object 234 Status Register */
#define CAN_MOSTAT235	(*( CAN_MOSTAT0_type *) 0xf001ad7cu)	/* Message Object 235 Status Register */
#define CAN_MOSTAT236	(*( CAN_MOSTAT0_type *) 0xf001ad9cu)	/* Message Object 236 Status Register */
#define CAN_MOSTAT237	(*( CAN_MOSTAT0_type *) 0xf001adbcu)	/* Message Object 237 Status Register */
#define CAN_MOSTAT238	(*( CAN_MOSTAT0_type *) 0xf001addcu)	/* Message Object 238 Status Register */
#define CAN_MOSTAT239	(*( CAN_MOSTAT0_type *) 0xf001adfcu)	/* Message Object 239 Status Register */
#define CAN_MOSTAT24	(*( CAN_MOSTAT0_type *) 0xf001931cu)	/* Message Object 24 Status Register */
#define CAN_MOSTAT240	(*( CAN_MOSTAT0_type *) 0xf001ae1cu)	/* Message Object 240 Status Register */
#define CAN_MOSTAT241	(*( CAN_MOSTAT0_type *) 0xf001ae3cu)	/* Message Object 241 Status Register */
#define CAN_MOSTAT242	(*( CAN_MOSTAT0_type *) 0xf001ae5cu)	/* Message Object 242 Status Register */
#define CAN_MOSTAT243	(*( CAN_MOSTAT0_type *) 0xf001ae7cu)	/* Message Object 243 Status Register */
#define CAN_MOSTAT244	(*( CAN_MOSTAT0_type *) 0xf001ae9cu)	/* Message Object 244 Status Register */
#define CAN_MOSTAT245	(*( CAN_MOSTAT0_type *) 0xf001aebcu)	/* Message Object 245 Status Register */
#define CAN_MOSTAT246	(*( CAN_MOSTAT0_type *) 0xf001aedcu)	/* Message Object 246 Status Register */
#define CAN_MOSTAT247	(*( CAN_MOSTAT0_type *) 0xf001aefcu)	/* Message Object 247 Status Register */
#define CAN_MOSTAT248	(*( CAN_MOSTAT0_type *) 0xf001af1cu)	/* Message Object 248 Status Register */
#define CAN_MOSTAT249	(*( CAN_MOSTAT0_type *) 0xf001af3cu)	/* Message Object 249 Status Register */
#define CAN_MOSTAT25	(*( CAN_MOSTAT0_type *) 0xf001933cu)	/* Message Object 25 Status Register */
#define CAN_MOSTAT250	(*( CAN_MOSTAT0_type *) 0xf001af5cu)	/* Message Object 250 Status Register */
#define CAN_MOSTAT251	(*( CAN_MOSTAT0_type *) 0xf001af7cu)	/* Message Object 251 Status Register */
#define CAN_MOSTAT252	(*( CAN_MOSTAT0_type *) 0xf001af9cu)	/* Message Object 252 Status Register */
#define CAN_MOSTAT253	(*( CAN_MOSTAT0_type *) 0xf001afbcu)	/* Message Object 253 Status Register */
#define CAN_MOSTAT254	(*( CAN_MOSTAT0_type *) 0xf001afdcu)	/* Message Object 254 Status Register */
#define CAN_MOSTAT255	(*( CAN_MOSTAT0_type *) 0xf001affcu)	/* Message Object 255 Status Register */
#define CAN_MOSTAT26	(*( CAN_MOSTAT0_type *) 0xf001935cu)	/* Message Object 26 Status Register */
#define CAN_MOSTAT27	(*( CAN_MOSTAT0_type *) 0xf001937cu)	/* Message Object 27 Status Register */
#define CAN_MOSTAT28	(*( CAN_MOSTAT0_type *) 0xf001939cu)	/* Message Object 28 Status Register */
#define CAN_MOSTAT29	(*( CAN_MOSTAT0_type *) 0xf00193bcu)	/* Message Object 29 Status Register */
#define CAN_MOSTAT3	(*( CAN_MOSTAT0_type *) 0xf001907cu)	/* Message Object 3 Status Register */
#define CAN_MOSTAT30	(*( CAN_MOSTAT0_type *) 0xf00193dcu)	/* Message Object 30 Status Register */
#define CAN_MOSTAT31	(*( CAN_MOSTAT0_type *) 0xf00193fcu)	/* Message Object 31 Status Register */
#define CAN_MOSTAT32	(*( CAN_MOSTAT0_type *) 0xf001941cu)	/* Message Object 32 Status Register */
#define CAN_MOSTAT33	(*( CAN_MOSTAT0_type *) 0xf001943cu)	/* Message Object 33 Status Register */
#define CAN_MOSTAT34	(*( CAN_MOSTAT0_type *) 0xf001945cu)	/* Message Object 34 Status Register */
#define CAN_MOSTAT35	(*( CAN_MOSTAT0_type *) 0xf001947cu)	/* Message Object 35 Status Register */
#define CAN_MOSTAT36	(*( CAN_MOSTAT0_type *) 0xf001949cu)	/* Message Object 36 Status Register */
#define CAN_MOSTAT37	(*( CAN_MOSTAT0_type *) 0xf00194bcu)	/* Message Object 37 Status Register */
#define CAN_MOSTAT38	(*( CAN_MOSTAT0_type *) 0xf00194dcu)	/* Message Object 38 Status Register */
#define CAN_MOSTAT39	(*( CAN_MOSTAT0_type *) 0xf00194fcu)	/* Message Object 39 Status Register */
#define CAN_MOSTAT4	(*( CAN_MOSTAT0_type *) 0xf001909cu)	/* Message Object 4 Status Register */
#define CAN_MOSTAT40	(*( CAN_MOSTAT0_type *) 0xf001951cu)	/* Message Object 40 Status Register */
#define CAN_MOSTAT41	(*( CAN_MOSTAT0_type *) 0xf001953cu)	/* Message Object 41 Status Register */
#define CAN_MOSTAT42	(*( CAN_MOSTAT0_type *) 0xf001955cu)	/* Message Object 42 Status Register */
#define CAN_MOSTAT43	(*( CAN_MOSTAT0_type *) 0xf001957cu)	/* Message Object 43 Status Register */
#define CAN_MOSTAT44	(*( CAN_MOSTAT0_type *) 0xf001959cu)	/* Message Object 44 Status Register */
#define CAN_MOSTAT45	(*( CAN_MOSTAT0_type *) 0xf00195bcu)	/* Message Object 45 Status Register */
#define CAN_MOSTAT46	(*( CAN_MOSTAT0_type *) 0xf00195dcu)	/* Message Object 46 Status Register */
#define CAN_MOSTAT47	(*( CAN_MOSTAT0_type *) 0xf00195fcu)	/* Message Object 47 Status Register */
#define CAN_MOSTAT48	(*( CAN_MOSTAT0_type *) 0xf001961cu)	/* Message Object 48 Status Register */
#define CAN_MOSTAT49	(*( CAN_MOSTAT0_type *) 0xf001963cu)	/* Message Object 49 Status Register */
#define CAN_MOSTAT5	(*( CAN_MOSTAT0_type *) 0xf00190bcu)	/* Message Object 5 Status Register */
#define CAN_MOSTAT50	(*( CAN_MOSTAT0_type *) 0xf001965cu)	/* Message Object 50 Status Register */
#define CAN_MOSTAT51	(*( CAN_MOSTAT0_type *) 0xf001967cu)	/* Message Object 51 Status Register */
#define CAN_MOSTAT52	(*( CAN_MOSTAT0_type *) 0xf001969cu)	/* Message Object 52 Status Register */
#define CAN_MOSTAT53	(*( CAN_MOSTAT0_type *) 0xf00196bcu)	/* Message Object 53 Status Register */
#define CAN_MOSTAT54	(*( CAN_MOSTAT0_type *) 0xf00196dcu)	/* Message Object 54 Status Register */
#define CAN_MOSTAT55	(*( CAN_MOSTAT0_type *) 0xf00196fcu)	/* Message Object 55 Status Register */
#define CAN_MOSTAT56	(*( CAN_MOSTAT0_type *) 0xf001971cu)	/* Message Object 56 Status Register */
#define CAN_MOSTAT57	(*( CAN_MOSTAT0_type *) 0xf001973cu)	/* Message Object 57 Status Register */
#define CAN_MOSTAT58	(*( CAN_MOSTAT0_type *) 0xf001975cu)	/* Message Object 58 Status Register */
#define CAN_MOSTAT59	(*( CAN_MOSTAT0_type *) 0xf001977cu)	/* Message Object 59 Status Register */
#define CAN_MOSTAT6	(*( CAN_MOSTAT0_type *) 0xf00190dcu)	/* Message Object 6 Status Register */
#define CAN_MOSTAT60	(*( CAN_MOSTAT0_type *) 0xf001979cu)	/* Message Object 60 Status Register */
#define CAN_MOSTAT61	(*( CAN_MOSTAT0_type *) 0xf00197bcu)	/* Message Object 61 Status Register */
#define CAN_MOSTAT62	(*( CAN_MOSTAT0_type *) 0xf00197dcu)	/* Message Object 62 Status Register */
#define CAN_MOSTAT63	(*( CAN_MOSTAT0_type *) 0xf00197fcu)	/* Message Object 63 Status Register */
#define CAN_MOSTAT64	(*( CAN_MOSTAT0_type *) 0xf001981cu)	/* Message Object 64 Status Register */
#define CAN_MOSTAT65	(*( CAN_MOSTAT0_type *) 0xf001983cu)	/* Message Object 65 Status Register */
#define CAN_MOSTAT66	(*( CAN_MOSTAT0_type *) 0xf001985cu)	/* Message Object 66 Status Register */
#define CAN_MOSTAT67	(*( CAN_MOSTAT0_type *) 0xf001987cu)	/* Message Object 67 Status Register */
#define CAN_MOSTAT68	(*( CAN_MOSTAT0_type *) 0xf001989cu)	/* Message Object 68 Status Register */
#define CAN_MOSTAT69	(*( CAN_MOSTAT0_type *) 0xf00198bcu)	/* Message Object 69 Status Register */
#define CAN_MOSTAT7	(*( CAN_MOSTAT0_type *) 0xf00190fcu)	/* Message Object 7 Status Register */
#define CAN_MOSTAT70	(*( CAN_MOSTAT0_type *) 0xf00198dcu)	/* Message Object 70 Status Register */
#define CAN_MOSTAT71	(*( CAN_MOSTAT0_type *) 0xf00198fcu)	/* Message Object 71 Status Register */
#define CAN_MOSTAT72	(*( CAN_MOSTAT0_type *) 0xf001991cu)	/* Message Object 72 Status Register */
#define CAN_MOSTAT73	(*( CAN_MOSTAT0_type *) 0xf001993cu)	/* Message Object 73 Status Register */
#define CAN_MOSTAT74	(*( CAN_MOSTAT0_type *) 0xf001995cu)	/* Message Object 74 Status Register */
#define CAN_MOSTAT75	(*( CAN_MOSTAT0_type *) 0xf001997cu)	/* Message Object 75 Status Register */
#define CAN_MOSTAT76	(*( CAN_MOSTAT0_type *) 0xf001999cu)	/* Message Object 76 Status Register */
#define CAN_MOSTAT77	(*( CAN_MOSTAT0_type *) 0xf00199bcu)	/* Message Object 77 Status Register */
#define CAN_MOSTAT78	(*( CAN_MOSTAT0_type *) 0xf00199dcu)	/* Message Object 78 Status Register */
#define CAN_MOSTAT79	(*( CAN_MOSTAT0_type *) 0xf00199fcu)	/* Message Object 79 Status Register */
#define CAN_MOSTAT8	(*( CAN_MOSTAT0_type *) 0xf001911cu)	/* Message Object 8 Status Register */
#define CAN_MOSTAT80	(*( CAN_MOSTAT0_type *) 0xf0019a1cu)	/* Message Object 80 Status Register */
#define CAN_MOSTAT81	(*( CAN_MOSTAT0_type *) 0xf0019a3cu)	/* Message Object 81 Status Register */
#define CAN_MOSTAT82	(*( CAN_MOSTAT0_type *) 0xf0019a5cu)	/* Message Object 82 Status Register */
#define CAN_MOSTAT83	(*( CAN_MOSTAT0_type *) 0xf0019a7cu)	/* Message Object 83 Status Register */
#define CAN_MOSTAT84	(*( CAN_MOSTAT0_type *) 0xf0019a9cu)	/* Message Object 84 Status Register */
#define CAN_MOSTAT85	(*( CAN_MOSTAT0_type *) 0xf0019abcu)	/* Message Object 85 Status Register */
#define CAN_MOSTAT86	(*( CAN_MOSTAT0_type *) 0xf0019adcu)	/* Message Object 86 Status Register */
#define CAN_MOSTAT87	(*( CAN_MOSTAT0_type *) 0xf0019afcu)	/* Message Object 87 Status Register */
#define CAN_MOSTAT88	(*( CAN_MOSTAT0_type *) 0xf0019b1cu)	/* Message Object 88 Status Register */
#define CAN_MOSTAT89	(*( CAN_MOSTAT0_type *) 0xf0019b3cu)	/* Message Object 89 Status Register */
#define CAN_MOSTAT9	(*( CAN_MOSTAT0_type *) 0xf001913cu)	/* Message Object 9 Status Register */
#define CAN_MOSTAT90	(*( CAN_MOSTAT0_type *) 0xf0019b5cu)	/* Message Object 90 Status Register */
#define CAN_MOSTAT91	(*( CAN_MOSTAT0_type *) 0xf0019b7cu)	/* Message Object 91 Status Register */
#define CAN_MOSTAT92	(*( CAN_MOSTAT0_type *) 0xf0019b9cu)	/* Message Object 92 Status Register */
#define CAN_MOSTAT93	(*( CAN_MOSTAT0_type *) 0xf0019bbcu)	/* Message Object 93 Status Register */
#define CAN_MOSTAT94	(*( CAN_MOSTAT0_type *) 0xf0019bdcu)	/* Message Object 94 Status Register */
#define CAN_MOSTAT95	(*( CAN_MOSTAT0_type *) 0xf0019bfcu)	/* Message Object 95 Status Register */
#define CAN_MOSTAT96	(*( CAN_MOSTAT0_type *) 0xf0019c1cu)	/* Message Object 96 Status Register */
#define CAN_MOSTAT97	(*( CAN_MOSTAT0_type *) 0xf0019c3cu)	/* Message Object 97 Status Register */
#define CAN_MOSTAT98	(*( CAN_MOSTAT0_type *) 0xf0019c5cu)	/* Message Object 98 Status Register */
#define CAN_MOSTAT99	(*( CAN_MOSTAT0_type *) 0xf0019c7cu)	/* Message Object 99 Status Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int INDEX          : 6;	/* Message Pending Index */
		/* const */ unsigned int                : 26;
	} B;
	int I;
	unsigned int U;

} CAN_MSID0_type;
#define CAN_MSID0	(*( CAN_MSID0_type *) 0xf0018180u)	/* Message Index Register 0 */
#define CAN_MSID1	(*( CAN_MSID0_type *) 0xf0018184u)	/* Message Index Register 1 */
#define CAN_MSID2	(*( CAN_MSID0_type *) 0xf0018188u)	/* Message Index Register 2 */
#define CAN_MSID3	(*( CAN_MSID0_type *) 0xf001818cu)	/* Message Index Register 3 */
#define CAN_MSID4	(*( CAN_MSID0_type *) 0xf0018190u)	/* Message Index Register 4 */
#define CAN_MSID5	(*( CAN_MSID0_type *) 0xf0018194u)	/* Message Index Register 5 */
#define CAN_MSID6	(*( CAN_MSID0_type *) 0xf0018198u)	/* Message Index Register 6 */
#define CAN_MSID7	(*( CAN_MSID0_type *) 0xf001819cu)	/* Message Index Register 7 */

typedef volatile union
{
	struct
	{ 
		unsigned int IM             : 32;	/* Message Index Mask */
	} B;
	int I;
	unsigned int U;

} CAN_MSIMASK_type;
#define CAN_MSIMASK	(*( CAN_MSIMASK_type *) 0xf00181c0u)	/* Message Index Mask Register */

typedef volatile union
{
	struct
	{ 
		unsigned int PND            : 32;	/* Message Pending */
	} B;
	int I;
	unsigned int U;

} CAN_MSPND0_type;
#define CAN_MSPND0	(*( CAN_MSPND0_type *) 0xf0018140u)	/* Message Pending Register 0 */
#define CAN_MSPND1	(*( CAN_MSPND0_type *) 0xf0018144u)	/* Message Pending Register 1 */
#define CAN_MSPND2	(*( CAN_MSPND0_type *) 0xf0018148u)	/* Message Pending Register 2 */
#define CAN_MSPND3	(*( CAN_MSPND0_type *) 0xf001814cu)	/* Message Pending Register 3 */
#define CAN_MSPND4	(*( CAN_MSPND0_type *) 0xf0018150u)	/* Message Pending Register 4 */
#define CAN_MSPND5	(*( CAN_MSPND0_type *) 0xf0018154u)	/* Message Pending Register 5 */
#define CAN_MSPND6	(*( CAN_MSPND0_type *) 0xf0018158u)	/* Message Pending Register 6 */
#define CAN_MSPND7	(*( CAN_MSPND0_type *) 0xf001815cu)	/* Message Pending Register 7 */

typedef volatile union
{
	struct
	{ 
		unsigned int BRP            : 6;	/* Baud Rate Prescaler */
		unsigned int                : 2;
		unsigned int SJW            : 4;	/* (Re) Synchronization Jump Width */
		unsigned int                : 3;
		unsigned int DIV8           : 1;	/* Divide Prescaler Clock by 8 */
		unsigned int TSEG2          : 5;	/* Time Segment After Sample Point */
		unsigned int                : 1;
		unsigned int TSEG1          : 6;	/* Time Segment Before Sample Point */
		unsigned int                : 4;
	} B;
	int I;
	unsigned int U;

} CAN_NBTEVR0_type;
#define CAN_NBTEVR0	(*( CAN_NBTEVR0_type *) 0xf0018210u)	/* Node 0 Bit Timing Extended View Register */
#define CAN_NBTEVR1	(*( CAN_NBTEVR0_type *) 0xf0018310u)	/* Node 1 Bit Timing Extended View Register */
#define CAN_NBTEVR2	(*( CAN_NBTEVR0_type *) 0xf0018410u)	/* Node 2 Bit Timing Extended View Register */
#define CAN_NBTEVR3	(*( CAN_NBTEVR0_type *) 0xf0018510u)	/* Node 3 Bit Timing Extended View Register */

typedef volatile union
{
	struct
	{ 
		unsigned int BRP            : 6;	/* Baud Rate Prescaler */
		unsigned int SJW            : 2;	/* (Re) Synchronization Jump Width */
		unsigned int TSEG1          : 4;	/* Time Segment Before Sample Point */
		unsigned int TSEG2          : 3;	/* Time Segment After Sample Point */
		unsigned int DIV8           : 1;	/* Divide Prescaler Clock by 8 */
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} CAN_NBTR0_type;
#define CAN_NBTR0	(*( CAN_NBTR0_type *) 0xf0018210u)	/* Node 0 Bit Timing Register */
#define CAN_NBTR1	(*( CAN_NBTR0_type *) 0xf0018310u)	/* Node 1 Bit Timing Register */
#define CAN_NBTR2	(*( CAN_NBTR0_type *) 0xf0018410u)	/* Node 2 Bit Timing Register */
#define CAN_NBTR3	(*( CAN_NBTR0_type *) 0xf0018510u)	/* Node 3 Bit Timing Register */

typedef volatile union
{
	struct
	{ 
		unsigned int INIT           : 1;	/* Node Initialization */
		unsigned int TRIE           : 1;	/* Transfer Interrupt Enable */
		unsigned int LECIE          : 1;	/* LEC Indicated Error Interrupt Enable */
		unsigned int ALIE           : 1;	/* Alert Interrupt Enable */
		unsigned int CANDIS         : 1;	/* CAN Disable */
		unsigned int TXDIS          : 1;	/* Transmit Disable */
		unsigned int CCE            : 1;	/* Configuration Change Enable */
		unsigned int CALM           : 1;	/* CAN Analyzer Mode */
		unsigned int SUSEN          : 1;	/* Suspend Enable */
		unsigned int FDEN           : 1;	/* CAN Flexible Data-Rate Enable */
		unsigned int                : 22;
	} B;
	int I;
	unsigned int U;

} CAN_NCR0_type;
#define CAN_NCR0	(*( CAN_NCR0_type *) 0xf0018200u)	/* Node 0 Control Register */
#define CAN_NCR1	(*( CAN_NCR0_type *) 0xf0018300u)	/* Node 1 Control Register */
#define CAN_NCR2	(*( CAN_NCR0_type *) 0xf0018400u)	/* Node 2 Control Register */
#define CAN_NCR3	(*( CAN_NCR0_type *) 0xf0018500u)	/* Node 3 Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int REC            : 8;	/* Receive Error Counter */
		unsigned int TEC            : 8;	/* Transmit Error Counter */
		unsigned int EWRNLVL        : 8;	/* Error Warning Level */
		/* const */ unsigned int LETD           : 1;	/* Last Error Transfer Direction */
		/* const */ unsigned int LEINC          : 1;	/* Last Error Increment */
		unsigned int                : 6;
	} B;
	int I;
	unsigned int U;

} CAN_NECNT0_type;
#define CAN_NECNT0	(*( CAN_NECNT0_type *) 0xf0018214u)	/* Node 0 Error Counter Register */
#define CAN_NECNT1	(*( CAN_NECNT0_type *) 0xf0018314u)	/* Node 1 Error Counter Register */
#define CAN_NECNT2	(*( CAN_NECNT0_type *) 0xf0018414u)	/* Node 2 Error Counter Register */
#define CAN_NECNT3	(*( CAN_NECNT0_type *) 0xf0018514u)	/* Node 3 Error Counter Register */

typedef volatile union
{
	struct
	{ 
		unsigned int CFC            : 16;	/* CAN Frame Counter */
		unsigned int CFSEL          : 3;	/* CAN Frame Count Selection */
		unsigned int CFMOD          : 2;	/* CAN Frame Counter Mode */
		unsigned int                : 1;
		unsigned int CFCIE          : 1;	/* CAN Frame Count Interrupt Enable */
		unsigned int CFCOV          : 1;	/* CAN Frame Counter Overflow Flag */
		unsigned int                : 8;
	} B;
	int I;
	unsigned int U;

} CAN_NFCR0_type;
#define CAN_NFCR0	(*( CAN_NFCR0_type *) 0xf0018218u)	/* Node 0 Frame Counter Register */
#define CAN_NFCR1	(*( CAN_NFCR0_type *) 0xf0018318u)	/* Node 1 Frame Counter Register */
#define CAN_NFCR2	(*( CAN_NFCR0_type *) 0xf0018418u)	/* Node 2 Frame Counter Register */
#define CAN_NFCR3	(*( CAN_NFCR0_type *) 0xf0018518u)	/* Node 3 Frame Counter Register */

typedef volatile union
{
	struct
	{ 
		unsigned int ALINP          : 4;	/* Alert Interrupt Node Pointer */
		unsigned int LECINP         : 4;	/* Last Error Code Interrupt Node Pointer */
		unsigned int TRINP          : 4;	/* Transfer OK Interrupt Node Pointer */
		unsigned int CFCINP         : 4;	/* Frame Counter Interrupt Node Pointer */
		unsigned int TEINP          : 4;	/* Timer Event Interrupt Node Pointer */
		unsigned int                : 12;
	} B;
	int I;
	unsigned int U;

} CAN_NIPR0_type;
#define CAN_NIPR0	(*( CAN_NIPR0_type *) 0xf0018208u)	/* Node 0 Interrupt Pointer Register */
#define CAN_NIPR1	(*( CAN_NIPR0_type *) 0xf0018308u)	/* Node 1 Interrupt Pointer Register */
#define CAN_NIPR2	(*( CAN_NIPR0_type *) 0xf0018408u)	/* Node 2 Interrupt Pointer Register */
#define CAN_NIPR3	(*( CAN_NIPR0_type *) 0xf0018508u)	/* Node 3 Interrupt Pointer Register */

typedef volatile union
{
	struct
	{ 
		unsigned int RXSEL          : 3;	/* Receive Select */
		unsigned int                : 5;
		unsigned int LBM            : 1;	/* Loop-Back Mode */
		unsigned int                : 23;
	} B;
	int I;
	unsigned int U;

} CAN_NPCR0_type;
#define CAN_NPCR0	(*( CAN_NPCR0_type *) 0xf001820cu)	/* Node 0 Port Control Register */
#define CAN_NPCR1	(*( CAN_NPCR0_type *) 0xf001830cu)	/* Node 1 Port Control Register */
#define CAN_NPCR2	(*( CAN_NPCR0_type *) 0xf001840cu)	/* Node 2 Port Control Register */
#define CAN_NPCR3	(*( CAN_NPCR0_type *) 0xf001850cu)	/* Node 3 Port Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int LEC            : 3;	/* Last Error Code */
		unsigned int TXOK           : 1;	/* Message Transmitted Successfully */
		unsigned int RXOK           : 1;	/* Message Received Successfully */
		unsigned int ALERT          : 1;	/* Alert Warning */
		/* const */ unsigned int EWRN           : 1;	/* Error Warning Status */
		/* const */ unsigned int BOFF           : 1;	/* Bus-off Status */
		unsigned int LLE            : 1;	/* List Length Error */
		unsigned int LOE            : 1;	/* List Object Error */
		/* const */ unsigned int SUSACK         : 1;	/* Suspend Acknowledge */
		/* const */ unsigned int RESI           : 1;	/* Received Error State Indicator Flag This bit is an error flag that is set when the ESI flag in a received CAN FD frame is set. */
		unsigned int FLEC           : 3;	/* Fast Last Error Code */
		unsigned int                : 17;
	} B;
	int I;
	unsigned int U;

} CAN_NSR0_type;
#define CAN_NSR0	(*( CAN_NSR0_type *) 0xf0018204u)	/* Node 0 Status Register */
#define CAN_NSR1	(*( CAN_NSR0_type *) 0xf0018304u)	/* Node 1 Status Register */
#define CAN_NSR2	(*( CAN_NSR0_type *) 0xf0018404u)	/* Node 2 Status Register */
#define CAN_NSR3	(*( CAN_NSR0_type *) 0xf0018504u)	/* Node 3 Status Register */

typedef volatile union
{
	struct
	{ 
		unsigned int RELOAD         : 16;	/* Reload Value */
		unsigned int TXMO           : 8;	/* Transmit Message Object */
		unsigned int STRT           : 1;	/* Timer Start */
		unsigned int                : 7;
	} B;
	int I;
	unsigned int U;

} CAN_NTATTR0_type;
#define CAN_NTATTR0	(*( CAN_NTATTR0_type *) 0xf0018224u)	/* Node 0 Timer A Transmit Trigger Register */
#define CAN_NTATTR1	(*( CAN_NTATTR0_type *) 0xf0018324u)	/* Node 1 Timer A Transmit Trigger Register */
#define CAN_NTATTR2	(*( CAN_NTATTR0_type *) 0xf0018424u)	/* Node 2 Timer A Transmit Trigger Register */
#define CAN_NTATTR3	(*( CAN_NTATTR0_type *) 0xf0018524u)	/* Node 3 Timer A Transmit Trigger Register */
#define CAN_NTBTTR0	(*( CAN_NTATTR0_type *) 0xf0018228u)	/* Node 0 Timer B Transmit Trigger Register */
#define CAN_NTBTTR1	(*( CAN_NTATTR0_type *) 0xf0018328u)	/* Node 1 Timer B Transmit Trigger Register */
#define CAN_NTBTTR2	(*( CAN_NTATTR0_type *) 0xf0018428u)	/* Node 2 Timer B Transmit Trigger Register */
#define CAN_NTBTTR3	(*( CAN_NTATTR0_type *) 0xf0018528u)	/* Node 3 Timer B Transmit Trigger Register */
#define CAN_NTCTTR0	(*( CAN_NTATTR0_type *) 0xf001822cu)	/* Node 0 Timer C Transmit Trigger Register */
#define CAN_NTCTTR1	(*( CAN_NTATTR0_type *) 0xf001832cu)	/* Node 1 Timer C Transmit Trigger Register */
#define CAN_NTCTTR2	(*( CAN_NTATTR0_type *) 0xf001842cu)	/* Node 2 Timer C Transmit Trigger Register */
#define CAN_NTCTTR3	(*( CAN_NTATTR0_type *) 0xf001852cu)	/* Node 3 Timer C Transmit Trigger Register */

typedef volatile union
{
	struct
	{ 
		unsigned int                : 8;
		unsigned int TPSC           : 4;	/* Timer Prescaler */
		unsigned int                : 6;
		unsigned int TRIGSRC        : 3;	/* Trigger Source */
		unsigned int                : 11;
	} B;
	int I;
	unsigned int U;

} CAN_NTCCR0_type;
#define CAN_NTCCR0	(*( CAN_NTCCR0_type *) 0xf001821cu)	/* Node 0 Timer Clock Control Register */
#define CAN_NTCCR1	(*( CAN_NTCCR0_type *) 0xf001831cu)	/* Node 1 Timer Clock Control Register */
#define CAN_NTCCR2	(*( CAN_NTCCR0_type *) 0xf001841cu)	/* Node 2 Timer Clock Control Register */
#define CAN_NTCCR3	(*( CAN_NTCCR0_type *) 0xf001851cu)	/* Node 3 Timer Clock Control Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int TDCV           : 5;	/* Transceiver Delay Compensation Value */
		unsigned int                : 3;
		unsigned int TDCO           : 4;	/* Transceiver Delay Compensation Offset */
		unsigned int                : 3;
		unsigned int TDC            : 1;	/* Transceiver Delay Compensation Enable */
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} CAN_NTDCR0_type;
#define CAN_NTDCR0	(*( CAN_NTDCR0_type *) 0xf001823cu)	/* Node 0 Transceiver Delay Compensation Register */
#define CAN_NTDCR1	(*( CAN_NTDCR0_type *) 0xf001833cu)	/* Node 1 Transceiver Delay Compensation Register */
#define CAN_NTDCR2	(*( CAN_NTDCR0_type *) 0xf001843cu)	/* Node 2 Transceiver Delay Compensation Register */
#define CAN_NTDCR3	(*( CAN_NTDCR0_type *) 0xf001853cu)	/* Node 3 Transceiver Delay Compensation Register */

typedef volatile union
{
	struct
	{ 
		unsigned int RELOAD         : 16;	/* Reload Value */
		unsigned int                : 6;
		unsigned int TEIE           : 1;	/* Timer Event Interrupt Enable */
		unsigned int TE             : 1;	/* Timer Event */
		unsigned int                : 8;
	} B;
	int I;
	unsigned int U;

} CAN_NTRTR0_type;
#define CAN_NTRTR0	(*( CAN_NTRTR0_type *) 0xf0018220u)	/* Node 0 Timer Receive Timeout Register */
#define CAN_NTRTR1	(*( CAN_NTRTR0_type *) 0xf0018320u)	/* Node 1 Timer Receive Timeout Register */
#define CAN_NTRTR2	(*( CAN_NTRTR0_type *) 0xf0018420u)	/* Node 2 Timer Receive Timeout Register */
#define CAN_NTRTR3	(*( CAN_NTRTR0_type *) 0xf0018520u)	/* Node 3 Timer Receive Timeout Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 TGS            : 2;	/* Trigger Set for OTGB0/1 */
		unsigned __sfrbit32 TGB            : 1;	/* OTGB0/1 Bus Select */
		unsigned __sfrbit32 TG_P           : 1;	/* TGS, TGB Write Protection */
		unsigned __sfrbit32                : 20;
		unsigned __sfrbit32 SUS            : 4;	/* OCDS Suspend Control */
		unsigned __sfrbit32 SUS_P          : 1;	/* SUS Write Protection */
		/* const */ unsigned __sfrbit32 SUSSTA         : 1;	/* Suspend State */
		unsigned __sfrbit32                : 2;
	} B;
	int I;
	unsigned int U;

} CAN_OCS_type;
#define CAN_OCS	(*( CAN_OCS_type *) 0xf00180e8u)	/* OCDS Control and Status */

typedef volatile union
{
	struct
	{ 
		unsigned int PANCMD         : 8;	/* Panel Command */
		/* const */ unsigned int BUSY           : 1;	/* Panel Busy Flag */
		/* const */ unsigned int RBUSY          : 1;	/* Result Busy Flag */
		unsigned int                : 6;
		unsigned int PANAR1         : 8;	/* Panel Argument 1 */
		unsigned int PANAR2         : 8;	/* Panel Argument 2 */
	} B;
	int I;
	unsigned int U;

} CAN_PANCTR_type;
#define CAN_PANCTR	(*( CAN_PANCTR_type *) 0xf00181c4u)	/* Panel Control Register */


/* SENT */
typedef volatile union
{
	struct
	{ 
		unsigned int EN0            : 1;	/* Access Enable for Master TAG ID 0 */
		unsigned int EN1            : 1;	/* Access Enable for Master TAG ID 1 */
		unsigned int EN2            : 1;	/* Access Enable for Master TAG ID 2 */
		unsigned int EN3            : 1;	/* Access Enable for Master TAG ID 3 */
		unsigned int EN4            : 1;	/* Access Enable for Master TAG ID 4 */
		unsigned int EN5            : 1;	/* Access Enable for Master TAG ID 5 */
		unsigned int EN6            : 1;	/* Access Enable for Master TAG ID 6 */
		unsigned int EN7            : 1;	/* Access Enable for Master TAG ID 7 */
		unsigned int EN8            : 1;	/* Access Enable for Master TAG ID 8 */
		unsigned int EN9            : 1;	/* Access Enable for Master TAG ID 9 */
		unsigned int EN10           : 1;	/* Access Enable for Master TAG ID 10 */
		unsigned int EN11           : 1;	/* Access Enable for Master TAG ID 11 */
		unsigned int EN12           : 1;	/* Access Enable for Master TAG ID 12 */
		unsigned int EN13           : 1;	/* Access Enable for Master TAG ID 13 */
		unsigned int EN14           : 1;	/* Access Enable for Master TAG ID 14 */
		unsigned int EN15           : 1;	/* Access Enable for Master TAG ID 15 */
		unsigned int EN16           : 1;	/* Access Enable for Master TAG ID 16 */
		unsigned int EN17           : 1;	/* Access Enable for Master TAG ID 17 */
		unsigned int EN18           : 1;	/* Access Enable for Master TAG ID 18 */
		unsigned int EN19           : 1;	/* Access Enable for Master TAG ID 19 */
		unsigned int EN20           : 1;	/* Access Enable for Master TAG ID 20 */
		unsigned int EN21           : 1;	/* Access Enable for Master TAG ID 21 */
		unsigned int EN22           : 1;	/* Access Enable for Master TAG ID 22 */
		unsigned int EN23           : 1;	/* Access Enable for Master TAG ID 23 */
		unsigned int EN24           : 1;	/* Access Enable for Master TAG ID 24 */
		unsigned int EN25           : 1;	/* Access Enable for Master TAG ID 25 */
		unsigned int EN26           : 1;	/* Access Enable for Master TAG ID 26 */
		unsigned int EN27           : 1;	/* Access Enable for Master TAG ID 27 */
		unsigned int EN28           : 1;	/* Access Enable for Master TAG ID 28 */
		unsigned int EN29           : 1;	/* Access Enable for Master TAG ID 29 */
		unsigned int EN30           : 1;	/* Access Enable for Master TAG ID 30 */
		unsigned int EN31           : 1;	/* Access Enable for Master TAG ID 31 */
	} B;
	int I;
	unsigned int U;

} SENT_ACCEN0_type;
#define SENT_ACCEN0	(*( SENT_ACCEN0_type *) 0xf00030fcu)	/* Access Enable Register 0 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int Reserved       : 32;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} SENT_ACCEN1_type;
#define SENT_ACCEN1	(*( SENT_ACCEN1_type *) 0xf00030f8u)	/* Access Enable Register 1 */

typedef volatile union
{
	struct
	{ 
		unsigned int DIV            : 12;	/* Divider Value */
		unsigned int                : 4;
		/* const */ unsigned int DIVM           : 12;	/* Measured Divider Value */
		unsigned int                : 4;
	} B;
	int I;
	unsigned int U;

} SENT_CFDR0_type;
#define SENT_CFDR0	(*( SENT_CFDR0_type *) 0xf0003104u)	/* Channel Fractional Divider Register 0 */
#define SENT_CFDR1	(*( SENT_CFDR0_type *) 0xf0003144u)	/* Channel Fractional Divider Register 1 */
#define SENT_CFDR2	(*( SENT_CFDR0_type *) 0xf0003184u)	/* Channel Fractional Divider Register 2 */
#define SENT_CFDR3	(*( SENT_CFDR0_type *) 0xf00031c4u)	/* Channel Fractional Divider Register 3 */
#define SENT_CFDR4	(*( SENT_CFDR0_type *) 0xf0003204u)	/* Channel Fractional Divider Register 4 */
#define SENT_CFDR5	(*( SENT_CFDR0_type *) 0xf0003244u)	/* Channel Fractional Divider Register 5 */
#define SENT_CFDR6	(*( SENT_CFDR0_type *) 0xf0003284u)	/* Channel Fractional Divider Register 6 */
#define SENT_CFDR7	(*( SENT_CFDR0_type *) 0xf00032c4u)	/* Channel Fractional Divider Register 7 */
#define SENT_CFDR8	(*( SENT_CFDR0_type *) 0xf0003304u)	/* Channel Fractional Divider Register 8 */
#define SENT_CFDR9	(*( SENT_CFDR0_type *) 0xf0003344u)	/* Channel Fractional Divider Register 9 */

typedef volatile union
{
	struct
	{ 
		unsigned int DISR           : 1;	/* Module Disable Request Bit */
		/* const */ unsigned int DISS           : 1;	/* Module Disable Status Bit */
		unsigned int                : 1;
		unsigned int EDIS           : 1;	/* Sleep Mode Enable Control */
		unsigned int                : 4;
		unsigned int RMC            : 8;	/* 8-bit Clock Divider Value in RUN Mode */
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} SENT_CLC_type;
#define SENT_CLC	(*( SENT_CLC_type *) 0xf0003000u)	/* Clock Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int PDIV           : 12;	/* Divider Factor of Pre Divider for Channel x */
		unsigned int                : 20;
	} B;
	int I;
	unsigned int U;

} SENT_CPDR0_type;
#define SENT_CPDR0	(*( SENT_CPDR0_type *) 0xf0003100u)	/* Channel Pre Divider Register 0 */
#define SENT_CPDR1	(*( SENT_CPDR0_type *) 0xf0003140u)	/* Channel Pre Divider Register 1 */
#define SENT_CPDR2	(*( SENT_CPDR0_type *) 0xf0003180u)	/* Channel Pre Divider Register 2 */
#define SENT_CPDR3	(*( SENT_CPDR0_type *) 0xf00031c0u)	/* Channel Pre Divider Register 3 */
#define SENT_CPDR4	(*( SENT_CPDR0_type *) 0xf0003200u)	/* Channel Pre Divider Register 4 */
#define SENT_CPDR5	(*( SENT_CPDR0_type *) 0xf0003240u)	/* Channel Pre Divider Register 5 */
#define SENT_CPDR6	(*( SENT_CPDR0_type *) 0xf0003280u)	/* Channel Pre Divider Register 6 */
#define SENT_CPDR7	(*( SENT_CPDR0_type *) 0xf00032c0u)	/* Channel Pre Divider Register 7 */
#define SENT_CPDR8	(*( SENT_CPDR0_type *) 0xf0003300u)	/* Channel Pre Divider Register 8 */
#define SENT_CPDR9	(*( SENT_CPDR0_type *) 0xf0003340u)	/* Channel Pre Divider Register 9 */

typedef volatile union
{
	struct
	{ 
		unsigned int STEP           : 10;	/* Step Value */
		unsigned int                : 4;
		unsigned int DM             : 2;	/* Divider Mode */
		/* const */ unsigned int RESULT         : 10;	/* Result Value */
		unsigned int                : 6;
	} B;
	int I;
	unsigned int U;

} SENT_FDR_type;
#define SENT_FDR	(*( SENT_FDR_type *) 0xf000300cu)	/* SENT Fractional Divider Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int MODREV         : 8;	/* Module Revision Number */
		/* const */ unsigned int MODTYPE        : 8;	/* Module Type */
		/* const */ unsigned int MODNUM         : 16;	/* Module Number Value */
	} B;
	int I;
	unsigned int U;

} SENT_ID_type;
#define SENT_ID	(*( SENT_ID_type *) 0xf0003008u)	/* Module Identification Register */

typedef volatile union
{
	struct
	{ 
		unsigned int RSI            : 4;	/* Interrupt Node Pointer for Interrupt RSI */
		unsigned int RDI            : 4;	/* Interrupt Node Pointer for Interrupt RDI */
		unsigned int RBI            : 4;	/* Interrupt Node Pointer for Interrupt RBI */
		unsigned int TDI            : 4;	/* Interrupt Node Pointer for Interrupt TDI */
		unsigned int TBI            : 4;	/* Interrupt Node Pointer for Interrupt TBI */
		unsigned int ERRI           : 4;	/* Interrupt Node Pointer for Interrupt FRI, FDI, NNI, NVI, CRCI, WSI, SCRI */
		unsigned int SDI            : 4;	/* Interrupt Node Pointer for Interrupt SDI */
		unsigned int WDI            : 4;	/* Interrupt Node Pointer for Interrupt WDI */
	} B;
	int I;
	unsigned int U;

} SENT_INP0_type;
#define SENT_INP0	(*( SENT_INP0_type *) 0xf0003130u)	/* Interrupt Node Pointer Register 0 */
#define SENT_INP1	(*( SENT_INP0_type *) 0xf0003170u)	/* Interrupt Node Pointer Register 1 */
#define SENT_INP2	(*( SENT_INP0_type *) 0xf00031b0u)	/* Interrupt Node Pointer Register 2 */
#define SENT_INP3	(*( SENT_INP0_type *) 0xf00031f0u)	/* Interrupt Node Pointer Register 3 */
#define SENT_INP4	(*( SENT_INP0_type *) 0xf0003230u)	/* Interrupt Node Pointer Register 4 */
#define SENT_INP5	(*( SENT_INP0_type *) 0xf0003270u)	/* Interrupt Node Pointer Register 5 */
#define SENT_INP6	(*( SENT_INP0_type *) 0xf00032b0u)	/* Interrupt Node Pointer Register 6 */
#define SENT_INP7	(*( SENT_INP0_type *) 0xf00032f0u)	/* Interrupt Node Pointer Register 7 */
#define SENT_INP8	(*( SENT_INP0_type *) 0xf0003330u)	/* Interrupt Node Pointer Register 8 */
#define SENT_INP9	(*( SENT_INP0_type *) 0xf0003370u)	/* Interrupt Node Pointer Register 9 */

typedef volatile union
{
	struct
	{ 
		unsigned int RSI            : 1;	/* Clear Interrupt Request Flag RSI */
		unsigned int RDI            : 1;	/* Clear Interrupt Request Flag RDI */
		unsigned int RBI            : 1;	/* Clear Interrupt Request Flag RBI */
		unsigned int TDI            : 1;	/* Clear Interrupt Request Flag TDI */
		unsigned int TBI            : 1;	/* Clear Interrupt Request Flag TBI */
		unsigned int FRI            : 1;	/* Clear Interrupt Request Flag FRI */
		unsigned int FDI            : 1;	/* Clear Interrupt Request Flag FDI */
		unsigned int NNI            : 1;	/* Clear Interrupt Request Flag NMI */
		unsigned int NVI            : 1;	/* Clear Interrupt Request Flag NVI */
		unsigned int CRCI           : 1;	/* Clear Interrupt Request Flag CRCI */
		unsigned int WSI            : 1;	/* Clear Interrupt Request Flag WSI */
		unsigned int SDI            : 1;	/* Clear Interrupt Request Flag SDI */
		unsigned int SCRI           : 1;	/* Clear Interrupt Request Flag SCRI */
		unsigned int WDI            : 1;	/* Clear Interrupt Request Flag WDI */
		unsigned int                : 18;
	} B;
	int I;
	unsigned int U;

} SENT_INTCLR0_type;
#define SENT_INTCLR0	(*( SENT_INTCLR0_type *) 0xf0003128u)	/* Interrupt Clear Register 0 */
#define SENT_INTCLR1	(*( SENT_INTCLR0_type *) 0xf0003168u)	/* Interrupt Clear Register 1 */
#define SENT_INTCLR2	(*( SENT_INTCLR0_type *) 0xf00031a8u)	/* Interrupt Clear Register 2 */
#define SENT_INTCLR3	(*( SENT_INTCLR0_type *) 0xf00031e8u)	/* Interrupt Clear Register 3 */
#define SENT_INTCLR4	(*( SENT_INTCLR0_type *) 0xf0003228u)	/* Interrupt Clear Register 4 */
#define SENT_INTCLR5	(*( SENT_INTCLR0_type *) 0xf0003268u)	/* Interrupt Clear Register 5 */
#define SENT_INTCLR6	(*( SENT_INTCLR0_type *) 0xf00032a8u)	/* Interrupt Clear Register 6 */
#define SENT_INTCLR7	(*( SENT_INTCLR0_type *) 0xf00032e8u)	/* Interrupt Clear Register 7 */
#define SENT_INTCLR8	(*( SENT_INTCLR0_type *) 0xf0003328u)	/* Interrupt Clear Register 8 */
#define SENT_INTCLR9	(*( SENT_INTCLR0_type *) 0xf0003368u)	/* Interrupt Clear Register 9 */

typedef volatile union
{
	struct
	{ 
		unsigned int RSI            : 1;	/* Enable Interrupt Request RSI */
		unsigned int RDI            : 1;	/* Enable Interrupt Request RDI */
		unsigned int RBI            : 1;	/* Enable Interrupt Request RBI */
		unsigned int TDI            : 1;	/* Enable Interrupt Request TDI */
		unsigned int TBI            : 1;	/* Enable Interrupt Request TBI */
		unsigned int FRI            : 1;	/* Enable Interrupt Request FRI */
		unsigned int FDI            : 1;	/* Enable Interrupt Request FDI */
		unsigned int NNI            : 1;	/* Enable Interrupt Request NNI */
		unsigned int NVI            : 1;	/* Enable Interrupt Request NVI */
		unsigned int CRCI           : 1;	/* Enable Interrupt Request CRCI */
		unsigned int WSI            : 1;	/* Enable Interrupt Request WSI */
		unsigned int SDI            : 1;	/* Enable Interrupt Request SDI */
		unsigned int SCRI           : 1;	/* Enable Interrupt Request SCRI */
		unsigned int WDI            : 1;	/* Enable Interrupt Request WDI */
		unsigned int                : 18;
	} B;
	int I;
	unsigned int U;

} SENT_INTEN0_type;
#define SENT_INTEN0	(*( SENT_INTEN0_type *) 0xf000312cu)	/* Interrupt Enable Register 0 */
#define SENT_INTEN1	(*( SENT_INTEN0_type *) 0xf000316cu)	/* Interrupt Enable Register 1 */
#define SENT_INTEN2	(*( SENT_INTEN0_type *) 0xf00031acu)	/* Interrupt Enable Register 2 */
#define SENT_INTEN3	(*( SENT_INTEN0_type *) 0xf00031ecu)	/* Interrupt Enable Register 3 */
#define SENT_INTEN4	(*( SENT_INTEN0_type *) 0xf000322cu)	/* Interrupt Enable Register 4 */
#define SENT_INTEN5	(*( SENT_INTEN0_type *) 0xf000326cu)	/* Interrupt Enable Register 5 */
#define SENT_INTEN6	(*( SENT_INTEN0_type *) 0xf00032acu)	/* Interrupt Enable Register 6 */
#define SENT_INTEN7	(*( SENT_INTEN0_type *) 0xf00032ecu)	/* Interrupt Enable Register 7 */
#define SENT_INTEN8	(*( SENT_INTEN0_type *) 0xf000332cu)	/* Interrupt Enable Register 8 */
#define SENT_INTEN9	(*( SENT_INTEN0_type *) 0xf000336cu)	/* Interrupt Enable Register 9 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int IPC0           : 1;	/* Interrupt Pending on Channel 0 */
		/* const */ unsigned int IPC1           : 1;	/* Interrupt Pending on Channel 1 */
		/* const */ unsigned int IPC2           : 1;	/* Interrupt Pending on Channel 2 */
		/* const */ unsigned int IPC3           : 1;	/* Interrupt Pending on Channel 3 */
		/* const */ unsigned int IPC4           : 1;	/* Interrupt Pending on Channel 4 */
		/* const */ unsigned int IPC5           : 1;	/* Interrupt Pending on Channel 5 */
		/* const */ unsigned int IPC6           : 1;	/* Interrupt Pending on Channel 6 */
		/* const */ unsigned int IPC7           : 1;	/* Interrupt Pending on Channel 7 */
		/* const */ unsigned int IPC8           : 1;	/* Interrupt Pending on Channel 8 */
		/* const */ unsigned int IPC9           : 1;	/* Interrupt Pending on Channel 9 */
		/* const */ unsigned int                : 22;
	} B;
	int I;
	unsigned int U;

} SENT_INTOV_type;
#define SENT_INTOV	(*( SENT_INTOV_type *) 0xf0003014u)	/* Interrupt Overview Register */

typedef volatile union
{
	struct
	{ 
		unsigned int RSI            : 1;	/* Set Interrupt Request Flag RSI */
		unsigned int RDI            : 1;	/* Set Interrupt Request Flag RDI */
		unsigned int RBI            : 1;	/* Set Interrupt Request Flag RBI */
		unsigned int TDI            : 1;	/* Set Interrupt Request Flag TDI */
		unsigned int TBI            : 1;	/* Set Interrupt Request Flag TBI */
		unsigned int FRI            : 1;	/* Set Interrupt Request Flag FRI */
		unsigned int FDI            : 1;	/* Set Interrupt Request Flag FDI */
		unsigned int NNI            : 1;	/* Set Interrupt Request Flag NNI */
		unsigned int NVI            : 1;	/* Set Interrupt Request Flag NVI */
		unsigned int CRCI           : 1;	/* Set Interrupt Request Flag CRCI */
		unsigned int WSI            : 1;	/* Set Interrupt Request Flag WSI */
		unsigned int SDI            : 1;	/* Set Interrupt Request Flag SDI */
		unsigned int SCRI           : 1;	/* Set Interrupt Request Flag SCRI */
		unsigned int WDI            : 1;	/* Set Interrupt Request Flag WDI */
		unsigned int                : 18;
	} B;
	int I;
	unsigned int U;

} SENT_INTSET0_type;
#define SENT_INTSET0	(*( SENT_INTSET0_type *) 0xf0003124u)	/* Interrupt Set Register 0 */
#define SENT_INTSET1	(*( SENT_INTSET0_type *) 0xf0003164u)	/* Interrupt Set Register 1 */
#define SENT_INTSET2	(*( SENT_INTSET0_type *) 0xf00031a4u)	/* Interrupt Set Register 2 */
#define SENT_INTSET3	(*( SENT_INTSET0_type *) 0xf00031e4u)	/* Interrupt Set Register 3 */
#define SENT_INTSET4	(*( SENT_INTSET0_type *) 0xf0003224u)	/* Interrupt Set Register 4 */
#define SENT_INTSET5	(*( SENT_INTSET0_type *) 0xf0003264u)	/* Interrupt Set Register 5 */
#define SENT_INTSET6	(*( SENT_INTSET0_type *) 0xf00032a4u)	/* Interrupt Set Register 6 */
#define SENT_INTSET7	(*( SENT_INTSET0_type *) 0xf00032e4u)	/* Interrupt Set Register 7 */
#define SENT_INTSET8	(*( SENT_INTSET0_type *) 0xf0003324u)	/* Interrupt Set Register 8 */
#define SENT_INTSET9	(*( SENT_INTSET0_type *) 0xf0003364u)	/* Interrupt Set Register 9 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int RSI            : 1;	/* Receive Success Interrupt Request Flag */
		/* const */ unsigned int RDI            : 1;	/* Receive Data Interrupt Request Flag */
		/* const */ unsigned int RBI            : 1;	/* Receive Buffer Overflow Interrupt Request Flag */
		/* const */ unsigned int TDI            : 1;	/* Transfer Data Interrupt Request Flag */
		/* const */ unsigned int TBI            : 1;	/* Transmit Buffer Underflow Interrupt Request Flag */
		/* const */ unsigned int FRI            : 1;	/* Frequency Range Interrupt Request Flag */
		/* const */ unsigned int FDI            : 1;	/* Frequency Drift Interrupt Request Flag */
		/* const */ unsigned int NNI            : 1;	/* Number of Nibbles Wrong Request Flag */
		/* const */ unsigned int NVI            : 1;	/* Nibbles Value out of Range Request Flag */
		/* const */ unsigned int CRCI           : 1;	/* CRC Error Request Flag */
		/* const */ unsigned int WSI            : 1;	/* Wrong Status and Communication Nibble Error Request Flag */
		/* const */ unsigned int SDI            : 1;	/* Serial Data Receive Interrupt Request Flag */
		/* const */ unsigned int SCRI           : 1;	/* Serial Data CRC Error Request Flag */
		/* const */ unsigned int WDI            : 1;	/* Watch Dog Error Request Flag */
		/* const */ unsigned int                : 18;
	} B;
	int I;
	unsigned int U;

} SENT_INTSTAT0_type;
#define SENT_INTSTAT0	(*( SENT_INTSTAT0_type *) 0xf0003120u)	/* Interrupt Status Register 0 */
#define SENT_INTSTAT1	(*( SENT_INTSTAT0_type *) 0xf0003160u)	/* Interrupt Status Register 1 */
#define SENT_INTSTAT2	(*( SENT_INTSTAT0_type *) 0xf00031a0u)	/* Interrupt Status Register 2 */
#define SENT_INTSTAT3	(*( SENT_INTSTAT0_type *) 0xf00031e0u)	/* Interrupt Status Register 3 */
#define SENT_INTSTAT4	(*( SENT_INTSTAT0_type *) 0xf0003220u)	/* Interrupt Status Register 4 */
#define SENT_INTSTAT5	(*( SENT_INTSTAT0_type *) 0xf0003260u)	/* Interrupt Status Register 5 */
#define SENT_INTSTAT6	(*( SENT_INTSTAT0_type *) 0xf00032a0u)	/* Interrupt Status Register 6 */
#define SENT_INTSTAT7	(*( SENT_INTSTAT0_type *) 0xf00032e0u)	/* Interrupt Status Register 7 */
#define SENT_INTSTAT8	(*( SENT_INTSTAT0_type *) 0xf0003320u)	/* Interrupt Status Register 8 */
#define SENT_INTSTAT9	(*( SENT_INTSTAT0_type *) 0xf0003360u)	/* Interrupt Status Register 9 */

typedef volatile union
{
	struct
	{ 
		unsigned int ALTI           : 2;	/* Alternate Input Select */
		unsigned int                : 2;
		unsigned int DEPTH          : 4;	/* Digital Glitch Filter Depth */
		unsigned int OIE            : 1;	/* Output Inverter Enable Channel x */
		unsigned int IIE            : 1;	/* Input Inverter Enable Channel x */
		unsigned int CEC            : 1;	/* Clear Edge Counter */
		unsigned int                : 1;
		/* const */ unsigned int REG            : 1;	/* Rising Edge Glitch Flag for Channel x */
		/* const */ unsigned int FEG            : 1;	/* Falling Edge Glitch Flag for Channel x */
		unsigned int CREG           : 1;	/* Clear Rising Edge Glitch Flag for Channel x */
		unsigned int CFEG           : 1;	/* Clear Falling Edge Glitch Flag for Channel x */
		unsigned int ETS            : 4;	/* External Trigger Select */
		/* const */ unsigned int EC             : 8;	/* Edge Counter */
		unsigned int CTR            : 1;	/* Clear Trigger Monitor Flag for Channel x */
		/* const */ unsigned int TRM            : 1;	/* Trigger Monitor Flag for Channel x */
		/* const */ unsigned int RXM            : 1;	/* Receive Monitor for Channel x */
		/* const */ unsigned int TXM            : 1;	/* Transmit Monitor for Channel x */
	} B;
	int I;
	unsigned int U;

} SENT_IOCR0_type;
#define SENT_IOCR0	(*( SENT_IOCR0_type *) 0xf0003114u)	/* Input and Output Control Register 0 */
#define SENT_IOCR1	(*( SENT_IOCR0_type *) 0xf0003154u)	/* Input and Output Control Register 1 */
#define SENT_IOCR2	(*( SENT_IOCR0_type *) 0xf0003194u)	/* Input and Output Control Register 2 */
#define SENT_IOCR3	(*( SENT_IOCR0_type *) 0xf00031d4u)	/* Input and Output Control Register 3 */
#define SENT_IOCR4	(*( SENT_IOCR0_type *) 0xf0003214u)	/* Input and Output Control Register 4 */
#define SENT_IOCR5	(*( SENT_IOCR0_type *) 0xf0003254u)	/* Input and Output Control Register 5 */
#define SENT_IOCR6	(*( SENT_IOCR0_type *) 0xf0003294u)	/* Input and Output Control Register 6 */
#define SENT_IOCR7	(*( SENT_IOCR0_type *) 0xf00032d4u)	/* Input and Output Control Register 7 */
#define SENT_IOCR8	(*( SENT_IOCR0_type *) 0xf0003314u)	/* Input and Output Control Register 8 */
#define SENT_IOCR9	(*( SENT_IOCR0_type *) 0xf0003354u)	/* Input and Output Control Register 9 */

typedef volatile union
{
	struct
	{ 
		unsigned int RST            : 1;	/* Kernel Reset */
		/* const */ unsigned int RSTSTAT        : 1;	/* Kernel Reset Status */
		unsigned int                : 30;
	} B;
	int I;
	unsigned int U;

} SENT_KRST0_type;
#define SENT_KRST0	(*( SENT_KRST0_type *) 0xf00030f4u)	/* Kernel Reset Register 0 */

typedef volatile union
{
	struct
	{ 
		unsigned int RST            : 1;	/* Kernel Reset */
		unsigned int                : 31;
	} B;
	int I;
	unsigned int U;

} SENT_KRST1_type;
#define SENT_KRST1	(*( SENT_KRST1_type *) 0xf00030f0u)	/* Kernel Reset Register 1 */

typedef volatile union
{
	struct
	{ 
		unsigned int CLR            : 1;	/* Kernel Reset Status Clear */
		unsigned int                : 31;
	} B;
	int I;
	unsigned int U;

} SENT_KRSTCLR_type;
#define SENT_KRSTCLR	(*( SENT_KRSTCLR_type *) 0xf00030ecu)	/* Kernel Reset Status Clear Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32                : 24;
		unsigned __sfrbit32 SUS            : 4;	/* OCDS Suspend Control */
		unsigned __sfrbit32 SUS_P          : 1;	/* SUS Write Protection */
		/* const */ unsigned __sfrbit32 SUSSTA         : 1;	/* Suspend State */
		unsigned __sfrbit32                : 2;
	} B;
	int I;
	unsigned int U;

} SENT_OCS_type;
#define SENT_OCS	(*( SENT_OCS_type *) 0xf00030e8u)	/* OCDS Control and Status */

typedef volatile union
{
	struct
	{ 
		unsigned int CEN            : 1;	/* Channel Enable */
		unsigned int IEP            : 1;	/* Ignore End Pulse */
		unsigned int ACE            : 1;	/* Alternative CRC Mode Enable */
		unsigned int SNI            : 1;	/* Status Nibble Included in CRC */
		unsigned int SDP            : 1;	/* Serial Data Processing Mode */
		unsigned int SCDIS          : 1;	/* CRC for Serial Data Disabled Mode */
		unsigned int CDIS           : 1;	/* CRC Disabled Mode */
		unsigned int CFC            : 1;	/* Consecutive Frame Check */
		unsigned int FRL            : 8;	/* Frame Length */
		unsigned int CRZ            : 1;	/* CRC with Zero Nibble for Serial Data */
		unsigned int ESF            : 1;	/* Extended Serial Frame Mode */
		unsigned int IDE            : 1;	/* Ignore Drift Error Mode */
		unsigned int SUSEN          : 1;	/* Suspend Enable */
		unsigned int                : 12;
	} B;
	int I;
	unsigned int U;

} SENT_RCR0_type;
#define SENT_RCR0	(*( SENT_RCR0_type *) 0xf0003108u)	/* Receiver Control Register 0 */
#define SENT_RCR1	(*( SENT_RCR0_type *) 0xf0003148u)	/* Receiver Control Register 1 */
#define SENT_RCR2	(*( SENT_RCR0_type *) 0xf0003188u)	/* Receiver Control Register 2 */
#define SENT_RCR3	(*( SENT_RCR0_type *) 0xf00031c8u)	/* Receiver Control Register 3 */
#define SENT_RCR4	(*( SENT_RCR0_type *) 0xf0003208u)	/* Receiver Control Register 4 */
#define SENT_RCR5	(*( SENT_RCR0_type *) 0xf0003248u)	/* Receiver Control Register 5 */
#define SENT_RCR6	(*( SENT_RCR0_type *) 0xf0003288u)	/* Receiver Control Register 6 */
#define SENT_RCR7	(*( SENT_RCR0_type *) 0xf00032c8u)	/* Receiver Control Register 7 */
#define SENT_RCR8	(*( SENT_RCR0_type *) 0xf0003308u)	/* Receiver Control Register 8 */
#define SENT_RCR9	(*( SENT_RCR0_type *) 0xf0003348u)	/* Receiver Control Register 9 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int RD0            : 4;	/* Receive Data Nibble 0 */
		/* const */ unsigned int RD1            : 4;	/* Receive Data Nibble 1 */
		/* const */ unsigned int RD2            : 4;	/* Receive Data Nibble 2 */
		/* const */ unsigned int RD3            : 4;	/* Receive Data Nibble 3 */
		/* const */ unsigned int RD4            : 4;	/* Receive Data Nibble 4 */
		/* const */ unsigned int RD5            : 4;	/* Receive Data Nibble 5 */
		/* const */ unsigned int RD6            : 4;	/* Receive Data Nibble 6 */
		/* const */ unsigned int RD7            : 4;	/* Receive Data Nibble 7 */
	} B;
	int I;
	unsigned int U;

} SENT_RDR0_type;
#define SENT_RDR0	(*( SENT_RDR0_type *) 0xf0003080u)	/* Receive Data Register 0 */
#define SENT_RDR1	(*( SENT_RDR0_type *) 0xf0003084u)	/* Receive Data Register 1 */
#define SENT_RDR2	(*( SENT_RDR0_type *) 0xf0003088u)	/* Receive Data Register 2 */
#define SENT_RDR3	(*( SENT_RDR0_type *) 0xf000308cu)	/* Receive Data Register 3 */
#define SENT_RDR4	(*( SENT_RDR0_type *) 0xf0003090u)	/* Receive Data Register 4 */
#define SENT_RDR5	(*( SENT_RDR0_type *) 0xf0003094u)	/* Receive Data Register 5 */
#define SENT_RDR6	(*( SENT_RDR0_type *) 0xf0003098u)	/* Receive Data Register 6 */
#define SENT_RDR7	(*( SENT_RDR0_type *) 0xf000309cu)	/* Receive Data Register 7 */
#define SENT_RDR8	(*( SENT_RDR0_type *) 0xf00030a0u)	/* Receive Data Register 8 */
#define SENT_RDR9	(*( SENT_RDR0_type *) 0xf00030a4u)	/* Receive Data Register 9 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int CRC            : 4;	/* CRC */
		/* const */ unsigned int CST            : 2;	/* Channel Status */
		/* const */ unsigned int                : 2;
		/* const */ unsigned int SCN            : 4;	/* Status and Communication Nibble */
		/* const */ unsigned int                : 20;
	} B;
	int I;
	unsigned int U;

} SENT_RSR0_type;
#define SENT_RSR0	(*( SENT_RSR0_type *) 0xf000310cu)	/* Receive Status Register 0 */
#define SENT_RSR1	(*( SENT_RSR0_type *) 0xf000314cu)	/* Receive Status Register 1 */
#define SENT_RSR2	(*( SENT_RSR0_type *) 0xf000318cu)	/* Receive Status Register 2 */
#define SENT_RSR3	(*( SENT_RSR0_type *) 0xf00031ccu)	/* Receive Status Register 3 */
#define SENT_RSR4	(*( SENT_RSR0_type *) 0xf000320cu)	/* Receive Status Register 4 */
#define SENT_RSR5	(*( SENT_RSR0_type *) 0xf000324cu)	/* Receive Status Register 5 */
#define SENT_RSR6	(*( SENT_RSR0_type *) 0xf000328cu)	/* Receive Status Register 6 */
#define SENT_RSR7	(*( SENT_RSR0_type *) 0xf00032ccu)	/* Receive Status Register 7 */
#define SENT_RSR8	(*( SENT_RSR0_type *) 0xf000330cu)	/* Receive Status Register 8 */
#define SENT_RSR9	(*( SENT_RSR0_type *) 0xf000334cu)	/* Receive Status Register 9 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int LTS            : 32;	/* Last Receive Time Stamp for Channel x */
	} B;
	int I;
	unsigned int U;

} SENT_RTS0_type;
#define SENT_RTS0	(*( SENT_RTS0_type *) 0xf0003a80u)	/* Receive Time Stamp Register 0 */
#define SENT_RTS1	(*( SENT_RTS0_type *) 0xf0003a84u)	/* Receive Time Stamp Register 1 */
#define SENT_RTS2	(*( SENT_RTS0_type *) 0xf0003a88u)	/* Receive Time Stamp Register 2 */
#define SENT_RTS3	(*( SENT_RTS0_type *) 0xf0003a8cu)	/* Receive Time Stamp Register 3 */
#define SENT_RTS4	(*( SENT_RTS0_type *) 0xf0003a90u)	/* Receive Time Stamp Register 4 */
#define SENT_RTS5	(*( SENT_RTS0_type *) 0xf0003a94u)	/* Receive Time Stamp Register 5 */
#define SENT_RTS6	(*( SENT_RTS0_type *) 0xf0003a98u)	/* Receive Time Stamp Register 6 */
#define SENT_RTS7	(*( SENT_RTS0_type *) 0xf0003a9cu)	/* Receive Time Stamp Register 7 */
#define SENT_RTS8	(*( SENT_RTS0_type *) 0xf0003aa0u)	/* Receive Time Stamp Register 8 */
#define SENT_RTS9	(*( SENT_RTS0_type *) 0xf0003aa4u)	/* Receive Time Stamp Register 9 */

typedef volatile union
{
	struct
	{ 
		unsigned int PLEN           : 6;	/* Pulse Length */
		unsigned int TRIG           : 2;	/* Trigger Source and Mode Selection */
		unsigned int DEL            : 6;	/* Delay Length */
		unsigned int BASE           : 1;	/* Time Base */
		/* const */ unsigned int TRQ            : 1;	/* Transfer Request in Progress */
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} SENT_SCR0_type;
#define SENT_SCR0	(*( SENT_SCR0_type *) 0xf0003118u)	/* SPC Control Register 0 */
#define SENT_SCR1	(*( SENT_SCR0_type *) 0xf0003158u)	/* SPC Control Register 1 */
#define SENT_SCR2	(*( SENT_SCR0_type *) 0xf0003198u)	/* SPC Control Register 2 */
#define SENT_SCR3	(*( SENT_SCR0_type *) 0xf00031d8u)	/* SPC Control Register 3 */
#define SENT_SCR4	(*( SENT_SCR0_type *) 0xf0003218u)	/* SPC Control Register 4 */
#define SENT_SCR5	(*( SENT_SCR0_type *) 0xf0003258u)	/* SPC Control Register 5 */
#define SENT_SCR6	(*( SENT_SCR0_type *) 0xf0003298u)	/* SPC Control Register 6 */
#define SENT_SCR7	(*( SENT_SCR0_type *) 0xf00032d8u)	/* SPC Control Register 7 */
#define SENT_SCR8	(*( SENT_SCR0_type *) 0xf0003318u)	/* SPC Control Register 8 */
#define SENT_SCR9	(*( SENT_SCR0_type *) 0xf0003358u)	/* SPC Control Register 9 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int SD             : 16;	/* Serial Data */
		/* const */ unsigned int MID            : 8;	/* Message ID */
		/* const */ unsigned int SCRC           : 6;	/* SCRC */
		/* const */ unsigned int                : 1;
		/* const */ unsigned int CON            : 1;	/* Configuration bit */
	} B;
	int I;
	unsigned int U;

} SENT_SDS0_type;
#define SENT_SDS0	(*( SENT_SDS0_type *) 0xf0003110u)	/* Serial Data and Status Register 0 */
#define SENT_SDS1	(*( SENT_SDS0_type *) 0xf0003150u)	/* Serial Data and Status Register 1 */
#define SENT_SDS2	(*( SENT_SDS0_type *) 0xf0003190u)	/* Serial Data and Status Register 2 */
#define SENT_SDS3	(*( SENT_SDS0_type *) 0xf00031d0u)	/* Serial Data and Status Register 3 */
#define SENT_SDS4	(*( SENT_SDS0_type *) 0xf0003210u)	/* Serial Data and Status Register 4 */
#define SENT_SDS5	(*( SENT_SDS0_type *) 0xf0003250u)	/* Serial Data and Status Register 5 */
#define SENT_SDS6	(*( SENT_SDS0_type *) 0xf0003290u)	/* Serial Data and Status Register 6 */
#define SENT_SDS7	(*( SENT_SDS0_type *) 0xf00032d0u)	/* Serial Data and Status Register 7 */
#define SENT_SDS8	(*( SENT_SDS0_type *) 0xf0003310u)	/* Serial Data and Status Register 8 */
#define SENT_SDS9	(*( SENT_SDS0_type *) 0xf0003350u)	/* Serial Data and Status Register 9 */

typedef volatile union
{
	struct
	{ 
		unsigned int TDIV           : 20;	/* Divider Factor of Pre Divider for TSR */
		unsigned int                : 12;
	} B;
	int I;
	unsigned int U;

} SENT_TPD_type;
#define SENT_TPD	(*( SENT_TPD_type *) 0xf000301cu)	/* Time Stamp Predivider Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int CTS            : 32;	/* Current Time Stamp for the Module */
	} B;
	int I;
	unsigned int U;

} SENT_TSR_type;
#define SENT_TSR	(*( SENT_TSR_type *) 0xf0003018u)	/* Time Stamp Register */

typedef volatile union
{
	struct
	{ 
		unsigned int RDNP0          : 3;	/* Receive Data Target Nibble Pointer 0 */
		unsigned int                : 1;
		unsigned int RDNP1          : 3;	/* Receive Data Target Nibble Pointer 1 */
		unsigned int                : 1;
		unsigned int RDNP2          : 3;	/* Receive Data Target Nibble Pointer 2 */
		unsigned int                : 1;
		unsigned int RDNP3          : 3;	/* Receive Data Target Nibble Pointer 3 */
		unsigned int                : 1;
		unsigned int RDNP4          : 3;	/* Receive Data Target Nibble Pointer 4 */
		unsigned int                : 1;
		unsigned int RDNP5          : 3;	/* Receive Data Target Nibble Pointer 5 */
		unsigned int                : 1;
		unsigned int RDNP6          : 3;	/* Receive Data Target Nibble Pointer 6 */
		unsigned int                : 1;
		unsigned int RDNP7          : 3;	/* Receive Data Target Nibble Pointer 7 */
		unsigned int                : 1;
	} B;
	int I;
	unsigned int U;

} SENT_VIEW0_type;
#define SENT_VIEW0	(*( SENT_VIEW0_type *) 0xf000311cu)	/* Receive Data View Register 0 */
#define SENT_VIEW1	(*( SENT_VIEW0_type *) 0xf000315cu)	/* Receive Data View Register 1 */
#define SENT_VIEW2	(*( SENT_VIEW0_type *) 0xf000319cu)	/* Receive Data View Register 2 */
#define SENT_VIEW3	(*( SENT_VIEW0_type *) 0xf00031dcu)	/* Receive Data View Register 3 */
#define SENT_VIEW4	(*( SENT_VIEW0_type *) 0xf000321cu)	/* Receive Data View Register 4 */
#define SENT_VIEW5	(*( SENT_VIEW0_type *) 0xf000325cu)	/* Receive Data View Register 5 */
#define SENT_VIEW6	(*( SENT_VIEW0_type *) 0xf000329cu)	/* Receive Data View Register 6 */
#define SENT_VIEW7	(*( SENT_VIEW0_type *) 0xf00032dcu)	/* Receive Data View Register 7 */
#define SENT_VIEW8	(*( SENT_VIEW0_type *) 0xf000331cu)	/* Receive Data View Register 8 */
#define SENT_VIEW9	(*( SENT_VIEW0_type *) 0xf000335cu)	/* Receive Data View Register 9 */

typedef volatile union
{
	struct
	{ 
		unsigned int WDLx           : 16;	/* Watch Dog Timer Limit */
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} SENT_WDT0_type;
#define SENT_WDT0	(*( SENT_WDT0_type *) 0xf0003134u)	/* Watch Dog Timer Register 0 */
#define SENT_WDT1	(*( SENT_WDT0_type *) 0xf0003174u)	/* Watch Dog Timer Register 1 */
#define SENT_WDT2	(*( SENT_WDT0_type *) 0xf00031b4u)	/* Watch Dog Timer Register 2 */
#define SENT_WDT3	(*( SENT_WDT0_type *) 0xf00031f4u)	/* Watch Dog Timer Register 3 */
#define SENT_WDT4	(*( SENT_WDT0_type *) 0xf0003234u)	/* Watch Dog Timer Register 4 */
#define SENT_WDT5	(*( SENT_WDT0_type *) 0xf0003274u)	/* Watch Dog Timer Register 5 */
#define SENT_WDT6	(*( SENT_WDT0_type *) 0xf00032b4u)	/* Watch Dog Timer Register 6 */
#define SENT_WDT7	(*( SENT_WDT0_type *) 0xf00032f4u)	/* Watch Dog Timer Register 7 */
#define SENT_WDT8	(*( SENT_WDT0_type *) 0xf0003334u)	/* Watch Dog Timer Register 8 */
#define SENT_WDT9	(*( SENT_WDT0_type *) 0xf0003374u)	/* Watch Dog Timer Register 9 */


/* ERAY */
typedef volatile union
{
	struct
	{ 
		unsigned int EN0            : 1;	/* Access Enable for Master TAG ID 0 */
		unsigned int EN1            : 1;	/* Access Enable for Master TAG ID 1 */
		unsigned int EN2            : 1;	/* Access Enable for Master TAG ID 2 */
		unsigned int EN3            : 1;	/* Access Enable for Master TAG ID 3 */
		unsigned int EN4            : 1;	/* Access Enable for Master TAG ID 4 */
		unsigned int EN5            : 1;	/* Access Enable for Master TAG ID 5 */
		unsigned int EN6            : 1;	/* Access Enable for Master TAG ID 6 */
		unsigned int EN7            : 1;	/* Access Enable for Master TAG ID 7 */
		unsigned int EN8            : 1;	/* Access Enable for Master TAG ID 8 */
		unsigned int EN9            : 1;	/* Access Enable for Master TAG ID 9 */
		unsigned int EN10           : 1;	/* Access Enable for Master TAG ID 10 */
		unsigned int EN11           : 1;	/* Access Enable for Master TAG ID 11 */
		unsigned int EN12           : 1;	/* Access Enable for Master TAG ID 12 */
		unsigned int EN13           : 1;	/* Access Enable for Master TAG ID 13 */
		unsigned int EN14           : 1;	/* Access Enable for Master TAG ID 14 */
		unsigned int EN15           : 1;	/* Access Enable for Master TAG ID 15 */
		unsigned int EN16           : 1;	/* Access Enable for Master TAG ID 16 */
		unsigned int EN17           : 1;	/* Access Enable for Master TAG ID 17 */
		unsigned int EN18           : 1;	/* Access Enable for Master TAG ID 18 */
		unsigned int EN19           : 1;	/* Access Enable for Master TAG ID 19 */
		unsigned int EN20           : 1;	/* Access Enable for Master TAG ID 20 */
		unsigned int EN21           : 1;	/* Access Enable for Master TAG ID 21 */
		unsigned int EN22           : 1;	/* Access Enable for Master TAG ID 22 */
		unsigned int EN23           : 1;	/* Access Enable for Master TAG ID 23 */
		unsigned int EN24           : 1;	/* Access Enable for Master TAG ID 24 */
		unsigned int EN25           : 1;	/* Access Enable for Master TAG ID 25 */
		unsigned int EN26           : 1;	/* Access Enable for Master TAG ID 26 */
		unsigned int EN27           : 1;	/* Access Enable for Master TAG ID 27 */
		unsigned int EN28           : 1;	/* Access Enable for Master TAG ID 28 */
		unsigned int EN29           : 1;	/* Access Enable for Master TAG ID 29 */
		unsigned int EN30           : 1;	/* Access Enable for Master TAG ID 30 */
		unsigned int EN31           : 1;	/* Access Enable for Master TAG ID 31 */
	} B;
	int I;
	unsigned int U;

} ERAY_ACCEN0_type;
#define ERAY_ACCEN0	(*( ERAY_ACCEN0_type *) 0xf001c8fcu)	/* Access Enable Register 0 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int Reserved       : 32;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} ERAY_ACCEN1_type;
#define ERAY_ACCEN1	(*( ERAY_ACCEN1_type *) 0xf001c8f8u)	/* Access Enable Register 1 */

typedef volatile union
{
	struct
	{ 
		unsigned int VFRA           : 1;	/* Valid Frame Received on Channel A (vSS!ValidFrameA) */
		unsigned int SEDA           : 1;	/* Syntax Error Detected on Channel A (vSS!SyntaxErrorA) */
		unsigned int CEDA           : 1;	/* Content Error Detected on Channel A (vSS!ContentErrorA) */
		unsigned int CIA            : 1;	/* Communication Indicator Channel A */
		unsigned int SBVA           : 1;	/* Slot Boundary Violation on Channel A (vSS!BViolationA) */
		unsigned int                : 3;
		unsigned int VFRB           : 1;	/* Valid Frame Received on Channel B (vSS!ValidFrameB) */
		unsigned int SEDB           : 1;	/* Syntax Error Detected on Channel B (vSS!SyntaxErrorB) */
		unsigned int CEDB           : 1;	/* Content Error Detected on Channel B (vSS!ContentErrorB) */
		unsigned int CIB            : 1;	/* Communication Indicator Channel B */
		unsigned int SBVB           : 1;	/* Slot Boundary Violation on Channel B (vSS!BViolationB) */
		unsigned int                : 19;
	} B;
	int I;
	unsigned int U;

} ERAY_ACS_type;
#define ERAY_ACS	(*( ERAY_ACS_type *) 0xf001c128u)	/* Aggregated Channel Status */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int CCFC           : 4;	/* Clock Correction Failed Counter (vClockCorrectionFailed) */
		/* const */ unsigned int                : 2;
		/* const */ unsigned int ERRM           : 2;	/* Error Mode (vPOC!ErrorMode) */
		/* const */ unsigned int PTAC           : 5;	/* Passive to Active Count (vAllowPassiveToActive) */
		/* const */ unsigned int                : 19;
	} B;
	int I;
	unsigned int U;

} ERAY_CCEV_type;
#define ERAY_CCEV	(*( ERAY_CCEV_type *) 0xf001c104u)	/* Communication Controller Error Vector */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int POCS           : 6;	/* Protocol Operation Control Status */
		/* const */ unsigned int FSI            : 1;	/* Freeze Status Indicator (vPOC!Freeze) */
		/* const */ unsigned int HRQ            : 1;	/* Halt Request (vPOC!CHIHaltRequest) */
		/* const */ unsigned int SLM            : 2;	/* Slot Mode (vPOC!SlotMode) */
		/* const */ unsigned int                : 2;
		/* const */ unsigned int CSNI           : 1;	/* Coldstart Noise Indicator (vPOC!ColdstartNoise) */
		/* const */ unsigned int CSAI           : 1;	/* Coldstart Abort Indicator */
		/* const */ unsigned int CSI            : 1;	/* Cold Start Inhibit (vColdStartInhibit) */
		/* const */ unsigned int                : 1;
		/* const */ unsigned int WSV            : 3;	/* Wakeup Status (vPOC!WakeupStatus) */
		/* const */ unsigned int RCA            : 5;	/* Remaining Coldstart Attempts (vRemainingColdstartAttempts) */
		/* const */ unsigned int PSL            : 6;	/* POC Status Log */
		/* const */ unsigned int                : 2;
	} B;
	int I;
	unsigned int U;

} ERAY_CCSV_type;
#define ERAY_CCSV	(*( ERAY_CCSV_type *) 0xf001c100u)	/* Communication Controller Status Vector */

typedef volatile union
{
	struct
	{ 
		unsigned int DISR           : 1;	/* Module Disable Request Bit */
		/* const */ unsigned int DISS           : 1;	/* Module Disable Status Bit */
		unsigned int                : 1;
		unsigned int EDIS           : 1;	/* External Sleep Mode Request Disable Bit */
		unsigned int                : 4;
		unsigned int RMC            : 3;	/* Clock Divider in Run Mode */
		unsigned int                : 21;
	} B;
	int I;
	unsigned int U;

} ERAY_CLC_type;
#define ERAY_CLC	(*( ERAY_CLC_type *) 0xf001c000u)	/* Clock Control Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int DAY            : 8;	/* Design Time Stamp, Day */
		/* const */ unsigned int MON            : 8;	/* Design Time Stamp, Month */
		/* const */ unsigned int YEAR           : 4;	/* Design Time Stamp, Year */
		/* const */ unsigned int SUBSTEP        : 4;	/* Sub-Step of Core Release */
		/* const */ unsigned int STEP           : 4;	/* Step of Core Release */
		/* const */ unsigned int REL            : 4;	/* Core Release */
	} B;
	int I;
	unsigned int U;

} ERAY_CREL_type;
#define ERAY_CREL	(*( ERAY_CREL_type *) 0xf001c3f0u)	/* Core Release Register */

typedef volatile union
{
	struct
	{ 
		unsigned int INT0           : 1;	/* CIF Timeout Service Request Status */
		unsigned int OEN            : 1;	/* Enable auto delay scheme for Output Buffer Control Register (OBCR) */
		unsigned int IEN            : 1;	/* Enable auto delay scheme for Input Buffer Control Register (IBCR) */
		/* const */ unsigned int IBFS           : 1;	/* Input Buffer Status Register */
		unsigned int IBF1PAG        : 1;	/* Input Buffer 1 Page Select Register */
		unsigned int                : 2;
		unsigned int IBF2PAG        : 1;	/* Input Buffer 2 Page Select Register */
		unsigned int                : 2;
		unsigned int RISA           : 2;	/* Receive Input Select Channel A */
		unsigned int RISB           : 2;	/* Receive Input Select Channel B */
		unsigned int STPWTS         : 2;	/* Stop Watch Trigger Input Select */
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} ERAY_CUST1_type;
#define ERAY_CUST1	(*( ERAY_CUST1_type *) 0xf001c004u)	/* Busy and Input Buffer Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int TO             : 32;	/* CIF Timeout Reload Value */
	} B;
	int I;
	unsigned int U;

} ERAY_CUST3_type;
#define ERAY_CUST3	(*( ERAY_CUST3_type *) 0xf001c00cu)	/* Customer Interface Timeout Counter */

typedef volatile union
{
	struct
	{ 
		unsigned int PEMCE          : 1;	/* POC Error Mode Changed Service Request Enable */
		unsigned int CNAE           : 1;	/* Command Not Accepted Service Request Enable */
		unsigned int SFBME          : 1;	/* SYNC Frames Below Minimum Service Request Enable */
		unsigned int SFOE           : 1;	/* SYNC Frame Overflow Service Request Enable */
		unsigned int CCFE           : 1;	/* Clock Correction Failure Service Request Enable */
		unsigned int CCLE           : 1;	/* CHI Command Locked Service Request Enable */
		unsigned int EERRE          : 1;	/* ECC Error Service Request Enable */
		unsigned int RFOE           : 1;	/* Receive FIFO Overrun Service Request Enable */
		unsigned int EFAE           : 1;	/* Empty FIFO Access Service Request Enable */
		unsigned int IIBAE          : 1;	/* Illegal Input Buffer Access Service Request Enable */
		unsigned int IOBAE          : 1;	/* Illegal Output Buffer Access Service Request Enable */
		unsigned int MHFE           : 1;	/* Message Handler Constraints Flag Service Request Enable */
		unsigned int                : 4;
		unsigned int EDAE           : 1;	/* Error Detected on Channel A Service Request Enable */
		unsigned int LTVAE          : 1;	/* Latest Transmit Violation Channel A Service Request Enable */
		unsigned int TABAE          : 1;	/* Transmission Across Boundary Channel A Service Request Enable */
		unsigned int                : 5;
		unsigned int EDBE           : 1;	/* Error Detected on Channel B Service Request Enable */
		unsigned int LTVBE          : 1;	/* Latest Transmit Violation Channel B Service Request Enable */
		unsigned int TABBE          : 1;	/* Transmission Across Boundary Channel B Service Request Enable */
		unsigned int                : 5;
	} B;
	int I;
	unsigned int U;

} ERAY_EIER_type;
#define ERAY_EIER	(*( ERAY_EIER_type *) 0xf001c034u)	/* Error Service Request Enable Reset */

typedef volatile union
{
	struct
	{ 
		unsigned int PEMCE          : 1;	/* POC Error Mode Changed Service Request Enable */
		unsigned int CNAE           : 1;	/* Command Not Accepted Service Request Enable */
		unsigned int SFBME          : 1;	/* SYNC Frames Below Minimum Service Request Enable */
		unsigned int SFOE           : 1;	/* SYNC Frame Overflow Service Request Enable */
		unsigned int CCFE           : 1;	/* Clock Correction Failure Service Request Enable */
		unsigned int CCLE           : 1;	/* CHI Command Locked Service Request Enable */
		unsigned int EERRE          : 1;	/* ECC Error Service Request Enable */
		unsigned int RFOE           : 1;	/* Receive FIFO Overrun Service Request Enable */
		unsigned int EFAE           : 1;	/* Empty FIFO Access Service Request Enable */
		unsigned int IIBAE          : 1;	/* Illegal Input Buffer Access Service Request Enable */
		unsigned int IOBAE          : 1;	/* Illegal Output Buffer Access Service Request Enable */
		unsigned int MHFE           : 1;	/* Message Handler Constraints Flag Service Request Enable */
		unsigned int                : 4;
		unsigned int EDAE           : 1;	/* Error Detected on Channel A Service Request Enable */
		unsigned int LTVAE          : 1;	/* Latest Transmit Violation Channel A Service Request Enable */
		unsigned int TABAE          : 1;	/* Transmission Across Boundary Channel A Service Request Enable */
		unsigned int                : 5;
		unsigned int EDBE           : 1;	/* Error Detected on Channel B Service Request Enable */
		unsigned int LTVBE          : 1;	/* Latest Transmit Violation Channel B Service Request Enable */
		unsigned int TABBE          : 1;	/* Transmission Across Boundary Channel B Service Request Enable */
		unsigned int                : 5;
	} B;
	int I;
	unsigned int U;

} ERAY_EIES_type;
#define ERAY_EIES	(*( ERAY_EIES_type *) 0xf001c030u)	/* Error Service Request Enable Set */

typedef volatile union
{
	struct
	{ 
		unsigned int PEMCL          : 1;	/* POC Error Mode Changed Service Request Line */
		unsigned int CNAL           : 1;	/* Command Not Accepted Service Request Line */
		unsigned int SFBML          : 1;	/* SYNC Frames Below Minimum Service Request Line */
		unsigned int SFOL           : 1;	/* SYNC Frame Overflow Service Request Line */
		unsigned int CCFL           : 1;	/* Clock Correction Failure Service Request Line */
		unsigned int CCLL           : 1;	/* CHI Command Locked Service Request Line */
		unsigned int EERRL          : 1;	/* ECC Error Service Request Line */
		unsigned int RFOL           : 1;	/* Receive FIFO Overrun Service Request Line */
		unsigned int EFAL           : 1;	/* Empty FIFO Access Service Request Line */
		unsigned int IIBAL          : 1;	/* Illegal Input Buffer Access Service Request Line */
		unsigned int IOBAL          : 1;	/* Illegal Output Buffer Access Service Request Line */
		unsigned int MHFL           : 1;	/* Message Handler Constrains Flag Service Request Line */
		unsigned int                : 4;
		unsigned int EDAL           : 1;	/* Error Detected on Channel A Service Request Line */
		unsigned int LTVAL          : 1;	/* Latest Transmit Violation Channel A Service Request Line */
		unsigned int TABAL          : 1;	/* Transmission Across Boundary Channel A Service Request Line */
		unsigned int                : 5;
		unsigned int EDBL           : 1;	/* Error Detected on Channel B Service Request Line */
		unsigned int LTVBL          : 1;	/* Latest Transmit Violation Channel B Service Request Line */
		unsigned int TABBL          : 1;	/* Transmission Across Boundary Channel A Service Request Line */
		unsigned int                : 5;
	} B;
	int I;
	unsigned int U;

} ERAY_EILS_type;
#define ERAY_EILS	(*( ERAY_EILS_type *) 0xf001c028u)	/* Error Service Request Line Select */

typedef volatile union
{
	struct
	{ 
		unsigned int PEMC           : 1;	/* POC Error Mode Changed */
		unsigned int CNA            : 1;	/* Command Not Accepted */
		unsigned int SFBM           : 1;	/* SYNC Frames Below Minimum */
		unsigned int SFO            : 1;	/* SYNC Frame Overflow */
		unsigned int CCF            : 1;	/* Clock Correction Failure */
		unsigned int CCL            : 1;	/* CHI Command Locked */
		/* const */ unsigned int EERR           : 1;	/* ECC Error */
		/* const */ unsigned int RFO            : 1;	/* Receive FIFO Overrun */
		unsigned int EFA            : 1;	/* Empty FIFO Access */
		unsigned int IIBA           : 1;	/* Illegal Input Buffer Access */
		unsigned int IOBA           : 1;	/* Illegal Output Buffer Access */
		unsigned int MHF            : 1;	/* Message Handler Constraints Flag */
		unsigned int                : 4;
		unsigned int EDA            : 1;	/* Error Detected on Channel A */
		unsigned int LTVA           : 1;	/* Latest Transmit Violation Channel A */
		unsigned int TABA           : 1;	/* Transmission Across Boundary Channel A */
		unsigned int                : 5;
		unsigned int EDB            : 1;	/* Error Detected on Channel B */
		unsigned int LTVB           : 1;	/* Latest Transmit Violation Channel B */
		unsigned int TABB           : 1;	/* Transmission Across Boundary Channel B */
		unsigned int                : 5;
	} B;
	int I;
	unsigned int U;

} ERAY_EIR_type;
#define ERAY_EIR	(*( ERAY_EIR_type *) 0xf001c020u)	/* Error Service Request Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int ETV            : 32;	/* Endianness Test Value */
	} B;
	int I;
	unsigned int U;

} ERAY_ENDN_type;
#define ERAY_ENDN	(*( ERAY_ENDN_type *) 0xf001c3f4u)	/* Endian Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int EID            : 10;	/* Even Sync ID (vsSyncIDListA,B even) */
		/* const */ unsigned int                : 4;
		/* const */ unsigned int RXEA           : 1;	/* Received/Configured Even Sync ID on Channel A */
		/* const */ unsigned int RXEB           : 1;	/* Received/Configured Even Sync ID on Channel B */
		/* const */ unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} ERAY_ESID01_type;
#define ERAY_ESID01	(*( ERAY_ESID01_type *) 0xf001c130u)	/* Even Sync ID Symbol Window 01 */
#define ERAY_ESID02	(*( ERAY_ESID01_type *) 0xf001c134u)	/* Even Sync ID Symbol Window 02 */
#define ERAY_ESID03	(*( ERAY_ESID01_type *) 0xf001c138u)	/* Even Sync ID Symbol Window 03 */
#define ERAY_ESID04	(*( ERAY_ESID01_type *) 0xf001c13cu)	/* Even Sync ID Symbol Window 04 */
#define ERAY_ESID05	(*( ERAY_ESID01_type *) 0xf001c140u)	/* Even Sync ID Symbol Window 05 */
#define ERAY_ESID06	(*( ERAY_ESID01_type *) 0xf001c144u)	/* Even Sync ID Symbol Window 06 */
#define ERAY_ESID07	(*( ERAY_ESID01_type *) 0xf001c148u)	/* Even Sync ID Symbol Window 07 */
#define ERAY_ESID08	(*( ERAY_ESID01_type *) 0xf001c14cu)	/* Even Sync ID Symbol Window 08 */
#define ERAY_ESID09	(*( ERAY_ESID01_type *) 0xf001c150u)	/* Even Sync ID Symbol Window 09 */
#define ERAY_ESID10	(*( ERAY_ESID01_type *) 0xf001c154u)	/* Even Sync ID Symbol Window 10 */
#define ERAY_ESID11	(*( ERAY_ESID01_type *) 0xf001c158u)	/* Even Sync ID Symbol Window 11 */
#define ERAY_ESID12	(*( ERAY_ESID01_type *) 0xf001c15cu)	/* Even Sync ID Symbol Window 12 */
#define ERAY_ESID13	(*( ERAY_ESID01_type *) 0xf001c160u)	/* Even Sync ID Symbol Window 13 */
#define ERAY_ESID14	(*( ERAY_ESID01_type *) 0xf001c164u)	/* Even Sync ID Symbol Window 14 */
#define ERAY_ESID15	(*( ERAY_ESID01_type *) 0xf001c168u)	/* Even Sync ID Symbol Window 15 */

typedef volatile union
{
	struct
	{ 
		unsigned int CL             : 8;	/* Critical Level */
		unsigned int                : 24;
	} B;
	int I;
	unsigned int U;

} ERAY_FCL_type;
#define ERAY_FCL	(*( ERAY_FCL_type *) 0xf001c30cu)	/* FIFO Critical Level */

typedef volatile union
{
	struct
	{ 
		unsigned int CH             : 2;	/* Channel Filter */
		unsigned int FID            : 11;	/* Frame ID Filter */
		unsigned int                : 3;
		unsigned int CYF            : 7;	/* Cycle Counter Filter */
		unsigned int RSS            : 1;	/* Reject in Static Segment */
		unsigned int RNF            : 1;	/* Reject NULL Frames */
		unsigned int                : 7;
	} B;
	int I;
	unsigned int U;

} ERAY_FRF_type;
#define ERAY_FRF	(*( ERAY_FRF_type *) 0xf001c304u)	/* FIFO Rejection Filter */

typedef volatile union
{
	struct
	{ 
		unsigned int                : 2;
		unsigned int MFID           : 11;	/* Mask Frame ID Filter */
		unsigned int                : 19;
	} B;
	int I;
	unsigned int U;

} ERAY_FRFM_type;
#define ERAY_FRFM	(*( ERAY_FRFM_type *) 0xf001c308u)	/* FIFO Rejection Filter Mask */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int RFNE           : 1;	/* Receive FIFO Not Empty */
		/* const */ unsigned int RFCL           : 1;	/* Receive FIFO Critical Level */
		/* const */ unsigned int RFO            : 1;	/* Receive FIFO Overrun */
		/* const */ unsigned int                : 5;
		/* const */ unsigned int RFFL           : 8;	/* Receive FIFO Fill Level */
		/* const */ unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} ERAY_FSR_type;
#define ERAY_FSR	(*( ERAY_FSR_type *) 0xf001c318u)	/* FIFO Status Register */

typedef volatile union
{
	struct
	{ 
		unsigned int UT             : 20;	/* Microtick per Cycle (pMicroPerCycle) */
		unsigned int                : 12;
	} B;
	int I;
	unsigned int U;

} ERAY_GTUC01_type;
#define ERAY_GTUC01	(*( ERAY_GTUC01_type *) 0xf001c0a0u)	/* GTU Configuration Register 1 */

typedef volatile union
{
	struct
	{ 
		unsigned int MPC            : 14;	/* Macrotick Per Cycle (gMacroPerCycle) */
		unsigned int                : 2;
		unsigned int SNM            : 4;	/* Sync Node Max (gSyncNodeMax) */
		unsigned int                : 12;
	} B;
	int I;
	unsigned int U;

} ERAY_GTUC02_type;
#define ERAY_GTUC02	(*( ERAY_GTUC02_type *) 0xf001c0a4u)	/* GTU Configuration Register 2 */

typedef volatile union
{
	struct
	{ 
		unsigned int UIOA           : 8;	/* Microtick Initial Offset Channel A (pMicroInitialOffset[A]) */
		unsigned int UIOB           : 8;	/* Microtick Initial Offset Channel B (pMicroInitialOffset[B]) */
		unsigned int MIOA           : 7;	/* Macrotick Initial Offset Channel A (gMacroInitialOffset[A]) */
		unsigned int                : 1;
		unsigned int MIOB           : 7;	/* Macrotick Initial Offset Channel B (gMacroInitialOffset[B]) */
		unsigned int                : 1;
	} B;
	int I;
	unsigned int U;

} ERAY_GTUC03_type;
#define ERAY_GTUC03	(*( ERAY_GTUC03_type *) 0xf001c0a8u)	/* GTU Configuration Register 3 */

typedef volatile union
{
	struct
	{ 
		unsigned int NIT            : 14;	/* Network Idle Time Start (gMacroPerCycle - gdNIT - 1) */
		unsigned int                : 2;
		unsigned int OCS            : 14;	/* Offset Correction Start (gOffsetCorrectionStart - 1) */
		unsigned int                : 2;
	} B;
	int I;
	unsigned int U;

} ERAY_GTUC04_type;
#define ERAY_GTUC04	(*( ERAY_GTUC04_type *) 0xf001c0acu)	/* GTU Configuration Register 4 */

typedef volatile union
{
	struct
	{ 
		unsigned int DCA            : 8;	/* Delay Compensation Channel A (pDelayCompensation[A]) */
		unsigned int DCB            : 8;	/* Delay Compensation Channel B (pDelayCompensation[B]) */
		unsigned int CDD            : 5;	/* Cluster Drift Damping (pClusterDriftDamping) */
		unsigned int                : 3;
		unsigned int DEC            : 8;	/* Decoding Correction (pDecodingCorrection) */
	} B;
	int I;
	unsigned int U;

} ERAY_GTUC05_type;
#define ERAY_GTUC05	(*( ERAY_GTUC05_type *) 0xf001c0b0u)	/* GTU Configuration Register 5 */

typedef volatile union
{
	struct
	{ 
		unsigned int ASR            : 11;	/* Accepted Startup Range (pdAcceptedStartupRange) */
		unsigned int                : 5;
		unsigned int MOD            : 11;	/* Maximum Oscillator Drift (pdMaxDrift) */
		unsigned int                : 5;
	} B;
	int I;
	unsigned int U;

} ERAY_GTUC06_type;
#define ERAY_GTUC06	(*( ERAY_GTUC06_type *) 0xf001c0b4u)	/* GTU Configuration Register 6 */

typedef volatile union
{
	struct
	{ 
		unsigned int SSL            : 10;	/* Static Slot Length (gdStaticSlot) */
		unsigned int                : 6;
		unsigned int NSS            : 10;	/* Number of Static Slots (gNumberOfStaticSlots) */
		unsigned int                : 6;
	} B;
	int I;
	unsigned int U;

} ERAY_GTUC07_type;
#define ERAY_GTUC07	(*( ERAY_GTUC07_type *) 0xf001c0b8u)	/* GTU Configuration Register 7 */

typedef volatile union
{
	struct
	{ 
		unsigned int MSL            : 6;	/* Minislot Length (gdMinislot) */
		unsigned int                : 10;
		unsigned int NMS            : 13;	/* Number of Minislots (gNumberOfMinislots) */
		unsigned int                : 3;
	} B;
	int I;
	unsigned int U;

} ERAY_GTUC08_type;
#define ERAY_GTUC08	(*( ERAY_GTUC08_type *) 0xf001c0bcu)	/* GTU Configuration Register 8 */

typedef volatile union
{
	struct
	{ 
		unsigned int APO            : 6;	/* Action Point Offset (gdActionPointOffset) */
		unsigned int                : 2;
		unsigned int MAPO           : 5;	/* Minislot Action Point Offset (gd Minislot Action Point Offset) */
		unsigned int                : 3;
		unsigned int DSI            : 2;	/* Dynamic Slot Idle Phase (gdDynamicSlotIdlePhase) */
		unsigned int                : 14;
	} B;
	int I;
	unsigned int U;

} ERAY_GTUC09_type;
#define ERAY_GTUC09	(*( ERAY_GTUC09_type *) 0xf001c0c0u)	/* GTU Configuration Register 9 */

typedef volatile union
{
	struct
	{ 
		unsigned int MOC            : 14;	/* Maximum Offset Correction (pOffsetCorrectionOut) */
		unsigned int                : 2;
		unsigned int MRC            : 11;	/* Maximum Rate Correction (pRateCorrectionOut) */
		unsigned int                : 5;
	} B;
	int I;
	unsigned int U;

} ERAY_GTUC10_type;
#define ERAY_GTUC10	(*( ERAY_GTUC10_type *) 0xf001c0c4u)	/* GTU Configuration Register 10 */

typedef volatile union
{
	struct
	{ 
		unsigned int EOCC           : 2;	/* External Offset Correction Control (pExternOffsetControl) */
		unsigned int                : 6;
		unsigned int ERCC           : 2;	/* External Rate Correction Control (pExternRateControl) */
		unsigned int                : 6;
		unsigned int EOC            : 3;	/* External Offset Correction (pExternOffsetCorrection) */
		unsigned int                : 5;
		unsigned int ERC            : 3;	/* External Rate Correction (pExternRateCorrection) */
		unsigned int                : 5;
	} B;
	int I;
	unsigned int U;

} ERAY_GTUC11_type;
#define ERAY_GTUC11	(*( ERAY_GTUC11_type *) 0xf001c0c8u)	/* GTU Configuration Register 11 */

typedef volatile union
{
	struct
	{ 
		unsigned int LHSH           : 1;	/* Load Header Section Host */
		unsigned int LDSH           : 1;	/* Load Data Section Host */
		unsigned int STXRH          : 1;	/* Set Transmission Request Host */
		unsigned int                : 13;
		/* const */ unsigned int LHSS           : 1;	/* Load Header Section Shadow */
		/* const */ unsigned int LDSS           : 1;	/* Load Data Section Shadow */
		/* const */ unsigned int STXRS          : 1;	/* Transmission Request Shadow */
		unsigned int                : 13;
	} B;
	int I;
	unsigned int U;

} ERAY_IBCM_type;
#define ERAY_IBCM	(*( ERAY_IBCM_type *) 0xf001c510u)	/* Input Buffer Command Mask */

typedef volatile union
{
	struct
	{ 
		unsigned int IBRH           : 7;	/* Input Buffer Request Host */
		unsigned int                : 8;
		/* const */ unsigned int IBSYH          : 1;	/* Input Buffer Busy Host */
		/* const */ unsigned int IBRS           : 7;	/* Input Buffer Request Shadow */
		unsigned int                : 8;
		/* const */ unsigned int IBSYS          : 1;	/* Input Buffer Busy Shadow */
	} B;
	int I;
	unsigned int U;

} ERAY_IBCR_type;
#define ERAY_IBCR	(*( ERAY_IBCR_type *) 0xf001c514u)	/* Input Buffer Command Request */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int MOD_REV        : 8;	/* Module Revision Number */
		/* const */ unsigned int MOD_TYPE       : 8;	/* Module Type */
		/* const */ unsigned int MOD_NUMBER     : 16;	/* Module Number Value */
	} B;
	int I;
	unsigned int U;

} ERAY_ID_type;
#define ERAY_ID	(*( ERAY_ID_type *) 0xf001c008u)	/* Module Identification Register */

typedef volatile union
{
	struct
	{ 
		unsigned int EINT0          : 1;	/* Enable Service Request Line 0 (INT0SRC) */
		unsigned int EINT1          : 1;	/* Enable Service Request Line 1 (INT1SRC) */
		unsigned int                : 30;
	} B;
	int I;
	unsigned int U;

} ERAY_ILE_type;
#define ERAY_ILE	(*( ERAY_ILE_type *) 0xf001c040u)	/* Service Request Line Enable */

typedef volatile union
{
	struct
	{ 
		unsigned int RST            : 1;	/* Kernel Reset */
		unsigned int RSTSTAT        : 1;	/* Kernel Reset Status */
		unsigned int                : 30;
	} B;
	int I;
	unsigned int U;

} ERAY_KRST0_type;
#define ERAY_KRST0	(*( ERAY_KRST0_type *) 0xf001c8f4u)	/* Kernel Reset Register 0 */

typedef volatile union
{
	struct
	{ 
		unsigned int RST            : 1;	/* Kernel Reset */
		unsigned int                : 31;
	} B;
	int I;
	unsigned int U;

} ERAY_KRST1_type;
#define ERAY_KRST1	(*( ERAY_KRST1_type *) 0xf001c8f0u)	/* Kernel Reset Register 1 */

typedef volatile union
{
	struct
	{ 
		unsigned int CLR            : 1;	/* Kernel Reset Status Clear */
		unsigned int                : 31;
	} B;
	int I;
	unsigned int U;

} ERAY_KRSTCLR_type;
#define ERAY_KRSTCLR	(*( ERAY_KRSTCLR_type *) 0xf001c8ecu)	/* Kernel Reset Status Clear Register */

typedef volatile union
{
	struct
	{ 
		unsigned int CLK            : 8;	/* Configuration Lock Key */
		unsigned int TMK            : 8;	/* Test Mode Key */
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} ERAY_LCK_type;
#define ERAY_LCK	(*( ERAY_LCK_type *) 0xf001c01cu)	/* Lock Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int LDTA           : 11;	/* Last Dynamic Transmission Channel A */
		/* const */ unsigned int                : 5;
		/* const */ unsigned int LDTB           : 11;	/* Last Dynamic Transmission Channel B */
		/* const */ unsigned int                : 5;
	} B;
	int I;
	unsigned int U;

} ERAY_LDTS_type;
#define ERAY_LDTS	(*( ERAY_LDTS_type *) 0xf001c314u)	/* Last Dynamic Transmit Slot */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int VFRA           : 1;	/* Valid Frame Received on Channel A (vSS!ValidFrameA) */
		/* const */ unsigned int VFRB           : 1;	/* Valid Frame Received on Channel B (vSS!ValidFrameB) */
		/* const */ unsigned int SEOA           : 1;	/* Syntax Error Observed on Channel A (vSS!SyntaxErrorA) */
		/* const */ unsigned int SEOB           : 1;	/* Syntax Error Observed on Channel B (vSS!SyntaxErrorB) */
		/* const */ unsigned int CEOA           : 1;	/* Content Error Observed on Channel A (vSS!ContentErrorA) */
		/* const */ unsigned int CEOB           : 1;	/* Content Error Observed on Channel B (vSS!ContentErrorB) */
		/* const */ unsigned int SVOA           : 1;	/* Slot Boundary Violation Observed on Channel A (vSS!BViolationA) */
		/* const */ unsigned int SVOB           : 1;	/* Slot Boundary Violation Observed on Channel B (vSS!BViolationB) */
		/* const */ unsigned int TCIA           : 1;	/* Transmission Conflict Indication Channel A (vSS!TxConflictA) */
		/* const */ unsigned int TCIB           : 1;	/* Transmission Conflict Indication Channel B (vSS!TxConflictB) */
		/* const */ unsigned int ESA            : 1;	/* Empty Slot Channel A */
		/* const */ unsigned int ESB            : 1;	/* Empty Slot Channel B */
		/* const */ unsigned int MLST           : 1;	/* Message Lost */
		/* const */ unsigned int                : 1;
		/* const */ unsigned int FTA            : 1;	/* Frame Transmitted on Channel A */
		/* const */ unsigned int FTB            : 1;	/* Frame Transmitted on Channel B */
		/* const */ unsigned int CCS            : 6;	/* Cycle Count Status */
		/* const */ unsigned int                : 2;
		/* const */ unsigned int RCIS           : 1;	/* Received on Channel Indicator Status (vSS!Channel) */
		/* const */ unsigned int SFIS           : 1;	/* Startup Frame Indicator Status (vRF!Header!SuFIndicator) */
		/* const */ unsigned int SYNS           : 1;	/* SYNC Frame Indicator Status (vRF!Header!SyFIndicator) */
		/* const */ unsigned int NFIS           : 1;	/* NULL Frame Indicator Status (vRF!Header!NFIndicator) */
		/* const */ unsigned int PPIS           : 1;	/* Payload Preamble Indictor Status (vRF!Header!PPIndicator) */
		/* const */ unsigned int RESS           : 1;	/* Reserved Bit Status (vRF!Header!Reserved) */
		/* const */ unsigned int                : 2;
	} B;
	int I;
	unsigned int U;

} ERAY_MBS_type;
#define ERAY_MBS	(*( ERAY_MBS_type *) 0xf001c70cu)	/* Message Buffer Status */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int MBC0           : 1;	/* Message Buffer Status Changed 0 (0 = 0-31) */
		/* const */ unsigned int MBC1           : 1;	/* Message Buffer Status Changed 1 (1 = 0-31) */
		/* const */ unsigned int MBC2           : 1;	/* Message Buffer Status Changed 2 (2 = 0-31) */
		/* const */ unsigned int MBC3           : 1;	/* Message Buffer Status Changed 3 (3 = 0-31) */
		/* const */ unsigned int MBC4           : 1;	/* Message Buffer Status Changed 4 (4 = 0-31) */
		/* const */ unsigned int MBC5           : 1;	/* Message Buffer Status Changed 5 (5 = 0-31) */
		/* const */ unsigned int MBC6           : 1;	/* Message Buffer Status Changed 6 (6 = 0-31) */
		/* const */ unsigned int MBC7           : 1;	/* Message Buffer Status Changed 7 (7 = 0-31) */
		/* const */ unsigned int MBC8           : 1;	/* Message Buffer Status Changed 8 (8 = 0-31) */
		/* const */ unsigned int MBC9           : 1;	/* Message Buffer Status Changed 9 (9 = 0-31) */
		/* const */ unsigned int MBC10          : 1;	/* Message Buffer Status Changed 10 (10 = 0-31) */
		/* const */ unsigned int MBC11          : 1;	/* Message Buffer Status Changed 11 (11 = 0-31) */
		/* const */ unsigned int MBC12          : 1;	/* Message Buffer Status Changed 12 (12 = 0-31) */
		/* const */ unsigned int MBC13          : 1;	/* Message Buffer Status Changed 13 (13 = 0-31) */
		/* const */ unsigned int MBC14          : 1;	/* Message Buffer Status Changed 14 (14 = 0-31) */
		/* const */ unsigned int MBC15          : 1;	/* Message Buffer Status Changed 15 (15 = 0-31) */
		/* const */ unsigned int MBC16          : 1;	/* Message Buffer Status Changed 16 (16 = 0-31) */
		/* const */ unsigned int MBC17          : 1;	/* Message Buffer Status Changed 17 (17 = 0-31) */
		/* const */ unsigned int MBC18          : 1;	/* Message Buffer Status Changed 18 (18 = 0-31) */
		/* const */ unsigned int MBC19          : 1;	/* Message Buffer Status Changed 19 (19 = 0-31) */
		/* const */ unsigned int MBC20          : 1;	/* Message Buffer Status Changed 20 (20 = 0-31) */
		/* const */ unsigned int MBC21          : 1;	/* Message Buffer Status Changed 21 (21 = 0-31) */
		/* const */ unsigned int MBC22          : 1;	/* Message Buffer Status Changed 22 (22 = 0-31) */
		/* const */ unsigned int MBC23          : 1;	/* Message Buffer Status Changed 23 (23 = 0-31) */
		/* const */ unsigned int MBC24          : 1;	/* Message Buffer Status Changed 24 (24 = 0-31) */
		/* const */ unsigned int MBC25          : 1;	/* Message Buffer Status Changed 25 (25 = 0-31) */
		/* const */ unsigned int MBC26          : 1;	/* Message Buffer Status Changed 26 (26 = 0-31) */
		/* const */ unsigned int MBC27          : 1;	/* Message Buffer Status Changed 27 (27 = 0-31) */
		/* const */ unsigned int MBC28          : 1;	/* Message Buffer Status Changed 28 (28 = 0-31) */
		/* const */ unsigned int MBC29          : 1;	/* Message Buffer Status Changed 29 (29 = 0-31) */
		/* const */ unsigned int MBC30          : 1;	/* Message Buffer Status Changed 30 (30 = 0-31) */
		/* const */ unsigned int MBC31          : 1;	/* Message Buffer Status Changed 31 (31 = 0-31) */
	} B;
	int I;
	unsigned int U;

} ERAY_MBSC1_type;
#define ERAY_MBSC1	(*( ERAY_MBSC1_type *) 0xf001c340u)	/* Message Buffer Status Changed 1 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int MBC32          : 1;	/* Message Buffer Status Changed 32 (32 = 32-63) */
		/* const */ unsigned int MBC33          : 1;	/* Message Buffer Status Changed 33 (33 = 32-63) */
		/* const */ unsigned int MBC34          : 1;	/* Message Buffer Status Changed 34 (34 = 32-63) */
		/* const */ unsigned int MBC35          : 1;	/* Message Buffer Status Changed 35 (35 = 32-63) */
		/* const */ unsigned int MBC36          : 1;	/* Message Buffer Status Changed 36 (36 = 32-63) */
		/* const */ unsigned int MBC37          : 1;	/* Message Buffer Status Changed 37 (37 = 32-63) */
		/* const */ unsigned int MBC38          : 1;	/* Message Buffer Status Changed 38 (38 = 32-63) */
		/* const */ unsigned int MBC39          : 1;	/* Message Buffer Status Changed 39 (39 = 32-63) */
		/* const */ unsigned int MBC40          : 1;	/* Message Buffer Status Changed 40 (40 = 32-63) */
		/* const */ unsigned int MBC41          : 1;	/* Message Buffer Status Changed 41 (41 = 32-63) */
		/* const */ unsigned int MBC42          : 1;	/* Message Buffer Status Changed 42 (42 = 32-63) */
		/* const */ unsigned int MBC43          : 1;	/* Message Buffer Status Changed 43 (43 = 32-63) */
		/* const */ unsigned int MBC44          : 1;	/* Message Buffer Status Changed 44 (44 = 32-63) */
		/* const */ unsigned int MBC45          : 1;	/* Message Buffer Status Changed 45 (45 = 32-63) */
		/* const */ unsigned int MBC46          : 1;	/* Message Buffer Status Changed 46 (46 = 32-63) */
		/* const */ unsigned int MBC47          : 1;	/* Message Buffer Status Changed 47 (47 = 32-63) */
		/* const */ unsigned int MBC48          : 1;	/* Message Buffer Status Changed 48 (48 = 32-63) */
		/* const */ unsigned int MBC49          : 1;	/* Message Buffer Status Changed 49 (49 = 32-63) */
		/* const */ unsigned int MBC50          : 1;	/* Message Buffer Status Changed 50 (50 = 32-63) */
		/* const */ unsigned int MBC51          : 1;	/* Message Buffer Status Changed 51 (51 = 32-63) */
		/* const */ unsigned int MBC52          : 1;	/* Message Buffer Status Changed 52 (52 = 32-63) */
		/* const */ unsigned int MBC53          : 1;	/* Message Buffer Status Changed 53 (53 = 32-63) */
		/* const */ unsigned int MBC54          : 1;	/* Message Buffer Status Changed 54 (54 = 32-63) */
		/* const */ unsigned int MBC55          : 1;	/* Message Buffer Status Changed 55 (55 = 32-63) */
		/* const */ unsigned int MBC56          : 1;	/* Message Buffer Status Changed 56 (56 = 32-63) */
		/* const */ unsigned int MBC57          : 1;	/* Message Buffer Status Changed 57 (57 = 32-63) */
		/* const */ unsigned int MBC58          : 1;	/* Message Buffer Status Changed 58 (58 = 32-63) */
		/* const */ unsigned int MBC59          : 1;	/* Message Buffer Status Changed 59 (59 = 32-63) */
		/* const */ unsigned int MBC60          : 1;	/* Message Buffer Status Changed 60 (60 = 32-63) */
		/* const */ unsigned int MBC61          : 1;	/* Message Buffer Status Changed 61 (61 = 32-63) */
		/* const */ unsigned int MBC62          : 1;	/* Message Buffer Status Changed 62 (62 = 32-63) */
		/* const */ unsigned int MBC63          : 1;	/* Message Buffer Status Changed 63 (63 = 32-63) */
	} B;
	int I;
	unsigned int U;

} ERAY_MBSC2_type;
#define ERAY_MBSC2	(*( ERAY_MBSC2_type *) 0xf001c344u)	/* Message Buffer Status Changed 2 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int MBC64          : 1;	/* Message Buffer Status Changed 64 (64 = 64-95) */
		/* const */ unsigned int MBC65          : 1;	/* Message Buffer Status Changed 65 (65 = 64-95) */
		/* const */ unsigned int MBC66          : 1;	/* Message Buffer Status Changed 66 (66 = 64-95) */
		/* const */ unsigned int MBC67          : 1;	/* Message Buffer Status Changed 67 (67 = 64-95) */
		/* const */ unsigned int MBC68          : 1;	/* Message Buffer Status Changed 68 (68 = 64-95) */
		/* const */ unsigned int MBC69          : 1;	/* Message Buffer Status Changed 69 (69 = 64-95) */
		/* const */ unsigned int MBC70          : 1;	/* Message Buffer Status Changed 70 (70 = 64-95) */
		/* const */ unsigned int MBC71          : 1;	/* Message Buffer Status Changed 71 (71 = 64-95) */
		/* const */ unsigned int MBC72          : 1;	/* Message Buffer Status Changed 72 (72 = 64-95) */
		/* const */ unsigned int MBC73          : 1;	/* Message Buffer Status Changed 73 (73 = 64-95) */
		/* const */ unsigned int MBC74          : 1;	/* Message Buffer Status Changed 74 (74 = 64-95) */
		/* const */ unsigned int MBC75          : 1;	/* Message Buffer Status Changed 75 (75 = 64-95) */
		/* const */ unsigned int MBC76          : 1;	/* Message Buffer Status Changed 76 (76 = 64-95) */
		/* const */ unsigned int MBC77          : 1;	/* Message Buffer Status Changed 77 (77 = 64-95) */
		/* const */ unsigned int MBC78          : 1;	/* Message Buffer Status Changed 78 (78 = 64-95) */
		/* const */ unsigned int MBC79          : 1;	/* Message Buffer Status Changed 79 (79 = 64-95) */
		/* const */ unsigned int MBC80          : 1;	/* Message Buffer Status Changed 80 (80 = 64-95) */
		/* const */ unsigned int MBC81          : 1;	/* Message Buffer Status Changed 81 (81 = 64-95) */
		/* const */ unsigned int MBC82          : 1;	/* Message Buffer Status Changed 82 (82 = 64-95) */
		/* const */ unsigned int MBC83          : 1;	/* Message Buffer Status Changed 83 (83 = 64-95) */
		/* const */ unsigned int MBC84          : 1;	/* Message Buffer Status Changed 84 (84 = 64-95) */
		/* const */ unsigned int MBC85          : 1;	/* Message Buffer Status Changed 85 (85 = 64-95) */
		/* const */ unsigned int MBC86          : 1;	/* Message Buffer Status Changed 86 (86 = 64-95) */
		/* const */ unsigned int MBC87          : 1;	/* Message Buffer Status Changed 87 (87 = 64-95) */
		/* const */ unsigned int MBC88          : 1;	/* Message Buffer Status Changed 88 (88 = 64-95) */
		/* const */ unsigned int MBC89          : 1;	/* Message Buffer Status Changed 89 (89 = 64-95) */
		/* const */ unsigned int MBC90          : 1;	/* Message Buffer Status Changed 90 (90 = 64-95) */
		/* const */ unsigned int MBC91          : 1;	/* Message Buffer Status Changed 91 (91 = 64-95) */
		/* const */ unsigned int MBC92          : 1;	/* Message Buffer Status Changed 92 (92 = 64-95) */
		/* const */ unsigned int MBC93          : 1;	/* Message Buffer Status Changed 93 (93 = 64-95) */
		/* const */ unsigned int MBC94          : 1;	/* Message Buffer Status Changed 94 (94 = 64-95) */
		/* const */ unsigned int MBC95          : 1;	/* Message Buffer Status Changed 95 (95 = 64-95) */
	} B;
	int I;
	unsigned int U;

} ERAY_MBSC3_type;
#define ERAY_MBSC3	(*( ERAY_MBSC3_type *) 0xf001c348u)	/* Message Buffer Status Changed 3 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int MBC96          : 1;	/* Message Buffer Status Changed 96 (96 = 96-127) */
		/* const */ unsigned int MBC97          : 1;	/* Message Buffer Status Changed 97 (97 = 96-127) */
		/* const */ unsigned int MBC98          : 1;	/* Message Buffer Status Changed 98 (98 = 96-127) */
		/* const */ unsigned int MBC99          : 1;	/* Message Buffer Status Changed 99 (99 = 96-127) */
		/* const */ unsigned int MBC100         : 1;	/* Message Buffer Status Changed 100 (100 = 96-127) */
		/* const */ unsigned int MBC101         : 1;	/* Message Buffer Status Changed 101 (101 = 96-127) */
		/* const */ unsigned int MBC102         : 1;	/* Message Buffer Status Changed 102 (102 = 96-127) */
		/* const */ unsigned int MBC103         : 1;	/* Message Buffer Status Changed 103 (103 = 96-127) */
		/* const */ unsigned int MBC104         : 1;	/* Message Buffer Status Changed 104 (104 = 96-127) */
		/* const */ unsigned int MBC105         : 1;	/* Message Buffer Status Changed 105 (105 = 96-127) */
		/* const */ unsigned int MBC106         : 1;	/* Message Buffer Status Changed 106 (106 = 96-127) */
		/* const */ unsigned int MBC107         : 1;	/* Message Buffer Status Changed 107 (107 = 96-127) */
		/* const */ unsigned int MBC108         : 1;	/* Message Buffer Status Changed 108 (108 = 96-127) */
		/* const */ unsigned int MBC109         : 1;	/* Message Buffer Status Changed 109 (109 = 96-127) */
		/* const */ unsigned int MBC110         : 1;	/* Message Buffer Status Changed 110 (110 = 96-127) */
		/* const */ unsigned int MBC111         : 1;	/* Message Buffer Status Changed 111 (111 = 96-127) */
		/* const */ unsigned int MBC112         : 1;	/* Message Buffer Status Changed 112 (112 = 96-127) */
		/* const */ unsigned int MBC113         : 1;	/* Message Buffer Status Changed 113 (113 = 96-127) */
		/* const */ unsigned int MBC114         : 1;	/* Message Buffer Status Changed 114 (114 = 96-127) */
		/* const */ unsigned int MBC115         : 1;	/* Message Buffer Status Changed 115 (115 = 96-127) */
		/* const */ unsigned int MBC116         : 1;	/* Message Buffer Status Changed 116 (116 = 96-127) */
		/* const */ unsigned int MBC117         : 1;	/* Message Buffer Status Changed 117 (117 = 96-127) */
		/* const */ unsigned int MBC118         : 1;	/* Message Buffer Status Changed 118 (118 = 96-127) */
		/* const */ unsigned int MBC119         : 1;	/* Message Buffer Status Changed 119 (119 = 96-127) */
		/* const */ unsigned int MBC120         : 1;	/* Message Buffer Status Changed 120 (120 = 96-127) */
		/* const */ unsigned int MBC121         : 1;	/* Message Buffer Status Changed 121 (121 = 96-127) */
		/* const */ unsigned int MBC122         : 1;	/* Message Buffer Status Changed 122 (122 = 96-127) */
		/* const */ unsigned int MBC123         : 1;	/* Message Buffer Status Changed 123 (123 = 96-127) */
		/* const */ unsigned int MBC124         : 1;	/* Message Buffer Status Changed 124 (124 = 96-127) */
		/* const */ unsigned int MBC125         : 1;	/* Message Buffer Status Changed 125 (125 = 96-127) */
		/* const */ unsigned int MBC126         : 1;	/* Message Buffer Status Changed 126 (126 = 96-127) */
		/* const */ unsigned int MBC127         : 1;	/* Message Buffer Status Changed 127 (127 = 96-127) */
	} B;
	int I;
	unsigned int U;

} ERAY_MBSC4_type;
#define ERAY_MBSC4	(*( ERAY_MBSC4_type *) 0xf001c34cu)	/* Message Buffer Status Changed 4 */

typedef volatile union
{
	struct
	{ 
		unsigned int SFDL           : 7;	/* Static Frame Data Length (gPayloadLengthStatic) */
		unsigned int                : 9;
		unsigned int SLT            : 13;	/* Start of Latest Transmit (pLatestTx) */
		unsigned int                : 3;
	} B;
	int I;
	unsigned int U;

} ERAY_MHDC_type;
#define ERAY_MHDC	(*( ERAY_MHDC_type *) 0xf001c098u)	/* MHD Configuration Register */

typedef volatile union
{
	struct
	{ 
		unsigned int SNUA           : 1;	/* Status Not Updated Channel A */
		unsigned int SNUB           : 1;	/* Status Not Updated Channel B */
		unsigned int FNFA           : 1;	/* Find Sequence Not Finished Channel A */
		unsigned int FNFB           : 1;	/* Find Sequence Not Finished Channel B */
		unsigned int TBFA           : 1;	/* Transient Buffer Access Failure A */
		unsigned int TBFB           : 1;	/* Transient Buffer Access Failure B */
		unsigned int TNSA           : 1;	/* Transmission Not Started Channel A */
		unsigned int TNSB           : 1;	/* Transmission Not Started Channel B */
		unsigned int WAHP           : 1;	/* Write Attempt to Header Partition */
		unsigned int                : 23;
	} B;
	int I;
	unsigned int U;

} ERAY_MHDF_type;
#define ERAY_MHDF	(*( ERAY_MHDF_type *) 0xf001c31cu)	/* Message Handler Constraints Flags */

typedef volatile union
{
	struct
	{ 
		unsigned int EIBF           : 1;	/* ECC Error Input Buffer RAM 1,2 */
		unsigned int EOBF           : 1;	/* ECC Error Output Buffer RAM 1,2 */
		unsigned int EMR            : 1;	/* ECC Error Message RAM */
		unsigned int ETBF1          : 1;	/* ECC Error Transient Buffer RAM A */
		unsigned int ETBF2          : 1;	/* ECC Error Transient Buffer RAM B */
		unsigned int FMBD           : 1;	/* Faulty Message Buffer Detected */
		unsigned int MFMB           : 1;	/* Multiple Faulty Message Buffers detected */
		/* const */ unsigned int CRAM           : 1;	/* Clear all internal RAM?s */
		/* const */ unsigned int FMB            : 7;	/* Faulty Message Buffer */
		unsigned int                : 1;
		/* const */ unsigned int MBT            : 7;	/* Message Buffer Transmitted */
		unsigned int                : 1;
		/* const */ unsigned int MBU            : 7;	/* Message Buffer Updated */
		unsigned int                : 1;
	} B;
	int I;
	unsigned int U;

} ERAY_MHDS_type;
#define ERAY_MHDS	(*( ERAY_MHDS_type *) 0xf001c310u)	/* Message Handler Status */

typedef volatile union
{
	struct
	{ 
		unsigned int FDB            : 8;	/* First Dynamic Buffer */
		unsigned int FFB            : 8;	/* First Buffer of FIFO */
		unsigned int LCB            : 8;	/* Last Configured Buffer */
		unsigned int SEC            : 2;	/* Secure Buffers */
		unsigned int SPLM           : 1;	/* SYNC Frame Payload Multiplex */
		unsigned int                : 5;
	} B;
	int I;
	unsigned int U;

} ERAY_MRC_type;
#define ERAY_MRC	(*( ERAY_MRC_type *) 0xf001c300u)	/* Message RAM Configuration */

typedef volatile union
{
	struct
	{ 
		unsigned int MSIP0          : 1;	/* Message Buffer Status Changed Interrupt Pointer 0 (0 = 0-31) */
		unsigned int MSIP1          : 1;	/* Message Buffer Status Changed Interrupt Pointer 1 (1 = 0-31) */
		unsigned int MSIP2          : 1;	/* Message Buffer Status Changed Interrupt Pointer 2 (2 = 0-31) */
		unsigned int MSIP3          : 1;	/* Message Buffer Status Changed Interrupt Pointer 3 (3 = 0-31) */
		unsigned int MSIP4          : 1;	/* Message Buffer Status Changed Interrupt Pointer 4 (4 = 0-31) */
		unsigned int MSIP5          : 1;	/* Message Buffer Status Changed Interrupt Pointer 5 (5 = 0-31) */
		unsigned int MSIP6          : 1;	/* Message Buffer Status Changed Interrupt Pointer 6 (6 = 0-31) */
		unsigned int MSIP7          : 1;	/* Message Buffer Status Changed Interrupt Pointer 7 (7 = 0-31) */
		unsigned int MSIP8          : 1;	/* Message Buffer Status Changed Interrupt Pointer 8 (8 = 0-31) */
		unsigned int MSIP9          : 1;	/* Message Buffer Status Changed Interrupt Pointer 9 (9 = 0-31) */
		unsigned int MSIP10         : 1;	/* Message Buffer Status Changed Interrupt Pointer 10 (10 = 0-31) */
		unsigned int MSIP11         : 1;	/* Message Buffer Status Changed Interrupt Pointer 11 (11 = 0-31) */
		unsigned int MSIP12         : 1;	/* Message Buffer Status Changed Interrupt Pointer 12 (12 = 0-31) */
		unsigned int MSIP13         : 1;	/* Message Buffer Status Changed Interrupt Pointer 13 (13 = 0-31) */
		unsigned int MSIP14         : 1;	/* Message Buffer Status Changed Interrupt Pointer 14 (14 = 0-31) */
		unsigned int MSIP15         : 1;	/* Message Buffer Status Changed Interrupt Pointer 15 (15 = 0-31) */
		unsigned int MSIP16         : 1;	/* Message Buffer Status Changed Interrupt Pointer 16 (16 = 0-31) */
		unsigned int MSIP17         : 1;	/* Message Buffer Status Changed Interrupt Pointer 17 (17 = 0-31) */
		unsigned int MSIP18         : 1;	/* Message Buffer Status Changed Interrupt Pointer 18 (18 = 0-31) */
		unsigned int MSIP19         : 1;	/* Message Buffer Status Changed Interrupt Pointer 19 (19 = 0-31) */
		unsigned int MSIP20         : 1;	/* Message Buffer Status Changed Interrupt Pointer 20 (20 = 0-31) */
		unsigned int MSIP21         : 1;	/* Message Buffer Status Changed Interrupt Pointer 21 (21 = 0-31) */
		unsigned int MSIP22         : 1;	/* Message Buffer Status Changed Interrupt Pointer 22 (22 = 0-31) */
		unsigned int MSIP23         : 1;	/* Message Buffer Status Changed Interrupt Pointer 23 (23 = 0-31) */
		unsigned int MSIP24         : 1;	/* Message Buffer Status Changed Interrupt Pointer 24 (24 = 0-31) */
		unsigned int MSIP25         : 1;	/* Message Buffer Status Changed Interrupt Pointer 25 (25 = 0-31) */
		unsigned int MSIP26         : 1;	/* Message Buffer Status Changed Interrupt Pointer 26 (26 = 0-31) */
		unsigned int MSIP27         : 1;	/* Message Buffer Status Changed Interrupt Pointer 27 (27 = 0-31) */
		unsigned int MSIP28         : 1;	/* Message Buffer Status Changed Interrupt Pointer 28 (28 = 0-31) */
		unsigned int MSIP29         : 1;	/* Message Buffer Status Changed Interrupt Pointer 29 (29 = 0-31) */
		unsigned int MSIP30         : 1;	/* Message Buffer Status Changed Interrupt Pointer 30 (30 = 0-31) */
		unsigned int MSIP31         : 1;	/* Message Buffer Status Changed Interrupt Pointer 31 (31 = 0-31) */
	} B;
	int I;
	unsigned int U;

} ERAY_MSIC1_type;
#define ERAY_MSIC1	(*( ERAY_MSIC1_type *) 0xf001c3b8u)	/* Message Buffer Status Changed Interrupt Control 1 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int MSIP32         : 1;	/* Message Buffer Status Changed Interrupt Pointer 32 (32 = 32-63) */
		/* const */ unsigned int MSIP33         : 1;	/* Message Buffer Status Changed Interrupt Pointer 33 (33 = 32-63) */
		/* const */ unsigned int MSIP34         : 1;	/* Message Buffer Status Changed Interrupt Pointer 34 (34 = 32-63) */
		/* const */ unsigned int MSIP35         : 1;	/* Message Buffer Status Changed Interrupt Pointer 35 (35 = 32-63) */
		/* const */ unsigned int MSIP36         : 1;	/* Message Buffer Status Changed Interrupt Pointer 36 (36 = 32-63) */
		/* const */ unsigned int MSIP37         : 1;	/* Message Buffer Status Changed Interrupt Pointer 37 (37 = 32-63) */
		/* const */ unsigned int MSIP38         : 1;	/* Message Buffer Status Changed Interrupt Pointer 38 (38 = 32-63) */
		/* const */ unsigned int MSIP39         : 1;	/* Message Buffer Status Changed Interrupt Pointer 39 (39 = 32-63) */
		/* const */ unsigned int MSIP40         : 1;	/* Message Buffer Status Changed Interrupt Pointer 40 (40 = 32-63) */
		/* const */ unsigned int MSIP41         : 1;	/* Message Buffer Status Changed Interrupt Pointer 41 (41 = 32-63) */
		/* const */ unsigned int MSIP42         : 1;	/* Message Buffer Status Changed Interrupt Pointer 42 (42 = 32-63) */
		/* const */ unsigned int MSIP43         : 1;	/* Message Buffer Status Changed Interrupt Pointer 43 (43 = 32-63) */
		/* const */ unsigned int MSIP44         : 1;	/* Message Buffer Status Changed Interrupt Pointer 44 (44 = 32-63) */
		/* const */ unsigned int MSIP45         : 1;	/* Message Buffer Status Changed Interrupt Pointer 45 (45 = 32-63) */
		/* const */ unsigned int MSIP46         : 1;	/* Message Buffer Status Changed Interrupt Pointer 46 (46 = 32-63) */
		/* const */ unsigned int MSIP47         : 1;	/* Message Buffer Status Changed Interrupt Pointer 47 (47 = 32-63) */
		/* const */ unsigned int MSIP48         : 1;	/* Message Buffer Status Changed Interrupt Pointer 48 (48 = 32-63) */
		/* const */ unsigned int MSIP49         : 1;	/* Message Buffer Status Changed Interrupt Pointer 49 (49 = 32-63) */
		/* const */ unsigned int MSIP50         : 1;	/* Message Buffer Status Changed Interrupt Pointer 50 (50 = 32-63) */
		/* const */ unsigned int MSIP51         : 1;	/* Message Buffer Status Changed Interrupt Pointer 51 (51 = 32-63) */
		/* const */ unsigned int MSIP52         : 1;	/* Message Buffer Status Changed Interrupt Pointer 52 (52 = 32-63) */
		/* const */ unsigned int MSIP53         : 1;	/* Message Buffer Status Changed Interrupt Pointer 53 (53 = 32-63) */
		/* const */ unsigned int MSIP54         : 1;	/* Message Buffer Status Changed Interrupt Pointer 54 (54 = 32-63) */
		/* const */ unsigned int MSIP55         : 1;	/* Message Buffer Status Changed Interrupt Pointer 55 (55 = 32-63) */
		/* const */ unsigned int MSIP56         : 1;	/* Message Buffer Status Changed Interrupt Pointer 56 (56 = 32-63) */
		/* const */ unsigned int MSIP57         : 1;	/* Message Buffer Status Changed Interrupt Pointer 57 (57 = 32-63) */
		/* const */ unsigned int MSIP58         : 1;	/* Message Buffer Status Changed Interrupt Pointer 58 (58 = 32-63) */
		/* const */ unsigned int MSIP59         : 1;	/* Message Buffer Status Changed Interrupt Pointer 59 (59 = 32-63) */
		/* const */ unsigned int MSIP60         : 1;	/* Message Buffer Status Changed Interrupt Pointer 60 (60 = 32-63) */
		/* const */ unsigned int MSIP61         : 1;	/* Message Buffer Status Changed Interrupt Pointer 61 (61 = 32-63) */
		/* const */ unsigned int MSIP62         : 1;	/* Message Buffer Status Changed Interrupt Pointer 62 (62 = 32-63) */
		/* const */ unsigned int MSIP63         : 1;	/* Message Buffer Status Changed Interrupt Pointer 63 (63 = 32-63) */
	} B;
	int I;
	unsigned int U;

} ERAY_MSIC2_type;
#define ERAY_MSIC2	(*( ERAY_MSIC2_type *) 0xf001c3bcu)	/* Message Buffer Status Changed Interrupt Control 2 */

typedef volatile union
{
	struct
	{ 
		unsigned int MSIP64         : 1;	/* Message Buffer Status Changed Interrupt Pointer 64 (64 = 64-95) */
		unsigned int MSIP65         : 1;	/* Message Buffer Status Changed Interrupt Pointer 65 (65 = 64-95) */
		unsigned int MSIP66         : 1;	/* Message Buffer Status Changed Interrupt Pointer 66 (66 = 64-95) */
		unsigned int MSIP67         : 1;	/* Message Buffer Status Changed Interrupt Pointer 67 (67 = 64-95) */
		unsigned int MSIP68         : 1;	/* Message Buffer Status Changed Interrupt Pointer 68 (68 = 64-95) */
		unsigned int MSIP69         : 1;	/* Message Buffer Status Changed Interrupt Pointer 69 (69 = 64-95) */
		unsigned int MSIP70         : 1;	/* Message Buffer Status Changed Interrupt Pointer 70 (70 = 64-95) */
		unsigned int MSIP71         : 1;	/* Message Buffer Status Changed Interrupt Pointer 71 (71 = 64-95) */
		unsigned int MSIP72         : 1;	/* Message Buffer Status Changed Interrupt Pointer 72 (72 = 64-95) */
		unsigned int MSIP73         : 1;	/* Message Buffer Status Changed Interrupt Pointer 73 (73 = 64-95) */
		unsigned int MSIP74         : 1;	/* Message Buffer Status Changed Interrupt Pointer 74 (74 = 64-95) */
		unsigned int MSIP75         : 1;	/* Message Buffer Status Changed Interrupt Pointer 75 (75 = 64-95) */
		unsigned int MSIP76         : 1;	/* Message Buffer Status Changed Interrupt Pointer 76 (76 = 64-95) */
		unsigned int MSIP77         : 1;	/* Message Buffer Status Changed Interrupt Pointer 77 (77 = 64-95) */
		unsigned int MSIP78         : 1;	/* Message Buffer Status Changed Interrupt Pointer 78 (78 = 64-95) */
		unsigned int MSIP79         : 1;	/* Message Buffer Status Changed Interrupt Pointer 79 (79 = 64-95) */
		unsigned int MSIP80         : 1;	/* Message Buffer Status Changed Interrupt Pointer 80 (80 = 64-95) */
		unsigned int MSIP81         : 1;	/* Message Buffer Status Changed Interrupt Pointer 81 (81 = 64-95) */
		unsigned int MSIP82         : 1;	/* Message Buffer Status Changed Interrupt Pointer 82 (82 = 64-95) */
		unsigned int MSIP83         : 1;	/* Message Buffer Status Changed Interrupt Pointer 83 (83 = 64-95) */
		unsigned int MSIP84         : 1;	/* Message Buffer Status Changed Interrupt Pointer 84 (84 = 64-95) */
		unsigned int MSIP85         : 1;	/* Message Buffer Status Changed Interrupt Pointer 85 (85 = 64-95) */
		unsigned int MSIP86         : 1;	/* Message Buffer Status Changed Interrupt Pointer 86 (86 = 64-95) */
		unsigned int MSIP87         : 1;	/* Message Buffer Status Changed Interrupt Pointer 87 (87 = 64-95) */
		unsigned int MSIP88         : 1;	/* Message Buffer Status Changed Interrupt Pointer 88 (88 = 64-95) */
		unsigned int MSIP89         : 1;	/* Message Buffer Status Changed Interrupt Pointer 89 (89 = 64-95) */
		unsigned int MSIP90         : 1;	/* Message Buffer Status Changed Interrupt Pointer 90 (90 = 64-95) */
		unsigned int MSIP91         : 1;	/* Message Buffer Status Changed Interrupt Pointer 91 (91 = 64-95) */
		unsigned int MSIP92         : 1;	/* Message Buffer Status Changed Interrupt Pointer 92 (92 = 64-95) */
		unsigned int MSIP93         : 1;	/* Message Buffer Status Changed Interrupt Pointer 93 (93 = 64-95) */
		unsigned int MSIP94         : 1;	/* Message Buffer Status Changed Interrupt Pointer 94 (94 = 64-95) */
		unsigned int MSIP95         : 1;	/* Message Buffer Status Changed Interrupt Pointer 95 (95 = 64-95) */
	} B;
	int I;
	unsigned int U;

} ERAY_MSIC3_type;
#define ERAY_MSIC3	(*( ERAY_MSIC3_type *) 0xf001c3c0u)	/* Message Buffer Status Changed Interrupt Control 3 */

typedef volatile union
{
	struct
	{ 
		unsigned int MSIP96         : 1;	/* Message Buffer Status Changed Interrupt Pointer 96 (96 = 96-127) */
		unsigned int MSIP97         : 1;	/* Message Buffer Status Changed Interrupt Pointer 97 (97 = 96-127) */
		unsigned int MSIP98         : 1;	/* Message Buffer Status Changed Interrupt Pointer 98 (98 = 96-127) */
		unsigned int MSIP99         : 1;	/* Message Buffer Status Changed Interrupt Pointer 99 (99 = 96-127) */
		unsigned int MSIP100        : 1;	/* Message Buffer Status Changed Interrupt Pointer 100 (100 = 96-127) */
		unsigned int MSIP101        : 1;	/* Message Buffer Status Changed Interrupt Pointer 101 (101 = 96-127) */
		unsigned int MSIP102        : 1;	/* Message Buffer Status Changed Interrupt Pointer 102 (102 = 96-127) */
		unsigned int MSIP103        : 1;	/* Message Buffer Status Changed Interrupt Pointer 103 (103 = 96-127) */
		unsigned int MSIP104        : 1;	/* Message Buffer Status Changed Interrupt Pointer 104 (104 = 96-127) */
		unsigned int MSIP105        : 1;	/* Message Buffer Status Changed Interrupt Pointer 105 (105 = 96-127) */
		unsigned int MSIP106        : 1;	/* Message Buffer Status Changed Interrupt Pointer 106 (106 = 96-127) */
		unsigned int MSIP107        : 1;	/* Message Buffer Status Changed Interrupt Pointer 107 (107 = 96-127) */
		unsigned int MSIP108        : 1;	/* Message Buffer Status Changed Interrupt Pointer 108 (108 = 96-127) */
		unsigned int MSIP109        : 1;	/* Message Buffer Status Changed Interrupt Pointer 109 (109 = 96-127) */
		unsigned int MSIP110        : 1;	/* Message Buffer Status Changed Interrupt Pointer 110 (110 = 96-127) */
		unsigned int MSIP111        : 1;	/* Message Buffer Status Changed Interrupt Pointer 111 (111 = 96-127) */
		unsigned int MSIP112        : 1;	/* Message Buffer Status Changed Interrupt Pointer 112 (112 = 96-127) */
		unsigned int MSIP113        : 1;	/* Message Buffer Status Changed Interrupt Pointer 113 (113 = 96-127) */
		unsigned int MSIP114        : 1;	/* Message Buffer Status Changed Interrupt Pointer 114 (114 = 96-127) */
		unsigned int MSIP115        : 1;	/* Message Buffer Status Changed Interrupt Pointer 115 (115 = 96-127) */
		unsigned int MSIP116        : 1;	/* Message Buffer Status Changed Interrupt Pointer 116 (116 = 96-127) */
		unsigned int MSIP117        : 1;	/* Message Buffer Status Changed Interrupt Pointer 117 (117 = 96-127) */
		unsigned int MSIP118        : 1;	/* Message Buffer Status Changed Interrupt Pointer 118 (118 = 96-127) */
		unsigned int MSIP119        : 1;	/* Message Buffer Status Changed Interrupt Pointer 119 (119 = 96-127) */
		unsigned int MSIP120        : 1;	/* Message Buffer Status Changed Interrupt Pointer 120 (120 = 96-127) */
		unsigned int MSIP121        : 1;	/* Message Buffer Status Changed Interrupt Pointer 121 (121 = 96-127) */
		unsigned int MSIP122        : 1;	/* Message Buffer Status Changed Interrupt Pointer 122 (122 = 96-127) */
		unsigned int MSIP123        : 1;	/* Message Buffer Status Changed Interrupt Pointer 123 (123 = 96-127) */
		unsigned int MSIP124        : 1;	/* Message Buffer Status Changed Interrupt Pointer 124 (124 = 96-127) */
		unsigned int MSIP125        : 1;	/* Message Buffer Status Changed Interrupt Pointer 125 (125 = 96-127) */
		unsigned int MSIP126        : 1;	/* Message Buffer Status Changed Interrupt Pointer 126 (126 = 96-127) */
		unsigned int MSIP127        : 1;	/* Message Buffer Status Changed Interrupt Pointer 127 (127 = 96-127) */
	} B;
	int I;
	unsigned int U;

} ERAY_MSIC4_type;
#define ERAY_MSIC4	(*( ERAY_MSIC4_type *) 0xf001c3c4u)	/* Message Buffer Status Changed Interrupt Control 4 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int MTV            : 14;	/* Macrotick Value (vMacrotick) */
		/* const */ unsigned int                : 2;
		/* const */ unsigned int CCV            : 6;	/* Cycle Counter Value (vCycleCounter) */
		/* const */ unsigned int                : 10;
	} B;
	int I;
	unsigned int U;

} ERAY_MTCCV_type;
#define ERAY_MTCCV	(*( ERAY_MTCCV_type *) 0xf001c114u)	/* Macrotick and Cycle Counter Value */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int ND0            : 1;	/* New Data 0 (0 = 0-31) */
		/* const */ unsigned int ND1            : 1;	/* New Data 1 (1 = 0-31) */
		/* const */ unsigned int ND2            : 1;	/* New Data 2 (2 = 0-31) */
		/* const */ unsigned int ND3            : 1;	/* New Data 3 (3 = 0-31) */
		/* const */ unsigned int ND4            : 1;	/* New Data 4 (4 = 0-31) */
		/* const */ unsigned int ND5            : 1;	/* New Data 5 (5 = 0-31) */
		/* const */ unsigned int ND6            : 1;	/* New Data 6 (6 = 0-31) */
		/* const */ unsigned int ND7            : 1;	/* New Data 7 (7 = 0-31) */
		/* const */ unsigned int ND8            : 1;	/* New Data 8 (8 = 0-31) */
		/* const */ unsigned int ND9            : 1;	/* New Data 9 (9 = 0-31) */
		/* const */ unsigned int ND10           : 1;	/* New Data 10 (10 = 0-31) */
		/* const */ unsigned int ND11           : 1;	/* New Data 11 (11 = 0-31) */
		/* const */ unsigned int ND12           : 1;	/* New Data 12 (12 = 0-31) */
		/* const */ unsigned int ND13           : 1;	/* New Data 13 (13 = 0-31) */
		/* const */ unsigned int ND14           : 1;	/* New Data 14 (14 = 0-31) */
		/* const */ unsigned int ND15           : 1;	/* New Data 15 (15 = 0-31) */
		/* const */ unsigned int ND16           : 1;	/* New Data 16 (16 = 0-31) */
		/* const */ unsigned int ND17           : 1;	/* New Data 17 (17 = 0-31) */
		/* const */ unsigned int ND18           : 1;	/* New Data 18 (18 = 0-31) */
		/* const */ unsigned int ND19           : 1;	/* New Data 19 (19 = 0-31) */
		/* const */ unsigned int ND20           : 1;	/* New Data 20 (20 = 0-31) */
		/* const */ unsigned int ND21           : 1;	/* New Data 21 (21 = 0-31) */
		/* const */ unsigned int ND22           : 1;	/* New Data 22 (22 = 0-31) */
		/* const */ unsigned int ND23           : 1;	/* New Data 23 (23 = 0-31) */
		/* const */ unsigned int ND24           : 1;	/* New Data 24 (24 = 0-31) */
		/* const */ unsigned int ND25           : 1;	/* New Data 25 (25 = 0-31) */
		/* const */ unsigned int ND26           : 1;	/* New Data 26 (26 = 0-31) */
		/* const */ unsigned int ND27           : 1;	/* New Data 27 (27 = 0-31) */
		/* const */ unsigned int ND28           : 1;	/* New Data 28 (28 = 0-31) */
		/* const */ unsigned int ND29           : 1;	/* New Data 29 (29 = 0-31) */
		/* const */ unsigned int ND30           : 1;	/* New Data 30 (30 = 0-31) */
		/* const */ unsigned int ND31           : 1;	/* New Data 31 (31 = 0-31) */
	} B;
	int I;
	unsigned int U;

} ERAY_NDAT1_type;
#define ERAY_NDAT1	(*( ERAY_NDAT1_type *) 0xf001c330u)	/* New Data Register 1 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int ND32           : 1;	/* New Data 32 (32 = 32-63) */
		/* const */ unsigned int ND33           : 1;	/* New Data 33 (33 = 32-63) */
		/* const */ unsigned int ND34           : 1;	/* New Data 34 (34 = 32-63) */
		/* const */ unsigned int ND35           : 1;	/* New Data 35 (35 = 32-63) */
		/* const */ unsigned int ND36           : 1;	/* New Data 36 (36 = 32-63) */
		/* const */ unsigned int ND37           : 1;	/* New Data 37 (37 = 32-63) */
		/* const */ unsigned int ND38           : 1;	/* New Data 38 (38 = 32-63) */
		/* const */ unsigned int ND39           : 1;	/* New Data 39 (39 = 32-63) */
		/* const */ unsigned int ND40           : 1;	/* New Data 40 (40 = 32-63) */
		/* const */ unsigned int ND41           : 1;	/* New Data 41 (41 = 32-63) */
		/* const */ unsigned int ND42           : 1;	/* New Data 42 (42 = 32-63) */
		/* const */ unsigned int ND43           : 1;	/* New Data 43 (43 = 32-63) */
		/* const */ unsigned int ND44           : 1;	/* New Data 44 (44 = 32-63) */
		/* const */ unsigned int ND45           : 1;	/* New Data 45 (45 = 32-63) */
		/* const */ unsigned int ND46           : 1;	/* New Data 46 (46 = 32-63) */
		/* const */ unsigned int ND47           : 1;	/* New Data 47 (47 = 32-63) */
		/* const */ unsigned int ND48           : 1;	/* New Data 48 (48 = 32-63) */
		/* const */ unsigned int ND49           : 1;	/* New Data 49 (49 = 32-63) */
		/* const */ unsigned int ND50           : 1;	/* New Data 50 (50 = 32-63) */
		/* const */ unsigned int ND51           : 1;	/* New Data 51 (51 = 32-63) */
		/* const */ unsigned int ND52           : 1;	/* New Data 52 (52 = 32-63) */
		/* const */ unsigned int ND53           : 1;	/* New Data 53 (53 = 32-63) */
		/* const */ unsigned int ND54           : 1;	/* New Data 54 (54 = 32-63) */
		/* const */ unsigned int ND55           : 1;	/* New Data 55 (55 = 32-63) */
		/* const */ unsigned int ND56           : 1;	/* New Data 56 (56 = 32-63) */
		/* const */ unsigned int ND57           : 1;	/* New Data 57 (57 = 32-63) */
		/* const */ unsigned int ND58           : 1;	/* New Data 58 (58 = 32-63) */
		/* const */ unsigned int ND59           : 1;	/* New Data 59 (59 = 32-63) */
		/* const */ unsigned int ND60           : 1;	/* New Data 60 (60 = 32-63) */
		/* const */ unsigned int ND61           : 1;	/* New Data 61 (61 = 32-63) */
		/* const */ unsigned int ND62           : 1;	/* New Data 62 (62 = 32-63) */
		/* const */ unsigned int ND63           : 1;	/* New Data 63 (63 = 32-63) */
	} B;
	int I;
	unsigned int U;

} ERAY_NDAT2_type;
#define ERAY_NDAT2	(*( ERAY_NDAT2_type *) 0xf001c334u)	/* New Data Register 2 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int ND64           : 1;	/* New Data 64 (64 = 64-95) */
		/* const */ unsigned int ND65           : 1;	/* New Data 65 (65 = 64-95) */
		/* const */ unsigned int ND66           : 1;	/* New Data 66 (66 = 64-95) */
		/* const */ unsigned int ND67           : 1;	/* New Data 67 (67 = 64-95) */
		/* const */ unsigned int ND68           : 1;	/* New Data 68 (68 = 64-95) */
		/* const */ unsigned int ND69           : 1;	/* New Data 69 (69 = 64-95) */
		/* const */ unsigned int ND70           : 1;	/* New Data 70 (70 = 64-95) */
		/* const */ unsigned int ND71           : 1;	/* New Data 71 (71 = 64-95) */
		/* const */ unsigned int ND72           : 1;	/* New Data 72 (72 = 64-95) */
		/* const */ unsigned int ND73           : 1;	/* New Data 73 (73 = 64-95) */
		/* const */ unsigned int ND74           : 1;	/* New Data 74 (74 = 64-95) */
		/* const */ unsigned int ND75           : 1;	/* New Data 75 (75 = 64-95) */
		/* const */ unsigned int ND76           : 1;	/* New Data 76 (76 = 64-95) */
		/* const */ unsigned int ND77           : 1;	/* New Data 77 (77 = 64-95) */
		/* const */ unsigned int ND78           : 1;	/* New Data 78 (78 = 64-95) */
		/* const */ unsigned int ND79           : 1;	/* New Data 79 (79 = 64-95) */
		/* const */ unsigned int ND80           : 1;	/* New Data 80 (80 = 64-95) */
		/* const */ unsigned int ND81           : 1;	/* New Data 81 (81 = 64-95) */
		/* const */ unsigned int ND82           : 1;	/* New Data 82 (82 = 64-95) */
		/* const */ unsigned int ND83           : 1;	/* New Data 83 (83 = 64-95) */
		/* const */ unsigned int ND84           : 1;	/* New Data 84 (84 = 64-95) */
		/* const */ unsigned int ND85           : 1;	/* New Data 85 (85 = 64-95) */
		/* const */ unsigned int ND86           : 1;	/* New Data 86 (86 = 64-95) */
		/* const */ unsigned int ND87           : 1;	/* New Data 87 (87 = 64-95) */
		/* const */ unsigned int ND88           : 1;	/* New Data 88 (88 = 64-95) */
		/* const */ unsigned int ND89           : 1;	/* New Data 89 (89 = 64-95) */
		/* const */ unsigned int ND90           : 1;	/* New Data 90 (90 = 64-95) */
		/* const */ unsigned int ND91           : 1;	/* New Data 91 (91 = 64-95) */
		/* const */ unsigned int ND92           : 1;	/* New Data 92 (92 = 64-95) */
		/* const */ unsigned int ND93           : 1;	/* New Data 93 (93 = 64-95) */
		/* const */ unsigned int ND94           : 1;	/* New Data 94 (94 = 64-95) */
		/* const */ unsigned int ND95           : 1;	/* New Data 95 (95 = 64-95) */
	} B;
	int I;
	unsigned int U;

} ERAY_NDAT3_type;
#define ERAY_NDAT3	(*( ERAY_NDAT3_type *) 0xf001c338u)	/* New Data Register 3 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int ND96           : 1;	/* New Data 96 (96 = 96-127) */
		/* const */ unsigned int ND97           : 1;	/* New Data 97 (97 = 96-127) */
		/* const */ unsigned int ND98           : 1;	/* New Data 98 (98 = 96-127) */
		/* const */ unsigned int ND99           : 1;	/* New Data 99 (99 = 96-127) */
		/* const */ unsigned int ND100          : 1;	/* New Data 100 (100 = 96-127) */
		/* const */ unsigned int ND101          : 1;	/* New Data 101 (101 = 96-127) */
		/* const */ unsigned int ND102          : 1;	/* New Data 102 (102 = 96-127) */
		/* const */ unsigned int ND103          : 1;	/* New Data 103 (103 = 96-127) */
		/* const */ unsigned int ND104          : 1;	/* New Data 104 (104 = 96-127) */
		/* const */ unsigned int ND105          : 1;	/* New Data 105 (105 = 96-127) */
		/* const */ unsigned int ND106          : 1;	/* New Data 106 (106 = 96-127) */
		/* const */ unsigned int ND107          : 1;	/* New Data 107 (107 = 96-127) */
		/* const */ unsigned int ND108          : 1;	/* New Data 108 (108 = 96-127) */
		/* const */ unsigned int ND109          : 1;	/* New Data 109 (109 = 96-127) */
		/* const */ unsigned int ND110          : 1;	/* New Data 110 (110 = 96-127) */
		/* const */ unsigned int ND111          : 1;	/* New Data 111 (111 = 96-127) */
		/* const */ unsigned int ND112          : 1;	/* New Data 112 (112 = 96-127) */
		/* const */ unsigned int ND113          : 1;	/* New Data 113 (113 = 96-127) */
		/* const */ unsigned int ND114          : 1;	/* New Data 114 (114 = 96-127) */
		/* const */ unsigned int ND115          : 1;	/* New Data 115 (115 = 96-127) */
		/* const */ unsigned int ND116          : 1;	/* New Data 116 (116 = 96-127) */
		/* const */ unsigned int ND117          : 1;	/* New Data 117 (117 = 96-127) */
		/* const */ unsigned int ND118          : 1;	/* New Data 118 (118 = 96-127) */
		/* const */ unsigned int ND119          : 1;	/* New Data 119 (119 = 96-127) */
		/* const */ unsigned int ND120          : 1;	/* New Data 120 (120 = 96-127) */
		/* const */ unsigned int ND121          : 1;	/* New Data 121 (121 = 96-127) */
		/* const */ unsigned int ND122          : 1;	/* New Data 122 (122 = 96-127) */
		/* const */ unsigned int ND123          : 1;	/* New Data 123 (123 = 96-127) */
		/* const */ unsigned int ND124          : 1;	/* New Data 124 (124 = 96-127) */
		/* const */ unsigned int ND125          : 1;	/* New Data 125 (125 = 96-127) */
		/* const */ unsigned int ND126          : 1;	/* New Data 126 (126 = 96-127) */
		/* const */ unsigned int ND127          : 1;	/* New Data 127 (127 = 96-127) */
	} B;
	int I;
	unsigned int U;

} ERAY_NDAT4_type;
#define ERAY_NDAT4	(*( ERAY_NDAT4_type *) 0xf001c33cu)	/* New Data Register 4 */

typedef volatile union
{
	struct
	{ 
		unsigned int NDIP0          : 1;	/* New Data Interrupt Pointer 0 (0 = 0-31) */
		unsigned int NDIP1          : 1;	/* New Data Interrupt Pointer 1 (1 = 0-31) */
		unsigned int NDIP2          : 1;	/* New Data Interrupt Pointer 2 (2 = 0-31) */
		unsigned int NDIP3          : 1;	/* New Data Interrupt Pointer 3 (3 = 0-31) */
		unsigned int NDIP4          : 1;	/* New Data Interrupt Pointer 4 (4 = 0-31) */
		unsigned int NDIP5          : 1;	/* New Data Interrupt Pointer 5 (5 = 0-31) */
		unsigned int NDIP6          : 1;	/* New Data Interrupt Pointer 6 (6 = 0-31) */
		unsigned int NDIP7          : 1;	/* New Data Interrupt Pointer 7 (7 = 0-31) */
		unsigned int NDIP8          : 1;	/* New Data Interrupt Pointer 8 (8 = 0-31) */
		unsigned int NDIP9          : 1;	/* New Data Interrupt Pointer 9 (9 = 0-31) */
		unsigned int NDIP10         : 1;	/* New Data Interrupt Pointer 10 (10 = 0-31) */
		unsigned int NDIP11         : 1;	/* New Data Interrupt Pointer 11 (11 = 0-31) */
		unsigned int NDIP12         : 1;	/* New Data Interrupt Pointer 12 (12 = 0-31) */
		unsigned int NDIP13         : 1;	/* New Data Interrupt Pointer 13 (13 = 0-31) */
		unsigned int NDIP14         : 1;	/* New Data Interrupt Pointer 14 (14 = 0-31) */
		unsigned int NDIP15         : 1;	/* New Data Interrupt Pointer 15 (15 = 0-31) */
		unsigned int NDIP16         : 1;	/* New Data Interrupt Pointer 16 (16 = 0-31) */
		unsigned int NDIP17         : 1;	/* New Data Interrupt Pointer 17 (17 = 0-31) */
		unsigned int NDIP18         : 1;	/* New Data Interrupt Pointer 18 (18 = 0-31) */
		unsigned int NDIP19         : 1;	/* New Data Interrupt Pointer 19 (19 = 0-31) */
		unsigned int NDIP20         : 1;	/* New Data Interrupt Pointer 20 (20 = 0-31) */
		unsigned int NDIP21         : 1;	/* New Data Interrupt Pointer 21 (21 = 0-31) */
		unsigned int NDIP22         : 1;	/* New Data Interrupt Pointer 22 (22 = 0-31) */
		unsigned int NDIP23         : 1;	/* New Data Interrupt Pointer 23 (23 = 0-31) */
		unsigned int NDIP24         : 1;	/* New Data Interrupt Pointer 24 (24 = 0-31) */
		unsigned int NDIP25         : 1;	/* New Data Interrupt Pointer 25 (25 = 0-31) */
		unsigned int NDIP26         : 1;	/* New Data Interrupt Pointer 26 (26 = 0-31) */
		unsigned int NDIP27         : 1;	/* New Data Interrupt Pointer 27 (27 = 0-31) */
		unsigned int NDIP28         : 1;	/* New Data Interrupt Pointer 28 (28 = 0-31) */
		unsigned int NDIP29         : 1;	/* New Data Interrupt Pointer 29 (29 = 0-31) */
		unsigned int NDIP30         : 1;	/* New Data Interrupt Pointer 30 (30 = 0-31) */
		unsigned int NDIP31         : 1;	/* New Data Interrupt Pointer 31 (31 = 0-31) */
	} B;
	int I;
	unsigned int U;

} ERAY_NDIC1_type;
#define ERAY_NDIC1	(*( ERAY_NDIC1_type *) 0xf001c3a8u)	/* New Data Interrupt Control 1 */

typedef volatile union
{
	struct
	{ 
		unsigned int NDIP32         : 1;	/* New Data Interrupt Pointer 32 (32 = 32-63) */
		unsigned int NDIP33         : 1;	/* New Data Interrupt Pointer 33 (33 = 32-63) */
		unsigned int NDIP34         : 1;	/* New Data Interrupt Pointer 34 (34 = 32-63) */
		unsigned int NDIP35         : 1;	/* New Data Interrupt Pointer 35 (35 = 32-63) */
		unsigned int NDIP36         : 1;	/* New Data Interrupt Pointer 36 (36 = 32-63) */
		unsigned int NDIP37         : 1;	/* New Data Interrupt Pointer 37 (37 = 32-63) */
		unsigned int NDIP38         : 1;	/* New Data Interrupt Pointer 38 (38 = 32-63) */
		unsigned int NDIP39         : 1;	/* New Data Interrupt Pointer 39 (39 = 32-63) */
		unsigned int NDIP40         : 1;	/* New Data Interrupt Pointer 40 (40 = 32-63) */
		unsigned int NDIP41         : 1;	/* New Data Interrupt Pointer 41 (41 = 32-63) */
		unsigned int NDIP42         : 1;	/* New Data Interrupt Pointer 42 (42 = 32-63) */
		unsigned int NDIP43         : 1;	/* New Data Interrupt Pointer 43 (43 = 32-63) */
		unsigned int NDIP44         : 1;	/* New Data Interrupt Pointer 44 (44 = 32-63) */
		unsigned int NDIP45         : 1;	/* New Data Interrupt Pointer 45 (45 = 32-63) */
		unsigned int NDIP46         : 1;	/* New Data Interrupt Pointer 46 (46 = 32-63) */
		unsigned int NDIP47         : 1;	/* New Data Interrupt Pointer 47 (47 = 32-63) */
		unsigned int NDIP48         : 1;	/* New Data Interrupt Pointer 48 (48 = 32-63) */
		unsigned int NDIP49         : 1;	/* New Data Interrupt Pointer 49 (49 = 32-63) */
		unsigned int NDIP50         : 1;	/* New Data Interrupt Pointer 50 (50 = 32-63) */
		unsigned int NDIP51         : 1;	/* New Data Interrupt Pointer 51 (51 = 32-63) */
		unsigned int NDIP52         : 1;	/* New Data Interrupt Pointer 52 (52 = 32-63) */
		unsigned int NDIP53         : 1;	/* New Data Interrupt Pointer 53 (53 = 32-63) */
		unsigned int NDIP54         : 1;	/* New Data Interrupt Pointer 54 (54 = 32-63) */
		unsigned int NDIP55         : 1;	/* New Data Interrupt Pointer 55 (55 = 32-63) */
		unsigned int NDIP56         : 1;	/* New Data Interrupt Pointer 56 (56 = 32-63) */
		unsigned int NDIP57         : 1;	/* New Data Interrupt Pointer 57 (57 = 32-63) */
		unsigned int NDIP58         : 1;	/* New Data Interrupt Pointer 58 (58 = 32-63) */
		unsigned int NDIP59         : 1;	/* New Data Interrupt Pointer 59 (59 = 32-63) */
		unsigned int NDIP60         : 1;	/* New Data Interrupt Pointer 60 (60 = 32-63) */
		unsigned int NDIP61         : 1;	/* New Data Interrupt Pointer 61 (61 = 32-63) */
		unsigned int NDIP62         : 1;	/* New Data Interrupt Pointer 62 (62 = 32-63) */
		unsigned int NDIP63         : 1;	/* New Data Interrupt Pointer 63 (63 = 32-63) */
	} B;
	int I;
	unsigned int U;

} ERAY_NDIC2_type;
#define ERAY_NDIC2	(*( ERAY_NDIC2_type *) 0xf001c3acu)	/* New Data Interrupt Control 2 */

typedef volatile union
{
	struct
	{ 
		unsigned int NDIP64         : 1;	/* New Data Interrupt Pointer 64 (64 = 64-95) */
		unsigned int NDIP65         : 1;	/* New Data Interrupt Pointer 65 (65 = 64-95) */
		unsigned int NDIP66         : 1;	/* New Data Interrupt Pointer 66 (66 = 64-95) */
		unsigned int NDIP67         : 1;	/* New Data Interrupt Pointer 67 (67 = 64-95) */
		unsigned int NDIP68         : 1;	/* New Data Interrupt Pointer 68 (68 = 64-95) */
		unsigned int NDIP69         : 1;	/* New Data Interrupt Pointer 69 (69 = 64-95) */
		unsigned int NDIP70         : 1;	/* New Data Interrupt Pointer 70 (70 = 64-95) */
		unsigned int NDIP71         : 1;	/* New Data Interrupt Pointer 71 (71 = 64-95) */
		unsigned int NDIP72         : 1;	/* New Data Interrupt Pointer 72 (72 = 64-95) */
		unsigned int NDIP73         : 1;	/* New Data Interrupt Pointer 73 (73 = 64-95) */
		unsigned int NDIP74         : 1;	/* New Data Interrupt Pointer 74 (74 = 64-95) */
		unsigned int NDIP75         : 1;	/* New Data Interrupt Pointer 75 (75 = 64-95) */
		unsigned int NDIP76         : 1;	/* New Data Interrupt Pointer 76 (76 = 64-95) */
		unsigned int NDIP77         : 1;	/* New Data Interrupt Pointer 77 (77 = 64-95) */
		unsigned int NDIP78         : 1;	/* New Data Interrupt Pointer 78 (78 = 64-95) */
		unsigned int NDIP79         : 1;	/* New Data Interrupt Pointer 79 (79 = 64-95) */
		unsigned int NDIP80         : 1;	/* New Data Interrupt Pointer 80 (80 = 64-95) */
		unsigned int NDIP81         : 1;	/* New Data Interrupt Pointer 81 (81 = 64-95) */
		unsigned int NDIP82         : 1;	/* New Data Interrupt Pointer 82 (82 = 64-95) */
		unsigned int NDIP83         : 1;	/* New Data Interrupt Pointer 83 (83 = 64-95) */
		unsigned int NDIP84         : 1;	/* New Data Interrupt Pointer 84 (84 = 64-95) */
		unsigned int NDIP85         : 1;	/* New Data Interrupt Pointer 85 (85 = 64-95) */
		unsigned int NDIP86         : 1;	/* New Data Interrupt Pointer 86 (86 = 64-95) */
		unsigned int NDIP87         : 1;	/* New Data Interrupt Pointer 87 (87 = 64-95) */
		unsigned int NDIP88         : 1;	/* New Data Interrupt Pointer 88 (88 = 64-95) */
		unsigned int NDIP89         : 1;	/* New Data Interrupt Pointer 89 (89 = 64-95) */
		unsigned int NDIP90         : 1;	/* New Data Interrupt Pointer 90 (90 = 64-95) */
		unsigned int NDIP91         : 1;	/* New Data Interrupt Pointer 91 (91 = 64-95) */
		unsigned int NDIP92         : 1;	/* New Data Interrupt Pointer 92 (92 = 64-95) */
		unsigned int NDIP93         : 1;	/* New Data Interrupt Pointer 93 (93 = 64-95) */
		unsigned int NDIP94         : 1;	/* New Data Interrupt Pointer 94 (94 = 64-95) */
		unsigned int NDIP95         : 1;	/* New Data Interrupt Pointer 95 (95 = 64-95) */
	} B;
	int I;
	unsigned int U;

} ERAY_NDIC3_type;
#define ERAY_NDIC3	(*( ERAY_NDIC3_type *) 0xf001c3b0u)	/* New Data Interrupt Control 3 */

typedef volatile union
{
	struct
	{ 
		unsigned int NDIP96         : 1;	/* New Data Interrupt Pointer 96 (96 = 96-127) */
		unsigned int NDIP97         : 1;	/* New Data Interrupt Pointer 97 (97 = 96-127) */
		unsigned int NDIP98         : 1;	/* New Data Interrupt Pointer 98 (98 = 96-127) */
		unsigned int NDIP99         : 1;	/* New Data Interrupt Pointer 99 (99 = 96-127) */
		unsigned int NDIP100        : 1;	/* New Data Interrupt Pointer 100 (100 = 96-127) */
		unsigned int NDIP101        : 1;	/* New Data Interrupt Pointer 101 (101 = 96-127) */
		unsigned int NDIP102        : 1;	/* New Data Interrupt Pointer 102 (102 = 96-127) */
		unsigned int NDIP103        : 1;	/* New Data Interrupt Pointer 103 (103 = 96-127) */
		unsigned int NDIP104        : 1;	/* New Data Interrupt Pointer 104 (104 = 96-127) */
		unsigned int NDIP105        : 1;	/* New Data Interrupt Pointer 105 (105 = 96-127) */
		unsigned int NDIP106        : 1;	/* New Data Interrupt Pointer 106 (106 = 96-127) */
		unsigned int NDIP107        : 1;	/* New Data Interrupt Pointer 107 (107 = 96-127) */
		unsigned int NDIP108        : 1;	/* New Data Interrupt Pointer 108 (108 = 96-127) */
		unsigned int NDIP109        : 1;	/* New Data Interrupt Pointer 109 (109 = 96-127) */
		unsigned int NDIP110        : 1;	/* New Data Interrupt Pointer 110 (110 = 96-127) */
		unsigned int NDIP111        : 1;	/* New Data Interrupt Pointer 111 (111 = 96-127) */
		unsigned int NDIP112        : 1;	/* New Data Interrupt Pointer 112 (112 = 96-127) */
		unsigned int NDIP113        : 1;	/* New Data Interrupt Pointer 113 (113 = 96-127) */
		unsigned int NDIP114        : 1;	/* New Data Interrupt Pointer 114 (114 = 96-127) */
		unsigned int NDIP115        : 1;	/* New Data Interrupt Pointer 115 (115 = 96-127) */
		unsigned int NDIP116        : 1;	/* New Data Interrupt Pointer 116 (116 = 96-127) */
		unsigned int NDIP117        : 1;	/* New Data Interrupt Pointer 117 (117 = 96-127) */
		unsigned int NDIP118        : 1;	/* New Data Interrupt Pointer 118 (118 = 96-127) */
		unsigned int NDIP119        : 1;	/* New Data Interrupt Pointer 119 (119 = 96-127) */
		unsigned int NDIP120        : 1;	/* New Data Interrupt Pointer 120 (120 = 96-127) */
		unsigned int NDIP121        : 1;	/* New Data Interrupt Pointer 121 (121 = 96-127) */
		unsigned int NDIP122        : 1;	/* New Data Interrupt Pointer 122 (122 = 96-127) */
		unsigned int NDIP123        : 1;	/* New Data Interrupt Pointer 123 (123 = 96-127) */
		unsigned int NDIP124        : 1;	/* New Data Interrupt Pointer 124 (124 = 96-127) */
		unsigned int NDIP125        : 1;	/* New Data Interrupt Pointer 125 (125 = 96-127) */
		unsigned int NDIP126        : 1;	/* New Data Interrupt Pointer 126 (126 = 96-127) */
		unsigned int NDIP127        : 1;	/* New Data Interrupt Pointer 127 (127 = 96-127) */
	} B;
	int I;
	unsigned int U;

} ERAY_NDIC4_type;
#define ERAY_NDIC4	(*( ERAY_NDIC4_type *) 0xf001c3b4u)	/* New Data Interrupt Control 4 */

typedef volatile union
{
	struct
	{ 
		unsigned int NML            : 4;	/* Network Management Vector Length (gNetworkManagementVectorLength) */
		unsigned int                : 28;
	} B;
	int I;
	unsigned int U;

} ERAY_NEMC_type;
#define ERAY_NEMC	(*( ERAY_NEMC_type *) 0xf001c08cu)	/* NEM Configuration Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int NM             : 32;	/* Network Management Vector */
	} B;
	int I;
	unsigned int U;

} ERAY_NMV1_type;
#define ERAY_NMV1	(*( ERAY_NMV1_type *) 0xf001c1b0u)	/* Network Management Vector 1 */
#define ERAY_NMV2	(*( ERAY_NMV1_type *) 0xf001c1b4u)	/* Network Management Vector 2 */
#define ERAY_NMV3	(*( ERAY_NMV1_type *) 0xf001c1b8u)	/* Network Management Vector 3 */

typedef volatile union
{
	struct
	{ 
		unsigned int RHSS           : 1;	/* Read Header Section Shadow */
		unsigned int RDSS           : 1;	/* Read Data Section Shadow */
		unsigned int                : 14;
		/* const */ unsigned int RHSH           : 1;	/* Read Header Section Host */
		/* const */ unsigned int RDSH           : 1;	/* Read Data Section Host */
		unsigned int                : 14;
	} B;
	int I;
	unsigned int U;

} ERAY_OBCM_type;
#define ERAY_OBCM	(*( ERAY_OBCM_type *) 0xf001c710u)	/* Output Buffer Command Mask */

typedef volatile union
{
	struct
	{ 
		unsigned int OBRS           : 7;	/* Output Buffer Request Shadow */
		unsigned int                : 1;
		unsigned int VIEW           : 1;	/* View Shadow Buffer */
		unsigned int REQ            : 1;	/* Request Message RAM Transfer */
		unsigned int                : 5;
		/* const */ unsigned int OBSYS          : 1;	/* Output Buffer Busy Shadow */
		/* const */ unsigned int OBRH           : 7;	/* Output Buffer Request Host */
		unsigned int                : 9;
	} B;
	int I;
	unsigned int U;

} ERAY_OBCR_type;
#define ERAY_OBCR	(*( ERAY_OBCR_type *) 0xf001c714u)	/* Output Buffer Command Request */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32                : 24;
		unsigned __sfrbit32 SUS            : 4;	/* OCDS Suspend Control */
		unsigned __sfrbit32 SUS_P          : 1;	/* SUS Write Protection */
		/* const */ unsigned __sfrbit32 SUSSTA         : 1;	/* Suspend State */
		unsigned __sfrbit32                : 2;
	} B;
	int I;
	unsigned int U;

} ERAY_OCS_type;
#define ERAY_OCS	(*( ERAY_OCS_type *) 0xf001c8e8u)	/* OCDS Control and Status */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int OCV            : 19;	/* Offset Correction Value (vOffsetCorrection) */
		/* const */ unsigned int                : 13;
	} B;
	int I;
	unsigned int U;

} ERAY_OCV_type;
#define ERAY_OCV	(*( ERAY_OCV_type *) 0xf001c11cu)	/* Offset Correction Value */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int OID            : 10;	/* Odd Sync ID (vsSyncIDListA,B odd) */
		/* const */ unsigned int                : 4;
		/* const */ unsigned int RXOA           : 1;	/* Received Odd Sync ID on Channel A */
		/* const */ unsigned int RXOB           : 1;	/* Received Odd Sync ID on Channel B */
		/* const */ unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} ERAY_OSID01_type;
#define ERAY_OSID01	(*( ERAY_OSID01_type *) 0xf001c170u)	/* Odd Sync ID Symbol Window 01 */
#define ERAY_OSID02	(*( ERAY_OSID01_type *) 0xf001c174u)	/* Odd Sync ID Symbol Window 02 */
#define ERAY_OSID03	(*( ERAY_OSID01_type *) 0xf001c178u)	/* Odd Sync ID Symbol Window 03 */
#define ERAY_OSID04	(*( ERAY_OSID01_type *) 0xf001c17cu)	/* Odd Sync ID Symbol Window 04 */
#define ERAY_OSID05	(*( ERAY_OSID01_type *) 0xf001c180u)	/* Odd Sync ID Symbol Window 05 */
#define ERAY_OSID06	(*( ERAY_OSID01_type *) 0xf001c184u)	/* Odd Sync ID Symbol Window 06 */
#define ERAY_OSID07	(*( ERAY_OSID01_type *) 0xf001c188u)	/* Odd Sync ID Symbol Window 07 */
#define ERAY_OSID08	(*( ERAY_OSID01_type *) 0xf001c18cu)	/* Odd Sync ID Symbol Window 08 */
#define ERAY_OSID09	(*( ERAY_OSID01_type *) 0xf001c190u)	/* Odd Sync ID Symbol Window 09 */
#define ERAY_OSID10	(*( ERAY_OSID01_type *) 0xf001c194u)	/* Odd Sync ID Symbol Window 10 */
#define ERAY_OSID11	(*( ERAY_OSID01_type *) 0xf001c198u)	/* Odd Sync ID Symbol Window 11 */
#define ERAY_OSID12	(*( ERAY_OSID01_type *) 0xf001c19cu)	/* Odd Sync ID Symbol Window 12 */
#define ERAY_OSID13	(*( ERAY_OSID01_type *) 0xf001c1a0u)	/* Odd Sync ID Symbol Window 13 */
#define ERAY_OSID14	(*( ERAY_OSID01_type *) 0xf001c1a4u)	/* Odd Sync ID Symbol Window 14 */
#define ERAY_OSID15	(*( ERAY_OSID01_type *) 0xf001c1a8u)	/* Odd Sync ID Symbol Window 15 */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 OTGB0          : 2;	/* Trigger Set for OTGB0 */
		unsigned __sfrbit32                : 6;
		unsigned __sfrbit32 OTGB1          : 2;	/* Trigger Set for OTGB1 */
		unsigned __sfrbit32                : 6;
		unsigned __sfrbit32 OTGB2          : 1;	/* Trigger Set for OTGB2 */
		unsigned __sfrbit32                : 15;
	} B;
	int I;
	unsigned int U;

} ERAY_OTSS_type;
#define ERAY_OTSS	(*( ERAY_OTSS_type *) 0xf001c870u)	/* OCDS Trigger Set Select */

typedef volatile union
{
	struct
	{ 
		unsigned int TSST           : 4;	/* Transmission Start Sequence Transmitter (gdTSSTransmitter) */
		unsigned int CASM           : 7;	/* Collision Avoidance Symbol Maximum(gdCASRxLowMax) */
		unsigned int                : 1;
		unsigned int SPP            : 2;	/* Strobe Point Position */
		unsigned int BRP            : 2;	/* Baud Rate Prescaler(gdSampleClockPeriod, pSamplePerMicrotick) */
		unsigned int RXW            : 9;	/* Wakeup Symbol Receive Window Length (gdWakeupSymbolRxWindow) */
		unsigned int                : 1;
		unsigned int RWP            : 6;	/* Repetitions of Tx Wakeup Pattern (pWakeupPattern) */
	} B;
	int I;
	unsigned int U;

} ERAY_PRTC1_type;
#define ERAY_PRTC1	(*( ERAY_PRTC1_type *) 0xf001c090u)	/* PRT Configuration Register 1 */

typedef volatile union
{
	struct
	{ 
		unsigned int RXI            : 6;	/* Wakeup Symbol Receive Idle (gdWakeupSymbolRxIdle) */
		unsigned int                : 2;
		unsigned int RXL            : 6;	/* Wakeup Symbol Receive Low(gdWakeupSymbolRxLow) */
		unsigned int                : 2;
		unsigned int TXI            : 8;	/* Wakeup Symbol Transmit Idle (gdWakeupSymbolTxIdle) */
		unsigned int TXL            : 6;	/* Wakeup Symbol Transmit Low (gdWakeupSymbolTxLow) */
		unsigned int                : 2;
	} B;
	int I;
	unsigned int U;

} ERAY_PRTC2_type;
#define ERAY_PRTC2	(*( ERAY_PRTC2_type *) 0xf001c094u)	/* PRT Configuration Register 2 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int RCV            : 12;	/* Rate Correction Value (vRateCorrection) */
		/* const */ unsigned int                : 20;
	} B;
	int I;
	unsigned int U;

} ERAY_RCV_type;
#define ERAY_RCV	(*( ERAY_RCV_type *) 0xf001c118u)	/* Rate Correction Value */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int MDRB0          : 8;	/* 32-Bit Word nn, Byte 0 */
		/* const */ unsigned int MDRB1          : 8;	/* 32-Bit Word nn, Byte 1 */
		/* const */ unsigned int MDRB2          : 8;	/* 32-Bit Word nn, Byte 2 */
		/* const */ unsigned int MDRB3          : 8;	/* 32-Bit Word nn, Byte 3 */
	} B;
	int I;
	unsigned int U;

} ERAY_RDDS01_type;
#define ERAY_RDDS01	(*( ERAY_RDDS01_type *) 0xf001c600u)	/* Read Data Section 01 */
#define ERAY_RDDS02	(*( ERAY_RDDS01_type *) 0xf001c604u)	/* Read Data Section 02 */
#define ERAY_RDDS03	(*( ERAY_RDDS01_type *) 0xf001c608u)	/* Read Data Section 03 */
#define ERAY_RDDS04	(*( ERAY_RDDS01_type *) 0xf001c60cu)	/* Read Data Section 04 */
#define ERAY_RDDS05	(*( ERAY_RDDS01_type *) 0xf001c610u)	/* Read Data Section 05 */
#define ERAY_RDDS06	(*( ERAY_RDDS01_type *) 0xf001c614u)	/* Read Data Section 06 */
#define ERAY_RDDS07	(*( ERAY_RDDS01_type *) 0xf001c618u)	/* Read Data Section 07 */
#define ERAY_RDDS08	(*( ERAY_RDDS01_type *) 0xf001c61cu)	/* Read Data Section 08 */
#define ERAY_RDDS09	(*( ERAY_RDDS01_type *) 0xf001c620u)	/* Read Data Section 09 */
#define ERAY_RDDS10	(*( ERAY_RDDS01_type *) 0xf001c624u)	/* Read Data Section 10 */
#define ERAY_RDDS11	(*( ERAY_RDDS01_type *) 0xf001c628u)	/* Read Data Section 11 */
#define ERAY_RDDS12	(*( ERAY_RDDS01_type *) 0xf001c62cu)	/* Read Data Section 12 */
#define ERAY_RDDS13	(*( ERAY_RDDS01_type *) 0xf001c630u)	/* Read Data Section 13 */
#define ERAY_RDDS14	(*( ERAY_RDDS01_type *) 0xf001c634u)	/* Read Data Section 14 */
#define ERAY_RDDS15	(*( ERAY_RDDS01_type *) 0xf001c638u)	/* Read Data Section 15 */
#define ERAY_RDDS16	(*( ERAY_RDDS01_type *) 0xf001c63cu)	/* Read Data Section 16 */
#define ERAY_RDDS17	(*( ERAY_RDDS01_type *) 0xf001c640u)	/* Read Data Section 17 */
#define ERAY_RDDS18	(*( ERAY_RDDS01_type *) 0xf001c644u)	/* Read Data Section 18 */
#define ERAY_RDDS19	(*( ERAY_RDDS01_type *) 0xf001c648u)	/* Read Data Section 19 */
#define ERAY_RDDS20	(*( ERAY_RDDS01_type *) 0xf001c64cu)	/* Read Data Section 20 */
#define ERAY_RDDS21	(*( ERAY_RDDS01_type *) 0xf001c650u)	/* Read Data Section 21 */
#define ERAY_RDDS22	(*( ERAY_RDDS01_type *) 0xf001c654u)	/* Read Data Section 22 */
#define ERAY_RDDS23	(*( ERAY_RDDS01_type *) 0xf001c658u)	/* Read Data Section 23 */
#define ERAY_RDDS24	(*( ERAY_RDDS01_type *) 0xf001c65cu)	/* Read Data Section 24 */
#define ERAY_RDDS25	(*( ERAY_RDDS01_type *) 0xf001c660u)	/* Read Data Section 25 */
#define ERAY_RDDS26	(*( ERAY_RDDS01_type *) 0xf001c664u)	/* Read Data Section 26 */
#define ERAY_RDDS27	(*( ERAY_RDDS01_type *) 0xf001c668u)	/* Read Data Section 27 */
#define ERAY_RDDS28	(*( ERAY_RDDS01_type *) 0xf001c66cu)	/* Read Data Section 28 */
#define ERAY_RDDS29	(*( ERAY_RDDS01_type *) 0xf001c670u)	/* Read Data Section 29 */
#define ERAY_RDDS30	(*( ERAY_RDDS01_type *) 0xf001c674u)	/* Read Data Section 30 */
#define ERAY_RDDS31	(*( ERAY_RDDS01_type *) 0xf001c678u)	/* Read Data Section 31 */
#define ERAY_RDDS32	(*( ERAY_RDDS01_type *) 0xf001c67cu)	/* Read Data Section 32 */
#define ERAY_RDDS33	(*( ERAY_RDDS01_type *) 0xf001c680u)	/* Read Data Section 33 */
#define ERAY_RDDS34	(*( ERAY_RDDS01_type *) 0xf001c684u)	/* Read Data Section 34 */
#define ERAY_RDDS35	(*( ERAY_RDDS01_type *) 0xf001c688u)	/* Read Data Section 35 */
#define ERAY_RDDS36	(*( ERAY_RDDS01_type *) 0xf001c68cu)	/* Read Data Section 36 */
#define ERAY_RDDS37	(*( ERAY_RDDS01_type *) 0xf001c690u)	/* Read Data Section 37 */
#define ERAY_RDDS38	(*( ERAY_RDDS01_type *) 0xf001c694u)	/* Read Data Section 38 */
#define ERAY_RDDS39	(*( ERAY_RDDS01_type *) 0xf001c698u)	/* Read Data Section 39 */
#define ERAY_RDDS40	(*( ERAY_RDDS01_type *) 0xf001c69cu)	/* Read Data Section 40 */
#define ERAY_RDDS41	(*( ERAY_RDDS01_type *) 0xf001c6a0u)	/* Read Data Section 41 */
#define ERAY_RDDS42	(*( ERAY_RDDS01_type *) 0xf001c6a4u)	/* Read Data Section 42 */
#define ERAY_RDDS43	(*( ERAY_RDDS01_type *) 0xf001c6a8u)	/* Read Data Section 43 */
#define ERAY_RDDS44	(*( ERAY_RDDS01_type *) 0xf001c6acu)	/* Read Data Section 44 */
#define ERAY_RDDS45	(*( ERAY_RDDS01_type *) 0xf001c6b0u)	/* Read Data Section 45 */
#define ERAY_RDDS46	(*( ERAY_RDDS01_type *) 0xf001c6b4u)	/* Read Data Section 46 */
#define ERAY_RDDS47	(*( ERAY_RDDS01_type *) 0xf001c6b8u)	/* Read Data Section 47 */
#define ERAY_RDDS48	(*( ERAY_RDDS01_type *) 0xf001c6bcu)	/* Read Data Section 48 */
#define ERAY_RDDS49	(*( ERAY_RDDS01_type *) 0xf001c6c0u)	/* Read Data Section 49 */
#define ERAY_RDDS50	(*( ERAY_RDDS01_type *) 0xf001c6c4u)	/* Read Data Section 50 */
#define ERAY_RDDS51	(*( ERAY_RDDS01_type *) 0xf001c6c8u)	/* Read Data Section 51 */
#define ERAY_RDDS52	(*( ERAY_RDDS01_type *) 0xf001c6ccu)	/* Read Data Section 52 */
#define ERAY_RDDS53	(*( ERAY_RDDS01_type *) 0xf001c6d0u)	/* Read Data Section 53 */
#define ERAY_RDDS54	(*( ERAY_RDDS01_type *) 0xf001c6d4u)	/* Read Data Section 54 */
#define ERAY_RDDS55	(*( ERAY_RDDS01_type *) 0xf001c6d8u)	/* Read Data Section 55 */
#define ERAY_RDDS56	(*( ERAY_RDDS01_type *) 0xf001c6dcu)	/* Read Data Section 56 */
#define ERAY_RDDS57	(*( ERAY_RDDS01_type *) 0xf001c6e0u)	/* Read Data Section 57 */
#define ERAY_RDDS58	(*( ERAY_RDDS01_type *) 0xf001c6e4u)	/* Read Data Section 58 */
#define ERAY_RDDS59	(*( ERAY_RDDS01_type *) 0xf001c6e8u)	/* Read Data Section 59 */
#define ERAY_RDDS60	(*( ERAY_RDDS01_type *) 0xf001c6ecu)	/* Read Data Section 60 */
#define ERAY_RDDS61	(*( ERAY_RDDS01_type *) 0xf001c6f0u)	/* Read Data Section 61 */
#define ERAY_RDDS62	(*( ERAY_RDDS01_type *) 0xf001c6f4u)	/* Read Data Section 62 */
#define ERAY_RDDS63	(*( ERAY_RDDS01_type *) 0xf001c6f8u)	/* Read Data Section 63 */
#define ERAY_RDDS64	(*( ERAY_RDDS01_type *) 0xf001c6fcu)	/* Read Data Section 64 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int FID            : 11;	/* Frame ID */
		/* const */ unsigned int                : 5;
		/* const */ unsigned int CYC            : 7;	/* Cycle Code */
		/* const */ unsigned int                : 1;
		/* const */ unsigned int CHA            : 1;	/* Channel Filter Control A */
		/* const */ unsigned int CHB            : 1;	/* Channel Filter Control B */
		/* const */ unsigned int CFG            : 1;	/* Message Buffer Direction Configuration Bit */
		/* const */ unsigned int PPIT           : 1;	/* Payload Preamble Indicator Transmit */
		/* const */ unsigned int TXM            : 1;	/* Transmission Mode */
		/* const */ unsigned int MBI            : 1;	/* Message Buffer Service Request */
		/* const */ unsigned int                : 2;
	} B;
	int I;
	unsigned int U;

} ERAY_RDHS1_type;
#define ERAY_RDHS1	(*( ERAY_RDHS1_type *) 0xf001c700u)	/* Read Header Section 1 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int CRC            : 11;	/* Header CRC (vRF!Header!HeaderCRC) */
		/* const */ unsigned int                : 5;
		/* const */ unsigned int PLC            : 7;	/* Payload Length Configured */
		/* const */ unsigned int                : 1;
		/* const */ unsigned int PLR            : 7;	/* Payload Length Received (vRF!Header!Length) */
		/* const */ unsigned int                : 1;
	} B;
	int I;
	unsigned int U;

} ERAY_RDHS2_type;
#define ERAY_RDHS2	(*( ERAY_RDHS2_type *) 0xf001c704u)	/* Read Header Section 2 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int DP             : 11;	/* Data Pointer */
		/* const */ unsigned int                : 5;
		/* const */ unsigned int RCC            : 6;	/* Receive Cycle Count (vRF!Header!CycleCount) */
		/* const */ unsigned int                : 2;
		/* const */ unsigned int RCI            : 1;	/* Received on Channel Indicator (vSS!Channel) */
		/* const */ unsigned int SFI            : 1;	/* Startup Frame Indicator (vRF!Header!SuFIndicator) */
		/* const */ unsigned int SYN            : 1;	/* SYNC Frame Indicator (vRF!Header!SyFIndicator) */
		/* const */ unsigned int NFI            : 1;	/* NULL Frame Indicator (vRF!Header!NFIndicator) */
		/* const */ unsigned int PPI            : 1;	/* Payload Preamble Indicator (vRF!Header!PPIndicator) */
		/* const */ unsigned int RES            : 1;	/* Reserved Bit (vRF!Header!Reserved) */
		/* const */ unsigned int                : 2;
	} B;
	int I;
	unsigned int U;

} ERAY_RDHS3_type;
#define ERAY_RDHS3	(*( ERAY_RDHS3_type *) 0xf001c708u)	/* Read Header Section 3 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int SCCA           : 11;	/* Slot Counter Channel A (vSlotCounter[A]) */
		/* const */ unsigned int                : 5;
		/* const */ unsigned int SCCB           : 11;	/* Slot Counter Channel B (vSlotCounter[B]) */
		/* const */ unsigned int                : 5;
	} B;
	int I;
	unsigned int U;

} ERAY_SCV_type;
#define ERAY_SCV	(*( ERAY_SCV_type *) 0xf001c110u)	/* Slot Counter Value */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int VSAE           : 4;	/* Valid SYNC Frames Channel A, even communication cycle */
		/* const */ unsigned int VSAO           : 4;	/* Valid SYNC Frames Channel A, odd communication cycle */
		/* const */ unsigned int VSBE           : 4;	/* Valid SYNC Frames Channel B, even communication cycle */
		/* const */ unsigned int VSBO           : 4;	/* Valid SYNC Frames Channel B, odd communication cycle */
		/* const */ unsigned int MOCS           : 1;	/* Missing Offset Correction Signal */
		/* const */ unsigned int OCLR           : 1;	/* Offset Correction Limit Reached */
		/* const */ unsigned int MRCS           : 1;	/* Missing Rate Correction Signal */
		/* const */ unsigned int RCLR           : 1;	/* Rate Correction Limit Reached */
		/* const */ unsigned int                : 12;
	} B;
	int I;
	unsigned int U;

} ERAY_SFS_type;
#define ERAY_SFS	(*( ERAY_SFS_type *) 0xf001c120u)	/* SYNC Frame Status */

typedef volatile union
{
	struct
	{ 
		unsigned int WSTE           : 1;	/* Wakeup Status Service Request Enable */
		unsigned int CASE           : 1;	/* Collision Avoidance Symbol Service Request Enable */
		unsigned int CYCSE          : 1;	/* Cycle Start Service Request Enable */
		unsigned int TXIE           : 1;	/* Transmit Service Request Enable */
		unsigned int RXIE           : 1;	/* Receive Service Request Enable */
		unsigned int RFNEE          : 1;	/* Receive FIFO Not Empty Service Request Enable */
		unsigned int RFCLE          : 1;	/* Receive FIFO Critical Level Service Request Enable */
		unsigned int NMVCE          : 1;	/* Network Management Vector Changed Service Request Enable */
		unsigned int TI0E           : 1;	/* Timer Service Request 0 Enable */
		unsigned int TI1E           : 1;	/* Timer Service Request 1 Enable */
		unsigned int TIBCE          : 1;	/* Transfer Input Buffer Completed Service Request Enable */
		unsigned int TOBCE          : 1;	/* Transfer Output Buffer Completed Service Request Enable */
		unsigned int SWEE           : 1;	/* Stop Watch Event Service Request Enable */
		unsigned int SUCSE          : 1;	/* Startup Completed Successfully Service Request Enable */
		unsigned int MBSIE          : 1;	/* Message Buffer Status Service Request Enable */
		unsigned int SDSE           : 1;	/* Start of Dynamic Segment Service Request Enable */
		unsigned int WUPAE          : 1;	/* Wakeup Pattern Channel A Service Request Enable */
		unsigned int MTSAE          : 1;	/* Media Access Test Symbol Channel A Service Request Enable */
		unsigned int                : 6;
		unsigned int WUPBE          : 1;	/* Wakeup Pattern Channel B Service Request Enable */
		unsigned int MTSBE          : 1;	/* Media Access Test Symbol Channel B Service Request Enable */
		unsigned int                : 6;
	} B;
	int I;
	unsigned int U;

} ERAY_SIER_type;
#define ERAY_SIER	(*( ERAY_SIER_type *) 0xf001c03cu)	/* Status Service Request Enable Reset */

typedef volatile union
{
	struct
	{ 
		unsigned int WSTE           : 1;	/* Wakeup Status Service Request Enable */
		unsigned int CASE           : 1;	/* Collision Avoidance Symbol Service Request Enable */
		unsigned int CYCSE          : 1;	/* Cycle Start Service Request Enable */
		unsigned int TXIE           : 1;	/* Transmit Service Request Enable */
		unsigned int RXIE           : 1;	/* Receive Service Request Enable */
		unsigned int RFNEE          : 1;	/* Receive FIFO Not Empty Service Request Enable */
		unsigned int RFCLE          : 1;	/* Receive FIFO Critical Level Service Request Enable */
		unsigned int NMVCE          : 1;	/* Network Management Vector Changed Service Request Enable */
		unsigned int TI0E           : 1;	/* Timer Service Request 0 Enable */
		unsigned int TI1E           : 1;	/* Timer Service Request 1 Enable */
		unsigned int TIBCE          : 1;	/* Transfer Input Buffer Completed Service Request Enable */
		unsigned int TOBCE          : 1;	/* Transfer Output Buffer Completed Service Request Enable */
		unsigned int SWEE           : 1;	/* Stop Watch Event Service Request Enable */
		unsigned int SUCSE          : 1;	/* Startup Completed Successfully Service Request Enable */
		unsigned int MBSIE          : 1;	/* Message Buffer Status Service Request Enable */
		unsigned int SDSE           : 1;	/* Start of Dynamic Segment Service Request Enable */
		unsigned int WUPAE          : 1;	/* Wakeup Pattern Channel A Service Request Enable */
		unsigned int MTSAE          : 1;	/* Media Access Test Symbol Channel A Service Request Enable */
		unsigned int                : 6;
		unsigned int WUPBE          : 1;	/* Wakeup Pattern Channel B Service Request Enable */
		unsigned int MTSBE          : 1;	/* Media Access Test Symbol Channel B Service Request Enable */
		unsigned int                : 6;
	} B;
	int I;
	unsigned int U;

} ERAY_SIES_type;
#define ERAY_SIES	(*( ERAY_SIES_type *) 0xf001c038u)	/* Status Service Request Enable Set */

typedef volatile union
{
	struct
	{ 
		unsigned int WSTL           : 1;	/* Wakeup Status Service Request Line */
		unsigned int CASL           : 1;	/* Collision Avoidance Symbol Service Request Line */
		unsigned int CYCSL          : 1;	/* Cycle Start Service Request Line */
		unsigned int TXIL           : 1;	/* Transmit Service Request Line */
		unsigned int RXIL           : 1;	/* Receive Service Request Line */
		unsigned int RFNEL          : 1;	/* Receive FIFO Not Empty Service Request Line */
		unsigned int RFCLL          : 1;	/* Receive FIFO Critical Level Service Request Line */
		unsigned int NMVCL          : 1;	/* Network Management Vector Changed Service Request Line */
		unsigned int TI0L           : 1;	/* Timer Service Request 0 Line */
		unsigned int TI1L           : 1;	/* Timer Service Request 1 Line */
		unsigned int TIBCL          : 1;	/* Transfer Input Buffer Completed Service Request Line */
		unsigned int TOBCL          : 1;	/* Transfer Output Buffer Completed Service Request Line */
		unsigned int SWEL           : 1;	/* Stop Watch Event Service Request Line */
		unsigned int SUCSL          : 1;	/* Startup Completed Successfully Service Request Line */
		unsigned int MBSIL          : 1;	/* Message Buffer Status Service Request Line */
		unsigned int SDSL           : 1;	/* Start of Dynamic Segment Service Request Line */
		unsigned int WUPAL          : 1;	/* Wakeup Pattern Channel A Service Request Line */
		unsigned int MTSAL          : 1;	/* Media Access Test Symbol Channel A Service Request Line */
		unsigned int                : 6;
		unsigned int WUPBL          : 1;	/* Wakeup Pattern Channel B Service Request Line */
		unsigned int MTSBL          : 1;	/* Media Access Test Symbol Channel B Service Request Line */
		unsigned int                : 6;
	} B;
	int I;
	unsigned int U;

} ERAY_SILS_type;
#define ERAY_SILS	(*( ERAY_SILS_type *) 0xf001c02cu)	/* Status Service Request Line Select */

typedef volatile union
{
	struct
	{ 
		unsigned int WST            : 1;	/* Wakeup Status */
		unsigned int CAS            : 1;	/* Collision Avoidance Symbol */
		unsigned int CYCS           : 1;	/* Cycle Start Service Request */
		unsigned int TXI            : 1;	/* Transmit Service Request */
		unsigned int RXI            : 1;	/* Receive Service Request */
		/* const */ unsigned int RFNE           : 1;	/* Receive FIFO Not Empty */
		/* const */ unsigned int RFCL           : 1;	/* Receive FIFO Critical Level */
		unsigned int NMVC           : 1;	/* Network Management Vector Changed */
		unsigned int TI0            : 1;	/* Timer Service Request 0 */
		unsigned int TI1            : 1;	/* Timer Service Request 1 */
		unsigned int TIBC           : 1;	/* Transfer Input Buffer Completed */
		unsigned int TOBC           : 1;	/* Transfer Output Buffer Completed */
		unsigned int SWE            : 1;	/* Stop Watch Event */
		unsigned int SUCS           : 1;	/* Startup Completed Successfully */
		unsigned int MBSI           : 1;	/* Message Buffer Status Service Request */
		unsigned int SDS            : 1;	/* Start of Dynamic Segment */
		unsigned int WUPA           : 1;	/* Wakeup Pattern Channel A */
		unsigned int MTSA           : 1;	/* MTS Received on Channel A (vSS!ValidMTSA) */
		unsigned int                : 6;
		unsigned int WUPB           : 1;	/* Wakeup Pattern Channel B */
		unsigned int MTSB           : 1;	/* MTS Received on Channel B (vSS!ValidMTSB) */
		unsigned int                : 6;
	} B;
	int I;
	unsigned int U;

} ERAY_SIR_type;
#define ERAY_SIR	(*( ERAY_SIR_type *) 0xf001c024u)	/* Status Service Request Register */

typedef volatile union
{
	struct
	{ 
		unsigned int ESWT           : 1;	/* Enable Stop Watch Trigger */
		unsigned int SWMS           : 1;	/* Stop Watch Mode Select */
		unsigned int EDGE           : 1;	/* Stop Watch Trigger Edge Select */
		unsigned int SSWT           : 1;	/* Software Stop Watch Trigger */
		unsigned int EETP           : 1;	/* Enable External Trigger Pin */
		unsigned int EINT0          : 1;	/* Enable Service Request 0 Trigger */
		unsigned int EINT1          : 1;	/* Enable Service Request 1 Trigger */
		unsigned int                : 1;
		/* const */ unsigned int SCCV           : 6;	/* Stopped Cycle Counter Value */
		unsigned int                : 2;
		/* const */ unsigned int SMTV           : 14;	/* Stopped Macrotick Value */
		unsigned int                : 2;
	} B;
	int I;
	unsigned int U;

} ERAY_STPW1_type;
#define ERAY_STPW1	(*( ERAY_STPW1_type *) 0xf001c04cu)	/* Stop Watch Register 1 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int SSCVA          : 11;	/* Stop Watch Captured Slot Counter Value Channel A */
		/* const */ unsigned int                : 5;
		/* const */ unsigned int SSCVB          : 11;	/* Stop Watch Captured Slot Counter Value Channel B */
		/* const */ unsigned int                : 5;
	} B;
	int I;
	unsigned int U;

} ERAY_STPW2_type;
#define ERAY_STPW2	(*( ERAY_STPW2_type *) 0xf001c050u)	/* Stop Watch Register 2 */

typedef volatile union
{
	struct
	{ 
		unsigned int CMD            : 4;	/* CHI Command Vector */
		unsigned int                : 3;
		/* const */ unsigned int PBSY           : 1;	/* POC Busy */
		unsigned int TXST           : 1;	/* Transmit Startup Frame in Key Slot (pKeySlotUsedForStartup) */
		unsigned int TXSY           : 1;	/* Transmit SYNC Frame in Key Slot(pKeySlotUsedForSync) */
		unsigned int                : 1;
		unsigned int CSA            : 5;	/* Cold Start Attempts(gColdStartAttempts) */
		unsigned int PTA            : 5;	/* Passive to Active (pAllowPassiveToActive) */
		unsigned int WUCS           : 1;	/* Wakeup Channel Select (pWakeupChannel) */
		unsigned int TSM            : 1;	/* Transmission Slot Mode (pSingleSlotEnabled) */
		unsigned int HCSE           : 1;	/* Halt due to Clock Sync Error (pAllowHaltDueToClock) */
		unsigned int MTSA           : 1;	/* Select Channel A for MTS Transmission */
		unsigned int MTSB           : 1;	/* Select Channel B for MTS Transmission */
		unsigned int CCHA           : 1;	/* Connected to Channel A (pChannels) */
		unsigned int CCHB           : 1;	/* Connected to Channel B (pChannels) */
		unsigned int                : 4;
	} B;
	int I;
	unsigned int U;

} ERAY_SUCC1_type;
#define ERAY_SUCC1	(*( ERAY_SUCC1_type *) 0xf001c080u)	/* SUC Configuration Register 1 */

typedef volatile union
{
	struct
	{ 
		unsigned int LT             : 21;	/* Listen Timeout (pdListenTimeout) */
		unsigned int                : 3;
		unsigned int LTN            : 4;	/* Listen Time-out Noise (gListenNoise - 1) */
		unsigned int                : 4;
	} B;
	int I;
	unsigned int U;

} ERAY_SUCC2_type;
#define ERAY_SUCC2	(*( ERAY_SUCC2_type *) 0xf001c084u)	/* SUC Configuration Register 2 */

typedef volatile union
{
	struct
	{ 
		unsigned int WCP            : 4;	/* Maximum Without Clock Correction Passive (gMaxWithoutClockCorrectionPassive) */
		unsigned int WCF            : 4;	/* Maximum Without Clock Correction Fatal (gMaxWithoutClockCorrecti on Fatal) */
		unsigned int                : 24;
	} B;
	int I;
	unsigned int U;

} ERAY_SUCC3_type;
#define ERAY_SUCC3	(*( ERAY_SUCC3_type *) 0xf001c088u)	/* SUC Configuration Register 3 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int SESA           : 1;	/* Syntax Error in Symbol Window Channel A (vSS!SyntaxErrorA) */
		/* const */ unsigned int SBSA           : 1;	/* Slot Boundary Violation in Symbol Window Channel A (vSS!BViolationA) */
		/* const */ unsigned int TCSA           : 1;	/* Transmission Conflict in Symbol Window Channel A (vSS!TxConflictA) */
		/* const */ unsigned int SESB           : 1;	/* Syntax Error in Symbol Window Channel B (vSS!SyntaxErrorB) */
		/* const */ unsigned int SBSB           : 1;	/* Slot Boundary Violation in Symbol Window Channel B (vSS!BViolationB) */
		/* const */ unsigned int TCSB           : 1;	/* Transmission Conflict in Symbol Window Channel B (vSS!TxConflictB) */
		/* const */ unsigned int MTSA           : 1;	/* MTS Received on Channel A (vSS!ValidMTSA) */
		/* const */ unsigned int MTSB           : 1;	/* MTS Received on Channel B (vSS!ValidMTSB) */
		/* const */ unsigned int SENA           : 1;	/* Syntax Error during network idle time (NIT) Channel A (vSS!SyntaxErrorA) */
		/* const */ unsigned int SBNA           : 1;	/* Slot Boundary Violation during network idle time (NIT) Channel A (vSS!BViolationA) */
		/* const */ unsigned int SENB           : 1;	/* Syntax Error during network idle time (NIT) Channel B (vSS!SyntaxErrorB) */
		/* const */ unsigned int SBNB           : 1;	/* Slot Boundary Violation during network idle time (NIT) Channel B (vSS!BViolationB) */
		/* const */ unsigned int                : 20;
	} B;
	int I;
	unsigned int U;

} ERAY_SWNIT_type;
#define ERAY_SWNIT	(*( ERAY_SWNIT_type *) 0xf001c124u)	/* Symbol Window and Network Idle Time Status */

typedef volatile union
{
	struct
	{ 
		unsigned int T0RC           : 1;	/* Timer 0 Run Control */
		unsigned int T0MS           : 1;	/* Timer 0 Mode Select */
		unsigned int                : 6;
		unsigned int T0CC           : 7;	/* Timer 0 Cycle Code */
		unsigned int                : 1;
		unsigned int T0MO           : 14;	/* Timer 0 Macrotick Offset */
		unsigned int                : 2;
	} B;
	int I;
	unsigned int U;

} ERAY_T0C_type;
#define ERAY_T0C	(*( ERAY_T0C_type *) 0xf001c044u)	/* Timer 0 Configuration */

typedef volatile union
{
	struct
	{ 
		unsigned int T1RC           : 1;	/* Timer 1 Run Control */
		unsigned int T1MS           : 1;	/* Timer 1 Mode Select */
		unsigned int                : 14;
		unsigned int T1MC           : 14;	/* Timer 1 Macrotick Count */
		unsigned int                : 2;
	} B;
	int I;
	unsigned int U;

} ERAY_T1C_type;
#define ERAY_T1C	(*( ERAY_T1C_type *) 0xf001c048u)	/* Timer 1 Configuration */

typedef volatile union
{
	struct
	{ 
		unsigned int WRTEN          : 1;	/* Write Test Register Enable */
		unsigned int ELBE           : 1;	/* External Loop Back Enable */
		unsigned int                : 2;
		unsigned int TMC            : 2;	/* Test Multiplexer Control */
		unsigned int                : 2;
		/* const */ unsigned int AOA            : 1;	/* Activity on A */
		/* const */ unsigned int AOB            : 1;	/* Activity on B */
		unsigned int                : 6;
		/* const */ unsigned int RXA            : 1;	/* Read Channel A Receive Pin */
		/* const */ unsigned int RXB            : 1;	/* Read Channel B Receive Pin */
		unsigned int TXA            : 1;	/* Read or Write to Channel A Transmit Pin */
		unsigned int TXB            : 1;	/* Read or Write to Channel B Transmit Pin */
		unsigned int TXENA          : 1;	/* Read or Write to Channel A Transmit Enable Pin */
		unsigned int TXENB          : 1;	/* Read or Write to Channel B Transmit Enable Pin */
		unsigned int                : 2;
		/* const */ unsigned int CERA           : 4;	/* Coding Error Report Channel A */
		/* const */ unsigned int CERB           : 4;	/* Coding Error Report Channel B */
	} B;
	int I;
	unsigned int U;

} ERAY_TEST1_type;
#define ERAY_TEST1	(*( ERAY_TEST1_type *) 0xf001c010u)	/* Test Register 1 */

typedef volatile union
{
	struct
	{ 
		unsigned int RS             : 3;	/* RAM Select */
		unsigned int                : 1;
		unsigned int SSEL           : 3;	/* Segment Select */
		unsigned int                : 7;
		unsigned int WRECC          : 1;	/* Write ECC Data Enable */
		unsigned int                : 17;
	} B;
	int I;
	unsigned int U;

} ERAY_TEST2_type;
#define ERAY_TEST2	(*( ERAY_TEST2_type *) 0xf001c014u)	/* Test Register 2 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int TXR0           : 1;	/* Transmission Request 0 (0 = 0-31) */
		/* const */ unsigned int TXR1           : 1;	/* Transmission Request 1 (1 = 0-31) */
		/* const */ unsigned int TXR2           : 1;	/* Transmission Request 2 (2 = 0-31) */
		/* const */ unsigned int TXR3           : 1;	/* Transmission Request 3 (3 = 0-31) */
		/* const */ unsigned int TXR4           : 1;	/* Transmission Request 4 (4 = 0-31) */
		/* const */ unsigned int TXR5           : 1;	/* Transmission Request 5 (5 = 0-31) */
		/* const */ unsigned int TXR6           : 1;	/* Transmission Request 6 (6 = 0-31) */
		/* const */ unsigned int TXR7           : 1;	/* Transmission Request 7 (7 = 0-31) */
		/* const */ unsigned int TXR8           : 1;	/* Transmission Request 8 (8 = 0-31) */
		/* const */ unsigned int TXR9           : 1;	/* Transmission Request 9 (9 = 0-31) */
		/* const */ unsigned int TXR10          : 1;	/* Transmission Request 10 (10 = 0-31) */
		/* const */ unsigned int TXR11          : 1;	/* Transmission Request 11 (11 = 0-31) */
		/* const */ unsigned int TXR12          : 1;	/* Transmission Request 12 (12 = 0-31) */
		/* const */ unsigned int TXR13          : 1;	/* Transmission Request 13 (13 = 0-31) */
		/* const */ unsigned int TXR14          : 1;	/* Transmission Request 14 (14 = 0-31) */
		/* const */ unsigned int TXR15          : 1;	/* Transmission Request 15 (15 = 0-31) */
		/* const */ unsigned int TXR16          : 1;	/* Transmission Request 16 (16 = 0-31) */
		/* const */ unsigned int TXR17          : 1;	/* Transmission Request 17 (17 = 0-31) */
		/* const */ unsigned int TXR18          : 1;	/* Transmission Request 18 (18 = 0-31) */
		/* const */ unsigned int TXR19          : 1;	/* Transmission Request 19 (19 = 0-31) */
		/* const */ unsigned int TXR20          : 1;	/* Transmission Request 20 (20 = 0-31) */
		/* const */ unsigned int TXR21          : 1;	/* Transmission Request 21 (21 = 0-31) */
		/* const */ unsigned int TXR22          : 1;	/* Transmission Request 22 (22 = 0-31) */
		/* const */ unsigned int TXR23          : 1;	/* Transmission Request 23 (23 = 0-31) */
		/* const */ unsigned int TXR24          : 1;	/* Transmission Request 24 (24 = 0-31) */
		/* const */ unsigned int TXR25          : 1;	/* Transmission Request 25 (25 = 0-31) */
		/* const */ unsigned int TXR26          : 1;	/* Transmission Request 26 (26 = 0-31) */
		/* const */ unsigned int TXR27          : 1;	/* Transmission Request 27 (27 = 0-31) */
		/* const */ unsigned int TXR28          : 1;	/* Transmission Request 28 (28 = 0-31) */
		/* const */ unsigned int TXR29          : 1;	/* Transmission Request 29 (29 = 0-31) */
		/* const */ unsigned int TXR30          : 1;	/* Transmission Request 30 (30 = 0-31) */
		/* const */ unsigned int TXR31          : 1;	/* Transmission Request 31 (31 = 0-31) */
	} B;
	int I;
	unsigned int U;

} ERAY_TXRQ1_type;
#define ERAY_TXRQ1	(*( ERAY_TXRQ1_type *) 0xf001c320u)	/* Transmission Request Register 1 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int TXR32          : 1;	/* Transmission Request 32 (32 = 32-63) */
		/* const */ unsigned int TXR33          : 1;	/* Transmission Request 33 (33 = 32-63) */
		/* const */ unsigned int TXR34          : 1;	/* Transmission Request 34 (34 = 32-63) */
		/* const */ unsigned int TXR35          : 1;	/* Transmission Request 35 (35 = 32-63) */
		/* const */ unsigned int TXR36          : 1;	/* Transmission Request 36 (36 = 32-63) */
		/* const */ unsigned int TXR37          : 1;	/* Transmission Request 37 (37 = 32-63) */
		/* const */ unsigned int TXR38          : 1;	/* Transmission Request 38 (38 = 32-63) */
		/* const */ unsigned int TXR39          : 1;	/* Transmission Request 39 (39 = 32-63) */
		/* const */ unsigned int TXR40          : 1;	/* Transmission Request 40 (40 = 32-63) */
		/* const */ unsigned int TXR41          : 1;	/* Transmission Request 41 (41 = 32-63) */
		/* const */ unsigned int TXR42          : 1;	/* Transmission Request 42 (42 = 32-63) */
		/* const */ unsigned int TXR43          : 1;	/* Transmission Request 43 (43 = 32-63) */
		/* const */ unsigned int TXR44          : 1;	/* Transmission Request 44 (44 = 32-63) */
		/* const */ unsigned int TXR45          : 1;	/* Transmission Request 45 (45 = 32-63) */
		/* const */ unsigned int TXR46          : 1;	/* Transmission Request 46 (46 = 32-63) */
		/* const */ unsigned int TXR47          : 1;	/* Transmission Request 47 (47 = 32-63) */
		/* const */ unsigned int TXR48          : 1;	/* Transmission Request 48 (48 = 32-63) */
		/* const */ unsigned int TXR49          : 1;	/* Transmission Request 49 (49 = 32-63) */
		/* const */ unsigned int TXR50          : 1;	/* Transmission Request 50 (50 = 32-63) */
		/* const */ unsigned int TXR51          : 1;	/* Transmission Request 51 (51 = 32-63) */
		/* const */ unsigned int TXR52          : 1;	/* Transmission Request 52 (52 = 32-63) */
		/* const */ unsigned int TXR53          : 1;	/* Transmission Request 53 (53 = 32-63) */
		/* const */ unsigned int TXR54          : 1;	/* Transmission Request 54 (54 = 32-63) */
		/* const */ unsigned int TXR55          : 1;	/* Transmission Request 55 (55 = 32-63) */
		/* const */ unsigned int TXR56          : 1;	/* Transmission Request 56 (56 = 32-63) */
		/* const */ unsigned int TXR57          : 1;	/* Transmission Request 57 (57 = 32-63) */
		/* const */ unsigned int TXR58          : 1;	/* Transmission Request 58 (58 = 32-63) */
		/* const */ unsigned int TXR59          : 1;	/* Transmission Request 59 (59 = 32-63) */
		/* const */ unsigned int TXR60          : 1;	/* Transmission Request 60 (60 = 32-63) */
		/* const */ unsigned int TXR61          : 1;	/* Transmission Request 61 (61 = 32-63) */
		/* const */ unsigned int TXR62          : 1;	/* Transmission Request 62 (62 = 32-63) */
		/* const */ unsigned int TXR63          : 1;	/* Transmission Request 63 (63 = 32-63) */
	} B;
	int I;
	unsigned int U;

} ERAY_TXRQ2_type;
#define ERAY_TXRQ2	(*( ERAY_TXRQ2_type *) 0xf001c324u)	/* Transmission Request Register 2 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int TXR64          : 1;	/* Transmission Request 64 (64 = 64-95) */
		/* const */ unsigned int TXR65          : 1;	/* Transmission Request 65 (65 = 64-95) */
		/* const */ unsigned int TXR66          : 1;	/* Transmission Request 66 (66 = 64-95) */
		/* const */ unsigned int TXR67          : 1;	/* Transmission Request 67 (67 = 64-95) */
		/* const */ unsigned int TXR68          : 1;	/* Transmission Request 68 (68 = 64-95) */
		/* const */ unsigned int TXR69          : 1;	/* Transmission Request 69 (69 = 64-95) */
		/* const */ unsigned int TXR70          : 1;	/* Transmission Request 70 (70 = 64-95) */
		/* const */ unsigned int TXR71          : 1;	/* Transmission Request 71 (71 = 64-95) */
		/* const */ unsigned int TXR72          : 1;	/* Transmission Request 72 (72 = 64-95) */
		/* const */ unsigned int TXR73          : 1;	/* Transmission Request 73 (73 = 64-95) */
		/* const */ unsigned int TXR74          : 1;	/* Transmission Request 74 (74 = 64-95) */
		/* const */ unsigned int TXR75          : 1;	/* Transmission Request 75 (75 = 64-95) */
		/* const */ unsigned int TXR76          : 1;	/* Transmission Request 76 (76 = 64-95) */
		/* const */ unsigned int TXR77          : 1;	/* Transmission Request 77 (77 = 64-95) */
		/* const */ unsigned int TXR78          : 1;	/* Transmission Request 78 (78 = 64-95) */
		/* const */ unsigned int TXR79          : 1;	/* Transmission Request 79 (79 = 64-95) */
		/* const */ unsigned int TXR80          : 1;	/* Transmission Request 80 (80 = 64-95) */
		/* const */ unsigned int TXR81          : 1;	/* Transmission Request 81 (81 = 64-95) */
		/* const */ unsigned int TXR82          : 1;	/* Transmission Request 82 (82 = 64-95) */
		/* const */ unsigned int TXR83          : 1;	/* Transmission Request 83 (83 = 64-95) */
		/* const */ unsigned int TXR84          : 1;	/* Transmission Request 84 (84 = 64-95) */
		/* const */ unsigned int TXR85          : 1;	/* Transmission Request 85 (85 = 64-95) */
		/* const */ unsigned int TXR86          : 1;	/* Transmission Request 86 (86 = 64-95) */
		/* const */ unsigned int TXR87          : 1;	/* Transmission Request 87 (87 = 64-95) */
		/* const */ unsigned int TXR88          : 1;	/* Transmission Request 88 (88 = 64-95) */
		/* const */ unsigned int TXR89          : 1;	/* Transmission Request 89 (89 = 64-95) */
		/* const */ unsigned int TXR90          : 1;	/* Transmission Request 90 (90 = 64-95) */
		/* const */ unsigned int TXR91          : 1;	/* Transmission Request 91 (91 = 64-95) */
		/* const */ unsigned int TXR92          : 1;	/* Transmission Request 92 (92 = 64-95) */
		/* const */ unsigned int TXR93          : 1;	/* Transmission Request 93 (93 = 64-95) */
		/* const */ unsigned int TXR94          : 1;	/* Transmission Request 94 (94 = 64-95) */
		/* const */ unsigned int TXR95          : 1;	/* Transmission Request 95 (95 = 64-95) */
	} B;
	int I;
	unsigned int U;

} ERAY_TXRQ3_type;
#define ERAY_TXRQ3	(*( ERAY_TXRQ3_type *) 0xf001c328u)	/* Transmission Request Register 3 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int TXR96          : 1;	/* Transmission Request 96 (96 = 96-127) */
		/* const */ unsigned int TXR97          : 1;	/* Transmission Request 97 (97 = 96-127) */
		/* const */ unsigned int TXR98          : 1;	/* Transmission Request 98 (98 = 96-127) */
		/* const */ unsigned int TXR99          : 1;	/* Transmission Request 99 (99 = 96-127) */
		/* const */ unsigned int TXR100         : 1;	/* Transmission Request 100 (100 = 96-127) */
		/* const */ unsigned int TXR101         : 1;	/* Transmission Request 101 (101 = 96-127) */
		/* const */ unsigned int TXR102         : 1;	/* Transmission Request 102 (102 = 96-127) */
		/* const */ unsigned int TXR103         : 1;	/* Transmission Request 103 (103 = 96-127) */
		/* const */ unsigned int TXR104         : 1;	/* Transmission Request 104 (104 = 96-127) */
		/* const */ unsigned int TXR105         : 1;	/* Transmission Request 105 (105 = 96-127) */
		/* const */ unsigned int TXR106         : 1;	/* Transmission Request 106 (106 = 96-127) */
		/* const */ unsigned int TXR107         : 1;	/* Transmission Request 107 (107 = 96-127) */
		/* const */ unsigned int TXR108         : 1;	/* Transmission Request 108 (108 = 96-127) */
		/* const */ unsigned int TXR109         : 1;	/* Transmission Request 109 (109 = 96-127) */
		/* const */ unsigned int TXR110         : 1;	/* Transmission Request 110 (110 = 96-127) */
		/* const */ unsigned int TXR111         : 1;	/* Transmission Request 111 (111 = 96-127) */
		/* const */ unsigned int TXR112         : 1;	/* Transmission Request 112 (112 = 96-127) */
		/* const */ unsigned int TXR113         : 1;	/* Transmission Request 113 (113 = 96-127) */
		/* const */ unsigned int TXR114         : 1;	/* Transmission Request 114 (114 = 96-127) */
		/* const */ unsigned int TXR115         : 1;	/* Transmission Request 115 (115 = 96-127) */
		/* const */ unsigned int TXR116         : 1;	/* Transmission Request 116 (116 = 96-127) */
		/* const */ unsigned int TXR117         : 1;	/* Transmission Request 117 (117 = 96-127) */
		/* const */ unsigned int TXR118         : 1;	/* Transmission Request 118 (118 = 96-127) */
		/* const */ unsigned int TXR119         : 1;	/* Transmission Request 119 (119 = 96-127) */
		/* const */ unsigned int TXR120         : 1;	/* Transmission Request 120 (120 = 96-127) */
		/* const */ unsigned int TXR121         : 1;	/* Transmission Request 121 (121 = 96-127) */
		/* const */ unsigned int TXR122         : 1;	/* Transmission Request 122 (122 = 96-127) */
		/* const */ unsigned int TXR123         : 1;	/* Transmission Request 123 (123 = 96-127) */
		/* const */ unsigned int TXR124         : 1;	/* Transmission Request 124 (124 = 96-127) */
		/* const */ unsigned int TXR125         : 1;	/* Transmission Request 125 (125 = 96-127) */
		/* const */ unsigned int TXR126         : 1;	/* Transmission Request 126 (126 = 96-127) */
		/* const */ unsigned int TXR127         : 1;	/* Transmission Request 127 (127 = 96-127) */
	} B;
	int I;
	unsigned int U;

} ERAY_TXRQ4_type;
#define ERAY_TXRQ4	(*( ERAY_TXRQ4_type *) 0xf001c32cu)	/* Transmission Request Register 4 */

typedef volatile union
{
	struct
	{ 
		unsigned int MDWB0          : 8;	/* 32-Bit Word nn, Byte 0 */
		unsigned int MDWB1          : 8;	/* 32-Bit Word nn, Byte 1 */
		unsigned int MDWB2          : 8;	/* 32-Bit Word nn, Byte 2 */
		unsigned int MDWB3          : 8;	/* 32-Bit Word nn, Byte 3 */
	} B;
	int I;
	unsigned int U;

} ERAY_WRDS01_type;
#define ERAY_WRDS01	(*( ERAY_WRDS01_type *) 0xf001c400u)	/* Write Data Section 01 */
#define ERAY_WRDS02	(*( ERAY_WRDS01_type *) 0xf001c404u)	/* Write Data Section 02 */
#define ERAY_WRDS03	(*( ERAY_WRDS01_type *) 0xf001c408u)	/* Write Data Section 03 */
#define ERAY_WRDS04	(*( ERAY_WRDS01_type *) 0xf001c40cu)	/* Write Data Section 04 */
#define ERAY_WRDS05	(*( ERAY_WRDS01_type *) 0xf001c410u)	/* Write Data Section 05 */
#define ERAY_WRDS06	(*( ERAY_WRDS01_type *) 0xf001c414u)	/* Write Data Section 06 */
#define ERAY_WRDS07	(*( ERAY_WRDS01_type *) 0xf001c418u)	/* Write Data Section 07 */
#define ERAY_WRDS08	(*( ERAY_WRDS01_type *) 0xf001c41cu)	/* Write Data Section 08 */
#define ERAY_WRDS09	(*( ERAY_WRDS01_type *) 0xf001c420u)	/* Write Data Section 09 */
#define ERAY_WRDS10	(*( ERAY_WRDS01_type *) 0xf001c424u)	/* Write Data Section 10 */
#define ERAY_WRDS11	(*( ERAY_WRDS01_type *) 0xf001c428u)	/* Write Data Section 11 */
#define ERAY_WRDS12	(*( ERAY_WRDS01_type *) 0xf001c42cu)	/* Write Data Section 12 */
#define ERAY_WRDS13	(*( ERAY_WRDS01_type *) 0xf001c430u)	/* Write Data Section 13 */
#define ERAY_WRDS14	(*( ERAY_WRDS01_type *) 0xf001c434u)	/* Write Data Section 14 */
#define ERAY_WRDS15	(*( ERAY_WRDS01_type *) 0xf001c438u)	/* Write Data Section 15 */
#define ERAY_WRDS16	(*( ERAY_WRDS01_type *) 0xf001c43cu)	/* Write Data Section 16 */
#define ERAY_WRDS17	(*( ERAY_WRDS01_type *) 0xf001c440u)	/* Write Data Section 17 */
#define ERAY_WRDS18	(*( ERAY_WRDS01_type *) 0xf001c444u)	/* Write Data Section 18 */
#define ERAY_WRDS19	(*( ERAY_WRDS01_type *) 0xf001c448u)	/* Write Data Section 19 */
#define ERAY_WRDS20	(*( ERAY_WRDS01_type *) 0xf001c44cu)	/* Write Data Section 20 */
#define ERAY_WRDS21	(*( ERAY_WRDS01_type *) 0xf001c450u)	/* Write Data Section 21 */
#define ERAY_WRDS22	(*( ERAY_WRDS01_type *) 0xf001c454u)	/* Write Data Section 22 */
#define ERAY_WRDS23	(*( ERAY_WRDS01_type *) 0xf001c458u)	/* Write Data Section 23 */
#define ERAY_WRDS24	(*( ERAY_WRDS01_type *) 0xf001c45cu)	/* Write Data Section 24 */
#define ERAY_WRDS25	(*( ERAY_WRDS01_type *) 0xf001c460u)	/* Write Data Section 25 */
#define ERAY_WRDS26	(*( ERAY_WRDS01_type *) 0xf001c464u)	/* Write Data Section 26 */
#define ERAY_WRDS27	(*( ERAY_WRDS01_type *) 0xf001c468u)	/* Write Data Section 27 */
#define ERAY_WRDS28	(*( ERAY_WRDS01_type *) 0xf001c46cu)	/* Write Data Section 28 */
#define ERAY_WRDS29	(*( ERAY_WRDS01_type *) 0xf001c470u)	/* Write Data Section 29 */
#define ERAY_WRDS30	(*( ERAY_WRDS01_type *) 0xf001c474u)	/* Write Data Section 30 */
#define ERAY_WRDS31	(*( ERAY_WRDS01_type *) 0xf001c478u)	/* Write Data Section 31 */
#define ERAY_WRDS32	(*( ERAY_WRDS01_type *) 0xf001c47cu)	/* Write Data Section 32 */
#define ERAY_WRDS33	(*( ERAY_WRDS01_type *) 0xf001c480u)	/* Write Data Section 33 */
#define ERAY_WRDS34	(*( ERAY_WRDS01_type *) 0xf001c484u)	/* Write Data Section 34 */
#define ERAY_WRDS35	(*( ERAY_WRDS01_type *) 0xf001c488u)	/* Write Data Section 35 */
#define ERAY_WRDS36	(*( ERAY_WRDS01_type *) 0xf001c48cu)	/* Write Data Section 36 */
#define ERAY_WRDS37	(*( ERAY_WRDS01_type *) 0xf001c490u)	/* Write Data Section 37 */
#define ERAY_WRDS38	(*( ERAY_WRDS01_type *) 0xf001c494u)	/* Write Data Section 38 */
#define ERAY_WRDS39	(*( ERAY_WRDS01_type *) 0xf001c498u)	/* Write Data Section 39 */
#define ERAY_WRDS40	(*( ERAY_WRDS01_type *) 0xf001c49cu)	/* Write Data Section 40 */
#define ERAY_WRDS41	(*( ERAY_WRDS01_type *) 0xf001c4a0u)	/* Write Data Section 41 */
#define ERAY_WRDS42	(*( ERAY_WRDS01_type *) 0xf001c4a4u)	/* Write Data Section 42 */
#define ERAY_WRDS43	(*( ERAY_WRDS01_type *) 0xf001c4a8u)	/* Write Data Section 43 */
#define ERAY_WRDS44	(*( ERAY_WRDS01_type *) 0xf001c4acu)	/* Write Data Section 44 */
#define ERAY_WRDS45	(*( ERAY_WRDS01_type *) 0xf001c4b0u)	/* Write Data Section 45 */
#define ERAY_WRDS46	(*( ERAY_WRDS01_type *) 0xf001c4b4u)	/* Write Data Section 46 */
#define ERAY_WRDS47	(*( ERAY_WRDS01_type *) 0xf001c4b8u)	/* Write Data Section 47 */
#define ERAY_WRDS48	(*( ERAY_WRDS01_type *) 0xf001c4bcu)	/* Write Data Section 48 */
#define ERAY_WRDS49	(*( ERAY_WRDS01_type *) 0xf001c4c0u)	/* Write Data Section 49 */
#define ERAY_WRDS50	(*( ERAY_WRDS01_type *) 0xf001c4c4u)	/* Write Data Section 50 */
#define ERAY_WRDS51	(*( ERAY_WRDS01_type *) 0xf001c4c8u)	/* Write Data Section 51 */
#define ERAY_WRDS52	(*( ERAY_WRDS01_type *) 0xf001c4ccu)	/* Write Data Section 52 */
#define ERAY_WRDS53	(*( ERAY_WRDS01_type *) 0xf001c4d0u)	/* Write Data Section 53 */
#define ERAY_WRDS54	(*( ERAY_WRDS01_type *) 0xf001c4d4u)	/* Write Data Section 54 */
#define ERAY_WRDS55	(*( ERAY_WRDS01_type *) 0xf001c4d8u)	/* Write Data Section 55 */
#define ERAY_WRDS56	(*( ERAY_WRDS01_type *) 0xf001c4dcu)	/* Write Data Section 56 */
#define ERAY_WRDS57	(*( ERAY_WRDS01_type *) 0xf001c4e0u)	/* Write Data Section 57 */
#define ERAY_WRDS58	(*( ERAY_WRDS01_type *) 0xf001c4e4u)	/* Write Data Section 58 */
#define ERAY_WRDS59	(*( ERAY_WRDS01_type *) 0xf001c4e8u)	/* Write Data Section 59 */
#define ERAY_WRDS60	(*( ERAY_WRDS01_type *) 0xf001c4ecu)	/* Write Data Section 60 */
#define ERAY_WRDS61	(*( ERAY_WRDS01_type *) 0xf001c4f0u)	/* Write Data Section 61 */
#define ERAY_WRDS62	(*( ERAY_WRDS01_type *) 0xf001c4f4u)	/* Write Data Section 62 */
#define ERAY_WRDS63	(*( ERAY_WRDS01_type *) 0xf001c4f8u)	/* Write Data Section 63 */
#define ERAY_WRDS64	(*( ERAY_WRDS01_type *) 0xf001c4fcu)	/* Write Data Section 64 */

typedef volatile union
{
	struct
	{ 
		unsigned int FID            : 11;	/* Frame ID */
		unsigned int                : 5;
		unsigned int CYC            : 7;	/* Cycle Code */
		unsigned int                : 1;
		unsigned int CHA            : 1;	/* Channel Filter Control A */
		unsigned int CHB            : 1;	/* Channel Filter Control B */
		unsigned int CFG            : 1;	/* Message Buffer Direction Configuration Bit */
		unsigned int PPIT           : 1;	/* Payload Preamble Indicator Transmit */
		unsigned int TXM            : 1;	/* Transmission Mode */
		unsigned int MBI            : 1;	/* Message Buffer Service Request */
		unsigned int                : 2;
	} B;
	int I;
	unsigned int U;

} ERAY_WRHS1_type;
#define ERAY_WRHS1	(*( ERAY_WRHS1_type *) 0xf001c500u)	/* Write Header Section 1 */

typedef volatile union
{
	struct
	{ 
		unsigned int CRC            : 11;	/* Header CRC (vRF!Header!HeaderCRC) */
		unsigned int                : 5;
		unsigned int PLC            : 7;	/* Payload Length Configured */
		unsigned int                : 9;
	} B;
	int I;
	unsigned int U;

} ERAY_WRHS2_type;
#define ERAY_WRHS2	(*( ERAY_WRHS2_type *) 0xf001c504u)	/* Write Header Section 2 */

typedef volatile union
{
	struct
	{ 
		unsigned int DP             : 11;	/* Data Pointer */
		unsigned int                : 21;
	} B;
	int I;
	unsigned int U;

} ERAY_WRHS3_type;
#define ERAY_WRHS3	(*( ERAY_WRHS3_type *) 0xf001c508u)	/* Write Header Section 3 */


/* GTM */
typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 EN0            : 1;	/* Access Enable for Master TAG ID 0 */
		unsigned __sfrbit32 EN1            : 1;	/* Access Enable for Master TAG ID 1 */
		unsigned __sfrbit32 EN2            : 1;	/* Access Enable for Master TAG ID 2 */
		unsigned __sfrbit32 EN3            : 1;	/* Access Enable for Master TAG ID 3 */
		unsigned __sfrbit32 EN4            : 1;	/* Access Enable for Master TAG ID 4 */
		unsigned __sfrbit32 EN5            : 1;	/* Access Enable for Master TAG ID 5 */
		unsigned __sfrbit32 EN6            : 1;	/* Access Enable for Master TAG ID 6 */
		unsigned __sfrbit32 EN7            : 1;	/* Access Enable for Master TAG ID 7 */
		unsigned __sfrbit32 EN8            : 1;	/* Access Enable for Master TAG ID 8 */
		unsigned __sfrbit32 EN9            : 1;	/* Access Enable for Master TAG ID 9 */
		unsigned __sfrbit32 EN10           : 1;	/* Access Enable for Master TAG ID 10 */
		unsigned __sfrbit32 EN11           : 1;	/* Access Enable for Master TAG ID 11 */
		unsigned __sfrbit32 EN12           : 1;	/* Access Enable for Master TAG ID 12 */
		unsigned __sfrbit32 EN13           : 1;	/* Access Enable for Master TAG ID 13 */
		unsigned __sfrbit32 EN14           : 1;	/* Access Enable for Master TAG ID 14 */
		unsigned __sfrbit32 EN15           : 1;	/* Access Enable for Master TAG ID 15 */
		unsigned __sfrbit32 EN16           : 1;	/* Access Enable for Master TAG ID 16 */
		unsigned __sfrbit32 EN17           : 1;	/* Access Enable for Master TAG ID 17 */
		unsigned __sfrbit32 EN18           : 1;	/* Access Enable for Master TAG ID 18 */
		unsigned __sfrbit32 EN19           : 1;	/* Access Enable for Master TAG ID 19 */
		unsigned __sfrbit32 EN20           : 1;	/* Access Enable for Master TAG ID 20 */
		unsigned __sfrbit32 EN21           : 1;	/* Access Enable for Master TAG ID 21 */
		unsigned __sfrbit32 EN22           : 1;	/* Access Enable for Master TAG ID 22 */
		unsigned __sfrbit32 EN23           : 1;	/* Access Enable for Master TAG ID 23 */
		unsigned __sfrbit32 EN24           : 1;	/* Access Enable for Master TAG ID 24 */
		unsigned __sfrbit32 EN25           : 1;	/* Access Enable for Master TAG ID 25 */
		unsigned __sfrbit32 EN26           : 1;	/* Access Enable for Master TAG ID 26 */
		unsigned __sfrbit32 EN27           : 1;	/* Access Enable for Master TAG ID 27 */
		unsigned __sfrbit32 EN28           : 1;	/* Access Enable for Master TAG ID 28 */
		unsigned __sfrbit32 EN29           : 1;	/* Access Enable for Master TAG ID 29 */
		unsigned __sfrbit32 EN30           : 1;	/* Access Enable for Master TAG ID 30 */
		unsigned __sfrbit32 EN31           : 1;	/* Access Enable for Master TAG ID 31 */
	} B;
	int I;
	unsigned int U;

} GTM_ACCEN0_type;
#define GTM_ACCEN0	(*( GTM_ACCEN0_type *) 0xf019fdfcu)	/* Access Enable Register 0 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned __sfrbit32 Reserved       : 32;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GTM_ACCEN1_type;
#define GTM_ACCEN1	(*( GTM_ACCEN1_type *) 0xf019fdf8u)	/* Access Enable Register 1 */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 SEL0           : 4;	/* Output Selection for ADC0 GTM connection */
		unsigned __sfrbit32 SEL1           : 4;	/* Output Selection for ADC1 GTM connection */
		unsigned __sfrbit32 SEL2           : 4;	/* Output Selection for ADC2 GTM connection */
		unsigned __sfrbit32 SEL3           : 4;	/* Output Selection for ADC3 GTM connection */
		unsigned __sfrbit32 SEL4           : 4;	/* Output Selection for ADC4 GTM connection */
		unsigned __sfrbit32 SEL5           : 4;	/* Output Selection for ADC5 GTM connection */
		unsigned __sfrbit32 SEL6           : 4;	/* Output Selection for ADC6 GTM connection */
		unsigned __sfrbit32 SEL7           : 4;	/* Output Selection for ADC7 GTM connection */
	} B;
	int I;
	unsigned int U;

} GTM_ADCTRIG0OUT0_type;
#define GTM_ADCTRIG0OUT0	(*( GTM_ADCTRIG0OUT0_type *) 0xf019fdb0u)	/* ADC Trigger 0 Output Select 0 Register */
#define GTM_ADCTRIG1OUT0	(*( GTM_ADCTRIG0OUT0_type *) 0xf019fdb8u)	/* ADC Trigger 1 Output Select 0 Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 SEL0           : 4;	/* Output Selection for ADCx GTM connection */
		unsigned __sfrbit32                : 28;
	} B;
	int I;
	unsigned int U;

} GTM_ADCTRIG0OUT1_type;
#define GTM_ADCTRIG0OUT1	(*( GTM_ADCTRIG0OUT1_type *) 0xf019fdb4u)	/* ADC Trigger 0 Output Select 1 Register */
#define GTM_ADCTRIG1OUT1	(*( GTM_ADCTRIG0OUT1_type *) 0xf019fdbcu)	/* ADC Trigger 1 Output Select 1 Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned __sfrbit32 TO_ADDR        : 20;	/* AEI Timeout address */
		/* const */ unsigned __sfrbit32 TO_W1R0        : 1;	/* AEI Timeout Read/Write flag */
		/* const */ unsigned __sfrbit32 Reserved       : 11;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GTM_AEI_ADDR_XPT_type;
#define GTM_AEI_ADDR_XPT	(*( GTM_AEI_ADDR_XPT_type *) 0xf010000cu)	/* GTM AEI Timeout Exception Address Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 DATA           : 29;	/* Read/write data from/to FIFO */
		/* const */ unsigned __sfrbit32 Reserved       : 3;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GTM_AFD0_CH0_BUF_ACC_type;
#define GTM_AFD0_CH0_BUF_ACC	(*( GTM_AFD0_CH0_BUF_ACC_type *) 0xf0118080u)	/* AFD0 FIFO0 Channel 0 Buffer Access Register */
#define GTM_AFD0_CH1_BUF_ACC	(*( GTM_AFD0_CH0_BUF_ACC_type *) 0xf0118090u)	/* AFD0 FIFO0 Channel 1 Buffer Access Register */
#define GTM_AFD0_CH2_BUF_ACC	(*( GTM_AFD0_CH0_BUF_ACC_type *) 0xf01180a0u)	/* AFD0 FIFO0 Channel 2 Buffer Access Register */
#define GTM_AFD0_CH3_BUF_ACC	(*( GTM_AFD0_CH0_BUF_ACC_type *) 0xf01180b0u)	/* AFD0 FIFO0 Channel 3 Buffer Access Register */
#define GTM_AFD0_CH4_BUF_ACC	(*( GTM_AFD0_CH0_BUF_ACC_type *) 0xf01180c0u)	/* AFD0 FIFO0 Channel 4 Buffer Access Register */
#define GTM_AFD0_CH5_BUF_ACC	(*( GTM_AFD0_CH0_BUF_ACC_type *) 0xf01180d0u)	/* AFD0 FIFO0 Channel 5 Buffer Access Register */
#define GTM_AFD0_CH6_BUF_ACC	(*( GTM_AFD0_CH0_BUF_ACC_type *) 0xf01180e0u)	/* AFD0 FIFO0 Channel 6 Buffer Access Register */
#define GTM_AFD0_CH7_BUF_ACC	(*( GTM_AFD0_CH0_BUF_ACC_type *) 0xf01180f0u)	/* AFD0 FIFO0 Channel 7 Buffer Access Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 ADDR           : 9;	/* ARU address */
		/* const */ unsigned __sfrbit32 Reserved       : 3;	/* Reserved */
		unsigned __sfrbit32 RREQ           : 1;	/* Initiate read request */
		unsigned __sfrbit32 WREQ           : 1;	/* Initiate write request */
		/* const */ unsigned __sfrbit32 Reserved_5     : 18;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GTM_ARU_ACCESS_type;
#define GTM_ARU_ACCESS	(*( GTM_ARU_ACCESS_type *) 0xf0100280u)	/* ARU Access Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 DATA           : 29;	/* Upper ARU data word */
		/* const */ unsigned __sfrbit32 Reserved       : 3;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GTM_ARU_DATA_H_type;
#define GTM_ARU_DATA_H	(*( GTM_ARU_DATA_H_type *) 0xf0100284u)	/* ARU Access Register Upper Data Word */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 DATA           : 29;	/* Lower ARU data word */
		/* const */ unsigned __sfrbit32 Reserved       : 3;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GTM_ARU_DATA_L_type;
#define GTM_ARU_DATA_L	(*( GTM_ARU_DATA_L_type *) 0xf0100288u)	/* ARU Access Register Lower Data Word */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 ADDR           : 9;	/* ARU debugging address */
		/* const */ unsigned __sfrbit32 Reserved       : 23;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GTM_ARU_DBG_ACCESS0_type;
#define GTM_ARU_DBG_ACCESS0	(*( GTM_ARU_DBG_ACCESS0_type *) 0xf010028cu)	/* Debug Access Channel 0 */
#define GTM_ARU_DBG_ACCESS1	(*( GTM_ARU_DBG_ACCESS0_type *) 0xf0100298u)	/* Debug Access Channel 0 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned __sfrbit32 DATA           : 29;	/* Upper debug data word */
		/* const */ unsigned __sfrbit32 Reserved       : 3;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GTM_ARU_DBG_DATA0_H_type;
#define GTM_ARU_DBG_DATA0_H	(*( GTM_ARU_DBG_DATA0_H_type *) 0xf0100290u)	/* Debug Access 0 Transfer Register Upper Data Word */
#define GTM_ARU_DBG_DATA1_H	(*( GTM_ARU_DBG_DATA0_H_type *) 0xf010029cu)	/* Debug Access 1 Transfer Register Upper Data Word */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned __sfrbit32 DATA           : 29;	/* Lower debug data word */
		/* const */ unsigned __sfrbit32 Reserved       : 3;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GTM_ARU_DBG_DATA0_L_type;
#define GTM_ARU_DBG_DATA0_L	(*( GTM_ARU_DBG_DATA0_L_type *) 0xf0100294u)	/* Debug Access 0 Transfer Register Lower Data Word */
#define GTM_ARU_DBG_DATA1_L	(*( GTM_ARU_DBG_DATA0_L_type *) 0xf01002a0u)	/* Debug Access 1 Transfer Register Lower Data Word */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 NEW_DATA0_IRQ_EN: 1;	/* ARU_NEW_DATA0_IRQ interrupt enable */
		unsigned __sfrbit32 NEW_DATA1_IRQ_EN: 1;	/* ARU_NEW_DATA1_IRQ interrupt enable */
		unsigned __sfrbit32 ACC_ACK_IRQ_EN : 1;	/* ACC_ACK_IRQ interrupt enable */
		/* const */ unsigned __sfrbit32 Reserved       : 29;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GTM_ARU_IRQ_EN_type;
#define GTM_ARU_IRQ_EN	(*( GTM_ARU_IRQ_EN_type *) 0xf01002a8u)	/* ARU Interrupt Enable Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 TRG_NEW_DATA0  : 1;	/* Trigger new data 0 interrupt */
		unsigned __sfrbit32 TRG_NEW_DATA   : 1;	/* 1 Trigger new data 1 interrupt */
		unsigned __sfrbit32 TRG_ACC_ACK    : 1;	/* Trigger ACC_ACK interrupt */
		/* const */ unsigned __sfrbit32 Reserved       : 29;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GTM_ARU_IRQ_FORCINT_type;
#define GTM_ARU_IRQ_FORCINT	(*( GTM_ARU_IRQ_FORCINT_type *) 0xf01002acu)	/* ARU_NEW_DATA_IRQ Forcing Interrupt Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 IRQ_MODE       : 2;	/* IRQ mode selection */
		/* const */ unsigned __sfrbit32 Reserved       : 30;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GTM_ARU_IRQ_MODE_type;
#define GTM_ARU_IRQ_MODE	(*( GTM_ARU_IRQ_MODE_type *) 0xf01002b0u)	/* IRQ Mode Configuration Register */
#define GTM_ATOM0_CH0_IRQ_MODE	(*( GTM_ARU_IRQ_MODE_type *) 0xf010d02cu)	/* ATOM0 IRQ Mode Configuration Register */
#define GTM_ATOM0_CH1_IRQ_MODE	(*( GTM_ARU_IRQ_MODE_type *) 0xf010d0acu)	/* ATOM0 IRQ Mode Configuration Register */
#define GTM_ATOM0_CH2_IRQ_MODE	(*( GTM_ARU_IRQ_MODE_type *) 0xf010d12cu)	/* ATOM0 IRQ Mode Configuration Register */
#define GTM_ATOM0_CH3_IRQ_MODE	(*( GTM_ARU_IRQ_MODE_type *) 0xf010d1acu)	/* ATOM0 IRQ Mode Configuration Register */
#define GTM_ATOM0_CH4_IRQ_MODE	(*( GTM_ARU_IRQ_MODE_type *) 0xf010d22cu)	/* ATOM0 IRQ Mode Configuration Register */
#define GTM_ATOM0_CH5_IRQ_MODE	(*( GTM_ARU_IRQ_MODE_type *) 0xf010d2acu)	/* ATOM0 IRQ Mode Configuration Register */
#define GTM_ATOM0_CH6_IRQ_MODE	(*( GTM_ARU_IRQ_MODE_type *) 0xf010d32cu)	/* ATOM0 IRQ Mode Configuration Register */
#define GTM_ATOM0_CH7_IRQ_MODE	(*( GTM_ARU_IRQ_MODE_type *) 0xf010d3acu)	/* ATOM0 IRQ Mode Configuration Register */
#define GTM_ATOM1_CH0_IRQ_MODE	(*( GTM_ARU_IRQ_MODE_type *) 0xf010d82cu)	/* ATOM1 IRQ Mode Configuration Register */
#define GTM_ATOM1_CH1_IRQ_MODE	(*( GTM_ARU_IRQ_MODE_type *) 0xf010d8acu)	/* ATOM1 IRQ Mode Configuration Register */
#define GTM_ATOM1_CH2_IRQ_MODE	(*( GTM_ARU_IRQ_MODE_type *) 0xf010d92cu)	/* ATOM1 IRQ Mode Configuration Register */
#define GTM_ATOM1_CH3_IRQ_MODE	(*( GTM_ARU_IRQ_MODE_type *) 0xf010d9acu)	/* ATOM1 IRQ Mode Configuration Register */
#define GTM_ATOM1_CH4_IRQ_MODE	(*( GTM_ARU_IRQ_MODE_type *) 0xf010da2cu)	/* ATOM1 IRQ Mode Configuration Register */
#define GTM_ATOM1_CH5_IRQ_MODE	(*( GTM_ARU_IRQ_MODE_type *) 0xf010daacu)	/* ATOM1 IRQ Mode Configuration Register */
#define GTM_ATOM1_CH6_IRQ_MODE	(*( GTM_ARU_IRQ_MODE_type *) 0xf010db2cu)	/* ATOM1 IRQ Mode Configuration Register */
#define GTM_ATOM1_CH7_IRQ_MODE	(*( GTM_ARU_IRQ_MODE_type *) 0xf010dbacu)	/* ATOM1 IRQ Mode Configuration Register */
#define GTM_ATOM2_CH0_IRQ_MODE	(*( GTM_ARU_IRQ_MODE_type *) 0xf010e02cu)	/* ATOM2 IRQ Mode Configuration Register */
#define GTM_ATOM2_CH1_IRQ_MODE	(*( GTM_ARU_IRQ_MODE_type *) 0xf010e0acu)	/* ATOM2 IRQ Mode Configuration Register */
#define GTM_ATOM2_CH2_IRQ_MODE	(*( GTM_ARU_IRQ_MODE_type *) 0xf010e12cu)	/* ATOM2 IRQ Mode Configuration Register */
#define GTM_ATOM2_CH3_IRQ_MODE	(*( GTM_ARU_IRQ_MODE_type *) 0xf010e1acu)	/* ATOM2 IRQ Mode Configuration Register */
#define GTM_ATOM2_CH4_IRQ_MODE	(*( GTM_ARU_IRQ_MODE_type *) 0xf010e22cu)	/* ATOM2 IRQ Mode Configuration Register */
#define GTM_ATOM2_CH5_IRQ_MODE	(*( GTM_ARU_IRQ_MODE_type *) 0xf010e2acu)	/* ATOM2 IRQ Mode Configuration Register */
#define GTM_ATOM2_CH6_IRQ_MODE	(*( GTM_ARU_IRQ_MODE_type *) 0xf010e32cu)	/* ATOM2 IRQ Mode Configuration Register */
#define GTM_ATOM2_CH7_IRQ_MODE	(*( GTM_ARU_IRQ_MODE_type *) 0xf010e3acu)	/* ATOM2 IRQ Mode Configuration Register */
#define GTM_ATOM3_CH0_IRQ_MODE	(*( GTM_ARU_IRQ_MODE_type *) 0xf010e82cu)	/* ATOM3 IRQ Mode Configuration Register */
#define GTM_ATOM3_CH1_IRQ_MODE	(*( GTM_ARU_IRQ_MODE_type *) 0xf010e8acu)	/* ATOM3 IRQ Mode Configuration Register */
#define GTM_ATOM3_CH2_IRQ_MODE	(*( GTM_ARU_IRQ_MODE_type *) 0xf010e92cu)	/* ATOM3 IRQ Mode Configuration Register */
#define GTM_ATOM3_CH3_IRQ_MODE	(*( GTM_ARU_IRQ_MODE_type *) 0xf010e9acu)	/* ATOM3 IRQ Mode Configuration Register */
#define GTM_ATOM3_CH4_IRQ_MODE	(*( GTM_ARU_IRQ_MODE_type *) 0xf010ea2cu)	/* ATOM3 IRQ Mode Configuration Register */
#define GTM_ATOM3_CH5_IRQ_MODE	(*( GTM_ARU_IRQ_MODE_type *) 0xf010eaacu)	/* ATOM3 IRQ Mode Configuration Register */
#define GTM_ATOM3_CH6_IRQ_MODE	(*( GTM_ARU_IRQ_MODE_type *) 0xf010eb2cu)	/* ATOM3 IRQ Mode Configuration Register */
#define GTM_ATOM3_CH7_IRQ_MODE	(*( GTM_ARU_IRQ_MODE_type *) 0xf010ebacu)	/* ATOM3 IRQ Mode Configuration Register */
#define GTM_ATOM4_CH0_IRQ_MODE	(*( GTM_ARU_IRQ_MODE_type *) 0xf010f02cu)	/* ATOM4 IRQ Mode Configuration Register */
#define GTM_ATOM4_CH1_IRQ_MODE	(*( GTM_ARU_IRQ_MODE_type *) 0xf010f0acu)	/* ATOM4 IRQ Mode Configuration Register */
#define GTM_ATOM4_CH2_IRQ_MODE	(*( GTM_ARU_IRQ_MODE_type *) 0xf010f12cu)	/* ATOM4 IRQ Mode Configuration Register */
#define GTM_ATOM4_CH3_IRQ_MODE	(*( GTM_ARU_IRQ_MODE_type *) 0xf010f1acu)	/* ATOM4 IRQ Mode Configuration Register */
#define GTM_ATOM4_CH4_IRQ_MODE	(*( GTM_ARU_IRQ_MODE_type *) 0xf010f22cu)	/* ATOM4 IRQ Mode Configuration Register */
#define GTM_ATOM4_CH5_IRQ_MODE	(*( GTM_ARU_IRQ_MODE_type *) 0xf010f2acu)	/* ATOM4 IRQ Mode Configuration Register */
#define GTM_ATOM4_CH6_IRQ_MODE	(*( GTM_ARU_IRQ_MODE_type *) 0xf010f32cu)	/* ATOM4 IRQ Mode Configuration Register */
#define GTM_ATOM4_CH7_IRQ_MODE	(*( GTM_ARU_IRQ_MODE_type *) 0xf010f3acu)	/* ATOM4 IRQ Mode Configuration Register */
#define GTM_BRC_IRQ_MODE	(*( GTM_ARU_IRQ_MODE_type *) 0xf010046cu)	/* BRC IRQ Mode Configuration Register */
#define GTM_CMP_IRQ_MODE	(*( GTM_ARU_IRQ_MODE_type *) 0xf0100210u)	/* CMP IRQ Mode Configuration Register */
#define GTM_DPLL_IRQ_MODE	(*( GTM_ARU_IRQ_MODE_type *) 0xf012804cu)	/* DPLL Interrupt Mode Register */
#define GTM_MCS0_CH0_IRQ_MODE	(*( GTM_ARU_IRQ_MODE_type *) 0xf0130050u)	/* MCS0 IRQ Mode Configuration Register */
#define GTM_MCS0_CH1_IRQ_MODE	(*( GTM_ARU_IRQ_MODE_type *) 0xf01300d0u)	/* MCS0 IRQ Mode Configuration Register */
#define GTM_MCS0_CH2_IRQ_MODE	(*( GTM_ARU_IRQ_MODE_type *) 0xf0130150u)	/* MCS0 IRQ Mode Configuration Register */
#define GTM_MCS0_CH3_IRQ_MODE	(*( GTM_ARU_IRQ_MODE_type *) 0xf01301d0u)	/* MCS0 IRQ Mode Configuration Register */
#define GTM_MCS0_CH4_IRQ_MODE	(*( GTM_ARU_IRQ_MODE_type *) 0xf0130250u)	/* MCS0 IRQ Mode Configuration Register */
#define GTM_MCS0_CH5_IRQ_MODE	(*( GTM_ARU_IRQ_MODE_type *) 0xf01302d0u)	/* MCS0 IRQ Mode Configuration Register */
#define GTM_MCS0_CH6_IRQ_MODE	(*( GTM_ARU_IRQ_MODE_type *) 0xf0130350u)	/* MCS0 IRQ Mode Configuration Register */
#define GTM_MCS0_CH7_IRQ_MODE	(*( GTM_ARU_IRQ_MODE_type *) 0xf01303d0u)	/* MCS0 IRQ Mode Configuration Register */
#define GTM_MCS1_CH0_IRQ_MODE	(*( GTM_ARU_IRQ_MODE_type *) 0xf0131050u)	/* MCS1 IRQ Mode Configuration Register */
#define GTM_MCS1_CH1_IRQ_MODE	(*( GTM_ARU_IRQ_MODE_type *) 0xf01310d0u)	/* MCS1 IRQ Mode Configuration Register */
#define GTM_MCS1_CH2_IRQ_MODE	(*( GTM_ARU_IRQ_MODE_type *) 0xf0131150u)	/* MCS1 IRQ Mode Configuration Register */
#define GTM_MCS1_CH3_IRQ_MODE	(*( GTM_ARU_IRQ_MODE_type *) 0xf01311d0u)	/* MCS1 IRQ Mode Configuration Register */
#define GTM_MCS1_CH4_IRQ_MODE	(*( GTM_ARU_IRQ_MODE_type *) 0xf0131250u)	/* MCS1 IRQ Mode Configuration Register */
#define GTM_MCS1_CH5_IRQ_MODE	(*( GTM_ARU_IRQ_MODE_type *) 0xf01312d0u)	/* MCS1 IRQ Mode Configuration Register */
#define GTM_MCS1_CH6_IRQ_MODE	(*( GTM_ARU_IRQ_MODE_type *) 0xf0131350u)	/* MCS1 IRQ Mode Configuration Register */
#define GTM_MCS1_CH7_IRQ_MODE	(*( GTM_ARU_IRQ_MODE_type *) 0xf01313d0u)	/* MCS1 IRQ Mode Configuration Register */
#define GTM_MCS2_CH0_IRQ_MODE	(*( GTM_ARU_IRQ_MODE_type *) 0xf0132050u)	/* MCS2 IRQ Mode Configuration Register */
#define GTM_MCS2_CH1_IRQ_MODE	(*( GTM_ARU_IRQ_MODE_type *) 0xf01320d0u)	/* MCS2 IRQ Mode Configuration Register */
#define GTM_MCS2_CH2_IRQ_MODE	(*( GTM_ARU_IRQ_MODE_type *) 0xf0132150u)	/* MCS2 IRQ Mode Configuration Register */
#define GTM_MCS2_CH3_IRQ_MODE	(*( GTM_ARU_IRQ_MODE_type *) 0xf01321d0u)	/* MCS2 IRQ Mode Configuration Register */
#define GTM_MCS2_CH4_IRQ_MODE	(*( GTM_ARU_IRQ_MODE_type *) 0xf0132250u)	/* MCS2 IRQ Mode Configuration Register */
#define GTM_MCS2_CH5_IRQ_MODE	(*( GTM_ARU_IRQ_MODE_type *) 0xf01322d0u)	/* MCS2 IRQ Mode Configuration Register */
#define GTM_MCS2_CH6_IRQ_MODE	(*( GTM_ARU_IRQ_MODE_type *) 0xf0132350u)	/* MCS2 IRQ Mode Configuration Register */
#define GTM_MCS2_CH7_IRQ_MODE	(*( GTM_ARU_IRQ_MODE_type *) 0xf01323d0u)	/* MCS2 IRQ Mode Configuration Register */
#define GTM_MCS3_CH0_IRQ_MODE	(*( GTM_ARU_IRQ_MODE_type *) 0xf0133050u)	/* MCS3 IRQ Mode Configuration Register */
#define GTM_MCS3_CH1_IRQ_MODE	(*( GTM_ARU_IRQ_MODE_type *) 0xf01330d0u)	/* MCS3 IRQ Mode Configuration Register */
#define GTM_MCS3_CH2_IRQ_MODE	(*( GTM_ARU_IRQ_MODE_type *) 0xf0133150u)	/* MCS3 IRQ Mode Configuration Register */
#define GTM_MCS3_CH3_IRQ_MODE	(*( GTM_ARU_IRQ_MODE_type *) 0xf01331d0u)	/* MCS3 IRQ Mode Configuration Register */
#define GTM_MCS3_CH4_IRQ_MODE	(*( GTM_ARU_IRQ_MODE_type *) 0xf0133250u)	/* MCS3 IRQ Mode Configuration Register */
#define GTM_MCS3_CH5_IRQ_MODE	(*( GTM_ARU_IRQ_MODE_type *) 0xf01332d0u)	/* MCS3 IRQ Mode Configuration Register */
#define GTM_MCS3_CH6_IRQ_MODE	(*( GTM_ARU_IRQ_MODE_type *) 0xf0133350u)	/* MCS3 IRQ Mode Configuration Register */
#define GTM_MCS3_CH7_IRQ_MODE	(*( GTM_ARU_IRQ_MODE_type *) 0xf01333d0u)	/* MCS3 IRQ Mode Configuration Register */
#define GTM_SPE0_IRQ_MODE	(*( GTM_ARU_IRQ_MODE_type *) 0xf0100838u)	/* SPE0 IRQ Mode Configuration Register */
#define GTM_SPE1_IRQ_MODE	(*( GTM_ARU_IRQ_MODE_type *) 0xf01008b8u)	/* SPE1 IRQ Mode Configuration Register */
#define GTM_TIM0_CH0_IRQ_MODE	(*( GTM_ARU_IRQ_MODE_type *) 0xf0101038u)	/* TIM0 IRQ Mode Configuration Register */
#define GTM_TIM0_CH1_IRQ_MODE	(*( GTM_ARU_IRQ_MODE_type *) 0xf01010b8u)	/* TIM0 IRQ Mode Configuration Register */
#define GTM_TIM0_CH2_IRQ_MODE	(*( GTM_ARU_IRQ_MODE_type *) 0xf0101138u)	/* TIM0 IRQ Mode Configuration Register */
#define GTM_TIM0_CH3_IRQ_MODE	(*( GTM_ARU_IRQ_MODE_type *) 0xf01011b8u)	/* TIM0 IRQ Mode Configuration Register */
#define GTM_TIM0_CH4_IRQ_MODE	(*( GTM_ARU_IRQ_MODE_type *) 0xf0101238u)	/* TIM0 IRQ Mode Configuration Register */
#define GTM_TIM0_CH5_IRQ_MODE	(*( GTM_ARU_IRQ_MODE_type *) 0xf01012b8u)	/* TIM0 IRQ Mode Configuration Register */
#define GTM_TIM0_CH6_IRQ_MODE	(*( GTM_ARU_IRQ_MODE_type *) 0xf0101338u)	/* TIM0 IRQ Mode Configuration Register */
#define GTM_TIM0_CH7_IRQ_MODE	(*( GTM_ARU_IRQ_MODE_type *) 0xf01013b8u)	/* TIM0 IRQ Mode Configuration Register */
#define GTM_TIM1_CH0_IRQ_MODE	(*( GTM_ARU_IRQ_MODE_type *) 0xf0101838u)	/* TIM1 IRQ Mode Configuration Register */
#define GTM_TIM1_CH1_IRQ_MODE	(*( GTM_ARU_IRQ_MODE_type *) 0xf01018b8u)	/* TIM1 IRQ Mode Configuration Register */
#define GTM_TIM1_CH2_IRQ_MODE	(*( GTM_ARU_IRQ_MODE_type *) 0xf0101938u)	/* TIM1 IRQ Mode Configuration Register */
#define GTM_TIM1_CH3_IRQ_MODE	(*( GTM_ARU_IRQ_MODE_type *) 0xf01019b8u)	/* TIM1 IRQ Mode Configuration Register */
#define GTM_TIM1_CH4_IRQ_MODE	(*( GTM_ARU_IRQ_MODE_type *) 0xf0101a38u)	/* TIM1 IRQ Mode Configuration Register */
#define GTM_TIM1_CH5_IRQ_MODE	(*( GTM_ARU_IRQ_MODE_type *) 0xf0101ab8u)	/* TIM1 IRQ Mode Configuration Register */
#define GTM_TIM1_CH6_IRQ_MODE	(*( GTM_ARU_IRQ_MODE_type *) 0xf0101b38u)	/* TIM1 IRQ Mode Configuration Register */
#define GTM_TIM1_CH7_IRQ_MODE	(*( GTM_ARU_IRQ_MODE_type *) 0xf0101bb8u)	/* TIM1 IRQ Mode Configuration Register */
#define GTM_TIM2_CH0_IRQ_MODE	(*( GTM_ARU_IRQ_MODE_type *) 0xf0102038u)	/* TIM2 IRQ Mode Configuration Register */
#define GTM_TIM2_CH1_IRQ_MODE	(*( GTM_ARU_IRQ_MODE_type *) 0xf01020b8u)	/* TIM2 IRQ Mode Configuration Register */
#define GTM_TIM2_CH2_IRQ_MODE	(*( GTM_ARU_IRQ_MODE_type *) 0xf0102138u)	/* TIM2 IRQ Mode Configuration Register */
#define GTM_TIM2_CH3_IRQ_MODE	(*( GTM_ARU_IRQ_MODE_type *) 0xf01021b8u)	/* TIM2 IRQ Mode Configuration Register */
#define GTM_TIM2_CH4_IRQ_MODE	(*( GTM_ARU_IRQ_MODE_type *) 0xf0102238u)	/* TIM2 IRQ Mode Configuration Register */
#define GTM_TIM2_CH5_IRQ_MODE	(*( GTM_ARU_IRQ_MODE_type *) 0xf01022b8u)	/* TIM2 IRQ Mode Configuration Register */
#define GTM_TIM2_CH6_IRQ_MODE	(*( GTM_ARU_IRQ_MODE_type *) 0xf0102338u)	/* TIM2 IRQ Mode Configuration Register */
#define GTM_TIM2_CH7_IRQ_MODE	(*( GTM_ARU_IRQ_MODE_type *) 0xf01023b8u)	/* TIM2 IRQ Mode Configuration Register */
#define GTM_TIM3_CH0_IRQ_MODE	(*( GTM_ARU_IRQ_MODE_type *) 0xf0102838u)	/* TIM3 IRQ Mode Configuration Register */
#define GTM_TIM3_CH1_IRQ_MODE	(*( GTM_ARU_IRQ_MODE_type *) 0xf01028b8u)	/* TIM3 IRQ Mode Configuration Register */
#define GTM_TIM3_CH2_IRQ_MODE	(*( GTM_ARU_IRQ_MODE_type *) 0xf0102938u)	/* TIM3 IRQ Mode Configuration Register */
#define GTM_TIM3_CH3_IRQ_MODE	(*( GTM_ARU_IRQ_MODE_type *) 0xf01029b8u)	/* TIM3 IRQ Mode Configuration Register */
#define GTM_TIM3_CH4_IRQ_MODE	(*( GTM_ARU_IRQ_MODE_type *) 0xf0102a38u)	/* TIM3 IRQ Mode Configuration Register */
#define GTM_TIM3_CH5_IRQ_MODE	(*( GTM_ARU_IRQ_MODE_type *) 0xf0102ab8u)	/* TIM3 IRQ Mode Configuration Register */
#define GTM_TIM3_CH6_IRQ_MODE	(*( GTM_ARU_IRQ_MODE_type *) 0xf0102b38u)	/* TIM3 IRQ Mode Configuration Register */
#define GTM_TIM3_CH7_IRQ_MODE	(*( GTM_ARU_IRQ_MODE_type *) 0xf0102bb8u)	/* TIM3 IRQ Mode Configuration Register */
#define GTM_TOM0_CH0_IRQ_MODE	(*( GTM_ARU_IRQ_MODE_type *) 0xf0108028u)	/* TOM0 IRQ Mode Configuration Register */
#define GTM_TOM0_CH10_IRQ_MODE	(*( GTM_ARU_IRQ_MODE_type *) 0xf01082a8u)	/* TOM0 IRQ Mode Configuration Register */
#define GTM_TOM0_CH11_IRQ_MODE	(*( GTM_ARU_IRQ_MODE_type *) 0xf01082e8u)	/* TOM0 IRQ Mode Configuration Register */
#define GTM_TOM0_CH12_IRQ_MODE	(*( GTM_ARU_IRQ_MODE_type *) 0xf0108328u)	/* TOM0 IRQ Mode Configuration Register */
#define GTM_TOM0_CH13_IRQ_MODE	(*( GTM_ARU_IRQ_MODE_type *) 0xf0108368u)	/* TOM0 IRQ Mode Configuration Register */
#define GTM_TOM0_CH14_IRQ_MODE	(*( GTM_ARU_IRQ_MODE_type *) 0xf01083a8u)	/* TOM0 IRQ Mode Configuration Register */
#define GTM_TOM0_CH15_IRQ_MODE	(*( GTM_ARU_IRQ_MODE_type *) 0xf01083e8u)	/* TOM0 IRQ Mode Configuration Register */
#define GTM_TOM0_CH1_IRQ_MODE	(*( GTM_ARU_IRQ_MODE_type *) 0xf0108068u)	/* TOM0 IRQ Mode Configuration Register */
#define GTM_TOM0_CH2_IRQ_MODE	(*( GTM_ARU_IRQ_MODE_type *) 0xf01080a8u)	/* TOM0 IRQ Mode Configuration Register */
#define GTM_TOM0_CH3_IRQ_MODE	(*( GTM_ARU_IRQ_MODE_type *) 0xf01080e8u)	/* TOM0 IRQ Mode Configuration Register */
#define GTM_TOM0_CH4_IRQ_MODE	(*( GTM_ARU_IRQ_MODE_type *) 0xf0108128u)	/* TOM0 IRQ Mode Configuration Register */
#define GTM_TOM0_CH5_IRQ_MODE	(*( GTM_ARU_IRQ_MODE_type *) 0xf0108168u)	/* TOM0 IRQ Mode Configuration Register */
#define GTM_TOM0_CH6_IRQ_MODE	(*( GTM_ARU_IRQ_MODE_type *) 0xf01081a8u)	/* TOM0 IRQ Mode Configuration Register */
#define GTM_TOM0_CH7_IRQ_MODE	(*( GTM_ARU_IRQ_MODE_type *) 0xf01081e8u)	/* TOM0 IRQ Mode Configuration Register */
#define GTM_TOM0_CH8_IRQ_MODE	(*( GTM_ARU_IRQ_MODE_type *) 0xf0108228u)	/* TOM0 IRQ Mode Configuration Register */
#define GTM_TOM0_CH9_IRQ_MODE	(*( GTM_ARU_IRQ_MODE_type *) 0xf0108268u)	/* TOM0 IRQ Mode Configuration Register */
#define GTM_TOM1_CH0_IRQ_MODE	(*( GTM_ARU_IRQ_MODE_type *) 0xf0108828u)	/* TOM1 IRQ Mode Configuration Register */
#define GTM_TOM1_CH10_IRQ_MODE	(*( GTM_ARU_IRQ_MODE_type *) 0xf0108aa8u)	/* TOM1 IRQ Mode Configuration Register */
#define GTM_TOM1_CH11_IRQ_MODE	(*( GTM_ARU_IRQ_MODE_type *) 0xf0108ae8u)	/* TOM1 IRQ Mode Configuration Register */
#define GTM_TOM1_CH12_IRQ_MODE	(*( GTM_ARU_IRQ_MODE_type *) 0xf0108b28u)	/* TOM1 IRQ Mode Configuration Register */
#define GTM_TOM1_CH13_IRQ_MODE	(*( GTM_ARU_IRQ_MODE_type *) 0xf0108b68u)	/* TOM1 IRQ Mode Configuration Register */
#define GTM_TOM1_CH14_IRQ_MODE	(*( GTM_ARU_IRQ_MODE_type *) 0xf0108ba8u)	/* TOM1 IRQ Mode Configuration Register */
#define GTM_TOM1_CH15_IRQ_MODE	(*( GTM_ARU_IRQ_MODE_type *) 0xf0108be8u)	/* TOM1 IRQ Mode Configuration Register */
#define GTM_TOM1_CH1_IRQ_MODE	(*( GTM_ARU_IRQ_MODE_type *) 0xf0108868u)	/* TOM1 IRQ Mode Configuration Register */
#define GTM_TOM1_CH2_IRQ_MODE	(*( GTM_ARU_IRQ_MODE_type *) 0xf01088a8u)	/* TOM1 IRQ Mode Configuration Register */
#define GTM_TOM1_CH3_IRQ_MODE	(*( GTM_ARU_IRQ_MODE_type *) 0xf01088e8u)	/* TOM1 IRQ Mode Configuration Register */
#define GTM_TOM1_CH4_IRQ_MODE	(*( GTM_ARU_IRQ_MODE_type *) 0xf0108928u)	/* TOM1 IRQ Mode Configuration Register */
#define GTM_TOM1_CH5_IRQ_MODE	(*( GTM_ARU_IRQ_MODE_type *) 0xf0108968u)	/* TOM1 IRQ Mode Configuration Register */
#define GTM_TOM1_CH6_IRQ_MODE	(*( GTM_ARU_IRQ_MODE_type *) 0xf01089a8u)	/* TOM1 IRQ Mode Configuration Register */
#define GTM_TOM1_CH7_IRQ_MODE	(*( GTM_ARU_IRQ_MODE_type *) 0xf01089e8u)	/* TOM1 IRQ Mode Configuration Register */
#define GTM_TOM1_CH8_IRQ_MODE	(*( GTM_ARU_IRQ_MODE_type *) 0xf0108a28u)	/* TOM1 IRQ Mode Configuration Register */
#define GTM_TOM1_CH9_IRQ_MODE	(*( GTM_ARU_IRQ_MODE_type *) 0xf0108a68u)	/* TOM1 IRQ Mode Configuration Register */
#define GTM_TOM2_CH0_IRQ_MODE	(*( GTM_ARU_IRQ_MODE_type *) 0xf0109028u)	/* TOM2 IRQ Mode Configuration Register */
#define GTM_TOM2_CH10_IRQ_MODE	(*( GTM_ARU_IRQ_MODE_type *) 0xf01092a8u)	/* TOM2 IRQ Mode Configuration Register */
#define GTM_TOM2_CH11_IRQ_MODE	(*( GTM_ARU_IRQ_MODE_type *) 0xf01092e8u)	/* TOM2 IRQ Mode Configuration Register */
#define GTM_TOM2_CH12_IRQ_MODE	(*( GTM_ARU_IRQ_MODE_type *) 0xf0109328u)	/* TOM2 IRQ Mode Configuration Register */
#define GTM_TOM2_CH13_IRQ_MODE	(*( GTM_ARU_IRQ_MODE_type *) 0xf0109368u)	/* TOM2 IRQ Mode Configuration Register */
#define GTM_TOM2_CH14_IRQ_MODE	(*( GTM_ARU_IRQ_MODE_type *) 0xf01093a8u)	/* TOM2 IRQ Mode Configuration Register */
#define GTM_TOM2_CH15_IRQ_MODE	(*( GTM_ARU_IRQ_MODE_type *) 0xf01093e8u)	/* TOM2 IRQ Mode Configuration Register */
#define GTM_TOM2_CH1_IRQ_MODE	(*( GTM_ARU_IRQ_MODE_type *) 0xf0109068u)	/* TOM2 IRQ Mode Configuration Register */
#define GTM_TOM2_CH2_IRQ_MODE	(*( GTM_ARU_IRQ_MODE_type *) 0xf01090a8u)	/* TOM2 IRQ Mode Configuration Register */
#define GTM_TOM2_CH3_IRQ_MODE	(*( GTM_ARU_IRQ_MODE_type *) 0xf01090e8u)	/* TOM2 IRQ Mode Configuration Register */
#define GTM_TOM2_CH4_IRQ_MODE	(*( GTM_ARU_IRQ_MODE_type *) 0xf0109128u)	/* TOM2 IRQ Mode Configuration Register */
#define GTM_TOM2_CH5_IRQ_MODE	(*( GTM_ARU_IRQ_MODE_type *) 0xf0109168u)	/* TOM2 IRQ Mode Configuration Register */
#define GTM_TOM2_CH6_IRQ_MODE	(*( GTM_ARU_IRQ_MODE_type *) 0xf01091a8u)	/* TOM2 IRQ Mode Configuration Register */
#define GTM_TOM2_CH7_IRQ_MODE	(*( GTM_ARU_IRQ_MODE_type *) 0xf01091e8u)	/* TOM2 IRQ Mode Configuration Register */
#define GTM_TOM2_CH8_IRQ_MODE	(*( GTM_ARU_IRQ_MODE_type *) 0xf0109228u)	/* TOM2 IRQ Mode Configuration Register */
#define GTM_TOM2_CH9_IRQ_MODE	(*( GTM_ARU_IRQ_MODE_type *) 0xf0109268u)	/* TOM2 IRQ Mode Configuration Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 NEW_DATA0      : 1;	/* Data was transferred for addr ARU_DBG_ACCESS0 */
		unsigned __sfrbit32 NEW_DATA1      : 1;	/* Data was transferred for addr ARU_DBG_ACCESS1 */
		unsigned __sfrbit32 ACC_ACK        : 1;	/* AEI to ARU access finished, on read access data are valid */
		/* const */ unsigned __sfrbit32 Reserved       : 29;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GTM_ARU_IRQ_NOTIFY_type;
#define GTM_ARU_IRQ_NOTIFY	(*( GTM_ARU_IRQ_NOTIFY_type *) 0xf01002a4u)	/* ARU Interrupt Notification Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 ACT_TB         : 24;	/* Time base value */
		unsigned __sfrbit32 TB_TRIG        : 1;	/* Set trigger request */
		unsigned __sfrbit32 TBU_SEL        : 2;	/* Selection of time base used for comparison */
		/* const */ unsigned __sfrbit32 Reserved       : 5;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GTM_ATOM0_AGC_ACT_TB_type;
#define GTM_ATOM0_AGC_ACT_TB	(*( GTM_ATOM0_AGC_ACT_TB_type *) 0xf010d04cu)	/* TOM0 TGC0 Action Time Base Register */
#define GTM_ATOM1_AGC_ACT_TB	(*( GTM_ATOM0_AGC_ACT_TB_type *) 0xf010d84cu)	/* TOM1 TGC0 Action Time Base Register */
#define GTM_ATOM2_AGC_ACT_TB	(*( GTM_ATOM0_AGC_ACT_TB_type *) 0xf010e04cu)	/* TOM2 TGC0 Action Time Base Register */
#define GTM_ATOM3_AGC_ACT_TB	(*( GTM_ATOM0_AGC_ACT_TB_type *) 0xf010e84cu)	/* TOM3 TGC0 Action Time Base Register */
#define GTM_ATOM4_AGC_ACT_TB	(*( GTM_ATOM0_AGC_ACT_TB_type *) 0xf010f04cu)	/* TOM4 TGC0 Action Time Base Register */
#define GTM_TOM0_TGC0_ACT_TB	(*( GTM_ATOM0_AGC_ACT_TB_type *) 0xf0108034u)	/* TOM0 TGC0 Action Time Base Register */
#define GTM_TOM0_TGC1_ACT_TB	(*( GTM_ATOM0_AGC_ACT_TB_type *) 0xf0108234u)	/* TOM0 TGC1 Action Time Base Register */
#define GTM_TOM1_TGC0_ACT_TB	(*( GTM_ATOM0_AGC_ACT_TB_type *) 0xf0108834u)	/* TOM1 TGC0 Action Time Base Register */
#define GTM_TOM1_TGC1_ACT_TB	(*( GTM_ATOM0_AGC_ACT_TB_type *) 0xf0108a34u)	/* TOM1 TGC1 Action Time Base Register */
#define GTM_TOM2_TGC0_ACT_TB	(*( GTM_ATOM0_AGC_ACT_TB_type *) 0xf0109034u)	/* TOM2 TGC0 Action Time Base Register */
#define GTM_TOM2_TGC1_ACT_TB	(*( GTM_ATOM0_AGC_ACT_TB_type *) 0xf0109234u)	/* TOM2 TGC1 Action Time Base Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 ENDIS_CTRL0    : 2;	/* (A)TOM channel 0 enable/disable update value */
		unsigned __sfrbit32 ENDIS_CTRL1    : 2;	/* (A)TOM channel 1 enable/disable update value */
		unsigned __sfrbit32 ENDIS_CTRL2    : 2;	/* (A)TOM channel 2 enable/disable update value */
		unsigned __sfrbit32 ENDIS_CTRL3    : 2;	/* (A)TOM channel 3 enable/disable update value */
		unsigned __sfrbit32 ENDIS_CTRL4    : 2;	/* (A)TOM channel 4 enable/disable update value */
		unsigned __sfrbit32 ENDIS_CTRL5    : 2;	/* (A)TOM channel 5 enable/disable update value */
		unsigned __sfrbit32 ENDIS_CTRL6    : 2;	/* (A)TOM channel 6 enable/disable update value */
		unsigned __sfrbit32 ENDIS_CTRL7    : 2;	/* (A)TOM channel 7 enable/disable update value */
		/* const */ unsigned __sfrbit32 Reserved       : 16;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GTM_ATOM0_AGC_ENDIS_CTRL_type;
#define GTM_ATOM0_AGC_ENDIS_CTRL	(*( GTM_ATOM0_AGC_ENDIS_CTRL_type *) 0xf010d044u)	/* ATOM0 AGC Enable/Disable Control Register */
#define GTM_ATOM1_AGC_ENDIS_CTRL	(*( GTM_ATOM0_AGC_ENDIS_CTRL_type *) 0xf010d844u)	/* ATOM1 AGC Enable/Disable Control Register */
#define GTM_ATOM2_AGC_ENDIS_CTRL	(*( GTM_ATOM0_AGC_ENDIS_CTRL_type *) 0xf010e044u)	/* ATOM2 AGC Enable/Disable Control Register */
#define GTM_ATOM3_AGC_ENDIS_CTRL	(*( GTM_ATOM0_AGC_ENDIS_CTRL_type *) 0xf010e844u)	/* ATOM3 AGC Enable/Disable Control Register */
#define GTM_ATOM4_AGC_ENDIS_CTRL	(*( GTM_ATOM0_AGC_ENDIS_CTRL_type *) 0xf010f044u)	/* ATOM4 AGC Enable/Disable Control Register */
#define GTM_TOM0_TGC0_ENDIS_CTRL	(*( GTM_ATOM0_AGC_ENDIS_CTRL_type *) 0xf0108070u)	/* TOM0 TGC0 Enable/Disable Control Register */
#define GTM_TOM0_TGC1_ENDIS_CTRL	(*( GTM_ATOM0_AGC_ENDIS_CTRL_type *) 0xf0108270u)	/* TOM0 TGC1 Enable/Disable Control Register */
#define GTM_TOM1_TGC0_ENDIS_CTRL	(*( GTM_ATOM0_AGC_ENDIS_CTRL_type *) 0xf0108870u)	/* TOM1 TGC0 Enable/Disable Control Register */
#define GTM_TOM1_TGC1_ENDIS_CTRL	(*( GTM_ATOM0_AGC_ENDIS_CTRL_type *) 0xf0108a70u)	/* TOM1 TGC1 Enable/Disable Control Register */
#define GTM_TOM2_TGC0_ENDIS_CTRL	(*( GTM_ATOM0_AGC_ENDIS_CTRL_type *) 0xf0109070u)	/* TOM2 TGC0 Enable/Disable Control Register */
#define GTM_TOM2_TGC1_ENDIS_CTRL	(*( GTM_ATOM0_AGC_ENDIS_CTRL_type *) 0xf0109270u)	/* TOM2 TGC1 Enable/Disable Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 ENDIS_STAT0    : 2;	/* (A)TOM channel 0 enable/disable */
		unsigned __sfrbit32 ENDIS_STAT1    : 2;	/* (A)TOM channel 1 enable/disable */
		unsigned __sfrbit32 ENDIS_STAT2    : 2;	/* (A)TOM channel 2 enable/disable */
		unsigned __sfrbit32 ENDIS_STAT3    : 2;	/* (A)TOM channel 3 enable/disable */
		unsigned __sfrbit32 ENDIS_STAT4    : 2;	/* (A)TOM channel 4 enable/disable */
		unsigned __sfrbit32 ENDIS_STAT5    : 2;	/* (A)TOM channel 5 enable/disable */
		unsigned __sfrbit32 ENDIS_STAT6    : 2;	/* (A)TOM channel 6 enable/disable */
		unsigned __sfrbit32 ENDIS_STAT7    : 2;	/* (A)TOM channel 7 enable/disable */
		/* const */ unsigned __sfrbit32 Reserved       : 16;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GTM_ATOM0_AGC_ENDIS_STAT_type;
#define GTM_ATOM0_AGC_ENDIS_STAT	(*( GTM_ATOM0_AGC_ENDIS_STAT_type *) 0xf010d048u)	/* ATOM0 AGC Enable/Disable Status Register */
#define GTM_ATOM1_AGC_ENDIS_STAT	(*( GTM_ATOM0_AGC_ENDIS_STAT_type *) 0xf010d848u)	/* ATOM1 AGC Enable/Disable Status Register */
#define GTM_ATOM2_AGC_ENDIS_STAT	(*( GTM_ATOM0_AGC_ENDIS_STAT_type *) 0xf010e048u)	/* ATOM2 AGC Enable/Disable Status Register */
#define GTM_ATOM3_AGC_ENDIS_STAT	(*( GTM_ATOM0_AGC_ENDIS_STAT_type *) 0xf010e848u)	/* ATOM3 AGC Enable/Disable Status Register */
#define GTM_ATOM4_AGC_ENDIS_STAT	(*( GTM_ATOM0_AGC_ENDIS_STAT_type *) 0xf010f048u)	/* ATOM4 AGC Enable/Disable Status Register */
#define GTM_TOM0_TGC0_ENDIS_STAT	(*( GTM_ATOM0_AGC_ENDIS_STAT_type *) 0xf0108074u)	/* TOM0 TGC0 Enable/Disable Status Register */
#define GTM_TOM0_TGC1_ENDIS_STAT	(*( GTM_ATOM0_AGC_ENDIS_STAT_type *) 0xf0108274u)	/* TOM0 TGC1 Enable/Disable Status Register */
#define GTM_TOM1_TGC0_ENDIS_STAT	(*( GTM_ATOM0_AGC_ENDIS_STAT_type *) 0xf0108874u)	/* TOM1 TGC0 Enable/Disable Status Register */
#define GTM_TOM1_TGC1_ENDIS_STAT	(*( GTM_ATOM0_AGC_ENDIS_STAT_type *) 0xf0108a74u)	/* TOM1 TGC1 Enable/Disable Status Register */
#define GTM_TOM2_TGC0_ENDIS_STAT	(*( GTM_ATOM0_AGC_ENDIS_STAT_type *) 0xf0109074u)	/* TOM2 TGC0 Enable/Disable Status Register */
#define GTM_TOM2_TGC1_ENDIS_STAT	(*( GTM_ATOM0_AGC_ENDIS_STAT_type *) 0xf0109274u)	/* TOM2 TGC1 Enable/Disable Status Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 FUPD_CTRL0     : 2;	/* Force update of (A)TOM channel 0 operation registers */
		unsigned __sfrbit32 FUPD_CTRL1     : 2;	/* Force update of (A)TOM channel 1 operation registers */
		unsigned __sfrbit32 FUPD_CTRL2     : 2;	/* Force update of (A)TOM channel 2 operation registers */
		unsigned __sfrbit32 FUPD_CTRL3     : 2;	/* Force update of (A)TOM channel 3 operation registers */
		unsigned __sfrbit32 FUPD_CTRL4     : 2;	/* Force update of (A)TOM channel 4 operation registers */
		unsigned __sfrbit32 FUPD_CTRL5     : 2;	/* Force update of (A)TOM channel 5 operation registers */
		unsigned __sfrbit32 FUPD_CTRL6     : 2;	/* Force update of (A)TOM channel 6 operation registers */
		unsigned __sfrbit32 FUPD_CTRL7     : 2;	/* Force update of (A)TOM channel 7 operation registers */
		unsigned __sfrbit32 RSTCN0_CH0     : 2;	/* Reset CN0 of channel 0 on force update event */
		unsigned __sfrbit32 RSTCN0_CH1     : 2;	/* Reset CN0 of channel 1 on force update event */
		unsigned __sfrbit32 RSTCN0_CH2     : 2;	/* Reset CN0 of channel 2 on force update event */
		unsigned __sfrbit32 RSTCN0_CH3     : 2;	/* Reset CN0 of channel 3 on force update event */
		unsigned __sfrbit32 RSTCN0_CH4     : 2;	/* Reset CN0 of channel 4 on force update event */
		unsigned __sfrbit32 RSTCN0_CH5     : 2;	/* Reset CN0 of channel 5 on force update event */
		unsigned __sfrbit32 RSTCN0_CH6     : 2;	/* Reset CN0 of channel 6 on force update event */
		unsigned __sfrbit32 RSTCN0_CH7     : 2;	/* Reset CN0 of channel 7 on force update event */
	} B;
	int I;
	unsigned int U;

} GTM_ATOM0_AGC_FUPD_CTRL_type;
#define GTM_ATOM0_AGC_FUPD_CTRL	(*( GTM_ATOM0_AGC_FUPD_CTRL_type *) 0xf010d058u)	/* ATOM0 AGC Force Update Control Register */
#define GTM_ATOM1_AGC_FUPD_CTRL	(*( GTM_ATOM0_AGC_FUPD_CTRL_type *) 0xf010d858u)	/* ATOM1 AGC Force Update Control Register */
#define GTM_ATOM2_AGC_FUPD_CTRL	(*( GTM_ATOM0_AGC_FUPD_CTRL_type *) 0xf010e058u)	/* ATOM2 AGC Force Update Control Register */
#define GTM_ATOM3_AGC_FUPD_CTRL	(*( GTM_ATOM0_AGC_FUPD_CTRL_type *) 0xf010e858u)	/* ATOM3 AGC Force Update Control Register */
#define GTM_ATOM4_AGC_FUPD_CTRL	(*( GTM_ATOM0_AGC_FUPD_CTRL_type *) 0xf010f058u)	/* ATOM4 AGC Force Update Control Register */
#define GTM_TOM0_TGC0_FUPD_CTRL	(*( GTM_ATOM0_AGC_FUPD_CTRL_type *) 0xf0108038u)	/* TOM0 TGC0 Force Update Control Register */
#define GTM_TOM0_TGC1_FUPD_CTRL	(*( GTM_ATOM0_AGC_FUPD_CTRL_type *) 0xf0108238u)	/* TOM0 TGC1 Force Update Control Register */
#define GTM_TOM1_TGC0_FUPD_CTRL	(*( GTM_ATOM0_AGC_FUPD_CTRL_type *) 0xf0108838u)	/* TOM1 TGC0 Force Update Control Register */
#define GTM_TOM1_TGC1_FUPD_CTRL	(*( GTM_ATOM0_AGC_FUPD_CTRL_type *) 0xf0108a38u)	/* TOM1 TGC1 Force Update Control Register */
#define GTM_TOM2_TGC0_FUPD_CTRL	(*( GTM_ATOM0_AGC_FUPD_CTRL_type *) 0xf0109038u)	/* TOM2 TGC0 Force Update Control Register */
#define GTM_TOM2_TGC1_FUPD_CTRL	(*( GTM_ATOM0_AGC_FUPD_CTRL_type *) 0xf0109238u)	/* TOM2 TGC1 Force Update Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 HOST_TRIG      : 1;	/* Trigger request signal (see AGC) to update the register ENDIS_STAT and OUTEN_STAT */
		/* const */ unsigned __sfrbit32 Reserved       : 7;	/* Reserved */
		unsigned __sfrbit32 RST_CH0        : 1;	/* Software reset of channel 0 */
		unsigned __sfrbit32 RST_CH1        : 1;	/* Software reset of channel 1 */
		unsigned __sfrbit32 RST_CH2        : 1;	/* Software reset of channel 2 */
		unsigned __sfrbit32 RST_CH3        : 1;	/* Software reset of channel 3 */
		unsigned __sfrbit32 RST_CH4        : 1;	/* Software reset of channel 4 */
		unsigned __sfrbit32 RST_CH5        : 1;	/* Software reset of channel 5 */
		unsigned __sfrbit32 RST_CH6        : 1;	/* Software reset of channel 6 */
		unsigned __sfrbit32 RST_CH7        : 1;	/* Software reset of channel 7 */
		unsigned __sfrbit32 UPEN_CTRL0     : 2;	/* ATOM channel 0 enable update of register CM0, CM1 and CLK_SRC from SR0, SR1 and CLK_SRC_SR */
		unsigned __sfrbit32 UPEN_CTRL1     : 2;	/* ATOM channel 1 enable update of register CM0, CM1 and CLK_SRC */
		unsigned __sfrbit32 UPEN_CTRL2     : 2;	/* ATOM channel 2 enable update of register CM0, CM1 and CLK_SRC */
		unsigned __sfrbit32 UPEN_CTRL3     : 2;	/* ATOM channel 3 enable update of register CM0, CM1 and CLK_SRC */
		unsigned __sfrbit32 UPEN_CTRL4     : 2;	/* ATOM channel 4 enable update of register CM0, CM1 and CLK_SRC */
		unsigned __sfrbit32 UPEN_CTRL5     : 2;	/* ATOM channel 5 enable update of register CM0, CM1 and CLK_SRC */
		unsigned __sfrbit32 UPEN_CTRL6     : 2;	/* ATOM channel 6 enable update of register CM0, CM1 and CLK_SRC */
		unsigned __sfrbit32 UPEN_CTRL7     : 2;	/* ATOM channel 7 enable update of register CM0, CM1 and CLK_SRC */
	} B;
	int I;
	unsigned int U;

} GTM_ATOM0_AGC_GLB_CTRL_type;
#define GTM_ATOM0_AGC_GLB_CTRL	(*( GTM_ATOM0_AGC_GLB_CTRL_type *) 0xf010d040u)	/* ATOM0 AGC Global control register */
#define GTM_ATOM1_AGC_GLB_CTRL	(*( GTM_ATOM0_AGC_GLB_CTRL_type *) 0xf010d840u)	/* ATOM1 AGC Global control register */
#define GTM_ATOM2_AGC_GLB_CTRL	(*( GTM_ATOM0_AGC_GLB_CTRL_type *) 0xf010e040u)	/* ATOM2 AGC Global control register */
#define GTM_ATOM3_AGC_GLB_CTRL	(*( GTM_ATOM0_AGC_GLB_CTRL_type *) 0xf010e840u)	/* ATOM3 AGC Global control register */
#define GTM_ATOM4_AGC_GLB_CTRL	(*( GTM_ATOM0_AGC_GLB_CTRL_type *) 0xf010f040u)	/* ATOM4 AGC Global control register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 INT_TRIG0      : 2;	/* Select input signal TRIG_0 as a trigger source */
		unsigned __sfrbit32 INT_TRIG1      : 2;	/* Select input signal TRIG_1 as a trigger source */
		unsigned __sfrbit32 INT_TRIG2      : 2;	/* Select input signal TRIG_2 as a trigger source */
		unsigned __sfrbit32 INT_TRIG3      : 2;	/* Select input signal TRIG_3 as a trigger source */
		unsigned __sfrbit32 INT_TRIG4      : 2;	/* Select input signal TRIG_4 as a trigger source */
		unsigned __sfrbit32 INT_TRIG5      : 2;	/* Select input signal TRIG_5 as a trigger source */
		unsigned __sfrbit32 INT_TRIG6      : 2;	/* Select input signal TRIG_6 as a trigger source */
		unsigned __sfrbit32 INT_TRIG7      : 2;	/* Select input signal TRIG_7 as a trigger source */
		/* const */ unsigned __sfrbit32 Reserved       : 16;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GTM_ATOM0_AGC_INT_TRIG_type;
#define GTM_ATOM0_AGC_INT_TRIG	(*( GTM_ATOM0_AGC_INT_TRIG_type *) 0xf010d05cu)	/* ATOM0 AGC Internal Trigger Control Register */
#define GTM_ATOM1_AGC_INT_TRIG	(*( GTM_ATOM0_AGC_INT_TRIG_type *) 0xf010d85cu)	/* ATOM1 AGC Internal Trigger Control Register */
#define GTM_ATOM2_AGC_INT_TRIG	(*( GTM_ATOM0_AGC_INT_TRIG_type *) 0xf010e05cu)	/* ATOM2 AGC Internal Trigger Control Register */
#define GTM_ATOM3_AGC_INT_TRIG	(*( GTM_ATOM0_AGC_INT_TRIG_type *) 0xf010e85cu)	/* ATOM3 AGC Internal Trigger Control Register */
#define GTM_ATOM4_AGC_INT_TRIG	(*( GTM_ATOM0_AGC_INT_TRIG_type *) 0xf010f05cu)	/* ATOM4 AGC Internal Trigger Control Register */
#define GTM_TOM0_TGC0_INT_TRIG	(*( GTM_ATOM0_AGC_INT_TRIG_type *) 0xf010803cu)	/* TOM0 TGC0 Internal Trigger Control Register */
#define GTM_TOM0_TGC1_INT_TRIG	(*( GTM_ATOM0_AGC_INT_TRIG_type *) 0xf010823cu)	/* TOM0 TGC1 Internal Trigger Control Register */
#define GTM_TOM1_TGC0_INT_TRIG	(*( GTM_ATOM0_AGC_INT_TRIG_type *) 0xf010883cu)	/* TOM1 TGC0 Internal Trigger Control Register */
#define GTM_TOM1_TGC1_INT_TRIG	(*( GTM_ATOM0_AGC_INT_TRIG_type *) 0xf0108a3cu)	/* TOM1 TGC1 Internal Trigger Control Register */
#define GTM_TOM2_TGC0_INT_TRIG	(*( GTM_ATOM0_AGC_INT_TRIG_type *) 0xf010903cu)	/* TOM2 TGC0 Internal Trigger Control Register */
#define GTM_TOM2_TGC1_INT_TRIG	(*( GTM_ATOM0_AGC_INT_TRIG_type *) 0xf010923cu)	/* TOM2 TGC1 Internal Trigger Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 OUTEN_CTRL0    : 2;	/* Output (A)TOM_OUT(0) enable/disable update value */
		unsigned __sfrbit32 OUTEN_CTRL1    : 2;	/* Output (A)TOM_OUT(1)enable/disable update value */
		unsigned __sfrbit32 OUTEN_CTRL2    : 2;	/* Output (A)TOM_OUT(2) enable/disable update value */
		unsigned __sfrbit32 OUTEN_CTRL3    : 2;	/* Output (A)TOM_OUT(3) enable/disable update value */
		unsigned __sfrbit32 OUTEN_CTRL4    : 2;	/* Output (A)TOM_OUT(4) enable/disable update value */
		unsigned __sfrbit32 OUTEN_CTRL5    : 2;	/* Output (A)TOM_OUT(5) enable/disable update value */
		unsigned __sfrbit32 OUTEN_CTRL6    : 2;	/* Output (A)TOM_OUT(6) enable/disable update value */
		unsigned __sfrbit32 OUTEN_CTRL7    : 2;	/* Output (A)TOM_OUT(7) enable/disable update value */
		/* const */ unsigned __sfrbit32 Reserved       : 16;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GTM_ATOM0_AGC_OUTEN_CTRL_type;
#define GTM_ATOM0_AGC_OUTEN_CTRL	(*( GTM_ATOM0_AGC_OUTEN_CTRL_type *) 0xf010d050u)	/* ATOM0 AGC Output Enable Control Register */
#define GTM_ATOM1_AGC_OUTEN_CTRL	(*( GTM_ATOM0_AGC_OUTEN_CTRL_type *) 0xf010d850u)	/* ATOM1 AGC Output Enable Control Register */
#define GTM_ATOM2_AGC_OUTEN_CTRL	(*( GTM_ATOM0_AGC_OUTEN_CTRL_type *) 0xf010e050u)	/* ATOM2 AGC Output Enable Control Register */
#define GTM_ATOM3_AGC_OUTEN_CTRL	(*( GTM_ATOM0_AGC_OUTEN_CTRL_type *) 0xf010e850u)	/* ATOM3 AGC Output Enable Control Register */
#define GTM_ATOM4_AGC_OUTEN_CTRL	(*( GTM_ATOM0_AGC_OUTEN_CTRL_type *) 0xf010f050u)	/* ATOM4 AGC Output Enable Control Register */
#define GTM_TOM0_TGC0_OUTEN_CTRL	(*( GTM_ATOM0_AGC_OUTEN_CTRL_type *) 0xf0108078u)	/* TOM0 TGC0 Output Enable Control Register */
#define GTM_TOM0_TGC1_OUTEN_CTRL	(*( GTM_ATOM0_AGC_OUTEN_CTRL_type *) 0xf0108278u)	/* TOM0 TGC1 Output Enable Control Register */
#define GTM_TOM1_TGC0_OUTEN_CTRL	(*( GTM_ATOM0_AGC_OUTEN_CTRL_type *) 0xf0108878u)	/* TOM1 TGC0 Output Enable Control Register */
#define GTM_TOM1_TGC1_OUTEN_CTRL	(*( GTM_ATOM0_AGC_OUTEN_CTRL_type *) 0xf0108a78u)	/* TOM1 TGC1 Output Enable Control Register */
#define GTM_TOM2_TGC0_OUTEN_CTRL	(*( GTM_ATOM0_AGC_OUTEN_CTRL_type *) 0xf0109078u)	/* TOM2 TGC0 Output Enable Control Register */
#define GTM_TOM2_TGC1_OUTEN_CTRL	(*( GTM_ATOM0_AGC_OUTEN_CTRL_type *) 0xf0109278u)	/* TOM2 TGC1 Output Enable Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 OUTEN_STAT0    : 2;	/* Control/status of output (A)TOM_OUT(0) */
		unsigned __sfrbit32 OUTEN_STAT1    : 2;	/* Control/status of output (A)TOM_OUT(1) */
		unsigned __sfrbit32 OUTEN_STAT2    : 2;	/* Control/status of output (A)TOM_OUT(2) */
		unsigned __sfrbit32 OUTEN_STAT3    : 2;	/* Control/status of output (A)TOM_OUT(3) */
		unsigned __sfrbit32 OUTEN_STAT4    : 2;	/* Control/status of output (A)TOM_OUT(4) */
		unsigned __sfrbit32 OUTEN_STAT5    : 2;	/* Control/status of output (A)TOM_OUT(5) */
		unsigned __sfrbit32 OUTEN_STAT6    : 2;	/* Control/status of output (A)TOM_OUT(6) */
		unsigned __sfrbit32 OUTEN_STAT7    : 2;	/* Control/status of output (A)TOM_OUT(7) */
		/* const */ unsigned __sfrbit32 Reserved       : 16;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GTM_ATOM0_AGC_OUTEN_STAT_type;
#define GTM_ATOM0_AGC_OUTEN_STAT	(*( GTM_ATOM0_AGC_OUTEN_STAT_type *) 0xf010d054u)	/* ATOM0 AGC Output Enable Status Register */
#define GTM_ATOM1_AGC_OUTEN_STAT	(*( GTM_ATOM0_AGC_OUTEN_STAT_type *) 0xf010d854u)	/* ATOM1 AGC Output Enable Status Register */
#define GTM_ATOM2_AGC_OUTEN_STAT	(*( GTM_ATOM0_AGC_OUTEN_STAT_type *) 0xf010e054u)	/* ATOM2 AGC Output Enable Status Register */
#define GTM_ATOM3_AGC_OUTEN_STAT	(*( GTM_ATOM0_AGC_OUTEN_STAT_type *) 0xf010e854u)	/* ATOM3 AGC Output Enable Status Register */
#define GTM_ATOM4_AGC_OUTEN_STAT	(*( GTM_ATOM0_AGC_OUTEN_STAT_type *) 0xf010f054u)	/* ATOM4 AGC Output Enable Status Register */
#define GTM_TOM0_TGC0_OUTEN_STAT	(*( GTM_ATOM0_AGC_OUTEN_STAT_type *) 0xf010807cu)	/* TOM0 TGC0 Output Enable Status Register */
#define GTM_TOM0_TGC1_OUTEN_STAT	(*( GTM_ATOM0_AGC_OUTEN_STAT_type *) 0xf010827cu)	/* TOM0 TGC1 Output Enable Status Register */
#define GTM_TOM1_TGC0_OUTEN_STAT	(*( GTM_ATOM0_AGC_OUTEN_STAT_type *) 0xf010887cu)	/* TOM1 TGC0 Output Enable Status Register */
#define GTM_TOM1_TGC1_OUTEN_STAT	(*( GTM_ATOM0_AGC_OUTEN_STAT_type *) 0xf0108a7cu)	/* TOM1 TGC1 Output Enable Status Register */
#define GTM_TOM2_TGC0_OUTEN_STAT	(*( GTM_ATOM0_AGC_OUTEN_STAT_type *) 0xf010907cu)	/* TOM2 TGC0 Output Enable Status Register */
#define GTM_TOM2_TGC1_OUTEN_STAT	(*( GTM_ATOM0_AGC_OUTEN_STAT_type *) 0xf010927cu)	/* TOM2 TGC1 Output Enable Status Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 CM0            : 24;	/* ATOM CCU0 compare register */
		/* const */ unsigned __sfrbit32 Reserved       : 8;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GTM_ATOM0_CH0_CM0_type;
#define GTM_ATOM0_CH0_CM0	(*( GTM_ATOM0_CH0_CM0_type *) 0xf010d010u)	/* ATOM0 Channel 0 CCU0 Compare Register */
#define GTM_ATOM0_CH1_CM0	(*( GTM_ATOM0_CH0_CM0_type *) 0xf010d090u)	/* ATOM0 Channel 1 CCU0 Compare Register */
#define GTM_ATOM0_CH2_CM0	(*( GTM_ATOM0_CH0_CM0_type *) 0xf010d110u)	/* ATOM0 Channel 2 CCU0 Compare Register */
#define GTM_ATOM0_CH3_CM0	(*( GTM_ATOM0_CH0_CM0_type *) 0xf010d190u)	/* ATOM0 Channel 3 CCU0 Compare Register */
#define GTM_ATOM0_CH4_CM0	(*( GTM_ATOM0_CH0_CM0_type *) 0xf010d210u)	/* ATOM0 Channel 4 CCU0 Compare Register */
#define GTM_ATOM0_CH5_CM0	(*( GTM_ATOM0_CH0_CM0_type *) 0xf010d290u)	/* ATOM0 Channel 5 CCU0 Compare Register */
#define GTM_ATOM0_CH6_CM0	(*( GTM_ATOM0_CH0_CM0_type *) 0xf010d310u)	/* ATOM0 Channel 6 CCU0 Compare Register */
#define GTM_ATOM0_CH7_CM0	(*( GTM_ATOM0_CH0_CM0_type *) 0xf010d390u)	/* ATOM0 Channel 7 CCU0 Compare Register */
#define GTM_ATOM1_CH0_CM0	(*( GTM_ATOM0_CH0_CM0_type *) 0xf010d810u)	/* ATOM1 Channel 0 CCU0 Compare Register */
#define GTM_ATOM1_CH1_CM0	(*( GTM_ATOM0_CH0_CM0_type *) 0xf010d890u)	/* ATOM1 Channel 1 CCU0 Compare Register */
#define GTM_ATOM1_CH2_CM0	(*( GTM_ATOM0_CH0_CM0_type *) 0xf010d910u)	/* ATOM1 Channel 2 CCU0 Compare Register */
#define GTM_ATOM1_CH3_CM0	(*( GTM_ATOM0_CH0_CM0_type *) 0xf010d990u)	/* ATOM1 Channel 3 CCU0 Compare Register */
#define GTM_ATOM1_CH4_CM0	(*( GTM_ATOM0_CH0_CM0_type *) 0xf010da10u)	/* ATOM1 Channel 4 CCU0 Compare Register */
#define GTM_ATOM1_CH5_CM0	(*( GTM_ATOM0_CH0_CM0_type *) 0xf010da90u)	/* ATOM1 Channel 5 CCU0 Compare Register */
#define GTM_ATOM1_CH6_CM0	(*( GTM_ATOM0_CH0_CM0_type *) 0xf010db10u)	/* ATOM1 Channel 6 CCU0 Compare Register */
#define GTM_ATOM1_CH7_CM0	(*( GTM_ATOM0_CH0_CM0_type *) 0xf010db90u)	/* ATOM1 Channel 7 CCU0 Compare Register */
#define GTM_ATOM2_CH0_CM0	(*( GTM_ATOM0_CH0_CM0_type *) 0xf010e010u)	/* ATOM2 Channel 0 CCU0 Compare Register */
#define GTM_ATOM2_CH1_CM0	(*( GTM_ATOM0_CH0_CM0_type *) 0xf010e090u)	/* ATOM2 Channel 1 CCU0 Compare Register */
#define GTM_ATOM2_CH2_CM0	(*( GTM_ATOM0_CH0_CM0_type *) 0xf010e110u)	/* ATOM2 Channel 2 CCU0 Compare Register */
#define GTM_ATOM2_CH3_CM0	(*( GTM_ATOM0_CH0_CM0_type *) 0xf010e190u)	/* ATOM2 Channel 3 CCU0 Compare Register */
#define GTM_ATOM2_CH4_CM0	(*( GTM_ATOM0_CH0_CM0_type *) 0xf010e210u)	/* ATOM2 Channel 4 CCU0 Compare Register */
#define GTM_ATOM2_CH5_CM0	(*( GTM_ATOM0_CH0_CM0_type *) 0xf010e290u)	/* ATOM2 Channel 5 CCU0 Compare Register */
#define GTM_ATOM2_CH6_CM0	(*( GTM_ATOM0_CH0_CM0_type *) 0xf010e310u)	/* ATOM2 Channel 6 CCU0 Compare Register */
#define GTM_ATOM2_CH7_CM0	(*( GTM_ATOM0_CH0_CM0_type *) 0xf010e390u)	/* ATOM2 Channel 7 CCU0 Compare Register */
#define GTM_ATOM3_CH0_CM0	(*( GTM_ATOM0_CH0_CM0_type *) 0xf010e810u)	/* ATOM3 Channel 0 CCU0 Compare Register */
#define GTM_ATOM3_CH1_CM0	(*( GTM_ATOM0_CH0_CM0_type *) 0xf010e890u)	/* ATOM3 Channel 1 CCU0 Compare Register */
#define GTM_ATOM3_CH2_CM0	(*( GTM_ATOM0_CH0_CM0_type *) 0xf010e910u)	/* ATOM3 Channel 2 CCU0 Compare Register */
#define GTM_ATOM3_CH3_CM0	(*( GTM_ATOM0_CH0_CM0_type *) 0xf010e990u)	/* ATOM3 Channel 3 CCU0 Compare Register */
#define GTM_ATOM3_CH4_CM0	(*( GTM_ATOM0_CH0_CM0_type *) 0xf010ea10u)	/* ATOM3 Channel 4 CCU0 Compare Register */
#define GTM_ATOM3_CH5_CM0	(*( GTM_ATOM0_CH0_CM0_type *) 0xf010ea90u)	/* ATOM3 Channel 5 CCU0 Compare Register */
#define GTM_ATOM3_CH6_CM0	(*( GTM_ATOM0_CH0_CM0_type *) 0xf010eb10u)	/* ATOM3 Channel 6 CCU0 Compare Register */
#define GTM_ATOM3_CH7_CM0	(*( GTM_ATOM0_CH0_CM0_type *) 0xf010eb90u)	/* ATOM3 Channel 7 CCU0 Compare Register */
#define GTM_ATOM4_CH0_CM0	(*( GTM_ATOM0_CH0_CM0_type *) 0xf010f010u)	/* ATOM4 Channel 0 CCU0 Compare Register */
#define GTM_ATOM4_CH1_CM0	(*( GTM_ATOM0_CH0_CM0_type *) 0xf010f090u)	/* ATOM4 Channel 1 CCU0 Compare Register */
#define GTM_ATOM4_CH2_CM0	(*( GTM_ATOM0_CH0_CM0_type *) 0xf010f110u)	/* ATOM4 Channel 2 CCU0 Compare Register */
#define GTM_ATOM4_CH3_CM0	(*( GTM_ATOM0_CH0_CM0_type *) 0xf010f190u)	/* ATOM4 Channel 3 CCU0 Compare Register */
#define GTM_ATOM4_CH4_CM0	(*( GTM_ATOM0_CH0_CM0_type *) 0xf010f210u)	/* ATOM4 Channel 4 CCU0 Compare Register */
#define GTM_ATOM4_CH5_CM0	(*( GTM_ATOM0_CH0_CM0_type *) 0xf010f290u)	/* ATOM4 Channel 5 CCU0 Compare Register */
#define GTM_ATOM4_CH6_CM0	(*( GTM_ATOM0_CH0_CM0_type *) 0xf010f310u)	/* ATOM4 Channel 6 CCU0 Compare Register */
#define GTM_ATOM4_CH7_CM0	(*( GTM_ATOM0_CH0_CM0_type *) 0xf010f390u)	/* ATOM4 Channel 7 CCU0 Compare Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 CM1            : 24;	/* ATOM CCU1 compare register */
		/* const */ unsigned __sfrbit32 Reserved       : 8;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GTM_ATOM0_CH0_CM1_type;
#define GTM_ATOM0_CH0_CM1	(*( GTM_ATOM0_CH0_CM1_type *) 0xf010d014u)	/* ATOM0 Channel 0 CCU1 Compare Register */
#define GTM_ATOM0_CH1_CM1	(*( GTM_ATOM0_CH0_CM1_type *) 0xf010d094u)	/* ATOM0 Channel 1 CCU1 Compare Register */
#define GTM_ATOM0_CH2_CM1	(*( GTM_ATOM0_CH0_CM1_type *) 0xf010d114u)	/* ATOM0 Channel 2 CCU1 Compare Register */
#define GTM_ATOM0_CH3_CM1	(*( GTM_ATOM0_CH0_CM1_type *) 0xf010d194u)	/* ATOM0 Channel 3 CCU1 Compare Register */
#define GTM_ATOM0_CH4_CM1	(*( GTM_ATOM0_CH0_CM1_type *) 0xf010d214u)	/* ATOM0 Channel 4 CCU1 Compare Register */
#define GTM_ATOM0_CH5_CM1	(*( GTM_ATOM0_CH0_CM1_type *) 0xf010d294u)	/* ATOM0 Channel 5 CCU1 Compare Register */
#define GTM_ATOM0_CH6_CM1	(*( GTM_ATOM0_CH0_CM1_type *) 0xf010d314u)	/* ATOM0 Channel 6 CCU1 Compare Register */
#define GTM_ATOM0_CH7_CM1	(*( GTM_ATOM0_CH0_CM1_type *) 0xf010d394u)	/* ATOM0 Channel 7 CCU1 Compare Register */
#define GTM_ATOM1_CH0_CM1	(*( GTM_ATOM0_CH0_CM1_type *) 0xf010d814u)	/* ATOM1 Channel 0 CCU1 Compare Register */
#define GTM_ATOM1_CH1_CM1	(*( GTM_ATOM0_CH0_CM1_type *) 0xf010d894u)	/* ATOM1 Channel 1 CCU1 Compare Register */
#define GTM_ATOM1_CH2_CM1	(*( GTM_ATOM0_CH0_CM1_type *) 0xf010d914u)	/* ATOM1 Channel 2 CCU1 Compare Register */
#define GTM_ATOM1_CH3_CM1	(*( GTM_ATOM0_CH0_CM1_type *) 0xf010d994u)	/* ATOM1 Channel 3 CCU1 Compare Register */
#define GTM_ATOM1_CH4_CM1	(*( GTM_ATOM0_CH0_CM1_type *) 0xf010da14u)	/* ATOM1 Channel 4 CCU1 Compare Register */
#define GTM_ATOM1_CH5_CM1	(*( GTM_ATOM0_CH0_CM1_type *) 0xf010da94u)	/* ATOM1 Channel 5 CCU1 Compare Register */
#define GTM_ATOM1_CH6_CM1	(*( GTM_ATOM0_CH0_CM1_type *) 0xf010db14u)	/* ATOM1 Channel 6 CCU1 Compare Register */
#define GTM_ATOM1_CH7_CM1	(*( GTM_ATOM0_CH0_CM1_type *) 0xf010db94u)	/* ATOM1 Channel 7 CCU1 Compare Register */
#define GTM_ATOM2_CH0_CM1	(*( GTM_ATOM0_CH0_CM1_type *) 0xf010e014u)	/* ATOM2 Channel 0 CCU1 Compare Register */
#define GTM_ATOM2_CH1_CM1	(*( GTM_ATOM0_CH0_CM1_type *) 0xf010e094u)	/* ATOM2 Channel 1 CCU1 Compare Register */
#define GTM_ATOM2_CH2_CM1	(*( GTM_ATOM0_CH0_CM1_type *) 0xf010e114u)	/* ATOM2 Channel 2 CCU1 Compare Register */
#define GTM_ATOM2_CH3_CM1	(*( GTM_ATOM0_CH0_CM1_type *) 0xf010e194u)	/* ATOM2 Channel 3 CCU1 Compare Register */
#define GTM_ATOM2_CH4_CM1	(*( GTM_ATOM0_CH0_CM1_type *) 0xf010e214u)	/* ATOM2 Channel 4 CCU1 Compare Register */
#define GTM_ATOM2_CH5_CM1	(*( GTM_ATOM0_CH0_CM1_type *) 0xf010e294u)	/* ATOM2 Channel 5 CCU1 Compare Register */
#define GTM_ATOM2_CH6_CM1	(*( GTM_ATOM0_CH0_CM1_type *) 0xf010e314u)	/* ATOM2 Channel 6 CCU1 Compare Register */
#define GTM_ATOM2_CH7_CM1	(*( GTM_ATOM0_CH0_CM1_type *) 0xf010e394u)	/* ATOM2 Channel 7 CCU1 Compare Register */
#define GTM_ATOM3_CH0_CM1	(*( GTM_ATOM0_CH0_CM1_type *) 0xf010e814u)	/* ATOM3 Channel 0 CCU1 Compare Register */
#define GTM_ATOM3_CH1_CM1	(*( GTM_ATOM0_CH0_CM1_type *) 0xf010e894u)	/* ATOM3 Channel 1 CCU1 Compare Register */
#define GTM_ATOM3_CH2_CM1	(*( GTM_ATOM0_CH0_CM1_type *) 0xf010e914u)	/* ATOM3 Channel 2 CCU1 Compare Register */
#define GTM_ATOM3_CH3_CM1	(*( GTM_ATOM0_CH0_CM1_type *) 0xf010e994u)	/* ATOM3 Channel 3 CCU1 Compare Register */
#define GTM_ATOM3_CH4_CM1	(*( GTM_ATOM0_CH0_CM1_type *) 0xf010ea14u)	/* ATOM3 Channel 4 CCU1 Compare Register */
#define GTM_ATOM3_CH5_CM1	(*( GTM_ATOM0_CH0_CM1_type *) 0xf010ea94u)	/* ATOM3 Channel 5 CCU1 Compare Register */
#define GTM_ATOM3_CH6_CM1	(*( GTM_ATOM0_CH0_CM1_type *) 0xf010eb14u)	/* ATOM3 Channel 6 CCU1 Compare Register */
#define GTM_ATOM3_CH7_CM1	(*( GTM_ATOM0_CH0_CM1_type *) 0xf010eb94u)	/* ATOM3 Channel 7 CCU1 Compare Register */
#define GTM_ATOM4_CH0_CM1	(*( GTM_ATOM0_CH0_CM1_type *) 0xf010f014u)	/* ATOM4 Channel 0 CCU1 Compare Register */
#define GTM_ATOM4_CH1_CM1	(*( GTM_ATOM0_CH0_CM1_type *) 0xf010f094u)	/* ATOM4 Channel 1 CCU1 Compare Register */
#define GTM_ATOM4_CH2_CM1	(*( GTM_ATOM0_CH0_CM1_type *) 0xf010f114u)	/* ATOM4 Channel 2 CCU1 Compare Register */
#define GTM_ATOM4_CH3_CM1	(*( GTM_ATOM0_CH0_CM1_type *) 0xf010f194u)	/* ATOM4 Channel 3 CCU1 Compare Register */
#define GTM_ATOM4_CH4_CM1	(*( GTM_ATOM0_CH0_CM1_type *) 0xf010f214u)	/* ATOM4 Channel 4 CCU1 Compare Register */
#define GTM_ATOM4_CH5_CM1	(*( GTM_ATOM0_CH0_CM1_type *) 0xf010f294u)	/* ATOM4 Channel 5 CCU1 Compare Register */
#define GTM_ATOM4_CH6_CM1	(*( GTM_ATOM0_CH0_CM1_type *) 0xf010f314u)	/* ATOM4 Channel 6 CCU1 Compare Register */
#define GTM_ATOM4_CH7_CM1	(*( GTM_ATOM0_CH0_CM1_type *) 0xf010f394u)	/* ATOM4 Channel 7 CCU1 Compare Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 CN0            : 24;	/* ATOM CCU0 counter register */
		/* const */ unsigned __sfrbit32 Reserved       : 8;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GTM_ATOM0_CH0_CN0_type;
#define GTM_ATOM0_CH0_CN0	(*( GTM_ATOM0_CH0_CN0_type *) 0xf010d018u)	/* ATOM0 Channel 0 CCU0 Counter Register */
#define GTM_ATOM0_CH1_CN0	(*( GTM_ATOM0_CH0_CN0_type *) 0xf010d098u)	/* ATOM0 Channel 1 CCU0 Counter Register */
#define GTM_ATOM0_CH2_CN0	(*( GTM_ATOM0_CH0_CN0_type *) 0xf010d118u)	/* ATOM0 Channel 2 CCU0 Counter Register */
#define GTM_ATOM0_CH3_CN0	(*( GTM_ATOM0_CH0_CN0_type *) 0xf010d198u)	/* ATOM0 Channel 3 CCU0 Counter Register */
#define GTM_ATOM0_CH4_CN0	(*( GTM_ATOM0_CH0_CN0_type *) 0xf010d218u)	/* ATOM0 Channel 4 CCU0 Counter Register */
#define GTM_ATOM0_CH5_CN0	(*( GTM_ATOM0_CH0_CN0_type *) 0xf010d298u)	/* ATOM0 Channel 5 CCU0 Counter Register */
#define GTM_ATOM0_CH6_CN0	(*( GTM_ATOM0_CH0_CN0_type *) 0xf010d318u)	/* ATOM0 Channel 6 CCU0 Counter Register */
#define GTM_ATOM0_CH7_CN0	(*( GTM_ATOM0_CH0_CN0_type *) 0xf010d398u)	/* ATOM0 Channel 7 CCU0 Counter Register */
#define GTM_ATOM1_CH0_CN0	(*( GTM_ATOM0_CH0_CN0_type *) 0xf010d818u)	/* ATOM1 Channel 0 CCU0 Counter Register */
#define GTM_ATOM1_CH1_CN0	(*( GTM_ATOM0_CH0_CN0_type *) 0xf010d898u)	/* ATOM1 Channel 1 CCU0 Counter Register */
#define GTM_ATOM1_CH2_CN0	(*( GTM_ATOM0_CH0_CN0_type *) 0xf010d918u)	/* ATOM1 Channel 2 CCU0 Counter Register */
#define GTM_ATOM1_CH3_CN0	(*( GTM_ATOM0_CH0_CN0_type *) 0xf010d998u)	/* ATOM1 Channel 3 CCU0 Counter Register */
#define GTM_ATOM1_CH4_CN0	(*( GTM_ATOM0_CH0_CN0_type *) 0xf010da18u)	/* ATOM1 Channel 4 CCU0 Counter Register */
#define GTM_ATOM1_CH5_CN0	(*( GTM_ATOM0_CH0_CN0_type *) 0xf010da98u)	/* ATOM1 Channel 5 CCU0 Counter Register */
#define GTM_ATOM1_CH6_CN0	(*( GTM_ATOM0_CH0_CN0_type *) 0xf010db18u)	/* ATOM1 Channel 6 CCU0 Counter Register */
#define GTM_ATOM1_CH7_CN0	(*( GTM_ATOM0_CH0_CN0_type *) 0xf010db98u)	/* ATOM1 Channel 7 CCU0 Counter Register */
#define GTM_ATOM2_CH0_CN0	(*( GTM_ATOM0_CH0_CN0_type *) 0xf010e018u)	/* ATOM2 Channel 0 CCU0 Counter Register */
#define GTM_ATOM2_CH1_CN0	(*( GTM_ATOM0_CH0_CN0_type *) 0xf010e098u)	/* ATOM2 Channel 1 CCU0 Counter Register */
#define GTM_ATOM2_CH2_CN0	(*( GTM_ATOM0_CH0_CN0_type *) 0xf010e118u)	/* ATOM2 Channel 2 CCU0 Counter Register */
#define GTM_ATOM2_CH3_CN0	(*( GTM_ATOM0_CH0_CN0_type *) 0xf010e198u)	/* ATOM2 Channel 3 CCU0 Counter Register */
#define GTM_ATOM2_CH4_CN0	(*( GTM_ATOM0_CH0_CN0_type *) 0xf010e218u)	/* ATOM2 Channel 4 CCU0 Counter Register */
#define GTM_ATOM2_CH5_CN0	(*( GTM_ATOM0_CH0_CN0_type *) 0xf010e298u)	/* ATOM2 Channel 5 CCU0 Counter Register */
#define GTM_ATOM2_CH6_CN0	(*( GTM_ATOM0_CH0_CN0_type *) 0xf010e318u)	/* ATOM2 Channel 6 CCU0 Counter Register */
#define GTM_ATOM2_CH7_CN0	(*( GTM_ATOM0_CH0_CN0_type *) 0xf010e398u)	/* ATOM2 Channel 7 CCU0 Counter Register */
#define GTM_ATOM3_CH0_CN0	(*( GTM_ATOM0_CH0_CN0_type *) 0xf010e818u)	/* ATOM3 Channel 0 CCU0 Counter Register */
#define GTM_ATOM3_CH1_CN0	(*( GTM_ATOM0_CH0_CN0_type *) 0xf010e898u)	/* ATOM3 Channel 1 CCU0 Counter Register */
#define GTM_ATOM3_CH2_CN0	(*( GTM_ATOM0_CH0_CN0_type *) 0xf010e918u)	/* ATOM3 Channel 2 CCU0 Counter Register */
#define GTM_ATOM3_CH3_CN0	(*( GTM_ATOM0_CH0_CN0_type *) 0xf010e998u)	/* ATOM3 Channel 3 CCU0 Counter Register */
#define GTM_ATOM3_CH4_CN0	(*( GTM_ATOM0_CH0_CN0_type *) 0xf010ea18u)	/* ATOM3 Channel 4 CCU0 Counter Register */
#define GTM_ATOM3_CH5_CN0	(*( GTM_ATOM0_CH0_CN0_type *) 0xf010ea98u)	/* ATOM3 Channel 5 CCU0 Counter Register */
#define GTM_ATOM3_CH6_CN0	(*( GTM_ATOM0_CH0_CN0_type *) 0xf010eb18u)	/* ATOM3 Channel 6 CCU0 Counter Register */
#define GTM_ATOM3_CH7_CN0	(*( GTM_ATOM0_CH0_CN0_type *) 0xf010eb98u)	/* ATOM3 Channel 7 CCU0 Counter Register */
#define GTM_ATOM4_CH0_CN0	(*( GTM_ATOM0_CH0_CN0_type *) 0xf010f018u)	/* ATOM4 Channel 0 CCU0 Counter Register */
#define GTM_ATOM4_CH1_CN0	(*( GTM_ATOM0_CH0_CN0_type *) 0xf010f098u)	/* ATOM4 Channel 1 CCU0 Counter Register */
#define GTM_ATOM4_CH2_CN0	(*( GTM_ATOM0_CH0_CN0_type *) 0xf010f118u)	/* ATOM4 Channel 2 CCU0 Counter Register */
#define GTM_ATOM4_CH3_CN0	(*( GTM_ATOM0_CH0_CN0_type *) 0xf010f198u)	/* ATOM4 Channel 3 CCU0 Counter Register */
#define GTM_ATOM4_CH4_CN0	(*( GTM_ATOM0_CH0_CN0_type *) 0xf010f218u)	/* ATOM4 Channel 4 CCU0 Counter Register */
#define GTM_ATOM4_CH5_CN0	(*( GTM_ATOM0_CH0_CN0_type *) 0xf010f298u)	/* ATOM4 Channel 5 CCU0 Counter Register */
#define GTM_ATOM4_CH6_CN0	(*( GTM_ATOM0_CH0_CN0_type *) 0xf010f318u)	/* ATOM4 Channel 6 CCU0 Counter Register */
#define GTM_ATOM4_CH7_CN0	(*( GTM_ATOM0_CH0_CN0_type *) 0xf010f398u)	/* ATOM4 Channel 7 CCU0 Counter Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 MODE           : 2;	/* ATOM channel mode select */
		unsigned __sfrbit32 TB12_SEL       : 1;	/* Select time base value TBU_TS1 or TBU_TS2. */
		unsigned __sfrbit32 ARU_EN         : 1;	/* ARU Input stream enable */
		unsigned __sfrbit32 ACB            : 5;	/* ATOM Mode control bits */
		unsigned __sfrbit32 CMP_CTRL       : 1;	/* CCUx compare strategy select */
		/* const */ unsigned __sfrbit32 Reserved       : 1;	/* Reserved */
		unsigned __sfrbit32 SL             : 1;	/* Initial signal level */
		unsigned __sfrbit32 CLK_SRC_CLK_SRC_SR: 3;	/* actual CMU clock source (SOMS)/ shadow register for CMU clock source (SOMP) */
		/* const */ unsigned __sfrbit32 Reserved_9     : 1;	/* Reserved */
		unsigned __sfrbit32 WR_REQ         : 1;	/* CPU Write request bit for late compare register update */
		/* const */ unsigned __sfrbit32 Reserved_11    : 3;	/* Reserved */
		unsigned __sfrbit32 RST_CCU0       : 1;	/* Reset source of CCU0 */
		/* const */ unsigned __sfrbit32 Reserved_13    : 3;	/* Reserved */
		unsigned __sfrbit32 TRIGOUT        : 1;	/* Trigger output selection (output signal TRIG_CHx) of module ATOM_CHx. */
		unsigned __sfrbit32 SLA            : 1;	/* Serve last ARU communication strategy */
		unsigned __sfrbit32 OSM            : 1;	/* One-shot mode */
		unsigned __sfrbit32 ABM            : 1;	/* ARU blocking mode */
		/* const */ unsigned __sfrbit32 Reserved_18    : 4;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GTM_ATOM0_CH0_CTRL_type;
#define GTM_ATOM0_CH0_CTRL	(*( GTM_ATOM0_CH0_CTRL_type *) 0xf010d004u)	/* ATOM0 Channel 0 Control Register */
#define GTM_ATOM0_CH1_CTRL	(*( GTM_ATOM0_CH0_CTRL_type *) 0xf010d084u)	/* ATOM0 Channel 1 Control Register */
#define GTM_ATOM0_CH2_CTRL	(*( GTM_ATOM0_CH0_CTRL_type *) 0xf010d104u)	/* ATOM0 Channel 2 Control Register */
#define GTM_ATOM0_CH3_CTRL	(*( GTM_ATOM0_CH0_CTRL_type *) 0xf010d184u)	/* ATOM0 Channel 3 Control Register */
#define GTM_ATOM0_CH4_CTRL	(*( GTM_ATOM0_CH0_CTRL_type *) 0xf010d204u)	/* ATOM0 Channel 4 Control Register */
#define GTM_ATOM0_CH5_CTRL	(*( GTM_ATOM0_CH0_CTRL_type *) 0xf010d284u)	/* ATOM0 Channel 5 Control Register */
#define GTM_ATOM0_CH6_CTRL	(*( GTM_ATOM0_CH0_CTRL_type *) 0xf010d304u)	/* ATOM0 Channel 6 Control Register */
#define GTM_ATOM0_CH7_CTRL	(*( GTM_ATOM0_CH0_CTRL_type *) 0xf010d384u)	/* ATOM0 Channel 7 Control Register */
#define GTM_ATOM1_CH0_CTRL	(*( GTM_ATOM0_CH0_CTRL_type *) 0xf010d804u)	/* ATOM1 Channel 0 Control Register */
#define GTM_ATOM1_CH1_CTRL	(*( GTM_ATOM0_CH0_CTRL_type *) 0xf010d884u)	/* ATOM1 Channel 1 Control Register */
#define GTM_ATOM1_CH2_CTRL	(*( GTM_ATOM0_CH0_CTRL_type *) 0xf010d904u)	/* ATOM1 Channel 2 Control Register */
#define GTM_ATOM1_CH3_CTRL	(*( GTM_ATOM0_CH0_CTRL_type *) 0xf010d984u)	/* ATOM1 Channel 3 Control Register */
#define GTM_ATOM1_CH4_CTRL	(*( GTM_ATOM0_CH0_CTRL_type *) 0xf010da04u)	/* ATOM1 Channel 4 Control Register */
#define GTM_ATOM1_CH5_CTRL	(*( GTM_ATOM0_CH0_CTRL_type *) 0xf010da84u)	/* ATOM1 Channel 5 Control Register */
#define GTM_ATOM1_CH6_CTRL	(*( GTM_ATOM0_CH0_CTRL_type *) 0xf010db04u)	/* ATOM1 Channel 6 Control Register */
#define GTM_ATOM1_CH7_CTRL	(*( GTM_ATOM0_CH0_CTRL_type *) 0xf010db84u)	/* ATOM1 Channel 7 Control Register */
#define GTM_ATOM2_CH0_CTRL	(*( GTM_ATOM0_CH0_CTRL_type *) 0xf010e004u)	/* ATOM2 Channel 0 Control Register */
#define GTM_ATOM2_CH1_CTRL	(*( GTM_ATOM0_CH0_CTRL_type *) 0xf010e084u)	/* ATOM2 Channel 1 Control Register */
#define GTM_ATOM2_CH2_CTRL	(*( GTM_ATOM0_CH0_CTRL_type *) 0xf010e104u)	/* ATOM2 Channel 2 Control Register */
#define GTM_ATOM2_CH3_CTRL	(*( GTM_ATOM0_CH0_CTRL_type *) 0xf010e184u)	/* ATOM2 Channel 3 Control Register */
#define GTM_ATOM2_CH4_CTRL	(*( GTM_ATOM0_CH0_CTRL_type *) 0xf010e204u)	/* ATOM2 Channel 4 Control Register */
#define GTM_ATOM2_CH5_CTRL	(*( GTM_ATOM0_CH0_CTRL_type *) 0xf010e284u)	/* ATOM2 Channel 5 Control Register */
#define GTM_ATOM2_CH6_CTRL	(*( GTM_ATOM0_CH0_CTRL_type *) 0xf010e304u)	/* ATOM2 Channel 6 Control Register */
#define GTM_ATOM2_CH7_CTRL	(*( GTM_ATOM0_CH0_CTRL_type *) 0xf010e384u)	/* ATOM2 Channel 7 Control Register */
#define GTM_ATOM3_CH0_CTRL	(*( GTM_ATOM0_CH0_CTRL_type *) 0xf010e804u)	/* ATOM3 Channel 0 Control Register */
#define GTM_ATOM3_CH1_CTRL	(*( GTM_ATOM0_CH0_CTRL_type *) 0xf010e884u)	/* ATOM3 Channel 1 Control Register */
#define GTM_ATOM3_CH2_CTRL	(*( GTM_ATOM0_CH0_CTRL_type *) 0xf010e904u)	/* ATOM3 Channel 2 Control Register */
#define GTM_ATOM3_CH3_CTRL	(*( GTM_ATOM0_CH0_CTRL_type *) 0xf010e984u)	/* ATOM3 Channel 3 Control Register */
#define GTM_ATOM3_CH4_CTRL	(*( GTM_ATOM0_CH0_CTRL_type *) 0xf010ea04u)	/* ATOM3 Channel 4 Control Register */
#define GTM_ATOM3_CH5_CTRL	(*( GTM_ATOM0_CH0_CTRL_type *) 0xf010ea84u)	/* ATOM3 Channel 5 Control Register */
#define GTM_ATOM3_CH6_CTRL	(*( GTM_ATOM0_CH0_CTRL_type *) 0xf010eb04u)	/* ATOM3 Channel 6 Control Register */
#define GTM_ATOM3_CH7_CTRL	(*( GTM_ATOM0_CH0_CTRL_type *) 0xf010eb84u)	/* ATOM3 Channel 7 Control Register */
#define GTM_ATOM4_CH0_CTRL	(*( GTM_ATOM0_CH0_CTRL_type *) 0xf010f004u)	/* ATOM4 Channel 0 Control Register */
#define GTM_ATOM4_CH1_CTRL	(*( GTM_ATOM0_CH0_CTRL_type *) 0xf010f084u)	/* ATOM4 Channel 1 Control Register */
#define GTM_ATOM4_CH2_CTRL	(*( GTM_ATOM0_CH0_CTRL_type *) 0xf010f104u)	/* ATOM4 Channel 2 Control Register */
#define GTM_ATOM4_CH3_CTRL	(*( GTM_ATOM0_CH0_CTRL_type *) 0xf010f184u)	/* ATOM4 Channel 3 Control Register */
#define GTM_ATOM4_CH4_CTRL	(*( GTM_ATOM0_CH0_CTRL_type *) 0xf010f204u)	/* ATOM4 Channel 4 Control Register */
#define GTM_ATOM4_CH5_CTRL	(*( GTM_ATOM0_CH0_CTRL_type *) 0xf010f284u)	/* ATOM4 Channel 5 Control Register */
#define GTM_ATOM4_CH6_CTRL	(*( GTM_ATOM0_CH0_CTRL_type *) 0xf010f304u)	/* ATOM4 Channel 6 Control Register */
#define GTM_ATOM4_CH7_CTRL	(*( GTM_ATOM0_CH0_CTRL_type *) 0xf010f384u)	/* ATOM4 Channel 7 Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 MODE           : 2;	/* ATOM channel mode select */
		unsigned __sfrbit32 TB12_SEL       : 1;	/* Select time base value TBU_TS1 or TBU_TS2. */
		unsigned __sfrbit32 ARU_EN         : 1;	/* ARU Input stream enable */
		unsigned __sfrbit32 ACB10          : 2;	/* Signal level control bits */
		unsigned __sfrbit32 ACB42          : 3;	/* ATOM control bits ACB(4), ACB(3), ACB(2) */
		unsigned __sfrbit32 CMP_CTRL       : 1;	/* CCUx compare strategy select */
		/* const */ unsigned __sfrbit32 Reserved       : 1;	/* Reserved */
		unsigned __sfrbit32 SL             : 1;	/* Initial signal level after channel enable */
		unsigned __sfrbit32 NotUsed        : 3;	/* Not used in this mode */
		/* const */ unsigned __sfrbit32 Reserved_10    : 1;	/* Reserved */
		unsigned __sfrbit32 WR_REQ         : 1;	/* CPU write request bit */
		/* const */ unsigned __sfrbit32 Reserved_12    : 3;	/* Reserved */
		unsigned __sfrbit32 NotUsed_13     : 1;	/* Not used in this mode */
		/* const */ unsigned __sfrbit32 NotUsed_14     : 3;	/* Not used in this mode */
		unsigned __sfrbit32 TRIGOUT        : 1;	/* Trigger output selection (output signal TRIG_CHx) of module ATOM_CHx */
		unsigned __sfrbit32 SLA            : 1;	/* Serve last ARU communication strategy */
		unsigned __sfrbit32 NotUsed_17     : 1;	/* Not used in this mode */
		unsigned __sfrbit32 ABM            : 1;	/* ARU blocking mode */
		/* const */ unsigned __sfrbit32 Reserved_19    : 4;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GTM_ATOM0_CH0_CTRL_SOMC_type;
#define GTM_ATOM0_CH0_CTRL_SOMC	(*( GTM_ATOM0_CH0_CTRL_SOMC_type *) 0xf010d004u)	/* ATOM0 Channel 0 Control in SOMC mode Register */
#define GTM_ATOM0_CH1_CTRL_SOMC	(*( GTM_ATOM0_CH0_CTRL_SOMC_type *) 0xf010d084u)	/* ATOM0 Channel 1 Control in SOMC mode Register */
#define GTM_ATOM0_CH2_CTRL_SOMC	(*( GTM_ATOM0_CH0_CTRL_SOMC_type *) 0xf010d104u)	/* ATOM0 Channel 2 Control in SOMC mode Register */
#define GTM_ATOM0_CH3_CTRL_SOMC	(*( GTM_ATOM0_CH0_CTRL_SOMC_type *) 0xf010d184u)	/* ATOM0 Channel 3 Control in SOMC mode Register */
#define GTM_ATOM0_CH4_CTRL_SOMC	(*( GTM_ATOM0_CH0_CTRL_SOMC_type *) 0xf010d204u)	/* ATOM0 Channel 4 Control in SOMC mode Register */
#define GTM_ATOM0_CH5_CTRL_SOMC	(*( GTM_ATOM0_CH0_CTRL_SOMC_type *) 0xf010d284u)	/* ATOM0 Channel 5 Control in SOMC mode Register */
#define GTM_ATOM0_CH6_CTRL_SOMC	(*( GTM_ATOM0_CH0_CTRL_SOMC_type *) 0xf010d304u)	/* ATOM0 Channel 6 Control in SOMC mode Register */
#define GTM_ATOM0_CH7_CTRL_SOMC	(*( GTM_ATOM0_CH0_CTRL_SOMC_type *) 0xf010d384u)	/* ATOM0 Channel 7 Control in SOMC mode Register */
#define GTM_ATOM1_CH0_CTRL_SOMC	(*( GTM_ATOM0_CH0_CTRL_SOMC_type *) 0xf010d804u)	/* ATOM1 Channel 0 Control in SOMC mode Register */
#define GTM_ATOM1_CH1_CTRL_SOMC	(*( GTM_ATOM0_CH0_CTRL_SOMC_type *) 0xf010d884u)	/* ATOM1 Channel 1 Control in SOMC mode Register */
#define GTM_ATOM1_CH2_CTRL_SOMC	(*( GTM_ATOM0_CH0_CTRL_SOMC_type *) 0xf010d904u)	/* ATOM1 Channel 2 Control in SOMC mode Register */
#define GTM_ATOM1_CH3_CTRL_SOMC	(*( GTM_ATOM0_CH0_CTRL_SOMC_type *) 0xf010d984u)	/* ATOM1 Channel 3 Control in SOMC mode Register */
#define GTM_ATOM1_CH4_CTRL_SOMC	(*( GTM_ATOM0_CH0_CTRL_SOMC_type *) 0xf010da04u)	/* ATOM1 Channel 4 Control in SOMC mode Register */
#define GTM_ATOM1_CH5_CTRL_SOMC	(*( GTM_ATOM0_CH0_CTRL_SOMC_type *) 0xf010da84u)	/* ATOM1 Channel 5 Control in SOMC mode Register */
#define GTM_ATOM1_CH6_CTRL_SOMC	(*( GTM_ATOM0_CH0_CTRL_SOMC_type *) 0xf010db04u)	/* ATOM1 Channel 6 Control in SOMC mode Register */
#define GTM_ATOM1_CH7_CTRL_SOMC	(*( GTM_ATOM0_CH0_CTRL_SOMC_type *) 0xf010db84u)	/* ATOM1 Channel 7 Control in SOMC mode Register */
#define GTM_ATOM2_CH0_CTRL_SOMC	(*( GTM_ATOM0_CH0_CTRL_SOMC_type *) 0xf010e004u)	/* ATOM2 Channel 0 Control in SOMC mode Register */
#define GTM_ATOM2_CH1_CTRL_SOMC	(*( GTM_ATOM0_CH0_CTRL_SOMC_type *) 0xf010e084u)	/* ATOM2 Channel 1 Control in SOMC mode Register */
#define GTM_ATOM2_CH2_CTRL_SOMC	(*( GTM_ATOM0_CH0_CTRL_SOMC_type *) 0xf010e104u)	/* ATOM2 Channel 2 Control in SOMC mode Register */
#define GTM_ATOM2_CH3_CTRL_SOMC	(*( GTM_ATOM0_CH0_CTRL_SOMC_type *) 0xf010e184u)	/* ATOM2 Channel 3 Control in SOMC mode Register */
#define GTM_ATOM2_CH4_CTRL_SOMC	(*( GTM_ATOM0_CH0_CTRL_SOMC_type *) 0xf010e204u)	/* ATOM2 Channel 4 Control in SOMC mode Register */
#define GTM_ATOM2_CH5_CTRL_SOMC	(*( GTM_ATOM0_CH0_CTRL_SOMC_type *) 0xf010e284u)	/* ATOM2 Channel 5 Control in SOMC mode Register */
#define GTM_ATOM2_CH6_CTRL_SOMC	(*( GTM_ATOM0_CH0_CTRL_SOMC_type *) 0xf010e304u)	/* ATOM2 Channel 6 Control in SOMC mode Register */
#define GTM_ATOM2_CH7_CTRL_SOMC	(*( GTM_ATOM0_CH0_CTRL_SOMC_type *) 0xf010e384u)	/* ATOM2 Channel 7 Control in SOMC mode Register */
#define GTM_ATOM3_CH0_CTRL_SOMC	(*( GTM_ATOM0_CH0_CTRL_SOMC_type *) 0xf010e804u)	/* ATOM3 Channel 0 Control in SOMC mode Register */
#define GTM_ATOM3_CH1_CTRL_SOMC	(*( GTM_ATOM0_CH0_CTRL_SOMC_type *) 0xf010e884u)	/* ATOM3 Channel 1 Control in SOMC mode Register */
#define GTM_ATOM3_CH2_CTRL_SOMC	(*( GTM_ATOM0_CH0_CTRL_SOMC_type *) 0xf010e904u)	/* ATOM3 Channel 2 Control in SOMC mode Register */
#define GTM_ATOM3_CH3_CTRL_SOMC	(*( GTM_ATOM0_CH0_CTRL_SOMC_type *) 0xf010e984u)	/* ATOM3 Channel 3 Control in SOMC mode Register */
#define GTM_ATOM3_CH4_CTRL_SOMC	(*( GTM_ATOM0_CH0_CTRL_SOMC_type *) 0xf010ea04u)	/* ATOM3 Channel 4 Control in SOMC mode Register */
#define GTM_ATOM3_CH5_CTRL_SOMC	(*( GTM_ATOM0_CH0_CTRL_SOMC_type *) 0xf010ea84u)	/* ATOM3 Channel 5 Control in SOMC mode Register */
#define GTM_ATOM3_CH6_CTRL_SOMC	(*( GTM_ATOM0_CH0_CTRL_SOMC_type *) 0xf010eb04u)	/* ATOM3 Channel 6 Control in SOMC mode Register */
#define GTM_ATOM3_CH7_CTRL_SOMC	(*( GTM_ATOM0_CH0_CTRL_SOMC_type *) 0xf010eb84u)	/* ATOM3 Channel 7 Control in SOMC mode Register */
#define GTM_ATOM4_CH0_CTRL_SOMC	(*( GTM_ATOM0_CH0_CTRL_SOMC_type *) 0xf010f004u)	/* ATOM4 Channel 0 Control in SOMC mode Register */
#define GTM_ATOM4_CH1_CTRL_SOMC	(*( GTM_ATOM0_CH0_CTRL_SOMC_type *) 0xf010f084u)	/* ATOM4 Channel 1 Control in SOMC mode Register */
#define GTM_ATOM4_CH2_CTRL_SOMC	(*( GTM_ATOM0_CH0_CTRL_SOMC_type *) 0xf010f104u)	/* ATOM4 Channel 2 Control in SOMC mode Register */
#define GTM_ATOM4_CH3_CTRL_SOMC	(*( GTM_ATOM0_CH0_CTRL_SOMC_type *) 0xf010f184u)	/* ATOM4 Channel 3 Control in SOMC mode Register */
#define GTM_ATOM4_CH4_CTRL_SOMC	(*( GTM_ATOM0_CH0_CTRL_SOMC_type *) 0xf010f204u)	/* ATOM4 Channel 4 Control in SOMC mode Register */
#define GTM_ATOM4_CH5_CTRL_SOMC	(*( GTM_ATOM0_CH0_CTRL_SOMC_type *) 0xf010f284u)	/* ATOM4 Channel 5 Control in SOMC mode Register */
#define GTM_ATOM4_CH6_CTRL_SOMC	(*( GTM_ATOM0_CH0_CTRL_SOMC_type *) 0xf010f304u)	/* ATOM4 Channel 6 Control in SOMC mode Register */
#define GTM_ATOM4_CH7_CTRL_SOMC	(*( GTM_ATOM0_CH0_CTRL_SOMC_type *) 0xf010f384u)	/* ATOM4 Channel 7 Control in SOMC mode Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 MODE           : 2;	/* ATOM channel mode select */
		unsigned __sfrbit32 NotUsed        : 1;	/* Not used in this mode */
		unsigned __sfrbit32 ARU_EN         : 1;	/* ARU Input stream enable */
		unsigned __sfrbit32 ACB0           : 1;	/* ACB bit 0 */
		unsigned __sfrbit32 NotUsed_5      : 4;	/* Not used in this mode */
		/* const */ unsigned __sfrbit32 Reserved       : 2;	/* Reserved */
		unsigned __sfrbit32 SL             : 1;	/* Initial signal level after channel is enabled */
		unsigned __sfrbit32 NotUsed_8      : 3;	/* Not used in this mode */
		/* const */ unsigned __sfrbit32 Reserved_9     : 1;	/* Reserved */
		unsigned __sfrbit32 NotUsed_10     : 1;	/* Not used in this mode */
		/* const */ unsigned __sfrbit32 Reserved_11    : 3;	/* Reserved */
		unsigned __sfrbit32 NotUsed_12     : 1;	/* Not used in this mode */
		/* const */ unsigned __sfrbit32 NotUsed_13     : 3;	/* Not used in this mode */
		unsigned __sfrbit32 NotUsed_14     : 1;	/* Not used in this mode */
		/* const */ unsigned __sfrbit32 Reserved_15    : 1;	/* Reserved */
		unsigned __sfrbit32 NotUsed_16     : 1;	/* Not used in this mode */
		unsigned __sfrbit32 NotUsed_17     : 1;	/* Not used in this mode */
		/* const */ unsigned __sfrbit32 Reserved_18    : 4;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GTM_ATOM0_CH0_CTRL_SOMI_type;
#define GTM_ATOM0_CH0_CTRL_SOMI	(*( GTM_ATOM0_CH0_CTRL_SOMI_type *) 0xf010d004u)	/* ATOM0 Channel 0 Control in SOMI mode Register */
#define GTM_ATOM0_CH1_CTRL_SOMI	(*( GTM_ATOM0_CH0_CTRL_SOMI_type *) 0xf010d084u)	/* ATOM0 Channel 1 Control in SOMI mode Register */
#define GTM_ATOM0_CH2_CTRL_SOMI	(*( GTM_ATOM0_CH0_CTRL_SOMI_type *) 0xf010d104u)	/* ATOM0 Channel 2 Control in SOMI mode Register */
#define GTM_ATOM0_CH3_CTRL_SOMI	(*( GTM_ATOM0_CH0_CTRL_SOMI_type *) 0xf010d184u)	/* ATOM0 Channel 3 Control in SOMI mode Register */
#define GTM_ATOM0_CH4_CTRL_SOMI	(*( GTM_ATOM0_CH0_CTRL_SOMI_type *) 0xf010d204u)	/* ATOM0 Channel 4 Control in SOMI mode Register */
#define GTM_ATOM0_CH5_CTRL_SOMI	(*( GTM_ATOM0_CH0_CTRL_SOMI_type *) 0xf010d284u)	/* ATOM0 Channel 5 Control in SOMI mode Register */
#define GTM_ATOM0_CH6_CTRL_SOMI	(*( GTM_ATOM0_CH0_CTRL_SOMI_type *) 0xf010d304u)	/* ATOM0 Channel 6 Control in SOMI mode Register */
#define GTM_ATOM0_CH7_CTRL_SOMI	(*( GTM_ATOM0_CH0_CTRL_SOMI_type *) 0xf010d384u)	/* ATOM0 Channel 7 Control in SOMI mode Register */
#define GTM_ATOM1_CH0_CTRL_SOMI	(*( GTM_ATOM0_CH0_CTRL_SOMI_type *) 0xf010d804u)	/* ATOM1 Channel 0 Control in SOMI mode Register */
#define GTM_ATOM1_CH1_CTRL_SOMI	(*( GTM_ATOM0_CH0_CTRL_SOMI_type *) 0xf010d884u)	/* ATOM1 Channel 1 Control in SOMI mode Register */
#define GTM_ATOM1_CH2_CTRL_SOMI	(*( GTM_ATOM0_CH0_CTRL_SOMI_type *) 0xf010d904u)	/* ATOM1 Channel 2 Control in SOMI mode Register */
#define GTM_ATOM1_CH3_CTRL_SOMI	(*( GTM_ATOM0_CH0_CTRL_SOMI_type *) 0xf010d984u)	/* ATOM1 Channel 3 Control in SOMI mode Register */
#define GTM_ATOM1_CH4_CTRL_SOMI	(*( GTM_ATOM0_CH0_CTRL_SOMI_type *) 0xf010da04u)	/* ATOM1 Channel 4 Control in SOMI mode Register */
#define GTM_ATOM1_CH5_CTRL_SOMI	(*( GTM_ATOM0_CH0_CTRL_SOMI_type *) 0xf010da84u)	/* ATOM1 Channel 5 Control in SOMI mode Register */
#define GTM_ATOM1_CH6_CTRL_SOMI	(*( GTM_ATOM0_CH0_CTRL_SOMI_type *) 0xf010db04u)	/* ATOM1 Channel 6 Control in SOMI mode Register */
#define GTM_ATOM1_CH7_CTRL_SOMI	(*( GTM_ATOM0_CH0_CTRL_SOMI_type *) 0xf010db84u)	/* ATOM1 Channel 7 Control in SOMI mode Register */
#define GTM_ATOM2_CH0_CTRL_SOMI	(*( GTM_ATOM0_CH0_CTRL_SOMI_type *) 0xf010e004u)	/* ATOM2 Channel 0 Control in SOMI mode Register */
#define GTM_ATOM2_CH1_CTRL_SOMI	(*( GTM_ATOM0_CH0_CTRL_SOMI_type *) 0xf010e084u)	/* ATOM2 Channel 1 Control in SOMI mode Register */
#define GTM_ATOM2_CH2_CTRL_SOMI	(*( GTM_ATOM0_CH0_CTRL_SOMI_type *) 0xf010e104u)	/* ATOM2 Channel 2 Control in SOMI mode Register */
#define GTM_ATOM2_CH3_CTRL_SOMI	(*( GTM_ATOM0_CH0_CTRL_SOMI_type *) 0xf010e184u)	/* ATOM2 Channel 3 Control in SOMI mode Register */
#define GTM_ATOM2_CH4_CTRL_SOMI	(*( GTM_ATOM0_CH0_CTRL_SOMI_type *) 0xf010e204u)	/* ATOM2 Channel 4 Control in SOMI mode Register */
#define GTM_ATOM2_CH5_CTRL_SOMI	(*( GTM_ATOM0_CH0_CTRL_SOMI_type *) 0xf010e284u)	/* ATOM2 Channel 5 Control in SOMI mode Register */
#define GTM_ATOM2_CH6_CTRL_SOMI	(*( GTM_ATOM0_CH0_CTRL_SOMI_type *) 0xf010e304u)	/* ATOM2 Channel 6 Control in SOMI mode Register */
#define GTM_ATOM2_CH7_CTRL_SOMI	(*( GTM_ATOM0_CH0_CTRL_SOMI_type *) 0xf010e384u)	/* ATOM2 Channel 7 Control in SOMI mode Register */
#define GTM_ATOM3_CH0_CTRL_SOMI	(*( GTM_ATOM0_CH0_CTRL_SOMI_type *) 0xf010e804u)	/* ATOM3 Channel 0 Control in SOMI mode Register */
#define GTM_ATOM3_CH1_CTRL_SOMI	(*( GTM_ATOM0_CH0_CTRL_SOMI_type *) 0xf010e884u)	/* ATOM3 Channel 1 Control in SOMI mode Register */
#define GTM_ATOM3_CH2_CTRL_SOMI	(*( GTM_ATOM0_CH0_CTRL_SOMI_type *) 0xf010e904u)	/* ATOM3 Channel 2 Control in SOMI mode Register */
#define GTM_ATOM3_CH3_CTRL_SOMI	(*( GTM_ATOM0_CH0_CTRL_SOMI_type *) 0xf010e984u)	/* ATOM3 Channel 3 Control in SOMI mode Register */
#define GTM_ATOM3_CH4_CTRL_SOMI	(*( GTM_ATOM0_CH0_CTRL_SOMI_type *) 0xf010ea04u)	/* ATOM3 Channel 4 Control in SOMI mode Register */
#define GTM_ATOM3_CH5_CTRL_SOMI	(*( GTM_ATOM0_CH0_CTRL_SOMI_type *) 0xf010ea84u)	/* ATOM3 Channel 5 Control in SOMI mode Register */
#define GTM_ATOM3_CH6_CTRL_SOMI	(*( GTM_ATOM0_CH0_CTRL_SOMI_type *) 0xf010eb04u)	/* ATOM3 Channel 6 Control in SOMI mode Register */
#define GTM_ATOM3_CH7_CTRL_SOMI	(*( GTM_ATOM0_CH0_CTRL_SOMI_type *) 0xf010eb84u)	/* ATOM3 Channel 7 Control in SOMI mode Register */
#define GTM_ATOM4_CH0_CTRL_SOMI	(*( GTM_ATOM0_CH0_CTRL_SOMI_type *) 0xf010f004u)	/* ATOM4 Channel 0 Control in SOMI mode Register */
#define GTM_ATOM4_CH1_CTRL_SOMI	(*( GTM_ATOM0_CH0_CTRL_SOMI_type *) 0xf010f084u)	/* ATOM4 Channel 1 Control in SOMI mode Register */
#define GTM_ATOM4_CH2_CTRL_SOMI	(*( GTM_ATOM0_CH0_CTRL_SOMI_type *) 0xf010f104u)	/* ATOM4 Channel 2 Control in SOMI mode Register */
#define GTM_ATOM4_CH3_CTRL_SOMI	(*( GTM_ATOM0_CH0_CTRL_SOMI_type *) 0xf010f184u)	/* ATOM4 Channel 3 Control in SOMI mode Register */
#define GTM_ATOM4_CH4_CTRL_SOMI	(*( GTM_ATOM0_CH0_CTRL_SOMI_type *) 0xf010f204u)	/* ATOM4 Channel 4 Control in SOMI mode Register */
#define GTM_ATOM4_CH5_CTRL_SOMI	(*( GTM_ATOM0_CH0_CTRL_SOMI_type *) 0xf010f284u)	/* ATOM4 Channel 5 Control in SOMI mode Register */
#define GTM_ATOM4_CH6_CTRL_SOMI	(*( GTM_ATOM0_CH0_CTRL_SOMI_type *) 0xf010f304u)	/* ATOM4 Channel 6 Control in SOMI mode Register */
#define GTM_ATOM4_CH7_CTRL_SOMI	(*( GTM_ATOM0_CH0_CTRL_SOMI_type *) 0xf010f384u)	/* ATOM4 Channel 7 Control in SOMI mode Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 MODE           : 2;	/* ATOM channel mode select */
		unsigned __sfrbit32 NotUsed        : 1;	/* Not used in this mode */
		unsigned __sfrbit32 ARU_EN         : 1;	/* ARU Input stream enable */
		/* const */ unsigned __sfrbit32 ADL            : 2;	/* ARU data select for SOMP */
		/* const */ unsigned __sfrbit32 NotUsed_5      : 3;	/* Not used in this mode */
		/* const */ unsigned __sfrbit32 Reserved       : 2;	/* Reserved */
		unsigned __sfrbit32 SL             : 1;	/* Signal level for pulse of PWM */
		unsigned __sfrbit32 CLK_SRC_SR     : 3;	/* Shadow register for CMU clock source register CLK_SRC */
		/* const */ unsigned __sfrbit32 Reserved_9     : 1;	/* Reserved */
		unsigned __sfrbit32 NotUsed_10     : 1;	/* Not used in this mode */
		/* const */ unsigned __sfrbit32 Reserved_11    : 3;	/* Reserved */
		unsigned __sfrbit32 RST_CCU0       : 1;	/* Reset source of CCU0 */
		/* const */ unsigned __sfrbit32 NotUsed_13     : 3;	/* Not used in this mode */
		unsigned __sfrbit32 TRIGOUT        : 1;	/* Trigger output selection (output signal TRIG_CHx) of module ATOM_CHx. */
		/* const */ unsigned __sfrbit32 Reserved_15    : 1;	/* Reserved */
		unsigned __sfrbit32 OSM            : 1;	/* One-shot mode */
		unsigned __sfrbit32 NotUsed_17     : 1;	/* Not used in this mode */
		/* const */ unsigned __sfrbit32 Reserved_18    : 4;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GTM_ATOM0_CH0_CTRL_SOMP_type;
#define GTM_ATOM0_CH0_CTRL_SOMP	(*( GTM_ATOM0_CH0_CTRL_SOMP_type *) 0xf010d004u)	/* ATOM0 Channel 0 Control in SOMP mode Register */
#define GTM_ATOM0_CH1_CTRL_SOMP	(*( GTM_ATOM0_CH0_CTRL_SOMP_type *) 0xf010d084u)	/* ATOM0 Channel 1 Control in SOMP mode Register */
#define GTM_ATOM0_CH2_CTRL_SOMP	(*( GTM_ATOM0_CH0_CTRL_SOMP_type *) 0xf010d104u)	/* ATOM0 Channel 2 Control in SOMP mode Register */
#define GTM_ATOM0_CH3_CTRL_SOMP	(*( GTM_ATOM0_CH0_CTRL_SOMP_type *) 0xf010d184u)	/* ATOM0 Channel 3 Control in SOMP mode Register */
#define GTM_ATOM0_CH4_CTRL_SOMP	(*( GTM_ATOM0_CH0_CTRL_SOMP_type *) 0xf010d204u)	/* ATOM0 Channel 4 Control in SOMP mode Register */
#define GTM_ATOM0_CH5_CTRL_SOMP	(*( GTM_ATOM0_CH0_CTRL_SOMP_type *) 0xf010d284u)	/* ATOM0 Channel 5 Control in SOMP mode Register */
#define GTM_ATOM0_CH6_CTRL_SOMP	(*( GTM_ATOM0_CH0_CTRL_SOMP_type *) 0xf010d304u)	/* ATOM0 Channel 6 Control in SOMP mode Register */
#define GTM_ATOM0_CH7_CTRL_SOMP	(*( GTM_ATOM0_CH0_CTRL_SOMP_type *) 0xf010d384u)	/* ATOM0 Channel 7 Control in SOMP mode Register */
#define GTM_ATOM1_CH0_CTRL_SOMP	(*( GTM_ATOM0_CH0_CTRL_SOMP_type *) 0xf010d804u)	/* ATOM1 Channel 0 Control in SOMP mode Register */
#define GTM_ATOM1_CH1_CTRL_SOMP	(*( GTM_ATOM0_CH0_CTRL_SOMP_type *) 0xf010d884u)	/* ATOM1 Channel 1 Control in SOMP mode Register */
#define GTM_ATOM1_CH2_CTRL_SOMP	(*( GTM_ATOM0_CH0_CTRL_SOMP_type *) 0xf010d904u)	/* ATOM1 Channel 2 Control in SOMP mode Register */
#define GTM_ATOM1_CH3_CTRL_SOMP	(*( GTM_ATOM0_CH0_CTRL_SOMP_type *) 0xf010d984u)	/* ATOM1 Channel 3 Control in SOMP mode Register */
#define GTM_ATOM1_CH4_CTRL_SOMP	(*( GTM_ATOM0_CH0_CTRL_SOMP_type *) 0xf010da04u)	/* ATOM1 Channel 4 Control in SOMP mode Register */
#define GTM_ATOM1_CH5_CTRL_SOMP	(*( GTM_ATOM0_CH0_CTRL_SOMP_type *) 0xf010da84u)	/* ATOM1 Channel 5 Control in SOMP mode Register */
#define GTM_ATOM1_CH6_CTRL_SOMP	(*( GTM_ATOM0_CH0_CTRL_SOMP_type *) 0xf010db04u)	/* ATOM1 Channel 6 Control in SOMP mode Register */
#define GTM_ATOM1_CH7_CTRL_SOMP	(*( GTM_ATOM0_CH0_CTRL_SOMP_type *) 0xf010db84u)	/* ATOM1 Channel 7 Control in SOMP mode Register */
#define GTM_ATOM2_CH0_CTRL_SOMP	(*( GTM_ATOM0_CH0_CTRL_SOMP_type *) 0xf010e004u)	/* ATOM2 Channel 0 Control in SOMP mode Register */
#define GTM_ATOM2_CH1_CTRL_SOMP	(*( GTM_ATOM0_CH0_CTRL_SOMP_type *) 0xf010e084u)	/* ATOM2 Channel 1 Control in SOMP mode Register */
#define GTM_ATOM2_CH2_CTRL_SOMP	(*( GTM_ATOM0_CH0_CTRL_SOMP_type *) 0xf010e104u)	/* ATOM2 Channel 2 Control in SOMP mode Register */
#define GTM_ATOM2_CH3_CTRL_SOMP	(*( GTM_ATOM0_CH0_CTRL_SOMP_type *) 0xf010e184u)	/* ATOM2 Channel 3 Control in SOMP mode Register */
#define GTM_ATOM2_CH4_CTRL_SOMP	(*( GTM_ATOM0_CH0_CTRL_SOMP_type *) 0xf010e204u)	/* ATOM2 Channel 4 Control in SOMP mode Register */
#define GTM_ATOM2_CH5_CTRL_SOMP	(*( GTM_ATOM0_CH0_CTRL_SOMP_type *) 0xf010e284u)	/* ATOM2 Channel 5 Control in SOMP mode Register */
#define GTM_ATOM2_CH6_CTRL_SOMP	(*( GTM_ATOM0_CH0_CTRL_SOMP_type *) 0xf010e304u)	/* ATOM2 Channel 6 Control in SOMP mode Register */
#define GTM_ATOM2_CH7_CTRL_SOMP	(*( GTM_ATOM0_CH0_CTRL_SOMP_type *) 0xf010e384u)	/* ATOM2 Channel 7 Control in SOMP mode Register */
#define GTM_ATOM3_CH0_CTRL_SOMP	(*( GTM_ATOM0_CH0_CTRL_SOMP_type *) 0xf010e804u)	/* ATOM3 Channel 0 Control in SOMP mode Register */
#define GTM_ATOM3_CH1_CTRL_SOMP	(*( GTM_ATOM0_CH0_CTRL_SOMP_type *) 0xf010e884u)	/* ATOM3 Channel 1 Control in SOMP mode Register */
#define GTM_ATOM3_CH2_CTRL_SOMP	(*( GTM_ATOM0_CH0_CTRL_SOMP_type *) 0xf010e904u)	/* ATOM3 Channel 2 Control in SOMP mode Register */
#define GTM_ATOM3_CH3_CTRL_SOMP	(*( GTM_ATOM0_CH0_CTRL_SOMP_type *) 0xf010e984u)	/* ATOM3 Channel 3 Control in SOMP mode Register */
#define GTM_ATOM3_CH4_CTRL_SOMP	(*( GTM_ATOM0_CH0_CTRL_SOMP_type *) 0xf010ea04u)	/* ATOM3 Channel 4 Control in SOMP mode Register */
#define GTM_ATOM3_CH5_CTRL_SOMP	(*( GTM_ATOM0_CH0_CTRL_SOMP_type *) 0xf010ea84u)	/* ATOM3 Channel 5 Control in SOMP mode Register */
#define GTM_ATOM3_CH6_CTRL_SOMP	(*( GTM_ATOM0_CH0_CTRL_SOMP_type *) 0xf010eb04u)	/* ATOM3 Channel 6 Control in SOMP mode Register */
#define GTM_ATOM3_CH7_CTRL_SOMP	(*( GTM_ATOM0_CH0_CTRL_SOMP_type *) 0xf010eb84u)	/* ATOM3 Channel 7 Control in SOMP mode Register */
#define GTM_ATOM4_CH0_CTRL_SOMP	(*( GTM_ATOM0_CH0_CTRL_SOMP_type *) 0xf010f004u)	/* ATOM4 Channel 0 Control in SOMP mode Register */
#define GTM_ATOM4_CH1_CTRL_SOMP	(*( GTM_ATOM0_CH0_CTRL_SOMP_type *) 0xf010f084u)	/* ATOM4 Channel 1 Control in SOMP mode Register */
#define GTM_ATOM4_CH2_CTRL_SOMP	(*( GTM_ATOM0_CH0_CTRL_SOMP_type *) 0xf010f104u)	/* ATOM4 Channel 2 Control in SOMP mode Register */
#define GTM_ATOM4_CH3_CTRL_SOMP	(*( GTM_ATOM0_CH0_CTRL_SOMP_type *) 0xf010f184u)	/* ATOM4 Channel 3 Control in SOMP mode Register */
#define GTM_ATOM4_CH4_CTRL_SOMP	(*( GTM_ATOM0_CH0_CTRL_SOMP_type *) 0xf010f204u)	/* ATOM4 Channel 4 Control in SOMP mode Register */
#define GTM_ATOM4_CH5_CTRL_SOMP	(*( GTM_ATOM0_CH0_CTRL_SOMP_type *) 0xf010f284u)	/* ATOM4 Channel 5 Control in SOMP mode Register */
#define GTM_ATOM4_CH6_CTRL_SOMP	(*( GTM_ATOM0_CH0_CTRL_SOMP_type *) 0xf010f304u)	/* ATOM4 Channel 6 Control in SOMP mode Register */
#define GTM_ATOM4_CH7_CTRL_SOMP	(*( GTM_ATOM0_CH0_CTRL_SOMP_type *) 0xf010f384u)	/* ATOM4 Channel 7 Control in SOMP mode Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 MODE           : 2;	/* ATOM channel mode select */
		unsigned __sfrbit32 NotUsed        : 1;	/* Not used in this mode */
		unsigned __sfrbit32 ARU_EN         : 1;	/* ARU Input stream enable */
		unsigned __sfrbit32 ACB0           : 1;	/* Shift direction for CM1 register */
		unsigned __sfrbit32 NotUsed_5      : 4;	/* Not used in this mode */
		/* const */ unsigned __sfrbit32 Reserved       : 2;	/* Reserved */
		unsigned __sfrbit32 SL             : 1;	/* Defines signal level when channel and output is disable */
		unsigned __sfrbit32 CLK_SRC        : 3;	/* Shift frequency select for channel */
		/* const */ unsigned __sfrbit32 Reserved_9     : 1;	/* Reserved */
		unsigned __sfrbit32 NotUsed_10     : 1;	/* Not used in this mode */
		/* const */ unsigned __sfrbit32 Reserved_11    : 3;	/* Reserved */
		unsigned __sfrbit32 NotUsed_12     : 1;	/* Not used in this mode */
		/* const */ unsigned __sfrbit32 NotUsed_13     : 3;	/* Not used in this mode */
		unsigned __sfrbit32 NotUsed_14     : 1;	/* Not used in this mode */
		/* const */ unsigned __sfrbit32 Reserved_15    : 1;	/* Reserved */
		unsigned __sfrbit32 OSM            : 1;	/* One-shot mode */
		unsigned __sfrbit32 NotUsed_17     : 1;	/* Not used in this mode */
		/* const */ unsigned __sfrbit32 Reserved_18    : 4;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GTM_ATOM0_CH0_CTRL_SOMS_type;
#define GTM_ATOM0_CH0_CTRL_SOMS	(*( GTM_ATOM0_CH0_CTRL_SOMS_type *) 0xf010d004u)	/* ATOM0 Channel 0 Control in SOMS mode Register */
#define GTM_ATOM0_CH1_CTRL_SOMS	(*( GTM_ATOM0_CH0_CTRL_SOMS_type *) 0xf010d084u)	/* ATOM0 Channel 1 Control in SOMS mode Register */
#define GTM_ATOM0_CH2_CTRL_SOMS	(*( GTM_ATOM0_CH0_CTRL_SOMS_type *) 0xf010d104u)	/* ATOM0 Channel 2 Control in SOMS mode Register */
#define GTM_ATOM0_CH3_CTRL_SOMS	(*( GTM_ATOM0_CH0_CTRL_SOMS_type *) 0xf010d184u)	/* ATOM0 Channel 3 Control in SOMS mode Register */
#define GTM_ATOM0_CH4_CTRL_SOMS	(*( GTM_ATOM0_CH0_CTRL_SOMS_type *) 0xf010d204u)	/* ATOM0 Channel 4 Control in SOMS mode Register */
#define GTM_ATOM0_CH5_CTRL_SOMS	(*( GTM_ATOM0_CH0_CTRL_SOMS_type *) 0xf010d284u)	/* ATOM0 Channel 5 Control in SOMS mode Register */
#define GTM_ATOM0_CH6_CTRL_SOMS	(*( GTM_ATOM0_CH0_CTRL_SOMS_type *) 0xf010d304u)	/* ATOM0 Channel 6 Control in SOMS mode Register */
#define GTM_ATOM0_CH7_CTRL_SOMS	(*( GTM_ATOM0_CH0_CTRL_SOMS_type *) 0xf010d384u)	/* ATOM0 Channel 7 Control in SOMS mode Register */
#define GTM_ATOM1_CH0_CTRL_SOMS	(*( GTM_ATOM0_CH0_CTRL_SOMS_type *) 0xf010d804u)	/* ATOM1 Channel 0 Control in SOMS mode Register */
#define GTM_ATOM1_CH1_CTRL_SOMS	(*( GTM_ATOM0_CH0_CTRL_SOMS_type *) 0xf010d884u)	/* ATOM1 Channel 1 Control in SOMS mode Register */
#define GTM_ATOM1_CH2_CTRL_SOMS	(*( GTM_ATOM0_CH0_CTRL_SOMS_type *) 0xf010d904u)	/* ATOM1 Channel 2 Control in SOMS mode Register */
#define GTM_ATOM1_CH3_CTRL_SOMS	(*( GTM_ATOM0_CH0_CTRL_SOMS_type *) 0xf010d984u)	/* ATOM1 Channel 3 Control in SOMS mode Register */
#define GTM_ATOM1_CH4_CTRL_SOMS	(*( GTM_ATOM0_CH0_CTRL_SOMS_type *) 0xf010da04u)	/* ATOM1 Channel 4 Control in SOMS mode Register */
#define GTM_ATOM1_CH5_CTRL_SOMS	(*( GTM_ATOM0_CH0_CTRL_SOMS_type *) 0xf010da84u)	/* ATOM1 Channel 5 Control in SOMS mode Register */
#define GTM_ATOM1_CH6_CTRL_SOMS	(*( GTM_ATOM0_CH0_CTRL_SOMS_type *) 0xf010db04u)	/* ATOM1 Channel 6 Control in SOMS mode Register */
#define GTM_ATOM1_CH7_CTRL_SOMS	(*( GTM_ATOM0_CH0_CTRL_SOMS_type *) 0xf010db84u)	/* ATOM1 Channel 7 Control in SOMS mode Register */
#define GTM_ATOM2_CH0_CTRL_SOMS	(*( GTM_ATOM0_CH0_CTRL_SOMS_type *) 0xf010e004u)	/* ATOM2 Channel 0 Control in SOMS mode Register */
#define GTM_ATOM2_CH1_CTRL_SOMS	(*( GTM_ATOM0_CH0_CTRL_SOMS_type *) 0xf010e084u)	/* ATOM2 Channel 1 Control in SOMS mode Register */
#define GTM_ATOM2_CH2_CTRL_SOMS	(*( GTM_ATOM0_CH0_CTRL_SOMS_type *) 0xf010e104u)	/* ATOM2 Channel 2 Control in SOMS mode Register */
#define GTM_ATOM2_CH3_CTRL_SOMS	(*( GTM_ATOM0_CH0_CTRL_SOMS_type *) 0xf010e184u)	/* ATOM2 Channel 3 Control in SOMS mode Register */
#define GTM_ATOM2_CH4_CTRL_SOMS	(*( GTM_ATOM0_CH0_CTRL_SOMS_type *) 0xf010e204u)	/* ATOM2 Channel 4 Control in SOMS mode Register */
#define GTM_ATOM2_CH5_CTRL_SOMS	(*( GTM_ATOM0_CH0_CTRL_SOMS_type *) 0xf010e284u)	/* ATOM2 Channel 5 Control in SOMS mode Register */
#define GTM_ATOM2_CH6_CTRL_SOMS	(*( GTM_ATOM0_CH0_CTRL_SOMS_type *) 0xf010e304u)	/* ATOM2 Channel 6 Control in SOMS mode Register */
#define GTM_ATOM2_CH7_CTRL_SOMS	(*( GTM_ATOM0_CH0_CTRL_SOMS_type *) 0xf010e384u)	/* ATOM2 Channel 7 Control in SOMS mode Register */
#define GTM_ATOM3_CH0_CTRL_SOMS	(*( GTM_ATOM0_CH0_CTRL_SOMS_type *) 0xf010e804u)	/* ATOM3 Channel 0 Control in SOMS mode Register */
#define GTM_ATOM3_CH1_CTRL_SOMS	(*( GTM_ATOM0_CH0_CTRL_SOMS_type *) 0xf010e884u)	/* ATOM3 Channel 1 Control in SOMS mode Register */
#define GTM_ATOM3_CH2_CTRL_SOMS	(*( GTM_ATOM0_CH0_CTRL_SOMS_type *) 0xf010e904u)	/* ATOM3 Channel 2 Control in SOMS mode Register */
#define GTM_ATOM3_CH3_CTRL_SOMS	(*( GTM_ATOM0_CH0_CTRL_SOMS_type *) 0xf010e984u)	/* ATOM3 Channel 3 Control in SOMS mode Register */
#define GTM_ATOM3_CH4_CTRL_SOMS	(*( GTM_ATOM0_CH0_CTRL_SOMS_type *) 0xf010ea04u)	/* ATOM3 Channel 4 Control in SOMS mode Register */
#define GTM_ATOM3_CH5_CTRL_SOMS	(*( GTM_ATOM0_CH0_CTRL_SOMS_type *) 0xf010ea84u)	/* ATOM3 Channel 5 Control in SOMS mode Register */
#define GTM_ATOM3_CH6_CTRL_SOMS	(*( GTM_ATOM0_CH0_CTRL_SOMS_type *) 0xf010eb04u)	/* ATOM3 Channel 6 Control in SOMS mode Register */
#define GTM_ATOM3_CH7_CTRL_SOMS	(*( GTM_ATOM0_CH0_CTRL_SOMS_type *) 0xf010eb84u)	/* ATOM3 Channel 7 Control in SOMS mode Register */
#define GTM_ATOM4_CH0_CTRL_SOMS	(*( GTM_ATOM0_CH0_CTRL_SOMS_type *) 0xf010f004u)	/* ATOM4 Channel 0 Control in SOMS mode Register */
#define GTM_ATOM4_CH1_CTRL_SOMS	(*( GTM_ATOM0_CH0_CTRL_SOMS_type *) 0xf010f084u)	/* ATOM4 Channel 1 Control in SOMS mode Register */
#define GTM_ATOM4_CH2_CTRL_SOMS	(*( GTM_ATOM0_CH0_CTRL_SOMS_type *) 0xf010f104u)	/* ATOM4 Channel 2 Control in SOMS mode Register */
#define GTM_ATOM4_CH3_CTRL_SOMS	(*( GTM_ATOM0_CH0_CTRL_SOMS_type *) 0xf010f184u)	/* ATOM4 Channel 3 Control in SOMS mode Register */
#define GTM_ATOM4_CH4_CTRL_SOMS	(*( GTM_ATOM0_CH0_CTRL_SOMS_type *) 0xf010f204u)	/* ATOM4 Channel 4 Control in SOMS mode Register */
#define GTM_ATOM4_CH5_CTRL_SOMS	(*( GTM_ATOM0_CH0_CTRL_SOMS_type *) 0xf010f284u)	/* ATOM4 Channel 5 Control in SOMS mode Register */
#define GTM_ATOM4_CH6_CTRL_SOMS	(*( GTM_ATOM0_CH0_CTRL_SOMS_type *) 0xf010f304u)	/* ATOM4 Channel 6 Control in SOMS mode Register */
#define GTM_ATOM4_CH7_CTRL_SOMS	(*( GTM_ATOM0_CH0_CTRL_SOMS_type *) 0xf010f384u)	/* ATOM4 Channel 7 Control in SOMS mode Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 CCU0TC_IRQ_EN  : 1;	/* ATOM_CCU0TC_IRQ interrupt enable */
		unsigned __sfrbit32 CCU1TC_IRQ_EN  : 1;	/* ATOM_CCU1TC_IRQ interrupt enable */
		/* const */ unsigned __sfrbit32 Reserved       : 30;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GTM_ATOM0_CH0_IRQ_EN_type;
#define GTM_ATOM0_CH0_IRQ_EN	(*( GTM_ATOM0_CH0_IRQ_EN_type *) 0xf010d024u)	/* ATOM0 Channel 0 Interrupt Enable Register */
#define GTM_ATOM0_CH1_IRQ_EN	(*( GTM_ATOM0_CH0_IRQ_EN_type *) 0xf010d0a4u)	/* ATOM0 Channel 1 Interrupt Enable Register */
#define GTM_ATOM0_CH2_IRQ_EN	(*( GTM_ATOM0_CH0_IRQ_EN_type *) 0xf010d124u)	/* ATOM0 Channel 2 Interrupt Enable Register */
#define GTM_ATOM0_CH3_IRQ_EN	(*( GTM_ATOM0_CH0_IRQ_EN_type *) 0xf010d1a4u)	/* ATOM0 Channel 3 Interrupt Enable Register */
#define GTM_ATOM0_CH4_IRQ_EN	(*( GTM_ATOM0_CH0_IRQ_EN_type *) 0xf010d224u)	/* ATOM0 Channel 4 Interrupt Enable Register */
#define GTM_ATOM0_CH5_IRQ_EN	(*( GTM_ATOM0_CH0_IRQ_EN_type *) 0xf010d2a4u)	/* ATOM0 Channel 5 Interrupt Enable Register */
#define GTM_ATOM0_CH6_IRQ_EN	(*( GTM_ATOM0_CH0_IRQ_EN_type *) 0xf010d324u)	/* ATOM0 Channel 6 Interrupt Enable Register */
#define GTM_ATOM0_CH7_IRQ_EN	(*( GTM_ATOM0_CH0_IRQ_EN_type *) 0xf010d3a4u)	/* ATOM0 Channel 7 Interrupt Enable Register */
#define GTM_ATOM1_CH0_IRQ_EN	(*( GTM_ATOM0_CH0_IRQ_EN_type *) 0xf010d824u)	/* ATOM1 Channel 0 Interrupt Enable Register */
#define GTM_ATOM1_CH1_IRQ_EN	(*( GTM_ATOM0_CH0_IRQ_EN_type *) 0xf010d8a4u)	/* ATOM1 Channel 1 Interrupt Enable Register */
#define GTM_ATOM1_CH2_IRQ_EN	(*( GTM_ATOM0_CH0_IRQ_EN_type *) 0xf010d924u)	/* ATOM1 Channel 2 Interrupt Enable Register */
#define GTM_ATOM1_CH3_IRQ_EN	(*( GTM_ATOM0_CH0_IRQ_EN_type *) 0xf010d9a4u)	/* ATOM1 Channel 3 Interrupt Enable Register */
#define GTM_ATOM1_CH4_IRQ_EN	(*( GTM_ATOM0_CH0_IRQ_EN_type *) 0xf010da24u)	/* ATOM1 Channel 4 Interrupt Enable Register */
#define GTM_ATOM1_CH5_IRQ_EN	(*( GTM_ATOM0_CH0_IRQ_EN_type *) 0xf010daa4u)	/* ATOM1 Channel 5 Interrupt Enable Register */
#define GTM_ATOM1_CH6_IRQ_EN	(*( GTM_ATOM0_CH0_IRQ_EN_type *) 0xf010db24u)	/* ATOM1 Channel 6 Interrupt Enable Register */
#define GTM_ATOM1_CH7_IRQ_EN	(*( GTM_ATOM0_CH0_IRQ_EN_type *) 0xf010dba4u)	/* ATOM1 Channel 7 Interrupt Enable Register */
#define GTM_ATOM2_CH0_IRQ_EN	(*( GTM_ATOM0_CH0_IRQ_EN_type *) 0xf010e024u)	/* ATOM2 Channel 0 Interrupt Enable Register */
#define GTM_ATOM2_CH1_IRQ_EN	(*( GTM_ATOM0_CH0_IRQ_EN_type *) 0xf010e0a4u)	/* ATOM2 Channel 1 Interrupt Enable Register */
#define GTM_ATOM2_CH2_IRQ_EN	(*( GTM_ATOM0_CH0_IRQ_EN_type *) 0xf010e124u)	/* ATOM2 Channel 2 Interrupt Enable Register */
#define GTM_ATOM2_CH3_IRQ_EN	(*( GTM_ATOM0_CH0_IRQ_EN_type *) 0xf010e1a4u)	/* ATOM2 Channel 3 Interrupt Enable Register */
#define GTM_ATOM2_CH4_IRQ_EN	(*( GTM_ATOM0_CH0_IRQ_EN_type *) 0xf010e224u)	/* ATOM2 Channel 4 Interrupt Enable Register */
#define GTM_ATOM2_CH5_IRQ_EN	(*( GTM_ATOM0_CH0_IRQ_EN_type *) 0xf010e2a4u)	/* ATOM2 Channel 5 Interrupt Enable Register */
#define GTM_ATOM2_CH6_IRQ_EN	(*( GTM_ATOM0_CH0_IRQ_EN_type *) 0xf010e324u)	/* ATOM2 Channel 6 Interrupt Enable Register */
#define GTM_ATOM2_CH7_IRQ_EN	(*( GTM_ATOM0_CH0_IRQ_EN_type *) 0xf010e3a4u)	/* ATOM2 Channel 7 Interrupt Enable Register */
#define GTM_ATOM3_CH0_IRQ_EN	(*( GTM_ATOM0_CH0_IRQ_EN_type *) 0xf010e824u)	/* ATOM3 Channel 0 Interrupt Enable Register */
#define GTM_ATOM3_CH1_IRQ_EN	(*( GTM_ATOM0_CH0_IRQ_EN_type *) 0xf010e8a4u)	/* ATOM3 Channel 1 Interrupt Enable Register */
#define GTM_ATOM3_CH2_IRQ_EN	(*( GTM_ATOM0_CH0_IRQ_EN_type *) 0xf010e924u)	/* ATOM3 Channel 2 Interrupt Enable Register */
#define GTM_ATOM3_CH3_IRQ_EN	(*( GTM_ATOM0_CH0_IRQ_EN_type *) 0xf010e9a4u)	/* ATOM3 Channel 3 Interrupt Enable Register */
#define GTM_ATOM3_CH4_IRQ_EN	(*( GTM_ATOM0_CH0_IRQ_EN_type *) 0xf010ea24u)	/* ATOM3 Channel 4 Interrupt Enable Register */
#define GTM_ATOM3_CH5_IRQ_EN	(*( GTM_ATOM0_CH0_IRQ_EN_type *) 0xf010eaa4u)	/* ATOM3 Channel 5 Interrupt Enable Register */
#define GTM_ATOM3_CH6_IRQ_EN	(*( GTM_ATOM0_CH0_IRQ_EN_type *) 0xf010eb24u)	/* ATOM3 Channel 6 Interrupt Enable Register */
#define GTM_ATOM3_CH7_IRQ_EN	(*( GTM_ATOM0_CH0_IRQ_EN_type *) 0xf010eba4u)	/* ATOM3 Channel 7 Interrupt Enable Register */
#define GTM_ATOM4_CH0_IRQ_EN	(*( GTM_ATOM0_CH0_IRQ_EN_type *) 0xf010f024u)	/* ATOM4 Channel 0 Interrupt Enable Register */
#define GTM_ATOM4_CH1_IRQ_EN	(*( GTM_ATOM0_CH0_IRQ_EN_type *) 0xf010f0a4u)	/* ATOM4 Channel 1 Interrupt Enable Register */
#define GTM_ATOM4_CH2_IRQ_EN	(*( GTM_ATOM0_CH0_IRQ_EN_type *) 0xf010f124u)	/* ATOM4 Channel 2 Interrupt Enable Register */
#define GTM_ATOM4_CH3_IRQ_EN	(*( GTM_ATOM0_CH0_IRQ_EN_type *) 0xf010f1a4u)	/* ATOM4 Channel 3 Interrupt Enable Register */
#define GTM_ATOM4_CH4_IRQ_EN	(*( GTM_ATOM0_CH0_IRQ_EN_type *) 0xf010f224u)	/* ATOM4 Channel 4 Interrupt Enable Register */
#define GTM_ATOM4_CH5_IRQ_EN	(*( GTM_ATOM0_CH0_IRQ_EN_type *) 0xf010f2a4u)	/* ATOM4 Channel 5 Interrupt Enable Register */
#define GTM_ATOM4_CH6_IRQ_EN	(*( GTM_ATOM0_CH0_IRQ_EN_type *) 0xf010f324u)	/* ATOM4 Channel 6 Interrupt Enable Register */
#define GTM_ATOM4_CH7_IRQ_EN	(*( GTM_ATOM0_CH0_IRQ_EN_type *) 0xf010f3a4u)	/* ATOM4 Channel 7 Interrupt Enable Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 TRG_CCU0TC     : 1;	/* Trigger ATOM_CCU0TC_IRQ interrupt by software */
		unsigned __sfrbit32 TRG_CCU1TC     : 1;	/* Trigger ATOM_CCU1TC_IRQ interrupt by software */
		/* const */ unsigned __sfrbit32 Reserved       : 30;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GTM_ATOM0_CH0_IRQ_FORCINT_type;
#define GTM_ATOM0_CH0_IRQ_FORCINT	(*( GTM_ATOM0_CH0_IRQ_FORCINT_type *) 0xf010d028u)	/* ATOM0 Channel 0 Software Interrupt Generation Register */
#define GTM_ATOM0_CH1_IRQ_FORCINT	(*( GTM_ATOM0_CH0_IRQ_FORCINT_type *) 0xf010d0a8u)	/* ATOM0 Channel 1 Software Interrupt Generation Register */
#define GTM_ATOM0_CH2_IRQ_FORCINT	(*( GTM_ATOM0_CH0_IRQ_FORCINT_type *) 0xf010d128u)	/* ATOM0 Channel 2 Software Interrupt Generation Register */
#define GTM_ATOM0_CH3_IRQ_FORCINT	(*( GTM_ATOM0_CH0_IRQ_FORCINT_type *) 0xf010d1a8u)	/* ATOM0 Channel 3 Software Interrupt Generation Register */
#define GTM_ATOM0_CH4_IRQ_FORCINT	(*( GTM_ATOM0_CH0_IRQ_FORCINT_type *) 0xf010d228u)	/* ATOM0 Channel 4 Software Interrupt Generation Register */
#define GTM_ATOM0_CH5_IRQ_FORCINT	(*( GTM_ATOM0_CH0_IRQ_FORCINT_type *) 0xf010d2a8u)	/* ATOM0 Channel 5 Software Interrupt Generation Register */
#define GTM_ATOM0_CH6_IRQ_FORCINT	(*( GTM_ATOM0_CH0_IRQ_FORCINT_type *) 0xf010d328u)	/* ATOM0 Channel 6 Software Interrupt Generation Register */
#define GTM_ATOM0_CH7_IRQ_FORCINT	(*( GTM_ATOM0_CH0_IRQ_FORCINT_type *) 0xf010d3a8u)	/* ATOM0 Channel 7 Software Interrupt Generation Register */
#define GTM_ATOM1_CH0_IRQ_FORCINT	(*( GTM_ATOM0_CH0_IRQ_FORCINT_type *) 0xf010d828u)	/* ATOM1 Channel 0 Software Interrupt Generation Register */
#define GTM_ATOM1_CH1_IRQ_FORCINT	(*( GTM_ATOM0_CH0_IRQ_FORCINT_type *) 0xf010d8a8u)	/* ATOM1 Channel 1 Software Interrupt Generation Register */
#define GTM_ATOM1_CH2_IRQ_FORCINT	(*( GTM_ATOM0_CH0_IRQ_FORCINT_type *) 0xf010d928u)	/* ATOM1 Channel 2 Software Interrupt Generation Register */
#define GTM_ATOM1_CH3_IRQ_FORCINT	(*( GTM_ATOM0_CH0_IRQ_FORCINT_type *) 0xf010d9a8u)	/* ATOM1 Channel 3 Software Interrupt Generation Register */
#define GTM_ATOM1_CH4_IRQ_FORCINT	(*( GTM_ATOM0_CH0_IRQ_FORCINT_type *) 0xf010da28u)	/* ATOM1 Channel 4 Software Interrupt Generation Register */
#define GTM_ATOM1_CH5_IRQ_FORCINT	(*( GTM_ATOM0_CH0_IRQ_FORCINT_type *) 0xf010daa8u)	/* ATOM1 Channel 5 Software Interrupt Generation Register */
#define GTM_ATOM1_CH6_IRQ_FORCINT	(*( GTM_ATOM0_CH0_IRQ_FORCINT_type *) 0xf010db28u)	/* ATOM1 Channel 6 Software Interrupt Generation Register */
#define GTM_ATOM1_CH7_IRQ_FORCINT	(*( GTM_ATOM0_CH0_IRQ_FORCINT_type *) 0xf010dba8u)	/* ATOM1 Channel 7 Software Interrupt Generation Register */
#define GTM_ATOM2_CH0_IRQ_FORCINT	(*( GTM_ATOM0_CH0_IRQ_FORCINT_type *) 0xf010e028u)	/* ATOM2 Channel 0 Software Interrupt Generation Register */
#define GTM_ATOM2_CH1_IRQ_FORCINT	(*( GTM_ATOM0_CH0_IRQ_FORCINT_type *) 0xf010e0a8u)	/* ATOM2 Channel 1 Software Interrupt Generation Register */
#define GTM_ATOM2_CH2_IRQ_FORCINT	(*( GTM_ATOM0_CH0_IRQ_FORCINT_type *) 0xf010e128u)	/* ATOM2 Channel 2 Software Interrupt Generation Register */
#define GTM_ATOM2_CH3_IRQ_FORCINT	(*( GTM_ATOM0_CH0_IRQ_FORCINT_type *) 0xf010e1a8u)	/* ATOM2 Channel 3 Software Interrupt Generation Register */
#define GTM_ATOM2_CH4_IRQ_FORCINT	(*( GTM_ATOM0_CH0_IRQ_FORCINT_type *) 0xf010e228u)	/* ATOM2 Channel 4 Software Interrupt Generation Register */
#define GTM_ATOM2_CH5_IRQ_FORCINT	(*( GTM_ATOM0_CH0_IRQ_FORCINT_type *) 0xf010e2a8u)	/* ATOM2 Channel 5 Software Interrupt Generation Register */
#define GTM_ATOM2_CH6_IRQ_FORCINT	(*( GTM_ATOM0_CH0_IRQ_FORCINT_type *) 0xf010e328u)	/* ATOM2 Channel 6 Software Interrupt Generation Register */
#define GTM_ATOM2_CH7_IRQ_FORCINT	(*( GTM_ATOM0_CH0_IRQ_FORCINT_type *) 0xf010e3a8u)	/* ATOM2 Channel 7 Software Interrupt Generation Register */
#define GTM_ATOM3_CH0_IRQ_FORCINT	(*( GTM_ATOM0_CH0_IRQ_FORCINT_type *) 0xf010e828u)	/* ATOM3 Channel 0 Software Interrupt Generation Register */
#define GTM_ATOM3_CH1_IRQ_FORCINT	(*( GTM_ATOM0_CH0_IRQ_FORCINT_type *) 0xf010e8a8u)	/* ATOM3 Channel 1 Software Interrupt Generation Register */
#define GTM_ATOM3_CH2_IRQ_FORCINT	(*( GTM_ATOM0_CH0_IRQ_FORCINT_type *) 0xf010e928u)	/* ATOM3 Channel 2 Software Interrupt Generation Register */
#define GTM_ATOM3_CH3_IRQ_FORCINT	(*( GTM_ATOM0_CH0_IRQ_FORCINT_type *) 0xf010e9a8u)	/* ATOM3 Channel 3 Software Interrupt Generation Register */
#define GTM_ATOM3_CH4_IRQ_FORCINT	(*( GTM_ATOM0_CH0_IRQ_FORCINT_type *) 0xf010ea28u)	/* ATOM3 Channel 4 Software Interrupt Generation Register */
#define GTM_ATOM3_CH5_IRQ_FORCINT	(*( GTM_ATOM0_CH0_IRQ_FORCINT_type *) 0xf010eaa8u)	/* ATOM3 Channel 5 Software Interrupt Generation Register */
#define GTM_ATOM3_CH6_IRQ_FORCINT	(*( GTM_ATOM0_CH0_IRQ_FORCINT_type *) 0xf010eb28u)	/* ATOM3 Channel 6 Software Interrupt Generation Register */
#define GTM_ATOM3_CH7_IRQ_FORCINT	(*( GTM_ATOM0_CH0_IRQ_FORCINT_type *) 0xf010eba8u)	/* ATOM3 Channel 7 Software Interrupt Generation Register */
#define GTM_ATOM4_CH0_IRQ_FORCINT	(*( GTM_ATOM0_CH0_IRQ_FORCINT_type *) 0xf010f028u)	/* ATOM4 Channel 0 Software Interrupt Generation Register */
#define GTM_ATOM4_CH1_IRQ_FORCINT	(*( GTM_ATOM0_CH0_IRQ_FORCINT_type *) 0xf010f0a8u)	/* ATOM4 Channel 1 Software Interrupt Generation Register */
#define GTM_ATOM4_CH2_IRQ_FORCINT	(*( GTM_ATOM0_CH0_IRQ_FORCINT_type *) 0xf010f128u)	/* ATOM4 Channel 2 Software Interrupt Generation Register */
#define GTM_ATOM4_CH3_IRQ_FORCINT	(*( GTM_ATOM0_CH0_IRQ_FORCINT_type *) 0xf010f1a8u)	/* ATOM4 Channel 3 Software Interrupt Generation Register */
#define GTM_ATOM4_CH4_IRQ_FORCINT	(*( GTM_ATOM0_CH0_IRQ_FORCINT_type *) 0xf010f228u)	/* ATOM4 Channel 4 Software Interrupt Generation Register */
#define GTM_ATOM4_CH5_IRQ_FORCINT	(*( GTM_ATOM0_CH0_IRQ_FORCINT_type *) 0xf010f2a8u)	/* ATOM4 Channel 5 Software Interrupt Generation Register */
#define GTM_ATOM4_CH6_IRQ_FORCINT	(*( GTM_ATOM0_CH0_IRQ_FORCINT_type *) 0xf010f328u)	/* ATOM4 Channel 6 Software Interrupt Generation Register */
#define GTM_ATOM4_CH7_IRQ_FORCINT	(*( GTM_ATOM0_CH0_IRQ_FORCINT_type *) 0xf010f3a8u)	/* ATOM4 Channel 7 Software Interrupt Generation Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 CCU0TC         : 1;	/* CCU0 Trigger condition interrupt for channel x */
		unsigned __sfrbit32 CCU1TC         : 1;	/* CCU1 Trigger condition interrupt for channel x */
		/* const */ unsigned __sfrbit32 Reserved       : 30;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GTM_ATOM0_CH0_IRQ_NOTIFY_type;
#define GTM_ATOM0_CH0_IRQ_NOTIFY	(*( GTM_ATOM0_CH0_IRQ_NOTIFY_type *) 0xf010d020u)	/* ATOM0 Channel 0 Interrupt Notification Register */
#define GTM_ATOM0_CH1_IRQ_NOTIFY	(*( GTM_ATOM0_CH0_IRQ_NOTIFY_type *) 0xf010d0a0u)	/* ATOM0 Channel 1 Interrupt Notification Register */
#define GTM_ATOM0_CH2_IRQ_NOTIFY	(*( GTM_ATOM0_CH0_IRQ_NOTIFY_type *) 0xf010d120u)	/* ATOM0 Channel 2 Interrupt Notification Register */
#define GTM_ATOM0_CH3_IRQ_NOTIFY	(*( GTM_ATOM0_CH0_IRQ_NOTIFY_type *) 0xf010d1a0u)	/* ATOM0 Channel 3 Interrupt Notification Register */
#define GTM_ATOM0_CH4_IRQ_NOTIFY	(*( GTM_ATOM0_CH0_IRQ_NOTIFY_type *) 0xf010d220u)	/* ATOM0 Channel 4 Interrupt Notification Register */
#define GTM_ATOM0_CH5_IRQ_NOTIFY	(*( GTM_ATOM0_CH0_IRQ_NOTIFY_type *) 0xf010d2a0u)	/* ATOM0 Channel 5 Interrupt Notification Register */
#define GTM_ATOM0_CH6_IRQ_NOTIFY	(*( GTM_ATOM0_CH0_IRQ_NOTIFY_type *) 0xf010d320u)	/* ATOM0 Channel 6 Interrupt Notification Register */
#define GTM_ATOM0_CH7_IRQ_NOTIFY	(*( GTM_ATOM0_CH0_IRQ_NOTIFY_type *) 0xf010d3a0u)	/* ATOM0 Channel 7 Interrupt Notification Register */
#define GTM_ATOM1_CH0_IRQ_NOTIFY	(*( GTM_ATOM0_CH0_IRQ_NOTIFY_type *) 0xf010d820u)	/* ATOM1 Channel 0 Interrupt Notification Register */
#define GTM_ATOM1_CH1_IRQ_NOTIFY	(*( GTM_ATOM0_CH0_IRQ_NOTIFY_type *) 0xf010d8a0u)	/* ATOM1 Channel 1 Interrupt Notification Register */
#define GTM_ATOM1_CH2_IRQ_NOTIFY	(*( GTM_ATOM0_CH0_IRQ_NOTIFY_type *) 0xf010d920u)	/* ATOM1 Channel 2 Interrupt Notification Register */
#define GTM_ATOM1_CH3_IRQ_NOTIFY	(*( GTM_ATOM0_CH0_IRQ_NOTIFY_type *) 0xf010d9a0u)	/* ATOM1 Channel 3 Interrupt Notification Register */
#define GTM_ATOM1_CH4_IRQ_NOTIFY	(*( GTM_ATOM0_CH0_IRQ_NOTIFY_type *) 0xf010da20u)	/* ATOM1 Channel 4 Interrupt Notification Register */
#define GTM_ATOM1_CH5_IRQ_NOTIFY	(*( GTM_ATOM0_CH0_IRQ_NOTIFY_type *) 0xf010daa0u)	/* ATOM1 Channel 5 Interrupt Notification Register */
#define GTM_ATOM1_CH6_IRQ_NOTIFY	(*( GTM_ATOM0_CH0_IRQ_NOTIFY_type *) 0xf010db20u)	/* ATOM1 Channel 6 Interrupt Notification Register */
#define GTM_ATOM1_CH7_IRQ_NOTIFY	(*( GTM_ATOM0_CH0_IRQ_NOTIFY_type *) 0xf010dba0u)	/* ATOM1 Channel 7 Interrupt Notification Register */
#define GTM_ATOM2_CH0_IRQ_NOTIFY	(*( GTM_ATOM0_CH0_IRQ_NOTIFY_type *) 0xf010e020u)	/* ATOM2 Channel 0 Interrupt Notification Register */
#define GTM_ATOM2_CH1_IRQ_NOTIFY	(*( GTM_ATOM0_CH0_IRQ_NOTIFY_type *) 0xf010e0a0u)	/* ATOM2 Channel 1 Interrupt Notification Register */
#define GTM_ATOM2_CH2_IRQ_NOTIFY	(*( GTM_ATOM0_CH0_IRQ_NOTIFY_type *) 0xf010e120u)	/* ATOM2 Channel 2 Interrupt Notification Register */
#define GTM_ATOM2_CH3_IRQ_NOTIFY	(*( GTM_ATOM0_CH0_IRQ_NOTIFY_type *) 0xf010e1a0u)	/* ATOM2 Channel 3 Interrupt Notification Register */
#define GTM_ATOM2_CH4_IRQ_NOTIFY	(*( GTM_ATOM0_CH0_IRQ_NOTIFY_type *) 0xf010e220u)	/* ATOM2 Channel 4 Interrupt Notification Register */
#define GTM_ATOM2_CH5_IRQ_NOTIFY	(*( GTM_ATOM0_CH0_IRQ_NOTIFY_type *) 0xf010e2a0u)	/* ATOM2 Channel 5 Interrupt Notification Register */
#define GTM_ATOM2_CH6_IRQ_NOTIFY	(*( GTM_ATOM0_CH0_IRQ_NOTIFY_type *) 0xf010e320u)	/* ATOM2 Channel 6 Interrupt Notification Register */
#define GTM_ATOM2_CH7_IRQ_NOTIFY	(*( GTM_ATOM0_CH0_IRQ_NOTIFY_type *) 0xf010e3a0u)	/* ATOM2 Channel 7 Interrupt Notification Register */
#define GTM_ATOM3_CH0_IRQ_NOTIFY	(*( GTM_ATOM0_CH0_IRQ_NOTIFY_type *) 0xf010e820u)	/* ATOM3 Channel 0 Interrupt Notification Register */
#define GTM_ATOM3_CH1_IRQ_NOTIFY	(*( GTM_ATOM0_CH0_IRQ_NOTIFY_type *) 0xf010e8a0u)	/* ATOM3 Channel 1 Interrupt Notification Register */
#define GTM_ATOM3_CH2_IRQ_NOTIFY	(*( GTM_ATOM0_CH0_IRQ_NOTIFY_type *) 0xf010e920u)	/* ATOM3 Channel 2 Interrupt Notification Register */
#define GTM_ATOM3_CH3_IRQ_NOTIFY	(*( GTM_ATOM0_CH0_IRQ_NOTIFY_type *) 0xf010e9a0u)	/* ATOM3 Channel 3 Interrupt Notification Register */
#define GTM_ATOM3_CH4_IRQ_NOTIFY	(*( GTM_ATOM0_CH0_IRQ_NOTIFY_type *) 0xf010ea20u)	/* ATOM3 Channel 4 Interrupt Notification Register */
#define GTM_ATOM3_CH5_IRQ_NOTIFY	(*( GTM_ATOM0_CH0_IRQ_NOTIFY_type *) 0xf010eaa0u)	/* ATOM3 Channel 5 Interrupt Notification Register */
#define GTM_ATOM3_CH6_IRQ_NOTIFY	(*( GTM_ATOM0_CH0_IRQ_NOTIFY_type *) 0xf010eb20u)	/* ATOM3 Channel 6 Interrupt Notification Register */
#define GTM_ATOM3_CH7_IRQ_NOTIFY	(*( GTM_ATOM0_CH0_IRQ_NOTIFY_type *) 0xf010eba0u)	/* ATOM3 Channel 7 Interrupt Notification Register */
#define GTM_ATOM4_CH0_IRQ_NOTIFY	(*( GTM_ATOM0_CH0_IRQ_NOTIFY_type *) 0xf010f020u)	/* ATOM4 Channel 0 Interrupt Notification Register */
#define GTM_ATOM4_CH1_IRQ_NOTIFY	(*( GTM_ATOM0_CH0_IRQ_NOTIFY_type *) 0xf010f0a0u)	/* ATOM4 Channel 1 Interrupt Notification Register */
#define GTM_ATOM4_CH2_IRQ_NOTIFY	(*( GTM_ATOM0_CH0_IRQ_NOTIFY_type *) 0xf010f120u)	/* ATOM4 Channel 2 Interrupt Notification Register */
#define GTM_ATOM4_CH3_IRQ_NOTIFY	(*( GTM_ATOM0_CH0_IRQ_NOTIFY_type *) 0xf010f1a0u)	/* ATOM4 Channel 3 Interrupt Notification Register */
#define GTM_ATOM4_CH4_IRQ_NOTIFY	(*( GTM_ATOM0_CH0_IRQ_NOTIFY_type *) 0xf010f220u)	/* ATOM4 Channel 4 Interrupt Notification Register */
#define GTM_ATOM4_CH5_IRQ_NOTIFY	(*( GTM_ATOM0_CH0_IRQ_NOTIFY_type *) 0xf010f2a0u)	/* ATOM4 Channel 5 Interrupt Notification Register */
#define GTM_ATOM4_CH6_IRQ_NOTIFY	(*( GTM_ATOM0_CH0_IRQ_NOTIFY_type *) 0xf010f320u)	/* ATOM4 Channel 6 Interrupt Notification Register */
#define GTM_ATOM4_CH7_IRQ_NOTIFY	(*( GTM_ATOM0_CH0_IRQ_NOTIFY_type *) 0xf010f3a0u)	/* ATOM4 Channel 7 Interrupt Notification Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 RDADDR0        : 9;	/* ARU Read address 0 */
		/* const */ unsigned __sfrbit32 Reserved       : 7;	/* Read as zero, should be written as zero */
		unsigned __sfrbit32 RDADDR1        : 9;	/* ARU Read address 1 */
		/* const */ unsigned __sfrbit32 Reserved_4     : 7;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GTM_ATOM0_CH0_RDADDR_type;
#define GTM_ATOM0_CH0_RDADDR	(*( GTM_ATOM0_CH0_RDADDR_type *) 0xf010d000u)	/* ATOM0 Channel 0 ARU Read Address Register */
#define GTM_ATOM0_CH1_RDADDR	(*( GTM_ATOM0_CH0_RDADDR_type *) 0xf010d080u)	/* ATOM0 Channel 1 ARU Read Address Register */
#define GTM_ATOM0_CH2_RDADDR	(*( GTM_ATOM0_CH0_RDADDR_type *) 0xf010d100u)	/* ATOM0 Channel 2 ARU Read Address Register */
#define GTM_ATOM0_CH3_RDADDR	(*( GTM_ATOM0_CH0_RDADDR_type *) 0xf010d180u)	/* ATOM0 Channel 3 ARU Read Address Register */
#define GTM_ATOM0_CH4_RDADDR	(*( GTM_ATOM0_CH0_RDADDR_type *) 0xf010d200u)	/* ATOM0 Channel 4 ARU Read Address Register */
#define GTM_ATOM0_CH5_RDADDR	(*( GTM_ATOM0_CH0_RDADDR_type *) 0xf010d280u)	/* ATOM0 Channel 5 ARU Read Address Register */
#define GTM_ATOM0_CH6_RDADDR	(*( GTM_ATOM0_CH0_RDADDR_type *) 0xf010d300u)	/* ATOM0 Channel 6 ARU Read Address Register */
#define GTM_ATOM0_CH7_RDADDR	(*( GTM_ATOM0_CH0_RDADDR_type *) 0xf010d380u)	/* ATOM0 Channel 7 ARU Read Address Register */
#define GTM_ATOM1_CH0_RDADDR	(*( GTM_ATOM0_CH0_RDADDR_type *) 0xf010d800u)	/* ATOM1 Channel 0 ARU Read Address Register */
#define GTM_ATOM1_CH1_RDADDR	(*( GTM_ATOM0_CH0_RDADDR_type *) 0xf010d880u)	/* ATOM1 Channel 1 ARU Read Address Register */
#define GTM_ATOM1_CH2_RDADDR	(*( GTM_ATOM0_CH0_RDADDR_type *) 0xf010d900u)	/* ATOM1 Channel 2 ARU Read Address Register */
#define GTM_ATOM1_CH3_RDADDR	(*( GTM_ATOM0_CH0_RDADDR_type *) 0xf010d980u)	/* ATOM1 Channel 3 ARU Read Address Register */
#define GTM_ATOM1_CH4_RDADDR	(*( GTM_ATOM0_CH0_RDADDR_type *) 0xf010da00u)	/* ATOM1 Channel 4 ARU Read Address Register */
#define GTM_ATOM1_CH5_RDADDR	(*( GTM_ATOM0_CH0_RDADDR_type *) 0xf010da80u)	/* ATOM1 Channel 5 ARU Read Address Register */
#define GTM_ATOM1_CH6_RDADDR	(*( GTM_ATOM0_CH0_RDADDR_type *) 0xf010db00u)	/* ATOM1 Channel 6 ARU Read Address Register */
#define GTM_ATOM1_CH7_RDADDR	(*( GTM_ATOM0_CH0_RDADDR_type *) 0xf010db80u)	/* ATOM1 Channel 7 ARU Read Address Register */
#define GTM_ATOM2_CH0_RDADDR	(*( GTM_ATOM0_CH0_RDADDR_type *) 0xf010e000u)	/* ATOM2 Channel 0 ARU Read Address Register */
#define GTM_ATOM2_CH1_RDADDR	(*( GTM_ATOM0_CH0_RDADDR_type *) 0xf010e080u)	/* ATOM2 Channel 1 ARU Read Address Register */
#define GTM_ATOM2_CH2_RDADDR	(*( GTM_ATOM0_CH0_RDADDR_type *) 0xf010e100u)	/* ATOM2 Channel 2 ARU Read Address Register */
#define GTM_ATOM2_CH3_RDADDR	(*( GTM_ATOM0_CH0_RDADDR_type *) 0xf010e180u)	/* ATOM2 Channel 3 ARU Read Address Register */
#define GTM_ATOM2_CH4_RDADDR	(*( GTM_ATOM0_CH0_RDADDR_type *) 0xf010e200u)	/* ATOM2 Channel 4 ARU Read Address Register */
#define GTM_ATOM2_CH5_RDADDR	(*( GTM_ATOM0_CH0_RDADDR_type *) 0xf010e280u)	/* ATOM2 Channel 5 ARU Read Address Register */
#define GTM_ATOM2_CH6_RDADDR	(*( GTM_ATOM0_CH0_RDADDR_type *) 0xf010e300u)	/* ATOM2 Channel 6 ARU Read Address Register */
#define GTM_ATOM2_CH7_RDADDR	(*( GTM_ATOM0_CH0_RDADDR_type *) 0xf010e380u)	/* ATOM2 Channel 7 ARU Read Address Register */
#define GTM_ATOM3_CH0_RDADDR	(*( GTM_ATOM0_CH0_RDADDR_type *) 0xf010e800u)	/* ATOM3 Channel 0 ARU Read Address Register */
#define GTM_ATOM3_CH1_RDADDR	(*( GTM_ATOM0_CH0_RDADDR_type *) 0xf010e880u)	/* ATOM3 Channel 1 ARU Read Address Register */
#define GTM_ATOM3_CH2_RDADDR	(*( GTM_ATOM0_CH0_RDADDR_type *) 0xf010e900u)	/* ATOM3 Channel 2 ARU Read Address Register */
#define GTM_ATOM3_CH3_RDADDR	(*( GTM_ATOM0_CH0_RDADDR_type *) 0xf010e980u)	/* ATOM3 Channel 3 ARU Read Address Register */
#define GTM_ATOM3_CH4_RDADDR	(*( GTM_ATOM0_CH0_RDADDR_type *) 0xf010ea00u)	/* ATOM3 Channel 4 ARU Read Address Register */
#define GTM_ATOM3_CH5_RDADDR	(*( GTM_ATOM0_CH0_RDADDR_type *) 0xf010ea80u)	/* ATOM3 Channel 5 ARU Read Address Register */
#define GTM_ATOM3_CH6_RDADDR	(*( GTM_ATOM0_CH0_RDADDR_type *) 0xf010eb00u)	/* ATOM3 Channel 6 ARU Read Address Register */
#define GTM_ATOM3_CH7_RDADDR	(*( GTM_ATOM0_CH0_RDADDR_type *) 0xf010eb80u)	/* ATOM3 Channel 7 ARU Read Address Register */
#define GTM_ATOM4_CH0_RDADDR	(*( GTM_ATOM0_CH0_RDADDR_type *) 0xf010f000u)	/* ATOM4 Channel 0 ARU Read Address Register */
#define GTM_ATOM4_CH1_RDADDR	(*( GTM_ATOM0_CH0_RDADDR_type *) 0xf010f080u)	/* ATOM4 Channel 1 ARU Read Address Register */
#define GTM_ATOM4_CH2_RDADDR	(*( GTM_ATOM0_CH0_RDADDR_type *) 0xf010f100u)	/* ATOM4 Channel 2 ARU Read Address Register */
#define GTM_ATOM4_CH3_RDADDR	(*( GTM_ATOM0_CH0_RDADDR_type *) 0xf010f180u)	/* ATOM4 Channel 3 ARU Read Address Register */
#define GTM_ATOM4_CH4_RDADDR	(*( GTM_ATOM0_CH0_RDADDR_type *) 0xf010f200u)	/* ATOM4 Channel 4 ARU Read Address Register */
#define GTM_ATOM4_CH5_RDADDR	(*( GTM_ATOM0_CH0_RDADDR_type *) 0xf010f280u)	/* ATOM4 Channel 5 ARU Read Address Register */
#define GTM_ATOM4_CH6_RDADDR	(*( GTM_ATOM0_CH0_RDADDR_type *) 0xf010f300u)	/* ATOM4 Channel 6 ARU Read Address Register */
#define GTM_ATOM4_CH7_RDADDR	(*( GTM_ATOM0_CH0_RDADDR_type *) 0xf010f380u)	/* ATOM4 Channel 7 ARU Read Address Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 SR0            : 24;	/* ATOM channel x shadow register SR0 */
		/* const */ unsigned __sfrbit32 Reserved       : 8;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GTM_ATOM0_CH0_SR0_type;
#define GTM_ATOM0_CH0_SR0	(*( GTM_ATOM0_CH0_SR0_type *) 0xf010d008u)	/* ATOM0 Channel 0 CCU0 Compare Shadow Register */
#define GTM_ATOM0_CH1_SR0	(*( GTM_ATOM0_CH0_SR0_type *) 0xf010d088u)	/* ATOM0 Channel 1 CCU0 Compare Shadow Register */
#define GTM_ATOM0_CH2_SR0	(*( GTM_ATOM0_CH0_SR0_type *) 0xf010d108u)	/* ATOM0 Channel 2 CCU0 Compare Shadow Register */
#define GTM_ATOM0_CH3_SR0	(*( GTM_ATOM0_CH0_SR0_type *) 0xf010d188u)	/* ATOM0 Channel 3 CCU0 Compare Shadow Register */
#define GTM_ATOM0_CH4_SR0	(*( GTM_ATOM0_CH0_SR0_type *) 0xf010d208u)	/* ATOM0 Channel 4 CCU0 Compare Shadow Register */
#define GTM_ATOM0_CH5_SR0	(*( GTM_ATOM0_CH0_SR0_type *) 0xf010d288u)	/* ATOM0 Channel 5 CCU0 Compare Shadow Register */
#define GTM_ATOM0_CH6_SR0	(*( GTM_ATOM0_CH0_SR0_type *) 0xf010d308u)	/* ATOM0 Channel 6 CCU0 Compare Shadow Register */
#define GTM_ATOM0_CH7_SR0	(*( GTM_ATOM0_CH0_SR0_type *) 0xf010d388u)	/* ATOM0 Channel 7 CCU0 Compare Shadow Register */
#define GTM_ATOM1_CH0_SR0	(*( GTM_ATOM0_CH0_SR0_type *) 0xf010d808u)	/* ATOM1 Channel 0 CCU0 Compare Shadow Register */
#define GTM_ATOM1_CH1_SR0	(*( GTM_ATOM0_CH0_SR0_type *) 0xf010d888u)	/* ATOM1 Channel 1 CCU0 Compare Shadow Register */
#define GTM_ATOM1_CH2_SR0	(*( GTM_ATOM0_CH0_SR0_type *) 0xf010d908u)	/* ATOM1 Channel 2 CCU0 Compare Shadow Register */
#define GTM_ATOM1_CH3_SR0	(*( GTM_ATOM0_CH0_SR0_type *) 0xf010d988u)	/* ATOM1 Channel 3 CCU0 Compare Shadow Register */
#define GTM_ATOM1_CH4_SR0	(*( GTM_ATOM0_CH0_SR0_type *) 0xf010da08u)	/* ATOM1 Channel 4 CCU0 Compare Shadow Register */
#define GTM_ATOM1_CH5_SR0	(*( GTM_ATOM0_CH0_SR0_type *) 0xf010da88u)	/* ATOM1 Channel 5 CCU0 Compare Shadow Register */
#define GTM_ATOM1_CH6_SR0	(*( GTM_ATOM0_CH0_SR0_type *) 0xf010db08u)	/* ATOM1 Channel 6 CCU0 Compare Shadow Register */
#define GTM_ATOM1_CH7_SR0	(*( GTM_ATOM0_CH0_SR0_type *) 0xf010db88u)	/* ATOM1 Channel 7 CCU0 Compare Shadow Register */
#define GTM_ATOM2_CH0_SR0	(*( GTM_ATOM0_CH0_SR0_type *) 0xf010e008u)	/* ATOM2 Channel 0 CCU0 Compare Shadow Register */
#define GTM_ATOM2_CH1_SR0	(*( GTM_ATOM0_CH0_SR0_type *) 0xf010e088u)	/* ATOM2 Channel 1 CCU0 Compare Shadow Register */
#define GTM_ATOM2_CH2_SR0	(*( GTM_ATOM0_CH0_SR0_type *) 0xf010e108u)	/* ATOM2 Channel 2 CCU0 Compare Shadow Register */
#define GTM_ATOM2_CH3_SR0	(*( GTM_ATOM0_CH0_SR0_type *) 0xf010e188u)	/* ATOM2 Channel 3 CCU0 Compare Shadow Register */
#define GTM_ATOM2_CH4_SR0	(*( GTM_ATOM0_CH0_SR0_type *) 0xf010e208u)	/* ATOM2 Channel 4 CCU0 Compare Shadow Register */
#define GTM_ATOM2_CH5_SR0	(*( GTM_ATOM0_CH0_SR0_type *) 0xf010e288u)	/* ATOM2 Channel 5 CCU0 Compare Shadow Register */
#define GTM_ATOM2_CH6_SR0	(*( GTM_ATOM0_CH0_SR0_type *) 0xf010e308u)	/* ATOM2 Channel 6 CCU0 Compare Shadow Register */
#define GTM_ATOM2_CH7_SR0	(*( GTM_ATOM0_CH0_SR0_type *) 0xf010e388u)	/* ATOM2 Channel 7 CCU0 Compare Shadow Register */
#define GTM_ATOM3_CH0_SR0	(*( GTM_ATOM0_CH0_SR0_type *) 0xf010e808u)	/* ATOM3 Channel 0 CCU0 Compare Shadow Register */
#define GTM_ATOM3_CH1_SR0	(*( GTM_ATOM0_CH0_SR0_type *) 0xf010e888u)	/* ATOM3 Channel 1 CCU0 Compare Shadow Register */
#define GTM_ATOM3_CH2_SR0	(*( GTM_ATOM0_CH0_SR0_type *) 0xf010e908u)	/* ATOM3 Channel 2 CCU0 Compare Shadow Register */
#define GTM_ATOM3_CH3_SR0	(*( GTM_ATOM0_CH0_SR0_type *) 0xf010e988u)	/* ATOM3 Channel 3 CCU0 Compare Shadow Register */
#define GTM_ATOM3_CH4_SR0	(*( GTM_ATOM0_CH0_SR0_type *) 0xf010ea08u)	/* ATOM3 Channel 4 CCU0 Compare Shadow Register */
#define GTM_ATOM3_CH5_SR0	(*( GTM_ATOM0_CH0_SR0_type *) 0xf010ea88u)	/* ATOM3 Channel 5 CCU0 Compare Shadow Register */
#define GTM_ATOM3_CH6_SR0	(*( GTM_ATOM0_CH0_SR0_type *) 0xf010eb08u)	/* ATOM3 Channel 6 CCU0 Compare Shadow Register */
#define GTM_ATOM3_CH7_SR0	(*( GTM_ATOM0_CH0_SR0_type *) 0xf010eb88u)	/* ATOM3 Channel 7 CCU0 Compare Shadow Register */
#define GTM_ATOM4_CH0_SR0	(*( GTM_ATOM0_CH0_SR0_type *) 0xf010f008u)	/* ATOM4 Channel 0 CCU0 Compare Shadow Register */
#define GTM_ATOM4_CH1_SR0	(*( GTM_ATOM0_CH0_SR0_type *) 0xf010f088u)	/* ATOM4 Channel 1 CCU0 Compare Shadow Register */
#define GTM_ATOM4_CH2_SR0	(*( GTM_ATOM0_CH0_SR0_type *) 0xf010f108u)	/* ATOM4 Channel 2 CCU0 Compare Shadow Register */
#define GTM_ATOM4_CH3_SR0	(*( GTM_ATOM0_CH0_SR0_type *) 0xf010f188u)	/* ATOM4 Channel 3 CCU0 Compare Shadow Register */
#define GTM_ATOM4_CH4_SR0	(*( GTM_ATOM0_CH0_SR0_type *) 0xf010f208u)	/* ATOM4 Channel 4 CCU0 Compare Shadow Register */
#define GTM_ATOM4_CH5_SR0	(*( GTM_ATOM0_CH0_SR0_type *) 0xf010f288u)	/* ATOM4 Channel 5 CCU0 Compare Shadow Register */
#define GTM_ATOM4_CH6_SR0	(*( GTM_ATOM0_CH0_SR0_type *) 0xf010f308u)	/* ATOM4 Channel 6 CCU0 Compare Shadow Register */
#define GTM_ATOM4_CH7_SR0	(*( GTM_ATOM0_CH0_SR0_type *) 0xf010f388u)	/* ATOM4 Channel 7 CCU0 Compare Shadow Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 SR1            : 24;	/* ATOM channel x shadow register SR0 */
		/* const */ unsigned __sfrbit32 Reserved       : 8;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GTM_ATOM0_CH0_SR1_type;
#define GTM_ATOM0_CH0_SR1	(*( GTM_ATOM0_CH0_SR1_type *) 0xf010d00cu)	/* ATOM0 Channel 0 CCU1 Compare Shadow Register */
#define GTM_ATOM0_CH1_SR1	(*( GTM_ATOM0_CH0_SR1_type *) 0xf010d08cu)	/* ATOM0 Channel 1 CCU1 Compare Shadow Register */
#define GTM_ATOM0_CH2_SR1	(*( GTM_ATOM0_CH0_SR1_type *) 0xf010d10cu)	/* ATOM0 Channel 2 CCU1 Compare Shadow Register */
#define GTM_ATOM0_CH3_SR1	(*( GTM_ATOM0_CH0_SR1_type *) 0xf010d18cu)	/* ATOM0 Channel 3 CCU1 Compare Shadow Register */
#define GTM_ATOM0_CH4_SR1	(*( GTM_ATOM0_CH0_SR1_type *) 0xf010d20cu)	/* ATOM0 Channel 4 CCU1 Compare Shadow Register */
#define GTM_ATOM0_CH5_SR1	(*( GTM_ATOM0_CH0_SR1_type *) 0xf010d28cu)	/* ATOM0 Channel 5 CCU1 Compare Shadow Register */
#define GTM_ATOM0_CH6_SR1	(*( GTM_ATOM0_CH0_SR1_type *) 0xf010d30cu)	/* ATOM0 Channel 6 CCU1 Compare Shadow Register */
#define GTM_ATOM0_CH7_SR1	(*( GTM_ATOM0_CH0_SR1_type *) 0xf010d38cu)	/* ATOM0 Channel 7 CCU1 Compare Shadow Register */
#define GTM_ATOM1_CH0_SR1	(*( GTM_ATOM0_CH0_SR1_type *) 0xf010d80cu)	/* ATOM1 Channel 0 CCU1 Compare Shadow Register */
#define GTM_ATOM1_CH1_SR1	(*( GTM_ATOM0_CH0_SR1_type *) 0xf010d88cu)	/* ATOM1 Channel 1 CCU1 Compare Shadow Register */
#define GTM_ATOM1_CH2_SR1	(*( GTM_ATOM0_CH0_SR1_type *) 0xf010d90cu)	/* ATOM1 Channel 2 CCU1 Compare Shadow Register */
#define GTM_ATOM1_CH3_SR1	(*( GTM_ATOM0_CH0_SR1_type *) 0xf010d98cu)	/* ATOM1 Channel 3 CCU1 Compare Shadow Register */
#define GTM_ATOM1_CH4_SR1	(*( GTM_ATOM0_CH0_SR1_type *) 0xf010da0cu)	/* ATOM1 Channel 4 CCU1 Compare Shadow Register */
#define GTM_ATOM1_CH5_SR1	(*( GTM_ATOM0_CH0_SR1_type *) 0xf010da8cu)	/* ATOM1 Channel 5 CCU1 Compare Shadow Register */
#define GTM_ATOM1_CH6_SR1	(*( GTM_ATOM0_CH0_SR1_type *) 0xf010db0cu)	/* ATOM1 Channel 6 CCU1 Compare Shadow Register */
#define GTM_ATOM1_CH7_SR1	(*( GTM_ATOM0_CH0_SR1_type *) 0xf010db8cu)	/* ATOM1 Channel 7 CCU1 Compare Shadow Register */
#define GTM_ATOM2_CH0_SR1	(*( GTM_ATOM0_CH0_SR1_type *) 0xf010e00cu)	/* ATOM2 Channel 0 CCU1 Compare Shadow Register */
#define GTM_ATOM2_CH1_SR1	(*( GTM_ATOM0_CH0_SR1_type *) 0xf010e08cu)	/* ATOM2 Channel 1 CCU1 Compare Shadow Register */
#define GTM_ATOM2_CH2_SR1	(*( GTM_ATOM0_CH0_SR1_type *) 0xf010e10cu)	/* ATOM2 Channel 2 CCU1 Compare Shadow Register */
#define GTM_ATOM2_CH3_SR1	(*( GTM_ATOM0_CH0_SR1_type *) 0xf010e18cu)	/* ATOM2 Channel 3 CCU1 Compare Shadow Register */
#define GTM_ATOM2_CH4_SR1	(*( GTM_ATOM0_CH0_SR1_type *) 0xf010e20cu)	/* ATOM2 Channel 4 CCU1 Compare Shadow Register */
#define GTM_ATOM2_CH5_SR1	(*( GTM_ATOM0_CH0_SR1_type *) 0xf010e28cu)	/* ATOM2 Channel 5 CCU1 Compare Shadow Register */
#define GTM_ATOM2_CH6_SR1	(*( GTM_ATOM0_CH0_SR1_type *) 0xf010e30cu)	/* ATOM2 Channel 6 CCU1 Compare Shadow Register */
#define GTM_ATOM2_CH7_SR1	(*( GTM_ATOM0_CH0_SR1_type *) 0xf010e38cu)	/* ATOM2 Channel 7 CCU1 Compare Shadow Register */
#define GTM_ATOM3_CH0_SR1	(*( GTM_ATOM0_CH0_SR1_type *) 0xf010e80cu)	/* ATOM3 Channel 0 CCU1 Compare Shadow Register */
#define GTM_ATOM3_CH1_SR1	(*( GTM_ATOM0_CH0_SR1_type *) 0xf010e88cu)	/* ATOM3 Channel 1 CCU1 Compare Shadow Register */
#define GTM_ATOM3_CH2_SR1	(*( GTM_ATOM0_CH0_SR1_type *) 0xf010e90cu)	/* ATOM3 Channel 2 CCU1 Compare Shadow Register */
#define GTM_ATOM3_CH3_SR1	(*( GTM_ATOM0_CH0_SR1_type *) 0xf010e98cu)	/* ATOM3 Channel 3 CCU1 Compare Shadow Register */
#define GTM_ATOM3_CH4_SR1	(*( GTM_ATOM0_CH0_SR1_type *) 0xf010ea0cu)	/* ATOM3 Channel 4 CCU1 Compare Shadow Register */
#define GTM_ATOM3_CH5_SR1	(*( GTM_ATOM0_CH0_SR1_type *) 0xf010ea8cu)	/* ATOM3 Channel 5 CCU1 Compare Shadow Register */
#define GTM_ATOM3_CH6_SR1	(*( GTM_ATOM0_CH0_SR1_type *) 0xf010eb0cu)	/* ATOM3 Channel 6 CCU1 Compare Shadow Register */
#define GTM_ATOM3_CH7_SR1	(*( GTM_ATOM0_CH0_SR1_type *) 0xf010eb8cu)	/* ATOM3 Channel 7 CCU1 Compare Shadow Register */
#define GTM_ATOM4_CH0_SR1	(*( GTM_ATOM0_CH0_SR1_type *) 0xf010f00cu)	/* ATOM4 Channel 0 CCU1 Compare Shadow Register */
#define GTM_ATOM4_CH1_SR1	(*( GTM_ATOM0_CH0_SR1_type *) 0xf010f08cu)	/* ATOM4 Channel 1 CCU1 Compare Shadow Register */
#define GTM_ATOM4_CH2_SR1	(*( GTM_ATOM0_CH0_SR1_type *) 0xf010f10cu)	/* ATOM4 Channel 2 CCU1 Compare Shadow Register */
#define GTM_ATOM4_CH3_SR1	(*( GTM_ATOM0_CH0_SR1_type *) 0xf010f18cu)	/* ATOM4 Channel 3 CCU1 Compare Shadow Register */
#define GTM_ATOM4_CH4_SR1	(*( GTM_ATOM0_CH0_SR1_type *) 0xf010f20cu)	/* ATOM4 Channel 4 CCU1 Compare Shadow Register */
#define GTM_ATOM4_CH5_SR1	(*( GTM_ATOM0_CH0_SR1_type *) 0xf010f28cu)	/* ATOM4 Channel 5 CCU1 Compare Shadow Register */
#define GTM_ATOM4_CH6_SR1	(*( GTM_ATOM0_CH0_SR1_type *) 0xf010f30cu)	/* ATOM4 Channel 6 CCU1 Compare Shadow Register */
#define GTM_ATOM4_CH7_SR1	(*( GTM_ATOM0_CH0_SR1_type *) 0xf010f38cu)	/* ATOM4 Channel 7 CCU1 Compare Shadow Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned __sfrbit32 OL             : 1;	/* Actual output signal level of ATOM_CHx_OUT */
		/* const */ unsigned __sfrbit32 Reserved       : 15;	/* Reserved */
		/* const */ unsigned __sfrbit32 ACBI           : 5;	/* ATOM Mode control bits received through ARU */
		/* const */ unsigned __sfrbit32 DV             : 1;	/* Valid ARU Data stored in compare registers */
		unsigned __sfrbit32 WRF            : 1;	/* Write request of CPU failed for late update */
		/* const */ unsigned __sfrbit32 Reserved_6     : 1;	/* Reserved */
		/* const */ unsigned __sfrbit32 ACBO           : 5;	/* ATOM Internal status bits */
		/* const */ unsigned __sfrbit32 Reserved_8     : 3;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GTM_ATOM0_CH0_STAT_type;
#define GTM_ATOM0_CH0_STAT	(*( GTM_ATOM0_CH0_STAT_type *) 0xf010d01cu)	/* ATOM0 Channel 0 Status Register */
#define GTM_ATOM0_CH1_STAT	(*( GTM_ATOM0_CH0_STAT_type *) 0xf010d09cu)	/* ATOM0 Channel 1 Status Register */
#define GTM_ATOM0_CH2_STAT	(*( GTM_ATOM0_CH0_STAT_type *) 0xf010d11cu)	/* ATOM0 Channel 2 Status Register */
#define GTM_ATOM0_CH3_STAT	(*( GTM_ATOM0_CH0_STAT_type *) 0xf010d19cu)	/* ATOM0 Channel 3 Status Register */
#define GTM_ATOM0_CH4_STAT	(*( GTM_ATOM0_CH0_STAT_type *) 0xf010d21cu)	/* ATOM0 Channel 4 Status Register */
#define GTM_ATOM0_CH5_STAT	(*( GTM_ATOM0_CH0_STAT_type *) 0xf010d29cu)	/* ATOM0 Channel 5 Status Register */
#define GTM_ATOM0_CH6_STAT	(*( GTM_ATOM0_CH0_STAT_type *) 0xf010d31cu)	/* ATOM0 Channel 6 Status Register */
#define GTM_ATOM0_CH7_STAT	(*( GTM_ATOM0_CH0_STAT_type *) 0xf010d39cu)	/* ATOM0 Channel 7 Status Register */
#define GTM_ATOM1_CH0_STAT	(*( GTM_ATOM0_CH0_STAT_type *) 0xf010d81cu)	/* ATOM1 Channel 0 Status Register */
#define GTM_ATOM1_CH1_STAT	(*( GTM_ATOM0_CH0_STAT_type *) 0xf010d89cu)	/* ATOM1 Channel 1 Status Register */
#define GTM_ATOM1_CH2_STAT	(*( GTM_ATOM0_CH0_STAT_type *) 0xf010d91cu)	/* ATOM1 Channel 2 Status Register */
#define GTM_ATOM1_CH3_STAT	(*( GTM_ATOM0_CH0_STAT_type *) 0xf010d99cu)	/* ATOM1 Channel 3 Status Register */
#define GTM_ATOM1_CH4_STAT	(*( GTM_ATOM0_CH0_STAT_type *) 0xf010da1cu)	/* ATOM1 Channel 4 Status Register */
#define GTM_ATOM1_CH5_STAT	(*( GTM_ATOM0_CH0_STAT_type *) 0xf010da9cu)	/* ATOM1 Channel 5 Status Register */
#define GTM_ATOM1_CH6_STAT	(*( GTM_ATOM0_CH0_STAT_type *) 0xf010db1cu)	/* ATOM1 Channel 6 Status Register */
#define GTM_ATOM1_CH7_STAT	(*( GTM_ATOM0_CH0_STAT_type *) 0xf010db9cu)	/* ATOM1 Channel 7 Status Register */
#define GTM_ATOM2_CH0_STAT	(*( GTM_ATOM0_CH0_STAT_type *) 0xf010e01cu)	/* ATOM2 Channel 0 Status Register */
#define GTM_ATOM2_CH1_STAT	(*( GTM_ATOM0_CH0_STAT_type *) 0xf010e09cu)	/* ATOM2 Channel 1 Status Register */
#define GTM_ATOM2_CH2_STAT	(*( GTM_ATOM0_CH0_STAT_type *) 0xf010e11cu)	/* ATOM2 Channel 2 Status Register */
#define GTM_ATOM2_CH3_STAT	(*( GTM_ATOM0_CH0_STAT_type *) 0xf010e19cu)	/* ATOM2 Channel 3 Status Register */
#define GTM_ATOM2_CH4_STAT	(*( GTM_ATOM0_CH0_STAT_type *) 0xf010e21cu)	/* ATOM2 Channel 4 Status Register */
#define GTM_ATOM2_CH5_STAT	(*( GTM_ATOM0_CH0_STAT_type *) 0xf010e29cu)	/* ATOM2 Channel 5 Status Register */
#define GTM_ATOM2_CH6_STAT	(*( GTM_ATOM0_CH0_STAT_type *) 0xf010e31cu)	/* ATOM2 Channel 6 Status Register */
#define GTM_ATOM2_CH7_STAT	(*( GTM_ATOM0_CH0_STAT_type *) 0xf010e39cu)	/* ATOM2 Channel 7 Status Register */
#define GTM_ATOM3_CH0_STAT	(*( GTM_ATOM0_CH0_STAT_type *) 0xf010e81cu)	/* ATOM3 Channel 0 Status Register */
#define GTM_ATOM3_CH1_STAT	(*( GTM_ATOM0_CH0_STAT_type *) 0xf010e89cu)	/* ATOM3 Channel 1 Status Register */
#define GTM_ATOM3_CH2_STAT	(*( GTM_ATOM0_CH0_STAT_type *) 0xf010e91cu)	/* ATOM3 Channel 2 Status Register */
#define GTM_ATOM3_CH3_STAT	(*( GTM_ATOM0_CH0_STAT_type *) 0xf010e99cu)	/* ATOM3 Channel 3 Status Register */
#define GTM_ATOM3_CH4_STAT	(*( GTM_ATOM0_CH0_STAT_type *) 0xf010ea1cu)	/* ATOM3 Channel 4 Status Register */
#define GTM_ATOM3_CH5_STAT	(*( GTM_ATOM0_CH0_STAT_type *) 0xf010ea9cu)	/* ATOM3 Channel 5 Status Register */
#define GTM_ATOM3_CH6_STAT	(*( GTM_ATOM0_CH0_STAT_type *) 0xf010eb1cu)	/* ATOM3 Channel 6 Status Register */
#define GTM_ATOM3_CH7_STAT	(*( GTM_ATOM0_CH0_STAT_type *) 0xf010eb9cu)	/* ATOM3 Channel 7 Status Register */
#define GTM_ATOM4_CH0_STAT	(*( GTM_ATOM0_CH0_STAT_type *) 0xf010f01cu)	/* ATOM4 Channel 0 Status Register */
#define GTM_ATOM4_CH1_STAT	(*( GTM_ATOM0_CH0_STAT_type *) 0xf010f09cu)	/* ATOM4 Channel 1 Status Register */
#define GTM_ATOM4_CH2_STAT	(*( GTM_ATOM0_CH0_STAT_type *) 0xf010f11cu)	/* ATOM4 Channel 2 Status Register */
#define GTM_ATOM4_CH3_STAT	(*( GTM_ATOM0_CH0_STAT_type *) 0xf010f19cu)	/* ATOM4 Channel 3 Status Register */
#define GTM_ATOM4_CH4_STAT	(*( GTM_ATOM0_CH0_STAT_type *) 0xf010f21cu)	/* ATOM4 Channel 4 Status Register */
#define GTM_ATOM4_CH5_STAT	(*( GTM_ATOM0_CH0_STAT_type *) 0xf010f29cu)	/* ATOM4 Channel 5 Status Register */
#define GTM_ATOM4_CH6_STAT	(*( GTM_ATOM0_CH0_STAT_type *) 0xf010f31cu)	/* ATOM4 Channel 6 Status Register */
#define GTM_ATOM4_CH7_STAT	(*( GTM_ATOM0_CH0_STAT_type *) 0xf010f39cu)	/* ATOM4 Channel 7 Status Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 DEST_ERR_EN    : 1;	/* BRC_DEST_ERR_EIRQ error interrupt enable */
		unsigned __sfrbit32 DID_EN0        : 1;	/* BRC_DIDx_EIRQ error interrupt enable */
		unsigned __sfrbit32 DID_EN1        : 1;	/* BRC_DIDx_EIRQ error interrupt enable */
		unsigned __sfrbit32 DID_EN2        : 1;	/* BRC_DIDx_EIRQ error interrupt enable */
		unsigned __sfrbit32 DID_EN3        : 1;	/* BRC_DIDx_EIRQ error interrupt enable */
		unsigned __sfrbit32 DID_EN4        : 1;	/* BRC_DIDx_EIRQ error interrupt enable */
		unsigned __sfrbit32 DID_EN5        : 1;	/* BRC_DIDx_EIRQ error interrupt enable */
		unsigned __sfrbit32 DID_EN6        : 1;	/* BRC_DIDx_EIRQ error interrupt enable */
		unsigned __sfrbit32 DID_EN7        : 1;	/* BRC_DIDx_EIRQ error interrupt enable */
		unsigned __sfrbit32 DID_EN8        : 1;	/* BRC_DIDx_EIRQ error interrupt enable */
		unsigned __sfrbit32 DID_EN9        : 1;	/* BRC_DIDx_EIRQ error interrupt enable */
		unsigned __sfrbit32 DID_EN10       : 1;	/* BRC_DIDx_EIRQ error interrupt enable */
		unsigned __sfrbit32 DID_EN11       : 1;	/* BRC_DIDx_EIRQ error interrupt enable */
		/* const */ unsigned __sfrbit32 Reserved       : 19;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GTM_BRC_EIRQ_EN_type;
#define GTM_BRC_EIRQ_EN	(*( GTM_BRC_EIRQ_EN_type *) 0xf0100474u)	/* BRC Error Interrupt Enable Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 DEST_ERR_EN    : 1;	/* BRC_DEST_ERR_IRQ interrupt enable */
		unsigned __sfrbit32 DID_EN0        : 1;	/* BRC_DIDx_IRQ interrupt enable */
		unsigned __sfrbit32 DID_EN1        : 1;	/* BRC_DIDx_IRQ interrupt enable */
		unsigned __sfrbit32 DID_EN2        : 1;	/* BRC_DIDx_IRQ interrupt enable */
		unsigned __sfrbit32 DID_EN3        : 1;	/* BRC_DIDx_IRQ interrupt enable */
		unsigned __sfrbit32 DID_EN4        : 1;	/* BRC_DIDx_IRQ interrupt enable */
		unsigned __sfrbit32 DID_EN5        : 1;	/* BRC_DIDx_IRQ interrupt enable */
		unsigned __sfrbit32 DID_EN6        : 1;	/* BRC_DIDx_IRQ interrupt enable */
		unsigned __sfrbit32 DID_EN7        : 1;	/* BRC_DIDx_IRQ interrupt enable */
		unsigned __sfrbit32 DID_EN8        : 1;	/* BRC_DIDx_IRQ interrupt enable */
		unsigned __sfrbit32 DID_EN9        : 1;	/* BRC_DIDx_IRQ interrupt enable */
		unsigned __sfrbit32 DID_EN10       : 1;	/* BRC_DIDx_IRQ interrupt enable */
		unsigned __sfrbit32 DID_EN11       : 1;	/* BRC_DIDx_IRQ interrupt enable */
		/* const */ unsigned __sfrbit32 Reserved       : 19;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GTM_BRC_IRQ_EN_type;
#define GTM_BRC_IRQ_EN	(*( GTM_BRC_IRQ_EN_type *) 0xf0100464u)	/* BRC Interrupt Enable Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 TRG_DEST_ERR   : 1;	/* Trigger destination error interrupt */
		unsigned __sfrbit32 TRG_DID0       : 1;	/* Trigger data inconsistency error interrupt */
		unsigned __sfrbit32 TRG_DID1       : 1;	/* Trigger data inconsistency error interrupt */
		unsigned __sfrbit32 TRG_DID2       : 1;	/* Trigger data inconsistency error interrupt */
		unsigned __sfrbit32 TRG_DID3       : 1;	/* Trigger data inconsistency error interrupt */
		unsigned __sfrbit32 TRG_DID4       : 1;	/* Trigger data inconsistency error interrupt */
		unsigned __sfrbit32 TRG_DID5       : 1;	/* Trigger data inconsistency error interrupt */
		unsigned __sfrbit32 TRG_DID6       : 1;	/* Trigger data inconsistency error interrupt */
		unsigned __sfrbit32 TRG_DID7       : 1;	/* Trigger data inconsistency error interrupt */
		unsigned __sfrbit32 TRG_DID8       : 1;	/* Trigger data inconsistency error interrupt */
		unsigned __sfrbit32 TRG_DID9       : 1;	/* Trigger data inconsistency error interrupt */
		unsigned __sfrbit32 TRG_DID10      : 1;	/* Trigger data inconsistency error interrupt */
		unsigned __sfrbit32 TRG_DID11      : 1;	/* Trigger data inconsistency error interrupt */
		/* const */ unsigned __sfrbit32 Reserved       : 19;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GTM_BRC_IRQ_FORCINT_type;
#define GTM_BRC_IRQ_FORCINT	(*( GTM_BRC_IRQ_FORCINT_type *) 0xf0100468u)	/* BRC_DEST_ERR Forcing Interrupt Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 DEST_ERR       : 1;	/* Configuration error interrupt for BRC submodule */
		unsigned __sfrbit32 DID0           : 1;	/* Data inconsistency occurred in MTM mode */
		unsigned __sfrbit32 DID1           : 1;	/* Data inconsistency occurred in MTM mode */
		unsigned __sfrbit32 DID2           : 1;	/* Data inconsistency occurred in MTM mode */
		unsigned __sfrbit32 DID3           : 1;	/* Data inconsistency occurred in MTM mode */
		unsigned __sfrbit32 DID4           : 1;	/* Data inconsistency occurred in MTM mode */
		unsigned __sfrbit32 DID5           : 1;	/* Data inconsistency occurred in MTM mode */
		unsigned __sfrbit32 DID6           : 1;	/* Data inconsistency occurred in MTM mode */
		unsigned __sfrbit32 DID7           : 1;	/* Data inconsistency occurred in MTM mode */
		unsigned __sfrbit32 DID8           : 1;	/* Data inconsistency occurred in MTM mode */
		unsigned __sfrbit32 DID9           : 1;	/* Data inconsistency occurred in MTM mode */
		unsigned __sfrbit32 DID10          : 1;	/* Data inconsistency occurred in MTM mode */
		unsigned __sfrbit32 DID11          : 1;	/* Data inconsistency occurred in MTM mode */
		/* const */ unsigned __sfrbit32 Reserved       : 19;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GTM_BRC_IRQ_NOTIFY_type;
#define GTM_BRC_IRQ_NOTIFY	(*( GTM_BRC_IRQ_NOTIFY_type *) 0xf0100460u)	/* BRC Interrupt Notification Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 RST            : 1;	/* Software reset */
		/* const */ unsigned __sfrbit32 Reserved       : 31;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GTM_BRC_RST_type;
#define GTM_BRC_RST	(*( GTM_BRC_RST_type *) 0xf0100470u)	/* BRC Software Reset Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 ADDR           : 9;	/* Source ARU address */
		/* const */ unsigned __sfrbit32 Reserved       : 3;	/* Reserved */
		unsigned __sfrbit32 BRC_MODE       : 1;	/* BRC Operation mode select */
		/* const */ unsigned __sfrbit32 Reserved_4     : 19;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GTM_BRC_SRC0_ADDR_type;
#define GTM_BRC_SRC0_ADDR	(*( GTM_BRC_SRC0_ADDR_type *) 0xf0100400u)	/* Read Address For Input Channel 0 */
#define GTM_BRC_SRC10_ADDR	(*( GTM_BRC_SRC0_ADDR_type *) 0xf0100450u)	/* Read Address For Input Channel 10 */
#define GTM_BRC_SRC11_ADDR	(*( GTM_BRC_SRC0_ADDR_type *) 0xf0100458u)	/* Read Address For Input Channel 11 */
#define GTM_BRC_SRC1_ADDR	(*( GTM_BRC_SRC0_ADDR_type *) 0xf0100408u)	/* Read Address For Input Channel 1 */
#define GTM_BRC_SRC2_ADDR	(*( GTM_BRC_SRC0_ADDR_type *) 0xf0100410u)	/* Read Address For Input Channel 2 */
#define GTM_BRC_SRC3_ADDR	(*( GTM_BRC_SRC0_ADDR_type *) 0xf0100418u)	/* Read Address For Input Channel 3 */
#define GTM_BRC_SRC4_ADDR	(*( GTM_BRC_SRC0_ADDR_type *) 0xf0100420u)	/* Read Address For Input Channel 4 */
#define GTM_BRC_SRC5_ADDR	(*( GTM_BRC_SRC0_ADDR_type *) 0xf0100428u)	/* Read Address For Input Channel 5 */
#define GTM_BRC_SRC6_ADDR	(*( GTM_BRC_SRC0_ADDR_type *) 0xf0100430u)	/* Read Address For Input Channel 6 */
#define GTM_BRC_SRC7_ADDR	(*( GTM_BRC_SRC0_ADDR_type *) 0xf0100438u)	/* Read Address For Input Channel 7 */
#define GTM_BRC_SRC8_ADDR	(*( GTM_BRC_SRC0_ADDR_type *) 0xf0100440u)	/* Read Address For Input Channel 8 */
#define GTM_BRC_SRC9_ADDR	(*( GTM_BRC_SRC0_ADDR_type *) 0xf0100448u)	/* Read Address For Input Channel 9 */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 EN_DEST0       : 1;	/* Enable BRC destination address 0 */
		unsigned __sfrbit32 EN_DEST1       : 1;	/* Enable BRC destination address 1 */
		unsigned __sfrbit32 EN_DEST2       : 1;	/* Enable BRC destination address 2 */
		unsigned __sfrbit32 EN_DEST3       : 1;	/* Enable BRC destination address 3 */
		unsigned __sfrbit32 EN_DEST4       : 1;	/* Enable BRC destination address 4 */
		unsigned __sfrbit32 EN_DEST5       : 1;	/* Enable BRC destination address 5 */
		unsigned __sfrbit32 EN_DEST6       : 1;	/* Enable BRC destination address 6 */
		unsigned __sfrbit32 EN_DEST7       : 1;	/* Enable BRC destination address 7 */
		unsigned __sfrbit32 EN_DEST8       : 1;	/* Enable BRC destination address 8 */
		unsigned __sfrbit32 EN_DEST9       : 1;	/* Enable BRC destination address 9 */
		unsigned __sfrbit32 EN_DEST10      : 1;	/* Enable BRC destination address 10 */
		unsigned __sfrbit32 EN_DEST11      : 1;	/* Enable BRC destination address 11 */
		unsigned __sfrbit32 EN_DEST12      : 1;	/* Enable BRC destination address 12 */
		unsigned __sfrbit32 EN_DEST13      : 1;	/* Enable BRC destination address 13 */
		unsigned __sfrbit32 EN_DEST14      : 1;	/* Enable BRC destination address 14 */
		unsigned __sfrbit32 EN_DEST15      : 1;	/* Enable BRC destination address 15 */
		unsigned __sfrbit32 EN_DEST16      : 1;	/* Enable BRC destination address 16 */
		unsigned __sfrbit32 EN_DEST17      : 1;	/* Enable BRC destination address 17 */
		unsigned __sfrbit32 EN_DEST18      : 1;	/* Enable BRC destination address 18 */
		unsigned __sfrbit32 EN_DEST19      : 1;	/* Enable BRC destination address 19 */
		unsigned __sfrbit32 EN_DEST20      : 1;	/* Enable BRC destination address 20 */
		unsigned __sfrbit32 EN_DEST21      : 1;	/* Enable BRC destination address 21 */
		unsigned __sfrbit32 EN_TRASHBIN    : 1;	/* Control trash bin functionality */
		/* const */ unsigned __sfrbit32 Reserved       : 9;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GTM_BRC_SRC0_DEST_type;
#define GTM_BRC_SRC0_DEST	(*( GTM_BRC_SRC0_DEST_type *) 0xf0100404u)	/* Destination Channels For Input Channel 0 */
#define GTM_BRC_SRC10_DEST	(*( GTM_BRC_SRC0_DEST_type *) 0xf0100454u)	/* Destination Channels For Input Channel 10 */
#define GTM_BRC_SRC11_DEST	(*( GTM_BRC_SRC0_DEST_type *) 0xf010045cu)	/* Destination Channels For Input Channel 11 */
#define GTM_BRC_SRC1_DEST	(*( GTM_BRC_SRC0_DEST_type *) 0xf010040cu)	/* Destination Channels For Input Channel 1 */
#define GTM_BRC_SRC2_DEST	(*( GTM_BRC_SRC0_DEST_type *) 0xf0100414u)	/* Destination Channels For Input Channel 2 */
#define GTM_BRC_SRC3_DEST	(*( GTM_BRC_SRC0_DEST_type *) 0xf010041cu)	/* Destination Channels For Input Channel 3 */
#define GTM_BRC_SRC4_DEST	(*( GTM_BRC_SRC0_DEST_type *) 0xf0100424u)	/* Destination Channels For Input Channel 4 */
#define GTM_BRC_SRC5_DEST	(*( GTM_BRC_SRC0_DEST_type *) 0xf010042cu)	/* Destination Channels For Input Channel 5 */
#define GTM_BRC_SRC6_DEST	(*( GTM_BRC_SRC0_DEST_type *) 0xf0100434u)	/* Destination Channels For Input Channel 6 */
#define GTM_BRC_SRC7_DEST	(*( GTM_BRC_SRC0_DEST_type *) 0xf010043cu)	/* Destination Channels For Input Channel 7 */
#define GTM_BRC_SRC8_DEST	(*( GTM_BRC_SRC0_DEST_type *) 0xf0100444u)	/* Destination Channels For Input Channel 8 */
#define GTM_BRC_SRC9_DEST	(*( GTM_BRC_SRC0_DEST_type *) 0xf010044cu)	/* Destination Channels For Input Channel 9 */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 BRG_MODE       : 1;	/* Defines the operation mode for the AEI bridge */
		unsigned __sfrbit32 MSK_WR_RSP     : 1;	/* Mask write response */
		/* const */ unsigned __sfrbit32 Reserved       : 6;	/* Reserved */
		/* const */ unsigned __sfrbit32 MODE_UP_PGR    : 1;	/* Mode update in progress */
		unsigned __sfrbit32 BUFF_OVL       : 1;	/* Buffer overflow register */
		/* const */ unsigned __sfrbit32 Reserved_6     : 2;	/* Reserved */
		unsigned __sfrbit32 SYNC_INPUT_REG : 1;	/* Additional Pipeline Stage in Synchronous Bridge Mode */
		/* const */ unsigned __sfrbit32 Reserved_8     : 3;	/* Reserved */
		unsigned __sfrbit32 BRG_RST        : 1;	/* Bridge software reset */
		/* const */ unsigned __sfrbit32 Reserved_10    : 7;	/* Reserved */
		/* const */ unsigned __sfrbit32 BUFF_DPT       : 8;	/* Buffer depth of AEI bridge */
	} B;
	int I;
	unsigned int U;

} GTM_BRIDGE_MODE_type;
#define GTM_BRIDGE_MODE	(*( GTM_BRIDGE_MODE_type *) 0xf0100030u)	/* GTM to SPB BRIDGE MODE */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned __sfrbit32 NEW_TRAN_PTR   : 5;	/* New transaction pointer */
		/* const */ unsigned __sfrbit32 FIRST_RSP_PTR  : 5;	/* First response pointer */
		/* const */ unsigned __sfrbit32 TRAN_IN_PGR    : 5;	/* Transaction in progress pointer (acquire) */
		/* const */ unsigned __sfrbit32 ABT_TRAN_PGR   : 5;	/* Aborted transaction in progress pointer */
		/* const */ unsigned __sfrbit32 FBC            : 6;	/* Free buffer count */
		/* const */ unsigned __sfrbit32 RSP_TRAN_RDY   : 6;	/* Response transactions ready */
	} B;
	int I;
	unsigned int U;

} GTM_BRIDGE_PTR1_type;
#define GTM_BRIDGE_PTR1	(*( GTM_BRIDGE_PTR1_type *) 0xf0100034u)	/* GTM to SPB BRIDGE PTR1 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned __sfrbit32 TRAN_IN_PGR2   : 5;	/* Transaction in progress pointer (aquire2) */
		/* const */ unsigned __sfrbit32 Reserved       : 27;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GTM_BRIDGE_PTR2_type;
#define GTM_BRIDGE_PTR2	(*( GTM_BRIDGE_PTR2_type *) 0xf0100038u)	/* GTM to SPB BRIDGE PTR2 */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 SEL0           : 4;	/* Output Selection for CAN GTM connection */
		unsigned __sfrbit32 SEL1           : 4;	/* Output Selection for CAN GTM connection */
		unsigned __sfrbit32 SEL2           : 4;	/* Output Selection for CAN GTM connection */
		unsigned __sfrbit32 SEL3           : 4;	/* Output Selection for CAN GTM connection */
		unsigned __sfrbit32 SEL4           : 4;	/* Output Selection for CAN GTM connection */
		unsigned __sfrbit32 SEL5           : 4;	/* Output Selection for CAN GTM connection */
		unsigned __sfrbit32 SEL6           : 4;	/* Output Selection for CAN GTM connection */
		unsigned __sfrbit32 SEL7           : 4;	/* Output Selection for CAN GTM connection */
	} B;
	int I;
	unsigned int U;

} GTM_CANOUTSEL_type;
#define GTM_CANOUTSEL	(*( GTM_CANOUTSEL_type *) 0xf019fda0u)	/* CAN Output Select Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 DISR           : 1;	/* Module Disable Request Bit */
		/* const */ unsigned __sfrbit32 DISS           : 1;	/* Module Disable Status Bit */
		unsigned __sfrbit32                : 1;
		unsigned __sfrbit32 EDIS           : 1;	/* Sleep Mode Enable Control */
		unsigned __sfrbit32                : 28;
	} B;
	int I;
	unsigned int U;

} GTM_CLC_type;
#define GTM_CLC	(*( GTM_CLC_type *) 0xf019fd00u)	/* Clock Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 ABWC0_EN_EIRQ  : 1;	/* enable ABWC0 interrupt source for CMP_EIRQ line */
		unsigned __sfrbit32 ABWC1_EN_EIRQ  : 1;	/* enable ABWC1 interrupt source for CMP_EIRQ line */
		unsigned __sfrbit32 ABWC2_EN_EIRQ  : 1;	/* enable ABWC2 interrupt source for CMP_EIRQ line */
		unsigned __sfrbit32 ABWC3_EN_EIRQ  : 1;	/* enable ABWC3 interrupt source for CMP_EIRQ line */
		unsigned __sfrbit32 ABWC4_EN_EIRQ  : 1;	/* enable ABWC4 interrupt source for CMP_EIRQ line */
		unsigned __sfrbit32 ABWC5_EN_EIRQ  : 1;	/* enable ABWC5 interrupt source for CMP_EIRQ line */
		unsigned __sfrbit32 ABWC6_EN_EIRQ  : 1;	/* enable ABWC6 interrupt source for CMP_EIRQ line. */
		unsigned __sfrbit32 ABWC7_EN_EIRQ  : 1;	/* enable ABWC7 interrupt source for CMP_EIRQ line */
		unsigned __sfrbit32 ABWC8_EN_EIRQ  : 1;	/* enable ABWC8 interrupt source for CMP_EIRQ line */
		unsigned __sfrbit32 ABWC9_EN_EIRQ  : 1;	/* enable ABWC9 interrupt source for CMP_EIRQ line */
		unsigned __sfrbit32 ABWC10_EN_EIRQ : 1;	/* enable ABWC10 interrupt source for CMP_EIRQ line */
		unsigned __sfrbit32 ABWC11_EN_EIRQ : 1;	/* enable ABWC11 interrupt source for CMP_EIRQ line */
		unsigned __sfrbit32 TBWC0_EN_EIRQ  : 1;	/* enable TBWC0 interrupt source for CMP_EIRQ line */
		unsigned __sfrbit32 TBWC1_EN_EIRQ  : 1;	/* enable TBWC1 interrupt source for CMP_EIRQ line */
		unsigned __sfrbit32 TBWC2_EN_EIRQ  : 1;	/* enable TBWC2 interrupt source for CMP_EIRQ line */
		unsigned __sfrbit32 TBWC3_EN_EIRQ  : 1;	/* enable TBWC3 interrupt source for CMP_EIRQ line */
		unsigned __sfrbit32 TBWC4_EN_EIRQ  : 1;	/* enable TBWC4 interrupt source for CMP_EIRQ line */
		unsigned __sfrbit32 TBWC5_EN_EIRQ  : 1;	/* enable TBWC5 interrupt source for CMP_EIRQ line */
		unsigned __sfrbit32 TBWC6_EN_EIRQ  : 1;	/* enable TBWC6 interrupt source for CMP_EIRQ line */
		unsigned __sfrbit32 TBWC7_EN_EIRQ  : 1;	/* enable TBWC7 interrupt source for CMP_EIRQ line */
		unsigned __sfrbit32 TBWC8_EN_EIRQ  : 1;	/* enable TBWC8 interrupt source for CMP_EIRQ line */
		unsigned __sfrbit32 TBWC9_EN_EIRQ  : 1;	/* enable TBWC9 interrupt source for CMP_EIRQ line */
		unsigned __sfrbit32 TBWC10_EN_EIRQ : 1;	/* enable TBWC10 interrupt source for CMP_EIRQ line */
		unsigned __sfrbit32 TBWC11_EN_EIRQ : 1;	/* enable TBWC11 interrupt source for CMP_EIRQ line */
		unsigned __sfrbit32 Reserved       : 8;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GTM_CMP_EIRQ_EN_type;
#define GTM_CMP_EIRQ_EN	(*( GTM_CMP_EIRQ_EN_type *) 0xf0100214u)	/* CMP Error Interrupt Enable Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 ABWC0_EN       : 1;	/* Enable comparator 0 in ABWC */
		unsigned __sfrbit32 ABWC1_EN       : 1;	/* Enable comparator 1 in ABWC */
		unsigned __sfrbit32 ABWC2_EN       : 1;	/* Enable comparator 2 in ABWC */
		unsigned __sfrbit32 ABWC3_EN       : 1;	/* Enable comparator 3 in ABWC */
		unsigned __sfrbit32 ABWC4_EN       : 1;	/* Enable comparator 4 in ABWC */
		unsigned __sfrbit32 ABWC5_EN       : 1;	/* Enable comparator 5 in ABWC */
		unsigned __sfrbit32 ABWC6_EN       : 1;	/* Enable comparator 6 in ABWC */
		unsigned __sfrbit32 ABWC7_EN       : 1;	/* Enable comparator 7 in ABWC */
		unsigned __sfrbit32 ABWC8_EN       : 1;	/* Enable comparator 8 in ABWC */
		unsigned __sfrbit32 ABWC9_EN       : 1;	/* Enable comparator 9 in ABW */
		unsigned __sfrbit32 ABWC10_EN      : 1;	/* Enable comparator 10 in ABWC */
		unsigned __sfrbit32 ABWC11_EN      : 1;	/* Enable comparator 11 in ABWC */
		unsigned __sfrbit32 TBWC0_EN       : 1;	/* Enable comparator 0 in TBWC */
		unsigned __sfrbit32 TBWC1_EN       : 1;	/* Enable comparator 1 in TBWC */
		unsigned __sfrbit32 TBWC2_EN       : 1;	/* Enable comparator 2 in TBWC */
		unsigned __sfrbit32 TBWC3_EN       : 1;	/* Enable comparator 3 in TBWC */
		unsigned __sfrbit32 TBWC4_EN       : 1;	/* Enable comparator 4 in TBWC */
		unsigned __sfrbit32 TBWC5_EN       : 1;	/* Enable comparator 5 in TBWC */
		unsigned __sfrbit32 TBWC6_EN       : 1;	/* Enable comparator 6 in TBWC */
		unsigned __sfrbit32 TBWC7_EN       : 1;	/* Enable comparator 7 in TBWC */
		unsigned __sfrbit32 TBWC8_EN       : 1;	/* Enable comparator 8 in TBWC */
		unsigned __sfrbit32 TBWC9_EN       : 1;	/* Enable comparator 9 in TBWC */
		unsigned __sfrbit32 TBWC10_EN      : 1;	/* Enable comparator 10 in TBWC */
		unsigned __sfrbit32 TBWC11_EN      : 1;	/* Enable comparator 11 in TBWC */
		/* const */ unsigned __sfrbit32 Reserved       : 8;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GTM_CMP_EN_type;
#define GTM_CMP_EN	(*( GTM_CMP_EN_type *) 0xf0100200u)	/* CMP Comparator Enable Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 ABWC0_EN_IRQ   : 1;	/* Enable ABWC0 interrupt source for CMP_IRQ line */
		unsigned __sfrbit32 ABWC1_EN_IRQ   : 1;	/* Enable ABWC1 interrupt source for CMP_IRQ line */
		unsigned __sfrbit32 ABWC2_EN_IRQ   : 1;	/* Enable ABWC2 interrupt source for CMP_IRQ line */
		unsigned __sfrbit32 ABWC3_EN_IRQ   : 1;	/* Enable ABWC3 interrupt source for CMP_IRQ line */
		unsigned __sfrbit32 ABWC4_EN_IRQ   : 1;	/* Enable ABWC4 interrupt source for CMP_IRQ line */
		unsigned __sfrbit32 ABWC5_EN_IRQ   : 1;	/* Enable ABWC5 interrupt source for CMP_IRQ line */
		unsigned __sfrbit32 ABWC6_EN_IRQ   : 1;	/* Enable ABWC6 interrupt source for CMP_IRQ line */
		unsigned __sfrbit32 ABWC7_EN_IRQ   : 1;	/* Enable ABWC7 interrupt source for CMP_IRQ line */
		unsigned __sfrbit32 ABWC8_EN_IRQ   : 1;	/* Enable ABWC8 interrupt source for CMP_IRQ line */
		unsigned __sfrbit32 ABWC9_EN_IRQ   : 1;	/* Enable ABWC9 interrupt source for CMP_IRQ line */
		unsigned __sfrbit32 ABWC10_EN_IRQ  : 1;	/* Enable ABWC10 interrupt source for CMP_IRQ line */
		unsigned __sfrbit32 ABWC11_EN_IRQ  : 1;	/* Enable ABWC11 interrupt source for CMP_IRQ line */
		unsigned __sfrbit32 TBWC0_EN_IRQ   : 1;	/* Enable TBWC0 interrupt source for CMP_IRQ line */
		unsigned __sfrbit32 TBWC1_EN_IRQ   : 1;	/* Enable TBWC1 interrupt source for CMP_IRQ line */
		unsigned __sfrbit32 TBWC2_EN_IRQ   : 1;	/* Enable TBWC2 interrupt source for CMP_IRQ line */
		unsigned __sfrbit32 TBWC3_EN_IRQ   : 1;	/* Enable TBWC3 interrupt source for CMP_IRQ line */
		unsigned __sfrbit32 TBWC4_EN_IRQ   : 1;	/* Enable TBWC4 interrupt source for CMP_IRQ line */
		unsigned __sfrbit32 TBWC5_EN_IRQ   : 1;	/* Enable TBWC5 interrupt source for CMP_IRQ line */
		unsigned __sfrbit32 TBWC6_EN_IRQ   : 1;	/* Enable TBWC6 interrupt source for CMP_IRQ line */
		unsigned __sfrbit32 TBWC7_EN_IRQ   : 1;	/* Enable TBWC7 interrupt source for CMP_IRQ line */
		unsigned __sfrbit32 TBWC8_EN_IRQ   : 1;	/* Enable TBWC8 interrupt source for CMP_IRQ line */
		unsigned __sfrbit32 TBWC9_EN_IRQ   : 1;	/* Enable TBWC9 interrupt source for CMP_IRQ line */
		unsigned __sfrbit32 TBWC10_EN_IRQ  : 1;	/* Enable TBWC10 interrupt source for CMP_IRQ line */
		unsigned __sfrbit32 TBWC11_EN_IRQ  : 1;	/* Enable TBWC11 interrupt source for CMP_IRQ line */
		unsigned __sfrbit32 Reserved       : 8;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GTM_CMP_IRQ_EN_type;
#define GTM_CMP_IRQ_EN	(*( GTM_CMP_IRQ_EN_type *) 0xf0100208u)	/* CMP Interrupt Enable Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 TRG_ABWC0      : 1;	/* Trigger ABWC0 bit in CMP_IRQ_NOTIFY register by software */
		unsigned __sfrbit32 TRG_ABWC1      : 1;	/* Trigger ABWC1 bit in CMP_IRQ_NOTIFY register by software */
		unsigned __sfrbit32 TRG_ABWC2      : 1;	/* Trigger ABWC2 bit in CMP_IRQ_NOTIFY register by software */
		unsigned __sfrbit32 TRG_ABWC3      : 1;	/* Trigger ABWC3 bit in CMP_IRQ_NOTIFY register by software */
		unsigned __sfrbit32 TRG_ABWC4      : 1;	/* Trigger ABWC4 bit in CMP_IRQ_NOTIFY register by software */
		unsigned __sfrbit32 TRG_ABWC5      : 1;	/* Trigger ABWC5 bit in CMP_IRQ_NOTIFY register by software */
		unsigned __sfrbit32 TRG_ABWC6      : 1;	/* Trigger ABWC6 bit in CMP_IRQ_NOTIFY register by software */
		unsigned __sfrbit32 TRG_ABWC7      : 1;	/* Trigger ABWC7 bit in CMP_IRQ_NOTIFY register by software */
		unsigned __sfrbit32 TRG_ABWC8      : 1;	/* Trigger ABWC8 bit in CMP_IRQ_NOTIFY register by software */
		unsigned __sfrbit32 TRG_ABWC9      : 1;	/* Trigger ABWC9 bit in CMP_IRQ_NOTIFY register by software */
		unsigned __sfrbit32 TRG_ABWC10     : 1;	/* Trigger ABWC10 bit in CMP_IRQ_NOTIFY register by software */
		unsigned __sfrbit32 TRG_ABWC11     : 1;	/* Trigger ABWC11 bit in CMP_IRQ_NOTIFY register by software */
		unsigned __sfrbit32 TRG_TBWC0      : 1;	/* Trigger TBWC0 bit in CMP_IRQ_NOTIFY register by software */
		unsigned __sfrbit32 TRG_TBWC1      : 1;	/* Trigger TBWC1 bit in CMP_IRQ_NOTIFY register by software */
		unsigned __sfrbit32 TRG_TBWC2      : 1;	/* Trigger TBWC2 bit in CMP_IRQ_NOTIFY register by software */
		unsigned __sfrbit32 TRG_TBWC3      : 1;	/* Trigger TBWC3 bit in CMP_IRQ_NOTIFY register by software */
		unsigned __sfrbit32 TRG_TBWC4      : 1;	/* Trigger TBWC4 bit in CMP_IRQ_NOTIFY register by software */
		unsigned __sfrbit32 TRG_TBWC5      : 1;	/* Trigger TBWC5 bit in CMP_IRQ_NOTIFY register by software */
		unsigned __sfrbit32 TRG_TBWC6      : 1;	/* Trigger TBWC6 bit in CMP_IRQ_NOTIFY register by software */
		unsigned __sfrbit32 TRG_TBWC7      : 1;	/* Trigger TBWC7 bit in CMP_IRQ_NOTIFY register by software */
		unsigned __sfrbit32 TRG_TBWC8      : 1;	/* Trigger TBWC8 bit in CMP_IRQ_NOTIFY register by software */
		unsigned __sfrbit32 TRG_TBWC9      : 1;	/* Trigger TBWC9 bit in CMP_IRQ_NOTIFY register by software */
		unsigned __sfrbit32 TRG_TBWC10     : 1;	/* Trigger TBWC10 bit in CMP_IRQ_NOTIFY register by software */
		unsigned __sfrbit32 TRG_TBWC11     : 1;	/* Trigger TBWC11 bit in CMP_IRQ_NOTIFY register by software */
		/* const */ unsigned __sfrbit32 Reserved       : 8;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GTM_CMP_IRQ_FORCINT_type;
#define GTM_CMP_IRQ_FORCINT	(*( GTM_CMP_IRQ_FORCINT_type *) 0xf010020cu)	/* CMP Interrupt Force Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 ABWC0          : 1;	/* Error indication for ABWC0 */
		unsigned __sfrbit32 ABWC1          : 1;	/* Error indication for ABWC1 */
		unsigned __sfrbit32 ABWC2          : 1;	/* Error indication for ABWC2 */
		unsigned __sfrbit32 ABWC3          : 1;	/* Error indication for ABWC3 */
		unsigned __sfrbit32 ABWC4          : 1;	/* Error indication for ABWC4 */
		unsigned __sfrbit32 ABWC5          : 1;	/* Error indication for ABWC5 */
		unsigned __sfrbit32 ABWC6          : 1;	/* Error indication for ABWC6 */
		unsigned __sfrbit32 ABWC7          : 1;	/* Error indication for ABWC7 */
		unsigned __sfrbit32 ABWC8          : 1;	/* Error indication for ABWC8 */
		unsigned __sfrbit32 ABWC9          : 1;	/* Error indication for ABWC9 */
		unsigned __sfrbit32 ABWC10         : 1;	/* Error indication for ABWC10 */
		unsigned __sfrbit32 ABWC11         : 1;	/* Error indication for ABWC11 */
		unsigned __sfrbit32 TBWC0          : 1;	/* TOM sub modules outputs bitwise comparator 0 error indication */
		unsigned __sfrbit32 TBWC1          : 1;	/* TOM sub modules outputs bitwise comparator 1 error indication */
		unsigned __sfrbit32 TBWC2          : 1;	/* TOM sub modules outputs bitwise comparator 2 error indication */
		unsigned __sfrbit32 TBWC3          : 1;	/* TOM sub modules outputs bitwise comparator 3 error indication */
		unsigned __sfrbit32 TBWC4          : 1;	/* TOM sub modules outputs bitwise comparator 4 error indication */
		unsigned __sfrbit32 TBWC5          : 1;	/* TOM sub modules outputs bitwise comparator 5 error indication */
		unsigned __sfrbit32 TBWC6          : 1;	/* TOM sub modules outputs bitwise comparator 6 error indication */
		unsigned __sfrbit32 TBWC7          : 1;	/* TOM sub modules outputs bitwise comparator 7 error indication */
		unsigned __sfrbit32 TBWC8          : 1;	/* TOM sub modules outputs bitwise comparator 8 error indication */
		unsigned __sfrbit32 TBWC9          : 1;	/* TOM sub modules outputs bitwise comparator 9 error indication */
		unsigned __sfrbit32 TBWC10         : 1;	/* TOM sub modules outputs bitwise comparator 10 error indication */
		unsigned __sfrbit32 TBWC11         : 1;	/* TOM sub modules outputs bitwise comparator 11 error indication */
		/* const */ unsigned __sfrbit32 Reserved       : 8;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GTM_CMP_IRQ_NOTIFY_type;
#define GTM_CMP_IRQ_NOTIFY	(*( GTM_CMP_IRQ_NOTIFY_type *) 0xf0100204u)	/* CMP Event Notification Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 CLK_CNT        : 24;	/* Clock count Defines count value for the clock divider of clock source CMU_CLK[x] (x:0?5) */
		/* const */ unsigned __sfrbit32 Reserved       : 8;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GTM_CMU_CLK_0_CTRL_type;
#define GTM_CMU_CLK_0_CTRL	(*( GTM_CMU_CLK_0_CTRL_type *) 0xf010030cu)	/* CMU Control For Clock Source 0 Register */
#define GTM_CMU_CLK_1_CTRL	(*( GTM_CMU_CLK_0_CTRL_type *) 0xf0100310u)	/* CMU Control For Clock Source 1 Register */
#define GTM_CMU_CLK_2_CTRL	(*( GTM_CMU_CLK_0_CTRL_type *) 0xf0100314u)	/* CMU Control For Clock Source 2 Register */
#define GTM_CMU_CLK_3_CTRL	(*( GTM_CMU_CLK_0_CTRL_type *) 0xf0100318u)	/* CMU Control For Clock Source 3 Register */
#define GTM_CMU_CLK_4_CTRL	(*( GTM_CMU_CLK_0_CTRL_type *) 0xf010031cu)	/* CMU Control For Clock Source 4 Register */
#define GTM_CMU_CLK_5_CTRL	(*( GTM_CMU_CLK_0_CTRL_type *) 0xf0100320u)	/* CMU Control For Clock Source 5 Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 CLK_CNT        : 24;	/* Clock count. Define count value for the clock divider of clock source CMU_CLK6 */
		unsigned __sfrbit32 CLK6_SEL       : 1;	/* Clock source selection for CMU_CLK6 */
		/* const */ unsigned __sfrbit32 Reserved       : 7;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GTM_CMU_CLK_6_CTRL_type;
#define GTM_CMU_CLK_6_CTRL	(*( GTM_CMU_CLK_6_CTRL_type *) 0xf0100324u)	/* CMU Control For Clock Source 6 Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 CLK_CNT        : 24;	/* Clock count. Define count value for the clock divider of clock source CMU_CLK7 */
		unsigned __sfrbit32 CLK7_SEL       : 1;	/* Clock source selection for CMU_CLK7 */
		/* const */ unsigned __sfrbit32 Reserved       : 7;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GTM_CMU_CLK_7_CTRL_type;
#define GTM_CMU_CLK_7_CTRL	(*( GTM_CMU_CLK_7_CTRL_type *) 0xf0100328u)	/* CMU Control For Clock Source 7 Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 EN_CLK0        : 2;	/* Enable clock source 0 */
		unsigned __sfrbit32 EN_CLK1        : 2;	/* Enable clock source 1 */
		unsigned __sfrbit32 EN_CLK2        : 2;	/* Enable clock source 2 */
		unsigned __sfrbit32 EN_CLK3        : 2;	/* Enable clock source 3 */
		unsigned __sfrbit32 EN_CLK4        : 2;	/* Enable clock source 4 */
		unsigned __sfrbit32 EN_CLK5        : 2;	/* Enable clock source 5 */
		unsigned __sfrbit32 EN_CLK6        : 2;	/* Enable clock source 6 */
		unsigned __sfrbit32 EN_CLK7        : 2;	/* Enable clock source 7 */
		unsigned __sfrbit32 EN_ECLK0       : 2;	/* Enable ECLK 0 generation subunit */
		unsigned __sfrbit32 EN_ECLK1       : 2;	/* Enable ECLK 1 generation subunit */
		unsigned __sfrbit32 EN_ECLK2       : 2;	/* Enable ECLK 2 generation subunit */
		unsigned __sfrbit32 EN_FXCLK       : 2;	/* Enable all CMU_FXCLK */
		/* const */ unsigned __sfrbit32 Reserved       : 8;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GTM_CMU_CLK_EN_type;
#define GTM_CMU_CLK_EN	(*( GTM_CMU_CLK_EN_type *) 0xf0100300u)	/* CMU Clock Enable Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 ECLK_DEN       : 24;	/* Denominator for external clock divider */
		/* const */ unsigned __sfrbit32 Reserved       : 8;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GTM_CMU_ECLK_0_DEN_type;
#define GTM_CMU_ECLK_0_DEN	(*( GTM_CMU_ECLK_0_DEN_type *) 0xf0100330u)	/* CMU External Clock 0 Control Denominator Register */
#define GTM_CMU_ECLK_1_DEN	(*( GTM_CMU_ECLK_0_DEN_type *) 0xf0100338u)	/* CMU External Clock 1 Control Denominator Register */
#define GTM_CMU_ECLK_2_DEN	(*( GTM_CMU_ECLK_0_DEN_type *) 0xf0100340u)	/* CMU External Clock 2 Control Denominator Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 ECLK_NUM       : 24;	/* Numerator for external clock divider */
		/* const */ unsigned __sfrbit32 Reserved       : 8;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GTM_CMU_ECLK_0_NUM_type;
#define GTM_CMU_ECLK_0_NUM	(*( GTM_CMU_ECLK_0_NUM_type *) 0xf010032cu)	/* CMU External Clock 0 Control Numerator Register */
#define GTM_CMU_ECLK_1_NUM	(*( GTM_CMU_ECLK_0_NUM_type *) 0xf0100334u)	/* CMU External Clock 1 Control Numerator Register */
#define GTM_CMU_ECLK_2_NUM	(*( GTM_CMU_ECLK_0_NUM_type *) 0xf010033cu)	/* CMU External Clock 2 Control Numerator Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 FXCLK_SEL      : 4;	/* Input clock selection for EN_FXCLK line */
		/* const */ unsigned __sfrbit32 Reserved       : 28;	/* Reserved bits */
	} B;
	int I;
	unsigned int U;

} GTM_CMU_FXCLK_CTRL_type;
#define GTM_CMU_FXCLK_CTRL	(*( GTM_CMU_FXCLK_CTRL_type *) 0xf0100344u)	/* CMU FXCLK Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 GCLK_DEN       : 24;	/* Denominator for global clock divider */
		/* const */ unsigned __sfrbit32 Reserved       : 8;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GTM_CMU_GCLK_DEN_type;
#define GTM_CMU_GCLK_DEN	(*( GTM_CMU_GCLK_DEN_type *) 0xf0100308u)	/* CMU Global Clock Control Denominator Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 GCLK_NUM       : 24;	/* Numerator for global clock divider */
		/* const */ unsigned __sfrbit32 Reserved       : 8;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GTM_CMU_GCLK_NUM_type;
#define GTM_CMU_GCLK_NUM	(*( GTM_CMU_GCLK_NUM_type *) 0xf0100304u)	/* CMU Global Clock Control Numerator Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 RF_PROT        : 1;	/* RST and FORCINT protection */
		unsigned __sfrbit32 TO_MODE        : 1;	/* AEI Timeout mode */
		/* const */ unsigned __sfrbit32 Reserved       : 2;	/* Reserved */
		unsigned __sfrbit32 TO_VAL         : 5;	/* AEI Timeout value */
		/* const */ unsigned __sfrbit32 Reserved_5     : 23;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GTM_CTRL_type;
#define GTM_CTRL	(*( GTM_CTRL_type *) 0xf0100008u)	/* GTM Global Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 DATA           : 32;	/* Data */
	} B;
	int I;
	unsigned int U;

} GTM_DATAIN00_type;
#define GTM_DATAIN00	(*( GTM_DATAIN00_type *) 0xf019fe94u)	/* Data Input 0 0 Register */
#define GTM_DATAIN01	(*( GTM_DATAIN00_type *) 0xf019fe98u)	/* Data Input 0 1 Register */
#define GTM_DATAIN02	(*( GTM_DATAIN00_type *) 0xf019fe9cu)	/* Data Input 0 2 Register */
#define GTM_DATAIN03	(*( GTM_DATAIN00_type *) 0xf019fea0u)	/* Data Input 0 3 Register */
#define GTM_DATAIN10	(*( GTM_DATAIN00_type *) 0xf019fed4u)	/* Data Input 0 Register */
#define GTM_DATAIN11	(*( GTM_DATAIN00_type *) 0xf019fed8u)	/* Data Input 1 Register */
#define GTM_DATAIN12	(*( GTM_DATAIN00_type *) 0xf019fedcu)	/* Data Input 2 Register */
#define GTM_DATAIN13	(*( GTM_DATAIN00_type *) 0xf019fee0u)	/* Data Input 3 Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 ACB_0          : 5;	/* Action Control Bits of ACTION_j */
		/* const */ unsigned __sfrbit32 Reserved       : 3;	/* Reserved */
		unsigned __sfrbit32 ACB_1          : 5;	/* Action Control Bits of ACTION_(j + 1) */
		/* const */ unsigned __sfrbit32 Reserved_4     : 3;	/* Reserved */
		unsigned __sfrbit32 ACB_2          : 5;	/* Action Control Bits of ACTION_(j + 2) */
		/* const */ unsigned __sfrbit32 Reserved_6     : 3;	/* Reserved */
		unsigned __sfrbit32 ACB_3          : 5;	/* Action Control Bits of ACTION_(j + 3) */
		/* const */ unsigned __sfrbit32 Reserved_8     : 3;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GTM_DPLL_ACB0_type;
#define GTM_DPLL_ACB0	(*( GTM_DPLL_ACB0_type *) 0xf0128f00u)	/* DPLL Act0on Control i Register */
#define GTM_DPLL_ACB1	(*( GTM_DPLL_ACB0_type *) 0xf0128f04u)	/* DPLL Act1on Control i Register */
#define GTM_DPLL_ACB2	(*( GTM_DPLL_ACB0_type *) 0xf0128f08u)	/* DPLL Act2on Control i Register */
#define GTM_DPLL_ACB3	(*( GTM_DPLL_ACB0_type *) 0xf0128f0cu)	/* DPLL Act3on Control i Register */
#define GTM_DPLL_ACB4	(*( GTM_DPLL_ACB0_type *) 0xf0128f10u)	/* DPLL Act4on Control i Register */
#define GTM_DPLL_ACB5	(*( GTM_DPLL_ACB0_type *) 0xf0128f14u)	/* DPLL Act5on Control i Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 ACT_Ni         : 24;	/* New output data values concerning to action i provided */
		/* const */ unsigned __sfrbit32 Reserved       : 8;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GTM_DPLL_ACT_STA_type;
#define GTM_DPLL_ACT_STA	(*( GTM_DPLL_ACT_STA_type *) 0xf0128018u)	/* DPLL ACTION Status Register With Shadow Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 ADD_IN_CAL_1   : 24;	/* Calculated input value for SUB_INC1 generation, calculated by the DPLL */
		/* const */ unsigned __sfrbit32 Reserved       : 8;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GTM_DPLL_ADD_IN_CAL1_type;
#define GTM_DPLL_ADD_IN_CAL1	(*( GTM_DPLL_ADD_IN_CAL1_type *) 0xf0128438u)	/* DPLL Calculated ADD_IN Value for SUB_INC1 Generation */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 ADD_IN_CAL_2   : 24;	/* Input value for SUB_INC2 generation, calculated by the DPLL for SMC=RMO=1 */
		/* const */ unsigned __sfrbit32 Reserved       : 8;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GTM_DPLL_ADD_IN_CAL2_type;
#define GTM_DPLL_ADD_IN_CAL2	(*( GTM_DPLL_ADD_IN_CAL2_type *) 0xf012843cu)	/* DPLL Calculated ADD_IN Value for SUB_INC2 Generation */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 ADD_IN_LD_1    : 24;	/* Input value for SUB_INC1 generation */
		/* const */ unsigned __sfrbit32 Reserved       : 8;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GTM_DPLL_ADD_IN_LD1_type;
#define GTM_DPLL_ADD_IN_LD1	(*( GTM_DPLL_ADD_IN_LD1_type *) 0xf01280c8u)	/* DPLL Direct Load Input Value for SUB_INC1 */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 ADD_IN_LD_2    : 24;	/* Input value for SUB_INC2 generation */
		/* const */ unsigned __sfrbit32 Reserved       : 8;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GTM_DPLL_ADD_IN_LD2_type;
#define GTM_DPLL_ADD_IN_LD2	(*( GTM_DPLL_ADD_IN_LD2_type *) 0xf01280ccu)	/* DPLL Direct Load Input Value for SUB_INC1 */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 PD_S           : 16;	/* Physical deviation of STATE */
		unsigned __sfrbit32 NS             : 6;	/* Number of STATEs */
		/* const */ unsigned __sfrbit32 Reserved       : 10;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GTM_DPLL_ADT_S0_type;
#define GTM_DPLL_ADT_S0	(*( GTM_DPLL_ADT_S0_type *) 0xf0128800u)	/* DPLL Adapt Values for All STATE 0 Increments */
#define GTM_DPLL_ADT_S1	(*( GTM_DPLL_ADT_S0_type *) 0xf0128804u)	/* DPLL Adapt Values for All STATE 1 Increments */
#define GTM_DPLL_ADT_S10	(*( GTM_DPLL_ADT_S0_type *) 0xf0128828u)	/* DPLL Adapt Values for All STATE 10 Increments */
#define GTM_DPLL_ADT_S11	(*( GTM_DPLL_ADT_S0_type *) 0xf012882cu)	/* DPLL Adapt Values for All STATE 11 Increments */
#define GTM_DPLL_ADT_S12	(*( GTM_DPLL_ADT_S0_type *) 0xf0128830u)	/* DPLL Adapt Values for All STATE 12 Increments */
#define GTM_DPLL_ADT_S13	(*( GTM_DPLL_ADT_S0_type *) 0xf0128834u)	/* DPLL Adapt Values for All STATE 13 Increments */
#define GTM_DPLL_ADT_S14	(*( GTM_DPLL_ADT_S0_type *) 0xf0128838u)	/* DPLL Adapt Values for All STATE 14 Increments */
#define GTM_DPLL_ADT_S15	(*( GTM_DPLL_ADT_S0_type *) 0xf012883cu)	/* DPLL Adapt Values for All STATE 15 Increments */
#define GTM_DPLL_ADT_S16	(*( GTM_DPLL_ADT_S0_type *) 0xf0128840u)	/* DPLL Adapt Values for All STATE 16 Increments */
#define GTM_DPLL_ADT_S17	(*( GTM_DPLL_ADT_S0_type *) 0xf0128844u)	/* DPLL Adapt Values for All STATE 17 Increments */
#define GTM_DPLL_ADT_S18	(*( GTM_DPLL_ADT_S0_type *) 0xf0128848u)	/* DPLL Adapt Values for All STATE 18 Increments */
#define GTM_DPLL_ADT_S19	(*( GTM_DPLL_ADT_S0_type *) 0xf012884cu)	/* DPLL Adapt Values for All STATE 19 Increments */
#define GTM_DPLL_ADT_S2	(*( GTM_DPLL_ADT_S0_type *) 0xf0128808u)	/* DPLL Adapt Values for All STATE 2 Increments */
#define GTM_DPLL_ADT_S20	(*( GTM_DPLL_ADT_S0_type *) 0xf0128850u)	/* DPLL Adapt Values for All STATE 20 Increments */
#define GTM_DPLL_ADT_S21	(*( GTM_DPLL_ADT_S0_type *) 0xf0128854u)	/* DPLL Adapt Values for All STATE 21 Increments */
#define GTM_DPLL_ADT_S22	(*( GTM_DPLL_ADT_S0_type *) 0xf0128858u)	/* DPLL Adapt Values for All STATE 22 Increments */
#define GTM_DPLL_ADT_S23	(*( GTM_DPLL_ADT_S0_type *) 0xf012885cu)	/* DPLL Adapt Values for All STATE 23 Increments */
#define GTM_DPLL_ADT_S24	(*( GTM_DPLL_ADT_S0_type *) 0xf0128860u)	/* DPLL Adapt Values for All STATE 24 Increments */
#define GTM_DPLL_ADT_S25	(*( GTM_DPLL_ADT_S0_type *) 0xf0128864u)	/* DPLL Adapt Values for All STATE 25 Increments */
#define GTM_DPLL_ADT_S26	(*( GTM_DPLL_ADT_S0_type *) 0xf0128868u)	/* DPLL Adapt Values for All STATE 26 Increments */
#define GTM_DPLL_ADT_S27	(*( GTM_DPLL_ADT_S0_type *) 0xf012886cu)	/* DPLL Adapt Values for All STATE 27 Increments */
#define GTM_DPLL_ADT_S28	(*( GTM_DPLL_ADT_S0_type *) 0xf0128870u)	/* DPLL Adapt Values for All STATE 28 Increments */
#define GTM_DPLL_ADT_S29	(*( GTM_DPLL_ADT_S0_type *) 0xf0128874u)	/* DPLL Adapt Values for All STATE 29 Increments */
#define GTM_DPLL_ADT_S3	(*( GTM_DPLL_ADT_S0_type *) 0xf012880cu)	/* DPLL Adapt Values for All STATE 3 Increments */
#define GTM_DPLL_ADT_S30	(*( GTM_DPLL_ADT_S0_type *) 0xf0128878u)	/* DPLL Adapt Values for All STATE 30 Increments */
#define GTM_DPLL_ADT_S31	(*( GTM_DPLL_ADT_S0_type *) 0xf012887cu)	/* DPLL Adapt Values for All STATE 31 Increments */
#define GTM_DPLL_ADT_S32	(*( GTM_DPLL_ADT_S0_type *) 0xf0128880u)	/* DPLL Adapt Values for All STATE 32 Increments */
#define GTM_DPLL_ADT_S33	(*( GTM_DPLL_ADT_S0_type *) 0xf0128884u)	/* DPLL Adapt Values for All STATE 33 Increments */
#define GTM_DPLL_ADT_S34	(*( GTM_DPLL_ADT_S0_type *) 0xf0128888u)	/* DPLL Adapt Values for All STATE 34 Increments */
#define GTM_DPLL_ADT_S35	(*( GTM_DPLL_ADT_S0_type *) 0xf012888cu)	/* DPLL Adapt Values for All STATE 35 Increments */
#define GTM_DPLL_ADT_S36	(*( GTM_DPLL_ADT_S0_type *) 0xf0128890u)	/* DPLL Adapt Values for All STATE 36 Increments */
#define GTM_DPLL_ADT_S37	(*( GTM_DPLL_ADT_S0_type *) 0xf0128894u)	/* DPLL Adapt Values for All STATE 37 Increments */
#define GTM_DPLL_ADT_S38	(*( GTM_DPLL_ADT_S0_type *) 0xf0128898u)	/* DPLL Adapt Values for All STATE 38 Increments */
#define GTM_DPLL_ADT_S39	(*( GTM_DPLL_ADT_S0_type *) 0xf012889cu)	/* DPLL Adapt Values for All STATE 39 Increments */
#define GTM_DPLL_ADT_S4	(*( GTM_DPLL_ADT_S0_type *) 0xf0128810u)	/* DPLL Adapt Values for All STATE 4 Increments */
#define GTM_DPLL_ADT_S40	(*( GTM_DPLL_ADT_S0_type *) 0xf01288a0u)	/* DPLL Adapt Values for All STATE 40 Increments */
#define GTM_DPLL_ADT_S41	(*( GTM_DPLL_ADT_S0_type *) 0xf01288a4u)	/* DPLL Adapt Values for All STATE 41 Increments */
#define GTM_DPLL_ADT_S42	(*( GTM_DPLL_ADT_S0_type *) 0xf01288a8u)	/* DPLL Adapt Values for All STATE 42 Increments */
#define GTM_DPLL_ADT_S43	(*( GTM_DPLL_ADT_S0_type *) 0xf01288acu)	/* DPLL Adapt Values for All STATE 43 Increments */
#define GTM_DPLL_ADT_S44	(*( GTM_DPLL_ADT_S0_type *) 0xf01288b0u)	/* DPLL Adapt Values for All STATE 44 Increments */
#define GTM_DPLL_ADT_S45	(*( GTM_DPLL_ADT_S0_type *) 0xf01288b4u)	/* DPLL Adapt Values for All STATE 45 Increments */
#define GTM_DPLL_ADT_S46	(*( GTM_DPLL_ADT_S0_type *) 0xf01288b8u)	/* DPLL Adapt Values for All STATE 46 Increments */
#define GTM_DPLL_ADT_S47	(*( GTM_DPLL_ADT_S0_type *) 0xf01288bcu)	/* DPLL Adapt Values for All STATE 47 Increments */
#define GTM_DPLL_ADT_S48	(*( GTM_DPLL_ADT_S0_type *) 0xf01288c0u)	/* DPLL Adapt Values for All STATE 48 Increments */
#define GTM_DPLL_ADT_S49	(*( GTM_DPLL_ADT_S0_type *) 0xf01288c4u)	/* DPLL Adapt Values for All STATE 49 Increments */
#define GTM_DPLL_ADT_S5	(*( GTM_DPLL_ADT_S0_type *) 0xf0128814u)	/* DPLL Adapt Values for All STATE 5 Increments */
#define GTM_DPLL_ADT_S50	(*( GTM_DPLL_ADT_S0_type *) 0xf01288c8u)	/* DPLL Adapt Values for All STATE 50 Increments */
#define GTM_DPLL_ADT_S51	(*( GTM_DPLL_ADT_S0_type *) 0xf01288ccu)	/* DPLL Adapt Values for All STATE 51 Increments */
#define GTM_DPLL_ADT_S52	(*( GTM_DPLL_ADT_S0_type *) 0xf01288d0u)	/* DPLL Adapt Values for All STATE 52 Increments */
#define GTM_DPLL_ADT_S53	(*( GTM_DPLL_ADT_S0_type *) 0xf01288d4u)	/* DPLL Adapt Values for All STATE 53 Increments */
#define GTM_DPLL_ADT_S54	(*( GTM_DPLL_ADT_S0_type *) 0xf01288d8u)	/* DPLL Adapt Values for All STATE 54 Increments */
#define GTM_DPLL_ADT_S55	(*( GTM_DPLL_ADT_S0_type *) 0xf01288dcu)	/* DPLL Adapt Values for All STATE 55 Increments */
#define GTM_DPLL_ADT_S56	(*( GTM_DPLL_ADT_S0_type *) 0xf01288e0u)	/* DPLL Adapt Values for All STATE 56 Increments */
#define GTM_DPLL_ADT_S57	(*( GTM_DPLL_ADT_S0_type *) 0xf01288e4u)	/* DPLL Adapt Values for All STATE 57 Increments */
#define GTM_DPLL_ADT_S58	(*( GTM_DPLL_ADT_S0_type *) 0xf01288e8u)	/* DPLL Adapt Values for All STATE 58 Increments */
#define GTM_DPLL_ADT_S59	(*( GTM_DPLL_ADT_S0_type *) 0xf01288ecu)	/* DPLL Adapt Values for All STATE 59 Increments */
#define GTM_DPLL_ADT_S6	(*( GTM_DPLL_ADT_S0_type *) 0xf0128818u)	/* DPLL Adapt Values for All STATE 6 Increments */
#define GTM_DPLL_ADT_S60	(*( GTM_DPLL_ADT_S0_type *) 0xf01288f0u)	/* DPLL Adapt Values for All STATE 60 Increments */
#define GTM_DPLL_ADT_S61	(*( GTM_DPLL_ADT_S0_type *) 0xf01288f4u)	/* DPLL Adapt Values for All STATE 61 Increments */
#define GTM_DPLL_ADT_S62	(*( GTM_DPLL_ADT_S0_type *) 0xf01288f8u)	/* DPLL Adapt Values for All STATE 62 Increments */
#define GTM_DPLL_ADT_S63	(*( GTM_DPLL_ADT_S0_type *) 0xf01288fcu)	/* DPLL Adapt Values for All STATE 63 Increments */
#define GTM_DPLL_ADT_S7	(*( GTM_DPLL_ADT_S0_type *) 0xf012881cu)	/* DPLL Adapt Values for All STATE 7 Increments */
#define GTM_DPLL_ADT_S8	(*( GTM_DPLL_ADT_S0_type *) 0xf0128820u)	/* DPLL Adapt Values for All STATE 8 Increments */
#define GTM_DPLL_ADT_S9	(*( GTM_DPLL_ADT_S0_type *) 0xf0128824u)	/* DPLL Adapt Values for All STATE 9 Increments */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned __sfrbit32 AOSV_2A        : 8;	/* Address offset value of the RAM 2A region */
		/* const */ unsigned __sfrbit32 AOSV_2B        : 8;	/* Address offset value of the RAM 2B region */
		/* const */ unsigned __sfrbit32 AOSV_2C        : 8;	/* Address offset value of the RAM 2C region */
		/* const */ unsigned __sfrbit32 AOSV_2D        : 8;	/* Address offset value of the RAM 2D region */
	} B;
	int I;
	unsigned int U;

} GTM_DPLL_AOSV_2_type;
#define GTM_DPLL_AOSV_2	(*( GTM_DPLL_AOSV_2_type *) 0xf0128020u)	/* DPLL Address Offset Register For APT In RAM Region 2 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned __sfrbit32 Reserved       : 1;	/* Reserved */
		unsigned __sfrbit32 WAPS           : 1;	/* Write bit for address pointer APS */
		unsigned __sfrbit32 APS            : 6;	/* Address pointer STATE */
		/* const */ unsigned __sfrbit32 Reserved_4     : 5;	/* Reserved */
		unsigned __sfrbit32 WAPS_1C2       : 1;	/* Write bit for address pointer APS_1C2 */
		unsigned __sfrbit32 APS_1C2        : 6;	/* Address pointer STATE for RAM region 1C2 */
		/* const */ unsigned __sfrbit32 Reserved_7     : 12;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GTM_DPLL_APS_type;
#define GTM_DPLL_APS	(*( GTM_DPLL_APS_type *) 0xf0128028u)	/* DPLL Actual RAM Pointer to RAM Regions 1C1, 1C2 and 1C4 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned __sfrbit32 Reserved       : 2;	/* Reserved */
		unsigned __sfrbit32 APS_1C3        : 6;	/* Address pointer STATE for RAM region 1C3 */
		/* const */ unsigned __sfrbit32 Reserved_3     : 24;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GTM_DPLL_APS_1C3_type;
#define GTM_DPLL_APS_1C3	(*( GTM_DPLL_APS_1C3_type *) 0xf0128030u)	/* DPLL Actual RAM Pointer to RAM Region 1C3 */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 APS_1C2_EXT    : 6;	/* Address pointer 1C2 extension */
		unsigned __sfrbit32 APS_1C2_STATUS : 1;	/* Address pointer 1C2 status */
		/* const */ unsigned __sfrbit32 Reserved       : 7;	/* Reserved */
		unsigned __sfrbit32 APS_1C2_OLD    : 6;	/* Address pointer STATE for RAM region 1C2 at synchronization time */
		/* const */ unsigned __sfrbit32 Reserved_5     : 12;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GTM_DPLL_APS_SYNC_type;
#define GTM_DPLL_APS_SYNC	(*( GTM_DPLL_APS_SYNC_type *) 0xf01280bcu)	/* DPLL Old RAM Pointer and Offset Value for STATE */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned __sfrbit32 Reserved       : 1;	/* Reserved */
		unsigned __sfrbit32 WAPT           : 1;	/* Write bit for address pointer APT */
		unsigned __sfrbit32 APT            : 10;	/* Address pointer TRIGGER */
		/* const */ unsigned __sfrbit32 Reserved_4     : 1;	/* Reserved */
		unsigned __sfrbit32 WAPT_2B        : 1;	/* Write bit for address pointer APT_2B */
		unsigned __sfrbit32 APT_2B         : 10;	/* Address pointer TRIGGER for RAM region 2B */
		/* const */ unsigned __sfrbit32 Reserved_7     : 8;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GTM_DPLL_APT_type;
#define GTM_DPLL_APT	(*( GTM_DPLL_APT_type *) 0xf0128024u)	/* DPLL Actual RAM Pointer to RAM Regions 2A, B and D */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned __sfrbit32 Reserved       : 2;	/* Reserved */
		unsigned __sfrbit32 APT_2C         : 10;	/* Address pointer TRIGGER for RAM region 2C */
		/* const */ unsigned __sfrbit32 Reserved_3     : 20;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GTM_DPLL_APT_2C_type;
#define GTM_DPLL_APT_2C	(*( GTM_DPLL_APT_2C_type *) 0xf012802cu)	/* DPLL Actual RAM Pointer to RAM Region 2C */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 APT_2B_EXT     : 6;	/* Address pointer 2B extension */
		unsigned __sfrbit32 APT_2B_STATUS  : 1;	/* Address pointer 2B status */
		/* const */ unsigned __sfrbit32 Reserved       : 7;	/* Reserved */
		unsigned __sfrbit32 APT_2B_OLD     : 10;	/* Address pointer TRIGGER for RAM region 2B at synchronization time */
		/* const */ unsigned __sfrbit32 Reserved_5     : 8;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GTM_DPLL_APT_SYNC_type;
#define GTM_DPLL_APT_SYNC	(*( GTM_DPLL_APT_SYNC_type *) 0xf01280b8u)	/* DPLL Old RAM Pointer and Offset Value for TRIGGER */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 CDT_SX         : 24;	/* Calculated duration of the current STATE increment */
		/* const */ unsigned __sfrbit32 Reserved       : 8;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GTM_DPLL_CDT_SX_type;
#define GTM_DPLL_CDT_SX	(*( GTM_DPLL_CDT_SX_type *) 0xf0128494u)	/* DPLL Prediction of the actual STATE Increment */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 CDT_SX_NOM     : 24;	/* Calculated duration of the current t nominal STATE event */
		/* const */ unsigned __sfrbit32 Reserved       : 8;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GTM_DPLL_CDT_SX_NOM_type;
#define GTM_DPLL_CDT_SX_NOM	(*( GTM_DPLL_CDT_SX_NOM_type *) 0xf012849cu)	/* DPLL Prediction of the nominal STATE increment duration */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 CDT_TX         : 24;	/* Calculated duration of the current TRIGGER increment */
		/* const */ unsigned __sfrbit32 Reserved       : 8;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GTM_DPLL_CDT_TX_type;
#define GTM_DPLL_CDT_TX	(*( GTM_DPLL_CDT_TX_type *) 0xf0128490u)	/* DPLL Prediction of the actual TRIGGER Increment */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 CDT_TX_NOM     : 24;	/* Calculated duration of the current nominal TRIGGER event */
		/* const */ unsigned __sfrbit32 Reserved       : 8;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GTM_DPLL_CDT_TX_NOM_type;
#define GTM_DPLL_CDT_TX_NOM	(*( GTM_DPLL_CDT_TX_NOM_type *) 0xf0128498u)	/* DPLL Prediction of the nominal TRIGGER Increment duration */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 CNT_NUM_1      : 24;	/* Counter for number of SUB_INC1 pulses */
		/* const */ unsigned __sfrbit32 Reserved       : 8;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GTM_DPLL_CNT_NUM1_type;
#define GTM_DPLL_CNT_NUM1	(*( GTM_DPLL_CNT_NUM1_type *) 0xf01285c8u)	/* DPLL Number of Sub-Pulses of SUB_INC1 in Continuous Mode */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 CNT_NUM_2      : 24;	/* Counter for number of SUB_INC2 pulses */
		/* const */ unsigned __sfrbit32 Reserved       : 8;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GTM_DPLL_CNT_NUM2_type;
#define GTM_DPLL_CNT_NUM2	(*( GTM_DPLL_CNT_NUM2_type *) 0xf01285ccu)	/* DPLL Number of Sub-Pulses of SUB_INC2 in Continuous Mode */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned __sfrbit32 DMO            : 1;	/* DPLL mode select */
		/* const */ unsigned __sfrbit32 Reserved       : 2;	/* Reserved */
		/* const */ unsigned __sfrbit32 COA            : 1;	/* Correction strategy in automatic end mode (DMO=0) */
		/* const */ unsigned __sfrbit32 PIT            : 1;	/* Plausibility */
		/* const */ unsigned __sfrbit32 SGE1           : 1;	/* SUB_INC1 generator enable */
		/* const */ unsigned __sfrbit32 DLM1           : 1;	/* Direct Load Mode */
		/* const */ unsigned __sfrbit32 PCM1           : 1;	/* Pulse Correction Mode */
		/* const */ unsigned __sfrbit32 SGE2           : 1;	/* SUB_INC2 generator enable */
		/* const */ unsigned __sfrbit32 DLM2           : 1;	/* Direct Load Mode */
		/* const */ unsigned __sfrbit32 PCM2           : 1;	/* Pulse Correction Mode */
		/* const */ unsigned __sfrbit32 SYN_NS         : 21;	/* Synchronization number of STATE */
	} B;
	int I;
	unsigned int U;

} GTM_DPLL_CRTL_1_SHADOW_STATE_type;
#define GTM_DPLL_CRTL_1_SHADOW_STATE	(*( GTM_DPLL_CRTL_1_SHADOW_STATE_type *) 0xf01281ecu)	/* DPLL Control 1 Shadow STATE Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 MLT            : 10;	/* Multiplier for TRIGGER */
		unsigned __sfrbit32 IFP            : 1;	/* Input filter position */
		unsigned __sfrbit32 SNU            : 5;	/* STATE number */
		unsigned __sfrbit32 TNU            : 9;	/* TRIGGER number */
		unsigned __sfrbit32 AMS            : 1;	/* Adapt mode STATE */
		unsigned __sfrbit32 AMT            : 1;	/* Adapt mode TRIGGER */
		unsigned __sfrbit32 IDS            : 1;	/* Input delay STATE */
		unsigned __sfrbit32 IDT            : 1;	/* Input delay TRIGGER */
		unsigned __sfrbit32 SEN            : 1;	/* STATE enable */
		unsigned __sfrbit32 TEN            : 1;	/* TRIGGER enable */
		unsigned __sfrbit32 RMO            : 1;	/* Reference mode */
	} B;
	int I;
	unsigned int U;

} GTM_DPLL_CTRL_0_type;
#define GTM_DPLL_CTRL_0	(*( GTM_DPLL_CTRL_0_type *) 0xf0128000u)	/* DPLL Control Register 0 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned __sfrbit32 Reserved       : 10;	/* Reserved */
		/* const */ unsigned __sfrbit32 IFP            : 1;	/* Input filter position */
		/* const */ unsigned __sfrbit32 Reserved_3     : 14;	/* Reserved */
		/* const */ unsigned __sfrbit32 AMS            : 1;	/* Adapt mode STATE */
		/* const */ unsigned __sfrbit32 Reserved_5     : 1;	/* Reserved */
		/* const */ unsigned __sfrbit32 IDS            : 1;	/* Input delay STATE */
		/* const */ unsigned __sfrbit32 Reserved_7     : 3;	/* Reserved */
		/* const */ unsigned __sfrbit32 RMO            : 1;	/* Reference mode; selection of the relevant the input signal for generation of SUB_INC1 */
	} B;
	int I;
	unsigned int U;

} GTM_DPLL_CTRL_0_SHADOW_STATE_type;
#define GTM_DPLL_CTRL_0_SHADOW_STATE	(*( GTM_DPLL_CTRL_0_SHADOW_STATE_type *) 0xf01281e4u)	/* DPLL Control 0 Shadow STATE Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned __sfrbit32 MLT            : 10;	/* multiplier for TRIGGER */
		/* const */ unsigned __sfrbit32 IFP            : 1;	/* Input filter position */
		/* const */ unsigned __sfrbit32 Reserved       : 15;	/* Reserved */
		/* const */ unsigned __sfrbit32 AMT            : 1;	/* Adapt mode TRIGGER */
		/* const */ unsigned __sfrbit32 IDS            : 1;	/* Input delay STATE */
		/* const */ unsigned __sfrbit32 IDT            : 1;	/* Input delay TRIGGER */
		/* const */ unsigned __sfrbit32 Reserved_7     : 2;	/* Reserved */
		/* const */ unsigned __sfrbit32 RMO            : 1;	/* Reference mode; selection of the relevant the input signal for generation of SUB_INC1 */
	} B;
	int I;
	unsigned int U;

} GTM_DPLL_CTRL_0_SHADOW_TRIGGER_type;
#define GTM_DPLL_CTRL_0_SHADOW_TRIGGER	(*( GTM_DPLL_CTRL_0_SHADOW_TRIGGER_type *) 0xf01281e0u)	/* DPLL Control0 Shadow Trigger Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 DMO            : 1;	/* DPLL mode select */
		unsigned __sfrbit32 DEN            : 1;	/* DPLL enable */
		unsigned __sfrbit32 IDDS           : 1;	/* Input direction detection strategy in case of SMC = 0 */
		unsigned __sfrbit32 COA            : 1;	/* Correction strategy in automatic end mode (DMO=0) */
		unsigned __sfrbit32 PIT            : 1;	/* Plausibility value PVT to next valid TRIGGER is time related */
		unsigned __sfrbit32 SGE1           : 1;	/* SUB_INC1 generator enable */
		unsigned __sfrbit32 DLM1           : 1;	/* Direct Load Mode for SUB_INC1 generation */
		unsigned __sfrbit32 PCM1           : 1;	/* Pulse Correction Mode for SUB_INC1 generation */
		unsigned __sfrbit32 SGE2           : 1;	/* SUB_INC2 generator enable */
		unsigned __sfrbit32 DLM2           : 1;	/* Direct Load Mode for SUB_INC2 generation */
		unsigned __sfrbit32 PCM2           : 1;	/* Pulse Correction Mode for SUB_INC2 generation */
		unsigned __sfrbit32 SYN_NS         : 5;	/* Synchronization number of STATE */
		unsigned __sfrbit32 SYN_NT         : 5;	/* Synchronization number of TRIGGER */
		/* const */ unsigned __sfrbit32 Reserved       : 1;	/* Reserved */
		unsigned __sfrbit32 LCD            : 1;	/* Locking condition definition */
		unsigned __sfrbit32 SWR            : 1;	/* Software Reset */
		unsigned __sfrbit32 SYSF           : 1;	/* SYN_NS for FULL_SCALE */
		unsigned __sfrbit32 TS0_HRS        : 1;	/* TS0_HRS */
		unsigned __sfrbit32 TS0_HRT        : 1;	/* TS0_HRT */
		unsigned __sfrbit32 SMC            : 1;	/* Synchronous Motor Control */
		unsigned __sfrbit32 SSL            : 2;	/* STATE slope select */
		unsigned __sfrbit32 TSL            : 2;	/* Definition of active slope for signal TRIGGER each active slope is an event defined by TNU */
	} B;
	int I;
	unsigned int U;

} GTM_DPLL_CTRL_1_type;
#define GTM_DPLL_CTRL_1	(*( GTM_DPLL_CTRL_1_type *) 0xf0128004u)	/* DPLL Control Register 1 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned __sfrbit32 DMO            : 1;	/* DPLL mode select */
		/* const */ unsigned __sfrbit32 Reserved       : 2;	/* Reserved */
		/* const */ unsigned __sfrbit32 COA            : 1;	/* Correction strategy in automatic end mode (DMO=0) */
		/* const */ unsigned __sfrbit32 PIT            : 1;	/* Plausibility */
		/* const */ unsigned __sfrbit32 SGE1           : 1;	/* SUB_INC1 generator enable */
		/* const */ unsigned __sfrbit32 DLM1           : 1;	/* Direct Load Mode */
		/* const */ unsigned __sfrbit32 PCM1           : 1;	/* Pulse Correction Mode */
		/* const */ unsigned __sfrbit32 Reserved_8     : 24;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GTM_DPLL_CTRL_1_SHADOW_TRIGGER_type;
#define GTM_DPLL_CTRL_1_SHADOW_TRIGGER	(*( GTM_DPLL_CTRL_1_SHADOW_TRIGGER_type *) 0xf01281e8u)	/* DPLL Control 1 Shadow TRIGGER Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned __sfrbit32 Reserved       : 8;	/* Reserved */
		unsigned __sfrbit32 AEN0           : 1;	/* ACTION_0 enable */
		unsigned __sfrbit32 AEN1           : 1;	/* ACTION_1 enable */
		unsigned __sfrbit32 AEN2           : 1;	/* ACTION_2 enable */
		unsigned __sfrbit32 AEN3           : 1;	/* ACTION_3 enable */
		unsigned __sfrbit32 AEN4           : 1;	/* ACTION_4 enable */
		unsigned __sfrbit32 AEN5           : 1;	/* ACTION_5 enable */
		unsigned __sfrbit32 AEN6           : 1;	/* ACTION_6 enable */
		unsigned __sfrbit32 AEN7           : 1;	/* ACTION_7 enable */
		unsigned __sfrbit32 WAD0           : 1;	/* Write control bit of Action_0 */
		unsigned __sfrbit32 WAD1           : 1;	/* Write control bit of Action_1 */
		unsigned __sfrbit32 WAD2           : 1;	/* Write control bit of Action_2 */
		unsigned __sfrbit32 WAD3           : 1;	/* Write control bit of Action_3 */
		unsigned __sfrbit32 WAD4           : 1;	/* Write control bit of Action_4 */
		unsigned __sfrbit32 WAD5           : 1;	/* Write control bit of Action_5 */
		unsigned __sfrbit32 WAD6           : 1;	/* Write control bit of Action_6 */
		unsigned __sfrbit32 WAD7           : 1;	/* Write control bit of Action_7 */
		/* const */ unsigned __sfrbit32 Reserved_18    : 8;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GTM_DPLL_CTRL_2_type;
#define GTM_DPLL_CTRL_2	(*( GTM_DPLL_CTRL_2_type *) 0xf0128008u)	/* DPLL Control Register 2 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned __sfrbit32 Reserved       : 8;	/* Reserved */
		unsigned __sfrbit32 AEN8           : 1;	/* ACTION_8 enable */
		unsigned __sfrbit32 AEN9           : 1;	/* ACTION_9 enable */
		unsigned __sfrbit32 AEN10          : 1;	/* ACTION_10enable */
		unsigned __sfrbit32 AEN11          : 1;	/* ACTION_11 enable */
		unsigned __sfrbit32 AEN12          : 1;	/* ACTION_12 enable */
		unsigned __sfrbit32 AEN13          : 1;	/* ACTION_13 enable */
		unsigned __sfrbit32 AEN14          : 1;	/* ACTION_14 enable */
		unsigned __sfrbit32 AEN15          : 1;	/* ACTION_15 enable */
		unsigned __sfrbit32 WAD8           : 1;	/* Write control bit of Action_8 */
		unsigned __sfrbit32 WAD9           : 1;	/* Write control bit of Action_9 */
		unsigned __sfrbit32 WAD10          : 1;	/* Write control bit of Action_10 */
		unsigned __sfrbit32 WAD11          : 1;	/* Write control bit of Action_11 */
		unsigned __sfrbit32 WAD12          : 1;	/* Write control bit of Action_12 */
		unsigned __sfrbit32 WAD13          : 1;	/* Write control bit of Action_13 */
		unsigned __sfrbit32 WAD14          : 1;	/* Write control bit of Action_14 */
		unsigned __sfrbit32 WAD15          : 1;	/* Write control bit of Action_15 */
		/* const */ unsigned __sfrbit32 Reserved_18    : 8;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GTM_DPLL_CTRL_3_type;
#define GTM_DPLL_CTRL_3	(*( GTM_DPLL_CTRL_3_type *) 0xf012800cu)	/* DPLL Control Register 3 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned __sfrbit32 Reserved       : 8;	/* Reserved */
		unsigned __sfrbit32 AEN16          : 1;	/* ACTION_16 enable */
		unsigned __sfrbit32 AEN17          : 1;	/* ACTION_17 enable */
		unsigned __sfrbit32 AEN18          : 1;	/* ACTION_18 enable */
		unsigned __sfrbit32 AEN19          : 1;	/* ACTION_19 enable */
		unsigned __sfrbit32 AEN20          : 1;	/* ACTION_20 enable */
		unsigned __sfrbit32 AEN21          : 1;	/* ACTION_21 enable */
		unsigned __sfrbit32 AEN22          : 1;	/* ACTION_22 enable */
		unsigned __sfrbit32 AEN23          : 1;	/* ACTION_23 enable */
		unsigned __sfrbit32 WAD16          : 1;	/* Write control bit of Action_16 */
		unsigned __sfrbit32 WAD17          : 1;	/* Write control bit of Action_17 */
		unsigned __sfrbit32 WAD18          : 1;	/* Write control bit of Action_18 */
		unsigned __sfrbit32 WAD19          : 1;	/* Write control bit of Action_19 */
		unsigned __sfrbit32 WAD20          : 1;	/* Write control bit of Action_20 */
		unsigned __sfrbit32 WAD21          : 1;	/* Write control bit of Action_21 */
		unsigned __sfrbit32 WAD22          : 1;	/* Write control bit of Action_22 */
		unsigned __sfrbit32 WAD23          : 1;	/* Write control bit of Action_23 */
		/* const */ unsigned __sfrbit32 Reserved_18    : 8;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GTM_DPLL_CTRL_4_type;
#define GTM_DPLL_CTRL_4	(*( GTM_DPLL_CTRL_4_type *) 0xf0128010u)	/* DPLL Control Register 4 */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 DLA            : 24;	/* Time to react before the corresponding position value of a desired action is reached */
		/* const */ unsigned __sfrbit32 Reserved       : 8;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GTM_DPLL_DLA0_type;
#define GTM_DPLL_DLA0	(*( GTM_DPLL_DLA0_type *) 0xf0128280u)	/* DPLL ACTION_0 Time To React Before PSAi Register */
#define GTM_DPLL_DLA1	(*( GTM_DPLL_DLA0_type *) 0xf0128284u)	/* DPLL ACTION_1 Time To React Before PSAi Register */
#define GTM_DPLL_DLA10	(*( GTM_DPLL_DLA0_type *) 0xf01282a8u)	/* DPLL ACTION_10 Time To React Before PSAi Register */
#define GTM_DPLL_DLA11	(*( GTM_DPLL_DLA0_type *) 0xf01282acu)	/* DPLL ACTION_11 Time To React Before PSAi Register */
#define GTM_DPLL_DLA12	(*( GTM_DPLL_DLA0_type *) 0xf01282b0u)	/* DPLL ACTION_12 Time To React Before PSAi Register */
#define GTM_DPLL_DLA13	(*( GTM_DPLL_DLA0_type *) 0xf01282b4u)	/* DPLL ACTION_13 Time To React Before PSAi Register */
#define GTM_DPLL_DLA14	(*( GTM_DPLL_DLA0_type *) 0xf01282b8u)	/* DPLL ACTION_14 Time To React Before PSAi Register */
#define GTM_DPLL_DLA15	(*( GTM_DPLL_DLA0_type *) 0xf01282bcu)	/* DPLL ACTION_15 Time To React Before PSAi Register */
#define GTM_DPLL_DLA16	(*( GTM_DPLL_DLA0_type *) 0xf01282c0u)	/* DPLL ACTION_16 Time To React Before PSAi Register */
#define GTM_DPLL_DLA17	(*( GTM_DPLL_DLA0_type *) 0xf01282c4u)	/* DPLL ACTION_17 Time To React Before PSAi Register */
#define GTM_DPLL_DLA18	(*( GTM_DPLL_DLA0_type *) 0xf01282c8u)	/* DPLL ACTION_18 Time To React Before PSAi Register */
#define GTM_DPLL_DLA19	(*( GTM_DPLL_DLA0_type *) 0xf01282ccu)	/* DPLL ACTION_19 Time To React Before PSAi Register */
#define GTM_DPLL_DLA2	(*( GTM_DPLL_DLA0_type *) 0xf0128288u)	/* DPLL ACTION_2 Time To React Before PSAi Register */
#define GTM_DPLL_DLA20	(*( GTM_DPLL_DLA0_type *) 0xf01282d0u)	/* DPLL ACTION_20 Time To React Before PSAi Register */
#define GTM_DPLL_DLA21	(*( GTM_DPLL_DLA0_type *) 0xf01282d4u)	/* DPLL ACTION_21 Time To React Before PSAi Register */
#define GTM_DPLL_DLA22	(*( GTM_DPLL_DLA0_type *) 0xf01282d8u)	/* DPLL ACTION_22 Time To React Before PSAi Register */
#define GTM_DPLL_DLA23	(*( GTM_DPLL_DLA0_type *) 0xf01282dcu)	/* DPLL ACTION_23 Time To React Before PSAi Register */
#define GTM_DPLL_DLA3	(*( GTM_DPLL_DLA0_type *) 0xf012828cu)	/* DPLL ACTION_3 Time To React Before PSAi Register */
#define GTM_DPLL_DLA4	(*( GTM_DPLL_DLA0_type *) 0xf0128290u)	/* DPLL ACTION_4 Time To React Before PSAi Register */
#define GTM_DPLL_DLA5	(*( GTM_DPLL_DLA0_type *) 0xf0128294u)	/* DPLL ACTION_5 Time To React Before PSAi Register */
#define GTM_DPLL_DLA6	(*( GTM_DPLL_DLA0_type *) 0xf0128298u)	/* DPLL ACTION_6 Time To React Before PSAi Register */
#define GTM_DPLL_DLA7	(*( GTM_DPLL_DLA0_type *) 0xf012829cu)	/* DPLL ACTION_7 Time To React Before PSAi Register */
#define GTM_DPLL_DLA8	(*( GTM_DPLL_DLA0_type *) 0xf01282a0u)	/* DPLL ACTION_8 Time To React Before PSAi Register */
#define GTM_DPLL_DLA9	(*( GTM_DPLL_DLA0_type *) 0xf01282a4u)	/* DPLL ACTION_9 Time To React Before PSAi Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 DTA            : 24;	/* Calculated relative time to ACTION_i */
		/* const */ unsigned __sfrbit32 Reserved       : 8;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GTM_DPLL_DTA0_type;
#define GTM_DPLL_DTA0	(*( GTM_DPLL_DTA0_type *) 0xf0128380u)	/* DPLL Calculated Relat0ve Time To ACTION_i Register */
#define GTM_DPLL_DTA1	(*( GTM_DPLL_DTA0_type *) 0xf0128384u)	/* DPLL Calculated Relat1ve Time To ACTION_i Register */
#define GTM_DPLL_DTA10	(*( GTM_DPLL_DTA0_type *) 0xf01283a8u)	/* DPLL Calculated Relat10ve Time To ACTION_i Register */
#define GTM_DPLL_DTA11	(*( GTM_DPLL_DTA0_type *) 0xf01283acu)	/* DPLL Calculated Relat11ve Time To ACTION_i Register */
#define GTM_DPLL_DTA12	(*( GTM_DPLL_DTA0_type *) 0xf01283b0u)	/* DPLL Calculated Relat12ve Time To ACTION_i Register */
#define GTM_DPLL_DTA13	(*( GTM_DPLL_DTA0_type *) 0xf01283b4u)	/* DPLL Calculated Relat13ve Time To ACTION_i Register */
#define GTM_DPLL_DTA14	(*( GTM_DPLL_DTA0_type *) 0xf01283b8u)	/* DPLL Calculated Relat14ve Time To ACTION_i Register */
#define GTM_DPLL_DTA15	(*( GTM_DPLL_DTA0_type *) 0xf01283bcu)	/* DPLL Calculated Relat15ve Time To ACTION_i Register */
#define GTM_DPLL_DTA16	(*( GTM_DPLL_DTA0_type *) 0xf01283c0u)	/* DPLL Calculated Relat16ve Time To ACTION_i Register */
#define GTM_DPLL_DTA17	(*( GTM_DPLL_DTA0_type *) 0xf01283c4u)	/* DPLL Calculated Relat17ve Time To ACTION_i Register */
#define GTM_DPLL_DTA18	(*( GTM_DPLL_DTA0_type *) 0xf01283c8u)	/* DPLL Calculated Relat18ve Time To ACTION_i Register */
#define GTM_DPLL_DTA19	(*( GTM_DPLL_DTA0_type *) 0xf01283ccu)	/* DPLL Calculated Relat19ve Time To ACTION_i Register */
#define GTM_DPLL_DTA2	(*( GTM_DPLL_DTA0_type *) 0xf0128388u)	/* DPLL Calculated Relat2ve Time To ACTION_i Register */
#define GTM_DPLL_DTA20	(*( GTM_DPLL_DTA0_type *) 0xf01283d0u)	/* DPLL Calculated Relat20ve Time To ACTION_i Register */
#define GTM_DPLL_DTA21	(*( GTM_DPLL_DTA0_type *) 0xf01283d4u)	/* DPLL Calculated Relat21ve Time To ACTION_i Register */
#define GTM_DPLL_DTA22	(*( GTM_DPLL_DTA0_type *) 0xf01283d8u)	/* DPLL Calculated Relat22ve Time To ACTION_i Register */
#define GTM_DPLL_DTA23	(*( GTM_DPLL_DTA0_type *) 0xf01283dcu)	/* DPLL Calculated Relat23ve Time To ACTION_i Register */
#define GTM_DPLL_DTA3	(*( GTM_DPLL_DTA0_type *) 0xf012838cu)	/* DPLL Calculated Relat3ve Time To ACTION_i Register */
#define GTM_DPLL_DTA4	(*( GTM_DPLL_DTA0_type *) 0xf0128390u)	/* DPLL Calculated Relat4ve Time To ACTION_i Register */
#define GTM_DPLL_DTA5	(*( GTM_DPLL_DTA0_type *) 0xf0128394u)	/* DPLL Calculated Relat5ve Time To ACTION_i Register */
#define GTM_DPLL_DTA6	(*( GTM_DPLL_DTA0_type *) 0xf0128398u)	/* DPLL Calculated Relat6ve Time To ACTION_i Register */
#define GTM_DPLL_DTA7	(*( GTM_DPLL_DTA0_type *) 0xf012839cu)	/* DPLL Calculated Relat7ve Time To ACTION_i Register */
#define GTM_DPLL_DTA8	(*( GTM_DPLL_DTA0_type *) 0xf01283a0u)	/* DPLL Calculated Relat8ve Time To ACTION_i Register */
#define GTM_DPLL_DTA9	(*( GTM_DPLL_DTA0_type *) 0xf01283a4u)	/* DPLL Calculated Relat9ve Time To ACTION_i Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 DT_S           : 24;	/* Difference time of STATE */
		/* const */ unsigned __sfrbit32 Reserved       : 8;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GTM_DPLL_DT_S0_type;
#define GTM_DPLL_DT_S0	(*( GTM_DPLL_DT_S0_type *) 0xf0128900u)	/* DPLL Nominal STATE 0 Increment Values for FULL_SCALE */
#define GTM_DPLL_DT_S1	(*( GTM_DPLL_DT_S0_type *) 0xf0128904u)	/* DPLL Nominal STATE 1 Increment Values for FULL_SCALE */
#define GTM_DPLL_DT_S10	(*( GTM_DPLL_DT_S0_type *) 0xf0128928u)	/* DPLL Nominal STATE 10 Increment Values for FULL_SCALE */
#define GTM_DPLL_DT_S11	(*( GTM_DPLL_DT_S0_type *) 0xf012892cu)	/* DPLL Nominal STATE 11 Increment Values for FULL_SCALE */
#define GTM_DPLL_DT_S12	(*( GTM_DPLL_DT_S0_type *) 0xf0128930u)	/* DPLL Nominal STATE 12 Increment Values for FULL_SCALE */
#define GTM_DPLL_DT_S13	(*( GTM_DPLL_DT_S0_type *) 0xf0128934u)	/* DPLL Nominal STATE 13 Increment Values for FULL_SCALE */
#define GTM_DPLL_DT_S14	(*( GTM_DPLL_DT_S0_type *) 0xf0128938u)	/* DPLL Nominal STATE 14 Increment Values for FULL_SCALE */
#define GTM_DPLL_DT_S15	(*( GTM_DPLL_DT_S0_type *) 0xf012893cu)	/* DPLL Nominal STATE 15 Increment Values for FULL_SCALE */
#define GTM_DPLL_DT_S16	(*( GTM_DPLL_DT_S0_type *) 0xf0128940u)	/* DPLL Nominal STATE 16 Increment Values for FULL_SCALE */
#define GTM_DPLL_DT_S17	(*( GTM_DPLL_DT_S0_type *) 0xf0128944u)	/* DPLL Nominal STATE 17 Increment Values for FULL_SCALE */
#define GTM_DPLL_DT_S18	(*( GTM_DPLL_DT_S0_type *) 0xf0128948u)	/* DPLL Nominal STATE 18 Increment Values for FULL_SCALE */
#define GTM_DPLL_DT_S19	(*( GTM_DPLL_DT_S0_type *) 0xf012894cu)	/* DPLL Nominal STATE 19 Increment Values for FULL_SCALE */
#define GTM_DPLL_DT_S2	(*( GTM_DPLL_DT_S0_type *) 0xf0128908u)	/* DPLL Nominal STATE 2 Increment Values for FULL_SCALE */
#define GTM_DPLL_DT_S20	(*( GTM_DPLL_DT_S0_type *) 0xf0128950u)	/* DPLL Nominal STATE 20 Increment Values for FULL_SCALE */
#define GTM_DPLL_DT_S21	(*( GTM_DPLL_DT_S0_type *) 0xf0128954u)	/* DPLL Nominal STATE 21 Increment Values for FULL_SCALE */
#define GTM_DPLL_DT_S22	(*( GTM_DPLL_DT_S0_type *) 0xf0128958u)	/* DPLL Nominal STATE 22 Increment Values for FULL_SCALE */
#define GTM_DPLL_DT_S23	(*( GTM_DPLL_DT_S0_type *) 0xf012895cu)	/* DPLL Nominal STATE 23 Increment Values for FULL_SCALE */
#define GTM_DPLL_DT_S24	(*( GTM_DPLL_DT_S0_type *) 0xf0128960u)	/* DPLL Nominal STATE 24 Increment Values for FULL_SCALE */
#define GTM_DPLL_DT_S25	(*( GTM_DPLL_DT_S0_type *) 0xf0128964u)	/* DPLL Nominal STATE 25 Increment Values for FULL_SCALE */
#define GTM_DPLL_DT_S26	(*( GTM_DPLL_DT_S0_type *) 0xf0128968u)	/* DPLL Nominal STATE 26 Increment Values for FULL_SCALE */
#define GTM_DPLL_DT_S27	(*( GTM_DPLL_DT_S0_type *) 0xf012896cu)	/* DPLL Nominal STATE 27 Increment Values for FULL_SCALE */
#define GTM_DPLL_DT_S28	(*( GTM_DPLL_DT_S0_type *) 0xf0128970u)	/* DPLL Nominal STATE 28 Increment Values for FULL_SCALE */
#define GTM_DPLL_DT_S29	(*( GTM_DPLL_DT_S0_type *) 0xf0128974u)	/* DPLL Nominal STATE 29 Increment Values for FULL_SCALE */
#define GTM_DPLL_DT_S3	(*( GTM_DPLL_DT_S0_type *) 0xf012890cu)	/* DPLL Nominal STATE 3 Increment Values for FULL_SCALE */
#define GTM_DPLL_DT_S30	(*( GTM_DPLL_DT_S0_type *) 0xf0128978u)	/* DPLL Nominal STATE 30 Increment Values for FULL_SCALE */
#define GTM_DPLL_DT_S31	(*( GTM_DPLL_DT_S0_type *) 0xf012897cu)	/* DPLL Nominal STATE 31 Increment Values for FULL_SCALE */
#define GTM_DPLL_DT_S32	(*( GTM_DPLL_DT_S0_type *) 0xf0128980u)	/* DPLL Nominal STATE 32 Increment Values for FULL_SCALE */
#define GTM_DPLL_DT_S33	(*( GTM_DPLL_DT_S0_type *) 0xf0128984u)	/* DPLL Nominal STATE 33 Increment Values for FULL_SCALE */
#define GTM_DPLL_DT_S34	(*( GTM_DPLL_DT_S0_type *) 0xf0128988u)	/* DPLL Nominal STATE 34 Increment Values for FULL_SCALE */
#define GTM_DPLL_DT_S35	(*( GTM_DPLL_DT_S0_type *) 0xf012898cu)	/* DPLL Nominal STATE 35 Increment Values for FULL_SCALE */
#define GTM_DPLL_DT_S36	(*( GTM_DPLL_DT_S0_type *) 0xf0128990u)	/* DPLL Nominal STATE 36 Increment Values for FULL_SCALE */
#define GTM_DPLL_DT_S37	(*( GTM_DPLL_DT_S0_type *) 0xf0128994u)	/* DPLL Nominal STATE 37 Increment Values for FULL_SCALE */
#define GTM_DPLL_DT_S38	(*( GTM_DPLL_DT_S0_type *) 0xf0128998u)	/* DPLL Nominal STATE 38 Increment Values for FULL_SCALE */
#define GTM_DPLL_DT_S39	(*( GTM_DPLL_DT_S0_type *) 0xf012899cu)	/* DPLL Nominal STATE 39 Increment Values for FULL_SCALE */
#define GTM_DPLL_DT_S4	(*( GTM_DPLL_DT_S0_type *) 0xf0128910u)	/* DPLL Nominal STATE 4 Increment Values for FULL_SCALE */
#define GTM_DPLL_DT_S40	(*( GTM_DPLL_DT_S0_type *) 0xf01289a0u)	/* DPLL Nominal STATE 40 Increment Values for FULL_SCALE */
#define GTM_DPLL_DT_S41	(*( GTM_DPLL_DT_S0_type *) 0xf01289a4u)	/* DPLL Nominal STATE 41 Increment Values for FULL_SCALE */
#define GTM_DPLL_DT_S42	(*( GTM_DPLL_DT_S0_type *) 0xf01289a8u)	/* DPLL Nominal STATE 42 Increment Values for FULL_SCALE */
#define GTM_DPLL_DT_S43	(*( GTM_DPLL_DT_S0_type *) 0xf01289acu)	/* DPLL Nominal STATE 43 Increment Values for FULL_SCALE */
#define GTM_DPLL_DT_S44	(*( GTM_DPLL_DT_S0_type *) 0xf01289b0u)	/* DPLL Nominal STATE 44 Increment Values for FULL_SCALE */
#define GTM_DPLL_DT_S45	(*( GTM_DPLL_DT_S0_type *) 0xf01289b4u)	/* DPLL Nominal STATE 45 Increment Values for FULL_SCALE */
#define GTM_DPLL_DT_S46	(*( GTM_DPLL_DT_S0_type *) 0xf01289b8u)	/* DPLL Nominal STATE 46 Increment Values for FULL_SCALE */
#define GTM_DPLL_DT_S47	(*( GTM_DPLL_DT_S0_type *) 0xf01289bcu)	/* DPLL Nominal STATE 47 Increment Values for FULL_SCALE */
#define GTM_DPLL_DT_S48	(*( GTM_DPLL_DT_S0_type *) 0xf01289c0u)	/* DPLL Nominal STATE 48 Increment Values for FULL_SCALE */
#define GTM_DPLL_DT_S49	(*( GTM_DPLL_DT_S0_type *) 0xf01289c4u)	/* DPLL Nominal STATE 49 Increment Values for FULL_SCALE */
#define GTM_DPLL_DT_S5	(*( GTM_DPLL_DT_S0_type *) 0xf0128914u)	/* DPLL Nominal STATE 5 Increment Values for FULL_SCALE */
#define GTM_DPLL_DT_S50	(*( GTM_DPLL_DT_S0_type *) 0xf01289c8u)	/* DPLL Nominal STATE 50 Increment Values for FULL_SCALE */
#define GTM_DPLL_DT_S51	(*( GTM_DPLL_DT_S0_type *) 0xf01289ccu)	/* DPLL Nominal STATE 51 Increment Values for FULL_SCALE */
#define GTM_DPLL_DT_S52	(*( GTM_DPLL_DT_S0_type *) 0xf01289d0u)	/* DPLL Nominal STATE 52 Increment Values for FULL_SCALE */
#define GTM_DPLL_DT_S53	(*( GTM_DPLL_DT_S0_type *) 0xf01289d4u)	/* DPLL Nominal STATE 53 Increment Values for FULL_SCALE */
#define GTM_DPLL_DT_S54	(*( GTM_DPLL_DT_S0_type *) 0xf01289d8u)	/* DPLL Nominal STATE 54 Increment Values for FULL_SCALE */
#define GTM_DPLL_DT_S55	(*( GTM_DPLL_DT_S0_type *) 0xf01289dcu)	/* DPLL Nominal STATE 55 Increment Values for FULL_SCALE */
#define GTM_DPLL_DT_S56	(*( GTM_DPLL_DT_S0_type *) 0xf01289e0u)	/* DPLL Nominal STATE 56 Increment Values for FULL_SCALE */
#define GTM_DPLL_DT_S57	(*( GTM_DPLL_DT_S0_type *) 0xf01289e4u)	/* DPLL Nominal STATE 57 Increment Values for FULL_SCALE */
#define GTM_DPLL_DT_S58	(*( GTM_DPLL_DT_S0_type *) 0xf01289e8u)	/* DPLL Nominal STATE 58 Increment Values for FULL_SCALE */
#define GTM_DPLL_DT_S59	(*( GTM_DPLL_DT_S0_type *) 0xf01289ecu)	/* DPLL Nominal STATE 59 Increment Values for FULL_SCALE */
#define GTM_DPLL_DT_S6	(*( GTM_DPLL_DT_S0_type *) 0xf0128918u)	/* DPLL Nominal STATE 6 Increment Values for FULL_SCALE */
#define GTM_DPLL_DT_S60	(*( GTM_DPLL_DT_S0_type *) 0xf01289f0u)	/* DPLL Nominal STATE 60 Increment Values for FULL_SCALE */
#define GTM_DPLL_DT_S61	(*( GTM_DPLL_DT_S0_type *) 0xf01289f4u)	/* DPLL Nominal STATE 61 Increment Values for FULL_SCALE */
#define GTM_DPLL_DT_S62	(*( GTM_DPLL_DT_S0_type *) 0xf01289f8u)	/* DPLL Nominal STATE 62 Increment Values for FULL_SCALE */
#define GTM_DPLL_DT_S63	(*( GTM_DPLL_DT_S0_type *) 0xf01289fcu)	/* DPLL Nominal STATE 63 Increment Values for FULL_SCALE */
#define GTM_DPLL_DT_S7	(*( GTM_DPLL_DT_S0_type *) 0xf012891cu)	/* DPLL Nominal STATE 7 Increment Values for FULL_SCALE */
#define GTM_DPLL_DT_S8	(*( GTM_DPLL_DT_S0_type *) 0xf0128920u)	/* DPLL Nominal STATE 8 Increment Values for FULL_SCALE */
#define GTM_DPLL_DT_S9	(*( GTM_DPLL_DT_S0_type *) 0xf0128924u)	/* DPLL Nominal STATE 9 Increment Values for FULL_SCALE */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 DT_S_ACT       : 24;	/* Calculated duration of the last STATE increment */
		/* const */ unsigned __sfrbit32 Reserved       : 8;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GTM_DPLL_DT_S_ACT_type;
#define GTM_DPLL_DT_S_ACT	(*( GTM_DPLL_DT_S_ACT_type *) 0xf012847cu)	/* DPLL Duration of Last STATE Increment [DT_S_ACT] */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 DT_T_ACT       : 24;	/* Calculated duration of the last TRIGGER increment */
		/* const */ unsigned __sfrbit32 Reserved       : 8;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GTM_DPLL_DT_T_ACT_type;
#define GTM_DPLL_DT_T_ACT	(*( GTM_DPLL_DT_T_ACT_type *) 0xf0128478u)	/* DPLL Duration of Last TRIGGER Increment */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 EDT_S          : 24;	/* Signed difference between actual value and prediction of the last STATE increment: sint24 */
		/* const */ unsigned __sfrbit32 Reserved       : 8;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GTM_DPLL_EDT_S_type;
#define GTM_DPLL_EDT_S	(*( GTM_DPLL_EDT_S_type *) 0xf0128488u)	/* DPLL Difference of Prediction to actual value for Last STATE Increment */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 EDT_T          : 24;	/* Signed difference between actual value and a simple prediction of the last TRIGGER increment: sint24 */
		/* const */ unsigned __sfrbit32 Reserved       : 8;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GTM_DPLL_EDT_T_type;
#define GTM_DPLL_EDT_T	(*( GTM_DPLL_EDT_T_type *) 0xf0128480u)	/* DPLL Difference of prediction to actual value of the last TRIGGER increment */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 PDI_EIRQ_EN    : 1;	/* DPLL disable interrupt enable, when switch off of the DEN bit */
		unsigned __sfrbit32 PEI_EIRQ_EN    : 1;	/* DPLL enable interrupt enable, when switch on of the DEN bit */
		unsigned __sfrbit32 TINI_EIRQ_EN   : 1;	/* TRIGGER minimum hold time violation interrupt enable bit. */
		unsigned __sfrbit32 TAXI_EIRQ_EN   : 1;	/* TRIGGER maximum hold time violation interrupt enable bit */
		unsigned __sfrbit32 SISI_EIRQ_EN   : 1;	/* STATE inactive slope interrupt enable bit */
		unsigned __sfrbit32 TISI_EIRQ_EN   : 1;	/* TRIGGER inactive slope interrupt enable bit */
		unsigned __sfrbit32 MSI_EIRQ_EN    : 1;	/* Missing STATE interrupt enable */
		unsigned __sfrbit32 MTI_EIRQ_EN    : 1;	/* Missing TRIGGER interrupt enable */
		unsigned __sfrbit32 SASI_EIRQ_EN   : 1;	/* STATE active slope interrupt enable */
		unsigned __sfrbit32 TASI_EIRQ_EN   : 1;	/* TRIGGER active slope interrupt enable */
		unsigned __sfrbit32 PWI_EIRQ_EN    : 1;	/* Plausibility window (PVT) violation interrupt of TRIGGER enable */
		unsigned __sfrbit32 W2I_EIRQ_EN    : 1;	/* RAM write access to RAM region 2 interrupt enable */
		unsigned __sfrbit32 W1I_EIRQ_EN    : 1;	/* Write access to RAM region 1B or 1C interrupt */
		unsigned __sfrbit32 GL1I_EIRQ_EN   : 1;	/* Get of lock interrupt enable, when lock arises */
		unsigned __sfrbit32 LL1I_EIRQ_EN   : 1;	/* Loss of lock interrupt enable */
		unsigned __sfrbit32 EI_EIRQ_EN     : 1;	/* Error interrupt enable (see status register) */
		unsigned __sfrbit32 GL2I_EIRQ_EN   : 1;	/* Get of lock interrupt enable for SUB_INC2 */
		unsigned __sfrbit32 LL2I_EIRQ_EN   : 1;	/* Loss of lock interrupt enable for SUB_INC2 */
		unsigned __sfrbit32 TE0I_EIRQ_EN   : 1;	/* TRIGGER event interrupt 0 enable */
		unsigned __sfrbit32 TE1I_EIRQ_EN   : 1;	/* TRIGGER event interrupt 1 enable */
		unsigned __sfrbit32 TE2I_EIRQ_EN   : 1;	/* TRIGGER event interrupt 2 enable */
		unsigned __sfrbit32 TE3I_EIRQ_EN   : 1;	/* TRIGGER event interrupt 3 enable */
		unsigned __sfrbit32 TE4I_EIRQ_EN   : 1;	/* TRIGGER event interrupt 4 enable */
		unsigned __sfrbit32 CDTI_EIRQ_EN   : 1;	/* Enable interrupt when calculation of TRIGGER duration done */
		unsigned __sfrbit32 CDSI_EIRQ_EN   : 1;	/* Enable interrupt when calculation of TRIGGER duration done */
		unsigned __sfrbit32 TORI           : 1;	/* TRIGGER out of range interrupt */
		unsigned __sfrbit32 SORI           : 1;	/* STATE out of range */
		unsigned __sfrbit32 DCGI           : 1;	/* Direction change interrupt */
		/* const */ unsigned __sfrbit32 Reserved       : 4;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GTM_DPLL_EIRQ_EN_type;
#define GTM_DPLL_EIRQ_EN	(*( GTM_DPLL_EIRQ_EN_type *) 0xf0128050u)	/* DPLL Error Interrupt Enable Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 STATE_FT       : 24;	/* Filter value of the last valid STATE input */
		/* const */ unsigned __sfrbit32 Reserved       : 8;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GTM_DPLL_FTV_S_type;
#define GTM_DPLL_FTV_S	(*( GTM_DPLL_FTV_S_type *) 0xf0128418u)	/* DPLL Actual Signal STATE Filter Value Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 TRIGGER_FT     : 24;	/* Filter value of the last valid TRIGGER input */
		/* const */ unsigned __sfrbit32 Reserved       : 8;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GTM_DPLL_FTV_T_type;
#define GTM_DPLL_FTV_T	(*( GTM_DPLL_FTV_T_type *) 0xf0128408u)	/* DPLL Actual Signal TRIGGER Filter Value Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 ID_PMTR_x      : 9;	/* ID information to the input signal PMTR_x from the ARU */
		/* const */ unsigned __sfrbit32 Reserved       : 23;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GTM_DPLL_ID_PMTR_0_type;
#define GTM_DPLL_ID_PMTR_0	(*( GTM_DPLL_ID_PMTR_0_type *) 0xf0128100u)	/* DPLL ID Information For Input Signal PMTR 0 Register */
#define GTM_DPLL_ID_PMTR_1	(*( GTM_DPLL_ID_PMTR_0_type *) 0xf0128104u)	/* DPLL ID Information For Input Signal PMTR 1 Register */
#define GTM_DPLL_ID_PMTR_10	(*( GTM_DPLL_ID_PMTR_0_type *) 0xf0128128u)	/* DPLL ID Information For Input Signal PMTR 10 Register */
#define GTM_DPLL_ID_PMTR_11	(*( GTM_DPLL_ID_PMTR_0_type *) 0xf012812cu)	/* DPLL ID Information For Input Signal PMTR 11 Register */
#define GTM_DPLL_ID_PMTR_12	(*( GTM_DPLL_ID_PMTR_0_type *) 0xf0128130u)	/* DPLL ID Information For Input Signal PMTR 12 Register */
#define GTM_DPLL_ID_PMTR_13	(*( GTM_DPLL_ID_PMTR_0_type *) 0xf0128134u)	/* DPLL ID Information For Input Signal PMTR 13 Register */
#define GTM_DPLL_ID_PMTR_14	(*( GTM_DPLL_ID_PMTR_0_type *) 0xf0128138u)	/* DPLL ID Information For Input Signal PMTR 14 Register */
#define GTM_DPLL_ID_PMTR_15	(*( GTM_DPLL_ID_PMTR_0_type *) 0xf012813cu)	/* DPLL ID Information For Input Signal PMTR 15 Register */
#define GTM_DPLL_ID_PMTR_16	(*( GTM_DPLL_ID_PMTR_0_type *) 0xf0128140u)	/* DPLL ID Information For Input Signal PMTR 16 Register */
#define GTM_DPLL_ID_PMTR_17	(*( GTM_DPLL_ID_PMTR_0_type *) 0xf0128144u)	/* DPLL ID Information For Input Signal PMTR 17 Register */
#define GTM_DPLL_ID_PMTR_18	(*( GTM_DPLL_ID_PMTR_0_type *) 0xf0128148u)	/* DPLL ID Information For Input Signal PMTR 18 Register */
#define GTM_DPLL_ID_PMTR_19	(*( GTM_DPLL_ID_PMTR_0_type *) 0xf012814cu)	/* DPLL ID Information For Input Signal PMTR 19 Register */
#define GTM_DPLL_ID_PMTR_2	(*( GTM_DPLL_ID_PMTR_0_type *) 0xf0128108u)	/* DPLL ID Information For Input Signal PMTR 2 Register */
#define GTM_DPLL_ID_PMTR_20	(*( GTM_DPLL_ID_PMTR_0_type *) 0xf0128150u)	/* DPLL ID Information For Input Signal PMTR 20 Register */
#define GTM_DPLL_ID_PMTR_21	(*( GTM_DPLL_ID_PMTR_0_type *) 0xf0128154u)	/* DPLL ID Information For Input Signal PMTR 21 Register */
#define GTM_DPLL_ID_PMTR_22	(*( GTM_DPLL_ID_PMTR_0_type *) 0xf0128158u)	/* DPLL ID Information For Input Signal PMTR 22 Register */
#define GTM_DPLL_ID_PMTR_23	(*( GTM_DPLL_ID_PMTR_0_type *) 0xf012815cu)	/* DPLL ID Information For Input Signal PMTR 23 Register */
#define GTM_DPLL_ID_PMTR_3	(*( GTM_DPLL_ID_PMTR_0_type *) 0xf012810cu)	/* DPLL ID Information For Input Signal PMTR 3 Register */
#define GTM_DPLL_ID_PMTR_4	(*( GTM_DPLL_ID_PMTR_0_type *) 0xf0128110u)	/* DPLL ID Information For Input Signal PMTR 4 Register */
#define GTM_DPLL_ID_PMTR_5	(*( GTM_DPLL_ID_PMTR_0_type *) 0xf0128114u)	/* DPLL ID Information For Input Signal PMTR 5 Register */
#define GTM_DPLL_ID_PMTR_6	(*( GTM_DPLL_ID_PMTR_0_type *) 0xf0128118u)	/* DPLL ID Information For Input Signal PMTR 6 Register */
#define GTM_DPLL_ID_PMTR_7	(*( GTM_DPLL_ID_PMTR_0_type *) 0xf012811cu)	/* DPLL ID Information For Input Signal PMTR 7 Register */
#define GTM_DPLL_ID_PMTR_8	(*( GTM_DPLL_ID_PMTR_0_type *) 0xf0128120u)	/* DPLL ID Information For Input Signal PMTR 8 Register */
#define GTM_DPLL_ID_PMTR_9	(*( GTM_DPLL_ID_PMTR_0_type *) 0xf0128124u)	/* DPLL ID Information For Input Signal PMTR 9 Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 INC_CNT1       : 24;	/* Actual number of pulses to be still sent out at the current increment until the next valid input signal in automatic end mode */
		/* const */ unsigned __sfrbit32 Reserved       : 8;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GTM_DPLL_INC_CNT1_type;
#define GTM_DPLL_INC_CNT1	(*( GTM_DPLL_INC_CNT1_type *) 0xf01280b0u)	/* DPLL Counter for Pulses for TBU_TS1 to be sent in Automatic End Mode */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 INC_CNT2       : 24;	/* Actual number of pulses to be still sent out at the current increment until the next valid input signal in automatic end mode */
		/* const */ unsigned __sfrbit32 Reserved       : 8;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GTM_DPLL_INC_CNT2_type;
#define GTM_DPLL_INC_CNT2	(*( GTM_DPLL_INC_CNT2_type *) 0xf01280b4u)	/* DPLL Counter for Pulses for TBU_TS2 to be sent in Automatic End Mode when SMC=RMO=1 */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 PDI_IRQ_EN     : 1;	/* DPLL disable interrupt enable, when switch off of the DEN bit */
		unsigned __sfrbit32 PEI_IRQ_EN     : 1;	/* DPLL enable interrupt enable, when switch on of the DEN bit */
		unsigned __sfrbit32 TINI_IRQ_EN    : 1;	/* TRIGGER minimum hold time violation interrupt enable bit */
		unsigned __sfrbit32 TAXI_IRQ_EN    : 1;	/* TRIGGER maximum hold time violation interrupt enable bit */
		unsigned __sfrbit32 SISI_IRQ_EN    : 1;	/* STATE inactive slope interrupt enable bit */
		unsigned __sfrbit32 TISI_IRQ_EN    : 1;	/* TRIGGER inactive slope interrupt enable bit */
		unsigned __sfrbit32 MSI_IRQ_EN     : 1;	/* Missing STATE interrupt enable */
		unsigned __sfrbit32 MTI_IRQ_EN     : 1;	/* Missing TRIGGER interrupt enable */
		unsigned __sfrbit32 SASI_IRQ_EN    : 1;	/* STATE active slope interrupt enable */
		unsigned __sfrbit32 TASI_IRQ_EN    : 1;	/* TRIGGER active slope interrupt enable */
		unsigned __sfrbit32 PWI_IRQ_EN     : 1;	/* Plausibility window (PVT) violation interrupt of TRIGGER enable */
		unsigned __sfrbit32 W2I_IRQ_EN     : 1;	/* RAM write access to RAM region 2 interrupt enable */
		unsigned __sfrbit32 W1I_IRQ_EN     : 1;	/* Write access to RAM region 1B or 1C interrupt */
		unsigned __sfrbit32 GL1I_IRQ_EN    : 1;	/* Get of lock interrupt enable, when lock arises */
		unsigned __sfrbit32 LL1I_IRQ_EN    : 1;	/* Loss of lock interrupt enable */
		unsigned __sfrbit32 EI_IRQ_EN      : 1;	/* Error interrupt enable (see status register) */
		unsigned __sfrbit32 GL2I_IRQ_EN    : 1;	/* Get of lock interrupt enable for SUB_INC2 */
		unsigned __sfrbit32 LL2I_IRQ_EN    : 1;	/* Loss of lock interrupt enable for SUB_INC2 */
		unsigned __sfrbit32 TE0I_IRQ_EN    : 1;	/* TRIGGER event interrupt 0 enable */
		unsigned __sfrbit32 TE1I_IRQ_EN    : 1;	/* TRIGGER event interrupt 1 enable */
		unsigned __sfrbit32 TE2I_IRQ_EN    : 1;	/* TRIGGER event interrupt 2 enable */
		unsigned __sfrbit32 TE3I_IRQ_EN    : 1;	/* TRIGGER event interrupt 3 enable */
		unsigned __sfrbit32 TE4I_IRQ_EN    : 1;	/* TRIGGER event interrupt 4 enable */
		unsigned __sfrbit32 CDTI_IRQ_EN    : 1;	/* Enable interrupt when calculation of TRIGGER duration done */
		unsigned __sfrbit32 CDSI_IRQ_EN    : 1;	/* Enable interrupt when calculation of TRIGGER duration done */
		unsigned __sfrbit32 TORI           : 1;	/* TRIGGER out of range interrupt */
		unsigned __sfrbit32 SORI           : 1;	/* STATE out of range */
		unsigned __sfrbit32 DCGI           : 1;	/* Direction change interrupt */
		/* const */ unsigned __sfrbit32 Reserved       : 4;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GTM_DPLL_IRQ_EN_type;
#define GTM_DPLL_IRQ_EN	(*( GTM_DPLL_IRQ_EN_type *) 0xf0128044u)	/* DPLL Interrupt Enable Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 TRG_PDI        : 1;	/* Force Interrupt PDI */
		unsigned __sfrbit32 TRG_PEI        : 1;	/* Force Interrupt PEI */
		unsigned __sfrbit32 TRG_TINI       : 1;	/* Force Interrupt TINI */
		unsigned __sfrbit32 TRG_TAXI       : 1;	/* Force Interrupt TAXI */
		unsigned __sfrbit32 TRG_SISI       : 1;	/* Force Interrupt SISI */
		unsigned __sfrbit32 TRG_TISI       : 1;	/* Force Interrupt TISI */
		unsigned __sfrbit32 TRG_MSI        : 1;	/* Force Interrupt MSI */
		unsigned __sfrbit32 TRG_MTI        : 1;	/* Force Interrupt MTI */
		unsigned __sfrbit32 TRG_SASI       : 1;	/* Force Interrupt SASI */
		unsigned __sfrbit32 TRG_TASI       : 1;	/* Force Interrupt TASI */
		unsigned __sfrbit32 TRG_PWI        : 1;	/* Force Interrupt PWI */
		unsigned __sfrbit32 TRG_W2I        : 1;	/* Force Interrupt W2IF */
		unsigned __sfrbit32 TRG_W1I        : 1;	/* Force Interrupt W1I */
		unsigned __sfrbit32 TRG_GL1I       : 1;	/* Force Interrupt GL1I */
		unsigned __sfrbit32 TRG_LL1I       : 1;	/* Force Interrupt LL1I */
		unsigned __sfrbit32 TRG_EI         : 1;	/* Force Interrupt EI */
		unsigned __sfrbit32 TRG_GL2I       : 1;	/* Force Interrupt GL2I */
		unsigned __sfrbit32 TRG_LL2I       : 1;	/* Force Interrupt LL2I */
		unsigned __sfrbit32 TRG_TE0I       : 1;	/* Force Interrupt TE0I */
		unsigned __sfrbit32 TRG_TE1I       : 1;	/* Force Interrupt TE1I */
		unsigned __sfrbit32 TRG_TE2I       : 1;	/* Force Interrupt TE2I */
		unsigned __sfrbit32 TRG_TE3I       : 1;	/* Force Interrupt TE3I */
		unsigned __sfrbit32 TRG_TE4I       : 1;	/* Force Interrupt TE4I */
		unsigned __sfrbit32 TRG_CDTI       : 1;	/* Force Interrupt CDTI */
		unsigned __sfrbit32 TRG_CDSI       : 1;	/* Force Interrupt CDSI */
		unsigned __sfrbit32 TRG_TORI       : 1;	/* Force Interrupt TORI */
		unsigned __sfrbit32 TRG_SORI       : 1;	/* Force Interrupt SORI */
		unsigned __sfrbit32 TRG_DCGI       : 1;	/* Force Interrupt DCGI */
		/* const */ unsigned __sfrbit32 Reserved       : 4;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GTM_DPLL_IRQ_FORCINT_type;
#define GTM_DPLL_IRQ_FORCINT	(*( GTM_DPLL_IRQ_FORCINT_type *) 0xf0128048u)	/* DPLL Interrupt Force Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 PDI            : 1;	/* DPLL disable interrupt */
		unsigned __sfrbit32 PEI            : 1;	/* DPLL enable interrupt */
		unsigned __sfrbit32 TINI           : 1;	/* TRIGGER minimum hold time violation interrupt (?T) */
		unsigned __sfrbit32 TAXI           : 1;	/* TRIGGER maximum hold time violation interrupt (?T'gt'THMA'gt'0) */
		unsigned __sfrbit32 SISI           : 1;	/* STATE inactive slope interrupt */
		unsigned __sfrbit32 TISI           : 1;	/* TRIGGER inactive slope interrupt */
		unsigned __sfrbit32 MSI            : 1;	/* Missing STATE interrupt */
		unsigned __sfrbit32 MTI            : 1;	/* Missing TRIGGER interrupt */
		unsigned __sfrbit32 SASI           : 1;	/* STATE active slope interrupt */
		unsigned __sfrbit32 TASI           : 1;	/* TRIGGER active slope interrupt */
		unsigned __sfrbit32 PWI            : 1;	/* Plausibility window (PVT) violation interrupt of TRIGGER */
		unsigned __sfrbit32 W2I            : 1;	/* RAM write access to RAM region 2 interrupt */
		unsigned __sfrbit32 W1I            : 1;	/* Write access to RAM region 1B or 1C interrupt */
		unsigned __sfrbit32 GL1I           : 1;	/* Get of lock interrupt, for SUB_INC1 */
		unsigned __sfrbit32 LL1I           : 1;	/* Loss of lock interrupt for SUB_INC1 */
		unsigned __sfrbit32 EI             : 1;	/* Error interrupt (see status register bit 31) */
		unsigned __sfrbit32 GL2I           : 1;	/* Get of lock interrupt, for SUB_INC2 */
		unsigned __sfrbit32 LL2I           : 1;	/* Loss of lock interrupt for SUB_INC2 */
		unsigned __sfrbit32 TE0I           : 1;	/* TRIGGER event interrupt 0 */
		unsigned __sfrbit32 TE1I           : 1;	/* TRIGGER event interrupt 1 */
		unsigned __sfrbit32 TE2I           : 1;	/* TRIGGER event interrupt 2 */
		unsigned __sfrbit32 TE3I           : 1;	/* TRIGGER event interrupt 3 */
		unsigned __sfrbit32 TE4I           : 1;	/* TRIGGER event interrupt 4 */
		unsigned __sfrbit32 CDTI           : 1;	/* Calculation of TRIGGER duration done, only while NTI_CNT is zero */
		unsigned __sfrbit32 CDSI           : 1;	/* Calculation of STATE duration done */
		unsigned __sfrbit32 TORI           : 1;	/* TRIGGER out of range interrupt */
		unsigned __sfrbit32 SORI           : 1;	/* STATE out of range */
		unsigned __sfrbit32 DCGI           : 1;	/* Direction change interrupt */
		/* const */ unsigned __sfrbit32 Reserved       : 4;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GTM_DPLL_IRQ_NOTIFY_type;
#define GTM_DPLL_IRQ_NOTIFY	(*( GTM_DPLL_IRQ_NOTIFY_type *) 0xf0128040u)	/* DPLL Interrupt Notification Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 MEDT_S         : 24;	/* Signed middle weighted difference between actual value and prediction of the last STATE increments: sint24 */
		/* const */ unsigned __sfrbit32 Reserved       : 8;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GTM_DPLL_MEDT_S_type;
#define GTM_DPLL_MEDT_S	(*( GTM_DPLL_MEDT_S_type *) 0xf012848cu)	/* DPLL Weighted difference of Prediction up to the Last STATE Increment */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 MEDT_T         : 24;	/* Signed middle weighted difference between actual value and prediction of the last TRIGGER increments: sint24 */
		/* const */ unsigned __sfrbit32 Reserved       : 8;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GTM_DPLL_MEDT_T_type;
#define GTM_DPLL_MEDT_T	(*( GTM_DPLL_MEDT_T_type *) 0xf0128484u)	/* DPLL Weighted difference of Prediction up to the Last TRIGGER Increment */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 MLS1           : 18;	/* Number of pulses between two STATE events (to be set and updated by the CPU) */
		/* const */ unsigned __sfrbit32 Reserved       : 14;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GTM_DPLL_MLS1_type;
#define GTM_DPLL_MLS1	(*( GTM_DPLL_MLS1_type *) 0xf01285c0u)	/* DPLL Calculated Number of Sub-Pulses between Two STATE Events */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 MLS2           : 18;	/* Counter for number of SUB_INC2 pulses */
		/* const */ unsigned __sfrbit32 Reserved       : 14;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GTM_DPLL_MLS2_type;
#define GTM_DPLL_MLS2	(*( GTM_DPLL_MLS2_type *) 0xf01285c4u)	/* DPLL Calculated Number of Sub-Pulses between Two STATE Events */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 MPVAL1         : 16;	/* Missing pulses for direct correction of SUB_INC1 pulses by the CPU (sint16) */
		unsigned __sfrbit32 SIX1           : 8;	/* sign extension for MPVAL1 */
		/* const */ unsigned __sfrbit32 Reserved       : 8;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GTM_DPLL_MPVAL1_type;
#define GTM_DPLL_MPVAL1	(*( GTM_DPLL_MPVAL1_type *) 0xf0128440u)	/* DPLL Missing Pulses to be Added/Subtracted Directly to SUB_INC1 and INC_CNT1 Once */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 MPVAL2         : 16;	/* missing pulses for direct correction of SUB_INC2 pulses by the CPU (sint16) */
		unsigned __sfrbit32 SIX2           : 8;	/* sign extension for MPVAL2 */
		/* const */ unsigned __sfrbit32 Reserved       : 8;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GTM_DPLL_MPVAL2_type;
#define GTM_DPLL_MPVAL2	(*( GTM_DPLL_MPVAL2_type *) 0xf0128444u)	/* DPLL Missing Pulses to be Added/Subtracted Directly to SUB_INC2 and INC_CNT2 Once */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 DB             : 10;	/* Number of events to Action_i (fractional part) */
		unsigned __sfrbit32 DW             : 10;	/* Number of events to Action_i (integer part) */
		unsigned __sfrbit32 Reserved       : 4;	/* Reserved */
		/* const */ unsigned __sfrbit32 Reserved_4     : 8;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GTM_DPLL_NA0_type;
#define GTM_DPLL_NA0	(*( GTM_DPLL_NA0_type *) 0xf0128300u)	/* DPLL Calculated Number Of TRIGGER/STATE Increments To ACTION_0 */
#define GTM_DPLL_NA1	(*( GTM_DPLL_NA0_type *) 0xf0128304u)	/* DPLL Calculated Number Of TRIGGER/STATE Increments To ACTION_1 */
#define GTM_DPLL_NA10	(*( GTM_DPLL_NA0_type *) 0xf0128328u)	/* DPLL Calculated Number Of TRIGGER/STATE Increments To ACTION_10 */
#define GTM_DPLL_NA11	(*( GTM_DPLL_NA0_type *) 0xf012832cu)	/* DPLL Calculated Number Of TRIGGER/STATE Increments To ACTION_11 */
#define GTM_DPLL_NA12	(*( GTM_DPLL_NA0_type *) 0xf0128330u)	/* DPLL Calculated Number Of TRIGGER/STATE Increments To ACTION_12 */
#define GTM_DPLL_NA13	(*( GTM_DPLL_NA0_type *) 0xf0128334u)	/* DPLL Calculated Number Of TRIGGER/STATE Increments To ACTION_13 */
#define GTM_DPLL_NA14	(*( GTM_DPLL_NA0_type *) 0xf0128338u)	/* DPLL Calculated Number Of TRIGGER/STATE Increments To ACTION_14 */
#define GTM_DPLL_NA15	(*( GTM_DPLL_NA0_type *) 0xf012833cu)	/* DPLL Calculated Number Of TRIGGER/STATE Increments To ACTION_15 */
#define GTM_DPLL_NA16	(*( GTM_DPLL_NA0_type *) 0xf0128340u)	/* DPLL Calculated Number Of TRIGGER/STATE Increments To ACTION_16 */
#define GTM_DPLL_NA17	(*( GTM_DPLL_NA0_type *) 0xf0128344u)	/* DPLL Calculated Number Of TRIGGER/STATE Increments To ACTION_17 */
#define GTM_DPLL_NA18	(*( GTM_DPLL_NA0_type *) 0xf0128348u)	/* DPLL Calculated Number Of TRIGGER/STATE Increments To ACTION_18 */
#define GTM_DPLL_NA19	(*( GTM_DPLL_NA0_type *) 0xf012834cu)	/* DPLL Calculated Number Of TRIGGER/STATE Increments To ACTION_19 */
#define GTM_DPLL_NA2	(*( GTM_DPLL_NA0_type *) 0xf0128308u)	/* DPLL Calculated Number Of TRIGGER/STATE Increments To ACTION_2 */
#define GTM_DPLL_NA20	(*( GTM_DPLL_NA0_type *) 0xf0128350u)	/* DPLL Calculated Number Of TRIGGER/STATE Increments To ACTION_20 */
#define GTM_DPLL_NA21	(*( GTM_DPLL_NA0_type *) 0xf0128354u)	/* DPLL Calculated Number Of TRIGGER/STATE Increments To ACTION_21 */
#define GTM_DPLL_NA22	(*( GTM_DPLL_NA0_type *) 0xf0128358u)	/* DPLL Calculated Number Of TRIGGER/STATE Increments To ACTION_22 */
#define GTM_DPLL_NA23	(*( GTM_DPLL_NA0_type *) 0xf012835cu)	/* DPLL Calculated Number Of TRIGGER/STATE Increments To ACTION_23 */
#define GTM_DPLL_NA3	(*( GTM_DPLL_NA0_type *) 0xf012830cu)	/* DPLL Calculated Number Of TRIGGER/STATE Increments To ACTION_3 */
#define GTM_DPLL_NA4	(*( GTM_DPLL_NA0_type *) 0xf0128310u)	/* DPLL Calculated Number Of TRIGGER/STATE Increments To ACTION_4 */
#define GTM_DPLL_NA5	(*( GTM_DPLL_NA0_type *) 0xf0128314u)	/* DPLL Calculated Number Of TRIGGER/STATE Increments To ACTION_5 */
#define GTM_DPLL_NA6	(*( GTM_DPLL_NA0_type *) 0xf0128318u)	/* DPLL Calculated Number Of TRIGGER/STATE Increments To ACTION_6 */
#define GTM_DPLL_NA7	(*( GTM_DPLL_NA0_type *) 0xf012831cu)	/* DPLL Calculated Number Of TRIGGER/STATE Increments To ACTION_7 */
#define GTM_DPLL_NA8	(*( GTM_DPLL_NA0_type *) 0xf0128320u)	/* DPLL Calculated Number Of TRIGGER/STATE Increments To ACTION_8 */
#define GTM_DPLL_NA9	(*( GTM_DPLL_NA0_type *) 0xf0128324u)	/* DPLL Calculated Number Of TRIGGER/STATE Increments To ACTION_9 */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 NMB_S          : 20;	/* Number of pulses for STATE */
		unsigned __sfrbit32 Reserved       : 4;	/* Reserved */
		/* const */ unsigned __sfrbit32 Reserved_3     : 8;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GTM_DPLL_NMB_S_type;
#define GTM_DPLL_NMB_S	(*( GTM_DPLL_NMB_S_type *) 0xf01285fcu)	/* DPLL Number of Pulses of Current Increment in Emergency Mode */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 NMB_S_TAR      : 20;	/* Target Number of pulses for STATE */
		unsigned __sfrbit32 Reserved       : 4;	/* Reserved */
		/* const */ unsigned __sfrbit32 Reserved_3     : 8;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GTM_DPLL_NMB_S_TAR_type;
#define GTM_DPLL_NMB_S_TAR	(*( GTM_DPLL_NMB_S_TAR_type *) 0xf0128450u)	/* DPLL Target Number of Pulses to be sent in emergency mode Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 NMB_S_TAR_OLD  : 20;	/* Target Number of pulses for STATE */
		unsigned __sfrbit32 Reserved       : 4;	/* Reserved */
		/* const */ unsigned __sfrbit32 Reserved_3     : 8;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GTM_DPLL_NMB_S_TAR_OLD_type;
#define GTM_DPLL_NMB_S_TAR_OLD	(*( GTM_DPLL_NMB_S_TAR_OLD_type *) 0xf0128454u)	/* DPLL Target Number of Pulses to be sent in emergency mode Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 NMB_T          : 16;	/* Number of pulses for TRIGGER */
		unsigned __sfrbit32 Reserved       : 8;	/* Reserved */
		/* const */ unsigned __sfrbit32 Reserved_3     : 8;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GTM_DPLL_NMB_T_type;
#define GTM_DPLL_NMB_T	(*( GTM_DPLL_NMB_T_type *) 0xf01285f8u)	/* DPLL Number of Pulses of Current Increment in Normal Mode */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 NMB_T_TAR      : 16;	/* Target Number of pulses for TRIGGER */
		unsigned __sfrbit32 Reserved       : 8;	/* Reserved */
		/* const */ unsigned __sfrbit32 Reserved_3     : 8;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GTM_DPLL_NMB_T_TAR_type;
#define GTM_DPLL_NMB_T_TAR	(*( GTM_DPLL_NMB_T_TAR_type *) 0xf0128448u)	/* DPLL Target Number of Pulses to be sent in normal mode Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 NMB_T_TAR_OLD  : 16;	/* Target Number of pulses for TRIGGER */
		unsigned __sfrbit32 Reserved       : 8;	/* Reserved */
		/* const */ unsigned __sfrbit32 Reserved_3     : 8;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GTM_DPLL_NMB_T_TAR_OLD_type;
#define GTM_DPLL_NMB_T_TAR_OLD	(*( GTM_DPLL_NMB_T_TAR_OLD_type *) 0xf012844cu)	/* DPLL Target Number of Pulses to be sent in normal mode Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 NTI_CNT        : 10;	/* Number of TRIGGERs to interrupt */
		/* const */ unsigned __sfrbit32 Reserved       : 22;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GTM_DPLL_NTI_CNT_type;
#define GTM_DPLL_NTI_CNT	(*( GTM_DPLL_NTI_CNT_type *) 0xf012803cu)	/* DPLL Number of Active TRIGGER Events to Interrupt */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 NUSE           : 6;	/* Number of recent STATE events used for SUB_INCx calculations modulo 2*(SNUmax+1) */
		unsigned __sfrbit32 FSS            : 1;	/* this value is to be set, when NUSE is set to FULL_SCALE */
		unsigned __sfrbit32 SYN_S          : 6;	/* Number of real and virtual events to be considered for the current increment */
		unsigned __sfrbit32 SYN_S_OLD      : 6;	/* Number of real and virtual events to be considered for the last increment */
		unsigned __sfrbit32 VSN            : 6;	/* Virtual STATE number */
		/* const */ unsigned __sfrbit32 Reserved       : 4;	/* Reserved */
		unsigned __sfrbit32 WNUS           : 1;	/* Write control bit for NUSE; read as zero */
		unsigned __sfrbit32 WSYN           : 1;	/* Write control bit for SYN_S and SYN_S_OLD; read as zero */
		unsigned __sfrbit32 WVSN           : 1;	/* Write control bit for VSN; read as zero */
	} B;
	int I;
	unsigned int U;

} GTM_DPLL_NUSC_type;
#define GTM_DPLL_NUSC	(*( GTM_DPLL_NUSC_type *) 0xf0128038u)	/* DPLL Number of Recent STATE Events Used for Calculations */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 NUTE           : 10;	/* Number of recent TRIGGER events used for SUB_INC1 and action calculations modulo 2*(TNUmax+1) */
		unsigned __sfrbit32 FST            : 1;	/* this value is to be set, when NUTE is set to FULL_SCALE */
		/* const */ unsigned __sfrbit32 Reserved       : 2;	/* Reserved */
		unsigned __sfrbit32 SYN_T          : 3;	/* Number of real and virtual events to be considered for the current increment */
		unsigned __sfrbit32 SYN_T_OLD      : 3;	/* Number of real and virtual events to be considered for the last increment */
		unsigned __sfrbit32 VTN            : 6;	/* Virtual TRIGGER number */
		/* const */ unsigned __sfrbit32 Reserved_7     : 4;	/* Reserved */
		unsigned __sfrbit32 WNUT           : 1;	/* Write control bit for NUTE and FST */
		unsigned __sfrbit32 WSYN           : 1;	/* Write control bit for SYN_T and SYN_T_OLD */
		unsigned __sfrbit32 WVTN           : 1;	/* Write control bit for VTN */
	} B;
	int I;
	unsigned int U;

} GTM_DPLL_NUTC_type;
#define GTM_DPLL_NUTC	(*( GTM_DPLL_NUTC_type *) 0xf0128034u)	/* DPLL Number of Recent TRIGGER Events Used for Calculations */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned __sfrbit32 SWON_S         : 1;	/* Switch of new STATE */
		/* const */ unsigned __sfrbit32 SWON_T         : 1;	/* Switch of new TRIGGER */
		/* const */ unsigned __sfrbit32 Reserved       : 6;	/* Reserved */
		unsigned __sfrbit32 OSS            : 2;	/* Offset size of RAM region 2 */
		/* const */ unsigned __sfrbit32 Reserved_5     : 22;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GTM_DPLL_OSW_type;
#define GTM_DPLL_OSW	(*( GTM_DPLL_OSW_type *) 0xf012801cu)	/* DPLL Offset And Switch Old/New Address Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 DB             : 14;	/* Fractional part of relation between TRIGGER or STATE increments */
		unsigned __sfrbit32 DW             : 10;	/* Integer part of relation between TRIGGER or STATE increments */
		/* const */ unsigned __sfrbit32 Reserved       : 8;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GTM_DPLL_PDT_T0_type;
#define GTM_DPLL_PDT_T0	(*( GTM_DPLL_PDT_T0_type *) 0xf0128500u)	/* DPLL Projected TRIGGER Increment Sum Relat0ons for Action_i */
#define GTM_DPLL_PDT_T1	(*( GTM_DPLL_PDT_T0_type *) 0xf0128504u)	/* DPLL Projected TRIGGER Increment Sum Relat1ons for Action_i */
#define GTM_DPLL_PDT_T10	(*( GTM_DPLL_PDT_T0_type *) 0xf0128528u)	/* DPLL Projected TRIGGER Increment Sum Relat10ons for Action_i */
#define GTM_DPLL_PDT_T11	(*( GTM_DPLL_PDT_T0_type *) 0xf012852cu)	/* DPLL Projected TRIGGER Increment Sum Relat11ons for Action_i */
#define GTM_DPLL_PDT_T12	(*( GTM_DPLL_PDT_T0_type *) 0xf0128530u)	/* DPLL Projected TRIGGER Increment Sum Relat12ons for Action_i */
#define GTM_DPLL_PDT_T13	(*( GTM_DPLL_PDT_T0_type *) 0xf0128534u)	/* DPLL Projected TRIGGER Increment Sum Relat13ons for Action_i */
#define GTM_DPLL_PDT_T14	(*( GTM_DPLL_PDT_T0_type *) 0xf0128538u)	/* DPLL Projected TRIGGER Increment Sum Relat14ons for Action_i */
#define GTM_DPLL_PDT_T15	(*( GTM_DPLL_PDT_T0_type *) 0xf012853cu)	/* DPLL Projected TRIGGER Increment Sum Relat15ons for Action_i */
#define GTM_DPLL_PDT_T16	(*( GTM_DPLL_PDT_T0_type *) 0xf0128540u)	/* DPLL Projected TRIGGER Increment Sum Relat16ons for Action_i */
#define GTM_DPLL_PDT_T17	(*( GTM_DPLL_PDT_T0_type *) 0xf0128544u)	/* DPLL Projected TRIGGER Increment Sum Relat17ons for Action_i */
#define GTM_DPLL_PDT_T18	(*( GTM_DPLL_PDT_T0_type *) 0xf0128548u)	/* DPLL Projected TRIGGER Increment Sum Relat18ons for Action_i */
#define GTM_DPLL_PDT_T19	(*( GTM_DPLL_PDT_T0_type *) 0xf012854cu)	/* DPLL Projected TRIGGER Increment Sum Relat19ons for Action_i */
#define GTM_DPLL_PDT_T2	(*( GTM_DPLL_PDT_T0_type *) 0xf0128508u)	/* DPLL Projected TRIGGER Increment Sum Relat2ons for Action_i */
#define GTM_DPLL_PDT_T20	(*( GTM_DPLL_PDT_T0_type *) 0xf0128550u)	/* DPLL Projected TRIGGER Increment Sum Relat20ons for Action_i */
#define GTM_DPLL_PDT_T21	(*( GTM_DPLL_PDT_T0_type *) 0xf0128554u)	/* DPLL Projected TRIGGER Increment Sum Relat21ons for Action_i */
#define GTM_DPLL_PDT_T22	(*( GTM_DPLL_PDT_T0_type *) 0xf0128558u)	/* DPLL Projected TRIGGER Increment Sum Relat22ons for Action_i */
#define GTM_DPLL_PDT_T23	(*( GTM_DPLL_PDT_T0_type *) 0xf012855cu)	/* DPLL Projected TRIGGER Increment Sum Relat23ons for Action_i */
#define GTM_DPLL_PDT_T3	(*( GTM_DPLL_PDT_T0_type *) 0xf012850cu)	/* DPLL Projected TRIGGER Increment Sum Relat3ons for Action_i */
#define GTM_DPLL_PDT_T4	(*( GTM_DPLL_PDT_T0_type *) 0xf0128510u)	/* DPLL Projected TRIGGER Increment Sum Relat4ons for Action_i */
#define GTM_DPLL_PDT_T5	(*( GTM_DPLL_PDT_T0_type *) 0xf0128514u)	/* DPLL Projected TRIGGER Increment Sum Relat5ons for Action_i */
#define GTM_DPLL_PDT_T6	(*( GTM_DPLL_PDT_T0_type *) 0xf0128518u)	/* DPLL Projected TRIGGER Increment Sum Relat6ons for Action_i */
#define GTM_DPLL_PDT_T7	(*( GTM_DPLL_PDT_T0_type *) 0xf012851cu)	/* DPLL Projected TRIGGER Increment Sum Relat7ons for Action_i */
#define GTM_DPLL_PDT_T8	(*( GTM_DPLL_PDT_T0_type *) 0xf0128520u)	/* DPLL Projected TRIGGER Increment Sum Relat8ons for Action_i */
#define GTM_DPLL_PDT_T9	(*( GTM_DPLL_PDT_T0_type *) 0xf0128524u)	/* DPLL Projected TRIGGER Increment Sum Relat9ons for Action_i */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 PSA            : 24;	/* Position information of a desired action (i=0?23) */
		/* const */ unsigned __sfrbit32 Reserved       : 8;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GTM_DPLL_PSA0_type;
#define GTM_DPLL_PSA0	(*( GTM_DPLL_PSA0_type *) 0xf0128200u)	/* DPLL ACTION_0 Position/Value Action Request Register */
#define GTM_DPLL_PSA1	(*( GTM_DPLL_PSA0_type *) 0xf0128204u)	/* DPLL ACTION_1 Position/Value Action Request Register */
#define GTM_DPLL_PSA10	(*( GTM_DPLL_PSA0_type *) 0xf0128228u)	/* DPLL ACTION_10 Position/Value Action Request Register */
#define GTM_DPLL_PSA11	(*( GTM_DPLL_PSA0_type *) 0xf012822cu)	/* DPLL ACTION_11 Position/Value Action Request Register */
#define GTM_DPLL_PSA12	(*( GTM_DPLL_PSA0_type *) 0xf0128230u)	/* DPLL ACTION_12 Position/Value Action Request Register */
#define GTM_DPLL_PSA13	(*( GTM_DPLL_PSA0_type *) 0xf0128234u)	/* DPLL ACTION_13 Position/Value Action Request Register */
#define GTM_DPLL_PSA14	(*( GTM_DPLL_PSA0_type *) 0xf0128238u)	/* DPLL ACTION_14 Position/Value Action Request Register */
#define GTM_DPLL_PSA15	(*( GTM_DPLL_PSA0_type *) 0xf012823cu)	/* DPLL ACTION_15 Position/Value Action Request Register */
#define GTM_DPLL_PSA16	(*( GTM_DPLL_PSA0_type *) 0xf0128240u)	/* DPLL ACTION_16 Position/Value Action Request Register */
#define GTM_DPLL_PSA17	(*( GTM_DPLL_PSA0_type *) 0xf0128244u)	/* DPLL ACTION_17 Position/Value Action Request Register */
#define GTM_DPLL_PSA18	(*( GTM_DPLL_PSA0_type *) 0xf0128248u)	/* DPLL ACTION_18 Position/Value Action Request Register */
#define GTM_DPLL_PSA19	(*( GTM_DPLL_PSA0_type *) 0xf012824cu)	/* DPLL ACTION_19 Position/Value Action Request Register */
#define GTM_DPLL_PSA2	(*( GTM_DPLL_PSA0_type *) 0xf0128208u)	/* DPLL ACTION_2 Position/Value Action Request Register */
#define GTM_DPLL_PSA20	(*( GTM_DPLL_PSA0_type *) 0xf0128250u)	/* DPLL ACTION_20 Position/Value Action Request Register */
#define GTM_DPLL_PSA21	(*( GTM_DPLL_PSA0_type *) 0xf0128254u)	/* DPLL ACTION_21 Position/Value Action Request Register */
#define GTM_DPLL_PSA22	(*( GTM_DPLL_PSA0_type *) 0xf0128258u)	/* DPLL ACTION_22 Position/Value Action Request Register */
#define GTM_DPLL_PSA23	(*( GTM_DPLL_PSA0_type *) 0xf012825cu)	/* DPLL ACTION_23 Position/Value Action Request Register */
#define GTM_DPLL_PSA3	(*( GTM_DPLL_PSA0_type *) 0xf012820cu)	/* DPLL ACTION_3 Position/Value Action Request Register */
#define GTM_DPLL_PSA4	(*( GTM_DPLL_PSA0_type *) 0xf0128210u)	/* DPLL ACTION_4 Position/Value Action Request Register */
#define GTM_DPLL_PSA5	(*( GTM_DPLL_PSA0_type *) 0xf0128214u)	/* DPLL ACTION_5 Position/Value Action Request Register */
#define GTM_DPLL_PSA6	(*( GTM_DPLL_PSA0_type *) 0xf0128218u)	/* DPLL ACTION_6 Position/Value Action Request Register */
#define GTM_DPLL_PSA7	(*( GTM_DPLL_PSA0_type *) 0xf012821cu)	/* DPLL ACTION_7 Position/Value Action Request Register */
#define GTM_DPLL_PSA8	(*( GTM_DPLL_PSA0_type *) 0xf0128220u)	/* DPLL ACTION_8 Position/Value Action Request Register */
#define GTM_DPLL_PSA9	(*( GTM_DPLL_PSA0_type *) 0xf0128224u)	/* DPLL ACTION_9 Position/Value Action Request Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 PSAC           : 24;	/* calculated position value for the start of ACTION_i in normal or emergency mode according to equations DPLL-17 or DPLL-20 respectively */
		/* const */ unsigned __sfrbit32 Reserved       : 8;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GTM_DPLL_PSAC0_type;
#define GTM_DPLL_PSAC0	(*( GTM_DPLL_PSAC0_type *) 0xf0128e80u)	/* DPLL Calculated Pos0tion Value Register */
#define GTM_DPLL_PSAC1	(*( GTM_DPLL_PSAC0_type *) 0xf0128e84u)	/* DPLL Calculated Pos1tion Value Register */
#define GTM_DPLL_PSAC10	(*( GTM_DPLL_PSAC0_type *) 0xf0128ea8u)	/* DPLL Calculated Pos10tion Value Register */
#define GTM_DPLL_PSAC11	(*( GTM_DPLL_PSAC0_type *) 0xf0128eacu)	/* DPLL Calculated Pos11tion Value Register */
#define GTM_DPLL_PSAC12	(*( GTM_DPLL_PSAC0_type *) 0xf0128eb0u)	/* DPLL Calculated Pos12tion Value Register */
#define GTM_DPLL_PSAC13	(*( GTM_DPLL_PSAC0_type *) 0xf0128eb4u)	/* DPLL Calculated Pos13tion Value Register */
#define GTM_DPLL_PSAC14	(*( GTM_DPLL_PSAC0_type *) 0xf0128eb8u)	/* DPLL Calculated Pos14tion Value Register */
#define GTM_DPLL_PSAC15	(*( GTM_DPLL_PSAC0_type *) 0xf0128ebcu)	/* DPLL Calculated Pos15tion Value Register */
#define GTM_DPLL_PSAC16	(*( GTM_DPLL_PSAC0_type *) 0xf0128ec0u)	/* DPLL Calculated Pos16tion Value Register */
#define GTM_DPLL_PSAC17	(*( GTM_DPLL_PSAC0_type *) 0xf0128ec4u)	/* DPLL Calculated Pos17tion Value Register */
#define GTM_DPLL_PSAC18	(*( GTM_DPLL_PSAC0_type *) 0xf0128ec8u)	/* DPLL Calculated Pos18tion Value Register */
#define GTM_DPLL_PSAC19	(*( GTM_DPLL_PSAC0_type *) 0xf0128eccu)	/* DPLL Calculated Pos19tion Value Register */
#define GTM_DPLL_PSAC2	(*( GTM_DPLL_PSAC0_type *) 0xf0128e88u)	/* DPLL Calculated Pos2tion Value Register */
#define GTM_DPLL_PSAC20	(*( GTM_DPLL_PSAC0_type *) 0xf0128ed0u)	/* DPLL Calculated Pos20tion Value Register */
#define GTM_DPLL_PSAC21	(*( GTM_DPLL_PSAC0_type *) 0xf0128ed4u)	/* DPLL Calculated Pos21tion Value Register */
#define GTM_DPLL_PSAC22	(*( GTM_DPLL_PSAC0_type *) 0xf0128ed8u)	/* DPLL Calculated Pos22tion Value Register */
#define GTM_DPLL_PSAC23	(*( GTM_DPLL_PSAC0_type *) 0xf0128edcu)	/* DPLL Calculated Pos23tion Value Register */
#define GTM_DPLL_PSAC3	(*( GTM_DPLL_PSAC0_type *) 0xf0128e8cu)	/* DPLL Calculated Pos3tion Value Register */
#define GTM_DPLL_PSAC4	(*( GTM_DPLL_PSAC0_type *) 0xf0128e90u)	/* DPLL Calculated Pos4tion Value Register */
#define GTM_DPLL_PSAC5	(*( GTM_DPLL_PSAC0_type *) 0xf0128e94u)	/* DPLL Calculated Pos5tion Value Register */
#define GTM_DPLL_PSAC6	(*( GTM_DPLL_PSAC0_type *) 0xf0128e98u)	/* DPLL Calculated Pos6tion Value Register */
#define GTM_DPLL_PSAC7	(*( GTM_DPLL_PSAC0_type *) 0xf0128e9cu)	/* DPLL Calculated Pos7tion Value Register */
#define GTM_DPLL_PSAC8	(*( GTM_DPLL_PSAC0_type *) 0xf0128ea0u)	/* DPLL Calculated Pos8tion Value Register */
#define GTM_DPLL_PSAC9	(*( GTM_DPLL_PSAC0_type *) 0xf0128ea4u)	/* DPLL Calculated Pos9tion Value Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 PSSC           : 24;	/* Calculated position stamp for the last STATE input */
		/* const */ unsigned __sfrbit32 Reserved       : 8;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GTM_DPLL_PSSC_type;
#define GTM_DPLL_PSSC	(*( GTM_DPLL_PSSC_type *) 0xf01285e4u)	/* DPLL Accurate Calculated Position Stamp of Last STATE Input */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 PSSM           : 24;	/* Position stamp of STATE, measured */
		/* const */ unsigned __sfrbit32 Reserved       : 8;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GTM_DPLL_PSSM_0_type;
#define GTM_DPLL_PSSM_0	(*( GTM_DPLL_PSSM_0_type *) 0xf01285f0u)	/* DPLL Measured Position Stamp of Last STATE Input */
#define GTM_DPLL_PSSM_1	(*( GTM_DPLL_PSSM_0_type *) 0xf01285f4u)	/* DPLL Measured Position Stamp of Last STATE Input */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 PSSM_OLD       : 24;	/* Last but one position stamp of STATE, measured */
		/* const */ unsigned __sfrbit32 Reserved       : 8;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GTM_DPLL_PSSM_OLD_0_type;
#define GTM_DPLL_PSSM_OLD_0	(*( GTM_DPLL_PSSM_OLD_0_type *) 0xf01285f4u)	/* DPLL Measured Position Stamp of Last But One STATE Input */
#define GTM_DPLL_PSSM_OLD_1	(*( GTM_DPLL_PSSM_OLD_0_type *) 0xf01285f0u)	/* DPLL Measured Position Stamp of Last But One STATE Input */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 PSTC           : 24;	/* Calculated position stamp of last TRIGGER input */
		/* const */ unsigned __sfrbit32 Reserved       : 8;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GTM_DPLL_PSTC_type;
#define GTM_DPLL_PSTC	(*( GTM_DPLL_PSTC_type *) 0xf01285e0u)	/* DPLL Actual Calculated Position Stamp of Last TRIGGER Input */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 PSTM           : 24;	/* Position stamp of TRIGGER, measured */
		/* const */ unsigned __sfrbit32 Reserved       : 8;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GTM_DPLL_PSTM_0_type;
#define GTM_DPLL_PSTM_0	(*( GTM_DPLL_PSTM_0_type *) 0xf01285e8u)	/* DPLL Measured Position Stamp of Last TRIGGER Input */
#define GTM_DPLL_PSTM_1	(*( GTM_DPLL_PSTM_0_type *) 0xf01285ecu)	/* DPLL Measured Position Stamp of Last TRIGGER Input */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 PSTM_OLD       : 24;	/* Last but one position stamp of TRIGGER, measured */
		/* const */ unsigned __sfrbit32 Reserved       : 8;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GTM_DPLL_PSTM_OLD_0_type;
#define GTM_DPLL_PSTM_OLD_0	(*( GTM_DPLL_PSTM_OLD_0_type *) 0xf01285ecu)	/* DPLL Measured Position Stamp of Last But One TRIGGER Input */
#define GTM_DPLL_PSTM_OLD_1	(*( GTM_DPLL_PSTM_OLD_0_type *) 0xf01285e8u)	/* DPLL Measured Position Stamp of Last But One TRIGGER Input */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 PVT            : 24;	/* Plausibility value of next valid TRIGGER slope */
		/* const */ unsigned __sfrbit32 Reserved       : 8;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GTM_DPLL_PVT_type;
#define GTM_DPLL_PVT	(*( GTM_DPLL_PVT_type *) 0xf01285d0u)	/* DPLL Plausibility Value of Next Active TRIGGER Slope */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned __sfrbit32 INIT_1A        : 1;	/* RAM region 1A initialization in progress */
		/* const */ unsigned __sfrbit32 INIT_1B        : 1;	/* RAM region 1B initialization in progress */
		/* const */ unsigned __sfrbit32 INIT_2         : 1;	/* RAM region 2 initialization in progress */
		/* const */ unsigned __sfrbit32 Reserved       : 1;	/* Reserved */
		unsigned __sfrbit32 INIT_RAM       : 1;	/* RAM regions 1A, 1B and 2 are to be initialized */
		/* const */ unsigned __sfrbit32 Reserved_6     : 27;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GTM_DPLL_RAM_INI_type;
#define GTM_DPLL_RAM_INI	(*( GTM_DPLL_RAM_INI_type *) 0xf01281fcu)	/* DPLL RAM Initatlisation Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 RCDT_SX        : 24;	/* Reciprocal value of expected increment duration *2 while only the lower 24 bits are used */
		/* const */ unsigned __sfrbit32 Reserved       : 8;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GTM_DPLL_RCDT_SX_type;
#define GTM_DPLL_RCDT_SX	(*( GTM_DPLL_RCDT_SX_type *) 0xf0128464u)	/* DPLL Reciprocal Value of Expected Increment Duration STATE */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 RCDT_SX_NOM    : 24;	/* Reciprocal value of nominal increment duration *2 while only the lower 24 bits are used */
		/* const */ unsigned __sfrbit32 Reserved       : 8;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GTM_DPLL_RCDT_SX_NOM_type;
#define GTM_DPLL_RCDT_SX_NOM	(*( GTM_DPLL_RCDT_SX_NOM_type *) 0xf012846cu)	/* DPLL Reciprocal Value of the Expected Nominal Increment Duration STATE */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 RCDT_TX        : 24;	/* Reciprocal value of expected increment duration *2 while only the lower 24 bits are used */
		/* const */ unsigned __sfrbit32 Reserved       : 8;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GTM_DPLL_RCDT_TX_type;
#define GTM_DPLL_RCDT_TX	(*( GTM_DPLL_RCDT_TX_type *) 0xf0128460u)	/* DPLL Reciprocal Value of Expected Increment Duration TRIGGER */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 RCDT_TX_NOM    : 24;	/* Reciprocal value of nominal increment duration *2 while only the lower 24 bits are used */
		/* const */ unsigned __sfrbit32 Reserved       : 8;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GTM_DPLL_RCDT_TX_NOM_type;
#define GTM_DPLL_RCDT_TX_NOM	(*( GTM_DPLL_RCDT_TX_NOM_type *) 0xf0128468u)	/* DPLL Reciprocal Value of the Expected Nominal Increment Duration TRIGGER */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 RDT_S          : 24;	/* Reciprocal difference time of TRIGGER */
		/* const */ unsigned __sfrbit32 Reserved       : 8;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GTM_DPLL_RDT_S0_type;
#define GTM_DPLL_RDT_S0	(*( GTM_DPLL_RDT_S0_type *) 0xf0128600u)	/* DPLL Nominal STATE 0 Reciprocal Values in FULL_SCALE */
#define GTM_DPLL_RDT_S1	(*( GTM_DPLL_RDT_S0_type *) 0xf0128604u)	/* DPLL Nominal STATE 1 Reciprocal Values in FULL_SCALE */
#define GTM_DPLL_RDT_S10	(*( GTM_DPLL_RDT_S0_type *) 0xf0128628u)	/* DPLL Nominal STATE 10 Reciprocal Values in FULL_SCALE */
#define GTM_DPLL_RDT_S11	(*( GTM_DPLL_RDT_S0_type *) 0xf012862cu)	/* DPLL Nominal STATE 11 Reciprocal Values in FULL_SCALE */
#define GTM_DPLL_RDT_S12	(*( GTM_DPLL_RDT_S0_type *) 0xf0128630u)	/* DPLL Nominal STATE 12 Reciprocal Values in FULL_SCALE */
#define GTM_DPLL_RDT_S13	(*( GTM_DPLL_RDT_S0_type *) 0xf0128634u)	/* DPLL Nominal STATE 13 Reciprocal Values in FULL_SCALE */
#define GTM_DPLL_RDT_S14	(*( GTM_DPLL_RDT_S0_type *) 0xf0128638u)	/* DPLL Nominal STATE 14 Reciprocal Values in FULL_SCALE */
#define GTM_DPLL_RDT_S15	(*( GTM_DPLL_RDT_S0_type *) 0xf012863cu)	/* DPLL Nominal STATE 15 Reciprocal Values in FULL_SCALE */
#define GTM_DPLL_RDT_S16	(*( GTM_DPLL_RDT_S0_type *) 0xf0128640u)	/* DPLL Nominal STATE 16 Reciprocal Values in FULL_SCALE */
#define GTM_DPLL_RDT_S17	(*( GTM_DPLL_RDT_S0_type *) 0xf0128644u)	/* DPLL Nominal STATE 17 Reciprocal Values in FULL_SCALE */
#define GTM_DPLL_RDT_S18	(*( GTM_DPLL_RDT_S0_type *) 0xf0128648u)	/* DPLL Nominal STATE 18 Reciprocal Values in FULL_SCALE */
#define GTM_DPLL_RDT_S19	(*( GTM_DPLL_RDT_S0_type *) 0xf012864cu)	/* DPLL Nominal STATE 19 Reciprocal Values in FULL_SCALE */
#define GTM_DPLL_RDT_S2	(*( GTM_DPLL_RDT_S0_type *) 0xf0128608u)	/* DPLL Nominal STATE 2 Reciprocal Values in FULL_SCALE */
#define GTM_DPLL_RDT_S20	(*( GTM_DPLL_RDT_S0_type *) 0xf0128650u)	/* DPLL Nominal STATE 20 Reciprocal Values in FULL_SCALE */
#define GTM_DPLL_RDT_S21	(*( GTM_DPLL_RDT_S0_type *) 0xf0128654u)	/* DPLL Nominal STATE 21 Reciprocal Values in FULL_SCALE */
#define GTM_DPLL_RDT_S22	(*( GTM_DPLL_RDT_S0_type *) 0xf0128658u)	/* DPLL Nominal STATE 22 Reciprocal Values in FULL_SCALE */
#define GTM_DPLL_RDT_S23	(*( GTM_DPLL_RDT_S0_type *) 0xf012865cu)	/* DPLL Nominal STATE 23 Reciprocal Values in FULL_SCALE */
#define GTM_DPLL_RDT_S24	(*( GTM_DPLL_RDT_S0_type *) 0xf0128660u)	/* DPLL Nominal STATE 24 Reciprocal Values in FULL_SCALE */
#define GTM_DPLL_RDT_S25	(*( GTM_DPLL_RDT_S0_type *) 0xf0128664u)	/* DPLL Nominal STATE 25 Reciprocal Values in FULL_SCALE */
#define GTM_DPLL_RDT_S26	(*( GTM_DPLL_RDT_S0_type *) 0xf0128668u)	/* DPLL Nominal STATE 26 Reciprocal Values in FULL_SCALE */
#define GTM_DPLL_RDT_S27	(*( GTM_DPLL_RDT_S0_type *) 0xf012866cu)	/* DPLL Nominal STATE 27 Reciprocal Values in FULL_SCALE */
#define GTM_DPLL_RDT_S28	(*( GTM_DPLL_RDT_S0_type *) 0xf0128670u)	/* DPLL Nominal STATE 28 Reciprocal Values in FULL_SCALE */
#define GTM_DPLL_RDT_S29	(*( GTM_DPLL_RDT_S0_type *) 0xf0128674u)	/* DPLL Nominal STATE 29 Reciprocal Values in FULL_SCALE */
#define GTM_DPLL_RDT_S3	(*( GTM_DPLL_RDT_S0_type *) 0xf012860cu)	/* DPLL Nominal STATE 3 Reciprocal Values in FULL_SCALE */
#define GTM_DPLL_RDT_S30	(*( GTM_DPLL_RDT_S0_type *) 0xf0128678u)	/* DPLL Nominal STATE 30 Reciprocal Values in FULL_SCALE */
#define GTM_DPLL_RDT_S31	(*( GTM_DPLL_RDT_S0_type *) 0xf012867cu)	/* DPLL Nominal STATE 31 Reciprocal Values in FULL_SCALE */
#define GTM_DPLL_RDT_S32	(*( GTM_DPLL_RDT_S0_type *) 0xf0128680u)	/* DPLL Nominal STATE 32 Reciprocal Values in FULL_SCALE */
#define GTM_DPLL_RDT_S33	(*( GTM_DPLL_RDT_S0_type *) 0xf0128684u)	/* DPLL Nominal STATE 33 Reciprocal Values in FULL_SCALE */
#define GTM_DPLL_RDT_S34	(*( GTM_DPLL_RDT_S0_type *) 0xf0128688u)	/* DPLL Nominal STATE 34 Reciprocal Values in FULL_SCALE */
#define GTM_DPLL_RDT_S35	(*( GTM_DPLL_RDT_S0_type *) 0xf012868cu)	/* DPLL Nominal STATE 35 Reciprocal Values in FULL_SCALE */
#define GTM_DPLL_RDT_S36	(*( GTM_DPLL_RDT_S0_type *) 0xf0128690u)	/* DPLL Nominal STATE 36 Reciprocal Values in FULL_SCALE */
#define GTM_DPLL_RDT_S37	(*( GTM_DPLL_RDT_S0_type *) 0xf0128694u)	/* DPLL Nominal STATE 37 Reciprocal Values in FULL_SCALE */
#define GTM_DPLL_RDT_S38	(*( GTM_DPLL_RDT_S0_type *) 0xf0128698u)	/* DPLL Nominal STATE 38 Reciprocal Values in FULL_SCALE */
#define GTM_DPLL_RDT_S39	(*( GTM_DPLL_RDT_S0_type *) 0xf012869cu)	/* DPLL Nominal STATE 39 Reciprocal Values in FULL_SCALE */
#define GTM_DPLL_RDT_S4	(*( GTM_DPLL_RDT_S0_type *) 0xf0128610u)	/* DPLL Nominal STATE 4 Reciprocal Values in FULL_SCALE */
#define GTM_DPLL_RDT_S40	(*( GTM_DPLL_RDT_S0_type *) 0xf01286a0u)	/* DPLL Nominal STATE 40 Reciprocal Values in FULL_SCALE */
#define GTM_DPLL_RDT_S41	(*( GTM_DPLL_RDT_S0_type *) 0xf01286a4u)	/* DPLL Nominal STATE 41 Reciprocal Values in FULL_SCALE */
#define GTM_DPLL_RDT_S42	(*( GTM_DPLL_RDT_S0_type *) 0xf01286a8u)	/* DPLL Nominal STATE 42 Reciprocal Values in FULL_SCALE */
#define GTM_DPLL_RDT_S43	(*( GTM_DPLL_RDT_S0_type *) 0xf01286acu)	/* DPLL Nominal STATE 43 Reciprocal Values in FULL_SCALE */
#define GTM_DPLL_RDT_S44	(*( GTM_DPLL_RDT_S0_type *) 0xf01286b0u)	/* DPLL Nominal STATE 44 Reciprocal Values in FULL_SCALE */
#define GTM_DPLL_RDT_S45	(*( GTM_DPLL_RDT_S0_type *) 0xf01286b4u)	/* DPLL Nominal STATE 45 Reciprocal Values in FULL_SCALE */
#define GTM_DPLL_RDT_S46	(*( GTM_DPLL_RDT_S0_type *) 0xf01286b8u)	/* DPLL Nominal STATE 46 Reciprocal Values in FULL_SCALE */
#define GTM_DPLL_RDT_S47	(*( GTM_DPLL_RDT_S0_type *) 0xf01286bcu)	/* DPLL Nominal STATE 47 Reciprocal Values in FULL_SCALE */
#define GTM_DPLL_RDT_S48	(*( GTM_DPLL_RDT_S0_type *) 0xf01286c0u)	/* DPLL Nominal STATE 48 Reciprocal Values in FULL_SCALE */
#define GTM_DPLL_RDT_S49	(*( GTM_DPLL_RDT_S0_type *) 0xf01286c4u)	/* DPLL Nominal STATE 49 Reciprocal Values in FULL_SCALE */
#define GTM_DPLL_RDT_S5	(*( GTM_DPLL_RDT_S0_type *) 0xf0128614u)	/* DPLL Nominal STATE 5 Reciprocal Values in FULL_SCALE */
#define GTM_DPLL_RDT_S50	(*( GTM_DPLL_RDT_S0_type *) 0xf01286c8u)	/* DPLL Nominal STATE 50 Reciprocal Values in FULL_SCALE */
#define GTM_DPLL_RDT_S51	(*( GTM_DPLL_RDT_S0_type *) 0xf01286ccu)	/* DPLL Nominal STATE 51 Reciprocal Values in FULL_SCALE */
#define GTM_DPLL_RDT_S52	(*( GTM_DPLL_RDT_S0_type *) 0xf01286d0u)	/* DPLL Nominal STATE 52 Reciprocal Values in FULL_SCALE */
#define GTM_DPLL_RDT_S53	(*( GTM_DPLL_RDT_S0_type *) 0xf01286d4u)	/* DPLL Nominal STATE 53 Reciprocal Values in FULL_SCALE */
#define GTM_DPLL_RDT_S54	(*( GTM_DPLL_RDT_S0_type *) 0xf01286d8u)	/* DPLL Nominal STATE 54 Reciprocal Values in FULL_SCALE */
#define GTM_DPLL_RDT_S55	(*( GTM_DPLL_RDT_S0_type *) 0xf01286dcu)	/* DPLL Nominal STATE 55 Reciprocal Values in FULL_SCALE */
#define GTM_DPLL_RDT_S56	(*( GTM_DPLL_RDT_S0_type *) 0xf01286e0u)	/* DPLL Nominal STATE 56 Reciprocal Values in FULL_SCALE */
#define GTM_DPLL_RDT_S57	(*( GTM_DPLL_RDT_S0_type *) 0xf01286e4u)	/* DPLL Nominal STATE 57 Reciprocal Values in FULL_SCALE */
#define GTM_DPLL_RDT_S58	(*( GTM_DPLL_RDT_S0_type *) 0xf01286e8u)	/* DPLL Nominal STATE 58 Reciprocal Values in FULL_SCALE */
#define GTM_DPLL_RDT_S59	(*( GTM_DPLL_RDT_S0_type *) 0xf01286ecu)	/* DPLL Nominal STATE 59 Reciprocal Values in FULL_SCALE */
#define GTM_DPLL_RDT_S6	(*( GTM_DPLL_RDT_S0_type *) 0xf0128618u)	/* DPLL Nominal STATE 6 Reciprocal Values in FULL_SCALE */
#define GTM_DPLL_RDT_S60	(*( GTM_DPLL_RDT_S0_type *) 0xf01286f0u)	/* DPLL Nominal STATE 60 Reciprocal Values in FULL_SCALE */
#define GTM_DPLL_RDT_S61	(*( GTM_DPLL_RDT_S0_type *) 0xf01286f4u)	/* DPLL Nominal STATE 61 Reciprocal Values in FULL_SCALE */
#define GTM_DPLL_RDT_S62	(*( GTM_DPLL_RDT_S0_type *) 0xf01286f8u)	/* DPLL Nominal STATE 62 Reciprocal Values in FULL_SCALE */
#define GTM_DPLL_RDT_S63	(*( GTM_DPLL_RDT_S0_type *) 0xf01286fcu)	/* DPLL Nominal STATE 63 Reciprocal Values in FULL_SCALE */
#define GTM_DPLL_RDT_S7	(*( GTM_DPLL_RDT_S0_type *) 0xf012861cu)	/* DPLL Nominal STATE 7 Reciprocal Values in FULL_SCALE */
#define GTM_DPLL_RDT_S8	(*( GTM_DPLL_RDT_S0_type *) 0xf0128620u)	/* DPLL Nominal STATE 8 Reciprocal Values in FULL_SCALE */
#define GTM_DPLL_RDT_S9	(*( GTM_DPLL_RDT_S0_type *) 0xf0128624u)	/* DPLL Nominal STATE 9 Reciprocal Values in FULL_SCALE */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 RDT_S_ACT      : 24;	/* Reciprocal value of last STATE increment *2 */
		/* const */ unsigned __sfrbit32 Reserved       : 8;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GTM_DPLL_RDT_S_ACT_type;
#define GTM_DPLL_RDT_S_ACT	(*( GTM_DPLL_RDT_S_ACT_type *) 0xf0128474u)	/* DPLL Actual Reciprocal Value of STATE */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 RDT_T_ACT      : 24;	/* Reciprocal value of last TRIGGER increment *2 */
		/* const */ unsigned __sfrbit32 Reserved       : 8;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GTM_DPLL_RDT_T_ACT_type;
#define GTM_DPLL_RDT_T_ACT	(*( GTM_DPLL_RDT_T_ACT_type *) 0xf0128470u)	/* DPLL Actual Reciprocal Value of TRIGGER */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 SLR            : 8;	/* Value is to be multiplied with the last nominal STATE duration in order to get the range for the next STATE event without setting SOR in the DPLL_STATUS register */
		/* const */ unsigned __sfrbit32 Reserved       : 24;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GTM_DPLL_SLR_type;
#define GTM_DPLL_SLR	(*( GTM_DPLL_SLR_type *) 0xf01284a4u)	/* DPLL STATE Locking Range */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned __sfrbit32 Reserved       : 1;	/* Reserved */
		unsigned __sfrbit32 CSO            : 1;	/* Calculated STATE duration overflow */
		/* const */ unsigned __sfrbit32 Reserved_3     : 1;	/* Reserved */
		unsigned __sfrbit32 CTO            : 1;	/* Calculated TRIGGER duration overflow */
		unsigned __sfrbit32 CRO            : 1;	/* Calculated Reciprocal value overflow */
		/* const */ unsigned __sfrbit32 RCS            : 1;	/* RCS */
		unsigned __sfrbit32 RCT            : 1;	/* RCT */
		unsigned __sfrbit32 PSE            : 1;	/* Prediction space configuration error */
		/* const */ unsigned __sfrbit32 SOR            : 1;	/* STATE out of range */
		/* const */ unsigned __sfrbit32 MS             : 1;	/* Missing STATE detected according to TOV_S */
		/* const */ unsigned __sfrbit32 TOR            : 1;	/* TRIGGER out of range */
		unsigned __sfrbit32 MT             : 1;	/* Missing TRIGGER detected according to TOV */
		unsigned __sfrbit32 RAM2_ERR       : 1;	/* DPLL internal access to not configured RAM2 */
		/* const */ unsigned __sfrbit32 Reserved_14    : 2;	/* Reserved */
		unsigned __sfrbit32 LOW_RES        : 1;	/* Low resolution of TBU_TS0 is used for DPLL input */
		/* const */ unsigned __sfrbit32 CSVS           : 1;	/* Current signal value STATE */
		/* const */ unsigned __sfrbit32 CSVT           : 1;	/* Current signal value TRIGGER */
		/* const */ unsigned __sfrbit32 CAIP2          : 1;	/* Calculation of actions 12 to 23 in progress (2nd part) */
		/* const */ unsigned __sfrbit32 CAIP1          : 1;	/* Calculation of actions 0 to 11 in progress (1st part) */
		/* const */ unsigned __sfrbit32 ISN            : 1;	/* Number of STATE is not plausible */
		/* const */ unsigned __sfrbit32 ITN            : 1;	/* Increment number of TRIGGER is not plausible */
		/* const */ unsigned __sfrbit32 BWD2           : 1;	/* Backwards drive of SUB_INC2 */
		/* const */ unsigned __sfrbit32 BWD1           : 1;	/* Backwards drive of SUB_INC1 */
		/* const */ unsigned __sfrbit32 Reserved_24    : 1;	/* Reserved */
		/* const */ unsigned __sfrbit32 LOCK2          : 1;	/* DPLL Lock status concerning SUB_INC2 */
		/* const */ unsigned __sfrbit32 SYS            : 1;	/* Synchronization condition of STATE fixed */
		/* const */ unsigned __sfrbit32 SYT            : 1;	/* Synchronization condition of TRIGGER fixed */
		/* const */ unsigned __sfrbit32 FSD            : 1;	/* STATE detected */
		/* const */ unsigned __sfrbit32 FTD            : 1;	/* First TRIGGER detected */
		/* const */ unsigned __sfrbit32 LOCK1          : 1;	/* DPLL Lock status concerning SUB_INC1 */
		/* const */ unsigned __sfrbit32 ERR            : 1;	/* Error during configuration or operation resulting in unexpected values */
	} B;
	int I;
	unsigned int U;

} GTM_DPLL_STATUS_type;
#define GTM_DPLL_STATUS	(*( GTM_DPLL_STATUS_type *) 0xf01280fcu)	/* DPLL Status Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 TBU_TS0_S      : 24;	/* value of TBU_TS0 at the last STATE event */
		/* const */ unsigned __sfrbit32 Reserved       : 8;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GTM_DPLL_TBU_TS0_S_type;
#define GTM_DPLL_TBU_TS0_S	(*( GTM_DPLL_TBU_TS0_S_type *) 0xf01280c4u)	/* DPLL TBU_TS0 Value at last STATE Event */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 TBU_TS0_T      : 24;	/* value of TBU_TS0 at the last TRIGGER event */
		/* const */ unsigned __sfrbit32 Reserved       : 8;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GTM_DPLL_TBU_TS0_T_type;
#define GTM_DPLL_TBU_TS0_T	(*( GTM_DPLL_TBU_TS0_T_type *) 0xf01280c0u)	/* DPLL TBU_TS0 Value at last TRIGGER Event */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 THMA           : 16;	/* Maximal time between active and inactive TRIGGER slope (uint16) */
		/* const */ unsigned __sfrbit32 Reserved       : 16;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GTM_DPLL_THMA_type;
#define GTM_DPLL_THMA	(*( GTM_DPLL_THMA_type *) 0xf0128424u)	/* DPLL TRIGGER Hold Time Max Value */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 THMI           : 16;	/* Minimal time between active and inactive TRIGGER slope (uint16) */
		/* const */ unsigned __sfrbit32 Reserved       : 16;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GTM_DPLL_THMI_type;
#define GTM_DPLL_THMI	(*( GTM_DPLL_THMI_type *) 0xf0128420u)	/* DPLL TRIGGER hold time min value */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 THVAL          : 16;	/* Measured time from the last valid slope to the next inactive TRIGGER slope in time stamp clock counts: this does mean the clock selected for the TBU_CH0_BASE (uint16) */
		/* const */ unsigned __sfrbit32 Reserved       : 16;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GTM_DPLL_THVAL_type;
#define GTM_DPLL_THVAL	(*( GTM_DPLL_THVAL_type *) 0xf0128428u)	/* DPLL Measured Last Pulse Time from Valid to Invalid TRIGGER Slope */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 TLR            : 8;	/* Value is to be multiplied with the last nominal TRIGGER duration in order to get the range for the next TRIGGER event without setting TOR in the DPLL_STATUS register */
		/* const */ unsigned __sfrbit32 Reserved       : 24;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GTM_DPLL_TLR_type;
#define GTM_DPLL_TLR	(*( GTM_DPLL_TLR_type *) 0xf01284a0u)	/* DPLL TRIGGER locking range */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 DB             : 10;	/* Decision value (fractional part) for missing TRIGGER interrupt */
		unsigned __sfrbit32 DW             : 6;	/* Decision value (integer part) for missing TRIGGER interrupt */
		/* const */ unsigned __sfrbit32 Reserved       : 8;	/* Reserved */
		/* const */ unsigned __sfrbit32 Reserved_4     : 8;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GTM_DPLL_TOV_type;
#define GTM_DPLL_TOV	(*( GTM_DPLL_TOV_type *) 0xf0128430u)	/* DPLL Time Out Value of active TRIGGER Slope */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 DB             : 10;	/* Decision value (fractional part) for missing STATE interrupt */
		unsigned __sfrbit32 DW             : 6;	/* Decision value (integer part) for missing STATE interrupt */
		/* const */ unsigned __sfrbit32 Reserved       : 8;	/* Reserved */
		/* const */ unsigned __sfrbit32 Reserved_4     : 8;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GTM_DPLL_TOV_S_type;
#define GTM_DPLL_TOV_S	(*( GTM_DPLL_TOV_S_type *) 0xf0128434u)	/* DPLL Time Out Value of active STATE Slope */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 TSAC           : 24;	/* calculated time stamp for ACTION_i */
		/* const */ unsigned __sfrbit32 Reserved       : 8;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GTM_DPLL_TSAC0_type;
#define GTM_DPLL_TSAC0	(*( GTM_DPLL_TSAC0_type *) 0xf0128e00u)	/* DPLL Calculate T0me Stamp Register */
#define GTM_DPLL_TSAC1	(*( GTM_DPLL_TSAC0_type *) 0xf0128e04u)	/* DPLL Calculate T1me Stamp Register */
#define GTM_DPLL_TSAC10	(*( GTM_DPLL_TSAC0_type *) 0xf0128e28u)	/* DPLL Calculate T10me Stamp Register */
#define GTM_DPLL_TSAC11	(*( GTM_DPLL_TSAC0_type *) 0xf0128e2cu)	/* DPLL Calculate T11me Stamp Register */
#define GTM_DPLL_TSAC12	(*( GTM_DPLL_TSAC0_type *) 0xf0128e30u)	/* DPLL Calculate T12me Stamp Register */
#define GTM_DPLL_TSAC13	(*( GTM_DPLL_TSAC0_type *) 0xf0128e34u)	/* DPLL Calculate T13me Stamp Register */
#define GTM_DPLL_TSAC14	(*( GTM_DPLL_TSAC0_type *) 0xf0128e38u)	/* DPLL Calculate T14me Stamp Register */
#define GTM_DPLL_TSAC15	(*( GTM_DPLL_TSAC0_type *) 0xf0128e3cu)	/* DPLL Calculate T15me Stamp Register */
#define GTM_DPLL_TSAC16	(*( GTM_DPLL_TSAC0_type *) 0xf0128e40u)	/* DPLL Calculate T16me Stamp Register */
#define GTM_DPLL_TSAC17	(*( GTM_DPLL_TSAC0_type *) 0xf0128e44u)	/* DPLL Calculate T17me Stamp Register */
#define GTM_DPLL_TSAC18	(*( GTM_DPLL_TSAC0_type *) 0xf0128e48u)	/* DPLL Calculate T18me Stamp Register */
#define GTM_DPLL_TSAC19	(*( GTM_DPLL_TSAC0_type *) 0xf0128e4cu)	/* DPLL Calculate T19me Stamp Register */
#define GTM_DPLL_TSAC2	(*( GTM_DPLL_TSAC0_type *) 0xf0128e08u)	/* DPLL Calculate T2me Stamp Register */
#define GTM_DPLL_TSAC20	(*( GTM_DPLL_TSAC0_type *) 0xf0128e50u)	/* DPLL Calculate T20me Stamp Register */
#define GTM_DPLL_TSAC21	(*( GTM_DPLL_TSAC0_type *) 0xf0128e54u)	/* DPLL Calculate T21me Stamp Register */
#define GTM_DPLL_TSAC22	(*( GTM_DPLL_TSAC0_type *) 0xf0128e58u)	/* DPLL Calculate T22me Stamp Register */
#define GTM_DPLL_TSAC23	(*( GTM_DPLL_TSAC0_type *) 0xf0128e5cu)	/* DPLL Calculate T23me Stamp Register */
#define GTM_DPLL_TSAC3	(*( GTM_DPLL_TSAC0_type *) 0xf0128e0cu)	/* DPLL Calculate T3me Stamp Register */
#define GTM_DPLL_TSAC4	(*( GTM_DPLL_TSAC0_type *) 0xf0128e10u)	/* DPLL Calculate T4me Stamp Register */
#define GTM_DPLL_TSAC5	(*( GTM_DPLL_TSAC0_type *) 0xf0128e14u)	/* DPLL Calculate T5me Stamp Register */
#define GTM_DPLL_TSAC6	(*( GTM_DPLL_TSAC0_type *) 0xf0128e18u)	/* DPLL Calculate T6me Stamp Register */
#define GTM_DPLL_TSAC7	(*( GTM_DPLL_TSAC0_type *) 0xf0128e1cu)	/* DPLL Calculate T7me Stamp Register */
#define GTM_DPLL_TSAC8	(*( GTM_DPLL_TSAC0_type *) 0xf0128e20u)	/* DPLL Calculate T8me Stamp Register */
#define GTM_DPLL_TSAC9	(*( GTM_DPLL_TSAC0_type *) 0xf0128e24u)	/* DPLL Calculate T9me Stamp Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 TSF_S          : 24;	/* Time stamp field of STATE */
		/* const */ unsigned __sfrbit32 Reserved       : 8;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GTM_DPLL_TSF_S0_type;
#define GTM_DPLL_TSF_S0	(*( GTM_DPLL_TSF_S0_type *) 0xf0128700u)	/* DPLL Time Stamp Field of STATE 0 Events */
#define GTM_DPLL_TSF_S1	(*( GTM_DPLL_TSF_S0_type *) 0xf0128704u)	/* DPLL Time Stamp Field of STATE 1 Events */
#define GTM_DPLL_TSF_S10	(*( GTM_DPLL_TSF_S0_type *) 0xf0128728u)	/* DPLL Time Stamp Field of STATE 10 Events */
#define GTM_DPLL_TSF_S11	(*( GTM_DPLL_TSF_S0_type *) 0xf012872cu)	/* DPLL Time Stamp Field of STATE 11 Events */
#define GTM_DPLL_TSF_S12	(*( GTM_DPLL_TSF_S0_type *) 0xf0128730u)	/* DPLL Time Stamp Field of STATE 12 Events */
#define GTM_DPLL_TSF_S13	(*( GTM_DPLL_TSF_S0_type *) 0xf0128734u)	/* DPLL Time Stamp Field of STATE 13 Events */
#define GTM_DPLL_TSF_S14	(*( GTM_DPLL_TSF_S0_type *) 0xf0128738u)	/* DPLL Time Stamp Field of STATE 14 Events */
#define GTM_DPLL_TSF_S15	(*( GTM_DPLL_TSF_S0_type *) 0xf012873cu)	/* DPLL Time Stamp Field of STATE 15 Events */
#define GTM_DPLL_TSF_S16	(*( GTM_DPLL_TSF_S0_type *) 0xf0128740u)	/* DPLL Time Stamp Field of STATE 16 Events */
#define GTM_DPLL_TSF_S17	(*( GTM_DPLL_TSF_S0_type *) 0xf0128744u)	/* DPLL Time Stamp Field of STATE 17 Events */
#define GTM_DPLL_TSF_S18	(*( GTM_DPLL_TSF_S0_type *) 0xf0128748u)	/* DPLL Time Stamp Field of STATE 18 Events */
#define GTM_DPLL_TSF_S19	(*( GTM_DPLL_TSF_S0_type *) 0xf012874cu)	/* DPLL Time Stamp Field of STATE 19 Events */
#define GTM_DPLL_TSF_S2	(*( GTM_DPLL_TSF_S0_type *) 0xf0128708u)	/* DPLL Time Stamp Field of STATE 2 Events */
#define GTM_DPLL_TSF_S20	(*( GTM_DPLL_TSF_S0_type *) 0xf0128750u)	/* DPLL Time Stamp Field of STATE 20 Events */
#define GTM_DPLL_TSF_S21	(*( GTM_DPLL_TSF_S0_type *) 0xf0128754u)	/* DPLL Time Stamp Field of STATE 21 Events */
#define GTM_DPLL_TSF_S22	(*( GTM_DPLL_TSF_S0_type *) 0xf0128758u)	/* DPLL Time Stamp Field of STATE 22 Events */
#define GTM_DPLL_TSF_S23	(*( GTM_DPLL_TSF_S0_type *) 0xf012875cu)	/* DPLL Time Stamp Field of STATE 23 Events */
#define GTM_DPLL_TSF_S24	(*( GTM_DPLL_TSF_S0_type *) 0xf0128760u)	/* DPLL Time Stamp Field of STATE 24 Events */
#define GTM_DPLL_TSF_S25	(*( GTM_DPLL_TSF_S0_type *) 0xf0128764u)	/* DPLL Time Stamp Field of STATE 25 Events */
#define GTM_DPLL_TSF_S26	(*( GTM_DPLL_TSF_S0_type *) 0xf0128768u)	/* DPLL Time Stamp Field of STATE 26 Events */
#define GTM_DPLL_TSF_S27	(*( GTM_DPLL_TSF_S0_type *) 0xf012876cu)	/* DPLL Time Stamp Field of STATE 27 Events */
#define GTM_DPLL_TSF_S28	(*( GTM_DPLL_TSF_S0_type *) 0xf0128770u)	/* DPLL Time Stamp Field of STATE 28 Events */
#define GTM_DPLL_TSF_S29	(*( GTM_DPLL_TSF_S0_type *) 0xf0128774u)	/* DPLL Time Stamp Field of STATE 29 Events */
#define GTM_DPLL_TSF_S3	(*( GTM_DPLL_TSF_S0_type *) 0xf012870cu)	/* DPLL Time Stamp Field of STATE 3 Events */
#define GTM_DPLL_TSF_S30	(*( GTM_DPLL_TSF_S0_type *) 0xf0128778u)	/* DPLL Time Stamp Field of STATE 30 Events */
#define GTM_DPLL_TSF_S31	(*( GTM_DPLL_TSF_S0_type *) 0xf012877cu)	/* DPLL Time Stamp Field of STATE 31 Events */
#define GTM_DPLL_TSF_S32	(*( GTM_DPLL_TSF_S0_type *) 0xf0128780u)	/* DPLL Time Stamp Field of STATE 32 Events */
#define GTM_DPLL_TSF_S33	(*( GTM_DPLL_TSF_S0_type *) 0xf0128784u)	/* DPLL Time Stamp Field of STATE 33 Events */
#define GTM_DPLL_TSF_S34	(*( GTM_DPLL_TSF_S0_type *) 0xf0128788u)	/* DPLL Time Stamp Field of STATE 34 Events */
#define GTM_DPLL_TSF_S35	(*( GTM_DPLL_TSF_S0_type *) 0xf012878cu)	/* DPLL Time Stamp Field of STATE 35 Events */
#define GTM_DPLL_TSF_S36	(*( GTM_DPLL_TSF_S0_type *) 0xf0128790u)	/* DPLL Time Stamp Field of STATE 36 Events */
#define GTM_DPLL_TSF_S37	(*( GTM_DPLL_TSF_S0_type *) 0xf0128794u)	/* DPLL Time Stamp Field of STATE 37 Events */
#define GTM_DPLL_TSF_S38	(*( GTM_DPLL_TSF_S0_type *) 0xf0128798u)	/* DPLL Time Stamp Field of STATE 38 Events */
#define GTM_DPLL_TSF_S39	(*( GTM_DPLL_TSF_S0_type *) 0xf012879cu)	/* DPLL Time Stamp Field of STATE 39 Events */
#define GTM_DPLL_TSF_S4	(*( GTM_DPLL_TSF_S0_type *) 0xf0128710u)	/* DPLL Time Stamp Field of STATE 4 Events */
#define GTM_DPLL_TSF_S40	(*( GTM_DPLL_TSF_S0_type *) 0xf01287a0u)	/* DPLL Time Stamp Field of STATE 40 Events */
#define GTM_DPLL_TSF_S41	(*( GTM_DPLL_TSF_S0_type *) 0xf01287a4u)	/* DPLL Time Stamp Field of STATE 41 Events */
#define GTM_DPLL_TSF_S42	(*( GTM_DPLL_TSF_S0_type *) 0xf01287a8u)	/* DPLL Time Stamp Field of STATE 42 Events */
#define GTM_DPLL_TSF_S43	(*( GTM_DPLL_TSF_S0_type *) 0xf01287acu)	/* DPLL Time Stamp Field of STATE 43 Events */
#define GTM_DPLL_TSF_S44	(*( GTM_DPLL_TSF_S0_type *) 0xf01287b0u)	/* DPLL Time Stamp Field of STATE 44 Events */
#define GTM_DPLL_TSF_S45	(*( GTM_DPLL_TSF_S0_type *) 0xf01287b4u)	/* DPLL Time Stamp Field of STATE 45 Events */
#define GTM_DPLL_TSF_S46	(*( GTM_DPLL_TSF_S0_type *) 0xf01287b8u)	/* DPLL Time Stamp Field of STATE 46 Events */
#define GTM_DPLL_TSF_S47	(*( GTM_DPLL_TSF_S0_type *) 0xf01287bcu)	/* DPLL Time Stamp Field of STATE 47 Events */
#define GTM_DPLL_TSF_S48	(*( GTM_DPLL_TSF_S0_type *) 0xf01287c0u)	/* DPLL Time Stamp Field of STATE 48 Events */
#define GTM_DPLL_TSF_S49	(*( GTM_DPLL_TSF_S0_type *) 0xf01287c4u)	/* DPLL Time Stamp Field of STATE 49 Events */
#define GTM_DPLL_TSF_S5	(*( GTM_DPLL_TSF_S0_type *) 0xf0128714u)	/* DPLL Time Stamp Field of STATE 5 Events */
#define GTM_DPLL_TSF_S50	(*( GTM_DPLL_TSF_S0_type *) 0xf01287c8u)	/* DPLL Time Stamp Field of STATE 50 Events */
#define GTM_DPLL_TSF_S51	(*( GTM_DPLL_TSF_S0_type *) 0xf01287ccu)	/* DPLL Time Stamp Field of STATE 51 Events */
#define GTM_DPLL_TSF_S52	(*( GTM_DPLL_TSF_S0_type *) 0xf01287d0u)	/* DPLL Time Stamp Field of STATE 52 Events */
#define GTM_DPLL_TSF_S53	(*( GTM_DPLL_TSF_S0_type *) 0xf01287d4u)	/* DPLL Time Stamp Field of STATE 53 Events */
#define GTM_DPLL_TSF_S54	(*( GTM_DPLL_TSF_S0_type *) 0xf01287d8u)	/* DPLL Time Stamp Field of STATE 54 Events */
#define GTM_DPLL_TSF_S55	(*( GTM_DPLL_TSF_S0_type *) 0xf01287dcu)	/* DPLL Time Stamp Field of STATE 55 Events */
#define GTM_DPLL_TSF_S56	(*( GTM_DPLL_TSF_S0_type *) 0xf01287e0u)	/* DPLL Time Stamp Field of STATE 56 Events */
#define GTM_DPLL_TSF_S57	(*( GTM_DPLL_TSF_S0_type *) 0xf01287e4u)	/* DPLL Time Stamp Field of STATE 57 Events */
#define GTM_DPLL_TSF_S58	(*( GTM_DPLL_TSF_S0_type *) 0xf01287e8u)	/* DPLL Time Stamp Field of STATE 58 Events */
#define GTM_DPLL_TSF_S59	(*( GTM_DPLL_TSF_S0_type *) 0xf01287ecu)	/* DPLL Time Stamp Field of STATE 59 Events */
#define GTM_DPLL_TSF_S6	(*( GTM_DPLL_TSF_S0_type *) 0xf0128718u)	/* DPLL Time Stamp Field of STATE 6 Events */
#define GTM_DPLL_TSF_S60	(*( GTM_DPLL_TSF_S0_type *) 0xf01287f0u)	/* DPLL Time Stamp Field of STATE 60 Events */
#define GTM_DPLL_TSF_S61	(*( GTM_DPLL_TSF_S0_type *) 0xf01287f4u)	/* DPLL Time Stamp Field of STATE 61 Events */
#define GTM_DPLL_TSF_S62	(*( GTM_DPLL_TSF_S0_type *) 0xf01287f8u)	/* DPLL Time Stamp Field of STATE 62 Events */
#define GTM_DPLL_TSF_S63	(*( GTM_DPLL_TSF_S0_type *) 0xf01287fcu)	/* DPLL Time Stamp Field of STATE 63 Events */
#define GTM_DPLL_TSF_S7	(*( GTM_DPLL_TSF_S0_type *) 0xf012871cu)	/* DPLL Time Stamp Field of STATE 7 Events */
#define GTM_DPLL_TSF_S8	(*( GTM_DPLL_TSF_S0_type *) 0xf0128720u)	/* DPLL Time Stamp Field of STATE 8 Events */
#define GTM_DPLL_TSF_S9	(*( GTM_DPLL_TSF_S0_type *) 0xf0128724u)	/* DPLL Time Stamp Field of STATE 9 Events */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 STATE_TS       : 24;	/* Time stamp value of the last valid STATE input */
		/* const */ unsigned __sfrbit32 Reserved       : 8;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GTM_DPLL_TS_S_0_type;
#define GTM_DPLL_TS_S_0	(*( GTM_DPLL_TS_S_0_type *) 0xf0128410u)	/* DPLL Actual Signal STATE Time Stamp Register */
#define GTM_DPLL_TS_S_1	(*( GTM_DPLL_TS_S_0_type *) 0xf0128414u)	/* DPLL Actual Signal STATE Time Stamp Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 STATE_TS_OLD   : 24;	/* Time stamp value of the last valid STATE input */
		/* const */ unsigned __sfrbit32 Reserved       : 8;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GTM_DPLL_TS_S_OLD_0_type;
#define GTM_DPLL_TS_S_OLD_0	(*( GTM_DPLL_TS_S_OLD_0_type *) 0xf0128410u)	/* DPLL Previous Signal STATE Time Stamp Register */
#define GTM_DPLL_TS_S_OLD_1	(*( GTM_DPLL_TS_S_OLD_0_type *) 0xf0128414u)	/* DPLL Previous Signal STATE Time Stamp Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 TRIGGER_TS     : 24;	/* Time stamp value of the last valid TRIGGER input */
		/* const */ unsigned __sfrbit32 Reserved       : 8;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GTM_DPLL_TS_T_0_type;
#define GTM_DPLL_TS_T_0	(*( GTM_DPLL_TS_T_0_type *) 0xf0128400u)	/* DPLL Actual Signal TRIGGER Time Stamp Register */
#define GTM_DPLL_TS_T_1	(*( GTM_DPLL_TS_T_0_type *) 0xf0128404u)	/* DPLL Actual Signal TRIGGER Time Stamp Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 TRIGGER_TS_old : 24;	/* Time stamp value of the last but one valid TRIGGER input */
		/* const */ unsigned __sfrbit32 Reserved       : 8;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GTM_DPLL_TS_T_OLD_0_type;
#define GTM_DPLL_TS_T_OLD_0	(*( GTM_DPLL_TS_T_OLD_0_type *) 0xf0128400u)	/* DPLL Previous Signal TRIGGER Time Stamp Register */
#define GTM_DPLL_TS_T_OLD_1	(*( GTM_DPLL_TS_T_OLD_0_type *) 0xf0128404u)	/* DPLL Previous Signal TRIGGER Time Stamp Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 INSEL0         : 4;	/* In Selection for DSADCn GTM connection */
		unsigned __sfrbit32 INSEL1         : 4;	/* In Selection for DSADCn GTM connection */
		unsigned __sfrbit32 INSEL2         : 4;	/* In Selection for DSADCn GTM connection */
		unsigned __sfrbit32 INSEL3         : 4;	/* In Selection for DSADCn GTM connection */
		unsigned __sfrbit32 INSEL4         : 4;	/* In Selection for DSADCn GTM connection */
		unsigned __sfrbit32 INSEL5         : 4;	/* In Selection for DSADCn GTM connection */
		unsigned __sfrbit32 INSEL6         : 4;	/* In Selection for DSADCn GTM connection */
		unsigned __sfrbit32 INSEL7         : 4;	/* In Selection for DSADCn GTM connection */
	} B;
	int I;
	unsigned int U;

} GTM_DSADCINSEL0_type;
#define GTM_DSADCINSEL0	(*( GTM_DSADCINSEL0_type *) 0xf019fd7cu)	/* DSADC Input Select 0 Register */
#define GTM_DSADCINSEL1	(*( GTM_DSADCINSEL0_type *) 0xf019fd80u)	/* DSADC Input Select 1 Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 INSEL0         : 4;	/* In Selection for DSADCn GTM connection */
		unsigned __sfrbit32 INSEL1         : 4;	/* In Selection for DSADCn GTM connection */
		unsigned __sfrbit32 INSEL2         : 4;	/* In Selection for DSADCn GTM connection */
		unsigned __sfrbit32 INSEL3         : 4;	/* In Selection for DSADCn GTM connection */
		unsigned __sfrbit32 INSEL4         : 4;	/* In Selection for DSADCn GTM connection */
		unsigned __sfrbit32 INSEL5         : 4;	/* In Selection for DSADCn GTM connection */
		unsigned __sfrbit32 INSEL6         : 4;	/* In Selection for DSADCn GTM connection */
		unsigned __sfrbit32 INSEL7         : 4;	/* In Selection for DSADCn GTM connection */
	} B;
	int I;
	unsigned int U;

} GTM_DSADCINSEL2_type;
#define GTM_DSADCINSEL2	(*( GTM_DSADCINSEL2_type *) 0xf019fd84u)	/* DSADC Input Select 2 Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 SEL0           : 3;	/* Output Selection for DSADC0 GTM connection */
		unsigned __sfrbit32                : 1;
		unsigned __sfrbit32 SEL1           : 3;	/* Output Selection for DSADC1 GTM connection */
		unsigned __sfrbit32                : 1;
		unsigned __sfrbit32 SEL2           : 3;	/* Output Selection for DSADC2 GTM connection */
		unsigned __sfrbit32                : 1;
		unsigned __sfrbit32 SEL3           : 3;	/* Output Selection for DSADC3 GTM connection */
		unsigned __sfrbit32                : 1;
		unsigned __sfrbit32 SEL4           : 3;	/* Output Selection for DSADC4 GTM connection */
		unsigned __sfrbit32                : 1;
		unsigned __sfrbit32 SEL5           : 3;	/* Output Selection for DSADC5 GTM connection */
		unsigned __sfrbit32                : 9;
	} B;
	int I;
	unsigned int U;

} GTM_DSADCOUTSEL00_type;
#define GTM_DSADCOUTSEL00	(*( GTM_DSADCOUTSEL00_type *) 0xf019fd88u)	/* DSADC Output Select 00 Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 SEL0           : 3;	/* Output Selection for DSADC0 GTM connection */
		unsigned __sfrbit32                : 1;
		unsigned __sfrbit32 SEL1           : 3;	/* Output Selection for DSADC1 GTM connection */
		unsigned __sfrbit32                : 1;
		unsigned __sfrbit32 SEL2           : 3;	/* Output Selection for DSADC2 GTM connection */
		unsigned __sfrbit32                : 1;
		unsigned __sfrbit32 SEL3           : 3;	/* Output Selection for DSADC3 GTM connection */
		unsigned __sfrbit32                : 1;
		unsigned __sfrbit32 SEL4           : 3;	/* Output Selection for DSADC4 GTM connection */
		unsigned __sfrbit32                : 1;
		unsigned __sfrbit32 SEL5           : 3;	/* Output Selection for DSADC5 GTM connection */
		unsigned __sfrbit32                : 9;
	} B;
	int I;
	unsigned int U;

} GTM_DSADCOUTSEL10_type;
#define GTM_DSADCOUTSEL10	(*( GTM_DSADCOUTSEL10_type *) 0xf019fd90u)	/* DSADC Output Select 10 Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 IN00           : 1;	/* Input 0x Control */
		unsigned __sfrbit32 IN01           : 1;	/* Input 0x Control */
		unsigned __sfrbit32 IN02           : 1;	/* Input 0x Control */
		unsigned __sfrbit32 IN03           : 1;	/* Input 0x Control */
		unsigned __sfrbit32                : 4;
		unsigned __sfrbit32 IN10           : 1;	/* Input 1x Control */
		unsigned __sfrbit32 IN11           : 1;	/* Input 1x Control */
		unsigned __sfrbit32 IN12           : 1;	/* Input 1x Control */
		unsigned __sfrbit32 IN13           : 1;	/* Input 1x Control */
		unsigned __sfrbit32                : 4;
		unsigned __sfrbit32 DSS00          : 1;	/* Data Source Select 0x Control */
		unsigned __sfrbit32 DSS01          : 1;	/* Data Source Select 0x Control */
		unsigned __sfrbit32 DSS02          : 1;	/* Data Source Select 0x Control */
		unsigned __sfrbit32 DSS03          : 1;	/* Data Source Select 0x Control */
		unsigned __sfrbit32                : 4;
		unsigned __sfrbit32 DSS10          : 1;	/* Data Source Select 1x Control */
		unsigned __sfrbit32 DSS11          : 1;	/* Data Source Select 1x Control */
		unsigned __sfrbit32 DSS12          : 1;	/* Data Source Select 1x Control */
		unsigned __sfrbit32 DSS13          : 1;	/* Data Source Select 1x Control */
		unsigned __sfrbit32                : 4;
	} B;
	int I;
	unsigned int U;

} GTM_DXINCON_type;
#define GTM_DXINCON	(*( GTM_DXINCON_type *) 0xf019fe90u)	/* Data Exchange Input Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 OUT00          : 1;	/* Output 0x Control */
		unsigned __sfrbit32 OUT01          : 1;	/* Output 0x Control */
		unsigned __sfrbit32 OUT02          : 1;	/* Output 0x Control */
		unsigned __sfrbit32 OUT03          : 1;	/* Output 0x Control */
		unsigned __sfrbit32                : 4;
		unsigned __sfrbit32 OUT10          : 1;	/* Output 1x Control */
		unsigned __sfrbit32 OUT11          : 1;	/* Output 1x Control */
		unsigned __sfrbit32 OUT12          : 1;	/* Output 1x Control */
		unsigned __sfrbit32 OUT13          : 1;	/* Output 1x Control */
		unsigned __sfrbit32                : 20;
	} B;
	int I;
	unsigned int U;

} GTM_DXOUTCON_type;
#define GTM_DXOUTCON	(*( GTM_DXOUTCON_type *) 0xf019fe00u)	/* Data Exchange Output Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 AEI_TO_XPT_EIRQ_EN: 1;	/* AEI_TO_XPT_EIRQ error interrupt enable */
		unsigned __sfrbit32 AEI_USP_ADDR_EIRQ_EN: 1;	/* AEI_USP_ADDR_EIRQ error interrupt enable */
		unsigned __sfrbit32 AEI_IM_ADDR_EIRQ_EN: 1;	/* AEI_IM_ADDR_EIRQ error interrupt enable */
		unsigned __sfrbit32 AEI_USP_BE_EIRQ_EN: 1;	/* AEI_USP_BE_EIRQ error interrupt enable */
		/* const */ unsigned __sfrbit32 Reserved       : 28;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GTM_EIRQ_EN_type;
#define GTM_EIRQ_EN	(*( GTM_EIRQ_EN_type *) 0xf0100020u)	/* GTM Error Interrupt Enable Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 ADDR           : 9;	/* ARU Read address */
		/* const */ unsigned __sfrbit32 Reserved       : 23;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GTM_F2A0_CH0_ARU_RD_FIFO_type;
#define GTM_F2A0_CH0_ARU_RD_FIFO	(*( GTM_F2A0_CH0_ARU_RD_FIFO_type *) 0xf0118000u)	/* F2A Read Channel Address Register */
#define GTM_F2A0_CH1_ARU_RD_FIFO	(*( GTM_F2A0_CH0_ARU_RD_FIFO_type *) 0xf0118004u)	/* F2A Read Channel Address Register */
#define GTM_F2A0_CH2_ARU_RD_FIFO	(*( GTM_F2A0_CH0_ARU_RD_FIFO_type *) 0xf0118008u)	/* F2A Read Channel Address Register */
#define GTM_F2A0_CH3_ARU_RD_FIFO	(*( GTM_F2A0_CH0_ARU_RD_FIFO_type *) 0xf011800cu)	/* F2A Read Channel Address Register */
#define GTM_F2A0_CH4_ARU_RD_FIFO	(*( GTM_F2A0_CH0_ARU_RD_FIFO_type *) 0xf0118010u)	/* F2A Read Channel Address Register */
#define GTM_F2A0_CH5_ARU_RD_FIFO	(*( GTM_F2A0_CH0_ARU_RD_FIFO_type *) 0xf0118014u)	/* F2A Read Channel Address Register */
#define GTM_F2A0_CH6_ARU_RD_FIFO	(*( GTM_F2A0_CH0_ARU_RD_FIFO_type *) 0xf0118018u)	/* F2A Read Channel Address Register */
#define GTM_F2A0_CH7_ARU_RD_FIFO	(*( GTM_F2A0_CH0_ARU_RD_FIFO_type *) 0xf011801cu)	/* F2A Read Channel Address Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned __sfrbit32 Reserved       : 16;	/* Reserved */
		unsigned __sfrbit32 TMODE          : 2;	/* Transfer mode for 53 bit ARU data from/to FIFO */
		unsigned __sfrbit32 DIR            : 1;	/* Data transfer direction */
		/* const */ unsigned __sfrbit32 Reserved_4     : 13;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GTM_F2A0_CH0_STR_CFG_type;
#define GTM_F2A0_CH0_STR_CFG	(*( GTM_F2A0_CH0_STR_CFG_type *) 0xf0118020u)	/* F2A Stream 0 Configuration Register */
#define GTM_F2A0_CH1_STR_CFG	(*( GTM_F2A0_CH0_STR_CFG_type *) 0xf0118024u)	/* F2A Stream 1 Configuration Register */
#define GTM_F2A0_CH2_STR_CFG	(*( GTM_F2A0_CH0_STR_CFG_type *) 0xf0118028u)	/* F2A Stream 2 Configuration Register */
#define GTM_F2A0_CH3_STR_CFG	(*( GTM_F2A0_CH0_STR_CFG_type *) 0xf011802cu)	/* F2A Stream 3 Configuration Register */
#define GTM_F2A0_CH4_STR_CFG	(*( GTM_F2A0_CH0_STR_CFG_type *) 0xf0118030u)	/* F2A Stream 4 Configuration Register */
#define GTM_F2A0_CH5_STR_CFG	(*( GTM_F2A0_CH0_STR_CFG_type *) 0xf0118034u)	/* F2A Stream 5 Configuration Register */
#define GTM_F2A0_CH6_STR_CFG	(*( GTM_F2A0_CH0_STR_CFG_type *) 0xf0118038u)	/* F2A Stream 6 Configuration Register */
#define GTM_F2A0_CH7_STR_CFG	(*( GTM_F2A0_CH0_STR_CFG_type *) 0xf011803cu)	/* F2A Stream 7 Configuration Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 STR0_EN        : 2;	/* Enable/disable stream 0 */
		unsigned __sfrbit32 STR1_EN        : 2;	/* Enable/disable stream 1 */
		unsigned __sfrbit32 STR2_EN        : 2;	/* Enable/disable stream 2 */
		unsigned __sfrbit32 STR3_EN        : 2;	/* Enable/disable stream 3 */
		unsigned __sfrbit32 STR4_EN        : 2;	/* Enable/disable stream 4 */
		unsigned __sfrbit32 STR5_EN        : 2;	/* Enable/disable stream 5 */
		unsigned __sfrbit32 STR6_EN        : 2;	/* Enable/disable stream 6 */
		unsigned __sfrbit32 STR7_EN        : 2;	/* Enable/disable stream 7 */
		/* const */ unsigned __sfrbit32 Reserved       : 16;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GTM_F2A0_ENABLE_type;
#define GTM_F2A0_ENABLE	(*( GTM_F2A0_ENABLE_type *) 0xf0118040u)	/* F2A0 Stream Activation Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 RBM            : 1;	/* Ring buffer mode enable */
		unsigned __sfrbit32 RAP            : 1;	/* RAM access priority */
		unsigned __sfrbit32 FLUSH          : 1;	/* FIFO Flush control */
		unsigned __sfrbit32 WULOCK         : 1;	/* RAM write unlock Enable/disable direct RAM write access to the memory mapped FIFO region */
		/* const */ unsigned __sfrbit32 Reserved       : 28;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GTM_FIFO0_CH0_CTRL_type;
#define GTM_FIFO0_CH0_CTRL	(*( GTM_FIFO0_CH0_CTRL_type *) 0xf0118400u)	/* FIFO0 Channel 0 Control Register */
#define GTM_FIFO0_CH1_CTRL	(*( GTM_FIFO0_CH0_CTRL_type *) 0xf0118440u)	/* FIFO0 Channel 1 Control Register */
#define GTM_FIFO0_CH2_CTRL	(*( GTM_FIFO0_CH0_CTRL_type *) 0xf0118480u)	/* FIFO0 Channel 2 Control Register */
#define GTM_FIFO0_CH3_CTRL	(*( GTM_FIFO0_CH0_CTRL_type *) 0xf01184c0u)	/* FIFO0 Channel 3 Control Register */
#define GTM_FIFO0_CH4_CTRL	(*( GTM_FIFO0_CH0_CTRL_type *) 0xf0118500u)	/* FIFO0 Channel 4 Control Register */
#define GTM_FIFO0_CH5_CTRL	(*( GTM_FIFO0_CH0_CTRL_type *) 0xf0118540u)	/* FIFO0 Channel 5 Control Register */
#define GTM_FIFO0_CH6_CTRL	(*( GTM_FIFO0_CH0_CTRL_type *) 0xf0118580u)	/* FIFO0 Channel 6 Control Register */
#define GTM_FIFO0_CH7_CTRL	(*( GTM_FIFO0_CH0_CTRL_type *) 0xf01185c0u)	/* FIFO0 Channel 7 Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 FIFO_EMPTY_EIRQ_EN: 1;	/* Error interrupt enable */
		unsigned __sfrbit32 FIFO_FULL_EIRQ_EN: 1;	/* Interrupt enable */
		unsigned __sfrbit32 FIFO_LWM_EIRQ_EN: 1;	/* Interrupt enable */
		unsigned __sfrbit32 FIFO_UWM_EIRQ_EN: 1;	/* Interrupt enable */
		/* const */ unsigned __sfrbit32 Reserved       : 28;	/* reserved */
	} B;
	int I;
	unsigned int U;

} GTM_FIFO0_CH0_EIRQ_EN_type;
#define GTM_FIFO0_CH0_EIRQ_EN	(*( GTM_FIFO0_CH0_EIRQ_EN_type *) 0xf0118434u)	/* FIFO0 Channel 0 Error Interrupt Enable Register */
#define GTM_FIFO0_CH1_EIRQ_EN	(*( GTM_FIFO0_CH0_EIRQ_EN_type *) 0xf0118474u)	/* FIFO0 Channel 1 Error Interrupt Enable Register */
#define GTM_FIFO0_CH2_EIRQ_EN	(*( GTM_FIFO0_CH0_EIRQ_EN_type *) 0xf01184b4u)	/* FIFO0 Channel 2 Error Interrupt Enable Register */
#define GTM_FIFO0_CH3_EIRQ_EN	(*( GTM_FIFO0_CH0_EIRQ_EN_type *) 0xf01184f4u)	/* FIFO0 Channel 3 Error Interrupt Enable Register */
#define GTM_FIFO0_CH4_EIRQ_EN	(*( GTM_FIFO0_CH0_EIRQ_EN_type *) 0xf0118534u)	/* FIFO0 Channel 4 Error Interrupt Enable Register */
#define GTM_FIFO0_CH5_EIRQ_EN	(*( GTM_FIFO0_CH0_EIRQ_EN_type *) 0xf0118574u)	/* FIFO0 Channel 5 Error Interrupt Enable Register */
#define GTM_FIFO0_CH6_EIRQ_EN	(*( GTM_FIFO0_CH0_EIRQ_EN_type *) 0xf01185b4u)	/* FIFO0 Channel 6 Error Interrupt Enable Register */
#define GTM_FIFO0_CH7_EIRQ_EN	(*( GTM_FIFO0_CH0_EIRQ_EN_type *) 0xf01185f4u)	/* FIFO0 Channel 7 Error Interrupt Enable Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 ADDR           : 10;	/* End address for FIFOi channel x, (x:0?7) */
		/* const */ unsigned __sfrbit32 Reserved       : 22;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GTM_FIFO0_CH0_END_ADDR_type;
#define GTM_FIFO0_CH0_END_ADDR	(*( GTM_FIFO0_CH0_END_ADDR_type *) 0xf0118404u)	/* FIFO0 Channel 0 End Address Register */
#define GTM_FIFO0_CH1_END_ADDR	(*( GTM_FIFO0_CH0_END_ADDR_type *) 0xf0118444u)	/* FIFO0 Channel 1 End Address Register */
#define GTM_FIFO0_CH2_END_ADDR	(*( GTM_FIFO0_CH0_END_ADDR_type *) 0xf0118484u)	/* FIFO0 Channel 2 End Address Register */
#define GTM_FIFO0_CH3_END_ADDR	(*( GTM_FIFO0_CH0_END_ADDR_type *) 0xf01184c4u)	/* FIFO0 Channel 3 End Address Register */
#define GTM_FIFO0_CH4_END_ADDR	(*( GTM_FIFO0_CH0_END_ADDR_type *) 0xf0118504u)	/* FIFO0 Channel 4 End Address Register */
#define GTM_FIFO0_CH5_END_ADDR	(*( GTM_FIFO0_CH0_END_ADDR_type *) 0xf0118544u)	/* FIFO0 Channel 5 End Address Register */
#define GTM_FIFO0_CH6_END_ADDR	(*( GTM_FIFO0_CH0_END_ADDR_type *) 0xf0118584u)	/* FIFO0 Channel 6 End Address Register */
#define GTM_FIFO0_CH7_END_ADDR	(*( GTM_FIFO0_CH0_END_ADDR_type *) 0xf01185c4u)	/* FIFO0 Channel 7 End Address Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned __sfrbit32 LEVEL          : 11;	/* Fill level of the current FIFO */
		/* const */ unsigned __sfrbit32 Reserved       : 21;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GTM_FIFO0_CH0_FILL_LEVEL_type;
#define GTM_FIFO0_CH0_FILL_LEVEL	(*( GTM_FIFO0_CH0_FILL_LEVEL_type *) 0xf0118418u)	/* FIFO0 Channel 0 Fill Level Register */
#define GTM_FIFO0_CH1_FILL_LEVEL	(*( GTM_FIFO0_CH0_FILL_LEVEL_type *) 0xf0118458u)	/* FIFO0 Channel 1 Fill Level Register */
#define GTM_FIFO0_CH2_FILL_LEVEL	(*( GTM_FIFO0_CH0_FILL_LEVEL_type *) 0xf0118498u)	/* FIFO0 Channel 2 Fill Level Register */
#define GTM_FIFO0_CH3_FILL_LEVEL	(*( GTM_FIFO0_CH0_FILL_LEVEL_type *) 0xf01184d8u)	/* FIFO0 Channel 3 Fill Level Register */
#define GTM_FIFO0_CH4_FILL_LEVEL	(*( GTM_FIFO0_CH0_FILL_LEVEL_type *) 0xf0118518u)	/* FIFO0 Channel 4 Fill Level Register */
#define GTM_FIFO0_CH5_FILL_LEVEL	(*( GTM_FIFO0_CH0_FILL_LEVEL_type *) 0xf0118558u)	/* FIFO0 Channel 5 Fill Level Register */
#define GTM_FIFO0_CH6_FILL_LEVEL	(*( GTM_FIFO0_CH0_FILL_LEVEL_type *) 0xf0118598u)	/* FIFO0 Channel 6 Fill Level Register */
#define GTM_FIFO0_CH7_FILL_LEVEL	(*( GTM_FIFO0_CH0_FILL_LEVEL_type *) 0xf01185d8u)	/* FIFO0 Channel 7 Fill Level Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 FIFO_EMPTY_IRQ_EN: 1;	/* interrupt enable */
		unsigned __sfrbit32 FIFO_FULL_IRQ_EN: 1;	/* interrupt enable */
		unsigned __sfrbit32 FIFO_LWM_IRQ_EN: 1;	/* interrupt enable */
		unsigned __sfrbit32 FIFO_UWM_IRQ_EN: 1;	/* interrupt enable */
		/* const */ unsigned __sfrbit32 Reserved       : 28;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GTM_FIFO0_CH0_IRQ_EN_type;
#define GTM_FIFO0_CH0_IRQ_EN	(*( GTM_FIFO0_CH0_IRQ_EN_type *) 0xf0118428u)	/* FIFO0 Channel 0 Interrupt Enable Register */
#define GTM_FIFO0_CH1_IRQ_EN	(*( GTM_FIFO0_CH0_IRQ_EN_type *) 0xf0118468u)	/* FIFO0 Channel 1 Interrupt Enable Register */
#define GTM_FIFO0_CH2_IRQ_EN	(*( GTM_FIFO0_CH0_IRQ_EN_type *) 0xf01184a8u)	/* FIFO0 Channel 2 Interrupt Enable Register */
#define GTM_FIFO0_CH3_IRQ_EN	(*( GTM_FIFO0_CH0_IRQ_EN_type *) 0xf01184e8u)	/* FIFO0 Channel 3 Interrupt Enable Register */
#define GTM_FIFO0_CH4_IRQ_EN	(*( GTM_FIFO0_CH0_IRQ_EN_type *) 0xf0118528u)	/* FIFO0 Channel 4 Interrupt Enable Register */
#define GTM_FIFO0_CH5_IRQ_EN	(*( GTM_FIFO0_CH0_IRQ_EN_type *) 0xf0118568u)	/* FIFO0 Channel 5 Interrupt Enable Register */
#define GTM_FIFO0_CH6_IRQ_EN	(*( GTM_FIFO0_CH0_IRQ_EN_type *) 0xf01185a8u)	/* FIFO0 Channel 6 Interrupt Enable Register */
#define GTM_FIFO0_CH7_IRQ_EN	(*( GTM_FIFO0_CH0_IRQ_EN_type *) 0xf01185e8u)	/* FIFO0 Channel 7 Interrupt Enable Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 TRG_FIFO_EMPTY : 1;	/* Force interrupt of FIFO empty status */
		unsigned __sfrbit32 TRG_FIFO_FULL  : 1;	/* Force interrupt of FIFO full status */
		unsigned __sfrbit32 TRG_FIFO_LWM   : 1;	/* Force interrupt of lower watermark */
		unsigned __sfrbit32 TRG_FIFO_UWM   : 1;	/* Force interrupt of upper watermark */
		/* const */ unsigned __sfrbit32 Reserved       : 28;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GTM_FIFO0_CH0_IRQ_FORCINT_type;
#define GTM_FIFO0_CH0_IRQ_FORCINT	(*( GTM_FIFO0_CH0_IRQ_FORCINT_type *) 0xf011842cu)	/* FIFO0 Channel 0 Force Interrupt By Software Register */
#define GTM_FIFO0_CH1_IRQ_FORCINT	(*( GTM_FIFO0_CH0_IRQ_FORCINT_type *) 0xf011846cu)	/* FIFO0 Channel 1 Force Interrupt By Software Register */
#define GTM_FIFO0_CH2_IRQ_FORCINT	(*( GTM_FIFO0_CH0_IRQ_FORCINT_type *) 0xf01184acu)	/* FIFO0 Channel 2 Force Interrupt By Software Register */
#define GTM_FIFO0_CH3_IRQ_FORCINT	(*( GTM_FIFO0_CH0_IRQ_FORCINT_type *) 0xf01184ecu)	/* FIFO0 Channel 3 Force Interrupt By Software Register */
#define GTM_FIFO0_CH4_IRQ_FORCINT	(*( GTM_FIFO0_CH0_IRQ_FORCINT_type *) 0xf011852cu)	/* FIFO0 Channel 4 Force Interrupt By Software Register */
#define GTM_FIFO0_CH5_IRQ_FORCINT	(*( GTM_FIFO0_CH0_IRQ_FORCINT_type *) 0xf011856cu)	/* FIFO0 Channel 5 Force Interrupt By Software Register */
#define GTM_FIFO0_CH6_IRQ_FORCINT	(*( GTM_FIFO0_CH0_IRQ_FORCINT_type *) 0xf01185acu)	/* FIFO0 Channel 6 Force Interrupt By Software Register */
#define GTM_FIFO0_CH7_IRQ_FORCINT	(*( GTM_FIFO0_CH0_IRQ_FORCINT_type *) 0xf01185ecu)	/* FIFO0 Channel 7 Force Interrupt By Software Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 IRQ_MODE       : 2;	/* IRQ mode selection */
		unsigned __sfrbit32 DMA_HYSTERESIS : 1;	/* Enable DMA hysteresis mode */
		unsigned __sfrbit32 DMA_HYST_DIR   : 1;	/* DMA direction in hysteresis mode */
		/* const */ unsigned __sfrbit32 Reserved       : 28;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GTM_FIFO0_CH0_IRQ_MODE_type;
#define GTM_FIFO0_CH0_IRQ_MODE	(*( GTM_FIFO0_CH0_IRQ_MODE_type *) 0xf0118430u)	/* FIFO0 Channel 0 IRQ Mode Control Register */
#define GTM_FIFO0_CH1_IRQ_MODE	(*( GTM_FIFO0_CH0_IRQ_MODE_type *) 0xf0118470u)	/* FIFO0 Channel 1 IRQ Mode Control Register */
#define GTM_FIFO0_CH2_IRQ_MODE	(*( GTM_FIFO0_CH0_IRQ_MODE_type *) 0xf01184b0u)	/* FIFO0 Channel 2 IRQ Mode Control Register */
#define GTM_FIFO0_CH3_IRQ_MODE	(*( GTM_FIFO0_CH0_IRQ_MODE_type *) 0xf01184f0u)	/* FIFO0 Channel 3 IRQ Mode Control Register */
#define GTM_FIFO0_CH4_IRQ_MODE	(*( GTM_FIFO0_CH0_IRQ_MODE_type *) 0xf0118530u)	/* FIFO0 Channel 4 IRQ Mode Control Register */
#define GTM_FIFO0_CH5_IRQ_MODE	(*( GTM_FIFO0_CH0_IRQ_MODE_type *) 0xf0118570u)	/* FIFO0 Channel 5 IRQ Mode Control Register */
#define GTM_FIFO0_CH6_IRQ_MODE	(*( GTM_FIFO0_CH0_IRQ_MODE_type *) 0xf01185b0u)	/* FIFO0 Channel 6 IRQ Mode Control Register */
#define GTM_FIFO0_CH7_IRQ_MODE	(*( GTM_FIFO0_CH0_IRQ_MODE_type *) 0xf01185f0u)	/* FIFO0 Channel 7 IRQ Mode Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 FIFO_EMPTY     : 1;	/* FIFO is empty */
		unsigned __sfrbit32 FIFO_FULL      : 1;	/* FIFO is full */
		unsigned __sfrbit32 FIFO_LWM       : 1;	/* FIFO Lower watermark was under-run */
		unsigned __sfrbit32 FIFO_UWM       : 1;	/* FIFO Upper watermark was over-run */
		/* const */ unsigned __sfrbit32 Reserved       : 28;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GTM_FIFO0_CH0_IRQ_NOTIFY_type;
#define GTM_FIFO0_CH0_IRQ_NOTIFY	(*( GTM_FIFO0_CH0_IRQ_NOTIFY_type *) 0xf0118424u)	/* FIFO0 Channel 0 Interrupt Notification Register */
#define GTM_FIFO0_CH1_IRQ_NOTIFY	(*( GTM_FIFO0_CH0_IRQ_NOTIFY_type *) 0xf0118464u)	/* FIFO0 Channel 1 Interrupt Notification Register */
#define GTM_FIFO0_CH2_IRQ_NOTIFY	(*( GTM_FIFO0_CH0_IRQ_NOTIFY_type *) 0xf01184a4u)	/* FIFO0 Channel 2 Interrupt Notification Register */
#define GTM_FIFO0_CH3_IRQ_NOTIFY	(*( GTM_FIFO0_CH0_IRQ_NOTIFY_type *) 0xf01184e4u)	/* FIFO0 Channel 3 Interrupt Notification Register */
#define GTM_FIFO0_CH4_IRQ_NOTIFY	(*( GTM_FIFO0_CH0_IRQ_NOTIFY_type *) 0xf0118524u)	/* FIFO0 Channel 4 Interrupt Notification Register */
#define GTM_FIFO0_CH5_IRQ_NOTIFY	(*( GTM_FIFO0_CH0_IRQ_NOTIFY_type *) 0xf0118564u)	/* FIFO0 Channel 5 Interrupt Notification Register */
#define GTM_FIFO0_CH6_IRQ_NOTIFY	(*( GTM_FIFO0_CH0_IRQ_NOTIFY_type *) 0xf01185a4u)	/* FIFO0 Channel 6 Interrupt Notification Register */
#define GTM_FIFO0_CH7_IRQ_NOTIFY	(*( GTM_FIFO0_CH0_IRQ_NOTIFY_type *) 0xf01185e4u)	/* FIFO0 Channel 7 Interrupt Notification Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 ADDR           : 10;	/* Lower watermark address */
		/* const */ unsigned __sfrbit32 Reserved       : 22;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GTM_FIFO0_CH0_LOWER_WM_type;
#define GTM_FIFO0_CH0_LOWER_WM	(*( GTM_FIFO0_CH0_LOWER_WM_type *) 0xf0118410u)	/* FIFO0 Channel 0 Lower Watermark Register */
#define GTM_FIFO0_CH1_LOWER_WM	(*( GTM_FIFO0_CH0_LOWER_WM_type *) 0xf0118450u)	/* FIFO0 Channel 1 Lower Watermark Register */
#define GTM_FIFO0_CH2_LOWER_WM	(*( GTM_FIFO0_CH0_LOWER_WM_type *) 0xf0118490u)	/* FIFO0 Channel 2 Lower Watermark Register */
#define GTM_FIFO0_CH3_LOWER_WM	(*( GTM_FIFO0_CH0_LOWER_WM_type *) 0xf01184d0u)	/* FIFO0 Channel 3 Lower Watermark Register */
#define GTM_FIFO0_CH4_LOWER_WM	(*( GTM_FIFO0_CH0_LOWER_WM_type *) 0xf0118510u)	/* FIFO0 Channel 4 Lower Watermark Register */
#define GTM_FIFO0_CH5_LOWER_WM	(*( GTM_FIFO0_CH0_LOWER_WM_type *) 0xf0118550u)	/* FIFO0 Channel 5 Lower Watermark Register */
#define GTM_FIFO0_CH6_LOWER_WM	(*( GTM_FIFO0_CH0_LOWER_WM_type *) 0xf0118590u)	/* FIFO0 Channel 6 Lower Watermark Register */
#define GTM_FIFO0_CH7_LOWER_WM	(*( GTM_FIFO0_CH0_LOWER_WM_type *) 0xf01185d0u)	/* FIFO0 Channel 7 Lower Watermark Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned __sfrbit32 ADDR           : 10;	/* Position of the read pointer */
		/* const */ unsigned __sfrbit32 Reserved       : 22;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GTM_FIFO0_CH0_RD_PTR_type;
#define GTM_FIFO0_CH0_RD_PTR	(*( GTM_FIFO0_CH0_RD_PTR_type *) 0xf0118420u)	/* FIFO0 Channel 0 Read Pointer Register */
#define GTM_FIFO0_CH1_RD_PTR	(*( GTM_FIFO0_CH0_RD_PTR_type *) 0xf0118460u)	/* FIFO0 Channel 1 Read Pointer Register */
#define GTM_FIFO0_CH2_RD_PTR	(*( GTM_FIFO0_CH0_RD_PTR_type *) 0xf01184a0u)	/* FIFO0 Channel 2 Read Pointer Register */
#define GTM_FIFO0_CH3_RD_PTR	(*( GTM_FIFO0_CH0_RD_PTR_type *) 0xf01184e0u)	/* FIFO0 Channel 3 Read Pointer Register */
#define GTM_FIFO0_CH4_RD_PTR	(*( GTM_FIFO0_CH0_RD_PTR_type *) 0xf0118520u)	/* FIFO0 Channel 4 Read Pointer Register */
#define GTM_FIFO0_CH5_RD_PTR	(*( GTM_FIFO0_CH0_RD_PTR_type *) 0xf0118560u)	/* FIFO0 Channel 5 Read Pointer Register */
#define GTM_FIFO0_CH6_RD_PTR	(*( GTM_FIFO0_CH0_RD_PTR_type *) 0xf01185a0u)	/* FIFO0 Channel 6 Read Pointer Register */
#define GTM_FIFO0_CH7_RD_PTR	(*( GTM_FIFO0_CH0_RD_PTR_type *) 0xf01185e0u)	/* FIFO0 Channel 7 Read Pointer Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 ADDR           : 10;	/* Start address for FIFOi channel x, (x07) */
		/* const */ unsigned __sfrbit32 Reserved       : 22;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GTM_FIFO0_CH0_START_ADDR_type;
#define GTM_FIFO0_CH0_START_ADDR	(*( GTM_FIFO0_CH0_START_ADDR_type *) 0xf0118408u)	/* FIFO0 Channel 0 Start Address Register */
#define GTM_FIFO0_CH1_START_ADDR	(*( GTM_FIFO0_CH0_START_ADDR_type *) 0xf0118448u)	/* FIFO0 Channel 1 Start Address Register */
#define GTM_FIFO0_CH2_START_ADDR	(*( GTM_FIFO0_CH0_START_ADDR_type *) 0xf0118488u)	/* FIFO0 Channel 2 Start Address Register */
#define GTM_FIFO0_CH3_START_ADDR	(*( GTM_FIFO0_CH0_START_ADDR_type *) 0xf01184c8u)	/* FIFO0 Channel 3 Start Address Register */
#define GTM_FIFO0_CH4_START_ADDR	(*( GTM_FIFO0_CH0_START_ADDR_type *) 0xf0118508u)	/* FIFO0 Channel 4 Start Address Register */
#define GTM_FIFO0_CH5_START_ADDR	(*( GTM_FIFO0_CH0_START_ADDR_type *) 0xf0118548u)	/* FIFO0 Channel 5 Start Address Register */
#define GTM_FIFO0_CH6_START_ADDR	(*( GTM_FIFO0_CH0_START_ADDR_type *) 0xf0118588u)	/* FIFO0 Channel 6 Start Address Register */
#define GTM_FIFO0_CH7_START_ADDR	(*( GTM_FIFO0_CH0_START_ADDR_type *) 0xf01185c8u)	/* FIFO0 Channel 7 Start Address Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned __sfrbit32 EMPTY          : 1;	/* FIFO is empty */
		/* const */ unsigned __sfrbit32 FULL           : 1;	/* FIFO is full */
		/* const */ unsigned __sfrbit32 LOW_WM         : 1;	/* Lower watermark reached */
		/* const */ unsigned __sfrbit32 UP_WM          : 1;	/* Upper watermark reached */
		/* const */ unsigned __sfrbit32 Reserved       : 28;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GTM_FIFO0_CH0_STATUS_type;
#define GTM_FIFO0_CH0_STATUS	(*( GTM_FIFO0_CH0_STATUS_type *) 0xf0118414u)	/* FIFO0 Channel 0 Status Register */
#define GTM_FIFO0_CH1_STATUS	(*( GTM_FIFO0_CH0_STATUS_type *) 0xf0118454u)	/* FIFO0 Channel 1 Status Register */
#define GTM_FIFO0_CH2_STATUS	(*( GTM_FIFO0_CH0_STATUS_type *) 0xf0118494u)	/* FIFO0 Channel 2 Status Register */
#define GTM_FIFO0_CH3_STATUS	(*( GTM_FIFO0_CH0_STATUS_type *) 0xf01184d4u)	/* FIFO0 Channel 3 Status Register */
#define GTM_FIFO0_CH4_STATUS	(*( GTM_FIFO0_CH0_STATUS_type *) 0xf0118514u)	/* FIFO0 Channel 4 Status Register */
#define GTM_FIFO0_CH5_STATUS	(*( GTM_FIFO0_CH0_STATUS_type *) 0xf0118554u)	/* FIFO0 Channel 5 Status Register */
#define GTM_FIFO0_CH6_STATUS	(*( GTM_FIFO0_CH0_STATUS_type *) 0xf0118594u)	/* FIFO0 Channel 6 Status Register */
#define GTM_FIFO0_CH7_STATUS	(*( GTM_FIFO0_CH0_STATUS_type *) 0xf01185d4u)	/* FIFO0 Channel 7 Status Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 ADDR           : 10;	/* Upper watermark address */
		/* const */ unsigned __sfrbit32 Reserved       : 22;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GTM_FIFO0_CH0_UPPER_WM_type;
#define GTM_FIFO0_CH0_UPPER_WM	(*( GTM_FIFO0_CH0_UPPER_WM_type *) 0xf011840cu)	/* FIFO0 Channel 0 Upper Watermark Register */
#define GTM_FIFO0_CH1_UPPER_WM	(*( GTM_FIFO0_CH0_UPPER_WM_type *) 0xf011844cu)	/* FIFO0 Channel 1 Upper Watermark Register */
#define GTM_FIFO0_CH2_UPPER_WM	(*( GTM_FIFO0_CH0_UPPER_WM_type *) 0xf011848cu)	/* FIFO0 Channel 2 Upper Watermark Register */
#define GTM_FIFO0_CH3_UPPER_WM	(*( GTM_FIFO0_CH0_UPPER_WM_type *) 0xf01184ccu)	/* FIFO0 Channel 3 Upper Watermark Register */
#define GTM_FIFO0_CH4_UPPER_WM	(*( GTM_FIFO0_CH0_UPPER_WM_type *) 0xf011850cu)	/* FIFO0 Channel 4 Upper Watermark Register */
#define GTM_FIFO0_CH5_UPPER_WM	(*( GTM_FIFO0_CH0_UPPER_WM_type *) 0xf011854cu)	/* FIFO0 Channel 5 Upper Watermark Register */
#define GTM_FIFO0_CH6_UPPER_WM	(*( GTM_FIFO0_CH0_UPPER_WM_type *) 0xf011858cu)	/* FIFO0 Channel 6 Upper Watermark Register */
#define GTM_FIFO0_CH7_UPPER_WM	(*( GTM_FIFO0_CH0_UPPER_WM_type *) 0xf01185ccu)	/* FIFO0 Channel 7 Upper Watermark Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned __sfrbit32 ADDR           : 10;	/* Position of the write pointer */
		/* const */ unsigned __sfrbit32 Reserved       : 22;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GTM_FIFO0_CH0_WR_PTR_type;
#define GTM_FIFO0_CH0_WR_PTR	(*( GTM_FIFO0_CH0_WR_PTR_type *) 0xf011841cu)	/* FIFO0 Channel 0 Write Pointer Register */
#define GTM_FIFO0_CH1_WR_PTR	(*( GTM_FIFO0_CH0_WR_PTR_type *) 0xf011845cu)	/* FIFO0 Channel 1 Write Pointer Register */
#define GTM_FIFO0_CH2_WR_PTR	(*( GTM_FIFO0_CH0_WR_PTR_type *) 0xf011849cu)	/* FIFO0 Channel 2 Write Pointer Register */
#define GTM_FIFO0_CH3_WR_PTR	(*( GTM_FIFO0_CH0_WR_PTR_type *) 0xf01184dcu)	/* FIFO0 Channel 3 Write Pointer Register */
#define GTM_FIFO0_CH4_WR_PTR	(*( GTM_FIFO0_CH0_WR_PTR_type *) 0xf011851cu)	/* FIFO0 Channel 4 Write Pointer Register */
#define GTM_FIFO0_CH5_WR_PTR	(*( GTM_FIFO0_CH0_WR_PTR_type *) 0xf011855cu)	/* FIFO0 Channel 5 Write Pointer Register */
#define GTM_FIFO0_CH6_WR_PTR	(*( GTM_FIFO0_CH0_WR_PTR_type *) 0xf011859cu)	/* FIFO0 Channel 6 Write Pointer Register */
#define GTM_FIFO0_CH7_WR_PTR	(*( GTM_FIFO0_CH0_WR_PTR_type *) 0xf01185dcu)	/* FIFO0 Channel 7 Write Pointer Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned __sfrbit32 ARU_NEW_DATA0_IRQ: 1;	/* ARU_NEW_DATA0 interrupt */
		/* const */ unsigned __sfrbit32 ARU_NEW_DATA1_IRQ: 1;	/* ARU_NEW_DATA1 interrupt */
		/* const */ unsigned __sfrbit32 ARU_ACC_ACK_IRQ: 1;	/* ARU_ACC_ACK interrupt */
		/* const */ unsigned __sfrbit32 BRC_IRQ        : 1;	/* BRC shared submodule interrupt */
		/* const */ unsigned __sfrbit32 AEI_IRQ        : 1;	/* AEI_IRQ interrupt */
		/* const */ unsigned __sfrbit32 CMP_IRQ        : 1;	/* CMP shared submodule interrupt */
		/* const */ unsigned __sfrbit32 SPE0_IRQ       : 1;	/* SPE0 shared submodule interrupt */
		/* const */ unsigned __sfrbit32 SPE1_IRQ       : 1;	/* SPE1 shared submodule interrupt */
		/* const */ unsigned __sfrbit32 Reserved       : 8;	/* Reserved */
		/* const */ unsigned __sfrbit32 PSM0_CH0_IRQ   : 1;	/* PSM0 shared submodule channel 0 interrupt */
		/* const */ unsigned __sfrbit32 PSM0_CH1_IRQ   : 1;	/* PSM0 shared submodule channel 1 interrupt */
		/* const */ unsigned __sfrbit32 PSM0_CH2_IRQ   : 1;	/* PSM0 shared submodule channel 2 interrupt */
		/* const */ unsigned __sfrbit32 PSM0_CH3_IRQ   : 1;	/* PSM0 shared submodule channel 3 interrupt */
		/* const */ unsigned __sfrbit32 PSM0_CH4_IRQ   : 1;	/* PSM0 shared submodule channel 4 interrupt */
		/* const */ unsigned __sfrbit32 PSM0_CH5_IRQ   : 1;	/* PSM0 shared submodule channel 5 interrupt */
		/* const */ unsigned __sfrbit32 PSM0_CH6_IRQ   : 1;	/* PSM0 shared submodule channel 6 interrupt */
		/* const */ unsigned __sfrbit32 PSM0_CH7_IRQ   : 1;	/* PSM0 shared submodule channel 7 interrupt */
		/* const */ unsigned __sfrbit32 Reserved_18    : 8;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GTM_ICM_IRQG_0_type;
#define GTM_ICM_IRQG_0	(*( GTM_ICM_IRQG_0_type *) 0xf0100600u)	/* GTM Infrastructure Interrupt Group */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned __sfrbit32 DPLL_DCG_IRQ   : 1;	/* TRIGGER direction change detected. */
		/* const */ unsigned __sfrbit32 DPLL_EDI_IRQ   : 1;	/* DPLL enable/disable interrupt */
		/* const */ unsigned __sfrbit32 DPLL_TIN_IRQ   : 1;	/* TRIGGER minimum hold time (THMI) violation detected interrupt */
		/* const */ unsigned __sfrbit32 DPLL_TAX_IRQ   : 1;	/* TRIGGER maximum hold time (THMA) violation detected interrupt */
		/* const */ unsigned __sfrbit32 DPLL_SIS_IRQ   : 1;	/* STATE inactive slope detected interrupt. See bit 0. */
		/* const */ unsigned __sfrbit32 DPLL_TIS_IRQ   : 1;	/* TRIGGER inactive slope detected interrupt. See bit 0. */
		/* const */ unsigned __sfrbit32 DPLL_MSI_IRQ   : 1;	/* Missing STATE interrupt */
		/* const */ unsigned __sfrbit32 DPLL_MTI_IRQ   : 1;	/* Missing TRIGGER interrupt */
		/* const */ unsigned __sfrbit32 DPLL_SAS_IRQ   : 1;	/* STATE active slope detected */
		/* const */ unsigned __sfrbit32 DPLL_TAS_IRQ   : 1;	/* TRIGGER active slope detected while NTI_CNT is zero */
		/* const */ unsigned __sfrbit32 DPLL_PWI_IRQ   : 1;	/* Plausibility window (PVT) violation interrupt of TRIGGER */
		/* const */ unsigned __sfrbit32 DPLL_W2I_IRQ   : 1;	/* Write access to RAM region 2 interrupt */
		/* const */ unsigned __sfrbit32 DPLL_W1I_IRQ   : 1;	/* Write access to RAM region 1B or 1C interrupt */
		/* const */ unsigned __sfrbit32 DPLL_GLI_IRQ   : 1;	/* Get of lock interrupt for SUB_INC1 */
		/* const */ unsigned __sfrbit32 DPLL_LLI_IRQ   : 1;	/* Lost of lock interrupt for SUB_INC1 */
		/* const */ unsigned __sfrbit32 DPLL_EI_IRQ    : 1;	/* Error interrupt See bit 0 */
		/* const */ unsigned __sfrbit32 DPLL_GL2I_IRQ  : 1;	/* Get of lock interrupt for SUB_INC2 */
		/* const */ unsigned __sfrbit32 DPLL_LL2I_IRQ  : 1;	/* Lost of lock interrupt for SUB_INC2 */
		/* const */ unsigned __sfrbit32 DPLL_TE0_IRQ   : 1;	/* TRIGGER event interrupt 0 */
		/* const */ unsigned __sfrbit32 DPLL_TE1_IRQ   : 1;	/* TRIGGER event interrupt 1 */
		/* const */ unsigned __sfrbit32 DPLL_TE2_IRQ   : 1;	/* TRIGGER event interrupt 2 */
		/* const */ unsigned __sfrbit32 DPLL_TE3_IRQ   : 1;	/* TRIGGER event interrupt 3 */
		/* const */ unsigned __sfrbit32 DPLL_TE4_IRQ   : 1;	/* TRIGGER event interrupt 4 */
		/* const */ unsigned __sfrbit32 DPLL_CDIT_IRQ  : 1;	/* DPLL calculated duration interrupt for trigger */
		/* const */ unsigned __sfrbit32 DPLL_CDIS_IRQ  : 1;	/* DPLL calculated duration interrupt for state */
		/* const */ unsigned __sfrbit32 DPLL_TORI_IRQ  : 1;	/* DPLL calculated duration interrupt for state */
		/* const */ unsigned __sfrbit32 DPLL_SORI_IRQ  : 1;	/* DPLL calculated duration interrupt for state */
		/* const */ unsigned __sfrbit32 Reserved       : 5;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GTM_ICM_IRQG_1_type;
#define GTM_ICM_IRQG_1	(*( GTM_ICM_IRQG_1_type *) 0xf0100604u)	/* GTM DPLL Interrupt Group */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned __sfrbit32 ATOM4_CH0_IRQ  : 1;	/* ATOM4 channel 0 shared interrupt */
		/* const */ unsigned __sfrbit32 ATOM4_CH1_IRQ  : 1;	/* ATOM4 channel 1 shared interrupt */
		/* const */ unsigned __sfrbit32 ATOM4_CH2_IRQ  : 1;	/* ATOM4 channel 2 shared interrupt */
		/* const */ unsigned __sfrbit32 ATOM4_CH3_IRQ  : 1;	/* ATOM4 channel 3 shared interrupt */
		/* const */ unsigned __sfrbit32 ATOM4_CH4_IRQ  : 1;	/* ATOM4 channel 4 shared interrupt */
		/* const */ unsigned __sfrbit32 ATOM4_CH5_IRQ  : 1;	/* ATOM4 channel 5 shared interrupt */
		/* const */ unsigned __sfrbit32 ATOM4_CH6_IRQ  : 1;	/* ATOM4 channel 6 shared interrupt */
		/* const */ unsigned __sfrbit32 ATOM4_CH7_IRQ  : 1;	/* ATOM4 channel 7 shared interrupt */
		/* const */ unsigned __sfrbit32 Reserved       : 24;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GTM_ICM_IRQG_10_type;
#define GTM_ICM_IRQG_10	(*( GTM_ICM_IRQG_10_type *) 0xf0100628u)	/* ATOM Interrupt Group 1 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned __sfrbit32 TIM0_CH0_IRQ   : 1;	/* TIM0 shared interrupt channel 0. */
		/* const */ unsigned __sfrbit32 TIM0_CH1_IRQ   : 1;	/* TIM0 shared interrupt channel 1 */
		/* const */ unsigned __sfrbit32 TIM0_CH2_IRQ   : 1;	/* TIM0 shared interrupt channel 2 */
		/* const */ unsigned __sfrbit32 TIM0_CH3_IRQ   : 1;	/* TIM0 shared interrupt channel 3 */
		/* const */ unsigned __sfrbit32 TIM0_CH4_IRQ   : 1;	/* TIM0 shared interrupt channel 4 */
		/* const */ unsigned __sfrbit32 TIM0_CH5_IRQ   : 1;	/* TIM0 shared interrupt channel 5 */
		/* const */ unsigned __sfrbit32 TIM0_CH6_IRQ   : 1;	/* TIM0 shared interrupt channel 6 */
		/* const */ unsigned __sfrbit32 TIM0_CH7_IRQ   : 1;	/* TIM0 shared interrupt channel 7 */
		/* const */ unsigned __sfrbit32 TIM1_CH0_IRQ   : 1;	/* TIM1 shared interrupt channel 0 */
		/* const */ unsigned __sfrbit32 TIM1_CH1_IRQ   : 1;	/* TIM1 shared interrupt channel 1 */
		/* const */ unsigned __sfrbit32 TIM1_CH2_IRQ   : 1;	/* TIM1 shared interrupt channel 2 */
		/* const */ unsigned __sfrbit32 TIM1_CH3_IRQ   : 1;	/* TIM1 shared interrupt channel 3 */
		/* const */ unsigned __sfrbit32 TIM1_CH4_IRQ   : 1;	/* TIM1 shared interrupt channel 4 */
		/* const */ unsigned __sfrbit32 TIM1_CH5_IRQ   : 1;	/* TIM1 shared interrupt channel 5 */
		/* const */ unsigned __sfrbit32 TIM1_CH6_IRQ   : 1;	/* TIM1 shared interrupt channel 6 */
		/* const */ unsigned __sfrbit32 TIM1_CH7_IRQ   : 1;	/* TIM1 shared interrupt channel 7 */
		/* const */ unsigned __sfrbit32 TIM2_CH0_IRQ   : 1;	/* TIM2 shared interrupt channel 0 */
		/* const */ unsigned __sfrbit32 TIM2_CH1_IRQ   : 1;	/* TIM2 shared interrupt channel 1 */
		/* const */ unsigned __sfrbit32 TIM2_CH2_IRQ   : 1;	/* TIM2 shared interrupt channel 2 */
		/* const */ unsigned __sfrbit32 TIM2_CH3_IRQ   : 1;	/* TIM2 shared interrupt channel 3 */
		/* const */ unsigned __sfrbit32 TIM2_CH4_IRQ   : 1;	/* TIM2 shared interrupt channel 4 */
		/* const */ unsigned __sfrbit32 TIM2_CH5_IRQ   : 1;	/* TIM2 shared interrupt channel 5 */
		/* const */ unsigned __sfrbit32 TIM2_CH6_IRQ   : 1;	/* TIM2 shared interrupt channel 6 */
		/* const */ unsigned __sfrbit32 TIM2_CH7_IRQ   : 1;	/* TIM2 shared interrupt channel 7 */
		/* const */ unsigned __sfrbit32 TIM3_CH0_IRQ   : 1;	/* TIM3 shared interrupt channel 0 */
		/* const */ unsigned __sfrbit32 TIM3_CH1_IRQ   : 1;	/* TIM3 shared interrupt channel 1 */
		/* const */ unsigned __sfrbit32 TIM3_CH2_IRQ   : 1;	/* TIM3 shared interrupt channel 2 */
		/* const */ unsigned __sfrbit32 TIM3_CH3_IRQ   : 1;	/* TIM3 shared interrupt channel 3 */
		/* const */ unsigned __sfrbit32 TIM3_CH4_IRQ   : 1;	/* TIM3 shared interrupt channel 4 */
		/* const */ unsigned __sfrbit32 TIM3_CH5_IRQ   : 1;	/* TIM3 shared interrupt channel 5 */
		/* const */ unsigned __sfrbit32 TIM3_CH6_IRQ   : 1;	/* TIM3 shared interrupt channel 6 */
		/* const */ unsigned __sfrbit32 TIM3_CH7_IRQ   : 1;	/* TIM3 shared interrupt channel 7 */
	} B;
	int I;
	unsigned int U;

} GTM_ICM_IRQG_2_type;
#define GTM_ICM_IRQG_2	(*( GTM_ICM_IRQG_2_type *) 0xf0100608u)	/* TIM Interrupt Group 0 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned __sfrbit32 MCS0_CH0_IRQ   : 1;	/* MCS0 channel 0 interrupt */
		/* const */ unsigned __sfrbit32 MCS0_CH1_IRQ   : 1;	/* MCS0 channel 1 interrupt */
		/* const */ unsigned __sfrbit32 MCS0_CH2_IRQ   : 1;	/* MCS0 channel 2 interrupt */
		/* const */ unsigned __sfrbit32 MCS0_CH3_IRQ   : 1;	/* MCS0 channel 3 interrupt */
		/* const */ unsigned __sfrbit32 MCS0_CH4_IRQ   : 1;	/* MCS0 channel 4 interrupt */
		/* const */ unsigned __sfrbit32 MCS0_CH5_IRQ   : 1;	/* MCS0 channel 5 interrupt */
		/* const */ unsigned __sfrbit32 MCS0_CH6_IRQ   : 1;	/* MCS0 channel 6 interrupt */
		/* const */ unsigned __sfrbit32 MCS0_CH7_IRQ   : 1;	/* MCS0 channel 7 interrupt */
		/* const */ unsigned __sfrbit32 MCS1_CH0_IRQ   : 1;	/* MCS1 channel 0 interrupt */
		/* const */ unsigned __sfrbit32 MCS1_CH1_IRQ   : 1;	/* MCS1 channel 1 interrupt */
		/* const */ unsigned __sfrbit32 MCS1_CH2_IRQ   : 1;	/* MCS1 channel 2 interrupt */
		/* const */ unsigned __sfrbit32 MCS1_CH3_IRQ   : 1;	/* MCS1 channel 3 interrupt */
		/* const */ unsigned __sfrbit32 MCS1_CH4_IRQ   : 1;	/* MCS1 channel 4 interrupt */
		/* const */ unsigned __sfrbit32 MCS1_CH5_IRQ   : 1;	/* MCS1 channel 5 interrupt */
		/* const */ unsigned __sfrbit32 MCS1_CH6_IRQ   : 1;	/* MCS1 channel 6 interrupt */
		/* const */ unsigned __sfrbit32 MCS1_CH7_IRQ   : 1;	/* MCS1 channel 7 interrupt */
		/* const */ unsigned __sfrbit32 MCS2_CH0_IRQ   : 1;	/* MCS2 channel 0 interrupt */
		/* const */ unsigned __sfrbit32 MCS2_CH1_IRQ   : 1;	/* MCS2 channel 1 interrupt */
		/* const */ unsigned __sfrbit32 MCS2_CH2_IRQ   : 1;	/* MCS2 channel 2 interrupt */
		/* const */ unsigned __sfrbit32 MCS2_CH3_IRQ   : 1;	/* MCS2 channel 3 interrupt */
		/* const */ unsigned __sfrbit32 MCS2_CH4_IRQ   : 1;	/* MCS2 channel 4 interrupt */
		/* const */ unsigned __sfrbit32 MCS2_CH5_IRQ   : 1;	/* MCS2 channel 5 interrupt */
		/* const */ unsigned __sfrbit32 MCS2_CH6_IRQ   : 1;	/* MCS2 channel 6 interrupt */
		/* const */ unsigned __sfrbit32 MCS2_CH7_IRQ   : 1;	/* MCS2 channel 7 interrupt */
		/* const */ unsigned __sfrbit32 MCS3_CH0_IRQ   : 1;	/* MCS3 channel 0 interrupt */
		/* const */ unsigned __sfrbit32 MCS3_CH1_IRQ   : 1;	/* MCS3 channel 1 interrupt */
		/* const */ unsigned __sfrbit32 MCS3_CH2_IRQ   : 1;	/* MCS3 channel 2 interrupt */
		/* const */ unsigned __sfrbit32 MCS3_CH3_IRQ   : 1;	/* MCS3 channel 3 interrupt */
		/* const */ unsigned __sfrbit32 MCS3_CH4_IRQ   : 1;	/* MCS3 channel 4 interrupt */
		/* const */ unsigned __sfrbit32 MCS3_CH5_IRQ   : 1;	/* MCS3 channel 5 interrupt */
		/* const */ unsigned __sfrbit32 MCS3_CH6_IRQ   : 1;	/* MCS3 channel 6 interrupt */
		/* const */ unsigned __sfrbit32 MCS3_CH7_IRQ   : 1;	/* MCS3 channel 7 interrupt */
	} B;
	int I;
	unsigned int U;

} GTM_ICM_IRQG_4_type;
#define GTM_ICM_IRQG_4	(*( GTM_ICM_IRQG_4_type *) 0xf0100610u)	/* MCS Interrupt Group 0 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned __sfrbit32 TOM0_CH0_IRQ   : 1;	/* TOM0 channel 0 shared interrupt */
		/* const */ unsigned __sfrbit32 TOM0_CH1_IRQ   : 1;	/* TOM0 channel 1 shared interrupt */
		/* const */ unsigned __sfrbit32 TOM0_CH2_IRQ   : 1;	/* TOM0 channel 2 shared interrupt */
		/* const */ unsigned __sfrbit32 TOM0_CH3_IRQ   : 1;	/* TOM0 channel 3 shared interrupt */
		/* const */ unsigned __sfrbit32 TOM0_CH4_IRQ   : 1;	/* TOM0 channel 4 shared interrupt */
		/* const */ unsigned __sfrbit32 TOM0_CH5_IRQ   : 1;	/* TOM0 channel 5 shared interrupt */
		/* const */ unsigned __sfrbit32 TOM0_CH6_IRQ   : 1;	/* TOM0 channel 6 shared interrupt */
		/* const */ unsigned __sfrbit32 TOM0_CH7_IRQ   : 1;	/* TOM0 channel 7 shared interrupt */
		/* const */ unsigned __sfrbit32 TOM0_CH8_IRQ   : 1;	/* TOM0 channel 8 shared interrupt */
		/* const */ unsigned __sfrbit32 TOM0_CH9_IRQ   : 1;	/* TOM0 channel 9 shared interrupt */
		/* const */ unsigned __sfrbit32 TOM0_CH10_IRQ  : 1;	/* TOM0 channel 10 shared interrupt */
		/* const */ unsigned __sfrbit32 TOM0_CH11_IRQ  : 1;	/* TOM0 channel 11 shared interrupt */
		/* const */ unsigned __sfrbit32 TOM0_CH12_IRQ  : 1;	/* TOM0 channel 12 shared interrupt */
		/* const */ unsigned __sfrbit32 TOM0_CH13_IRQ  : 1;	/* TOM0 channel 13 shared interrupt */
		/* const */ unsigned __sfrbit32 TOM0_CH14_IRQ  : 1;	/* TOM0 channel 14 shared interrupt */
		/* const */ unsigned __sfrbit32 TOM0_CH15_IRQ  : 1;	/* TOM0 channel 15 shared interrupt */
		/* const */ unsigned __sfrbit32 TOM1_CH0_IRQ   : 1;	/* TOM1 channel 0 shared interrupt */
		/* const */ unsigned __sfrbit32 TOM1_CH1_IRQ   : 1;	/* TOM1 channel 1 shared interrupt */
		/* const */ unsigned __sfrbit32 TOM1_CH2_IRQ   : 1;	/* TOM1 channel 2 shared interrupt */
		/* const */ unsigned __sfrbit32 TOM1_CH3_IRQ   : 1;	/* TOM1 channel 3 shared interrupt */
		/* const */ unsigned __sfrbit32 TOM1_CH4_IRQ   : 1;	/* TOM1 channel 4 shared interrupt */
		/* const */ unsigned __sfrbit32 TOM1_CH5_IRQ   : 1;	/* TOM1 channel 5 shared interrupt */
		/* const */ unsigned __sfrbit32 TOM1_CH6_IRQ   : 1;	/* TOM1 channel 6 shared interrupt */
		/* const */ unsigned __sfrbit32 TOM1_CH7_IRQ   : 1;	/* TOM1 channel 7 shared interrupt */
		/* const */ unsigned __sfrbit32 TOM1_CH8_IRQ   : 1;	/* TOM1 channel 8 shared interrupt */
		/* const */ unsigned __sfrbit32 TOM1_CH9_IRQ   : 1;	/* TOM1 channel 9 shared interrupt */
		/* const */ unsigned __sfrbit32 TOM1_CH10_IRQ  : 1;	/* TOM1 channel 10 shared interrupt */
		/* const */ unsigned __sfrbit32 TOM1_CH11_IRQ  : 1;	/* TOM1 channel 11 shared interrupt */
		/* const */ unsigned __sfrbit32 TOM1_CH12_IRQ  : 1;	/* TOM1 channel 12 shared interrupt */
		/* const */ unsigned __sfrbit32 TOM1_CH13_IRQ  : 1;	/* TOM1 channel 13 shared interrupt */
		/* const */ unsigned __sfrbit32 TOM1_CH14_IRQ  : 1;	/* TOM1 channel 14 shared interrupt */
		/* const */ unsigned __sfrbit32 TOM1_CH15_IRQ  : 1;	/* TOM1 channel 15 shared interrupt */
	} B;
	int I;
	unsigned int U;

} GTM_ICM_IRQG_6_type;
#define GTM_ICM_IRQG_6	(*( GTM_ICM_IRQG_6_type *) 0xf0100618u)	/* TOM Interrupt Group 0 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned __sfrbit32 TOM2_CH0_IRQ   : 1;	/* TOM2 channel 0 shared interrupt */
		/* const */ unsigned __sfrbit32 TOM2_CH1_IRQ   : 1;	/* TOM2 channel 1 shared interrupt */
		/* const */ unsigned __sfrbit32 TOM2_CH2_IRQ   : 1;	/* TOM2 channel 2 shared interrupt */
		/* const */ unsigned __sfrbit32 TOM2_CH3_IRQ   : 1;	/* TOM2 channel 3 shared interrupt */
		/* const */ unsigned __sfrbit32 TOM2_CH4_IRQ   : 1;	/* TOM2 channel 4 shared interrupt */
		/* const */ unsigned __sfrbit32 TOM2_CH5_IRQ   : 1;	/* TOM2 channel 5 shared interrupt */
		/* const */ unsigned __sfrbit32 TOM2_CH6_IRQ   : 1;	/* TOM2 channel 6 shared interrupt */
		/* const */ unsigned __sfrbit32 TOM2_CH7_IRQ   : 1;	/* TOM2 channel 7 shared interrupt */
		/* const */ unsigned __sfrbit32 TOM2_CH8_IRQ   : 1;	/* TOM2 channel 8 shared interrupt */
		/* const */ unsigned __sfrbit32 TOM2_CH9_IRQ   : 1;	/* TOM2 channel 9 shared interrupt */
		/* const */ unsigned __sfrbit32 TOM2_CH10_IRQ  : 1;	/* TOM2 channel 10 shared interrupt */
		/* const */ unsigned __sfrbit32 TOM2_CH11_IRQ  : 1;	/* TOM2 channel 11 shared interrupt */
		/* const */ unsigned __sfrbit32 TOM2_CH12_IRQ  : 1;	/* TOM2 channel 12 shared interrupt */
		/* const */ unsigned __sfrbit32 TOM2_CH13_IRQ  : 1;	/* TOM2 channel 13 shared interrupt */
		/* const */ unsigned __sfrbit32 TOM2_CH14_IRQ  : 1;	/* TOM2 channel 14 shared interrupt */
		/* const */ unsigned __sfrbit32 TOM2_CH15_IRQ  : 1;	/* TOM2 channel 15 shared interrupt */
		/* const */ unsigned __sfrbit32 Reserved       : 16;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GTM_ICM_IRQG_7_type;
#define GTM_ICM_IRQG_7	(*( GTM_ICM_IRQG_7_type *) 0xf010061cu)	/* ITOM Interrupt Group 1 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned __sfrbit32 ATOM0_CH0_IRQ  : 1;	/* ATOM0 channel 0 shared interrupt */
		/* const */ unsigned __sfrbit32 ATOM0_CH1_IRQ  : 1;	/* ATOM0 channel 1 shared interrupt */
		/* const */ unsigned __sfrbit32 ATOM0_CH2_IRQ  : 1;	/* ATOM0 channel 2 shared interrupt */
		/* const */ unsigned __sfrbit32 ATOM0_CH3_IRQ  : 1;	/* ATOM0 channel 3 shared interrupt */
		/* const */ unsigned __sfrbit32 ATOM0_CH4_IRQ  : 1;	/* ATOM0 channel 4 shared interrupt */
		/* const */ unsigned __sfrbit32 ATOM0_CH5_IRQ  : 1;	/* ATOM0 channel 5 shared interrupt */
		/* const */ unsigned __sfrbit32 ATOM0_CH6_IRQ  : 1;	/* ATOM0 channel 6 shared interrupt */
		/* const */ unsigned __sfrbit32 ATOM0_CH7_IRQ  : 1;	/* ATOM0 channel 7 shared interrupt */
		/* const */ unsigned __sfrbit32 ATOM1_CH0_IRQ  : 1;	/* ATOM1 channel 0 shared interrupt */
		/* const */ unsigned __sfrbit32 ATOM1_CH1_IRQ  : 1;	/* ATOM1 channel 1 shared interrupt */
		/* const */ unsigned __sfrbit32 ATOM1_CH2_IRQ  : 1;	/* ATOM1 channel 2 shared interrupt */
		/* const */ unsigned __sfrbit32 ATOM1_CH3_IRQ  : 1;	/* ATOM1 channel 3 shared interrupt */
		/* const */ unsigned __sfrbit32 ATOM1_CH4_IRQ  : 1;	/* ATOM1 channel 4 shared interrupt */
		/* const */ unsigned __sfrbit32 ATOM1_CH5_IRQ  : 1;	/* ATOM1 channel 5 shared interrupt */
		/* const */ unsigned __sfrbit32 ATOM1_CH6_IRQ  : 1;	/* ATOM1 channel 6 shared interrupt */
		/* const */ unsigned __sfrbit32 ATOM1_CH7_IRQ  : 1;	/* ATOM1 channel 7 shared interrupt */
		/* const */ unsigned __sfrbit32 ATOM2_CH0_IRQ  : 1;	/* ATOM2 channel 0 shared interrupt */
		/* const */ unsigned __sfrbit32 ATOM2_CH1_IRQ  : 1;	/* ATOM2 channel 1 shared interrupt */
		/* const */ unsigned __sfrbit32 ATOM2_CH2_IRQ  : 1;	/* ATOM2 channel 2 shared interrupt */
		/* const */ unsigned __sfrbit32 ATOM2_CH3_IRQ  : 1;	/* ATOM2 channel 3 shared interrupt */
		/* const */ unsigned __sfrbit32 ATOM2_CH4_IRQ  : 1;	/* ATOM2 channel 4 shared interrupt */
		/* const */ unsigned __sfrbit32 ATOM2_CH5_IRQ  : 1;	/* ATOM2 channel 5 shared interrupt */
		/* const */ unsigned __sfrbit32 ATOM2_CH6_IRQ  : 1;	/* ATOM2 channel 6 shared interrupt */
		/* const */ unsigned __sfrbit32 ATOM2_CH7_IRQ  : 1;	/* ATOM2 channel 7 shared interrupt */
		/* const */ unsigned __sfrbit32 ATOM3_CH0_IRQ  : 1;	/* ATOM3 channel 0 shared interrupt */
		/* const */ unsigned __sfrbit32 ATOM3_CH1_IRQ  : 1;	/* ATOM3 channel 1 shared interrupt */
		/* const */ unsigned __sfrbit32 ATOM3_CH2_IRQ  : 1;	/* ATOM3 channel 2 shared interrupt */
		/* const */ unsigned __sfrbit32 ATOM3_CH3_IRQ  : 1;	/* ATOM3 channel 3 shared interrupt */
		/* const */ unsigned __sfrbit32 ATOM3_CH4_IRQ  : 1;	/* ATOM3 channel 4 shared interrupt */
		/* const */ unsigned __sfrbit32 ATOM3_CH5_IRQ  : 1;	/* ATOM3 channel 5 shared interrupt */
		/* const */ unsigned __sfrbit32 ATOM3_CH6_IRQ  : 1;	/* ATOM3 channel 6 shared interrupt */
		/* const */ unsigned __sfrbit32 ATOM3_CH7_IRQ  : 1;	/* ATOM3 channel 7 shared interrupt */
	} B;
	int I;
	unsigned int U;

} GTM_ICM_IRQG_9_type;
#define GTM_ICM_IRQG_9	(*( GTM_ICM_IRQG_9_type *) 0xf0100624u)	/* ATOM Interrupt Group 0 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned __sfrbit32 FIFO0_CH0_EIRQ : 1;	/* FIFO0 channel 0 error interrupt */
		/* const */ unsigned __sfrbit32 FIFO0_CH1_EIRQ : 1;	/* FIFO0 channel 1 shared interrupt */
		/* const */ unsigned __sfrbit32 FIFO0_CH2_EIRQ : 1;	/* FIFO0 channel 2 shared interrupt */
		/* const */ unsigned __sfrbit32 FIFO0_CH3_EIRQ : 1;	/* FIFO0 channel 3 shared interrupt */
		/* const */ unsigned __sfrbit32 FIFO0_CH4_EIRQ : 1;	/* FIFO0 channel 4 shared interrupt */
		/* const */ unsigned __sfrbit32 FIFO0_CH5_EIRQ : 1;	/* FIFO0 channel 5 shared interrupt */
		/* const */ unsigned __sfrbit32 FIFO0_CH6_EIRQ : 1;	/* FIFO0 channel 6 shared interrupt */
		/* const */ unsigned __sfrbit32 FIFO0_CH7_EIRQ : 1;	/* FIFO0 channel 7 shared interrupt */
		/* const */ unsigned __sfrbit32 Reserved       : 24;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GTM_ICM_IRQG_CEI0_type;
#define GTM_ICM_IRQG_CEI0	(*( GTM_ICM_IRQG_CEI0_type *) 0xf0100634u)	/* ICM Channel Error Interrupt 0 Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned __sfrbit32 TIM0_CH0_EIRQ  : 1;	/* TIM0 channel 0 error interrupt */
		/* const */ unsigned __sfrbit32 TIM0_CH1_EIRQ  : 1;	/* TIM0 channel 1 error interrupt */
		/* const */ unsigned __sfrbit32 TIM0_CH2_EIRQ  : 1;	/* TIM0 channel 2 error interrupt */
		/* const */ unsigned __sfrbit32 TIM0_CH3_EIRQ  : 1;	/* TIM0 channel 3 error interrupt */
		/* const */ unsigned __sfrbit32 TIM0_CH4_EIRQ  : 1;	/* TIM0 channel 4 error interrupt */
		/* const */ unsigned __sfrbit32 TIM0_CH5_EIRQ  : 1;	/* TIM0 channel 5 error interrupt */
		/* const */ unsigned __sfrbit32 TIM0_CH6_EIRQ  : 1;	/* TIM0 channel 6 error interrupt */
		/* const */ unsigned __sfrbit32 TIM0_CH7_EIRQ  : 1;	/* TIM0 channel 7 error interrupt */
		/* const */ unsigned __sfrbit32 TIM1_CH0_EIRQ  : 1;	/* TIM1 channel 0 error interrupt */
		/* const */ unsigned __sfrbit32 TIM1_CH1_EIRQ  : 1;	/* TIM1 channel 1 error interrupt */
		/* const */ unsigned __sfrbit32 TIM1_CH2_EIRQ  : 1;	/* TIM1 channel 2 error interrupt */
		/* const */ unsigned __sfrbit32 TIM1_CH3_EIRQ  : 1;	/* TIM1 channel 3 error interrupt */
		/* const */ unsigned __sfrbit32 TIM1_CH4_EIRQ  : 1;	/* TIM1 channel 4 error interrupt */
		/* const */ unsigned __sfrbit32 TIM1_CH5_EIRQ  : 1;	/* TIM1 channel 5 error interrupt */
		/* const */ unsigned __sfrbit32 TIM1_CH6_EIRQ  : 1;	/* TIM1 channel 6 error interrupt */
		/* const */ unsigned __sfrbit32 TIM1_CH7_EIRQ  : 1;	/* TIM1 channel 7 error interrupt */
		/* const */ unsigned __sfrbit32 TIM2_CH0_EIRQ  : 1;	/* TIM2 channel 0 error interrupt */
		/* const */ unsigned __sfrbit32 TIM2_CH1_EIRQ  : 1;	/* TIM2 channel 1 error interrupt */
		/* const */ unsigned __sfrbit32 TIM2_CH2_EIRQ  : 1;	/* TIM2 channel 2 error interrupt */
		/* const */ unsigned __sfrbit32 TIM2_CH3_EIRQ  : 1;	/* TIM2 channel 3 error interrupt */
		/* const */ unsigned __sfrbit32 TIM2_CH4_EIRQ  : 1;	/* TIM2 channel 4 error interrupt */
		/* const */ unsigned __sfrbit32 TIM2_CH5_EIRQ  : 1;	/* TIM2 channel 5 error interrupt */
		/* const */ unsigned __sfrbit32 TIM2_CH6_EIRQ  : 1;	/* TIM2 channel 6 error interrupt */
		/* const */ unsigned __sfrbit32 TIM2_CH7_EIRQ  : 1;	/* TIM2 channel 7 error interrupt */
		/* const */ unsigned __sfrbit32 TIM3_CH0_EIRQ  : 1;	/* TIM3 channel 0 error interrupt */
		/* const */ unsigned __sfrbit32 TIM3_CH1_EIRQ  : 1;	/* TIM3 channel 1 error interrupt */
		/* const */ unsigned __sfrbit32 TIM3_CH2_EIRQ  : 1;	/* TIM3 channel 2 error interrupt */
		/* const */ unsigned __sfrbit32 TIM3_CH3_EIRQ  : 1;	/* TIM3 channel 3 error interrupt */
		/* const */ unsigned __sfrbit32 TIM3_CH4_EIRQ  : 1;	/* TIM3 channel 4 error interrupt */
		/* const */ unsigned __sfrbit32 TIM3_CH5_IRQ   : 1;	/* TIM3 channel 5 error interrupt */
		/* const */ unsigned __sfrbit32 TIM3_CH6_EIRQ  : 1;	/* TIM3 channel 6 error interrupt */
		/* const */ unsigned __sfrbit32 TIM3_CH7_EIRQ  : 1;	/* TIM3 channel 7 error interrupt */
	} B;
	int I;
	unsigned int U;

} GTM_ICM_IRQG_CEI1_type;
#define GTM_ICM_IRQG_CEI1	(*( GTM_ICM_IRQG_CEI1_type *) 0xf0100638u)	/* ICM Channel Error Interrupt 1 Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned __sfrbit32 MCS0_CH0_EIRQ  : 1;	/* MCS0 channel 0 error interrupt */
		/* const */ unsigned __sfrbit32 MCS0_CH1_EIRQ  : 1;	/* MCS0 channel 1 error interrupt */
		/* const */ unsigned __sfrbit32 MCS0_CH2_EIRQ  : 1;	/* MCS0 channel 2 error interrupt */
		/* const */ unsigned __sfrbit32 MCS0_CH3_EIRQ  : 1;	/* MCS0 channel 3 error interrupt */
		/* const */ unsigned __sfrbit32 MCS0_CH4_EIRQ  : 1;	/* MCS0 channel 4 error interrupt */
		/* const */ unsigned __sfrbit32 MCS0_CH5_EIRQ  : 1;	/* MCS0 channel 5 error interrupt */
		/* const */ unsigned __sfrbit32 MCS0_CH6_EIRQ  : 1;	/* MCS0 channel 6 error interrupt */
		/* const */ unsigned __sfrbit32 MCS0_CH7_EIRQ  : 1;	/* MCS0 channel 7 error interrupt */
		/* const */ unsigned __sfrbit32 MCS1_CH0_EIRQ  : 1;	/* MCS1 channel 0 error interrupt */
		/* const */ unsigned __sfrbit32 MCS1_CH1_EIRQ  : 1;	/* MCS1 channel 1 error interrupt */
		/* const */ unsigned __sfrbit32 MCS1_CH2_EIRQ  : 1;	/* MCS1 channel 2 error interrupt */
		/* const */ unsigned __sfrbit32 MCS1_CH3_EIRQ  : 1;	/* MCS1 channel 3 error interrupt */
		/* const */ unsigned __sfrbit32 MCS1_CH4_EIRQ  : 1;	/* MCS1 channel 4 error interrupt */
		/* const */ unsigned __sfrbit32 MCS1_CH5_EIRQ  : 1;	/* MCS1 channel 5 error interrupt */
		/* const */ unsigned __sfrbit32 MCS1_CH6_EIRQ  : 1;	/* MCS1 channel 6 error interrupt */
		/* const */ unsigned __sfrbit32 MCS1_CH7_EIRQ  : 1;	/* MCS1 channel 7 error interrupt */
		/* const */ unsigned __sfrbit32 MCS2_CH0_EIRQ  : 1;	/* MCS2 channel 0 error interrupt */
		/* const */ unsigned __sfrbit32 MCS2_CH1_EIRQ  : 1;	/* MCS2 channel 1 error interrupt */
		/* const */ unsigned __sfrbit32 MCS2_CH2_EIRQ  : 1;	/* MCS2 channel 2 error interrupt */
		/* const */ unsigned __sfrbit32 MCS2_CH3_EIRQ  : 1;	/* MCS2 channel 3 error interrupt */
		/* const */ unsigned __sfrbit32 MCS2_CH4_EIRQ  : 1;	/* MCS2 channel 4 error interrupt */
		/* const */ unsigned __sfrbit32 MCS2_CH5_EIRQ  : 1;	/* MCS2 channel 5 error interrupt */
		/* const */ unsigned __sfrbit32 MCS2_CH6_EIRQ  : 1;	/* MCS2 channel 6 error interrupt */
		/* const */ unsigned __sfrbit32 MCS2_CH7_EIRQ  : 1;	/* MCS2 channel 7 error interrupt */
		/* const */ unsigned __sfrbit32 MCS3_CH0_EIRQ  : 1;	/* MCS3 channel 0 error interrupt */
		/* const */ unsigned __sfrbit32 MCS3_CH1_EIRQ  : 1;	/* MCS3 channel 1 error interrupt */
		/* const */ unsigned __sfrbit32 MCS3_CH2_EIRQ  : 1;	/* MCS3 channel 2 error interrupt */
		/* const */ unsigned __sfrbit32 MCS3_CH3_EIRQ  : 1;	/* MCS3 channel 3 error interrupt */
		/* const */ unsigned __sfrbit32 MCS3_CH4_EIRQ  : 1;	/* MCS3 channel 4 error interrupt */
		/* const */ unsigned __sfrbit32 MCS3_CH5_EIRQ  : 1;	/* MCS3 channel 5 error interrupt */
		/* const */ unsigned __sfrbit32 MCS3_CH6_EIRQ  : 1;	/* MCS3 channel 6 error interrupt */
		/* const */ unsigned __sfrbit32 MCS3_CH7_EIRQ  : 1;	/* MCS3 channel 7 error interrupt */
	} B;
	int I;
	unsigned int U;

} GTM_ICM_IRQG_CEI3_type;
#define GTM_ICM_IRQG_CEI3	(*( GTM_ICM_IRQG_CEI3_type *) 0xf0100640u)	/* ICM Channel Error Interrupt 3 Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned __sfrbit32 GTM_EIRQ       : 1;	/* GTM Error interrupt request */
		/* const */ unsigned __sfrbit32 BRC_EIRQ       : 1;	/* BRC error interrupt */
		/* const */ unsigned __sfrbit32 FIFO0_EIRQ     : 1;	/* FIFO0 error interrupt */
		/* const */ unsigned __sfrbit32 Reserved       : 1;	/* Reserved */
		/* const */ unsigned __sfrbit32 TIM0_EIRQ      : 1;	/* TIM0 error interrupt */
		/* const */ unsigned __sfrbit32 TIM1_EIRQ      : 1;	/* TIM1 error interrupt */
		/* const */ unsigned __sfrbit32 TIM2_EIRQ      : 1;	/* TIM2 error interrupt */
		/* const */ unsigned __sfrbit32 TIM3_EIRQ      : 1;	/* TIM3 error interrupt */
		/* const */ unsigned __sfrbit32 Reserved_9     : 4;	/* Reserved */
		/* const */ unsigned __sfrbit32 MCS0_EIRQ      : 1;	/* MCS0 error interrupt */
		/* const */ unsigned __sfrbit32 MCS1_EIRQ      : 1;	/* MCS1 error interrupt */
		/* const */ unsigned __sfrbit32 MCS2_EIRQ      : 1;	/* MCS2 error interrupt */
		/* const */ unsigned __sfrbit32 MCS3_EIRQ      : 1;	/* MCS3 error interrupt */
		/* const */ unsigned __sfrbit32 Reserved_14    : 4;	/* Reserved */
		/* const */ unsigned __sfrbit32 SPE0_EIRQ      : 1;	/* SPE0 error interrupt */
		/* const */ unsigned __sfrbit32 SPE1_EIRQ      : 1;	/* SPE1 error interrupt */
		/* const */ unsigned __sfrbit32 Reserved_17    : 2;	/* Reserved */
		/* const */ unsigned __sfrbit32 CMP_EIRQ       : 1;	/* CMP error interrupt */
		/* const */ unsigned __sfrbit32 DPLL_EIRQ      : 1;	/* DPLL error interrupt */
		/* const */ unsigned __sfrbit32 Reserved_20    : 6;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GTM_ICM_IRQG_MEI_type;
#define GTM_ICM_IRQG_MEI	(*( GTM_ICM_IRQG_MEI_type *) 0xf0100630u)	/* ICM Module Error Interrupt Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 AEI_TO_XPT_IRQ_EN: 1;	/* AEI_TO_XPT_IRQ interrupt enable. */
		unsigned __sfrbit32 AEI_USP_ADDR_IRQ_EN: 1;	/* AEI_USP_ADDR_IRQ interrupt enable. */
		unsigned __sfrbit32 AEI_IM_ADDR_IRQ_EN: 1;	/* AEI_IM_ADDR_IRQ interrupt enable. */
		unsigned __sfrbit32 AEI_USP_BE_IRQ_EN: 1;	/* AEI_USP_BE_IRQ interrupt enable. */
		/* const */ unsigned __sfrbit32 Reserved       : 28;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GTM_IRQ_EN_type;
#define GTM_IRQ_EN	(*( GTM_IRQ_EN_type *) 0xf0100014u)	/* GTM Interrupt Enable Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 TRG_AEI_TO_XPT : 1;	/* Trigger AEI_TO_XPT_IRQ interrupt by software. */
		unsigned __sfrbit32 TRG_AEI_USP_ADDR: 1;	/* Trigger AEI_USP_ADDR_IRQ interrupt by software. */
		unsigned __sfrbit32 TRG_AEI_IM_ADDR: 1;	/* Trigger AEI_IM_ADDR_IRQ interrupt by software. */
		unsigned __sfrbit32 TRG_AEI_USP_BE : 1;	/* Trigger AEI_USP_BE_IRQ interrupt by software. */
		/* const */ unsigned __sfrbit32 Reserved       : 28;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GTM_IRQ_FORCINT_type;
#define GTM_IRQ_FORCINT	(*( GTM_IRQ_FORCINT_type *) 0xf0100018u)	/* GTM Software Interrupt Generation Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 IRQ_MODE       : 2;	/* Interrupt strategy mode selection for the AEI timeout and address monitoring interrupts */
		/* const */ unsigned __sfrbit32 Reserved       : 30;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GTM_IRQ_MODE_type;
#define GTM_IRQ_MODE	(*( GTM_IRQ_MODE_type *) 0xf010001cu)	/* GTM Top Level Interrupts Mode Selection */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 AEI_TO_XPT     : 1;	/* AEI Timeout exception occurred */
		unsigned __sfrbit32 AEI_USP_ADDR   : 1;	/* AEI Unsupported address interrupt */
		unsigned __sfrbit32 AEI_IM_ADDR    : 1;	/* AEI Illegal Module address interrupt */
		unsigned __sfrbit32 AEI_USP_BE     : 1;	/* AEI Unsupported byte enable interrupt */
		/* const */ unsigned __sfrbit32 Reserved       : 28;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GTM_IRQ_NOTIFY_type;
#define GTM_IRQ_NOTIFY	(*( GTM_IRQ_NOTIFY_type *) 0xf0100010u)	/* GTM Interrupt Notification Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 RST            : 1;	/* Kernel Reset */
		unsigned __sfrbit32 RSTSTAT        : 1;	/* Kernel Reset Status */
		unsigned __sfrbit32                : 30;
	} B;
	int I;
	unsigned int U;

} GTM_KRST0_type;
#define GTM_KRST0	(*( GTM_KRST0_type *) 0xf019fdf4u)	/* Kernel Reset Register 0 */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 RST            : 1;	/* Kernel Reset */
		unsigned __sfrbit32                : 31;
	} B;
	int I;
	unsigned int U;

} GTM_KRST1_type;
#define GTM_KRST1	(*( GTM_KRST1_type *) 0xf019fdf0u)	/* Kernel Reset Register 1 */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 CLR            : 1;	/* Kernel Reset Status Clear */
		unsigned __sfrbit32                : 31;
	} B;
	int I;
	unsigned int U;

} GTM_KRSTCLR_type;
#define GTM_KRSTCLR	(*( GTM_KRSTCLR_type *) 0xf019fdecu)	/* Kernel Reset Status Clear Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 TSEL           : 1;	/* TRIGGER signal output select. */
		unsigned __sfrbit32 SSL            : 3;	/* STATE signal output select. */
		unsigned __sfrbit32 LSEL           : 1;	/* TIM0_IN6 input level selection */
		/* const */ unsigned __sfrbit32 Reserved       : 11;	/* Reserved */
		unsigned __sfrbit32 TSPP0_EN       : 1;	/* Enable of TSPP0 subunit */
		unsigned __sfrbit32 TSPP0_DLD      : 1;	/* DIR level definition bit */
		/* const */ unsigned __sfrbit32 Reserved_7     : 2;	/* Reserved */
		unsigned __sfrbit32 TSPP0_I0V      : 1;	/* Disable of TSPP0 TIM0_CHx(48) input line. */
		unsigned __sfrbit32 TSPP0_I1V      : 1;	/* Disable of TSPP0 TIM0_CHy(48) input line. */
		unsigned __sfrbit32 TSPP0_I2V      : 1;	/* Disable of TSPP0 TIM0_CHz(48) input line. */
		/* const */ unsigned __sfrbit32 Reserved_11    : 1;	/* Reserved */
		unsigned __sfrbit32 TSPP1_EN       : 1;	/* Enable of TSPP1 subunit */
		unsigned __sfrbit32 TSPP1_DLD      : 1;	/* DIR level definition bit */
		/* const */ unsigned __sfrbit32 Reserved_14    : 2;	/* Reserved */
		unsigned __sfrbit32 TSPP1_I0V      : 1;	/* Disable of TSPP1 TIM0_CHx(48) input line */
		unsigned __sfrbit32 TSPP1_I1V      : 1;	/* Disable of TSPP1 TIM0_CHy(48) input line */
		unsigned __sfrbit32 TSPP1_I2V      : 1;	/* Disable of TSPP1 TIM0_CHz(48) input line. */
		/* const */ unsigned __sfrbit32 Reserved_18    : 1;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GTM_MAP_CTRL_type;
#define GTM_MAP_CTRL	(*( GTM_MAP_CTRL_type *) 0xf0100f00u)	/* MAP Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 MEM0           : 2;	/* Configure Memory pages for MCS-instance MCS0 */
		unsigned __sfrbit32 MEM1           : 2;	/* Configure Memory pages for MCS-instance MCS1 */
		unsigned __sfrbit32 MEM2           : 2;	/* Configure Memory pages for MCS-instance MCS2 */
		unsigned __sfrbit32 MEM3           : 2;	/* Configure Memory pages for MCS-instance MCS3 */
		/* const */ unsigned __sfrbit32 Reserved       : 24;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GTM_MCFG_CTRL_type;
#define GTM_MCFG_CTRL	(*( GTM_MCFG_CTRL_type *) 0xf0100f40u)	/* Memory Layout Configuration Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned __sfrbit32 ACB0           : 1;	/* ARU Control bit 0 */
		/* const */ unsigned __sfrbit32 ACB1           : 1;	/* ARU Control bit 1 */
		/* const */ unsigned __sfrbit32 ACB2           : 1;	/* ARU Control bit 2 */
		/* const */ unsigned __sfrbit32 ACB3           : 1;	/* ARU Control bit 3 */
		/* const */ unsigned __sfrbit32 ACB4           : 1;	/* ARU Control bit 4 */
		/* const */ unsigned __sfrbit32 Reserved       : 27;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GTM_MCS0_CH0_ACB_type;
#define GTM_MCS0_CH0_ACB	(*( GTM_MCS0_CH0_ACB_type *) 0xf0130024u)	/* MCS0 Channel ACB Register */
#define GTM_MCS0_CH1_ACB	(*( GTM_MCS0_CH0_ACB_type *) 0xf01300a4u)	/* MCS0 Channel ACB Register */
#define GTM_MCS0_CH2_ACB	(*( GTM_MCS0_CH0_ACB_type *) 0xf0130124u)	/* MCS0 Channel ACB Register */
#define GTM_MCS0_CH3_ACB	(*( GTM_MCS0_CH0_ACB_type *) 0xf01301a4u)	/* MCS0 Channel ACB Register */
#define GTM_MCS0_CH4_ACB	(*( GTM_MCS0_CH0_ACB_type *) 0xf0130224u)	/* MCS0 Channel ACB Register */
#define GTM_MCS0_CH5_ACB	(*( GTM_MCS0_CH0_ACB_type *) 0xf01302a4u)	/* MCS0 Channel ACB Register */
#define GTM_MCS0_CH6_ACB	(*( GTM_MCS0_CH0_ACB_type *) 0xf0130324u)	/* MCS0 Channel ACB Register */
#define GTM_MCS0_CH7_ACB	(*( GTM_MCS0_CH0_ACB_type *) 0xf01303a4u)	/* MCS0 Channel ACB Register */
#define GTM_MCS1_CH0_ACB	(*( GTM_MCS0_CH0_ACB_type *) 0xf0131024u)	/* MCS1 Channel ACB Register */
#define GTM_MCS1_CH1_ACB	(*( GTM_MCS0_CH0_ACB_type *) 0xf01310a4u)	/* MCS1 Channel ACB Register */
#define GTM_MCS1_CH2_ACB	(*( GTM_MCS0_CH0_ACB_type *) 0xf0131124u)	/* MCS1 Channel ACB Register */
#define GTM_MCS1_CH3_ACB	(*( GTM_MCS0_CH0_ACB_type *) 0xf01311a4u)	/* MCS1 Channel ACB Register */
#define GTM_MCS1_CH4_ACB	(*( GTM_MCS0_CH0_ACB_type *) 0xf0131224u)	/* MCS1 Channel ACB Register */
#define GTM_MCS1_CH5_ACB	(*( GTM_MCS0_CH0_ACB_type *) 0xf01312a4u)	/* MCS1 Channel ACB Register */
#define GTM_MCS1_CH6_ACB	(*( GTM_MCS0_CH0_ACB_type *) 0xf0131324u)	/* MCS1 Channel ACB Register */
#define GTM_MCS1_CH7_ACB	(*( GTM_MCS0_CH0_ACB_type *) 0xf01313a4u)	/* MCS1 Channel ACB Register */
#define GTM_MCS2_CH0_ACB	(*( GTM_MCS0_CH0_ACB_type *) 0xf0132024u)	/* MCS2 Channel ACB Register */
#define GTM_MCS2_CH1_ACB	(*( GTM_MCS0_CH0_ACB_type *) 0xf01320a4u)	/* MCS2 Channel ACB Register */
#define GTM_MCS2_CH2_ACB	(*( GTM_MCS0_CH0_ACB_type *) 0xf0132124u)	/* MCS2 Channel ACB Register */
#define GTM_MCS2_CH3_ACB	(*( GTM_MCS0_CH0_ACB_type *) 0xf01321a4u)	/* MCS2 Channel ACB Register */
#define GTM_MCS2_CH4_ACB	(*( GTM_MCS0_CH0_ACB_type *) 0xf0132224u)	/* MCS2 Channel ACB Register */
#define GTM_MCS2_CH5_ACB	(*( GTM_MCS0_CH0_ACB_type *) 0xf01322a4u)	/* MCS2 Channel ACB Register */
#define GTM_MCS2_CH6_ACB	(*( GTM_MCS0_CH0_ACB_type *) 0xf0132324u)	/* MCS2 Channel ACB Register */
#define GTM_MCS2_CH7_ACB	(*( GTM_MCS0_CH0_ACB_type *) 0xf01323a4u)	/* MCS2 Channel ACB Register */
#define GTM_MCS3_CH0_ACB	(*( GTM_MCS0_CH0_ACB_type *) 0xf0133024u)	/* MCS3 Channel ACB Register */
#define GTM_MCS3_CH1_ACB	(*( GTM_MCS0_CH0_ACB_type *) 0xf01330a4u)	/* MCS3 Channel ACB Register */
#define GTM_MCS3_CH2_ACB	(*( GTM_MCS0_CH0_ACB_type *) 0xf0133124u)	/* MCS3 Channel ACB Register */
#define GTM_MCS3_CH3_ACB	(*( GTM_MCS0_CH0_ACB_type *) 0xf01331a4u)	/* MCS3 Channel ACB Register */
#define GTM_MCS3_CH4_ACB	(*( GTM_MCS0_CH0_ACB_type *) 0xf0133224u)	/* MCS3 Channel ACB Register */
#define GTM_MCS3_CH5_ACB	(*( GTM_MCS0_CH0_ACB_type *) 0xf01332a4u)	/* MCS3 Channel ACB Register */
#define GTM_MCS3_CH6_ACB	(*( GTM_MCS0_CH0_ACB_type *) 0xf0133324u)	/* MCS3 Channel ACB Register */
#define GTM_MCS3_CH7_ACB	(*( GTM_MCS0_CH0_ACB_type *) 0xf01333a4u)	/* MCS3 Channel ACB Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 EN             : 1;	/* Enable MCS-channel */
		/* const */ unsigned __sfrbit32 IRQ            : 1;	/* Interrupt state */
		/* const */ unsigned __sfrbit32 ERR            : 1;	/* Error state */
		/* const */ unsigned __sfrbit32 Reserved       : 1;	/* Reserved */
		/* const */ unsigned __sfrbit32 CY             : 1;	/* Carry bit state */
		/* const */ unsigned __sfrbit32 Z              : 1;	/* Zero bit state */
		/* const */ unsigned __sfrbit32 V              : 1;	/* Overflow bit state */
		/* const */ unsigned __sfrbit32 N              : 1;	/* Negative bit state */
		/* const */ unsigned __sfrbit32 CAT            : 1;	/* Cancel ARU transfer state */
		/* const */ unsigned __sfrbit32 CWT            : 1;	/* Cancel WURM instruction state */
		/* const */ unsigned __sfrbit32 Reserved_11    : 6;	/* Reserved */
		/* const */ unsigned __sfrbit32 SP_CNT         : 3;	/* Stack pointer counter value */
		/* const */ unsigned __sfrbit32 Reserved_13    : 13;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GTM_MCS0_CH0_CTRL_type;
#define GTM_MCS0_CH0_CTRL	(*( GTM_MCS0_CH0_CTRL_type *) 0xf0130020u)	/* MCS0 Channel Control Register */
#define GTM_MCS0_CH1_CTRL	(*( GTM_MCS0_CH0_CTRL_type *) 0xf01300a0u)	/* MCS0 Channel Control Register */
#define GTM_MCS0_CH2_CTRL	(*( GTM_MCS0_CH0_CTRL_type *) 0xf0130120u)	/* MCS0 Channel Control Register */
#define GTM_MCS0_CH3_CTRL	(*( GTM_MCS0_CH0_CTRL_type *) 0xf01301a0u)	/* MCS0 Channel Control Register */
#define GTM_MCS0_CH4_CTRL	(*( GTM_MCS0_CH0_CTRL_type *) 0xf0130220u)	/* MCS0 Channel Control Register */
#define GTM_MCS0_CH5_CTRL	(*( GTM_MCS0_CH0_CTRL_type *) 0xf01302a0u)	/* MCS0 Channel Control Register */
#define GTM_MCS0_CH6_CTRL	(*( GTM_MCS0_CH0_CTRL_type *) 0xf0130320u)	/* MCS0 Channel Control Register */
#define GTM_MCS0_CH7_CTRL	(*( GTM_MCS0_CH0_CTRL_type *) 0xf01303a0u)	/* MCS0 Channel Control Register */
#define GTM_MCS1_CH0_CTRL	(*( GTM_MCS0_CH0_CTRL_type *) 0xf0131020u)	/* MCS1 Channel Control Register */
#define GTM_MCS1_CH1_CTRL	(*( GTM_MCS0_CH0_CTRL_type *) 0xf01310a0u)	/* MCS1 Channel Control Register */
#define GTM_MCS1_CH2_CTRL	(*( GTM_MCS0_CH0_CTRL_type *) 0xf0131120u)	/* MCS1 Channel Control Register */
#define GTM_MCS1_CH3_CTRL	(*( GTM_MCS0_CH0_CTRL_type *) 0xf01311a0u)	/* MCS1 Channel Control Register */
#define GTM_MCS1_CH4_CTRL	(*( GTM_MCS0_CH0_CTRL_type *) 0xf0131220u)	/* MCS1 Channel Control Register */
#define GTM_MCS1_CH5_CTRL	(*( GTM_MCS0_CH0_CTRL_type *) 0xf01312a0u)	/* MCS1 Channel Control Register */
#define GTM_MCS1_CH6_CTRL	(*( GTM_MCS0_CH0_CTRL_type *) 0xf0131320u)	/* MCS1 Channel Control Register */
#define GTM_MCS1_CH7_CTRL	(*( GTM_MCS0_CH0_CTRL_type *) 0xf01313a0u)	/* MCS1 Channel Control Register */
#define GTM_MCS2_CH0_CTRL	(*( GTM_MCS0_CH0_CTRL_type *) 0xf0132020u)	/* MCS2 Channel Control Register */
#define GTM_MCS2_CH1_CTRL	(*( GTM_MCS0_CH0_CTRL_type *) 0xf01320a0u)	/* MCS2 Channel Control Register */
#define GTM_MCS2_CH2_CTRL	(*( GTM_MCS0_CH0_CTRL_type *) 0xf0132120u)	/* MCS2 Channel Control Register */
#define GTM_MCS2_CH3_CTRL	(*( GTM_MCS0_CH0_CTRL_type *) 0xf01321a0u)	/* MCS2 Channel Control Register */
#define GTM_MCS2_CH4_CTRL	(*( GTM_MCS0_CH0_CTRL_type *) 0xf0132220u)	/* MCS2 Channel Control Register */
#define GTM_MCS2_CH5_CTRL	(*( GTM_MCS0_CH0_CTRL_type *) 0xf01322a0u)	/* MCS2 Channel Control Register */
#define GTM_MCS2_CH6_CTRL	(*( GTM_MCS0_CH0_CTRL_type *) 0xf0132320u)	/* MCS2 Channel Control Register */
#define GTM_MCS2_CH7_CTRL	(*( GTM_MCS0_CH0_CTRL_type *) 0xf01323a0u)	/* MCS2 Channel Control Register */
#define GTM_MCS3_CH0_CTRL	(*( GTM_MCS0_CH0_CTRL_type *) 0xf0133020u)	/* MCS3 Channel Control Register */
#define GTM_MCS3_CH1_CTRL	(*( GTM_MCS0_CH0_CTRL_type *) 0xf01330a0u)	/* MCS3 Channel Control Register */
#define GTM_MCS3_CH2_CTRL	(*( GTM_MCS0_CH0_CTRL_type *) 0xf0133120u)	/* MCS3 Channel Control Register */
#define GTM_MCS3_CH3_CTRL	(*( GTM_MCS0_CH0_CTRL_type *) 0xf01331a0u)	/* MCS3 Channel Control Register */
#define GTM_MCS3_CH4_CTRL	(*( GTM_MCS0_CH0_CTRL_type *) 0xf0133220u)	/* MCS3 Channel Control Register */
#define GTM_MCS3_CH5_CTRL	(*( GTM_MCS0_CH0_CTRL_type *) 0xf01332a0u)	/* MCS3 Channel Control Register */
#define GTM_MCS3_CH6_CTRL	(*( GTM_MCS0_CH0_CTRL_type *) 0xf0133320u)	/* MCS3 Channel Control Register */
#define GTM_MCS3_CH7_CTRL	(*( GTM_MCS0_CH0_CTRL_type *) 0xf01333a0u)	/* MCS3 Channel Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 MCS_EIRQ_EN    : 1;	/* MCS channel x MCS_EIRQ error interrupt enable */
		unsigned __sfrbit32 STK_ERR_EIRQ_EN: 1;	/* MCS channel x STK_ERR_IRQ error interrupt enable */
		unsigned __sfrbit32 MEM_ERR_EIRQ_EN: 1;	/* MCS channel x MEM_ERR_EIRQ error interrupt enable */
		/* const */ unsigned __sfrbit32 Reserved       : 29;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GTM_MCS0_CH0_EIRQ_EN_type;
#define GTM_MCS0_CH0_EIRQ_EN	(*( GTM_MCS0_CH0_EIRQ_EN_type *) 0xf0130054u)	/* MCS0_Channel 0 Error Interrupt Enable Register */
#define GTM_MCS0_CH1_EIRQ_EN	(*( GTM_MCS0_CH0_EIRQ_EN_type *) 0xf01300d4u)	/* MCS0_Channel 1 Error Interrupt Enable Register */
#define GTM_MCS0_CH2_EIRQ_EN	(*( GTM_MCS0_CH0_EIRQ_EN_type *) 0xf0130154u)	/* MCS0_Channel 2 Error Interrupt Enable Register */
#define GTM_MCS0_CH3_EIRQ_EN	(*( GTM_MCS0_CH0_EIRQ_EN_type *) 0xf01301d4u)	/* MCS0_Channel 3 Error Interrupt Enable Register */
#define GTM_MCS0_CH4_EIRQ_EN	(*( GTM_MCS0_CH0_EIRQ_EN_type *) 0xf0130254u)	/* MCS0_Channel 4 Error Interrupt Enable Register */
#define GTM_MCS0_CH5_EIRQ_EN	(*( GTM_MCS0_CH0_EIRQ_EN_type *) 0xf01302d4u)	/* MCS0_Channel 5 Error Interrupt Enable Register */
#define GTM_MCS0_CH6_EIRQ_EN	(*( GTM_MCS0_CH0_EIRQ_EN_type *) 0xf0130354u)	/* MCS0_Channel 6 Error Interrupt Enable Register */
#define GTM_MCS0_CH7_EIRQ_EN	(*( GTM_MCS0_CH0_EIRQ_EN_type *) 0xf01303d4u)	/* MCS0_Channel 7 Error Interrupt Enable Register */
#define GTM_MCS1_CH0_EIRQ_EN	(*( GTM_MCS0_CH0_EIRQ_EN_type *) 0xf0131054u)	/* MCS1_Channel 0 Error Interrupt Enable Register */
#define GTM_MCS1_CH1_EIRQ_EN	(*( GTM_MCS0_CH0_EIRQ_EN_type *) 0xf01310d4u)	/* MCS1_Channel 1 Error Interrupt Enable Register */
#define GTM_MCS1_CH2_EIRQ_EN	(*( GTM_MCS0_CH0_EIRQ_EN_type *) 0xf0131154u)	/* MCS1_Channel 2 Error Interrupt Enable Register */
#define GTM_MCS1_CH3_EIRQ_EN	(*( GTM_MCS0_CH0_EIRQ_EN_type *) 0xf01311d4u)	/* MCS1_Channel 3 Error Interrupt Enable Register */
#define GTM_MCS1_CH4_EIRQ_EN	(*( GTM_MCS0_CH0_EIRQ_EN_type *) 0xf0131254u)	/* MCS1_Channel 4 Error Interrupt Enable Register */
#define GTM_MCS1_CH5_EIRQ_EN	(*( GTM_MCS0_CH0_EIRQ_EN_type *) 0xf01312d4u)	/* MCS1_Channel 5 Error Interrupt Enable Register */
#define GTM_MCS1_CH6_EIRQ_EN	(*( GTM_MCS0_CH0_EIRQ_EN_type *) 0xf0131354u)	/* MCS1_Channel 6 Error Interrupt Enable Register */
#define GTM_MCS1_CH7_EIRQ_EN	(*( GTM_MCS0_CH0_EIRQ_EN_type *) 0xf01313d4u)	/* MCS1_Channel 7 Error Interrupt Enable Register */
#define GTM_MCS2_CH0_EIRQ_EN	(*( GTM_MCS0_CH0_EIRQ_EN_type *) 0xf0132054u)	/* MCS2_Channel 0 Error Interrupt Enable Register */
#define GTM_MCS2_CH1_EIRQ_EN	(*( GTM_MCS0_CH0_EIRQ_EN_type *) 0xf01320d4u)	/* MCS2_Channel 1 Error Interrupt Enable Register */
#define GTM_MCS2_CH2_EIRQ_EN	(*( GTM_MCS0_CH0_EIRQ_EN_type *) 0xf0132154u)	/* MCS2_Channel 2 Error Interrupt Enable Register */
#define GTM_MCS2_CH3_EIRQ_EN	(*( GTM_MCS0_CH0_EIRQ_EN_type *) 0xf01321d4u)	/* MCS2_Channel 3 Error Interrupt Enable Register */
#define GTM_MCS2_CH4_EIRQ_EN	(*( GTM_MCS0_CH0_EIRQ_EN_type *) 0xf0132254u)	/* MCS2_Channel 4 Error Interrupt Enable Register */
#define GTM_MCS2_CH5_EIRQ_EN	(*( GTM_MCS0_CH0_EIRQ_EN_type *) 0xf01322d4u)	/* MCS2_Channel 5 Error Interrupt Enable Register */
#define GTM_MCS2_CH6_EIRQ_EN	(*( GTM_MCS0_CH0_EIRQ_EN_type *) 0xf0132354u)	/* MCS2_Channel 6 Error Interrupt Enable Register */
#define GTM_MCS2_CH7_EIRQ_EN	(*( GTM_MCS0_CH0_EIRQ_EN_type *) 0xf01323d4u)	/* MCS2_Channel 7 Error Interrupt Enable Register */
#define GTM_MCS3_CH0_EIRQ_EN	(*( GTM_MCS0_CH0_EIRQ_EN_type *) 0xf0133054u)	/* MCS3_Channel 0 Error Interrupt Enable Register */
#define GTM_MCS3_CH1_EIRQ_EN	(*( GTM_MCS0_CH0_EIRQ_EN_type *) 0xf01330d4u)	/* MCS3_Channel 1 Error Interrupt Enable Register */
#define GTM_MCS3_CH2_EIRQ_EN	(*( GTM_MCS0_CH0_EIRQ_EN_type *) 0xf0133154u)	/* MCS3_Channel 2 Error Interrupt Enable Register */
#define GTM_MCS3_CH3_EIRQ_EN	(*( GTM_MCS0_CH0_EIRQ_EN_type *) 0xf01331d4u)	/* MCS3_Channel 3 Error Interrupt Enable Register */
#define GTM_MCS3_CH4_EIRQ_EN	(*( GTM_MCS0_CH0_EIRQ_EN_type *) 0xf0133254u)	/* MCS3_Channel 4 Error Interrupt Enable Register */
#define GTM_MCS3_CH5_EIRQ_EN	(*( GTM_MCS0_CH0_EIRQ_EN_type *) 0xf01332d4u)	/* MCS3_Channel 5 Error Interrupt Enable Register */
#define GTM_MCS3_CH6_EIRQ_EN	(*( GTM_MCS0_CH0_EIRQ_EN_type *) 0xf0133354u)	/* MCS3_Channel 6 Error Interrupt Enable Register */
#define GTM_MCS3_CH7_EIRQ_EN	(*( GTM_MCS0_CH0_EIRQ_EN_type *) 0xf01333d4u)	/* MCS3_Channel 7 Error Interrupt Enable Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 MCS_IRQ_EN     : 1;	/* MCS channel x MCS_IRQ interrupt enable */
		unsigned __sfrbit32 STK_ERR_IRQ_EN : 1;	/* MCS channel x STK_ERR_IRQ interrupt enable */
		unsigned __sfrbit32 MEM_ERR_IRQ_EN : 1;	/* MCS channel x MEM_ERR_IRQ interrupt enable */
		/* const */ unsigned __sfrbit32 Reserved       : 29;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GTM_MCS0_CH0_IRQ_EN_type;
#define GTM_MCS0_CH0_IRQ_EN	(*( GTM_MCS0_CH0_IRQ_EN_type *) 0xf0130048u)	/* MCS0 Channel 0 Interrupt Enable Register */
#define GTM_MCS0_CH1_IRQ_EN	(*( GTM_MCS0_CH0_IRQ_EN_type *) 0xf01300c8u)	/* MCS0 Channel 1 Interrupt Enable Register */
#define GTM_MCS0_CH2_IRQ_EN	(*( GTM_MCS0_CH0_IRQ_EN_type *) 0xf0130148u)	/* MCS0 Channel 2 Interrupt Enable Register */
#define GTM_MCS0_CH3_IRQ_EN	(*( GTM_MCS0_CH0_IRQ_EN_type *) 0xf01301c8u)	/* MCS0 Channel 3 Interrupt Enable Register */
#define GTM_MCS0_CH4_IRQ_EN	(*( GTM_MCS0_CH0_IRQ_EN_type *) 0xf0130248u)	/* MCS0 Channel 4 Interrupt Enable Register */
#define GTM_MCS0_CH5_IRQ_EN	(*( GTM_MCS0_CH0_IRQ_EN_type *) 0xf01302c8u)	/* MCS0 Channel 5 Interrupt Enable Register */
#define GTM_MCS0_CH6_IRQ_EN	(*( GTM_MCS0_CH0_IRQ_EN_type *) 0xf0130348u)	/* MCS0 Channel 6 Interrupt Enable Register */
#define GTM_MCS0_CH7_IRQ_EN	(*( GTM_MCS0_CH0_IRQ_EN_type *) 0xf01303c8u)	/* MCS0 Channel 7 Interrupt Enable Register */
#define GTM_MCS1_CH0_IRQ_EN	(*( GTM_MCS0_CH0_IRQ_EN_type *) 0xf0131048u)	/* MCS1 Channel 0 Interrupt Enable Register */
#define GTM_MCS1_CH1_IRQ_EN	(*( GTM_MCS0_CH0_IRQ_EN_type *) 0xf01310c8u)	/* MCS1 Channel 1 Interrupt Enable Register */
#define GTM_MCS1_CH2_IRQ_EN	(*( GTM_MCS0_CH0_IRQ_EN_type *) 0xf0131148u)	/* MCS1 Channel 2 Interrupt Enable Register */
#define GTM_MCS1_CH3_IRQ_EN	(*( GTM_MCS0_CH0_IRQ_EN_type *) 0xf01311c8u)	/* MCS1 Channel 3 Interrupt Enable Register */
#define GTM_MCS1_CH4_IRQ_EN	(*( GTM_MCS0_CH0_IRQ_EN_type *) 0xf0131248u)	/* MCS1 Channel 4 Interrupt Enable Register */
#define GTM_MCS1_CH5_IRQ_EN	(*( GTM_MCS0_CH0_IRQ_EN_type *) 0xf01312c8u)	/* MCS1 Channel 5 Interrupt Enable Register */
#define GTM_MCS1_CH6_IRQ_EN	(*( GTM_MCS0_CH0_IRQ_EN_type *) 0xf0131348u)	/* MCS1 Channel 6 Interrupt Enable Register */
#define GTM_MCS1_CH7_IRQ_EN	(*( GTM_MCS0_CH0_IRQ_EN_type *) 0xf01313c8u)	/* MCS1 Channel 7 Interrupt Enable Register */
#define GTM_MCS2_CH0_IRQ_EN	(*( GTM_MCS0_CH0_IRQ_EN_type *) 0xf0132048u)	/* MCS2 Channel 0 Interrupt Enable Register */
#define GTM_MCS2_CH1_IRQ_EN	(*( GTM_MCS0_CH0_IRQ_EN_type *) 0xf01320c8u)	/* MCS2 Channel 1 Interrupt Enable Register */
#define GTM_MCS2_CH2_IRQ_EN	(*( GTM_MCS0_CH0_IRQ_EN_type *) 0xf0132148u)	/* MCS2 Channel 2 Interrupt Enable Register */
#define GTM_MCS2_CH3_IRQ_EN	(*( GTM_MCS0_CH0_IRQ_EN_type *) 0xf01321c8u)	/* MCS2 Channel 3 Interrupt Enable Register */
#define GTM_MCS2_CH4_IRQ_EN	(*( GTM_MCS0_CH0_IRQ_EN_type *) 0xf0132248u)	/* MCS2 Channel 4 Interrupt Enable Register */
#define GTM_MCS2_CH5_IRQ_EN	(*( GTM_MCS0_CH0_IRQ_EN_type *) 0xf01322c8u)	/* MCS2 Channel 5 Interrupt Enable Register */
#define GTM_MCS2_CH6_IRQ_EN	(*( GTM_MCS0_CH0_IRQ_EN_type *) 0xf0132348u)	/* MCS2 Channel 6 Interrupt Enable Register */
#define GTM_MCS2_CH7_IRQ_EN	(*( GTM_MCS0_CH0_IRQ_EN_type *) 0xf01323c8u)	/* MCS2 Channel 7 Interrupt Enable Register */
#define GTM_MCS3_CH0_IRQ_EN	(*( GTM_MCS0_CH0_IRQ_EN_type *) 0xf0133048u)	/* MCS3 Channel 0 Interrupt Enable Register */
#define GTM_MCS3_CH1_IRQ_EN	(*( GTM_MCS0_CH0_IRQ_EN_type *) 0xf01330c8u)	/* MCS3 Channel 1 Interrupt Enable Register */
#define GTM_MCS3_CH2_IRQ_EN	(*( GTM_MCS0_CH0_IRQ_EN_type *) 0xf0133148u)	/* MCS3 Channel 2 Interrupt Enable Register */
#define GTM_MCS3_CH3_IRQ_EN	(*( GTM_MCS0_CH0_IRQ_EN_type *) 0xf01331c8u)	/* MCS3 Channel 3 Interrupt Enable Register */
#define GTM_MCS3_CH4_IRQ_EN	(*( GTM_MCS0_CH0_IRQ_EN_type *) 0xf0133248u)	/* MCS3 Channel 4 Interrupt Enable Register */
#define GTM_MCS3_CH5_IRQ_EN	(*( GTM_MCS0_CH0_IRQ_EN_type *) 0xf01332c8u)	/* MCS3 Channel 5 Interrupt Enable Register */
#define GTM_MCS3_CH6_IRQ_EN	(*( GTM_MCS0_CH0_IRQ_EN_type *) 0xf0133348u)	/* MCS3 Channel 6 Interrupt Enable Register */
#define GTM_MCS3_CH7_IRQ_EN	(*( GTM_MCS0_CH0_IRQ_EN_type *) 0xf01333c8u)	/* MCS3 Channel 7 Interrupt Enable Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 TRG_MCS_IRQ    : 1;	/* Trigger IRQ bit in MCS_CH_x_IRQ_NOTIFY register by software */
		unsigned __sfrbit32 TRG_STK_ERR_IRQ: 1;	/* Trigger IRQ bit in MCS_CH_x_IRQ_NOTIFY register by software */
		unsigned __sfrbit32 TRG_MEM_ERR_IRQ: 1;	/* Trigger IRQ bit in MCS_CH_x_IRQ_NOTIFY register by software */
		/* const */ unsigned __sfrbit32 Reserved       : 29;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GTM_MCS0_CH0_IRQ_FORCINT_type;
#define GTM_MCS0_CH0_IRQ_FORCINT	(*( GTM_MCS0_CH0_IRQ_FORCINT_type *) 0xf013004cu)	/* MCS0 Channel 0 Software Interrupt Generation Register */
#define GTM_MCS0_CH1_IRQ_FORCINT	(*( GTM_MCS0_CH0_IRQ_FORCINT_type *) 0xf01300ccu)	/* MCS0 Channel 1 Software Interrupt Generation Register */
#define GTM_MCS0_CH2_IRQ_FORCINT	(*( GTM_MCS0_CH0_IRQ_FORCINT_type *) 0xf013014cu)	/* MCS0 Channel 2 Software Interrupt Generation Register */
#define GTM_MCS0_CH3_IRQ_FORCINT	(*( GTM_MCS0_CH0_IRQ_FORCINT_type *) 0xf01301ccu)	/* MCS0 Channel 3 Software Interrupt Generation Register */
#define GTM_MCS0_CH4_IRQ_FORCINT	(*( GTM_MCS0_CH0_IRQ_FORCINT_type *) 0xf013024cu)	/* MCS0 Channel 4 Software Interrupt Generation Register */
#define GTM_MCS0_CH5_IRQ_FORCINT	(*( GTM_MCS0_CH0_IRQ_FORCINT_type *) 0xf01302ccu)	/* MCS0 Channel 5 Software Interrupt Generation Register */
#define GTM_MCS0_CH6_IRQ_FORCINT	(*( GTM_MCS0_CH0_IRQ_FORCINT_type *) 0xf013034cu)	/* MCS0 Channel 6 Software Interrupt Generation Register */
#define GTM_MCS0_CH7_IRQ_FORCINT	(*( GTM_MCS0_CH0_IRQ_FORCINT_type *) 0xf01303ccu)	/* MCS0 Channel 7 Software Interrupt Generation Register */
#define GTM_MCS1_CH0_IRQ_FORCINT	(*( GTM_MCS0_CH0_IRQ_FORCINT_type *) 0xf013104cu)	/* MCS1 Channel 0 Software Interrupt Generation Register */
#define GTM_MCS1_CH1_IRQ_FORCINT	(*( GTM_MCS0_CH0_IRQ_FORCINT_type *) 0xf01310ccu)	/* MCS1 Channel 1 Software Interrupt Generation Register */
#define GTM_MCS1_CH2_IRQ_FORCINT	(*( GTM_MCS0_CH0_IRQ_FORCINT_type *) 0xf013114cu)	/* MCS1 Channel 2 Software Interrupt Generation Register */
#define GTM_MCS1_CH3_IRQ_FORCINT	(*( GTM_MCS0_CH0_IRQ_FORCINT_type *) 0xf01311ccu)	/* MCS1 Channel 3 Software Interrupt Generation Register */
#define GTM_MCS1_CH4_IRQ_FORCINT	(*( GTM_MCS0_CH0_IRQ_FORCINT_type *) 0xf013124cu)	/* MCS1 Channel 4 Software Interrupt Generation Register */
#define GTM_MCS1_CH5_IRQ_FORCINT	(*( GTM_MCS0_CH0_IRQ_FORCINT_type *) 0xf01312ccu)	/* MCS1 Channel 5 Software Interrupt Generation Register */
#define GTM_MCS1_CH6_IRQ_FORCINT	(*( GTM_MCS0_CH0_IRQ_FORCINT_type *) 0xf013134cu)	/* MCS1 Channel 6 Software Interrupt Generation Register */
#define GTM_MCS1_CH7_IRQ_FORCINT	(*( GTM_MCS0_CH0_IRQ_FORCINT_type *) 0xf01313ccu)	/* MCS1 Channel 7 Software Interrupt Generation Register */
#define GTM_MCS2_CH0_IRQ_FORCINT	(*( GTM_MCS0_CH0_IRQ_FORCINT_type *) 0xf013204cu)	/* MCS2 Channel 0 Software Interrupt Generation Register */
#define GTM_MCS2_CH1_IRQ_FORCINT	(*( GTM_MCS0_CH0_IRQ_FORCINT_type *) 0xf01320ccu)	/* MCS2 Channel 1 Software Interrupt Generation Register */
#define GTM_MCS2_CH2_IRQ_FORCINT	(*( GTM_MCS0_CH0_IRQ_FORCINT_type *) 0xf013214cu)	/* MCS2 Channel 2 Software Interrupt Generation Register */
#define GTM_MCS2_CH3_IRQ_FORCINT	(*( GTM_MCS0_CH0_IRQ_FORCINT_type *) 0xf01321ccu)	/* MCS2 Channel 3 Software Interrupt Generation Register */
#define GTM_MCS2_CH4_IRQ_FORCINT	(*( GTM_MCS0_CH0_IRQ_FORCINT_type *) 0xf013224cu)	/* MCS2 Channel 4 Software Interrupt Generation Register */
#define GTM_MCS2_CH5_IRQ_FORCINT	(*( GTM_MCS0_CH0_IRQ_FORCINT_type *) 0xf01322ccu)	/* MCS2 Channel 5 Software Interrupt Generation Register */
#define GTM_MCS2_CH6_IRQ_FORCINT	(*( GTM_MCS0_CH0_IRQ_FORCINT_type *) 0xf013234cu)	/* MCS2 Channel 6 Software Interrupt Generation Register */
#define GTM_MCS2_CH7_IRQ_FORCINT	(*( GTM_MCS0_CH0_IRQ_FORCINT_type *) 0xf01323ccu)	/* MCS2 Channel 7 Software Interrupt Generation Register */
#define GTM_MCS3_CH0_IRQ_FORCINT	(*( GTM_MCS0_CH0_IRQ_FORCINT_type *) 0xf013304cu)	/* MCS3 Channel 0 Software Interrupt Generation Register */
#define GTM_MCS3_CH1_IRQ_FORCINT	(*( GTM_MCS0_CH0_IRQ_FORCINT_type *) 0xf01330ccu)	/* MCS3 Channel 1 Software Interrupt Generation Register */
#define GTM_MCS3_CH2_IRQ_FORCINT	(*( GTM_MCS0_CH0_IRQ_FORCINT_type *) 0xf013314cu)	/* MCS3 Channel 2 Software Interrupt Generation Register */
#define GTM_MCS3_CH3_IRQ_FORCINT	(*( GTM_MCS0_CH0_IRQ_FORCINT_type *) 0xf01331ccu)	/* MCS3 Channel 3 Software Interrupt Generation Register */
#define GTM_MCS3_CH4_IRQ_FORCINT	(*( GTM_MCS0_CH0_IRQ_FORCINT_type *) 0xf013324cu)	/* MCS3 Channel 4 Software Interrupt Generation Register */
#define GTM_MCS3_CH5_IRQ_FORCINT	(*( GTM_MCS0_CH0_IRQ_FORCINT_type *) 0xf01332ccu)	/* MCS3 Channel 5 Software Interrupt Generation Register */
#define GTM_MCS3_CH6_IRQ_FORCINT	(*( GTM_MCS0_CH0_IRQ_FORCINT_type *) 0xf013334cu)	/* MCS3 Channel 6 Software Interrupt Generation Register */
#define GTM_MCS3_CH7_IRQ_FORCINT	(*( GTM_MCS0_CH0_IRQ_FORCINT_type *) 0xf01333ccu)	/* MCS3 Channel 7 Software Interrupt Generation Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 MCS_IRQ        : 1;	/* Interrupt request by MCS-channel x */
		unsigned __sfrbit32 STK_ERR_IRQ    : 1;	/* Stack counter overflow/underflow of channel x */
		unsigned __sfrbit32 MEM_ERR_IRQ    : 1;	/* Memory access out of range in channel x */
		/* const */ unsigned __sfrbit32 Reserved       : 29;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GTM_MCS0_CH0_IRQ_NOTIFY_type;
#define GTM_MCS0_CH0_IRQ_NOTIFY	(*( GTM_MCS0_CH0_IRQ_NOTIFY_type *) 0xf0130044u)	/* MCS0 Channel 0 interrupt notification register */
#define GTM_MCS0_CH1_IRQ_NOTIFY	(*( GTM_MCS0_CH0_IRQ_NOTIFY_type *) 0xf01300c4u)	/* MCS0 Channel 1 interrupt notification register */
#define GTM_MCS0_CH2_IRQ_NOTIFY	(*( GTM_MCS0_CH0_IRQ_NOTIFY_type *) 0xf0130144u)	/* MCS0 Channel 2 interrupt notification register */
#define GTM_MCS0_CH3_IRQ_NOTIFY	(*( GTM_MCS0_CH0_IRQ_NOTIFY_type *) 0xf01301c4u)	/* MCS0 Channel 3 interrupt notification register */
#define GTM_MCS0_CH4_IRQ_NOTIFY	(*( GTM_MCS0_CH0_IRQ_NOTIFY_type *) 0xf0130244u)	/* MCS0 Channel 4 interrupt notification register */
#define GTM_MCS0_CH5_IRQ_NOTIFY	(*( GTM_MCS0_CH0_IRQ_NOTIFY_type *) 0xf01302c4u)	/* MCS0 Channel 5 interrupt notification register */
#define GTM_MCS0_CH6_IRQ_NOTIFY	(*( GTM_MCS0_CH0_IRQ_NOTIFY_type *) 0xf0130344u)	/* MCS0 Channel 6 interrupt notification register */
#define GTM_MCS0_CH7_IRQ_NOTIFY	(*( GTM_MCS0_CH0_IRQ_NOTIFY_type *) 0xf01303c4u)	/* MCS0 Channel 7 interrupt notification register */
#define GTM_MCS1_CH0_IRQ_NOTIFY	(*( GTM_MCS0_CH0_IRQ_NOTIFY_type *) 0xf0131044u)	/* MCS1 Channel 0 interrupt notification register */
#define GTM_MCS1_CH1_IRQ_NOTIFY	(*( GTM_MCS0_CH0_IRQ_NOTIFY_type *) 0xf01310c4u)	/* MCS1 Channel 1 interrupt notification register */
#define GTM_MCS1_CH2_IRQ_NOTIFY	(*( GTM_MCS0_CH0_IRQ_NOTIFY_type *) 0xf0131144u)	/* MCS1 Channel 2 interrupt notification register */
#define GTM_MCS1_CH3_IRQ_NOTIFY	(*( GTM_MCS0_CH0_IRQ_NOTIFY_type *) 0xf01311c4u)	/* MCS1 Channel 3 interrupt notification register */
#define GTM_MCS1_CH4_IRQ_NOTIFY	(*( GTM_MCS0_CH0_IRQ_NOTIFY_type *) 0xf0131244u)	/* MCS1 Channel 4 interrupt notification register */
#define GTM_MCS1_CH5_IRQ_NOTIFY	(*( GTM_MCS0_CH0_IRQ_NOTIFY_type *) 0xf01312c4u)	/* MCS1 Channel 5 interrupt notification register */
#define GTM_MCS1_CH6_IRQ_NOTIFY	(*( GTM_MCS0_CH0_IRQ_NOTIFY_type *) 0xf0131344u)	/* MCS1 Channel 6 interrupt notification register */
#define GTM_MCS1_CH7_IRQ_NOTIFY	(*( GTM_MCS0_CH0_IRQ_NOTIFY_type *) 0xf01313c4u)	/* MCS1 Channel 7 interrupt notification register */
#define GTM_MCS2_CH0_IRQ_NOTIFY	(*( GTM_MCS0_CH0_IRQ_NOTIFY_type *) 0xf0132044u)	/* MCS2 Channel 0 interrupt notification register */
#define GTM_MCS2_CH1_IRQ_NOTIFY	(*( GTM_MCS0_CH0_IRQ_NOTIFY_type *) 0xf01320c4u)	/* MCS2 Channel 1 interrupt notification register */
#define GTM_MCS2_CH2_IRQ_NOTIFY	(*( GTM_MCS0_CH0_IRQ_NOTIFY_type *) 0xf0132144u)	/* MCS2 Channel 2 interrupt notification register */
#define GTM_MCS2_CH3_IRQ_NOTIFY	(*( GTM_MCS0_CH0_IRQ_NOTIFY_type *) 0xf01321c4u)	/* MCS2 Channel 3 interrupt notification register */
#define GTM_MCS2_CH4_IRQ_NOTIFY	(*( GTM_MCS0_CH0_IRQ_NOTIFY_type *) 0xf0132244u)	/* MCS2 Channel 4 interrupt notification register */
#define GTM_MCS2_CH5_IRQ_NOTIFY	(*( GTM_MCS0_CH0_IRQ_NOTIFY_type *) 0xf01322c4u)	/* MCS2 Channel 5 interrupt notification register */
#define GTM_MCS2_CH6_IRQ_NOTIFY	(*( GTM_MCS0_CH0_IRQ_NOTIFY_type *) 0xf0132344u)	/* MCS2 Channel 6 interrupt notification register */
#define GTM_MCS2_CH7_IRQ_NOTIFY	(*( GTM_MCS0_CH0_IRQ_NOTIFY_type *) 0xf01323c4u)	/* MCS2 Channel 7 interrupt notification register */
#define GTM_MCS3_CH0_IRQ_NOTIFY	(*( GTM_MCS0_CH0_IRQ_NOTIFY_type *) 0xf0133044u)	/* MCS3 Channel 0 interrupt notification register */
#define GTM_MCS3_CH1_IRQ_NOTIFY	(*( GTM_MCS0_CH0_IRQ_NOTIFY_type *) 0xf01330c4u)	/* MCS3 Channel 1 interrupt notification register */
#define GTM_MCS3_CH2_IRQ_NOTIFY	(*( GTM_MCS0_CH0_IRQ_NOTIFY_type *) 0xf0133144u)	/* MCS3 Channel 2 interrupt notification register */
#define GTM_MCS3_CH3_IRQ_NOTIFY	(*( GTM_MCS0_CH0_IRQ_NOTIFY_type *) 0xf01331c4u)	/* MCS3 Channel 3 interrupt notification register */
#define GTM_MCS3_CH4_IRQ_NOTIFY	(*( GTM_MCS0_CH0_IRQ_NOTIFY_type *) 0xf0133244u)	/* MCS3 Channel 4 interrupt notification register */
#define GTM_MCS3_CH5_IRQ_NOTIFY	(*( GTM_MCS0_CH0_IRQ_NOTIFY_type *) 0xf01332c4u)	/* MCS3 Channel 5 interrupt notification register */
#define GTM_MCS3_CH6_IRQ_NOTIFY	(*( GTM_MCS0_CH0_IRQ_NOTIFY_type *) 0xf0133344u)	/* MCS3 Channel 6 interrupt notification register */
#define GTM_MCS3_CH7_IRQ_NOTIFY	(*( GTM_MCS0_CH0_IRQ_NOTIFY_type *) 0xf01333c4u)	/* MCS3 Channel 7 interrupt notification register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 bPC            : 14;	/* Current Program Counter */
		/* const */ unsigned __sfrbit32 Reserved       : 18;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GTM_MCS0_CH0_PC_type;
#define GTM_MCS0_CH0_PC	(*( GTM_MCS0_CH0_PC_type *) 0xf0130040u)	/* MCS0 Channel 0 Program Counter Register */
#define GTM_MCS0_CH1_PC	(*( GTM_MCS0_CH0_PC_type *) 0xf01300c0u)	/* MCS0 Channel 1 Program Counter Register */
#define GTM_MCS0_CH2_PC	(*( GTM_MCS0_CH0_PC_type *) 0xf0130140u)	/* MCS0 Channel 2 Program Counter Register */
#define GTM_MCS0_CH3_PC	(*( GTM_MCS0_CH0_PC_type *) 0xf01301c0u)	/* MCS0 Channel 3 Program Counter Register */
#define GTM_MCS0_CH4_PC	(*( GTM_MCS0_CH0_PC_type *) 0xf0130240u)	/* MCS0 Channel 4 Program Counter Register */
#define GTM_MCS0_CH5_PC	(*( GTM_MCS0_CH0_PC_type *) 0xf01302c0u)	/* MCS0 Channel 5 Program Counter Register */
#define GTM_MCS0_CH6_PC	(*( GTM_MCS0_CH0_PC_type *) 0xf0130340u)	/* MCS0 Channel 6 Program Counter Register */
#define GTM_MCS0_CH7_PC	(*( GTM_MCS0_CH0_PC_type *) 0xf01303c0u)	/* MCS0 Channel 7 Program Counter Register */
#define GTM_MCS1_CH0_PC	(*( GTM_MCS0_CH0_PC_type *) 0xf0131040u)	/* MCS1 Channel 0 Program Counter Register */
#define GTM_MCS1_CH1_PC	(*( GTM_MCS0_CH0_PC_type *) 0xf01310c0u)	/* MCS1 Channel 1 Program Counter Register */
#define GTM_MCS1_CH2_PC	(*( GTM_MCS0_CH0_PC_type *) 0xf0131140u)	/* MCS1 Channel 2 Program Counter Register */
#define GTM_MCS1_CH3_PC	(*( GTM_MCS0_CH0_PC_type *) 0xf01311c0u)	/* MCS1 Channel 3 Program Counter Register */
#define GTM_MCS1_CH4_PC	(*( GTM_MCS0_CH0_PC_type *) 0xf0131240u)	/* MCS1 Channel 4 Program Counter Register */
#define GTM_MCS1_CH5_PC	(*( GTM_MCS0_CH0_PC_type *) 0xf01312c0u)	/* MCS1 Channel 5 Program Counter Register */
#define GTM_MCS1_CH6_PC	(*( GTM_MCS0_CH0_PC_type *) 0xf0131340u)	/* MCS1 Channel 6 Program Counter Register */
#define GTM_MCS1_CH7_PC	(*( GTM_MCS0_CH0_PC_type *) 0xf01313c0u)	/* MCS1 Channel 7 Program Counter Register */
#define GTM_MCS2_CH0_PC	(*( GTM_MCS0_CH0_PC_type *) 0xf0132040u)	/* MCS2 Channel 0 Program Counter Register */
#define GTM_MCS2_CH1_PC	(*( GTM_MCS0_CH0_PC_type *) 0xf01320c0u)	/* MCS2 Channel 1 Program Counter Register */
#define GTM_MCS2_CH2_PC	(*( GTM_MCS0_CH0_PC_type *) 0xf0132140u)	/* MCS2 Channel 2 Program Counter Register */
#define GTM_MCS2_CH3_PC	(*( GTM_MCS0_CH0_PC_type *) 0xf01321c0u)	/* MCS2 Channel 3 Program Counter Register */
#define GTM_MCS2_CH4_PC	(*( GTM_MCS0_CH0_PC_type *) 0xf0132240u)	/* MCS2 Channel 4 Program Counter Register */
#define GTM_MCS2_CH5_PC	(*( GTM_MCS0_CH0_PC_type *) 0xf01322c0u)	/* MCS2 Channel 5 Program Counter Register */
#define GTM_MCS2_CH6_PC	(*( GTM_MCS0_CH0_PC_type *) 0xf0132340u)	/* MCS2 Channel 6 Program Counter Register */
#define GTM_MCS2_CH7_PC	(*( GTM_MCS0_CH0_PC_type *) 0xf01323c0u)	/* MCS2 Channel 7 Program Counter Register */
#define GTM_MCS3_CH0_PC	(*( GTM_MCS0_CH0_PC_type *) 0xf0133040u)	/* MCS3 Channel 0 Program Counter Register */
#define GTM_MCS3_CH1_PC	(*( GTM_MCS0_CH0_PC_type *) 0xf01330c0u)	/* MCS3 Channel 1 Program Counter Register */
#define GTM_MCS3_CH2_PC	(*( GTM_MCS0_CH0_PC_type *) 0xf0133140u)	/* MCS3 Channel 2 Program Counter Register */
#define GTM_MCS3_CH3_PC	(*( GTM_MCS0_CH0_PC_type *) 0xf01331c0u)	/* MCS3 Channel 3 Program Counter Register */
#define GTM_MCS3_CH4_PC	(*( GTM_MCS0_CH0_PC_type *) 0xf0133240u)	/* MCS3 Channel 4 Program Counter Register */
#define GTM_MCS3_CH5_PC	(*( GTM_MCS0_CH0_PC_type *) 0xf01332c0u)	/* MCS3 Channel 5 Program Counter Register */
#define GTM_MCS3_CH6_PC	(*( GTM_MCS0_CH0_PC_type *) 0xf0133340u)	/* MCS3 Channel 6 Program Counter Register */
#define GTM_MCS3_CH7_PC	(*( GTM_MCS0_CH0_PC_type *) 0xf01333c0u)	/* MCS3 Channel 7 Program Counter Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 DATA           : 24;	/* Data of MCS general purpose register ry */
		/* const */ unsigned __sfrbit32 Reserved       : 8;	/* Read as zero, should be written as zero */
	} B;
	int I;
	unsigned int U;

} GTM_MCS0_CH0_R0_type;
#define GTM_MCS0_CH0_R0	(*( GTM_MCS0_CH0_R0_type *) 0xf0130000u)	/* MCS0 Channel 0 Program Counter Register 0 */
#define GTM_MCS0_CH0_R1	(*( GTM_MCS0_CH0_R0_type *) 0xf0130004u)	/* MCS0 Channel 0 Program Counter Register 1 */
#define GTM_MCS0_CH0_R2	(*( GTM_MCS0_CH0_R0_type *) 0xf0130008u)	/* MCS0 Channel 0 Program Counter Register 2 */
#define GTM_MCS0_CH0_R3	(*( GTM_MCS0_CH0_R0_type *) 0xf013000cu)	/* MCS0 Channel 0 Program Counter Register 3 */
#define GTM_MCS0_CH0_R4	(*( GTM_MCS0_CH0_R0_type *) 0xf0130010u)	/* MCS0 Channel 0 Program Counter Register 4 */
#define GTM_MCS0_CH0_R5	(*( GTM_MCS0_CH0_R0_type *) 0xf0130014u)	/* MCS0 Channel 0 Program Counter Register 5 */
#define GTM_MCS0_CH0_R6	(*( GTM_MCS0_CH0_R0_type *) 0xf0130018u)	/* MCS0 Channel 0 Program Counter Register 6 */
#define GTM_MCS0_CH0_R7	(*( GTM_MCS0_CH0_R0_type *) 0xf013001cu)	/* MCS0 Channel 0 Program Counter Register 7 */
#define GTM_MCS0_CH1_R0	(*( GTM_MCS0_CH0_R0_type *) 0xf0130080u)	/* MCS0 Channel 1 Program Counter Register 0 */
#define GTM_MCS0_CH1_R1	(*( GTM_MCS0_CH0_R0_type *) 0xf0130084u)	/* MCS0 Channel 1 Program Counter Register 1 */
#define GTM_MCS0_CH1_R2	(*( GTM_MCS0_CH0_R0_type *) 0xf0130088u)	/* MCS0 Channel 1 Program Counter Register 2 */
#define GTM_MCS0_CH1_R3	(*( GTM_MCS0_CH0_R0_type *) 0xf013008cu)	/* MCS0 Channel 1 Program Counter Register 3 */
#define GTM_MCS0_CH1_R4	(*( GTM_MCS0_CH0_R0_type *) 0xf0130090u)	/* MCS0 Channel 1 Program Counter Register 4 */
#define GTM_MCS0_CH1_R5	(*( GTM_MCS0_CH0_R0_type *) 0xf0130094u)	/* MCS0 Channel 1 Program Counter Register 5 */
#define GTM_MCS0_CH1_R6	(*( GTM_MCS0_CH0_R0_type *) 0xf0130098u)	/* MCS0 Channel 1 Program Counter Register 6 */
#define GTM_MCS0_CH1_R7	(*( GTM_MCS0_CH0_R0_type *) 0xf013009cu)	/* MCS0 Channel 1 Program Counter Register 7 */
#define GTM_MCS0_CH2_R0	(*( GTM_MCS0_CH0_R0_type *) 0xf0130100u)	/* MCS0 Channel 2 Program Counter Register 0 */
#define GTM_MCS0_CH2_R1	(*( GTM_MCS0_CH0_R0_type *) 0xf0130104u)	/* MCS0 Channel 2 Program Counter Register 1 */
#define GTM_MCS0_CH2_R2	(*( GTM_MCS0_CH0_R0_type *) 0xf0130108u)	/* MCS0 Channel 2 Program Counter Register 2 */
#define GTM_MCS0_CH2_R3	(*( GTM_MCS0_CH0_R0_type *) 0xf013010cu)	/* MCS0 Channel 2 Program Counter Register 3 */
#define GTM_MCS0_CH2_R4	(*( GTM_MCS0_CH0_R0_type *) 0xf0130110u)	/* MCS0 Channel 2 Program Counter Register 4 */
#define GTM_MCS0_CH2_R5	(*( GTM_MCS0_CH0_R0_type *) 0xf0130114u)	/* MCS0 Channel 2 Program Counter Register 5 */
#define GTM_MCS0_CH2_R6	(*( GTM_MCS0_CH0_R0_type *) 0xf0130118u)	/* MCS0 Channel 2 Program Counter Register 6 */
#define GTM_MCS0_CH2_R7	(*( GTM_MCS0_CH0_R0_type *) 0xf013011cu)	/* MCS0 Channel 2 Program Counter Register 7 */
#define GTM_MCS0_CH3_R0	(*( GTM_MCS0_CH0_R0_type *) 0xf0130180u)	/* MCS0 Channel 3 Program Counter Register 0 */
#define GTM_MCS0_CH3_R1	(*( GTM_MCS0_CH0_R0_type *) 0xf0130184u)	/* MCS0 Channel 3 Program Counter Register 1 */
#define GTM_MCS0_CH3_R2	(*( GTM_MCS0_CH0_R0_type *) 0xf0130188u)	/* MCS0 Channel 3 Program Counter Register 2 */
#define GTM_MCS0_CH3_R3	(*( GTM_MCS0_CH0_R0_type *) 0xf013018cu)	/* MCS0 Channel 3 Program Counter Register 3 */
#define GTM_MCS0_CH3_R4	(*( GTM_MCS0_CH0_R0_type *) 0xf0130190u)	/* MCS0 Channel 3 Program Counter Register 4 */
#define GTM_MCS0_CH3_R5	(*( GTM_MCS0_CH0_R0_type *) 0xf0130194u)	/* MCS0 Channel 3 Program Counter Register 5 */
#define GTM_MCS0_CH3_R6	(*( GTM_MCS0_CH0_R0_type *) 0xf0130198u)	/* MCS0 Channel 3 Program Counter Register 6 */
#define GTM_MCS0_CH3_R7	(*( GTM_MCS0_CH0_R0_type *) 0xf013019cu)	/* MCS0 Channel 3 Program Counter Register 7 */
#define GTM_MCS0_CH4_R0	(*( GTM_MCS0_CH0_R0_type *) 0xf0130200u)	/* MCS0 Channel 4 Program Counter Register 0 */
#define GTM_MCS0_CH4_R1	(*( GTM_MCS0_CH0_R0_type *) 0xf0130204u)	/* MCS0 Channel 4 Program Counter Register 1 */
#define GTM_MCS0_CH4_R2	(*( GTM_MCS0_CH0_R0_type *) 0xf0130208u)	/* MCS0 Channel 4 Program Counter Register 2 */
#define GTM_MCS0_CH4_R3	(*( GTM_MCS0_CH0_R0_type *) 0xf013020cu)	/* MCS0 Channel 4 Program Counter Register 3 */
#define GTM_MCS0_CH4_R4	(*( GTM_MCS0_CH0_R0_type *) 0xf0130210u)	/* MCS0 Channel 4 Program Counter Register 4 */
#define GTM_MCS0_CH4_R5	(*( GTM_MCS0_CH0_R0_type *) 0xf0130214u)	/* MCS0 Channel 4 Program Counter Register 5 */
#define GTM_MCS0_CH4_R6	(*( GTM_MCS0_CH0_R0_type *) 0xf0130218u)	/* MCS0 Channel 4 Program Counter Register 6 */
#define GTM_MCS0_CH4_R7	(*( GTM_MCS0_CH0_R0_type *) 0xf013021cu)	/* MCS0 Channel 4 Program Counter Register 7 */
#define GTM_MCS0_CH5_R0	(*( GTM_MCS0_CH0_R0_type *) 0xf0130280u)	/* MCS0 Channel 5 Program Counter Register 0 */
#define GTM_MCS0_CH5_R1	(*( GTM_MCS0_CH0_R0_type *) 0xf0130284u)	/* MCS0 Channel 5 Program Counter Register 1 */
#define GTM_MCS0_CH5_R2	(*( GTM_MCS0_CH0_R0_type *) 0xf0130288u)	/* MCS0 Channel 5 Program Counter Register 2 */
#define GTM_MCS0_CH5_R3	(*( GTM_MCS0_CH0_R0_type *) 0xf013028cu)	/* MCS0 Channel 5 Program Counter Register 3 */
#define GTM_MCS0_CH5_R4	(*( GTM_MCS0_CH0_R0_type *) 0xf0130290u)	/* MCS0 Channel 5 Program Counter Register 4 */
#define GTM_MCS0_CH5_R5	(*( GTM_MCS0_CH0_R0_type *) 0xf0130294u)	/* MCS0 Channel 5 Program Counter Register 5 */
#define GTM_MCS0_CH5_R6	(*( GTM_MCS0_CH0_R0_type *) 0xf0130298u)	/* MCS0 Channel 5 Program Counter Register 6 */
#define GTM_MCS0_CH5_R7	(*( GTM_MCS0_CH0_R0_type *) 0xf013029cu)	/* MCS0 Channel 5 Program Counter Register 7 */
#define GTM_MCS0_CH6_R0	(*( GTM_MCS0_CH0_R0_type *) 0xf0130300u)	/* MCS0 Channel 6 Program Counter Register 0 */
#define GTM_MCS0_CH6_R1	(*( GTM_MCS0_CH0_R0_type *) 0xf0130304u)	/* MCS0 Channel 6 Program Counter Register 1 */
#define GTM_MCS0_CH6_R2	(*( GTM_MCS0_CH0_R0_type *) 0xf0130308u)	/* MCS0 Channel 6 Program Counter Register 2 */
#define GTM_MCS0_CH6_R3	(*( GTM_MCS0_CH0_R0_type *) 0xf013030cu)	/* MCS0 Channel 6 Program Counter Register 3 */
#define GTM_MCS0_CH6_R4	(*( GTM_MCS0_CH0_R0_type *) 0xf0130310u)	/* MCS0 Channel 6 Program Counter Register 4 */
#define GTM_MCS0_CH6_R5	(*( GTM_MCS0_CH0_R0_type *) 0xf0130314u)	/* MCS0 Channel 6 Program Counter Register 5 */
#define GTM_MCS0_CH6_R6	(*( GTM_MCS0_CH0_R0_type *) 0xf0130318u)	/* MCS0 Channel 6 Program Counter Register 6 */
#define GTM_MCS0_CH6_R7	(*( GTM_MCS0_CH0_R0_type *) 0xf013031cu)	/* MCS0 Channel 6 Program Counter Register 7 */
#define GTM_MCS0_CH7_R0	(*( GTM_MCS0_CH0_R0_type *) 0xf0130380u)	/* MCS0 Channel 7 Program Counter Register 0 */
#define GTM_MCS0_CH7_R1	(*( GTM_MCS0_CH0_R0_type *) 0xf0130384u)	/* MCS0 Channel 7 Program Counter Register 1 */
#define GTM_MCS0_CH7_R2	(*( GTM_MCS0_CH0_R0_type *) 0xf0130388u)	/* MCS0 Channel 7 Program Counter Register 2 */
#define GTM_MCS0_CH7_R3	(*( GTM_MCS0_CH0_R0_type *) 0xf013038cu)	/* MCS0 Channel 7 Program Counter Register 3 */
#define GTM_MCS0_CH7_R4	(*( GTM_MCS0_CH0_R0_type *) 0xf0130390u)	/* MCS0 Channel 7 Program Counter Register 4 */
#define GTM_MCS0_CH7_R5	(*( GTM_MCS0_CH0_R0_type *) 0xf0130394u)	/* MCS0 Channel 7 Program Counter Register 5 */
#define GTM_MCS0_CH7_R6	(*( GTM_MCS0_CH0_R0_type *) 0xf0130398u)	/* MCS0 Channel 7 Program Counter Register 6 */
#define GTM_MCS0_CH7_R7	(*( GTM_MCS0_CH0_R0_type *) 0xf013039cu)	/* MCS0 Channel 7 Program Counter Register 7 */
#define GTM_MCS1_CH0_R0	(*( GTM_MCS0_CH0_R0_type *) 0xf0131000u)	/* MCS1 Channel 0 Program Counter Register 0 */
#define GTM_MCS1_CH0_R1	(*( GTM_MCS0_CH0_R0_type *) 0xf0131004u)	/* MCS1 Channel 0 Program Counter Register 1 */
#define GTM_MCS1_CH0_R2	(*( GTM_MCS0_CH0_R0_type *) 0xf0131008u)	/* MCS1 Channel 0 Program Counter Register 2 */
#define GTM_MCS1_CH0_R3	(*( GTM_MCS0_CH0_R0_type *) 0xf013100cu)	/* MCS1 Channel 0 Program Counter Register 3 */
#define GTM_MCS1_CH0_R4	(*( GTM_MCS0_CH0_R0_type *) 0xf0131010u)	/* MCS1 Channel 0 Program Counter Register 4 */
#define GTM_MCS1_CH0_R5	(*( GTM_MCS0_CH0_R0_type *) 0xf0131014u)	/* MCS1 Channel 0 Program Counter Register 5 */
#define GTM_MCS1_CH0_R6	(*( GTM_MCS0_CH0_R0_type *) 0xf0131018u)	/* MCS1 Channel 0 Program Counter Register 6 */
#define GTM_MCS1_CH0_R7	(*( GTM_MCS0_CH0_R0_type *) 0xf013101cu)	/* MCS1 Channel 0 Program Counter Register 7 */
#define GTM_MCS1_CH1_R0	(*( GTM_MCS0_CH0_R0_type *) 0xf0131080u)	/* MCS1 Channel 1 Program Counter Register 0 */
#define GTM_MCS1_CH1_R1	(*( GTM_MCS0_CH0_R0_type *) 0xf0131084u)	/* MCS1 Channel 1 Program Counter Register 1 */
#define GTM_MCS1_CH1_R2	(*( GTM_MCS0_CH0_R0_type *) 0xf0131088u)	/* MCS1 Channel 1 Program Counter Register 2 */
#define GTM_MCS1_CH1_R3	(*( GTM_MCS0_CH0_R0_type *) 0xf013108cu)	/* MCS1 Channel 1 Program Counter Register 3 */
#define GTM_MCS1_CH1_R4	(*( GTM_MCS0_CH0_R0_type *) 0xf0131090u)	/* MCS1 Channel 1 Program Counter Register 4 */
#define GTM_MCS1_CH1_R5	(*( GTM_MCS0_CH0_R0_type *) 0xf0131094u)	/* MCS1 Channel 1 Program Counter Register 5 */
#define GTM_MCS1_CH1_R6	(*( GTM_MCS0_CH0_R0_type *) 0xf0131098u)	/* MCS1 Channel 1 Program Counter Register 6 */
#define GTM_MCS1_CH1_R7	(*( GTM_MCS0_CH0_R0_type *) 0xf013109cu)	/* MCS1 Channel 1 Program Counter Register 7 */
#define GTM_MCS1_CH2_R0	(*( GTM_MCS0_CH0_R0_type *) 0xf0131100u)	/* MCS1 Channel 2 Program Counter Register 0 */
#define GTM_MCS1_CH2_R1	(*( GTM_MCS0_CH0_R0_type *) 0xf0131104u)	/* MCS1 Channel 2 Program Counter Register 1 */
#define GTM_MCS1_CH2_R2	(*( GTM_MCS0_CH0_R0_type *) 0xf0131108u)	/* MCS1 Channel 2 Program Counter Register 2 */
#define GTM_MCS1_CH2_R3	(*( GTM_MCS0_CH0_R0_type *) 0xf013110cu)	/* MCS1 Channel 2 Program Counter Register 3 */
#define GTM_MCS1_CH2_R4	(*( GTM_MCS0_CH0_R0_type *) 0xf0131110u)	/* MCS1 Channel 2 Program Counter Register 4 */
#define GTM_MCS1_CH2_R5	(*( GTM_MCS0_CH0_R0_type *) 0xf0131114u)	/* MCS1 Channel 2 Program Counter Register 5 */
#define GTM_MCS1_CH2_R6	(*( GTM_MCS0_CH0_R0_type *) 0xf0131118u)	/* MCS1 Channel 2 Program Counter Register 6 */
#define GTM_MCS1_CH2_R7	(*( GTM_MCS0_CH0_R0_type *) 0xf013111cu)	/* MCS1 Channel 2 Program Counter Register 7 */
#define GTM_MCS1_CH3_R0	(*( GTM_MCS0_CH0_R0_type *) 0xf0131180u)	/* MCS1 Channel 3 Program Counter Register 0 */
#define GTM_MCS1_CH3_R1	(*( GTM_MCS0_CH0_R0_type *) 0xf0131184u)	/* MCS1 Channel 3 Program Counter Register 1 */
#define GTM_MCS1_CH3_R2	(*( GTM_MCS0_CH0_R0_type *) 0xf0131188u)	/* MCS1 Channel 3 Program Counter Register 2 */
#define GTM_MCS1_CH3_R3	(*( GTM_MCS0_CH0_R0_type *) 0xf013118cu)	/* MCS1 Channel 3 Program Counter Register 3 */
#define GTM_MCS1_CH3_R4	(*( GTM_MCS0_CH0_R0_type *) 0xf0131190u)	/* MCS1 Channel 3 Program Counter Register 4 */
#define GTM_MCS1_CH3_R5	(*( GTM_MCS0_CH0_R0_type *) 0xf0131194u)	/* MCS1 Channel 3 Program Counter Register 5 */
#define GTM_MCS1_CH3_R6	(*( GTM_MCS0_CH0_R0_type *) 0xf0131198u)	/* MCS1 Channel 3 Program Counter Register 6 */
#define GTM_MCS1_CH3_R7	(*( GTM_MCS0_CH0_R0_type *) 0xf013119cu)	/* MCS1 Channel 3 Program Counter Register 7 */
#define GTM_MCS1_CH4_R0	(*( GTM_MCS0_CH0_R0_type *) 0xf0131200u)	/* MCS1 Channel 4 Program Counter Register 0 */
#define GTM_MCS1_CH4_R1	(*( GTM_MCS0_CH0_R0_type *) 0xf0131204u)	/* MCS1 Channel 4 Program Counter Register 1 */
#define GTM_MCS1_CH4_R2	(*( GTM_MCS0_CH0_R0_type *) 0xf0131208u)	/* MCS1 Channel 4 Program Counter Register 2 */
#define GTM_MCS1_CH4_R3	(*( GTM_MCS0_CH0_R0_type *) 0xf013120cu)	/* MCS1 Channel 4 Program Counter Register 3 */
#define GTM_MCS1_CH4_R4	(*( GTM_MCS0_CH0_R0_type *) 0xf0131210u)	/* MCS1 Channel 4 Program Counter Register 4 */
#define GTM_MCS1_CH4_R5	(*( GTM_MCS0_CH0_R0_type *) 0xf0131214u)	/* MCS1 Channel 4 Program Counter Register 5 */
#define GTM_MCS1_CH4_R6	(*( GTM_MCS0_CH0_R0_type *) 0xf0131218u)	/* MCS1 Channel 4 Program Counter Register 6 */
#define GTM_MCS1_CH4_R7	(*( GTM_MCS0_CH0_R0_type *) 0xf013121cu)	/* MCS1 Channel 4 Program Counter Register 7 */
#define GTM_MCS1_CH5_R0	(*( GTM_MCS0_CH0_R0_type *) 0xf0131280u)	/* MCS1 Channel 5 Program Counter Register 0 */
#define GTM_MCS1_CH5_R1	(*( GTM_MCS0_CH0_R0_type *) 0xf0131284u)	/* MCS1 Channel 5 Program Counter Register 1 */
#define GTM_MCS1_CH5_R2	(*( GTM_MCS0_CH0_R0_type *) 0xf0131288u)	/* MCS1 Channel 5 Program Counter Register 2 */
#define GTM_MCS1_CH5_R3	(*( GTM_MCS0_CH0_R0_type *) 0xf013128cu)	/* MCS1 Channel 5 Program Counter Register 3 */
#define GTM_MCS1_CH5_R4	(*( GTM_MCS0_CH0_R0_type *) 0xf0131290u)	/* MCS1 Channel 5 Program Counter Register 4 */
#define GTM_MCS1_CH5_R5	(*( GTM_MCS0_CH0_R0_type *) 0xf0131294u)	/* MCS1 Channel 5 Program Counter Register 5 */
#define GTM_MCS1_CH5_R6	(*( GTM_MCS0_CH0_R0_type *) 0xf0131298u)	/* MCS1 Channel 5 Program Counter Register 6 */
#define GTM_MCS1_CH5_R7	(*( GTM_MCS0_CH0_R0_type *) 0xf013129cu)	/* MCS1 Channel 5 Program Counter Register 7 */
#define GTM_MCS1_CH6_R0	(*( GTM_MCS0_CH0_R0_type *) 0xf0131300u)	/* MCS1 Channel 6 Program Counter Register 0 */
#define GTM_MCS1_CH6_R1	(*( GTM_MCS0_CH0_R0_type *) 0xf0131304u)	/* MCS1 Channel 6 Program Counter Register 1 */
#define GTM_MCS1_CH6_R2	(*( GTM_MCS0_CH0_R0_type *) 0xf0131308u)	/* MCS1 Channel 6 Program Counter Register 2 */
#define GTM_MCS1_CH6_R3	(*( GTM_MCS0_CH0_R0_type *) 0xf013130cu)	/* MCS1 Channel 6 Program Counter Register 3 */
#define GTM_MCS1_CH6_R4	(*( GTM_MCS0_CH0_R0_type *) 0xf0131310u)	/* MCS1 Channel 6 Program Counter Register 4 */
#define GTM_MCS1_CH6_R5	(*( GTM_MCS0_CH0_R0_type *) 0xf0131314u)	/* MCS1 Channel 6 Program Counter Register 5 */
#define GTM_MCS1_CH6_R6	(*( GTM_MCS0_CH0_R0_type *) 0xf0131318u)	/* MCS1 Channel 6 Program Counter Register 6 */
#define GTM_MCS1_CH6_R7	(*( GTM_MCS0_CH0_R0_type *) 0xf013131cu)	/* MCS1 Channel 6 Program Counter Register 7 */
#define GTM_MCS1_CH7_R0	(*( GTM_MCS0_CH0_R0_type *) 0xf0131380u)	/* MCS1 Channel 7 Program Counter Register 0 */
#define GTM_MCS1_CH7_R1	(*( GTM_MCS0_CH0_R0_type *) 0xf0131384u)	/* MCS1 Channel 7 Program Counter Register 1 */
#define GTM_MCS1_CH7_R2	(*( GTM_MCS0_CH0_R0_type *) 0xf0131388u)	/* MCS1 Channel 7 Program Counter Register 2 */
#define GTM_MCS1_CH7_R3	(*( GTM_MCS0_CH0_R0_type *) 0xf013138cu)	/* MCS1 Channel 7 Program Counter Register 3 */
#define GTM_MCS1_CH7_R4	(*( GTM_MCS0_CH0_R0_type *) 0xf0131390u)	/* MCS1 Channel 7 Program Counter Register 4 */
#define GTM_MCS1_CH7_R5	(*( GTM_MCS0_CH0_R0_type *) 0xf0131394u)	/* MCS1 Channel 7 Program Counter Register 5 */
#define GTM_MCS1_CH7_R6	(*( GTM_MCS0_CH0_R0_type *) 0xf0131398u)	/* MCS1 Channel 7 Program Counter Register 6 */
#define GTM_MCS1_CH7_R7	(*( GTM_MCS0_CH0_R0_type *) 0xf013139cu)	/* MCS1 Channel 7 Program Counter Register 7 */
#define GTM_MCS2_CH0_R0	(*( GTM_MCS0_CH0_R0_type *) 0xf0132000u)	/* MCS2 Channel 0 Program Counter Register 0 */
#define GTM_MCS2_CH0_R1	(*( GTM_MCS0_CH0_R0_type *) 0xf0132004u)	/* MCS2 Channel 0 Program Counter Register 1 */
#define GTM_MCS2_CH0_R2	(*( GTM_MCS0_CH0_R0_type *) 0xf0132008u)	/* MCS2 Channel 0 Program Counter Register 2 */
#define GTM_MCS2_CH0_R3	(*( GTM_MCS0_CH0_R0_type *) 0xf013200cu)	/* MCS2 Channel 0 Program Counter Register 3 */
#define GTM_MCS2_CH0_R4	(*( GTM_MCS0_CH0_R0_type *) 0xf0132010u)	/* MCS2 Channel 0 Program Counter Register 4 */
#define GTM_MCS2_CH0_R5	(*( GTM_MCS0_CH0_R0_type *) 0xf0132014u)	/* MCS2 Channel 0 Program Counter Register 5 */
#define GTM_MCS2_CH0_R6	(*( GTM_MCS0_CH0_R0_type *) 0xf0132018u)	/* MCS2 Channel 0 Program Counter Register 6 */
#define GTM_MCS2_CH0_R7	(*( GTM_MCS0_CH0_R0_type *) 0xf013201cu)	/* MCS2 Channel 0 Program Counter Register 7 */
#define GTM_MCS2_CH1_R0	(*( GTM_MCS0_CH0_R0_type *) 0xf0132080u)	/* MCS2 Channel 1 Program Counter Register 0 */
#define GTM_MCS2_CH1_R1	(*( GTM_MCS0_CH0_R0_type *) 0xf0132084u)	/* MCS2 Channel 1 Program Counter Register 1 */
#define GTM_MCS2_CH1_R2	(*( GTM_MCS0_CH0_R0_type *) 0xf0132088u)	/* MCS2 Channel 1 Program Counter Register 2 */
#define GTM_MCS2_CH1_R3	(*( GTM_MCS0_CH0_R0_type *) 0xf013208cu)	/* MCS2 Channel 1 Program Counter Register 3 */
#define GTM_MCS2_CH1_R4	(*( GTM_MCS0_CH0_R0_type *) 0xf0132090u)	/* MCS2 Channel 1 Program Counter Register 4 */
#define GTM_MCS2_CH1_R5	(*( GTM_MCS0_CH0_R0_type *) 0xf0132094u)	/* MCS2 Channel 1 Program Counter Register 5 */
#define GTM_MCS2_CH1_R6	(*( GTM_MCS0_CH0_R0_type *) 0xf0132098u)	/* MCS2 Channel 1 Program Counter Register 6 */
#define GTM_MCS2_CH1_R7	(*( GTM_MCS0_CH0_R0_type *) 0xf013209cu)	/* MCS2 Channel 1 Program Counter Register 7 */
#define GTM_MCS2_CH2_R0	(*( GTM_MCS0_CH0_R0_type *) 0xf0132100u)	/* MCS2 Channel 2 Program Counter Register 0 */
#define GTM_MCS2_CH2_R1	(*( GTM_MCS0_CH0_R0_type *) 0xf0132104u)	/* MCS2 Channel 2 Program Counter Register 1 */
#define GTM_MCS2_CH2_R2	(*( GTM_MCS0_CH0_R0_type *) 0xf0132108u)	/* MCS2 Channel 2 Program Counter Register 2 */
#define GTM_MCS2_CH2_R3	(*( GTM_MCS0_CH0_R0_type *) 0xf013210cu)	/* MCS2 Channel 2 Program Counter Register 3 */
#define GTM_MCS2_CH2_R4	(*( GTM_MCS0_CH0_R0_type *) 0xf0132110u)	/* MCS2 Channel 2 Program Counter Register 4 */
#define GTM_MCS2_CH2_R5	(*( GTM_MCS0_CH0_R0_type *) 0xf0132114u)	/* MCS2 Channel 2 Program Counter Register 5 */
#define GTM_MCS2_CH2_R6	(*( GTM_MCS0_CH0_R0_type *) 0xf0132118u)	/* MCS2 Channel 2 Program Counter Register 6 */
#define GTM_MCS2_CH2_R7	(*( GTM_MCS0_CH0_R0_type *) 0xf013211cu)	/* MCS2 Channel 2 Program Counter Register 7 */
#define GTM_MCS2_CH3_R0	(*( GTM_MCS0_CH0_R0_type *) 0xf0132180u)	/* MCS2 Channel 3 Program Counter Register 0 */
#define GTM_MCS2_CH3_R1	(*( GTM_MCS0_CH0_R0_type *) 0xf0132184u)	/* MCS2 Channel 3 Program Counter Register 1 */
#define GTM_MCS2_CH3_R2	(*( GTM_MCS0_CH0_R0_type *) 0xf0132188u)	/* MCS2 Channel 3 Program Counter Register 2 */
#define GTM_MCS2_CH3_R3	(*( GTM_MCS0_CH0_R0_type *) 0xf013218cu)	/* MCS2 Channel 3 Program Counter Register 3 */
#define GTM_MCS2_CH3_R4	(*( GTM_MCS0_CH0_R0_type *) 0xf0132190u)	/* MCS2 Channel 3 Program Counter Register 4 */
#define GTM_MCS2_CH3_R5	(*( GTM_MCS0_CH0_R0_type *) 0xf0132194u)	/* MCS2 Channel 3 Program Counter Register 5 */
#define GTM_MCS2_CH3_R6	(*( GTM_MCS0_CH0_R0_type *) 0xf0132198u)	/* MCS2 Channel 3 Program Counter Register 6 */
#define GTM_MCS2_CH3_R7	(*( GTM_MCS0_CH0_R0_type *) 0xf013219cu)	/* MCS2 Channel 3 Program Counter Register 7 */
#define GTM_MCS2_CH4_R0	(*( GTM_MCS0_CH0_R0_type *) 0xf0132200u)	/* MCS2 Channel 4 Program Counter Register 0 */
#define GTM_MCS2_CH4_R1	(*( GTM_MCS0_CH0_R0_type *) 0xf0132204u)	/* MCS2 Channel 4 Program Counter Register 1 */
#define GTM_MCS2_CH4_R2	(*( GTM_MCS0_CH0_R0_type *) 0xf0132208u)	/* MCS2 Channel 4 Program Counter Register 2 */
#define GTM_MCS2_CH4_R3	(*( GTM_MCS0_CH0_R0_type *) 0xf013220cu)	/* MCS2 Channel 4 Program Counter Register 3 */
#define GTM_MCS2_CH4_R4	(*( GTM_MCS0_CH0_R0_type *) 0xf0132210u)	/* MCS2 Channel 4 Program Counter Register 4 */
#define GTM_MCS2_CH4_R5	(*( GTM_MCS0_CH0_R0_type *) 0xf0132214u)	/* MCS2 Channel 4 Program Counter Register 5 */
#define GTM_MCS2_CH4_R6	(*( GTM_MCS0_CH0_R0_type *) 0xf0132218u)	/* MCS2 Channel 4 Program Counter Register 6 */
#define GTM_MCS2_CH4_R7	(*( GTM_MCS0_CH0_R0_type *) 0xf013221cu)	/* MCS2 Channel 4 Program Counter Register 7 */
#define GTM_MCS2_CH5_R0	(*( GTM_MCS0_CH0_R0_type *) 0xf0132280u)	/* MCS2 Channel 5 Program Counter Register 0 */
#define GTM_MCS2_CH5_R1	(*( GTM_MCS0_CH0_R0_type *) 0xf0132284u)	/* MCS2 Channel 5 Program Counter Register 1 */
#define GTM_MCS2_CH5_R2	(*( GTM_MCS0_CH0_R0_type *) 0xf0132288u)	/* MCS2 Channel 5 Program Counter Register 2 */
#define GTM_MCS2_CH5_R3	(*( GTM_MCS0_CH0_R0_type *) 0xf013228cu)	/* MCS2 Channel 5 Program Counter Register 3 */
#define GTM_MCS2_CH5_R4	(*( GTM_MCS0_CH0_R0_type *) 0xf0132290u)	/* MCS2 Channel 5 Program Counter Register 4 */
#define GTM_MCS2_CH5_R5	(*( GTM_MCS0_CH0_R0_type *) 0xf0132294u)	/* MCS2 Channel 5 Program Counter Register 5 */
#define GTM_MCS2_CH5_R6	(*( GTM_MCS0_CH0_R0_type *) 0xf0132298u)	/* MCS2 Channel 5 Program Counter Register 6 */
#define GTM_MCS2_CH5_R7	(*( GTM_MCS0_CH0_R0_type *) 0xf013229cu)	/* MCS2 Channel 5 Program Counter Register 7 */
#define GTM_MCS2_CH6_R0	(*( GTM_MCS0_CH0_R0_type *) 0xf0132300u)	/* MCS2 Channel 6 Program Counter Register 0 */
#define GTM_MCS2_CH6_R1	(*( GTM_MCS0_CH0_R0_type *) 0xf0132304u)	/* MCS2 Channel 6 Program Counter Register 1 */
#define GTM_MCS2_CH6_R2	(*( GTM_MCS0_CH0_R0_type *) 0xf0132308u)	/* MCS2 Channel 6 Program Counter Register 2 */
#define GTM_MCS2_CH6_R3	(*( GTM_MCS0_CH0_R0_type *) 0xf013230cu)	/* MCS2 Channel 6 Program Counter Register 3 */
#define GTM_MCS2_CH6_R4	(*( GTM_MCS0_CH0_R0_type *) 0xf0132310u)	/* MCS2 Channel 6 Program Counter Register 4 */
#define GTM_MCS2_CH6_R5	(*( GTM_MCS0_CH0_R0_type *) 0xf0132314u)	/* MCS2 Channel 6 Program Counter Register 5 */
#define GTM_MCS2_CH6_R6	(*( GTM_MCS0_CH0_R0_type *) 0xf0132318u)	/* MCS2 Channel 6 Program Counter Register 6 */
#define GTM_MCS2_CH6_R7	(*( GTM_MCS0_CH0_R0_type *) 0xf013231cu)	/* MCS2 Channel 6 Program Counter Register 7 */
#define GTM_MCS2_CH7_R0	(*( GTM_MCS0_CH0_R0_type *) 0xf0132380u)	/* MCS2 Channel 7 Program Counter Register 0 */
#define GTM_MCS2_CH7_R1	(*( GTM_MCS0_CH0_R0_type *) 0xf0132384u)	/* MCS2 Channel 7 Program Counter Register 1 */
#define GTM_MCS2_CH7_R2	(*( GTM_MCS0_CH0_R0_type *) 0xf0132388u)	/* MCS2 Channel 7 Program Counter Register 2 */
#define GTM_MCS2_CH7_R3	(*( GTM_MCS0_CH0_R0_type *) 0xf013238cu)	/* MCS2 Channel 7 Program Counter Register 3 */
#define GTM_MCS2_CH7_R4	(*( GTM_MCS0_CH0_R0_type *) 0xf0132390u)	/* MCS2 Channel 7 Program Counter Register 4 */
#define GTM_MCS2_CH7_R5	(*( GTM_MCS0_CH0_R0_type *) 0xf0132394u)	/* MCS2 Channel 7 Program Counter Register 5 */
#define GTM_MCS2_CH7_R6	(*( GTM_MCS0_CH0_R0_type *) 0xf0132398u)	/* MCS2 Channel 7 Program Counter Register 6 */
#define GTM_MCS2_CH7_R7	(*( GTM_MCS0_CH0_R0_type *) 0xf013239cu)	/* MCS2 Channel 7 Program Counter Register 7 */
#define GTM_MCS3_CH0_R0	(*( GTM_MCS0_CH0_R0_type *) 0xf0133000u)	/* MCS3 Channel 0 Program Counter Register 0 */
#define GTM_MCS3_CH0_R1	(*( GTM_MCS0_CH0_R0_type *) 0xf0133004u)	/* MCS3 Channel 0 Program Counter Register 1 */
#define GTM_MCS3_CH0_R2	(*( GTM_MCS0_CH0_R0_type *) 0xf0133008u)	/* MCS3 Channel 0 Program Counter Register 2 */
#define GTM_MCS3_CH0_R3	(*( GTM_MCS0_CH0_R0_type *) 0xf013300cu)	/* MCS3 Channel 0 Program Counter Register 3 */
#define GTM_MCS3_CH0_R4	(*( GTM_MCS0_CH0_R0_type *) 0xf0133010u)	/* MCS3 Channel 0 Program Counter Register 4 */
#define GTM_MCS3_CH0_R5	(*( GTM_MCS0_CH0_R0_type *) 0xf0133014u)	/* MCS3 Channel 0 Program Counter Register 5 */
#define GTM_MCS3_CH0_R6	(*( GTM_MCS0_CH0_R0_type *) 0xf0133018u)	/* MCS3 Channel 0 Program Counter Register 6 */
#define GTM_MCS3_CH0_R7	(*( GTM_MCS0_CH0_R0_type *) 0xf013301cu)	/* MCS3 Channel 0 Program Counter Register 7 */
#define GTM_MCS3_CH1_R0	(*( GTM_MCS0_CH0_R0_type *) 0xf0133080u)	/* MCS3 Channel 1 Program Counter Register 0 */
#define GTM_MCS3_CH1_R1	(*( GTM_MCS0_CH0_R0_type *) 0xf0133084u)	/* MCS3 Channel 1 Program Counter Register 1 */
#define GTM_MCS3_CH1_R2	(*( GTM_MCS0_CH0_R0_type *) 0xf0133088u)	/* MCS3 Channel 1 Program Counter Register 2 */
#define GTM_MCS3_CH1_R3	(*( GTM_MCS0_CH0_R0_type *) 0xf013308cu)	/* MCS3 Channel 1 Program Counter Register 3 */
#define GTM_MCS3_CH1_R4	(*( GTM_MCS0_CH0_R0_type *) 0xf0133090u)	/* MCS3 Channel 1 Program Counter Register 4 */
#define GTM_MCS3_CH1_R5	(*( GTM_MCS0_CH0_R0_type *) 0xf0133094u)	/* MCS3 Channel 1 Program Counter Register 5 */
#define GTM_MCS3_CH1_R6	(*( GTM_MCS0_CH0_R0_type *) 0xf0133098u)	/* MCS3 Channel 1 Program Counter Register 6 */
#define GTM_MCS3_CH1_R7	(*( GTM_MCS0_CH0_R0_type *) 0xf013309cu)	/* MCS3 Channel 1 Program Counter Register 7 */
#define GTM_MCS3_CH2_R0	(*( GTM_MCS0_CH0_R0_type *) 0xf0133100u)	/* MCS3 Channel 2 Program Counter Register 0 */
#define GTM_MCS3_CH2_R1	(*( GTM_MCS0_CH0_R0_type *) 0xf0133104u)	/* MCS3 Channel 2 Program Counter Register 1 */
#define GTM_MCS3_CH2_R2	(*( GTM_MCS0_CH0_R0_type *) 0xf0133108u)	/* MCS3 Channel 2 Program Counter Register 2 */
#define GTM_MCS3_CH2_R3	(*( GTM_MCS0_CH0_R0_type *) 0xf013310cu)	/* MCS3 Channel 2 Program Counter Register 3 */
#define GTM_MCS3_CH2_R4	(*( GTM_MCS0_CH0_R0_type *) 0xf0133110u)	/* MCS3 Channel 2 Program Counter Register 4 */
#define GTM_MCS3_CH2_R5	(*( GTM_MCS0_CH0_R0_type *) 0xf0133114u)	/* MCS3 Channel 2 Program Counter Register 5 */
#define GTM_MCS3_CH2_R6	(*( GTM_MCS0_CH0_R0_type *) 0xf0133118u)	/* MCS3 Channel 2 Program Counter Register 6 */
#define GTM_MCS3_CH2_R7	(*( GTM_MCS0_CH0_R0_type *) 0xf013311cu)	/* MCS3 Channel 2 Program Counter Register 7 */
#define GTM_MCS3_CH3_R0	(*( GTM_MCS0_CH0_R0_type *) 0xf0133180u)	/* MCS3 Channel 3 Program Counter Register 0 */
#define GTM_MCS3_CH3_R1	(*( GTM_MCS0_CH0_R0_type *) 0xf0133184u)	/* MCS3 Channel 3 Program Counter Register 1 */
#define GTM_MCS3_CH3_R2	(*( GTM_MCS0_CH0_R0_type *) 0xf0133188u)	/* MCS3 Channel 3 Program Counter Register 2 */
#define GTM_MCS3_CH3_R3	(*( GTM_MCS0_CH0_R0_type *) 0xf013318cu)	/* MCS3 Channel 3 Program Counter Register 3 */
#define GTM_MCS3_CH3_R4	(*( GTM_MCS0_CH0_R0_type *) 0xf0133190u)	/* MCS3 Channel 3 Program Counter Register 4 */
#define GTM_MCS3_CH3_R5	(*( GTM_MCS0_CH0_R0_type *) 0xf0133194u)	/* MCS3 Channel 3 Program Counter Register 5 */
#define GTM_MCS3_CH3_R6	(*( GTM_MCS0_CH0_R0_type *) 0xf0133198u)	/* MCS3 Channel 3 Program Counter Register 6 */
#define GTM_MCS3_CH3_R7	(*( GTM_MCS0_CH0_R0_type *) 0xf013319cu)	/* MCS3 Channel 3 Program Counter Register 7 */
#define GTM_MCS3_CH4_R0	(*( GTM_MCS0_CH0_R0_type *) 0xf0133200u)	/* MCS3 Channel 4 Program Counter Register 0 */
#define GTM_MCS3_CH4_R1	(*( GTM_MCS0_CH0_R0_type *) 0xf0133204u)	/* MCS3 Channel 4 Program Counter Register 1 */
#define GTM_MCS3_CH4_R2	(*( GTM_MCS0_CH0_R0_type *) 0xf0133208u)	/* MCS3 Channel 4 Program Counter Register 2 */
#define GTM_MCS3_CH4_R3	(*( GTM_MCS0_CH0_R0_type *) 0xf013320cu)	/* MCS3 Channel 4 Program Counter Register 3 */
#define GTM_MCS3_CH4_R4	(*( GTM_MCS0_CH0_R0_type *) 0xf0133210u)	/* MCS3 Channel 4 Program Counter Register 4 */
#define GTM_MCS3_CH4_R5	(*( GTM_MCS0_CH0_R0_type *) 0xf0133214u)	/* MCS3 Channel 4 Program Counter Register 5 */
#define GTM_MCS3_CH4_R6	(*( GTM_MCS0_CH0_R0_type *) 0xf0133218u)	/* MCS3 Channel 4 Program Counter Register 6 */
#define GTM_MCS3_CH4_R7	(*( GTM_MCS0_CH0_R0_type *) 0xf013321cu)	/* MCS3 Channel 4 Program Counter Register 7 */
#define GTM_MCS3_CH5_R0	(*( GTM_MCS0_CH0_R0_type *) 0xf0133280u)	/* MCS3 Channel 5 Program Counter Register 0 */
#define GTM_MCS3_CH5_R1	(*( GTM_MCS0_CH0_R0_type *) 0xf0133284u)	/* MCS3 Channel 5 Program Counter Register 1 */
#define GTM_MCS3_CH5_R2	(*( GTM_MCS0_CH0_R0_type *) 0xf0133288u)	/* MCS3 Channel 5 Program Counter Register 2 */
#define GTM_MCS3_CH5_R3	(*( GTM_MCS0_CH0_R0_type *) 0xf013328cu)	/* MCS3 Channel 5 Program Counter Register 3 */
#define GTM_MCS3_CH5_R4	(*( GTM_MCS0_CH0_R0_type *) 0xf0133290u)	/* MCS3 Channel 5 Program Counter Register 4 */
#define GTM_MCS3_CH5_R5	(*( GTM_MCS0_CH0_R0_type *) 0xf0133294u)	/* MCS3 Channel 5 Program Counter Register 5 */
#define GTM_MCS3_CH5_R6	(*( GTM_MCS0_CH0_R0_type *) 0xf0133298u)	/* MCS3 Channel 5 Program Counter Register 6 */
#define GTM_MCS3_CH5_R7	(*( GTM_MCS0_CH0_R0_type *) 0xf013329cu)	/* MCS3 Channel 5 Program Counter Register 7 */
#define GTM_MCS3_CH6_R0	(*( GTM_MCS0_CH0_R0_type *) 0xf0133300u)	/* MCS3 Channel 6 Program Counter Register 0 */
#define GTM_MCS3_CH6_R1	(*( GTM_MCS0_CH0_R0_type *) 0xf0133304u)	/* MCS3 Channel 6 Program Counter Register 1 */
#define GTM_MCS3_CH6_R2	(*( GTM_MCS0_CH0_R0_type *) 0xf0133308u)	/* MCS3 Channel 6 Program Counter Register 2 */
#define GTM_MCS3_CH6_R3	(*( GTM_MCS0_CH0_R0_type *) 0xf013330cu)	/* MCS3 Channel 6 Program Counter Register 3 */
#define GTM_MCS3_CH6_R4	(*( GTM_MCS0_CH0_R0_type *) 0xf0133310u)	/* MCS3 Channel 6 Program Counter Register 4 */
#define GTM_MCS3_CH6_R5	(*( GTM_MCS0_CH0_R0_type *) 0xf0133314u)	/* MCS3 Channel 6 Program Counter Register 5 */
#define GTM_MCS3_CH6_R6	(*( GTM_MCS0_CH0_R0_type *) 0xf0133318u)	/* MCS3 Channel 6 Program Counter Register 6 */
#define GTM_MCS3_CH6_R7	(*( GTM_MCS0_CH0_R0_type *) 0xf013331cu)	/* MCS3 Channel 6 Program Counter Register 7 */
#define GTM_MCS3_CH7_R0	(*( GTM_MCS0_CH0_R0_type *) 0xf0133380u)	/* MCS3 Channel 7 Program Counter Register 0 */
#define GTM_MCS3_CH7_R1	(*( GTM_MCS0_CH0_R0_type *) 0xf0133384u)	/* MCS3 Channel 7 Program Counter Register 1 */
#define GTM_MCS3_CH7_R2	(*( GTM_MCS0_CH0_R0_type *) 0xf0133388u)	/* MCS3 Channel 7 Program Counter Register 2 */
#define GTM_MCS3_CH7_R3	(*( GTM_MCS0_CH0_R0_type *) 0xf013338cu)	/* MCS3 Channel 7 Program Counter Register 3 */
#define GTM_MCS3_CH7_R4	(*( GTM_MCS0_CH0_R0_type *) 0xf0133390u)	/* MCS3 Channel 7 Program Counter Register 4 */
#define GTM_MCS3_CH7_R5	(*( GTM_MCS0_CH0_R0_type *) 0xf0133394u)	/* MCS3 Channel 7 Program Counter Register 5 */
#define GTM_MCS3_CH7_R6	(*( GTM_MCS0_CH0_R0_type *) 0xf0133398u)	/* MCS3 Channel 7 Program Counter Register 6 */
#define GTM_MCS3_CH7_R7	(*( GTM_MCS0_CH0_R0_type *) 0xf013339cu)	/* MCS3 Channel 7 Program Counter Register 7 */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 TRG0           : 1;	/* Trigger bit 0 */
		unsigned __sfrbit32 TRG1           : 1;	/* Trigger bit 1 */
		unsigned __sfrbit32 TRG2           : 1;	/* Trigger bit 2 */
		unsigned __sfrbit32 TRG3           : 1;	/* Trigger bit 3 */
		unsigned __sfrbit32 TRG4           : 1;	/* Trigger bit 4 */
		unsigned __sfrbit32 TRG5           : 1;	/* Trigger bit 5 */
		unsigned __sfrbit32 TRG6           : 1;	/* Trigger bit 6 */
		unsigned __sfrbit32 TRG7           : 1;	/* Trigger bit 7 */
		unsigned __sfrbit32 TRG8           : 1;	/* Trigger bit 8 */
		unsigned __sfrbit32 TRG9           : 1;	/* Trigger bit 9 */
		unsigned __sfrbit32 TRG10          : 1;	/* Trigger bit 10 */
		unsigned __sfrbit32 TRG11          : 1;	/* Trigger bit 11 */
		unsigned __sfrbit32 TRG12          : 1;	/* Trigger bit 12 */
		unsigned __sfrbit32 TRG13          : 1;	/* Trigger bit 13 */
		unsigned __sfrbit32 TRG14          : 1;	/* Trigger bit 14 */
		unsigned __sfrbit32 TRG15          : 1;	/* Trigger bit 15 */
		/* const */ unsigned __sfrbit32 Reserved       : 16;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GTM_MCS0_CTRG_type;
#define GTM_MCS0_CTRG	(*( GTM_MCS0_CTRG_type *) 0xf0130028u)	/* MCS0 Clear Trigger Control Register */
#define GTM_MCS1_CTRG	(*( GTM_MCS0_CTRG_type *) 0xf0131028u)	/* MCS1 Clear Trigger Control Register */
#define GTM_MCS2_CTRG	(*( GTM_MCS0_CTRG_type *) 0xf0132028u)	/* MCS2 Clear Trigger Control Register */
#define GTM_MCS3_CTRG	(*( GTM_MCS0_CTRG_type *) 0xf0133028u)	/* MCS3 Clear Trigger Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 SCHED          : 1;	/* MCS submodule scheduling scheme */
		unsigned __sfrbit32 HLT_SP_OFL     : 1;	/* Halt on stack pointer overflow */
		/* const */ unsigned __sfrbit32 Reserved       : 14;	/* Reserved */
		/* const */ unsigned __sfrbit32 RAM_RST        : 1;	/* RAM reset bit */
		/* const */ unsigned __sfrbit32 Reserved_5     : 15;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GTM_MCS0_CTRL_type;
#define GTM_MCS0_CTRL	(*( GTM_MCS0_CTRL_type *) 0xf0130074u)	/* MCS0 Control Register */
#define GTM_MCS1_CTRL	(*( GTM_MCS0_CTRL_type *) 0xf0131074u)	/* MCS1 Control Register */
#define GTM_MCS2_CTRL	(*( GTM_MCS0_CTRL_type *) 0xf0132074u)	/* MCS2 Control Register */
#define GTM_MCS3_CTRL	(*( GTM_MCS0_CTRL_type *) 0xf0133074u)	/* MCS3 Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 ERR0           : 1;	/* Error State of MCS-channel 0 */
		unsigned __sfrbit32 ERR1           : 1;	/* Error State of MCS-channel 1 */
		unsigned __sfrbit32 ERR2           : 1;	/* Error State of MCS-channel 2 */
		unsigned __sfrbit32 ERR3           : 1;	/* Error State of MCS-channel3 */
		unsigned __sfrbit32 ERR4           : 1;	/* Error State of MCS-channel 4 */
		unsigned __sfrbit32 ERR5           : 1;	/* Error State of MCS-channel 5 */
		unsigned __sfrbit32 ERR6           : 1;	/* Error State of MCS-channel 6 */
		unsigned __sfrbit32 ERR7           : 1;	/* Error State of MCS-channel 7 */
		/* const */ unsigned __sfrbit32 Reserved       : 24;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GTM_MCS0_ERR_type;
#define GTM_MCS0_ERR	(*( GTM_MCS0_ERR_type *) 0xf013007cu)	/* MCS0 Error Register */
#define GTM_MCS1_ERR	(*( GTM_MCS0_ERR_type *) 0xf013107cu)	/* MCS1 Error Register */
#define GTM_MCS2_ERR	(*( GTM_MCS0_ERR_type *) 0xf013207cu)	/* MCS2 Error Register */
#define GTM_MCS3_ERR	(*( GTM_MCS0_ERR_type *) 0xf013307cu)	/* MCS3 Error Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 RST0           : 1;	/* Software reset of channel 0 */
		unsigned __sfrbit32 RST1           : 1;	/* Software reset of channel 1 */
		unsigned __sfrbit32 RST2           : 1;	/* Software reset of channel 2 */
		unsigned __sfrbit32 RST3           : 1;	/* Software reset of channel 3 */
		unsigned __sfrbit32 RST4           : 1;	/* Software reset of channel 4 */
		unsigned __sfrbit32 RST5           : 1;	/* Software reset of channel 5 */
		unsigned __sfrbit32 RST6           : 1;	/* Software reset of channel 6 */
		unsigned __sfrbit32 RST7           : 1;	/* Software reset of channel 7 */
		unsigned __sfrbit32 CAT0           : 1;	/* Cancel ARU transfer for channel 0 */
		unsigned __sfrbit32 CAT1           : 1;	/* Cancel ARU transfer for channel 1 */
		unsigned __sfrbit32 CAT2           : 1;	/* Cancel ARU transfer for channel 2 */
		unsigned __sfrbit32 CAT3           : 1;	/* Cancel ARU transfer for channel 3 */
		unsigned __sfrbit32 CAT4           : 1;	/* Cancel ARU transfer for channel 4 */
		unsigned __sfrbit32 CAT5           : 1;	/* Cancel ARU transfer for channel 5 */
		unsigned __sfrbit32 CAT6           : 1;	/* Cancel ARU transfer for channel 6 */
		unsigned __sfrbit32 CAT7           : 1;	/* Cancel ARU transfer for channel 7 */
		unsigned __sfrbit32 CWT0           : 1;	/* Cancel WURM instruction for channel 0 */
		unsigned __sfrbit32 CWT1           : 1;	/* Cancel WURM instruction for channel 1 */
		unsigned __sfrbit32 CWT2           : 1;	/* Cancel WURM instruction for channel 2 */
		unsigned __sfrbit32 CWT3           : 1;	/* Cancel WURM instruction for channel 3 */
		unsigned __sfrbit32 CWT4           : 1;	/* Cancel WURM instruction for channel 4 */
		unsigned __sfrbit32 CWT5           : 1;	/* Cancel WURM instruction for channel 5 */
		unsigned __sfrbit32 CWT6           : 1;	/* Cancel WURM instruction for channel 6 */
		unsigned __sfrbit32 CWT7           : 1;	/* Cancel WURM instruction for channel 7 */
		/* const */ unsigned __sfrbit32 Reserved       : 8;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GTM_MCS0_RST_type;
#define GTM_MCS0_RST	(*( GTM_MCS0_RST_type *) 0xf0130078u)	/* MCS0 Channel Reset Register */
#define GTM_MCS1_RST	(*( GTM_MCS0_RST_type *) 0xf0131078u)	/* MCS1 Channel Reset Register */
#define GTM_MCS2_RST	(*( GTM_MCS0_RST_type *) 0xf0132078u)	/* MCS2 Channel Reset Register */
#define GTM_MCS3_RST	(*( GTM_MCS0_RST_type *) 0xf0133078u)	/* MCS3 Channel Reset Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 TRG0           : 1;	/* Trigger bit 0 */
		unsigned __sfrbit32 TRG1           : 1;	/* Trigger bit 1 */
		unsigned __sfrbit32 TRG2           : 1;	/* Trigger bit 2 */
		unsigned __sfrbit32 TRG3           : 1;	/* Trigger bit 3 */
		unsigned __sfrbit32 TRG4           : 1;	/* Trigger bit 4 */
		unsigned __sfrbit32 TRG5           : 1;	/* Trigger bit 5 */
		unsigned __sfrbit32 TRG6           : 1;	/* Trigger bit 6 */
		unsigned __sfrbit32 TRG7           : 1;	/* Trigger bit 7 */
		unsigned __sfrbit32 TRG8           : 1;	/* trigger bit 8 */
		unsigned __sfrbit32 TRG9           : 1;	/* Trigger bit 9 */
		unsigned __sfrbit32 TRG10          : 1;	/* Trigger bit 10 */
		unsigned __sfrbit32 TRG11          : 1;	/* Trigger bit 11 */
		unsigned __sfrbit32 TRG12          : 1;	/* Trigger bit 12 */
		unsigned __sfrbit32 TRG13          : 1;	/* Trigger bit 13 */
		unsigned __sfrbit32 TRG14          : 1;	/* Trigger bit 14 */
		unsigned __sfrbit32 TRG15          : 1;	/* Trigger bit 15 */
		/* const */ unsigned __sfrbit32 Reserved       : 16;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GTM_MCS0_STRG_type;
#define GTM_MCS0_STRG	(*( GTM_MCS0_STRG_type *) 0xf013002cu)	/* MCS0 Set Trigger Control Register */
#define GTM_MCS1_STRG	(*( GTM_MCS0_STRG_type *) 0xf013102cu)	/* MCS1 Set Trigger Control Register */
#define GTM_MCS2_STRG	(*( GTM_MCS0_STRG_type *) 0xf013202cu)	/* MCS2 Set Trigger Control Register */
#define GTM_MCS3_STRG	(*( GTM_MCS0_STRG_type *) 0xf013302cu)	/* MCS3 Set Trigger Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 MCS000         : 1;	/* MCS0 RAM0 Interrupt 0 Status Clear */
		unsigned __sfrbit32 MCS001         : 1;	/* MCS0 RAM0 Interrupt 1 Status Clear */
		unsigned __sfrbit32 MCS010         : 1;	/* MCS0 RAM1 Interrupt 0 Status Clear */
		unsigned __sfrbit32 MCS011         : 1;	/* MCS0 RAM1 Interrupt 1 Status Clear */
		unsigned __sfrbit32 MCS100         : 1;	/* MCS1 RAM0 Interrupt 0 Status Clear */
		unsigned __sfrbit32 MCS101         : 1;	/* MCS1 RAM0 Interrupt 1 Status Clear */
		unsigned __sfrbit32 MCS110         : 1;	/* MCS1 RAM1 Interrupt 0 Status Clear */
		unsigned __sfrbit32 MCS111         : 1;	/* MCS1 RAM1 Interrupt 1 Status Clear */
		unsigned __sfrbit32 MCS200         : 1;	/* MCS2 RAM0 Interrupt 0 Status Clear */
		unsigned __sfrbit32 MCS201         : 1;	/* MCS2 RAM0 Interrupt 1 Status Clear */
		unsigned __sfrbit32 MCS210         : 1;	/* MCS2 RAM1 Interrupt 0 Status Clear */
		unsigned __sfrbit32 MCS211         : 1;	/* MCS2 RAM1 Interrupt 1 Status Clear */
		unsigned __sfrbit32 MCS300         : 1;	/* MCS3 RAM0 Interrupt 0 Status Clear */
		unsigned __sfrbit32 MCS301         : 1;	/* MCS3 RAM0 Interrupt 1 Status Clear */
		unsigned __sfrbit32 MCS310         : 1;	/* MCS3 RAM1 Interrupt 0 Status Clear */
		unsigned __sfrbit32 MCS311         : 1;	/* MCS3 RAM1 Interrupt 1 Status Clear */
		unsigned __sfrbit32                : 16;
	} B;
	int I;
	unsigned int U;

} GTM_MCSINTCLR_type;
#define GTM_MCSINTCLR	(*( GTM_MCSINTCLR_type *) 0xf019fe74u)	/* MCS Interrupt Clear Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned __sfrbit32 MCS000         : 1;	/* MCS0 RAM0 Interrupt 0 Status */
		/* const */ unsigned __sfrbit32 MCS001         : 1;	/* MCS0 RAM0 Interrupt 1 Status */
		/* const */ unsigned __sfrbit32 MCS010         : 1;	/* MCS0 RAM1 Interrupt 0 Status */
		/* const */ unsigned __sfrbit32 MCS011         : 1;	/* MCS0 RAM1 Interrupt 1 Status */
		/* const */ unsigned __sfrbit32 MCS100         : 1;	/* MCS1 RAM0 Interrupt 0 Status */
		/* const */ unsigned __sfrbit32 MCS101         : 1;	/* MCS1 RAM0 Interrupt 1 Status */
		/* const */ unsigned __sfrbit32 MCS110         : 1;	/* MCS1 RAM1 Interrupt 0 Status */
		/* const */ unsigned __sfrbit32 MCS111         : 1;	/* MCS1 RAM1 Interrupt 1 Status */
		/* const */ unsigned __sfrbit32 MCS200         : 1;	/* MCS2 RAM0 Interrupt 0 Status */
		/* const */ unsigned __sfrbit32 MCS201         : 1;	/* MCS2 RAM0 Interrupt 1 Status */
		/* const */ unsigned __sfrbit32 MCS210         : 1;	/* MCS2 RAM1 Interrupt 0 Status */
		/* const */ unsigned __sfrbit32 MCS211         : 1;	/* MCS2 RAM1 Interrupt 1 Status */
		/* const */ unsigned __sfrbit32 MCS300         : 1;	/* MCS3 RAM0 Interrupt 0 Status */
		/* const */ unsigned __sfrbit32 MCS301         : 1;	/* MCS3 RAM0 Interrupt 1 Status */
		/* const */ unsigned __sfrbit32 MCS310         : 1;	/* MCS3 RAM1 Interrupt 0 Status */
		/* const */ unsigned __sfrbit32 MCS311         : 1;	/* MCS3 RAM1 Interrupt 1 Status */
		/* const */ unsigned __sfrbit32                : 16;
	} B;
	int I;
	unsigned int U;

} GTM_MCSINTSTAT_type;
#define GTM_MCSINTSTAT	(*( GTM_MCSINTSTAT_type *) 0xf019fe70u)	/* MCS Interrupt Status Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 MCA_0_0        : 1;	/* Activity of check performed in module MCS0 at channel 0 */
		unsigned __sfrbit32 MCA_0_1        : 1;	/* Activity of check performed in module MCS0 at channel 1 */
		unsigned __sfrbit32 MCA_0_2        : 1;	/* Activity of check performed in module MCS0 at channel 2 */
		unsigned __sfrbit32 MCA_0_3        : 1;	/* Activity of check performed in module MCS0 at channel 3 */
		unsigned __sfrbit32 MCA_0_4        : 1;	/* Activity of check performed in module MCS0 at channel 4 */
		unsigned __sfrbit32 MCA_0_5        : 1;	/* Activity of check performed in module MCS0 at channel 5 */
		unsigned __sfrbit32 MCA_0_6        : 1;	/* Activity of check performed in module MCS0 at channel 6 */
		unsigned __sfrbit32 MCA_0_7        : 1;	/* Activity of check performed in module MCS0 at channel 7 */
		unsigned __sfrbit32 MCA_1_0        : 1;	/* Activity of check performed in module MCS1 at channel 0 */
		unsigned __sfrbit32 MCA_1_1        : 1;	/* Activity of check performed in module MCS1 at channel 1 */
		unsigned __sfrbit32 MCA_1_2        : 1;	/* Activity of check performed in module MCS1 at channel 2 */
		unsigned __sfrbit32 MCA_1_3        : 1;	/* Activity of check performed in module MCS1 at channel 3 */
		unsigned __sfrbit32 MCA_1_4        : 1;	/* Activity of check performed in module MCS1 at channel 4 */
		unsigned __sfrbit32 MCA_1_5        : 1;	/* Activity of check performed in module MCS1 at channel 5 */
		unsigned __sfrbit32 MCA_1_6        : 1;	/* Activity of check performed in module MCS1 at channel 6 */
		unsigned __sfrbit32 MCA_1_7        : 1;	/* Activity of check performed in module MCS1 at channel 7 */
		unsigned __sfrbit32 MCA_2_0        : 1;	/* Activity of check performed in module MCS2 at channel 0 */
		unsigned __sfrbit32 MCA_2_1        : 1;	/* Activity of check performed in module MCS2 at channel 1 */
		unsigned __sfrbit32 MCA_2_2        : 1;	/* Activity of check performed in module MCS2 at channel 2 */
		unsigned __sfrbit32 MCA_2_3        : 1;	/* Activity of check performed in module MCS2 at channel 3 */
		unsigned __sfrbit32 MCA_2_4        : 1;	/* Activity of check performed in module MCS2 at channel 4 */
		unsigned __sfrbit32 MCA_2_5        : 1;	/* Activity of check performed in module MCS2 at channel 5 */
		unsigned __sfrbit32 MCA_2_6        : 1;	/* Activity of check performed in module MCS2 at channel 6 */
		unsigned __sfrbit32 MCA_2_7        : 1;	/* Activity of check performed in module MCS2 at channel 7 */
		unsigned __sfrbit32 MCA_3_0        : 1;	/* Activity of check performed in module MCS3 at channel 0 */
		unsigned __sfrbit32 MCA_3_1        : 1;	/* Activity of check performed in module MCS3 at channel 1 */
		unsigned __sfrbit32 MCA_3_2        : 1;	/* Activity of check performed in module MCS3 at channel 2 */
		unsigned __sfrbit32 MCA_3_3        : 1;	/* Activity of check performed in module MCS3 at channel 3 */
		unsigned __sfrbit32 MCA_3_4        : 1;	/* Activity of check performed in module MCS3 at channel 4 */
		unsigned __sfrbit32 MCA_3_5        : 1;	/* Activity of check performed in module MCS3 at channel 5 */
		unsigned __sfrbit32 MCA_3_6        : 1;	/* Activity of check performed in module MCS3 at channel 6 */
		unsigned __sfrbit32 MCA_3_7        : 1;	/* Activity of check performed in module MCS3 at channel 7 */
	} B;
	int I;
	unsigned int U;

} GTM_MON_ACTIVITY_0_type;
#define GTM_MON_ACTIVITY_0	(*( GTM_MON_ACTIVITY_0_type *) 0xf0100184u)	/* Monitor Activity Register 0 */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 ACT_CMU0       : 1;	/* CMU_CLK0 activity */
		unsigned __sfrbit32 ACT_CMU1       : 1;	/* CMU_CLK1 activity */
		unsigned __sfrbit32 ACT_CMU2       : 1;	/* CMU_CLK2 activity */
		unsigned __sfrbit32 ACT_CMU3       : 1;	/* CMU_CLK3 activity */
		unsigned __sfrbit32 ACT_CMU4       : 1;	/* CMU_CLK4 activity */
		unsigned __sfrbit32 ACT_CMU5       : 1;	/* CMU_CLK5 activity */
		unsigned __sfrbit32 ACT_CMU6       : 1;	/* CMU_CLK6 activity */
		unsigned __sfrbit32 ACT_CMU7       : 1;	/* CMU_CLK7 activity */
		unsigned __sfrbit32 ACT_CMUFX0     : 1;	/* CMU_CLKFX0 activity */
		unsigned __sfrbit32 ACT_CMUFX1     : 1;	/* CMU_CLKFX1 activity */
		unsigned __sfrbit32 ACT_CMUFX2     : 1;	/* CMU_CLKFX2 activity */
		unsigned __sfrbit32 ACT_CMUFX3     : 1;	/* CMU_CLKFX3 activity */
		unsigned __sfrbit32 ACT_CMUFX4     : 1;	/* CMU_CLKFX4 activity */
		/* const */ unsigned __sfrbit32 Reserved       : 3;	/* Reserved */
		/* const */ unsigned __sfrbit32 CMP_ERR        : 1;	/* Error detected at CMP */
		/* const */ unsigned __sfrbit32 Reserved_16    : 3;	/* Reserved */
		/* const */ unsigned __sfrbit32 MCS0_ERR       : 1;	/* Error detected at MCS[0] */
		/* const */ unsigned __sfrbit32 MCS1_ERR       : 1;	/* Error detected at MCS[1] */
		/* const */ unsigned __sfrbit32 MCS2_ERR       : 1;	/* Error detected at MCS[2] */
		/* const */ unsigned __sfrbit32 MCS3_ERR       : 1;	/* Error detected at MCS[3] */
		/* const */ unsigned __sfrbit32 Reserved_21    : 8;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GTM_MON_STATUS_type;
#define GTM_MON_STATUS	(*( GTM_MON_STATUS_type *) 0xf0100180u)	/* Monitor Status Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 SEL0           : 2;	/* GTM MSC0 High 0 Output Selection */
		unsigned __sfrbit32 SEL1           : 2;	/* GTM MSC0 High 1 Output Selection */
		unsigned __sfrbit32 SEL2           : 2;	/* GTM MSC0 High 2 Output Selection */
		unsigned __sfrbit32 SEL3           : 2;	/* GTM MSC0 High 3 Output Selection */
		unsigned __sfrbit32 SEL4           : 2;	/* GTM MSC0 High 4 Output Selection */
		unsigned __sfrbit32 SEL5           : 2;	/* GTM MSC0 High 5 Output Selection */
		unsigned __sfrbit32 SEL6           : 2;	/* GTM MSC0 High 6 Output Selection */
		unsigned __sfrbit32 SEL7           : 2;	/* GTM MSC0 High 7 Output Selection */
		unsigned __sfrbit32 SEL8           : 2;	/* GTM MSC0 High 8 Output Selection */
		unsigned __sfrbit32 SEL9           : 2;	/* GTM MSC0 High 9 Output Selection */
		unsigned __sfrbit32 SEL10          : 2;	/* GTM MSC0 High 10 Output Selection */
		unsigned __sfrbit32 SEL11          : 2;	/* GTM MSC0 High 11 Output Selection */
		unsigned __sfrbit32 SEL12          : 2;	/* GTM MSC0 High 12 Output Selection */
		unsigned __sfrbit32 SEL13          : 2;	/* GTM MSC0 High 13 Output Selection */
		unsigned __sfrbit32 SEL14          : 2;	/* GTM MSC0 High 14 Output Selection */
		unsigned __sfrbit32 SEL15          : 2;	/* GTM MSC0 High 15 Output Selection */
	} B;
	int I;
	unsigned int U;

} GTM_MSC0INHCON_type;
#define GTM_MSC0INHCON	(*( GTM_MSC0INHCON_type *) 0xf019ff64u)	/* MSC0 Input High Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 SEL0           : 2;	/* GTM MSC0 Low 0 Output Selection */
		unsigned __sfrbit32 SEL1           : 2;	/* GTM MSC0 Low 1 Output Selection */
		unsigned __sfrbit32 SEL2           : 2;	/* GTM MSC0 Low 2 Output Selection */
		unsigned __sfrbit32 SEL3           : 2;	/* GTM MSC0 Low 3 Output Selection */
		unsigned __sfrbit32 SEL4           : 2;	/* GTM MSC0 Low 4 Output Selection */
		unsigned __sfrbit32 SEL5           : 2;	/* GTM MSC0 Low 5 Output Selection */
		unsigned __sfrbit32 SEL6           : 2;	/* GTM MSC0 Low 6 Output Selection */
		unsigned __sfrbit32 SEL7           : 2;	/* GTM MSC0 Low 7 Output Selection */
		unsigned __sfrbit32 SEL8           : 2;	/* GTM MSC0 Low 8 Output Selection */
		unsigned __sfrbit32 SEL9           : 2;	/* GTM MSC0 Low 9 Output Selection */
		unsigned __sfrbit32 SEL10          : 2;	/* GTM MSC0 Low 10 Output Selection */
		unsigned __sfrbit32 SEL11          : 2;	/* GTM MSC0 Low 11 Output Selection */
		unsigned __sfrbit32 SEL12          : 2;	/* GTM MSC0 Low 12 Output Selection */
		unsigned __sfrbit32 SEL13          : 2;	/* GTM MSC0 Low 13 Output Selection */
		unsigned __sfrbit32 SEL14          : 2;	/* GTM MSC0 Low 14 Output Selection */
		unsigned __sfrbit32 SEL15          : 2;	/* GTM MSC0 Low 15 Output Selection */
	} B;
	int I;
	unsigned int U;

} GTM_MSC0INLCON_type;
#define GTM_MSC0INLCON	(*( GTM_MSC0INLCON_type *) 0xf019ff60u)	/* MSC0 Input Low Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 SEL0           : 2;	/* GTM MSC1 High 0 Output Selection */
		unsigned __sfrbit32 SEL1           : 2;	/* GTM MSC1 High 1 Output Selection */
		unsigned __sfrbit32 SEL2           : 2;	/* GTM MSC1 High 2 Output Selection */
		unsigned __sfrbit32 SEL3           : 2;	/* GTM MSC1 High 3 Output Selection */
		unsigned __sfrbit32 SEL4           : 2;	/* GTM MSC1 High 4 Output Selection */
		unsigned __sfrbit32 SEL5           : 2;	/* GTM MSC1 High 5 Output Selection */
		unsigned __sfrbit32 SEL6           : 2;	/* GTM MSC1 High 6 Output Selection */
		unsigned __sfrbit32 SEL7           : 2;	/* GTM MSC1 High 7 Output Selection */
		unsigned __sfrbit32 SEL8           : 2;	/* GTM MSC1 High 8 Output Selection */
		unsigned __sfrbit32 SEL9           : 2;	/* GTM MSC1 High 9 Output Selection */
		unsigned __sfrbit32 SEL10          : 2;	/* GTM MSC1 High 10 Output Selection */
		unsigned __sfrbit32 SEL11          : 2;	/* GTM MSC1 High 11 Output Selection */
		unsigned __sfrbit32 SEL12          : 2;	/* GTM MSC1 High 12 Output Selection */
		unsigned __sfrbit32 SEL13          : 2;	/* GTM MSC1 High 13 Output Selection */
		unsigned __sfrbit32 SEL14          : 2;	/* GTM MSC1 High 14 Output Selection */
		unsigned __sfrbit32 SEL15          : 2;	/* GTM MSC1 High 15 Output Selection */
	} B;
	int I;
	unsigned int U;

} GTM_MSC1INHCON_type;
#define GTM_MSC1INHCON	(*( GTM_MSC1INHCON_type *) 0xf019ff6cu)	/* MSC1 Input High Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 SEL0           : 2;	/* GTM MSC1 Low 0 Output Selection */
		unsigned __sfrbit32 SEL1           : 2;	/* GTM MSC1 Low 1 Output Selection */
		unsigned __sfrbit32 SEL2           : 2;	/* GTM MSC1 Low 2 Output Selection */
		unsigned __sfrbit32 SEL3           : 2;	/* GTM MSC1 Low 3 Output Selection */
		unsigned __sfrbit32 SEL4           : 2;	/* GTM MSC1 Low 4 Output Selection */
		unsigned __sfrbit32 SEL5           : 2;	/* GTM MSC1 Low 5 Output Selection */
		unsigned __sfrbit32 SEL6           : 2;	/* GTM MSC1 Low 6 Output Selection */
		unsigned __sfrbit32 SEL7           : 2;	/* GTM MSC1 Low 7 Output Selection */
		unsigned __sfrbit32 SEL8           : 2;	/* GTM MSC1 Low 8 Output Selection */
		unsigned __sfrbit32 SEL9           : 2;	/* GTM MSC1 Low 9 Output Selection */
		unsigned __sfrbit32 SEL10          : 2;	/* GTM MSC1 Low 10 Output Selection */
		unsigned __sfrbit32 SEL11          : 2;	/* GTM MSC1 Low 11 Output Selection */
		unsigned __sfrbit32 SEL12          : 2;	/* GTM MSC1 Low 12 Output Selection */
		unsigned __sfrbit32 SEL13          : 2;	/* GTM MSC1 Low 13 Output Selection */
		unsigned __sfrbit32 SEL14          : 2;	/* GTM MSC1 Low 14 Output Selection */
		unsigned __sfrbit32 SEL15          : 2;	/* GTM MSC1 Low 15 Output Selection */
	} B;
	int I;
	unsigned int U;

} GTM_MSC1INLCON_type;
#define GTM_MSC1INLCON	(*( GTM_MSC1INLCON_type *) 0xf019ff68u)	/* MSC1 Input Low Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 SEL0           : 5;	/* Set 1[0] Input Selection */
		unsigned __sfrbit32                : 3;
		unsigned __sfrbit32 SEL1           : 5;	/* Set 1[1] Input Selection */
		unsigned __sfrbit32                : 3;
		unsigned __sfrbit32 SEL2           : 5;	/* Set 1[2] Input Selection */
		unsigned __sfrbit32                : 3;
		unsigned __sfrbit32 SEL3           : 5;	/* Set 1[3] Input Selection */
		unsigned __sfrbit32                : 3;
	} B;
	int I;
	unsigned int U;

} GTM_MSCSET1CON0_type;
#define GTM_MSCSET1CON0	(*( GTM_MSCSET1CON0_type *) 0xf019ff00u)	/* MSC Set 1 Control 0 Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 SEL4           : 5;	/* Set 1[4] Input Selection */
		unsigned __sfrbit32                : 3;
		unsigned __sfrbit32 SEL5           : 5;	/* Set 1[5] Input Selection */
		unsigned __sfrbit32                : 3;
		unsigned __sfrbit32 SEL6           : 5;	/* Set 1[6] Input Selection */
		unsigned __sfrbit32                : 3;
		unsigned __sfrbit32 SEL7           : 5;	/* Set 1[7] Input Selection */
		unsigned __sfrbit32                : 3;
	} B;
	int I;
	unsigned int U;

} GTM_MSCSET1CON1_type;
#define GTM_MSCSET1CON1	(*( GTM_MSCSET1CON1_type *) 0xf019ff04u)	/* MSC Set 1 Control 1 Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 SEL8           : 5;	/* Set 1[8] Input Selection */
		unsigned __sfrbit32                : 3;
		unsigned __sfrbit32 SEL9           : 5;	/* Set 1[9] Input Selection */
		unsigned __sfrbit32                : 3;
		unsigned __sfrbit32 SEL10          : 5;	/* Set 1[10] Input Selection */
		unsigned __sfrbit32                : 3;
		unsigned __sfrbit32 SEL11          : 5;	/* Set 1[11] Input Selection */
		unsigned __sfrbit32                : 3;
	} B;
	int I;
	unsigned int U;

} GTM_MSCSET1CON2_type;
#define GTM_MSCSET1CON2	(*( GTM_MSCSET1CON2_type *) 0xf019ff08u)	/* MSC Set 1 Control 2 Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 SEL12          : 5;	/* Set 1[12] Input Selection */
		unsigned __sfrbit32                : 3;
		unsigned __sfrbit32 SEL13          : 5;	/* Set 1[13] Input Selection */
		unsigned __sfrbit32                : 3;
		unsigned __sfrbit32 SEL14          : 5;	/* Set 1[14] Input Selection */
		unsigned __sfrbit32                : 3;
		unsigned __sfrbit32 SEL15          : 5;	/* Set 1[15] Input Selection */
		unsigned __sfrbit32                : 3;
	} B;
	int I;
	unsigned int U;

} GTM_MSCSET1CON3_type;
#define GTM_MSCSET1CON3	(*( GTM_MSCSET1CON3_type *) 0xf019ff0cu)	/* MSC Set 1 Control 3 Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 SEL0           : 5;	/* Set 2[0] Input Selection */
		unsigned __sfrbit32                : 3;
		unsigned __sfrbit32 SEL1           : 5;	/* Set 2[1] Input Selection */
		unsigned __sfrbit32                : 3;
		unsigned __sfrbit32 SEL2           : 5;	/* Set 2[2] Input Selection */
		unsigned __sfrbit32                : 3;
		unsigned __sfrbit32 SEL3           : 5;	/* Set 2[3] Input Selection */
		unsigned __sfrbit32                : 3;
	} B;
	int I;
	unsigned int U;

} GTM_MSCSET2CON0_type;
#define GTM_MSCSET2CON0	(*( GTM_MSCSET2CON0_type *) 0xf019ff10u)	/* MSC Set 2 Control 0 Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 SEL4           : 5;	/* Set 2[4] Input Selection */
		unsigned __sfrbit32                : 3;
		unsigned __sfrbit32 SEL5           : 5;	/* Set 2[5] Input Selection */
		unsigned __sfrbit32                : 3;
		unsigned __sfrbit32 SEL6           : 5;	/* Set 2[6] Input Selection */
		unsigned __sfrbit32                : 3;
		unsigned __sfrbit32 SEL7           : 5;	/* Set 2[7] Input Selection */
		unsigned __sfrbit32                : 3;
	} B;
	int I;
	unsigned int U;

} GTM_MSCSET2CON1_type;
#define GTM_MSCSET2CON1	(*( GTM_MSCSET2CON1_type *) 0xf019ff14u)	/* MSC Set 2 Control 1 Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 SEL8           : 5;	/* Set 2[8] Input Selection */
		unsigned __sfrbit32                : 3;
		unsigned __sfrbit32 SEL9           : 5;	/* Set 2[9] Input Selection */
		unsigned __sfrbit32                : 3;
		unsigned __sfrbit32 SEL10          : 5;	/* Set 2[10] Input Selection */
		unsigned __sfrbit32                : 3;
		unsigned __sfrbit32 SEL11          : 5;	/* Set 2[11] Input Selection */
		unsigned __sfrbit32                : 3;
	} B;
	int I;
	unsigned int U;

} GTM_MSCSET2CON2_type;
#define GTM_MSCSET2CON2	(*( GTM_MSCSET2CON2_type *) 0xf019ff18u)	/* MSC Set 2 Control 2 Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 SEL12          : 5;	/* Set 2[12] Input Selection */
		unsigned __sfrbit32                : 3;
		unsigned __sfrbit32 SEL13          : 5;	/* Set 2[13] Input Selection */
		unsigned __sfrbit32                : 3;
		unsigned __sfrbit32 SEL14          : 5;	/* Set 2[14] Input Selection */
		unsigned __sfrbit32                : 3;
		unsigned __sfrbit32 SEL15          : 5;	/* Set 2[15] Input Selection */
		unsigned __sfrbit32                : 3;
	} B;
	int I;
	unsigned int U;

} GTM_MSCSET2CON3_type;
#define GTM_MSCSET2CON3	(*( GTM_MSCSET2CON3_type *) 0xf019ff1cu)	/* MSC Set 2 Control 3 Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 SEL0           : 5;	/* Set 3[0] Input Selection */
		unsigned __sfrbit32                : 3;
		unsigned __sfrbit32 SEL1           : 5;	/* Set 3[1] Input Selection */
		unsigned __sfrbit32                : 3;
		unsigned __sfrbit32 SEL2           : 5;	/* Set 3[2] Input Selection */
		unsigned __sfrbit32                : 3;
		unsigned __sfrbit32 SEL3           : 5;	/* Set 3[3] Input Selection */
		unsigned __sfrbit32                : 3;
	} B;
	int I;
	unsigned int U;

} GTM_MSCSET3CON0_type;
#define GTM_MSCSET3CON0	(*( GTM_MSCSET3CON0_type *) 0xf019ff20u)	/* MSC Set 3 Control 0 Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 SEL4           : 5;	/* Set 3[4] Input Selection */
		unsigned __sfrbit32                : 3;
		unsigned __sfrbit32 SEL5           : 5;	/* Set 3[5] Input Selection */
		unsigned __sfrbit32                : 3;
		unsigned __sfrbit32 SEL6           : 5;	/* Set 3[6] Input Selection */
		unsigned __sfrbit32                : 3;
		unsigned __sfrbit32 SEL7           : 5;	/* Set 3[7] Input Selection */
		unsigned __sfrbit32                : 3;
	} B;
	int I;
	unsigned int U;

} GTM_MSCSET3CON1_type;
#define GTM_MSCSET3CON1	(*( GTM_MSCSET3CON1_type *) 0xf019ff24u)	/* MSC Set 3 Control 1 Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 SEL8           : 5;	/* Set 3[8] Input Selection */
		unsigned __sfrbit32                : 3;
		unsigned __sfrbit32 SEL9           : 5;	/* Set 3[9] Input Selection */
		unsigned __sfrbit32                : 3;
		unsigned __sfrbit32 SEL10          : 5;	/* Set 3[10] Input Selection */
		unsigned __sfrbit32                : 3;
		unsigned __sfrbit32 SEL11          : 5;	/* Set 3[11] Input Selection */
		unsigned __sfrbit32                : 3;
	} B;
	int I;
	unsigned int U;

} GTM_MSCSET3CON2_type;
#define GTM_MSCSET3CON2	(*( GTM_MSCSET3CON2_type *) 0xf019ff28u)	/* MSC Set 3 Control 2 Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 SEL12          : 5;	/* Set 3[12] Input Selection */
		unsigned __sfrbit32                : 3;
		unsigned __sfrbit32 SEL13          : 5;	/* Set 3[13] Input Selection */
		unsigned __sfrbit32                : 3;
		unsigned __sfrbit32 SEL14          : 5;	/* Set 3[14] Input Selection */
		unsigned __sfrbit32                : 3;
		unsigned __sfrbit32 SEL15          : 5;	/* Set 3[15] Input Selection */
		unsigned __sfrbit32                : 3;
	} B;
	int I;
	unsigned int U;

} GTM_MSCSET3CON3_type;
#define GTM_MSCSET3CON3	(*( GTM_MSCSET3CON3_type *) 0xf019ff2cu)	/* MSC Set 3 Control 3 Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 SEL0           : 5;	/* Set 4[0] Input Selection */
		unsigned __sfrbit32                : 3;
		unsigned __sfrbit32 SEL1           : 5;	/* Set 4[1] Input Selection */
		unsigned __sfrbit32                : 3;
		unsigned __sfrbit32 SEL2           : 5;	/* Set 4[2] Input Selection */
		unsigned __sfrbit32                : 3;
		unsigned __sfrbit32 SEL3           : 5;	/* Set 4[3] Input Selection */
		unsigned __sfrbit32                : 3;
	} B;
	int I;
	unsigned int U;

} GTM_MSCSET4CON0_type;
#define GTM_MSCSET4CON0	(*( GTM_MSCSET4CON0_type *) 0xf019ff30u)	/* MSC Set 4 Control 0 Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 SEL4           : 5;	/* Set 4[4] Input Selection */
		unsigned __sfrbit32                : 3;
		unsigned __sfrbit32 SEL5           : 5;	/* Set 4[5] Input Selection */
		unsigned __sfrbit32                : 3;
		unsigned __sfrbit32 SEL6           : 5;	/* Set 4[6] Input Selection */
		unsigned __sfrbit32                : 3;
		unsigned __sfrbit32 SEL7           : 5;	/* Set 4[7] Input Selection */
		unsigned __sfrbit32                : 3;
	} B;
	int I;
	unsigned int U;

} GTM_MSCSET4CON1_type;
#define GTM_MSCSET4CON1	(*( GTM_MSCSET4CON1_type *) 0xf019ff34u)	/* MSC Set 4 Control 1 Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 SEL8           : 5;	/* Set 4[8] Input Selection */
		unsigned __sfrbit32                : 3;
		unsigned __sfrbit32 SEL9           : 5;	/* Set 4[9] Input Selection */
		unsigned __sfrbit32                : 3;
		unsigned __sfrbit32 SEL10          : 5;	/* Set 4[10] Input Selection */
		unsigned __sfrbit32                : 3;
		unsigned __sfrbit32 SEL11          : 5;	/* Set 4[11] Input Selection */
		unsigned __sfrbit32                : 3;
	} B;
	int I;
	unsigned int U;

} GTM_MSCSET4CON2_type;
#define GTM_MSCSET4CON2	(*( GTM_MSCSET4CON2_type *) 0xf019ff38u)	/* MSC Set 4 Control 2 Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 SEL12          : 5;	/* Set 4[12] Input Selection */
		unsigned __sfrbit32                : 3;
		unsigned __sfrbit32 SEL13          : 5;	/* Set 4[13] Input Selection */
		unsigned __sfrbit32                : 3;
		unsigned __sfrbit32 SEL14          : 5;	/* Set 4[14] Input Selection */
		unsigned __sfrbit32                : 3;
		unsigned __sfrbit32 SEL15          : 5;	/* Set 4[15] Input Selection */
		unsigned __sfrbit32                : 3;
	} B;
	int I;
	unsigned int U;

} GTM_MSCSET4CON3_type;
#define GTM_MSCSET4CON3	(*( GTM_MSCSET4CON3_type *) 0xf019ff3cu)	/* MSC Set 4 Control 3 Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32                : 24;
		unsigned __sfrbit32 SUS            : 4;	/* OCDS Suspend Control */
		unsigned __sfrbit32 SUS_P          : 1;	/* SUS Write Protection */
		/* const */ unsigned __sfrbit32 SUSSTA         : 1;	/* Suspend State */
		unsigned __sfrbit32                : 2;
	} B;
	int I;
	unsigned int U;

} GTM_OCS_type;
#define GTM_OCS	(*( GTM_OCS_type *) 0xf019fde8u)	/* OCDS Control and Status */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 DDREN          : 1;	/* Detructive Debug Read Enable */
		unsigned __sfrbit32 DREN           : 1;	/* Detructive Read Enable */
		unsigned __sfrbit32                : 30;
	} B;
	int I;
	unsigned int U;

} GTM_ODA_type;
#define GTM_ODA	(*( GTM_ODA_type *) 0xf019fddcu)	/* OCDS Debug Access Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 CV             : 27;	/* Compare Value */
		unsigned __sfrbit32                : 1;
		unsigned __sfrbit32 CM             : 2;	/* Compare Mode */
		unsigned __sfrbit32                : 2;
	} B;
	int I;
	unsigned int U;

} GTM_OTBU0T_type;
#define GTM_OTBU0T	(*( GTM_OTBU0T_type *) 0xf019fdc4u)	/* OCDS TBU0 Trigger Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 CV             : 24;	/* Compare Value */
		unsigned __sfrbit32                : 4;
		unsigned __sfrbit32 EN             : 1;	/* Enable */
		unsigned __sfrbit32                : 3;
	} B;
	int I;
	unsigned int U;

} GTM_OTBU1T_type;
#define GTM_OTBU1T	(*( GTM_OTBU1T_type *) 0xf019fdc8u)	/* OCDS TBU1 Trigger Register */
#define GTM_OTBU2T	(*( GTM_OTBU1T_type *) 0xf019fdccu)	/* OCDS TBU2 Trigger Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 B0LMT          : 3;	/* OTGB0 TS16_IOS Low Byte Module Type */
		unsigned __sfrbit32                : 1;
		unsigned __sfrbit32 B0LMI          : 4;	/* OTGB0 TS16_IOS Low Byte Module Instance */
		unsigned __sfrbit32 B0HMT          : 3;	/* OTGB0 TS16_IOS High Byte Module Type */
		unsigned __sfrbit32                : 1;
		unsigned __sfrbit32 B0HMI          : 4;	/* OTGB0 TS16_IOS High Byte Module Instance */
		unsigned __sfrbit32 B1LMT          : 3;	/* OTGB1 TS16_IOS Low Byte Module Type */
		unsigned __sfrbit32                : 1;
		unsigned __sfrbit32 B1LMI          : 4;	/* OTGB1 TS16_IOS Low Byte Module Instance */
		unsigned __sfrbit32 B1HMT          : 3;	/* OTGB1 TS16_IOS High Byte Module Type */
		unsigned __sfrbit32                : 1;
		unsigned __sfrbit32 B1HMI          : 4;	/* OTGB1 TS16_IOS High Byte Module Instance */
	} B;
	int I;
	unsigned int U;

} GTM_OTSC0_type;
#define GTM_OTSC0	(*( GTM_OTSC0_type *) 0xf019fdd4u)	/* OCDS Trigger Set Control 0 Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 MCS            : 4;	/* MCS Channel Select */
		unsigned __sfrbit32 MI             : 4;	/* MCS Instance */
		unsigned __sfrbit32                : 1;
		unsigned __sfrbit32 MOE            : 1;	/* MCS Opcode Trace Enable */
		unsigned __sfrbit32                : 22;
	} B;
	int I;
	unsigned int U;

} GTM_OTSC1_type;
#define GTM_OTSC1	(*( GTM_OTSC1_type *) 0xf019fdd8u)	/* OCDS Trigger Set Control 1 Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 OTGB0          : 4;	/* Trigger Set for OTGB0 */
		unsigned __sfrbit32                : 4;
		unsigned __sfrbit32 OTGB1          : 4;	/* Trigger Set for OTGB1 */
		unsigned __sfrbit32                : 4;
		unsigned __sfrbit32 OTGB2          : 4;	/* Trigger Set for OTGB2 */
		unsigned __sfrbit32                : 12;
	} B;
	int I;
	unsigned int U;

} GTM_OTSS_type;
#define GTM_OTSS	(*( GTM_OTSS_type *) 0xf019fdd0u)	/* OCDS Trigger Set Select Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 SEL0           : 4;	/* Output Selection for PSI5x GTM connection */
		unsigned __sfrbit32 SEL1           : 4;	/* Output Selection for PSI5x GTM connection */
		unsigned __sfrbit32 SEL2           : 4;	/* Output Selection for PSI5x GTM connection */
		unsigned __sfrbit32 SEL3           : 4;	/* Output Selection for PSI5x GTM connection */
		unsigned __sfrbit32 SEL4           : 4;	/* Output Selection for PSI5x GTM connection */
		unsigned __sfrbit32 SEL5           : 4;	/* Output Selection for PSI5x GTM connection */
		unsigned __sfrbit32                : 8;
	} B;
	int I;
	unsigned int U;

} GTM_PSI5OUTSEL0_type;
#define GTM_PSI5OUTSEL0	(*( GTM_PSI5OUTSEL0_type *) 0xf019fda4u)	/* PSI5 Output Select 0 Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 SEL0           : 4;	/* Output Selection for PSI5-S GTM connection */
		unsigned __sfrbit32 SEL1           : 4;	/* Output Selection for PSI5-S GTM connection */
		unsigned __sfrbit32 SEL2           : 4;	/* Output Selection for PSI5-S GTM connection */
		unsigned __sfrbit32 SEL3           : 4;	/* Output Selection for PSI5-S GTM connection */
		unsigned __sfrbit32 SEL4           : 4;	/* Output Selection for PSI5-S GTM connection */
		unsigned __sfrbit32 SEL5           : 4;	/* Output Selection for PSI5-S GTM connection */
		unsigned __sfrbit32 SEL6           : 4;	/* Output Selection for PSI5-S GTM connection */
		unsigned __sfrbit32 SEL7           : 4;	/* Output Selection for PSI5-S GTM connection */
	} B;
	int I;
	unsigned int U;

} GTM_PSI5SOUTSEL_type;
#define GTM_PSI5SOUTSEL	(*( GTM_PSI5SOUTSEL_type *) 0xf019fda8u)	/* PSI5-S Output Select Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned __sfrbit32 STEP           : 8;	/* Release Step */
		/* const */ unsigned __sfrbit32 NO             : 4;	/* Define delivery number of GTM specification */
		/* const */ unsigned __sfrbit32 MINOR          : 4;	/* Define minor version number of GTM specification */
		/* const */ unsigned __sfrbit32 MAJOR          : 4;	/* Define major version number of GTM specification */
		/* const */ unsigned __sfrbit32 DEV_CODE0      : 4;	/* Device encoding digit 0 */
		/* const */ unsigned __sfrbit32 DEV_CODE1      : 4;	/* Device encoding digit 1 */
		/* const */ unsigned __sfrbit32 DEV_CODE2      : 4;	/* Device encoding digit 2 */
	} B;
	int I;
	unsigned int U;

} GTM_REV_type;
#define GTM_REV	(*( GTM_REV_type *) 0xf0100000u)	/* GTM Version Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 RST            : 1;	/* GTM Reset */
		/* const */ unsigned __sfrbit32 Reserved       : 31;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GTM_RST_type;
#define GTM_RST	(*( GTM_RST_type *) 0xf0100004u)	/* GTM Global Reset Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 CMP            : 24;	/* Input signal revolution counter compare value */
		/* const */ unsigned __sfrbit32 Reserved       : 8;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GTM_SPE0_CMP_type;
#define GTM_SPE0_CMP	(*( GTM_SPE0_CMP_type *) 0xf0100844u)	/* SPE0 Revolution Compare Register */
#define GTM_SPE1_CMP	(*( GTM_SPE0_CMP_type *) 0xf01008c4u)	/* SPE1 Revolution Compare Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 CNT            : 24;	/* Input signal revolution counter */
		/* const */ unsigned __sfrbit32 Reserved       : 8;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GTM_SPE0_CNT_type;
#define GTM_SPE0_CNT	(*( GTM_SPE0_CNT_type *) 0xf0100840u)	/* SPE0 Revolution Counter Register */
#define GTM_SPE1_CNT	(*( GTM_SPE0_CNT_type *) 0xf01008c0u)	/* SPE1 Revolution Counter Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 SPE_EN         : 1;	/* SPE Submodule enable */
		unsigned __sfrbit32 SIE0           : 1;	/* SPE Input enable for TIM_CHx(48) */
		unsigned __sfrbit32 SIE1           : 1;	/* SPE Input enable for TIM_CHy(48) */
		unsigned __sfrbit32 SIE2           : 1;	/* SPE Input enable for TIM_CHz(48) */
		unsigned __sfrbit32 TRIG_SEL       : 2;	/* Select trigger input signal */
		unsigned __sfrbit32 TIM_SEL        : 1;	/* select TIM input signal */
		unsigned __sfrbit32 FSOM           : 1;	/* Fast Shut-Off Mode */
		unsigned __sfrbit32 SPE_PAT_PTR    : 3;	/* Pattern selector for TOM output signals */
		/* const */ unsigned __sfrbit32 Reserved       : 1;	/* Reserved */
		unsigned __sfrbit32 AIP            : 3;	/* Actual input pattern that was detected by a regular input pattern change */
		unsigned __sfrbit32 ADIR           : 1;	/* Actual rotation direction */
		unsigned __sfrbit32 PIP            : 3;	/* Previous input pattern that was detected by a regular input pattern change */
		unsigned __sfrbit32 PDIR           : 1;	/* Previous rotation direction */
		/* const */ unsigned __sfrbit32 NIP            : 3;	/* New input pattern that was detected */
		/* const */ unsigned __sfrbit32 Reserved_15    : 1;	/* Reserved */
		unsigned __sfrbit32 FSOL           : 8;	/* Fast Shut-Off Level for TOM[i] channel 0 to 7 */
	} B;
	int I;
	unsigned int U;

} GTM_SPE0_CTRL_STAT_type;
#define GTM_SPE0_CTRL_STAT	(*( GTM_SPE0_CTRL_STAT_type *) 0xf0100800u)	/* SPE0 Control Status Register */
#define GTM_SPE1_CTRL_STAT	(*( GTM_SPE0_CTRL_STAT_type *) 0xf0100880u)	/* SPE1 Control Status Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 SPE_NIPD_EIRQ_EN: 1;	/* SPE_NIPD_EIRQ interrupt enable */
		unsigned __sfrbit32 SPE_DCHG_EIRQ_EN: 1;	/* SPE_DCHG_EIRQ error interrupt enable */
		unsigned __sfrbit32 SPE_PERR_EIRQ_EN: 1;	/* SPE_PERR_EIRQ error interrupt enable */
		unsigned __sfrbit32 SPE_BIS_EIRQ_EN: 1;	/* SPE_BIS_EIRQ error interrupt enable */
		unsigned __sfrbit32 SPE_RCMP_EIRQ_EN: 1;	/* SPE_RCMP_EIRQ error interrupt enable */
		/* const */ unsigned __sfrbit32 Reserved       : 27;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GTM_SPE0_EIRQ_EN_type;
#define GTM_SPE0_EIRQ_EN	(*( GTM_SPE0_EIRQ_EN_type *) 0xf010083cu)	/* SPE0 Error Interrupt Enable Register */
#define GTM_SPE1_EIRQ_EN	(*( GTM_SPE0_EIRQ_EN_type *) 0xf01008bcu)	/* SPE1 Error Interrupt Enable Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 SPE_NIPD_IRQ_EN: 1;	/* SPE_NIPD_IRQ interrupt enable */
		unsigned __sfrbit32 SPE_DCHG_IRQ_EN: 1;	/* SPE_DCHG_IRQ interrupt enable */
		unsigned __sfrbit32 SPE_PERR_IRQ_EN: 1;	/* SPE_PERR_IRQ interrupt enable */
		unsigned __sfrbit32 SPE_BIS_IRQ_EN : 1;	/* SPE_BIS_IRQ interrupt enable */
		unsigned __sfrbit32 SPE_RCMP_IRQ_EN: 1;	/* SPE_RCMP_IRQ interrupt enable */
		/* const */ unsigned __sfrbit32 Reserved       : 27;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GTM_SPE0_IRQ_EN_type;
#define GTM_SPE0_IRQ_EN	(*( GTM_SPE0_IRQ_EN_type *) 0xf0100830u)	/* SPE0 Interrupt Enable Register */
#define GTM_SPE1_IRQ_EN	(*( GTM_SPE0_IRQ_EN_type *) 0xf01008b0u)	/* SPE1 Interrupt Enable Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 TRG_SPE_NIPD   : 1;	/* Force interrupt of SPE_NIPD */
		unsigned __sfrbit32 TRG_SPE_DCHG   : 1;	/* Force interrupt of SPE_DCHG */
		unsigned __sfrbit32 TRG_SPE_PERR   : 1;	/* Force interrupt of SPE_PERR */
		unsigned __sfrbit32 TRG_SPE_BIS    : 1;	/* Force interrupt of SPE_BIS */
		unsigned __sfrbit32 TRG_SPE_RCMP   : 1;	/* Force interrupt of SPE_RCMP */
		/* const */ unsigned __sfrbit32 Reserved       : 27;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GTM_SPE0_IRQ_FORCINT_type;
#define GTM_SPE0_IRQ_FORCINT	(*( GTM_SPE0_IRQ_FORCINT_type *) 0xf0100834u)	/* SPE0 Interrupt Generation by Software */
#define GTM_SPE1_IRQ_FORCINT	(*( GTM_SPE0_IRQ_FORCINT_type *) 0xf01008b4u)	/* SPE1 Interrupt Generation by Software */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 SPE_NIPD       : 1;	/* New input pattern interrupt occurred */
		unsigned __sfrbit32 SPE_DCHG       : 1;	/* SPE_DIR bit changed on behalf of new input pattern */
		unsigned __sfrbit32 SPE_PERR       : 1;	/* Wrong or invalid pattern detected at input */
		unsigned __sfrbit32 SPE_BIS        : 1;	/* Bouncing input signal detected */
		unsigned __sfrbit32 SPE_RCMP       : 1;	/* SPE revolution counter match event */
		/* const */ unsigned __sfrbit32 Reserved       : 27;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GTM_SPE0_IRQ_NOTIFY_type;
#define GTM_SPE0_IRQ_NOTIFY	(*( GTM_SPE0_IRQ_NOTIFY_type *) 0xf010082cu)	/* SPE0 Interrupt Notification Register */
#define GTM_SPE1_IRQ_NOTIFY	(*( GTM_SPE0_IRQ_NOTIFY_type *) 0xf01008acu)	/* SPE1 Interrupt Notification Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 SPE_OUT_CTRL   : 16;	/* SPE output control value for TOM_CH0 to TOM_CH7 */
		/* const */ unsigned __sfrbit32 Reserved       : 16;	/* Read as zero, should be written as zero */
	} B;
	int I;
	unsigned int U;

} GTM_SPE0_OUT_CTRL_type;
#define GTM_SPE0_OUT_CTRL	(*( GTM_SPE0_OUT_CTRL_type *) 0xf0100828u)	/* SPE0 Output Control Register */
#define GTM_SPE1_OUT_CTRL	(*( GTM_SPE0_OUT_CTRL_type *) 0xf01008a8u)	/* SPE1 Output Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 SPE_OUT_PAT    : 16;	/* SPE output control value for TOM_CH0 to TOM_CH7 */
		/* const */ unsigned __sfrbit32 Reserved       : 16;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GTM_SPE0_OUT_PAT0_type;
#define GTM_SPE0_OUT_PAT0	(*( GTM_SPE0_OUT_PAT0_type *) 0xf0100808u)	/* SPE0 Output Definition Register 0 */
#define GTM_SPE0_OUT_PAT1	(*( GTM_SPE0_OUT_PAT0_type *) 0xf010080cu)	/* SPE0 Output Definition Register 1 */
#define GTM_SPE0_OUT_PAT2	(*( GTM_SPE0_OUT_PAT0_type *) 0xf0100810u)	/* SPE0 Output Definition Register 2 */
#define GTM_SPE0_OUT_PAT3	(*( GTM_SPE0_OUT_PAT0_type *) 0xf0100814u)	/* SPE0 Output Definition Register 3 */
#define GTM_SPE0_OUT_PAT4	(*( GTM_SPE0_OUT_PAT0_type *) 0xf0100818u)	/* SPE0 Output Definition Register 4 */
#define GTM_SPE0_OUT_PAT5	(*( GTM_SPE0_OUT_PAT0_type *) 0xf010081cu)	/* SPE0 Output Definition Register 5 */
#define GTM_SPE0_OUT_PAT6	(*( GTM_SPE0_OUT_PAT0_type *) 0xf0100820u)	/* SPE0 Output Definition Register 6 */
#define GTM_SPE0_OUT_PAT7	(*( GTM_SPE0_OUT_PAT0_type *) 0xf0100824u)	/* SPE0 Output Definition Register 7 */
#define GTM_SPE1_OUT_PAT0	(*( GTM_SPE0_OUT_PAT0_type *) 0xf0100888u)	/* SPE1 Output Definition Register 0 */
#define GTM_SPE1_OUT_PAT1	(*( GTM_SPE0_OUT_PAT0_type *) 0xf010088cu)	/* SPE1 Output Definition Register 1 */
#define GTM_SPE1_OUT_PAT2	(*( GTM_SPE0_OUT_PAT0_type *) 0xf0100890u)	/* SPE1 Output Definition Register 2 */
#define GTM_SPE1_OUT_PAT3	(*( GTM_SPE0_OUT_PAT0_type *) 0xf0100894u)	/* SPE1 Output Definition Register 3 */
#define GTM_SPE1_OUT_PAT4	(*( GTM_SPE0_OUT_PAT0_type *) 0xf0100898u)	/* SPE1 Output Definition Register 4 */
#define GTM_SPE1_OUT_PAT5	(*( GTM_SPE0_OUT_PAT0_type *) 0xf010089cu)	/* SPE1 Output Definition Register 5 */
#define GTM_SPE1_OUT_PAT6	(*( GTM_SPE0_OUT_PAT0_type *) 0xf01008a0u)	/* SPE1 Output Definition Register 6 */
#define GTM_SPE1_OUT_PAT7	(*( GTM_SPE0_OUT_PAT0_type *) 0xf01008a4u)	/* SPE1 Output Definition Register 7 */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 IP0_VAL        : 1;	/* Input pattern 0 is a valid pattern */
		unsigned __sfrbit32 IP0_PAT        : 3;	/* Input pattern 0 */
		unsigned __sfrbit32 IP1_VAL        : 1;	/* Input pattern 1 is a valid pattern */
		unsigned __sfrbit32 IP1_PAT        : 3;	/* Input pattern 1 */
		unsigned __sfrbit32 IP2_VAL        : 1;	/* Input pattern 2 is a valid pattern */
		unsigned __sfrbit32 IP2_PAT        : 3;	/* Input pattern 2 */
		unsigned __sfrbit32 IP3_VAL        : 1;	/* Input pattern 3 is a valid pattern */
		unsigned __sfrbit32 IP3_PAT        : 3;	/* Input pattern 3 */
		unsigned __sfrbit32 IP4_VAL        : 1;	/* Input pattern 4 is a valid pattern */
		unsigned __sfrbit32 IP4_PAT        : 3;	/* Input pattern 4 */
		unsigned __sfrbit32 IP5_VAL        : 1;	/* Input pattern 5 is a valid pattern */
		unsigned __sfrbit32 IP5_PAT        : 3;	/* Input pattern 5 */
		unsigned __sfrbit32 IP6_VAL        : 1;	/* Input pattern 6 is a valid pattern */
		unsigned __sfrbit32 IP6_PAT        : 3;	/* Input pattern 6 */
		unsigned __sfrbit32 IP7_VAL        : 1;	/* Input pattern 7 is a valid pattern */
		unsigned __sfrbit32 IP7_PAT        : 3;	/* Input pattern 7 */
	} B;
	int I;
	unsigned int U;

} GTM_SPE0_PAT_type;
#define GTM_SPE0_PAT	(*( GTM_SPE0_PAT_type *) 0xf0100804u)	/* SPE0 Input Pattern Definition Register */
#define GTM_SPE1_PAT	(*( GTM_SPE0_PAT_type *) 0xf0100884u)	/* SPE1 Input Pattern Definition Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 BASE           : 27;	/* Time base value for channel 0 */
		/* const */ unsigned __sfrbit32 Reserved       : 5;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GTM_TBU_CH0_BASE_type;
#define GTM_TBU_CH0_BASE	(*( GTM_TBU_CH0_BASE_type *) 0xf0100108u)	/* TBU Channel 0 Base Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 LOW_RES        : 1;	/* TBU_CH0_BASE register resolution */
		unsigned __sfrbit32 CH_CLK_SRC     : 3;	/* Clock source for channel x (x:0?2) time base counter */
		/* const */ unsigned __sfrbit32 Reserved       : 28;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GTM_TBU_CH0_CTRL_type;
#define GTM_TBU_CH0_CTRL	(*( GTM_TBU_CH0_CTRL_type *) 0xf0100104u)	/* TBU Channel 0 Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 BASE           : 24;	/* Time base value for channel x (x 1, 2) */
		/* const */ unsigned __sfrbit32 Reserved       : 8;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GTM_TBU_CH1_BASE_type;
#define GTM_TBU_CH1_BASE	(*( GTM_TBU_CH1_BASE_type *) 0xf0100110u)	/* TBU Channel 1 Base Register */
#define GTM_TBU_CH2_BASE	(*( GTM_TBU_CH1_BASE_type *) 0xf0100118u)	/* TBU Channel 2 Base Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 CH_MODE        : 1;	/* Channel mode */
		unsigned __sfrbit32 CH_CLK_SRC     : 3;	/* Clock source for channel x (x1?2) time base counter */
		/* const */ unsigned __sfrbit32 Reserved       : 28;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GTM_TBU_CH1_CTRL_type;
#define GTM_TBU_CH1_CTRL	(*( GTM_TBU_CH1_CTRL_type *) 0xf010010cu)	/* TBU Channel 1 Control Register */
#define GTM_TBU_CH2_CTRL	(*( GTM_TBU_CH1_CTRL_type *) 0xf0100114u)	/* TBU Channel 2 Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 ENDIS_CH0      : 2;	/* TBU channel 0 enable/disable control */
		unsigned __sfrbit32 ENDIS_CH1      : 2;	/* TBU channel 1 enable/disable control */
		unsigned __sfrbit32 ENDIS_CH2      : 2;	/* TBU channel 2 enable/disable control */
		/* const */ unsigned __sfrbit32 Reserved       : 26;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GTM_TBU_CHEN_type;
#define GTM_TBU_CHEN	(*( GTM_TBU_CHEN_type *) 0xf0100100u)	/* TBU Global Channel Enable Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 CH0SEL         : 4;	/* TIM Channel 0 Input Selection */
		unsigned __sfrbit32 CH1SEL         : 4;	/* TIM Channel 1 Input Selection */
		unsigned __sfrbit32 CH2SEL         : 4;	/* TIM Channel 2 Input Selection */
		unsigned __sfrbit32 CH3SEL         : 4;	/* TIM Channel 3 Input Selection */
		unsigned __sfrbit32 CH4SEL         : 4;	/* TIM Channel 4 Input Selection */
		unsigned __sfrbit32 CH5SEL         : 4;	/* TIM Channel 5 Input Selection */
		unsigned __sfrbit32 CH6SEL         : 4;	/* TIM Channel 6 Input Selection */
		unsigned __sfrbit32 CH7SEL         : 4;	/* TIM Channel 7 Input Selection */
	} B;
	int I;
	unsigned int U;

} GTM_TIM0INSEL_type;
#define GTM_TIM0INSEL	(*( GTM_TIM0INSEL_type *) 0xf019fd10u)	/* TIM0 Input Select Register */
#define GTM_TIM1INSEL	(*( GTM_TIM0INSEL_type *) 0xf019fd14u)	/* TIM1 Input Select Register */
#define GTM_TIM2INSEL	(*( GTM_TIM0INSEL_type *) 0xf019fd18u)	/* TIM2 Input Select Register */
#define GTM_TIM3INSEL	(*( GTM_TIM0INSEL_type *) 0xf019fd1cu)	/* TIM3 Input Select Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 SRC_CH0        : 1;	/* Defines AUX_IN source of TIMi channel 0 x=0 */
		unsigned __sfrbit32 SRC_CH1        : 1;	/* Defines AUX_IN source of TIMi channel 1 x=1, see bit 0 */
		unsigned __sfrbit32 SRC_CH2        : 1;	/* Defines AUX_IN source of TIMi channel 2 x=2, see bit 0 */
		unsigned __sfrbit32 SRC_CH3        : 1;	/* Defines AUX_IN source of TIMi channel 3 x=3, see bit 0 */
		unsigned __sfrbit32 SRC_CH4        : 1;	/* Defines AUX_IN source of TIMi channel 4 x=4, see bit 0 */
		unsigned __sfrbit32 SRC_CH5        : 1;	/* Defines AUX_IN source of TIMi channel 5 x=5, see bit 0 */
		unsigned __sfrbit32 SRC_CH6        : 1;	/* Defines AUX_IN source of TIMi channel 6 x=6, see bit 0 */
		unsigned __sfrbit32 SRC_CH7        : 1;	/* Defines AUX_IN source of TIMi channel 7 x=7, see bit 0 */
		/* const */ unsigned __sfrbit32 Reserved       : 24;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GTM_TIM0_AUX_IN_SRC_type;
#define GTM_TIM0_AUX_IN_SRC	(*( GTM_TIM0_AUX_IN_SRC_type *) 0xf0100040u)	/* GTM TIM0 AUX_IN_SRC */
#define GTM_TIM1_AUX_IN_SRC	(*( GTM_TIM0_AUX_IN_SRC_type *) 0xf0100044u)	/* GTM TIM1 AUX_IN_SRC */
#define GTM_TIM2_AUX_IN_SRC	(*( GTM_TIM0_AUX_IN_SRC_type *) 0xf0100048u)	/* GTM TIM2 AUX_IN_SRC */
#define GTM_TIM3_AUX_IN_SRC	(*( GTM_TIM0_AUX_IN_SRC_type *) 0xf010004cu)	/* GTM TIM3 AUX_IN_SRC */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned __sfrbit32 CNT            : 24;	/* Actual SMU counter value */
		/* const */ unsigned __sfrbit32 Reserved       : 8;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GTM_TIM0_CH0_CNT_type;
#define GTM_TIM0_CH0_CNT	(*( GTM_TIM0_CH0_CNT_type *) 0xf0101008u)	/* TIM0 Channel 0 SMU Counter Register */
#define GTM_TIM0_CH1_CNT	(*( GTM_TIM0_CH0_CNT_type *) 0xf0101088u)	/* TIM0 Channel 1 SMU Counter Register */
#define GTM_TIM0_CH2_CNT	(*( GTM_TIM0_CH0_CNT_type *) 0xf0101108u)	/* TIM0 Channel 2 SMU Counter Register */
#define GTM_TIM0_CH3_CNT	(*( GTM_TIM0_CH0_CNT_type *) 0xf0101188u)	/* TIM0 Channel 3 SMU Counter Register */
#define GTM_TIM0_CH4_CNT	(*( GTM_TIM0_CH0_CNT_type *) 0xf0101208u)	/* TIM0 Channel 4 SMU Counter Register */
#define GTM_TIM0_CH5_CNT	(*( GTM_TIM0_CH0_CNT_type *) 0xf0101288u)	/* TIM0 Channel 5 SMU Counter Register */
#define GTM_TIM0_CH6_CNT	(*( GTM_TIM0_CH0_CNT_type *) 0xf0101308u)	/* TIM0 Channel 6 SMU Counter Register */
#define GTM_TIM0_CH7_CNT	(*( GTM_TIM0_CH0_CNT_type *) 0xf0101388u)	/* TIM0 Channel 7 SMU Counter Register */
#define GTM_TIM1_CH0_CNT	(*( GTM_TIM0_CH0_CNT_type *) 0xf0101808u)	/* TIM1 Channel 0 SMU Counter Register */
#define GTM_TIM1_CH1_CNT	(*( GTM_TIM0_CH0_CNT_type *) 0xf0101888u)	/* TIM1 Channel 1 SMU Counter Register */
#define GTM_TIM1_CH2_CNT	(*( GTM_TIM0_CH0_CNT_type *) 0xf0101908u)	/* TIM1 Channel 2 SMU Counter Register */
#define GTM_TIM1_CH3_CNT	(*( GTM_TIM0_CH0_CNT_type *) 0xf0101988u)	/* TIM1 Channel 3 SMU Counter Register */
#define GTM_TIM1_CH4_CNT	(*( GTM_TIM0_CH0_CNT_type *) 0xf0101a08u)	/* TIM1 Channel 4 SMU Counter Register */
#define GTM_TIM1_CH5_CNT	(*( GTM_TIM0_CH0_CNT_type *) 0xf0101a88u)	/* TIM1 Channel 5 SMU Counter Register */
#define GTM_TIM1_CH6_CNT	(*( GTM_TIM0_CH0_CNT_type *) 0xf0101b08u)	/* TIM1 Channel 6 SMU Counter Register */
#define GTM_TIM1_CH7_CNT	(*( GTM_TIM0_CH0_CNT_type *) 0xf0101b88u)	/* TIM1 Channel 7 SMU Counter Register */
#define GTM_TIM2_CH0_CNT	(*( GTM_TIM0_CH0_CNT_type *) 0xf0102008u)	/* TIM2 Channel 0 SMU Counter Register */
#define GTM_TIM2_CH1_CNT	(*( GTM_TIM0_CH0_CNT_type *) 0xf0102088u)	/* TIM2 Channel 1 SMU Counter Register */
#define GTM_TIM2_CH2_CNT	(*( GTM_TIM0_CH0_CNT_type *) 0xf0102108u)	/* TIM2 Channel 2 SMU Counter Register */
#define GTM_TIM2_CH3_CNT	(*( GTM_TIM0_CH0_CNT_type *) 0xf0102188u)	/* TIM2 Channel 3 SMU Counter Register */
#define GTM_TIM2_CH4_CNT	(*( GTM_TIM0_CH0_CNT_type *) 0xf0102208u)	/* TIM2 Channel 4 SMU Counter Register */
#define GTM_TIM2_CH5_CNT	(*( GTM_TIM0_CH0_CNT_type *) 0xf0102288u)	/* TIM2 Channel 5 SMU Counter Register */
#define GTM_TIM2_CH6_CNT	(*( GTM_TIM0_CH0_CNT_type *) 0xf0102308u)	/* TIM2 Channel 6 SMU Counter Register */
#define GTM_TIM2_CH7_CNT	(*( GTM_TIM0_CH0_CNT_type *) 0xf0102388u)	/* TIM2 Channel 7 SMU Counter Register */
#define GTM_TIM3_CH0_CNT	(*( GTM_TIM0_CH0_CNT_type *) 0xf0102808u)	/* TIM3 Channel 0 SMU Counter Register */
#define GTM_TIM3_CH1_CNT	(*( GTM_TIM0_CH0_CNT_type *) 0xf0102888u)	/* TIM3 Channel 1 SMU Counter Register */
#define GTM_TIM3_CH2_CNT	(*( GTM_TIM0_CH0_CNT_type *) 0xf0102908u)	/* TIM3 Channel 2 SMU Counter Register */
#define GTM_TIM3_CH3_CNT	(*( GTM_TIM0_CH0_CNT_type *) 0xf0102988u)	/* TIM3 Channel 3 SMU Counter Register */
#define GTM_TIM3_CH4_CNT	(*( GTM_TIM0_CH0_CNT_type *) 0xf0102a08u)	/* TIM3 Channel 4 SMU Counter Register */
#define GTM_TIM3_CH5_CNT	(*( GTM_TIM0_CH0_CNT_type *) 0xf0102a88u)	/* TIM3 Channel 5 SMU Counter Register */
#define GTM_TIM3_CH6_CNT	(*( GTM_TIM0_CH0_CNT_type *) 0xf0102b08u)	/* TIM3 Channel 6 SMU Counter Register */
#define GTM_TIM3_CH7_CNT	(*( GTM_TIM0_CH0_CNT_type *) 0xf0102b88u)	/* TIM3 Channel 7 SMU Counter Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 CNTS           : 24;	/* Counter shadow register */
		/* const */ unsigned __sfrbit32 ECNT           : 8;	/* Edge counter */
	} B;
	int I;
	unsigned int U;

} GTM_TIM0_CH0_CNTS_type;
#define GTM_TIM0_CH0_CNTS	(*( GTM_TIM0_CH0_CNTS_type *) 0xf0101010u)	/* TIM0 Channel 0 SMU Shadow Counter Register */
#define GTM_TIM0_CH1_CNTS	(*( GTM_TIM0_CH0_CNTS_type *) 0xf0101090u)	/* TIM0 Channel 1 SMU Shadow Counter Register */
#define GTM_TIM0_CH2_CNTS	(*( GTM_TIM0_CH0_CNTS_type *) 0xf0101110u)	/* TIM0 Channel 2 SMU Shadow Counter Register */
#define GTM_TIM0_CH3_CNTS	(*( GTM_TIM0_CH0_CNTS_type *) 0xf0101190u)	/* TIM0 Channel 3 SMU Shadow Counter Register */
#define GTM_TIM0_CH4_CNTS	(*( GTM_TIM0_CH0_CNTS_type *) 0xf0101210u)	/* TIM0 Channel 4 SMU Shadow Counter Register */
#define GTM_TIM0_CH5_CNTS	(*( GTM_TIM0_CH0_CNTS_type *) 0xf0101290u)	/* TIM0 Channel 5 SMU Shadow Counter Register */
#define GTM_TIM0_CH6_CNTS	(*( GTM_TIM0_CH0_CNTS_type *) 0xf0101310u)	/* TIM0 Channel 6 SMU Shadow Counter Register */
#define GTM_TIM0_CH7_CNTS	(*( GTM_TIM0_CH0_CNTS_type *) 0xf0101390u)	/* TIM0 Channel 7 SMU Shadow Counter Register */
#define GTM_TIM1_CH0_CNTS	(*( GTM_TIM0_CH0_CNTS_type *) 0xf0101810u)	/* TIM1Channel 0 SMU Shadow Counter Register */
#define GTM_TIM1_CH1_CNTS	(*( GTM_TIM0_CH0_CNTS_type *) 0xf0101890u)	/* TIM1Channel 1 SMU Shadow Counter Register */
#define GTM_TIM1_CH2_CNTS	(*( GTM_TIM0_CH0_CNTS_type *) 0xf0101910u)	/* TIM1Channel 2 SMU Shadow Counter Register */
#define GTM_TIM1_CH3_CNTS	(*( GTM_TIM0_CH0_CNTS_type *) 0xf0101990u)	/* TIM1Channel 3 SMU Shadow Counter Register */
#define GTM_TIM1_CH4_CNTS	(*( GTM_TIM0_CH0_CNTS_type *) 0xf0101a10u)	/* TIM1Channel 4 SMU Shadow Counter Register */
#define GTM_TIM1_CH5_CNTS	(*( GTM_TIM0_CH0_CNTS_type *) 0xf0101a90u)	/* TIM1Channel 5 SMU Shadow Counter Register */
#define GTM_TIM1_CH6_CNTS	(*( GTM_TIM0_CH0_CNTS_type *) 0xf0101b10u)	/* TIM1Channel 6 SMU Shadow Counter Register */
#define GTM_TIM1_CH7_CNTS	(*( GTM_TIM0_CH0_CNTS_type *) 0xf0101b90u)	/* TIM1Channel 7 SMU Shadow Counter Register */
#define GTM_TIM2_CH0_CNTS	(*( GTM_TIM0_CH0_CNTS_type *) 0xf0102010u)	/* TIM2 Channel 0 SMU Shadow Counter Register */
#define GTM_TIM2_CH1_CNTS	(*( GTM_TIM0_CH0_CNTS_type *) 0xf0102090u)	/* TIM2 Channel 1 SMU Shadow Counter Register */
#define GTM_TIM2_CH2_CNTS	(*( GTM_TIM0_CH0_CNTS_type *) 0xf0102110u)	/* TIM2 Channel 2 SMU Shadow Counter Register */
#define GTM_TIM2_CH3_CNTS	(*( GTM_TIM0_CH0_CNTS_type *) 0xf0102190u)	/* TIM2 Channel 3 SMU Shadow Counter Register */
#define GTM_TIM2_CH4_CNTS	(*( GTM_TIM0_CH0_CNTS_type *) 0xf0102210u)	/* TIM2 Channel 4 SMU Shadow Counter Register */
#define GTM_TIM2_CH5_CNTS	(*( GTM_TIM0_CH0_CNTS_type *) 0xf0102290u)	/* TIM2 Channel 5 SMU Shadow Counter Register */
#define GTM_TIM2_CH6_CNTS	(*( GTM_TIM0_CH0_CNTS_type *) 0xf0102310u)	/* TIM2 Channel 6 SMU Shadow Counter Register */
#define GTM_TIM2_CH7_CNTS	(*( GTM_TIM0_CH0_CNTS_type *) 0xf0102390u)	/* TIM2 Channel 7 SMU Shadow Counter Register */
#define GTM_TIM3_CH0_CNTS	(*( GTM_TIM0_CH0_CNTS_type *) 0xf0102810u)	/* TIM3 Channel 0 SMU Shadow Counter Register */
#define GTM_TIM3_CH1_CNTS	(*( GTM_TIM0_CH0_CNTS_type *) 0xf0102890u)	/* TIM3 Channel 1 SMU Shadow Counter Register */
#define GTM_TIM3_CH2_CNTS	(*( GTM_TIM0_CH0_CNTS_type *) 0xf0102910u)	/* TIM3 Channel 2 SMU Shadow Counter Register */
#define GTM_TIM3_CH3_CNTS	(*( GTM_TIM0_CH0_CNTS_type *) 0xf0102990u)	/* TIM3 Channel 3 SMU Shadow Counter Register */
#define GTM_TIM3_CH4_CNTS	(*( GTM_TIM0_CH0_CNTS_type *) 0xf0102a10u)	/* TIM3 Channel 4 SMU Shadow Counter Register */
#define GTM_TIM3_CH5_CNTS	(*( GTM_TIM0_CH0_CNTS_type *) 0xf0102a90u)	/* TIM3 Channel 5 SMU Shadow Counter Register */
#define GTM_TIM3_CH6_CNTS	(*( GTM_TIM0_CH0_CNTS_type *) 0xf0102b10u)	/* TIM3 Channel 6 SMU Shadow Counter Register */
#define GTM_TIM3_CH7_CNTS	(*( GTM_TIM0_CH0_CNTS_type *) 0xf0102b90u)	/* TIM3 Channel 7 SMU Shadow Counter Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 TIM_EN         : 1;	/* TIM channel x (x:0?7)enable */
		unsigned __sfrbit32 TIM_MODE       : 3;	/* TIM channel x (x:0?7) mode */
		unsigned __sfrbit32 OSM            : 1;	/* One-shot mode */
		unsigned __sfrbit32 ARU_EN         : 1;	/* GPR0 and GPR1 register values routed to ARU */
		unsigned __sfrbit32 CICTRL         : 1;	/* Channel Input Control */
		unsigned __sfrbit32 TBU0_SEL       : 1;	/* TBU_TS0 bits input select for TIM_CH[x]_GPRz (z: 0, 1) */
		unsigned __sfrbit32 GPR0_SEL       : 2;	/* Selection for GPR0 register */
		unsigned __sfrbit32 GPR1_SEL       : 2;	/* Selection for GPR1 register */
		unsigned __sfrbit32 CNTS_SEL       : 1;	/* Selection for CNTS register */
		unsigned __sfrbit32 DSL            : 1;	/* Signal level control */
		unsigned __sfrbit32 ISL            : 1;	/* Ignore signal level */
		unsigned __sfrbit32 ECNT_RESET     : 1;	/* Enables resetting the ECNT counter in periodic sampling mode */
		unsigned __sfrbit32 FLT_EN         : 1;	/* Filter enable for channel x (x:0?7) */
		unsigned __sfrbit32 FLT_CNT_FRQ    : 2;	/* Filter counter frequency select */
		unsigned __sfrbit32 EXT_CAP_EN     : 1;	/* Enables external capture mode */
		unsigned __sfrbit32 FLT_MODE_RE    : 1;	/* Filter mode for rising edge */
		unsigned __sfrbit32 FLT_CTR_RE     : 1;	/* Filter counter mode for rising edge */
		unsigned __sfrbit32 FLT_MODE_FE    : 1;	/* Filter mode for falling edge */
		unsigned __sfrbit32 FLT_CTR_FE     : 1;	/* Filter counter mode for falling edge */
		unsigned __sfrbit32 CLK_SEL        : 3;	/* CMU clock source select for channel */
		unsigned __sfrbit32 FR_ECNT_OFL    : 1;	/* Extended Edge counter overflow behaviour */
		unsigned __sfrbit32 EGPR0_SEL      : 1;	/* Extension of GPR0_SEL bit field */
		unsigned __sfrbit32 EGPR1_SEL      : 1;	/* Extension of GPR1_SEL bit field */
		unsigned __sfrbit32 TOCTRL         : 2;	/* Timeout control */
	} B;
	int I;
	unsigned int U;

} GTM_TIM0_CH0_CTRL_type;
#define GTM_TIM0_CH0_CTRL	(*( GTM_TIM0_CH0_CTRL_type *) 0xf0101024u)	/* TIM Channel 0 Control Register */
#define GTM_TIM0_CH1_CTRL	(*( GTM_TIM0_CH0_CTRL_type *) 0xf01010a4u)	/* TIM Channel 1 Control Register */
#define GTM_TIM0_CH2_CTRL	(*( GTM_TIM0_CH0_CTRL_type *) 0xf0101124u)	/* TIM Channel 2 Control Register */
#define GTM_TIM0_CH3_CTRL	(*( GTM_TIM0_CH0_CTRL_type *) 0xf01011a4u)	/* TIM Channel 3 Control Register */
#define GTM_TIM0_CH4_CTRL	(*( GTM_TIM0_CH0_CTRL_type *) 0xf0101224u)	/* TIM Channel 4 Control Register */
#define GTM_TIM0_CH5_CTRL	(*( GTM_TIM0_CH0_CTRL_type *) 0xf01012a4u)	/* TIM Channel 5 Control Register */
#define GTM_TIM0_CH6_CTRL	(*( GTM_TIM0_CH0_CTRL_type *) 0xf0101324u)	/* TIM Channel 6 Control Register */
#define GTM_TIM0_CH7_CTRL	(*( GTM_TIM0_CH0_CTRL_type *) 0xf01013a4u)	/* TIM Channel 7 Control Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned __sfrbit32 ECNT           : 16;	/* Edge counter */
		/* const */ unsigned __sfrbit32 Reserved       : 16;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GTM_TIM0_CH0_ECNT_type;
#define GTM_TIM0_CH0_ECNT	(*( GTM_TIM0_CH0_ECNT_type *) 0xf010100cu)	/* TIM0 Channel 0 Edge Counter Register */
#define GTM_TIM0_CH1_ECNT	(*( GTM_TIM0_CH0_ECNT_type *) 0xf010108cu)	/* TIM0 Channel 1 Edge Counter Register */
#define GTM_TIM0_CH2_ECNT	(*( GTM_TIM0_CH0_ECNT_type *) 0xf010110cu)	/* TIM0 Channel 2 Edge Counter Register */
#define GTM_TIM0_CH3_ECNT	(*( GTM_TIM0_CH0_ECNT_type *) 0xf010118cu)	/* TIM0 Channel 3 Edge Counter Register */
#define GTM_TIM0_CH4_ECNT	(*( GTM_TIM0_CH0_ECNT_type *) 0xf010120cu)	/* TIM0 Channel 4 Edge Counter Register */
#define GTM_TIM0_CH5_ECNT	(*( GTM_TIM0_CH0_ECNT_type *) 0xf010128cu)	/* TIM0 Channel 5 Edge Counter Register */
#define GTM_TIM0_CH6_ECNT	(*( GTM_TIM0_CH0_ECNT_type *) 0xf010130cu)	/* TIM0 Channel 6 Edge Counter Register */
#define GTM_TIM0_CH7_ECNT	(*( GTM_TIM0_CH0_ECNT_type *) 0xf010138cu)	/* TIM0 Channel 7 Edge Counter Register */
#define GTM_TIM1_CH0_ECNT	(*( GTM_TIM0_CH0_ECNT_type *) 0xf010180cu)	/* TIM1 Channel 0 Edge Counter Register */
#define GTM_TIM1_CH1_ECNT	(*( GTM_TIM0_CH0_ECNT_type *) 0xf010188cu)	/* TIM1 Channel 1 Edge Counter Register */
#define GTM_TIM1_CH2_ECNT	(*( GTM_TIM0_CH0_ECNT_type *) 0xf010190cu)	/* TIM1 Channel 2 Edge Counter Register */
#define GTM_TIM1_CH3_ECNT	(*( GTM_TIM0_CH0_ECNT_type *) 0xf010198cu)	/* TIM1 Channel 3 Edge Counter Register */
#define GTM_TIM1_CH4_ECNT	(*( GTM_TIM0_CH0_ECNT_type *) 0xf0101a0cu)	/* TIM1 Channel 4 Edge Counter Register */
#define GTM_TIM1_CH5_ECNT	(*( GTM_TIM0_CH0_ECNT_type *) 0xf0101a8cu)	/* TIM1 Channel 5 Edge Counter Register */
#define GTM_TIM1_CH6_ECNT	(*( GTM_TIM0_CH0_ECNT_type *) 0xf0101b0cu)	/* TIM1 Channel 6 Edge Counter Register */
#define GTM_TIM1_CH7_ECNT	(*( GTM_TIM0_CH0_ECNT_type *) 0xf0101b8cu)	/* TIM1 Channel 7 Edge Counter Register */
#define GTM_TIM2_CH0_ECNT	(*( GTM_TIM0_CH0_ECNT_type *) 0xf010200cu)	/* TIM2 Channel 0 Edge Counter Register */
#define GTM_TIM2_CH1_ECNT	(*( GTM_TIM0_CH0_ECNT_type *) 0xf010208cu)	/* TIM2 Channel 1 Edge Counter Register */
#define GTM_TIM2_CH2_ECNT	(*( GTM_TIM0_CH0_ECNT_type *) 0xf010210cu)	/* TIM2 Channel 2 Edge Counter Register */
#define GTM_TIM2_CH3_ECNT	(*( GTM_TIM0_CH0_ECNT_type *) 0xf010218cu)	/* TIM2 Channel 3 Edge Counter Register */
#define GTM_TIM2_CH4_ECNT	(*( GTM_TIM0_CH0_ECNT_type *) 0xf010220cu)	/* TIM2 Channel 4 Edge Counter Register */
#define GTM_TIM2_CH5_ECNT	(*( GTM_TIM0_CH0_ECNT_type *) 0xf010228cu)	/* TIM2 Channel 5 Edge Counter Register */
#define GTM_TIM2_CH6_ECNT	(*( GTM_TIM0_CH0_ECNT_type *) 0xf010230cu)	/* TIM2 Channel 6 Edge Counter Register */
#define GTM_TIM2_CH7_ECNT	(*( GTM_TIM0_CH0_ECNT_type *) 0xf010238cu)	/* TIM2 Channel 7 Edge Counter Register */
#define GTM_TIM3_CH0_ECNT	(*( GTM_TIM0_CH0_ECNT_type *) 0xf010280cu)	/* TIM3 Channel 0 Edge Counter Register */
#define GTM_TIM3_CH1_ECNT	(*( GTM_TIM0_CH0_ECNT_type *) 0xf010288cu)	/* TIM3 Channel 1 Edge Counter Register */
#define GTM_TIM3_CH2_ECNT	(*( GTM_TIM0_CH0_ECNT_type *) 0xf010290cu)	/* TIM3 Channel 2 Edge Counter Register */
#define GTM_TIM3_CH3_ECNT	(*( GTM_TIM0_CH0_ECNT_type *) 0xf010298cu)	/* TIM3 Channel 3 Edge Counter Register */
#define GTM_TIM3_CH4_ECNT	(*( GTM_TIM0_CH0_ECNT_type *) 0xf0102a0cu)	/* TIM3 Channel 4 Edge Counter Register */
#define GTM_TIM3_CH5_ECNT	(*( GTM_TIM0_CH0_ECNT_type *) 0xf0102a8cu)	/* TIM3 Channel 5 Edge Counter Register */
#define GTM_TIM3_CH6_ECNT	(*( GTM_TIM0_CH0_ECNT_type *) 0xf0102b0cu)	/* TIM3 Channel 6 Edge Counter Register */
#define GTM_TIM3_CH7_ECNT	(*( GTM_TIM0_CH0_ECNT_type *) 0xf0102b8cu)	/* TIM3 Channel 7 Edge Counter Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 EXT_CAP_SRC    : 3;	/* Defines selected source for triggering the EXT_CAPTURE functionality */
		/* const */ unsigned __sfrbit32 Reserved       : 29;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GTM_TIM0_CH0_ECTRL_type;
#define GTM_TIM0_CH0_ECTRL	(*( GTM_TIM0_CH0_ECTRL_type *) 0xf0101028u)	/* TIM0 Channel 0 External Capture Control Register */
#define GTM_TIM0_CH1_ECTRL	(*( GTM_TIM0_CH0_ECTRL_type *) 0xf01010a8u)	/* TIM0 Channel 1 External Capture Control Register */
#define GTM_TIM0_CH2_ECTRL	(*( GTM_TIM0_CH0_ECTRL_type *) 0xf0101128u)	/* TIM0 Channel 2 External Capture Control Register */
#define GTM_TIM0_CH3_ECTRL	(*( GTM_TIM0_CH0_ECTRL_type *) 0xf01011a8u)	/* TIM0 Channel 3 External Capture Control Register */
#define GTM_TIM0_CH4_ECTRL	(*( GTM_TIM0_CH0_ECTRL_type *) 0xf0101228u)	/* TIM0 Channel 4 External Capture Control Register */
#define GTM_TIM0_CH5_ECTRL	(*( GTM_TIM0_CH0_ECTRL_type *) 0xf01012a8u)	/* TIM0 Channel 5 External Capture Control Register */
#define GTM_TIM0_CH6_ECTRL	(*( GTM_TIM0_CH0_ECTRL_type *) 0xf0101328u)	/* TIM0 Channel 6 External Capture Control Register */
#define GTM_TIM0_CH7_ECTRL	(*( GTM_TIM0_CH0_ECTRL_type *) 0xf01013a8u)	/* TIM0 Channel 7 External Capture Control Register */
#define GTM_TIM1_CH0_ECTRL	(*( GTM_TIM0_CH0_ECTRL_type *) 0xf0101828u)	/* TIM1 Channel 0 External Capture Control Register */
#define GTM_TIM1_CH1_ECTRL	(*( GTM_TIM0_CH0_ECTRL_type *) 0xf01018a8u)	/* TIM1 Channel 1 External Capture Control Register */
#define GTM_TIM1_CH2_ECTRL	(*( GTM_TIM0_CH0_ECTRL_type *) 0xf0101928u)	/* TIM1 Channel 2 External Capture Control Register */
#define GTM_TIM1_CH3_ECTRL	(*( GTM_TIM0_CH0_ECTRL_type *) 0xf01019a8u)	/* TIM1 Channel 3 External Capture Control Register */
#define GTM_TIM1_CH4_ECTRL	(*( GTM_TIM0_CH0_ECTRL_type *) 0xf0101a28u)	/* TIM1 Channel 4 External Capture Control Register */
#define GTM_TIM1_CH5_ECTRL	(*( GTM_TIM0_CH0_ECTRL_type *) 0xf0101aa8u)	/* TIM1 Channel 5 External Capture Control Register */
#define GTM_TIM1_CH6_ECTRL	(*( GTM_TIM0_CH0_ECTRL_type *) 0xf0101b28u)	/* TIM1 Channel 6 External Capture Control Register */
#define GTM_TIM1_CH7_ECTRL	(*( GTM_TIM0_CH0_ECTRL_type *) 0xf0101ba8u)	/* TIM1 Channel 7 External Capture Control Register */
#define GTM_TIM2_CH0_ECTRL	(*( GTM_TIM0_CH0_ECTRL_type *) 0xf0102028u)	/* TIM2 Channel 0 External Capture Control Register */
#define GTM_TIM2_CH1_ECTRL	(*( GTM_TIM0_CH0_ECTRL_type *) 0xf01020a8u)	/* TIM2 Channel 1 External Capture Control Register */
#define GTM_TIM2_CH2_ECTRL	(*( GTM_TIM0_CH0_ECTRL_type *) 0xf0102128u)	/* TIM2 Channel 2 External Capture Control Register */
#define GTM_TIM2_CH3_ECTRL	(*( GTM_TIM0_CH0_ECTRL_type *) 0xf01021a8u)	/* TIM2 Channel 3 External Capture Control Register */
#define GTM_TIM2_CH4_ECTRL	(*( GTM_TIM0_CH0_ECTRL_type *) 0xf0102228u)	/* TIM2 Channel 4 External Capture Control Register */
#define GTM_TIM2_CH5_ECTRL	(*( GTM_TIM0_CH0_ECTRL_type *) 0xf01022a8u)	/* TIM2 Channel 5 External Capture Control Register */
#define GTM_TIM2_CH6_ECTRL	(*( GTM_TIM0_CH0_ECTRL_type *) 0xf0102328u)	/* TIM2 Channel 6 External Capture Control Register */
#define GTM_TIM2_CH7_ECTRL	(*( GTM_TIM0_CH0_ECTRL_type *) 0xf01023a8u)	/* TIM2 Channel 7 External Capture Control Register */
#define GTM_TIM3_CH0_ECTRL	(*( GTM_TIM0_CH0_ECTRL_type *) 0xf0102828u)	/* TIM3 Channel 0 External Capture Control Register */
#define GTM_TIM3_CH1_ECTRL	(*( GTM_TIM0_CH0_ECTRL_type *) 0xf01028a8u)	/* TIM3 Channel 1 External Capture Control Register */
#define GTM_TIM3_CH2_ECTRL	(*( GTM_TIM0_CH0_ECTRL_type *) 0xf0102928u)	/* TIM3 Channel 2 External Capture Control Register */
#define GTM_TIM3_CH3_ECTRL	(*( GTM_TIM0_CH0_ECTRL_type *) 0xf01029a8u)	/* TIM3 Channel 3 External Capture Control Register */
#define GTM_TIM3_CH4_ECTRL	(*( GTM_TIM0_CH0_ECTRL_type *) 0xf0102a28u)	/* TIM3 Channel 4 External Capture Control Register */
#define GTM_TIM3_CH5_ECTRL	(*( GTM_TIM0_CH0_ECTRL_type *) 0xf0102aa8u)	/* TIM3 Channel 5 External Capture Control Register */
#define GTM_TIM3_CH6_ECTRL	(*( GTM_TIM0_CH0_ECTRL_type *) 0xf0102b28u)	/* TIM3 Channel 6 External Capture Control Register */
#define GTM_TIM3_CH7_ECTRL	(*( GTM_TIM0_CH0_ECTRL_type *) 0xf0102ba8u)	/* TIM3 Channel 7 External Capture Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 NEWVAL_EIRQ_EN : 1;	/* TIM_NEWVALx_EIRQ error interrupt enable */
		unsigned __sfrbit32 ECNTOFL_EIRQ_EN: 1;	/* TIM_ECNTOFLx_IRQ interrupt enable */
		unsigned __sfrbit32 CNTOFL_EIRQ_EN : 1;	/* TIM_CNTOFLx_IRQ interrupt enable */
		unsigned __sfrbit32 GPROFL_EIRQ_EN : 1;	/* TIM_GPROFL_IRQ interrupt enable */
		unsigned __sfrbit32 TODET_EIRQ_EN  : 1;	/* TIM_TODETx_IRQ interrupt enable */
		unsigned __sfrbit32 GLITCHDET_EIRQ_EN: 1;	/* TIM_GLITCHDETx_IRQ interrupt enable */
		/* const */ unsigned __sfrbit32 Reserved       : 26;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GTM_TIM0_CH0_EIRQ_EN_type;
#define GTM_TIM0_CH0_EIRQ_EN	(*( GTM_TIM0_CH0_EIRQ_EN_type *) 0xf010103cu)	/* TIM0 Channel 0 Error Interrupt Enable Register */
#define GTM_TIM0_CH1_EIRQ_EN	(*( GTM_TIM0_CH0_EIRQ_EN_type *) 0xf01010bcu)	/* TIM0 Channel 1 Error Interrupt Enable Register */
#define GTM_TIM0_CH2_EIRQ_EN	(*( GTM_TIM0_CH0_EIRQ_EN_type *) 0xf010113cu)	/* TIM0 Channel 2 Error Interrupt Enable Register */
#define GTM_TIM0_CH3_EIRQ_EN	(*( GTM_TIM0_CH0_EIRQ_EN_type *) 0xf01011bcu)	/* TIM0 Channel 3 Error Interrupt Enable Register */
#define GTM_TIM0_CH4_EIRQ_EN	(*( GTM_TIM0_CH0_EIRQ_EN_type *) 0xf010123cu)	/* TIM0 Channel 4 Error Interrupt Enable Register */
#define GTM_TIM0_CH5_EIRQ_EN	(*( GTM_TIM0_CH0_EIRQ_EN_type *) 0xf01012bcu)	/* TIM0 Channel 5 Error Interrupt Enable Register */
#define GTM_TIM0_CH6_EIRQ_EN	(*( GTM_TIM0_CH0_EIRQ_EN_type *) 0xf010133cu)	/* TIM0 Channel 6 Error Interrupt Enable Register */
#define GTM_TIM0_CH7_EIRQ_EN	(*( GTM_TIM0_CH0_EIRQ_EN_type *) 0xf01013bcu)	/* TIM0 Channel 7 Error Interrupt Enable Register */
#define GTM_TIM1_CH0_EIRQ_EN	(*( GTM_TIM0_CH0_EIRQ_EN_type *) 0xf010183cu)	/* TIM1 Channel 0 Error Interrupt Enable Register */
#define GTM_TIM1_CH1_EIRQ_EN	(*( GTM_TIM0_CH0_EIRQ_EN_type *) 0xf01018bcu)	/* TIM1 Channel 1 Error Interrupt Enable Register */
#define GTM_TIM1_CH2_EIRQ_EN	(*( GTM_TIM0_CH0_EIRQ_EN_type *) 0xf010193cu)	/* TIM1 Channel 2 Error Interrupt Enable Register */
#define GTM_TIM1_CH3_EIRQ_EN	(*( GTM_TIM0_CH0_EIRQ_EN_type *) 0xf01019bcu)	/* TIM1 Channel 3 Error Interrupt Enable Register */
#define GTM_TIM1_CH4_EIRQ_EN	(*( GTM_TIM0_CH0_EIRQ_EN_type *) 0xf0101a3cu)	/* TIM1 Channel 4 Error Interrupt Enable Register */
#define GTM_TIM1_CH5_EIRQ_EN	(*( GTM_TIM0_CH0_EIRQ_EN_type *) 0xf0101abcu)	/* TIM1 Channel 5 Error Interrupt Enable Register */
#define GTM_TIM1_CH6_EIRQ_EN	(*( GTM_TIM0_CH0_EIRQ_EN_type *) 0xf0101b3cu)	/* TIM1 Channel 6 Error Interrupt Enable Register */
#define GTM_TIM1_CH7_EIRQ_EN	(*( GTM_TIM0_CH0_EIRQ_EN_type *) 0xf0101bbcu)	/* TIM1 Channel 7 Error Interrupt Enable Register */
#define GTM_TIM2_CH0_EIRQ_EN	(*( GTM_TIM0_CH0_EIRQ_EN_type *) 0xf010203cu)	/* TIM2 Channel 0 Error Interrupt Enable Register */
#define GTM_TIM2_CH1_EIRQ_EN	(*( GTM_TIM0_CH0_EIRQ_EN_type *) 0xf01020bcu)	/* TIM2 Channel 1 Error Interrupt Enable Register */
#define GTM_TIM2_CH2_EIRQ_EN	(*( GTM_TIM0_CH0_EIRQ_EN_type *) 0xf010213cu)	/* TIM2 Channel 2 Error Interrupt Enable Register */
#define GTM_TIM2_CH3_EIRQ_EN	(*( GTM_TIM0_CH0_EIRQ_EN_type *) 0xf01021bcu)	/* TIM2 Channel 3 Error Interrupt Enable Register */
#define GTM_TIM2_CH4_EIRQ_EN	(*( GTM_TIM0_CH0_EIRQ_EN_type *) 0xf010223cu)	/* TIM2 Channel 4 Error Interrupt Enable Register */
#define GTM_TIM2_CH5_EIRQ_EN	(*( GTM_TIM0_CH0_EIRQ_EN_type *) 0xf01022bcu)	/* TIM2 Channel 5 Error Interrupt Enable Register */
#define GTM_TIM2_CH6_EIRQ_EN	(*( GTM_TIM0_CH0_EIRQ_EN_type *) 0xf010233cu)	/* TIM2 Channel 6 Error Interrupt Enable Register */
#define GTM_TIM2_CH7_EIRQ_EN	(*( GTM_TIM0_CH0_EIRQ_EN_type *) 0xf01023bcu)	/* TIM2 Channel 7 Error Interrupt Enable Register */
#define GTM_TIM3_CH0_EIRQ_EN	(*( GTM_TIM0_CH0_EIRQ_EN_type *) 0xf010283cu)	/* TIM3 Channel 0 Error Interrupt Enable Register */
#define GTM_TIM3_CH1_EIRQ_EN	(*( GTM_TIM0_CH0_EIRQ_EN_type *) 0xf01028bcu)	/* TIM3 Channel 1 Error Interrupt Enable Register */
#define GTM_TIM3_CH2_EIRQ_EN	(*( GTM_TIM0_CH0_EIRQ_EN_type *) 0xf010293cu)	/* TIM3 Channel 2 Error Interrupt Enable Register */
#define GTM_TIM3_CH3_EIRQ_EN	(*( GTM_TIM0_CH0_EIRQ_EN_type *) 0xf01029bcu)	/* TIM3 Channel 3 Error Interrupt Enable Register */
#define GTM_TIM3_CH4_EIRQ_EN	(*( GTM_TIM0_CH0_EIRQ_EN_type *) 0xf0102a3cu)	/* TIM3 Channel 4 Error Interrupt Enable Register */
#define GTM_TIM3_CH5_EIRQ_EN	(*( GTM_TIM0_CH0_EIRQ_EN_type *) 0xf0102abcu)	/* TIM3 Channel 5 Error Interrupt Enable Register */
#define GTM_TIM3_CH6_EIRQ_EN	(*( GTM_TIM0_CH0_EIRQ_EN_type *) 0xf0102b3cu)	/* TIM3 Channel 6 Error Interrupt Enable Register */
#define GTM_TIM3_CH7_EIRQ_EN	(*( GTM_TIM0_CH0_EIRQ_EN_type *) 0xf0102bbcu)	/* TIM3 Channel 7 Error Interrupt Enable Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 FLT_FE         : 24;	/* Filter parameter for falling edge */
		/* const */ unsigned __sfrbit32 Reserved       : 8;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GTM_TIM0_CH0_FLT_FE_type;
#define GTM_TIM0_CH0_FLT_FE	(*( GTM_TIM0_CH0_FLT_FE_type *) 0xf0101020u)	/* TIM0 Channel 0 Filter Parameter 1 Register */
#define GTM_TIM0_CH1_FLT_FE	(*( GTM_TIM0_CH0_FLT_FE_type *) 0xf01010a0u)	/* TIM0 Channel 1 Filter Parameter 1 Register */
#define GTM_TIM0_CH2_FLT_FE	(*( GTM_TIM0_CH0_FLT_FE_type *) 0xf0101120u)	/* TIM0 Channel 2 Filter Parameter 1 Register */
#define GTM_TIM0_CH3_FLT_FE	(*( GTM_TIM0_CH0_FLT_FE_type *) 0xf01011a0u)	/* TIM0 Channel 3 Filter Parameter 1 Register */
#define GTM_TIM0_CH4_FLT_FE	(*( GTM_TIM0_CH0_FLT_FE_type *) 0xf0101220u)	/* TIM0 Channel 4 Filter Parameter 1 Register */
#define GTM_TIM0_CH5_FLT_FE	(*( GTM_TIM0_CH0_FLT_FE_type *) 0xf01012a0u)	/* TIM0 Channel 5 Filter Parameter 1 Register */
#define GTM_TIM0_CH6_FLT_FE	(*( GTM_TIM0_CH0_FLT_FE_type *) 0xf0101320u)	/* TIM0 Channel 6 Filter Parameter 1 Register */
#define GTM_TIM0_CH7_FLT_FE	(*( GTM_TIM0_CH0_FLT_FE_type *) 0xf01013a0u)	/* TIM0 Channel 7 Filter Parameter 1 Register */
#define GTM_TIM1_CH0_FLT_FE	(*( GTM_TIM0_CH0_FLT_FE_type *) 0xf0101820u)	/* TIM1 Channel 0 Filter Parameter 1 Register */
#define GTM_TIM1_CH1_FLT_FE	(*( GTM_TIM0_CH0_FLT_FE_type *) 0xf01018a0u)	/* TIM1 Channel 1 Filter Parameter 1 Register */
#define GTM_TIM1_CH2_FLT_FE	(*( GTM_TIM0_CH0_FLT_FE_type *) 0xf0101920u)	/* TIM1 Channel 2 Filter Parameter 1 Register */
#define GTM_TIM1_CH3_FLT_FE	(*( GTM_TIM0_CH0_FLT_FE_type *) 0xf01019a0u)	/* TIM1 Channel 3 Filter Parameter 1 Register */
#define GTM_TIM1_CH4_FLT_FE	(*( GTM_TIM0_CH0_FLT_FE_type *) 0xf0101a20u)	/* TIM1 Channel 4 Filter Parameter 1 Register */
#define GTM_TIM1_CH5_FLT_FE	(*( GTM_TIM0_CH0_FLT_FE_type *) 0xf0101aa0u)	/* TIM1 Channel 5 Filter Parameter 1 Register */
#define GTM_TIM1_CH6_FLT_FE	(*( GTM_TIM0_CH0_FLT_FE_type *) 0xf0101b20u)	/* TIM1 Channel 6 Filter Parameter 1 Register */
#define GTM_TIM1_CH7_FLT_FE	(*( GTM_TIM0_CH0_FLT_FE_type *) 0xf0101ba0u)	/* TIM1 Channel 7 Filter Parameter 1 Register */
#define GTM_TIM2_CH0_FLT_FE	(*( GTM_TIM0_CH0_FLT_FE_type *) 0xf0102020u)	/* TIM2 Channel 0 Filter Parameter 1 Register */
#define GTM_TIM2_CH1_FLT_FE	(*( GTM_TIM0_CH0_FLT_FE_type *) 0xf01020a0u)	/* TIM2 Channel 1 Filter Parameter 1 Register */
#define GTM_TIM2_CH2_FLT_FE	(*( GTM_TIM0_CH0_FLT_FE_type *) 0xf0102120u)	/* TIM2 Channel 2 Filter Parameter 1 Register */
#define GTM_TIM2_CH3_FLT_FE	(*( GTM_TIM0_CH0_FLT_FE_type *) 0xf01021a0u)	/* TIM2 Channel 3 Filter Parameter 1 Register */
#define GTM_TIM2_CH4_FLT_FE	(*( GTM_TIM0_CH0_FLT_FE_type *) 0xf0102220u)	/* TIM2 Channel 4 Filter Parameter 1 Register */
#define GTM_TIM2_CH5_FLT_FE	(*( GTM_TIM0_CH0_FLT_FE_type *) 0xf01022a0u)	/* TIM2 Channel 5 Filter Parameter 1 Register */
#define GTM_TIM2_CH6_FLT_FE	(*( GTM_TIM0_CH0_FLT_FE_type *) 0xf0102320u)	/* TIM2 Channel 6 Filter Parameter 1 Register */
#define GTM_TIM2_CH7_FLT_FE	(*( GTM_TIM0_CH0_FLT_FE_type *) 0xf01023a0u)	/* TIM2 Channel 7 Filter Parameter 1 Register */
#define GTM_TIM3_CH0_FLT_FE	(*( GTM_TIM0_CH0_FLT_FE_type *) 0xf0102820u)	/* TIM3 Channel 0 Filter Parameter 1 Register */
#define GTM_TIM3_CH1_FLT_FE	(*( GTM_TIM0_CH0_FLT_FE_type *) 0xf01028a0u)	/* TIM3 Channel 1 Filter Parameter 1 Register */
#define GTM_TIM3_CH2_FLT_FE	(*( GTM_TIM0_CH0_FLT_FE_type *) 0xf0102920u)	/* TIM3 Channel 2 Filter Parameter 1 Register */
#define GTM_TIM3_CH3_FLT_FE	(*( GTM_TIM0_CH0_FLT_FE_type *) 0xf01029a0u)	/* TIM3 Channel 3 Filter Parameter 1 Register */
#define GTM_TIM3_CH4_FLT_FE	(*( GTM_TIM0_CH0_FLT_FE_type *) 0xf0102a20u)	/* TIM3 Channel 4 Filter Parameter 1 Register */
#define GTM_TIM3_CH5_FLT_FE	(*( GTM_TIM0_CH0_FLT_FE_type *) 0xf0102aa0u)	/* TIM3 Channel 5 Filter Parameter 1 Register */
#define GTM_TIM3_CH6_FLT_FE	(*( GTM_TIM0_CH0_FLT_FE_type *) 0xf0102b20u)	/* TIM3 Channel 6 Filter Parameter 1 Register */
#define GTM_TIM3_CH7_FLT_FE	(*( GTM_TIM0_CH0_FLT_FE_type *) 0xf0102ba0u)	/* TIM3 Channel 7 Filter Parameter 1 Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 FLT_RE         : 24;	/* Filter parameter for rising edge */
		/* const */ unsigned __sfrbit32 Reserved       : 8;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GTM_TIM0_CH0_FLT_RE_type;
#define GTM_TIM0_CH0_FLT_RE	(*( GTM_TIM0_CH0_FLT_RE_type *) 0xf010101cu)	/* GTM_TIM0 Channel 0 Filter Parameter 0 Register */
#define GTM_TIM0_CH1_FLT_RE	(*( GTM_TIM0_CH0_FLT_RE_type *) 0xf010109cu)	/* GTM_TIM0 Channel 1 Filter Parameter 0 Register */
#define GTM_TIM0_CH2_FLT_RE	(*( GTM_TIM0_CH0_FLT_RE_type *) 0xf010111cu)	/* GTM_TIM0 Channel 2 Filter Parameter 0 Register */
#define GTM_TIM0_CH3_FLT_RE	(*( GTM_TIM0_CH0_FLT_RE_type *) 0xf010119cu)	/* GTM_TIM0 Channel 3 Filter Parameter 0 Register */
#define GTM_TIM0_CH4_FLT_RE	(*( GTM_TIM0_CH0_FLT_RE_type *) 0xf010121cu)	/* GTM_TIM0 Channel 4 Filter Parameter 0 Register */
#define GTM_TIM0_CH5_FLT_RE	(*( GTM_TIM0_CH0_FLT_RE_type *) 0xf010129cu)	/* GTM_TIM0 Channel 5 Filter Parameter 0 Register */
#define GTM_TIM0_CH6_FLT_RE	(*( GTM_TIM0_CH0_FLT_RE_type *) 0xf010131cu)	/* GTM_TIM0 Channel 6 Filter Parameter 0 Register */
#define GTM_TIM0_CH7_FLT_RE	(*( GTM_TIM0_CH0_FLT_RE_type *) 0xf010139cu)	/* GTM_TIM0 Channel 7 Filter Parameter 0 Register */
#define GTM_TIM1_CH0_FLT_RE	(*( GTM_TIM0_CH0_FLT_RE_type *) 0xf010181cu)	/* GTM_TIM1 Channel 0 Filter Parameter 0 Register */
#define GTM_TIM1_CH1_FLT_RE	(*( GTM_TIM0_CH0_FLT_RE_type *) 0xf010189cu)	/* GTM_TIM1 Channel 1 Filter Parameter 0 Register */
#define GTM_TIM1_CH2_FLT_RE	(*( GTM_TIM0_CH0_FLT_RE_type *) 0xf010191cu)	/* GTM_TIM1 Channel 2 Filter Parameter 0 Register */
#define GTM_TIM1_CH3_FLT_RE	(*( GTM_TIM0_CH0_FLT_RE_type *) 0xf010199cu)	/* GTM_TIM1 Channel 3 Filter Parameter 0 Register */
#define GTM_TIM1_CH4_FLT_RE	(*( GTM_TIM0_CH0_FLT_RE_type *) 0xf0101a1cu)	/* GTM_TIM1 Channel 4 Filter Parameter 0 Register */
#define GTM_TIM1_CH5_FLT_RE	(*( GTM_TIM0_CH0_FLT_RE_type *) 0xf0101a9cu)	/* GTM_TIM1 Channel 5 Filter Parameter 0 Register */
#define GTM_TIM1_CH6_FLT_RE	(*( GTM_TIM0_CH0_FLT_RE_type *) 0xf0101b1cu)	/* GTM_TIM1 Channel 6 Filter Parameter 0 Register */
#define GTM_TIM1_CH7_FLT_RE	(*( GTM_TIM0_CH0_FLT_RE_type *) 0xf0101b9cu)	/* GTM_TIM1 Channel 7 Filter Parameter 0 Register */
#define GTM_TIM2_CH0_FLT_RE	(*( GTM_TIM0_CH0_FLT_RE_type *) 0xf010201cu)	/* GTM_TIM2 Channel 0 Filter Parameter 0 Register */
#define GTM_TIM2_CH1_FLT_RE	(*( GTM_TIM0_CH0_FLT_RE_type *) 0xf010209cu)	/* GTM_TIM2 Channel 1 Filter Parameter 0 Register */
#define GTM_TIM2_CH2_FLT_RE	(*( GTM_TIM0_CH0_FLT_RE_type *) 0xf010211cu)	/* GTM_TIM2 Channel 2 Filter Parameter 0 Register */
#define GTM_TIM2_CH3_FLT_RE	(*( GTM_TIM0_CH0_FLT_RE_type *) 0xf010219cu)	/* GTM_TIM2 Channel 3 Filter Parameter 0 Register */
#define GTM_TIM2_CH4_FLT_RE	(*( GTM_TIM0_CH0_FLT_RE_type *) 0xf010221cu)	/* GTM_TIM2 Channel 4 Filter Parameter 0 Register */
#define GTM_TIM2_CH5_FLT_RE	(*( GTM_TIM0_CH0_FLT_RE_type *) 0xf010229cu)	/* GTM_TIM2 Channel 5 Filter Parameter 0 Register */
#define GTM_TIM2_CH6_FLT_RE	(*( GTM_TIM0_CH0_FLT_RE_type *) 0xf010231cu)	/* GTM_TIM2 Channel 6 Filter Parameter 0 Register */
#define GTM_TIM2_CH7_FLT_RE	(*( GTM_TIM0_CH0_FLT_RE_type *) 0xf010239cu)	/* GTM_TIM2 Channel 7 Filter Parameter 0 Register */
#define GTM_TIM3_CH0_FLT_RE	(*( GTM_TIM0_CH0_FLT_RE_type *) 0xf010281cu)	/* GTM_TIM3 Channel 0 Filter Parameter 0 Register */
#define GTM_TIM3_CH1_FLT_RE	(*( GTM_TIM0_CH0_FLT_RE_type *) 0xf010289cu)	/* GTM_TIM3 Channel 1 Filter Parameter 0 Register */
#define GTM_TIM3_CH2_FLT_RE	(*( GTM_TIM0_CH0_FLT_RE_type *) 0xf010291cu)	/* GTM_TIM3 Channel 2 Filter Parameter 0 Register */
#define GTM_TIM3_CH3_FLT_RE	(*( GTM_TIM0_CH0_FLT_RE_type *) 0xf010299cu)	/* GTM_TIM3 Channel 3 Filter Parameter 0 Register */
#define GTM_TIM3_CH4_FLT_RE	(*( GTM_TIM0_CH0_FLT_RE_type *) 0xf0102a1cu)	/* GTM_TIM3 Channel 4 Filter Parameter 0 Register */
#define GTM_TIM3_CH5_FLT_RE	(*( GTM_TIM0_CH0_FLT_RE_type *) 0xf0102a9cu)	/* GTM_TIM3 Channel 5 Filter Parameter 0 Register */
#define GTM_TIM3_CH6_FLT_RE	(*( GTM_TIM0_CH0_FLT_RE_type *) 0xf0102b1cu)	/* GTM_TIM3 Channel 6 Filter Parameter 0 Register */
#define GTM_TIM3_CH7_FLT_RE	(*( GTM_TIM0_CH0_FLT_RE_type *) 0xf0102b9cu)	/* GTM_TIM3 Channel 7 Filter Parameter 0 Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned __sfrbit32 GPR0           : 24;	/* Input signal characteristic parameter 0 */
		/* const */ unsigned __sfrbit32 ECNT           : 8;	/* Edge counter */
	} B;
	int I;
	unsigned int U;

} GTM_TIM0_CH0_GPR0_type;
#define GTM_TIM0_CH0_GPR0	(*( GTM_TIM0_CH0_GPR0_type *) 0xf0101000u)	/* TIM0 Channel 0 General Purpose 0 Register */
#define GTM_TIM0_CH1_GPR0	(*( GTM_TIM0_CH0_GPR0_type *) 0xf0101080u)	/* TIM0 Channel 1 General Purpose 0 Register */
#define GTM_TIM0_CH2_GPR0	(*( GTM_TIM0_CH0_GPR0_type *) 0xf0101100u)	/* TIM0 Channel 2 General Purpose 0 Register */
#define GTM_TIM0_CH3_GPR0	(*( GTM_TIM0_CH0_GPR0_type *) 0xf0101180u)	/* TIM0 Channel 3 General Purpose 0 Register */
#define GTM_TIM0_CH4_GPR0	(*( GTM_TIM0_CH0_GPR0_type *) 0xf0101200u)	/* TIM0 Channel 4 General Purpose 0 Register */
#define GTM_TIM0_CH5_GPR0	(*( GTM_TIM0_CH0_GPR0_type *) 0xf0101280u)	/* TIM0 Channel 5 General Purpose 0 Register */
#define GTM_TIM0_CH6_GPR0	(*( GTM_TIM0_CH0_GPR0_type *) 0xf0101300u)	/* TIM0 Channel 6 General Purpose 0 Register */
#define GTM_TIM0_CH7_GPR0	(*( GTM_TIM0_CH0_GPR0_type *) 0xf0101380u)	/* TIM0 Channel 7 General Purpose 0 Register */
#define GTM_TIM1_CH0_GPR0	(*( GTM_TIM0_CH0_GPR0_type *) 0xf0101800u)	/* TIM1 Channel 0 General Purpose 0 Register */
#define GTM_TIM1_CH1_GPR0	(*( GTM_TIM0_CH0_GPR0_type *) 0xf0101880u)	/* TIM1 Channel 1 General Purpose 0 Register */
#define GTM_TIM1_CH2_GPR0	(*( GTM_TIM0_CH0_GPR0_type *) 0xf0101900u)	/* TIM1 Channel 2 General Purpose 0 Register */
#define GTM_TIM1_CH3_GPR0	(*( GTM_TIM0_CH0_GPR0_type *) 0xf0101980u)	/* TIM1 Channel 3 General Purpose 0 Register */
#define GTM_TIM1_CH4_GPR0	(*( GTM_TIM0_CH0_GPR0_type *) 0xf0101a00u)	/* TIM1 Channel 4 General Purpose 0 Register */
#define GTM_TIM1_CH5_GPR0	(*( GTM_TIM0_CH0_GPR0_type *) 0xf0101a80u)	/* TIM1 Channel 5 General Purpose 0 Register */
#define GTM_TIM1_CH6_GPR0	(*( GTM_TIM0_CH0_GPR0_type *) 0xf0101b00u)	/* TIM1 Channel 6 General Purpose 0 Register */
#define GTM_TIM1_CH7_GPR0	(*( GTM_TIM0_CH0_GPR0_type *) 0xf0101b80u)	/* TIM1 Channel 7 General Purpose 0 Register */
#define GTM_TIM2_CH0_GPR0	(*( GTM_TIM0_CH0_GPR0_type *) 0xf0102000u)	/* TIM2 Channel 0 General Purpose 0 Register */
#define GTM_TIM2_CH1_GPR0	(*( GTM_TIM0_CH0_GPR0_type *) 0xf0102080u)	/* TIM2 Channel 1 General Purpose 0 Register */
#define GTM_TIM2_CH2_GPR0	(*( GTM_TIM0_CH0_GPR0_type *) 0xf0102100u)	/* TIM2 Channel 2 General Purpose 0 Register */
#define GTM_TIM2_CH3_GPR0	(*( GTM_TIM0_CH0_GPR0_type *) 0xf0102180u)	/* TIM2 Channel 3 General Purpose 0 Register */
#define GTM_TIM2_CH4_GPR0	(*( GTM_TIM0_CH0_GPR0_type *) 0xf0102200u)	/* TIM2 Channel 4 General Purpose 0 Register */
#define GTM_TIM2_CH5_GPR0	(*( GTM_TIM0_CH0_GPR0_type *) 0xf0102280u)	/* TIM2 Channel 5 General Purpose 0 Register */
#define GTM_TIM2_CH6_GPR0	(*( GTM_TIM0_CH0_GPR0_type *) 0xf0102300u)	/* TIM2 Channel 6 General Purpose 0 Register */
#define GTM_TIM2_CH7_GPR0	(*( GTM_TIM0_CH0_GPR0_type *) 0xf0102380u)	/* TIM2 Channel 7 General Purpose 0 Register */
#define GTM_TIM3_CH0_GPR0	(*( GTM_TIM0_CH0_GPR0_type *) 0xf0102800u)	/* TIM3 Channel 0 General Purpose 0 Register */
#define GTM_TIM3_CH1_GPR0	(*( GTM_TIM0_CH0_GPR0_type *) 0xf0102880u)	/* TIM3 Channel 1 General Purpose 0 Register */
#define GTM_TIM3_CH2_GPR0	(*( GTM_TIM0_CH0_GPR0_type *) 0xf0102900u)	/* TIM3 Channel 2 General Purpose 0 Register */
#define GTM_TIM3_CH3_GPR0	(*( GTM_TIM0_CH0_GPR0_type *) 0xf0102980u)	/* TIM3 Channel 3 General Purpose 0 Register */
#define GTM_TIM3_CH4_GPR0	(*( GTM_TIM0_CH0_GPR0_type *) 0xf0102a00u)	/* TIM3 Channel 4 General Purpose 0 Register */
#define GTM_TIM3_CH5_GPR0	(*( GTM_TIM0_CH0_GPR0_type *) 0xf0102a80u)	/* TIM3 Channel 5 General Purpose 0 Register */
#define GTM_TIM3_CH6_GPR0	(*( GTM_TIM0_CH0_GPR0_type *) 0xf0102b00u)	/* TIM3 Channel 6 General Purpose 0 Register */
#define GTM_TIM3_CH7_GPR0	(*( GTM_TIM0_CH0_GPR0_type *) 0xf0102b80u)	/* TIM3 Channel 7 General Purpose 0 Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned __sfrbit32 GPR1           : 24;	/* Input signal characteristic parameter 1 */
		/* const */ unsigned __sfrbit32 ECNT           : 8;	/* Edge counter */
	} B;
	int I;
	unsigned int U;

} GTM_TIM0_CH0_GPR1_type;
#define GTM_TIM0_CH0_GPR1	(*( GTM_TIM0_CH0_GPR1_type *) 0xf0101004u)	/* TIM0 Channel 0 General Purpose 1 Register */
#define GTM_TIM0_CH1_GPR1	(*( GTM_TIM0_CH0_GPR1_type *) 0xf0101084u)	/* TIM0 Channel 1 General Purpose 1 Register */
#define GTM_TIM0_CH2_GPR1	(*( GTM_TIM0_CH0_GPR1_type *) 0xf0101104u)	/* TIM0 Channel 2 General Purpose 1 Register */
#define GTM_TIM0_CH3_GPR1	(*( GTM_TIM0_CH0_GPR1_type *) 0xf0101184u)	/* TIM0 Channel 3 General Purpose 1 Register */
#define GTM_TIM0_CH4_GPR1	(*( GTM_TIM0_CH0_GPR1_type *) 0xf0101204u)	/* TIM0 Channel 4 General Purpose 1 Register */
#define GTM_TIM0_CH5_GPR1	(*( GTM_TIM0_CH0_GPR1_type *) 0xf0101284u)	/* TIM0 Channel 5 General Purpose 1 Register */
#define GTM_TIM0_CH6_GPR1	(*( GTM_TIM0_CH0_GPR1_type *) 0xf0101304u)	/* TIM0 Channel 6 General Purpose 1 Register */
#define GTM_TIM0_CH7_GPR1	(*( GTM_TIM0_CH0_GPR1_type *) 0xf0101384u)	/* TIM0 Channel 7 General Purpose 1 Register */
#define GTM_TIM1_CH0_GPR1	(*( GTM_TIM0_CH0_GPR1_type *) 0xf0101804u)	/* TIM1 Channel 0 General Purpose 1 Register */
#define GTM_TIM1_CH1_GPR1	(*( GTM_TIM0_CH0_GPR1_type *) 0xf0101884u)	/* TIM1 Channel 1 General Purpose 1 Register */
#define GTM_TIM1_CH2_GPR1	(*( GTM_TIM0_CH0_GPR1_type *) 0xf0101904u)	/* TIM1 Channel 2 General Purpose 1 Register */
#define GTM_TIM1_CH3_GPR1	(*( GTM_TIM0_CH0_GPR1_type *) 0xf0101984u)	/* TIM1 Channel 3 General Purpose 1 Register */
#define GTM_TIM1_CH4_GPR1	(*( GTM_TIM0_CH0_GPR1_type *) 0xf0101a04u)	/* TIM1 Channel 4 General Purpose 1 Register */
#define GTM_TIM1_CH5_GPR1	(*( GTM_TIM0_CH0_GPR1_type *) 0xf0101a84u)	/* TIM1 Channel 5 General Purpose 1 Register */
#define GTM_TIM1_CH6_GPR1	(*( GTM_TIM0_CH0_GPR1_type *) 0xf0101b04u)	/* TIM1 Channel 6 General Purpose 1 Register */
#define GTM_TIM1_CH7_GPR1	(*( GTM_TIM0_CH0_GPR1_type *) 0xf0101b84u)	/* TIM1 Channel 7 General Purpose 1 Register */
#define GTM_TIM2_CH0_GPR1	(*( GTM_TIM0_CH0_GPR1_type *) 0xf0102004u)	/* TIM2 Channel 0 General Purpose 1 Register */
#define GTM_TIM2_CH1_GPR1	(*( GTM_TIM0_CH0_GPR1_type *) 0xf0102084u)	/* TIM2 Channel 1 General Purpose 1 Register */
#define GTM_TIM2_CH2_GPR1	(*( GTM_TIM0_CH0_GPR1_type *) 0xf0102104u)	/* TIM2 Channel 2 General Purpose 1 Register */
#define GTM_TIM2_CH3_GPR1	(*( GTM_TIM0_CH0_GPR1_type *) 0xf0102184u)	/* TIM2 Channel 3 General Purpose 1 Register */
#define GTM_TIM2_CH4_GPR1	(*( GTM_TIM0_CH0_GPR1_type *) 0xf0102204u)	/* TIM2 Channel 4 General Purpose 1 Register */
#define GTM_TIM2_CH5_GPR1	(*( GTM_TIM0_CH0_GPR1_type *) 0xf0102284u)	/* TIM2 Channel 5 General Purpose 1 Register */
#define GTM_TIM2_CH6_GPR1	(*( GTM_TIM0_CH0_GPR1_type *) 0xf0102304u)	/* TIM2 Channel 6 General Purpose 1 Register */
#define GTM_TIM2_CH7_GPR1	(*( GTM_TIM0_CH0_GPR1_type *) 0xf0102384u)	/* TIM2 Channel 7 General Purpose 1 Register */
#define GTM_TIM3_CH0_GPR1	(*( GTM_TIM0_CH0_GPR1_type *) 0xf0102804u)	/* TIM3 Channel 0 General Purpose 1 Register */
#define GTM_TIM3_CH1_GPR1	(*( GTM_TIM0_CH0_GPR1_type *) 0xf0102884u)	/* TIM3 Channel 1 General Purpose 1 Register */
#define GTM_TIM3_CH2_GPR1	(*( GTM_TIM0_CH0_GPR1_type *) 0xf0102904u)	/* TIM3 Channel 2 General Purpose 1 Register */
#define GTM_TIM3_CH3_GPR1	(*( GTM_TIM0_CH0_GPR1_type *) 0xf0102984u)	/* TIM3 Channel 3 General Purpose 1 Register */
#define GTM_TIM3_CH4_GPR1	(*( GTM_TIM0_CH0_GPR1_type *) 0xf0102a04u)	/* TIM3 Channel 4 General Purpose 1 Register */
#define GTM_TIM3_CH5_GPR1	(*( GTM_TIM0_CH0_GPR1_type *) 0xf0102a84u)	/* TIM3 Channel 5 General Purpose 1 Register */
#define GTM_TIM3_CH6_GPR1	(*( GTM_TIM0_CH0_GPR1_type *) 0xf0102b04u)	/* TIM3 Channel 6 General Purpose 1 Register */
#define GTM_TIM3_CH7_GPR1	(*( GTM_TIM0_CH0_GPR1_type *) 0xf0102b84u)	/* TIM3 Channel 7 General Purpose 1 Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 NEWVAL_IRQ_EN  : 1;	/* TIM_NEWVALx_IRQ interrupt enable */
		unsigned __sfrbit32 ECNTOFL_IRQ_EN : 1;	/* TIM_ECNTOFLx_IRQ interrupt enable */
		unsigned __sfrbit32 CNTOFL_IRQ_EN  : 1;	/* TIM_CNTOFLx_IRQ interrupt enable */
		unsigned __sfrbit32 GPROFL_IRQ_EN  : 1;	/* TIM_GPROFLx_IRQ interrupt enable */
		unsigned __sfrbit32 TODET_IRQ_EN   : 1;	/* TIM_TODETx_IRQ interrupt enable */
		unsigned __sfrbit32 GLITCHDET_IRQ_EN: 1;	/* TIM_GLITCHDETx_IRQ interrupt enable */
		/* const */ unsigned __sfrbit32 Reserved       : 26;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GTM_TIM0_CH0_IRQ_EN_type;
#define GTM_TIM0_CH0_IRQ_EN	(*( GTM_TIM0_CH0_IRQ_EN_type *) 0xf0101030u)	/* TIM0 Channel 0 Interrupt Enable Register */
#define GTM_TIM0_CH1_IRQ_EN	(*( GTM_TIM0_CH0_IRQ_EN_type *) 0xf01010b0u)	/* TIM0 Channel 1 Interrupt Enable Register */
#define GTM_TIM0_CH2_IRQ_EN	(*( GTM_TIM0_CH0_IRQ_EN_type *) 0xf0101130u)	/* TIM0 Channel 2 Interrupt Enable Register */
#define GTM_TIM0_CH3_IRQ_EN	(*( GTM_TIM0_CH0_IRQ_EN_type *) 0xf01011b0u)	/* TIM0 Channel 3 Interrupt Enable Register */
#define GTM_TIM0_CH4_IRQ_EN	(*( GTM_TIM0_CH0_IRQ_EN_type *) 0xf0101230u)	/* TIM0 Channel 4 Interrupt Enable Register */
#define GTM_TIM0_CH5_IRQ_EN	(*( GTM_TIM0_CH0_IRQ_EN_type *) 0xf01012b0u)	/* TIM0 Channel 5 Interrupt Enable Register */
#define GTM_TIM0_CH6_IRQ_EN	(*( GTM_TIM0_CH0_IRQ_EN_type *) 0xf0101330u)	/* TIM0 Channel 6 Interrupt Enable Register */
#define GTM_TIM0_CH7_IRQ_EN	(*( GTM_TIM0_CH0_IRQ_EN_type *) 0xf01013b0u)	/* TIM0 Channel 7 Interrupt Enable Register */
#define GTM_TIM1_CH0_IRQ_EN	(*( GTM_TIM0_CH0_IRQ_EN_type *) 0xf0101830u)	/* TIM1 Channel 0 Interrupt Enable Register */
#define GTM_TIM1_CH1_IRQ_EN	(*( GTM_TIM0_CH0_IRQ_EN_type *) 0xf01018b0u)	/* TIM1 Channel 1 Interrupt Enable Register */
#define GTM_TIM1_CH2_IRQ_EN	(*( GTM_TIM0_CH0_IRQ_EN_type *) 0xf0101930u)	/* TIM1 Channel 2 Interrupt Enable Register */
#define GTM_TIM1_CH3_IRQ_EN	(*( GTM_TIM0_CH0_IRQ_EN_type *) 0xf01019b0u)	/* TIM1 Channel 3 Interrupt Enable Register */
#define GTM_TIM1_CH4_IRQ_EN	(*( GTM_TIM0_CH0_IRQ_EN_type *) 0xf0101a30u)	/* TIM1 Channel 4 Interrupt Enable Register */
#define GTM_TIM1_CH5_IRQ_EN	(*( GTM_TIM0_CH0_IRQ_EN_type *) 0xf0101ab0u)	/* TIM1 Channel 5 Interrupt Enable Register */
#define GTM_TIM1_CH6_IRQ_EN	(*( GTM_TIM0_CH0_IRQ_EN_type *) 0xf0101b30u)	/* TIM1 Channel 6 Interrupt Enable Register */
#define GTM_TIM1_CH7_IRQ_EN	(*( GTM_TIM0_CH0_IRQ_EN_type *) 0xf0101bb0u)	/* TIM1 Channel 7 Interrupt Enable Register */
#define GTM_TIM2_CH0_IRQ_EN	(*( GTM_TIM0_CH0_IRQ_EN_type *) 0xf0102030u)	/* TIM2 Channel 0 Interrupt Enable Register */
#define GTM_TIM2_CH1_IRQ_EN	(*( GTM_TIM0_CH0_IRQ_EN_type *) 0xf01020b0u)	/* TIM2 Channel 1 Interrupt Enable Register */
#define GTM_TIM2_CH2_IRQ_EN	(*( GTM_TIM0_CH0_IRQ_EN_type *) 0xf0102130u)	/* TIM2 Channel 2 Interrupt Enable Register */
#define GTM_TIM2_CH3_IRQ_EN	(*( GTM_TIM0_CH0_IRQ_EN_type *) 0xf01021b0u)	/* TIM2 Channel 3 Interrupt Enable Register */
#define GTM_TIM2_CH4_IRQ_EN	(*( GTM_TIM0_CH0_IRQ_EN_type *) 0xf0102230u)	/* TIM2 Channel 4 Interrupt Enable Register */
#define GTM_TIM2_CH5_IRQ_EN	(*( GTM_TIM0_CH0_IRQ_EN_type *) 0xf01022b0u)	/* TIM2 Channel 5 Interrupt Enable Register */
#define GTM_TIM2_CH6_IRQ_EN	(*( GTM_TIM0_CH0_IRQ_EN_type *) 0xf0102330u)	/* TIM2 Channel 6 Interrupt Enable Register */
#define GTM_TIM2_CH7_IRQ_EN	(*( GTM_TIM0_CH0_IRQ_EN_type *) 0xf01023b0u)	/* TIM2 Channel 7 Interrupt Enable Register */
#define GTM_TIM3_CH0_IRQ_EN	(*( GTM_TIM0_CH0_IRQ_EN_type *) 0xf0102830u)	/* TIM3 Channel 0 Interrupt Enable Register */
#define GTM_TIM3_CH1_IRQ_EN	(*( GTM_TIM0_CH0_IRQ_EN_type *) 0xf01028b0u)	/* TIM3 Channel 1 Interrupt Enable Register */
#define GTM_TIM3_CH2_IRQ_EN	(*( GTM_TIM0_CH0_IRQ_EN_type *) 0xf0102930u)	/* TIM3 Channel 2 Interrupt Enable Register */
#define GTM_TIM3_CH3_IRQ_EN	(*( GTM_TIM0_CH0_IRQ_EN_type *) 0xf01029b0u)	/* TIM3 Channel 3 Interrupt Enable Register */
#define GTM_TIM3_CH4_IRQ_EN	(*( GTM_TIM0_CH0_IRQ_EN_type *) 0xf0102a30u)	/* TIM3 Channel 4 Interrupt Enable Register */
#define GTM_TIM3_CH5_IRQ_EN	(*( GTM_TIM0_CH0_IRQ_EN_type *) 0xf0102ab0u)	/* TIM3 Channel 5 Interrupt Enable Register */
#define GTM_TIM3_CH6_IRQ_EN	(*( GTM_TIM0_CH0_IRQ_EN_type *) 0xf0102b30u)	/* TIM3 Channel 6 Interrupt Enable Register */
#define GTM_TIM3_CH7_IRQ_EN	(*( GTM_TIM0_CH0_IRQ_EN_type *) 0xf0102bb0u)	/* TIM3 Channel 7 Interrupt Enable Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 TRG_NEWVAL     : 1;	/* Trigger NEWVAL bit in TIM_CHx_IRQ_NOTIFY register by software */
		unsigned __sfrbit32 TRG_ECNTOFL    : 1;	/* Trigger ECNTOFL bit in TIM_CHx_IRQ_NOTIFY register by software */
		unsigned __sfrbit32 TRG_CNTOFL     : 1;	/* Trigger CNTOFL bit in TIM_CHx_IRQ_NOTIFY register by software */
		unsigned __sfrbit32 TRG_GPROFL     : 1;	/* Trigger GPROFL bit in TIM_CHx_IRQ_NOTIFY register by software */
		unsigned __sfrbit32 TRG_TODET      : 1;	/* Trigger TODET bit in TIM_CHx_IRQ_NOTIFY register by software */
		unsigned __sfrbit32 TRG_GLITCHDET  : 1;	/* Trigger GLITCHDET bit in TIM_CHx_IRQ_NOTIFY register by software */
		/* const */ unsigned __sfrbit32 Reserved       : 26;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GTM_TIM0_CH0_IRQ_FORCINT_type;
#define GTM_TIM0_CH0_IRQ_FORCINT	(*( GTM_TIM0_CH0_IRQ_FORCINT_type *) 0xf0101034u)	/* TIM0 Channel 0 Software Interrupt Force Register */
#define GTM_TIM0_CH1_IRQ_FORCINT	(*( GTM_TIM0_CH0_IRQ_FORCINT_type *) 0xf01010b4u)	/* TIM0 Channel 1 Software Interrupt Force Register */
#define GTM_TIM0_CH2_IRQ_FORCINT	(*( GTM_TIM0_CH0_IRQ_FORCINT_type *) 0xf0101134u)	/* TIM0 Channel 2 Software Interrupt Force Register */
#define GTM_TIM0_CH3_IRQ_FORCINT	(*( GTM_TIM0_CH0_IRQ_FORCINT_type *) 0xf01011b4u)	/* TIM0 Channel 3 Software Interrupt Force Register */
#define GTM_TIM0_CH4_IRQ_FORCINT	(*( GTM_TIM0_CH0_IRQ_FORCINT_type *) 0xf0101234u)	/* TIM0 Channel 4 Software Interrupt Force Register */
#define GTM_TIM0_CH5_IRQ_FORCINT	(*( GTM_TIM0_CH0_IRQ_FORCINT_type *) 0xf01012b4u)	/* TIM0 Channel 5 Software Interrupt Force Register */
#define GTM_TIM0_CH6_IRQ_FORCINT	(*( GTM_TIM0_CH0_IRQ_FORCINT_type *) 0xf0101334u)	/* TIM0 Channel 6 Software Interrupt Force Register */
#define GTM_TIM0_CH7_IRQ_FORCINT	(*( GTM_TIM0_CH0_IRQ_FORCINT_type *) 0xf01013b4u)	/* TIM0 Channel 7 Software Interrupt Force Register */
#define GTM_TIM1_CH0_IRQ_FORCINT	(*( GTM_TIM0_CH0_IRQ_FORCINT_type *) 0xf0101834u)	/* TIM1 Channel 0 Software Interrupt Force Register */
#define GTM_TIM1_CH1_IRQ_FORCINT	(*( GTM_TIM0_CH0_IRQ_FORCINT_type *) 0xf01018b4u)	/* TIM1 Channel 1 Software Interrupt Force Register */
#define GTM_TIM1_CH2_IRQ_FORCINT	(*( GTM_TIM0_CH0_IRQ_FORCINT_type *) 0xf0101934u)	/* TIM1 Channel 2 Software Interrupt Force Register */
#define GTM_TIM1_CH3_IRQ_FORCINT	(*( GTM_TIM0_CH0_IRQ_FORCINT_type *) 0xf01019b4u)	/* TIM1 Channel 3 Software Interrupt Force Register */
#define GTM_TIM1_CH4_IRQ_FORCINT	(*( GTM_TIM0_CH0_IRQ_FORCINT_type *) 0xf0101a34u)	/* TIM1 Channel 4 Software Interrupt Force Register */
#define GTM_TIM1_CH5_IRQ_FORCINT	(*( GTM_TIM0_CH0_IRQ_FORCINT_type *) 0xf0101ab4u)	/* TIM1 Channel 5 Software Interrupt Force Register */
#define GTM_TIM1_CH6_IRQ_FORCINT	(*( GTM_TIM0_CH0_IRQ_FORCINT_type *) 0xf0101b34u)	/* TIM1 Channel 6 Software Interrupt Force Register */
#define GTM_TIM1_CH7_IRQ_FORCINT	(*( GTM_TIM0_CH0_IRQ_FORCINT_type *) 0xf0101bb4u)	/* TIM1 Channel 7 Software Interrupt Force Register */
#define GTM_TIM2_CH0_IRQ_FORCINT	(*( GTM_TIM0_CH0_IRQ_FORCINT_type *) 0xf0102034u)	/* TIM2 Channel 0 Software Interrupt Force Register */
#define GTM_TIM2_CH1_IRQ_FORCINT	(*( GTM_TIM0_CH0_IRQ_FORCINT_type *) 0xf01020b4u)	/* TIM2 Channel 1 Software Interrupt Force Register */
#define GTM_TIM2_CH2_IRQ_FORCINT	(*( GTM_TIM0_CH0_IRQ_FORCINT_type *) 0xf0102134u)	/* TIM2 Channel 2 Software Interrupt Force Register */
#define GTM_TIM2_CH3_IRQ_FORCINT	(*( GTM_TIM0_CH0_IRQ_FORCINT_type *) 0xf01021b4u)	/* TIM2 Channel 3 Software Interrupt Force Register */
#define GTM_TIM2_CH4_IRQ_FORCINT	(*( GTM_TIM0_CH0_IRQ_FORCINT_type *) 0xf0102234u)	/* TIM2 Channel 4 Software Interrupt Force Register */
#define GTM_TIM2_CH5_IRQ_FORCINT	(*( GTM_TIM0_CH0_IRQ_FORCINT_type *) 0xf01022b4u)	/* TIM2 Channel 5 Software Interrupt Force Register */
#define GTM_TIM2_CH6_IRQ_FORCINT	(*( GTM_TIM0_CH0_IRQ_FORCINT_type *) 0xf0102334u)	/* TIM2 Channel 6 Software Interrupt Force Register */
#define GTM_TIM2_CH7_IRQ_FORCINT	(*( GTM_TIM0_CH0_IRQ_FORCINT_type *) 0xf01023b4u)	/* TIM2 Channel 7 Software Interrupt Force Register */
#define GTM_TIM3_CH0_IRQ_FORCINT	(*( GTM_TIM0_CH0_IRQ_FORCINT_type *) 0xf0102834u)	/* TIM3 Channel 0 Software Interrupt Force Register */
#define GTM_TIM3_CH1_IRQ_FORCINT	(*( GTM_TIM0_CH0_IRQ_FORCINT_type *) 0xf01028b4u)	/* TIM3 Channel 1 Software Interrupt Force Register */
#define GTM_TIM3_CH2_IRQ_FORCINT	(*( GTM_TIM0_CH0_IRQ_FORCINT_type *) 0xf0102934u)	/* TIM3 Channel 2 Software Interrupt Force Register */
#define GTM_TIM3_CH3_IRQ_FORCINT	(*( GTM_TIM0_CH0_IRQ_FORCINT_type *) 0xf01029b4u)	/* TIM3 Channel 3 Software Interrupt Force Register */
#define GTM_TIM3_CH4_IRQ_FORCINT	(*( GTM_TIM0_CH0_IRQ_FORCINT_type *) 0xf0102a34u)	/* TIM3 Channel 4 Software Interrupt Force Register */
#define GTM_TIM3_CH5_IRQ_FORCINT	(*( GTM_TIM0_CH0_IRQ_FORCINT_type *) 0xf0102ab4u)	/* TIM3 Channel 5 Software Interrupt Force Register */
#define GTM_TIM3_CH6_IRQ_FORCINT	(*( GTM_TIM0_CH0_IRQ_FORCINT_type *) 0xf0102b34u)	/* TIM3 Channel 6 Software Interrupt Force Register */
#define GTM_TIM3_CH7_IRQ_FORCINT	(*( GTM_TIM0_CH0_IRQ_FORCINT_type *) 0xf0102bb4u)	/* TIM3 Channel 7 Software Interrupt Force Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 NEWVAL         : 1;	/* New measurement value detected by in channel x (x:0?7) */
		unsigned __sfrbit32 ECNTOFL        : 1;	/* counter overflow of channel x, (x:0?7) */
		unsigned __sfrbit32 CNTOFL         : 1;	/* SMU CNT counter overflow of channel x, (x:0?7) */
		unsigned __sfrbit32 GPROFL         : 1;	/* GPR0 and GPR1 data overflow, old data not read out before new data has arrived at input pin, (x:0?7) */
		unsigned __sfrbit32 TODET          : 1;	/* Timeout reached for input signal of channel x, (x:0?7) */
		unsigned __sfrbit32 GLITCHDET      : 1;	/* Glitch detected on channel x, (x:0?7) */
		/* const */ unsigned __sfrbit32 Reserved       : 26;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GTM_TIM0_CH0_IRQ_NOTIFY_type;
#define GTM_TIM0_CH0_IRQ_NOTIFY	(*( GTM_TIM0_CH0_IRQ_NOTIFY_type *) 0xf010102cu)	/* TIM0 Channel 0 Interrupt Notification Register */
#define GTM_TIM0_CH1_IRQ_NOTIFY	(*( GTM_TIM0_CH0_IRQ_NOTIFY_type *) 0xf01010acu)	/* TIM0 Channel 1 Interrupt Notification Register */
#define GTM_TIM0_CH2_IRQ_NOTIFY	(*( GTM_TIM0_CH0_IRQ_NOTIFY_type *) 0xf010112cu)	/* TIM0 Channel 2 Interrupt Notification Register */
#define GTM_TIM0_CH3_IRQ_NOTIFY	(*( GTM_TIM0_CH0_IRQ_NOTIFY_type *) 0xf01011acu)	/* TIM0 Channel 3 Interrupt Notification Register */
#define GTM_TIM0_CH4_IRQ_NOTIFY	(*( GTM_TIM0_CH0_IRQ_NOTIFY_type *) 0xf010122cu)	/* TIM0 Channel 4 Interrupt Notification Register */
#define GTM_TIM0_CH5_IRQ_NOTIFY	(*( GTM_TIM0_CH0_IRQ_NOTIFY_type *) 0xf01012acu)	/* TIM0 Channel 5 Interrupt Notification Register */
#define GTM_TIM0_CH6_IRQ_NOTIFY	(*( GTM_TIM0_CH0_IRQ_NOTIFY_type *) 0xf010132cu)	/* TIM0 Channel 6 Interrupt Notification Register */
#define GTM_TIM0_CH7_IRQ_NOTIFY	(*( GTM_TIM0_CH0_IRQ_NOTIFY_type *) 0xf01013acu)	/* TIM0 Channel 7 Interrupt Notification Register */
#define GTM_TIM1_CH0_IRQ_NOTIFY	(*( GTM_TIM0_CH0_IRQ_NOTIFY_type *) 0xf010182cu)	/* TIM1 Channel 0 Interrupt Notification Register */
#define GTM_TIM1_CH1_IRQ_NOTIFY	(*( GTM_TIM0_CH0_IRQ_NOTIFY_type *) 0xf01018acu)	/* TIM1 Channel 1 Interrupt Notification Register */
#define GTM_TIM1_CH2_IRQ_NOTIFY	(*( GTM_TIM0_CH0_IRQ_NOTIFY_type *) 0xf010192cu)	/* TIM1 Channel 2 Interrupt Notification Register */
#define GTM_TIM1_CH3_IRQ_NOTIFY	(*( GTM_TIM0_CH0_IRQ_NOTIFY_type *) 0xf01019acu)	/* TIM1 Channel 3 Interrupt Notification Register */
#define GTM_TIM1_CH4_IRQ_NOTIFY	(*( GTM_TIM0_CH0_IRQ_NOTIFY_type *) 0xf0101a2cu)	/* TIM1 Channel 4 Interrupt Notification Register */
#define GTM_TIM1_CH5_IRQ_NOTIFY	(*( GTM_TIM0_CH0_IRQ_NOTIFY_type *) 0xf0101aacu)	/* TIM1 Channel 5 Interrupt Notification Register */
#define GTM_TIM1_CH6_IRQ_NOTIFY	(*( GTM_TIM0_CH0_IRQ_NOTIFY_type *) 0xf0101b2cu)	/* TIM1 Channel 6 Interrupt Notification Register */
#define GTM_TIM1_CH7_IRQ_NOTIFY	(*( GTM_TIM0_CH0_IRQ_NOTIFY_type *) 0xf0101bacu)	/* TIM1 Channel 7 Interrupt Notification Register */
#define GTM_TIM2_CH0_IRQ_NOTIFY	(*( GTM_TIM0_CH0_IRQ_NOTIFY_type *) 0xf010202cu)	/* TIM2 Channel 0 Interrupt Notification Register */
#define GTM_TIM2_CH1_IRQ_NOTIFY	(*( GTM_TIM0_CH0_IRQ_NOTIFY_type *) 0xf01020acu)	/* TIM2 Channel 1 Interrupt Notification Register */
#define GTM_TIM2_CH2_IRQ_NOTIFY	(*( GTM_TIM0_CH0_IRQ_NOTIFY_type *) 0xf010212cu)	/* TIM2 Channel 2 Interrupt Notification Register */
#define GTM_TIM2_CH3_IRQ_NOTIFY	(*( GTM_TIM0_CH0_IRQ_NOTIFY_type *) 0xf01021acu)	/* TIM2 Channel 3 Interrupt Notification Register */
#define GTM_TIM2_CH4_IRQ_NOTIFY	(*( GTM_TIM0_CH0_IRQ_NOTIFY_type *) 0xf010222cu)	/* TIM2 Channel 4 Interrupt Notification Register */
#define GTM_TIM2_CH5_IRQ_NOTIFY	(*( GTM_TIM0_CH0_IRQ_NOTIFY_type *) 0xf01022acu)	/* TIM2 Channel 5 Interrupt Notification Register */
#define GTM_TIM2_CH6_IRQ_NOTIFY	(*( GTM_TIM0_CH0_IRQ_NOTIFY_type *) 0xf010232cu)	/* TIM2 Channel 6 Interrupt Notification Register */
#define GTM_TIM2_CH7_IRQ_NOTIFY	(*( GTM_TIM0_CH0_IRQ_NOTIFY_type *) 0xf01023acu)	/* TIM2 Channel 7 Interrupt Notification Register */
#define GTM_TIM3_CH0_IRQ_NOTIFY	(*( GTM_TIM0_CH0_IRQ_NOTIFY_type *) 0xf010282cu)	/* TIM3 Channel 0 Interrupt Notification Register */
#define GTM_TIM3_CH1_IRQ_NOTIFY	(*( GTM_TIM0_CH0_IRQ_NOTIFY_type *) 0xf01028acu)	/* TIM3 Channel 1 Interrupt Notification Register */
#define GTM_TIM3_CH2_IRQ_NOTIFY	(*( GTM_TIM0_CH0_IRQ_NOTIFY_type *) 0xf010292cu)	/* TIM3 Channel 2 Interrupt Notification Register */
#define GTM_TIM3_CH3_IRQ_NOTIFY	(*( GTM_TIM0_CH0_IRQ_NOTIFY_type *) 0xf01029acu)	/* TIM3 Channel 3 Interrupt Notification Register */
#define GTM_TIM3_CH4_IRQ_NOTIFY	(*( GTM_TIM0_CH0_IRQ_NOTIFY_type *) 0xf0102a2cu)	/* TIM3 Channel 4 Interrupt Notification Register */
#define GTM_TIM3_CH5_IRQ_NOTIFY	(*( GTM_TIM0_CH0_IRQ_NOTIFY_type *) 0xf0102aacu)	/* TIM3 Channel 5 Interrupt Notification Register */
#define GTM_TIM3_CH6_IRQ_NOTIFY	(*( GTM_TIM0_CH0_IRQ_NOTIFY_type *) 0xf0102b2cu)	/* TIM3 Channel 6 Interrupt Notification Register */
#define GTM_TIM3_CH7_IRQ_NOTIFY	(*( GTM_TIM0_CH0_IRQ_NOTIFY_type *) 0xf0102bacu)	/* TIM3 Channel 7 Interrupt Notification Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned __sfrbit32 TO_CNT         : 8;	/* Current Timeout value for channel x */
		/* const */ unsigned __sfrbit32 Reserved       : 24;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GTM_TIM0_CH0_TDUC_type;
#define GTM_TIM0_CH0_TDUC	(*( GTM_TIM0_CH0_TDUC_type *) 0xf0101014u)	/* TIM0 Channel 0 TDUC Register */
#define GTM_TIM0_CH1_TDUC	(*( GTM_TIM0_CH0_TDUC_type *) 0xf0101094u)	/* TIM0 Channel 1 TDUC Register */
#define GTM_TIM0_CH2_TDUC	(*( GTM_TIM0_CH0_TDUC_type *) 0xf0101114u)	/* TIM0 Channel 2 TDUC Register */
#define GTM_TIM0_CH3_TDUC	(*( GTM_TIM0_CH0_TDUC_type *) 0xf0101194u)	/* TIM0 Channel 3 TDUC Register */
#define GTM_TIM0_CH4_TDUC	(*( GTM_TIM0_CH0_TDUC_type *) 0xf0101214u)	/* TIM0 Channel 4 TDUC Register */
#define GTM_TIM0_CH5_TDUC	(*( GTM_TIM0_CH0_TDUC_type *) 0xf0101294u)	/* TIM0 Channel 5 TDUC Register */
#define GTM_TIM0_CH6_TDUC	(*( GTM_TIM0_CH0_TDUC_type *) 0xf0101314u)	/* TIM0 Channel 6 TDUC Register */
#define GTM_TIM0_CH7_TDUC	(*( GTM_TIM0_CH0_TDUC_type *) 0xf0101394u)	/* TIM0 Channel 7 TDUC Register */
#define GTM_TIM1_CH0_TDUC	(*( GTM_TIM0_CH0_TDUC_type *) 0xf0101814u)	/* TIM1 Channel 0 TDUC Register */
#define GTM_TIM1_CH1_TDUC	(*( GTM_TIM0_CH0_TDUC_type *) 0xf0101894u)	/* TIM1 Channel 1 TDUC Register */
#define GTM_TIM1_CH2_TDUC	(*( GTM_TIM0_CH0_TDUC_type *) 0xf0101914u)	/* TIM1 Channel 2 TDUC Register */
#define GTM_TIM1_CH3_TDUC	(*( GTM_TIM0_CH0_TDUC_type *) 0xf0101994u)	/* TIM1 Channel 3 TDUC Register */
#define GTM_TIM1_CH4_TDUC	(*( GTM_TIM0_CH0_TDUC_type *) 0xf0101a14u)	/* TIM1 Channel 4 TDUC Register */
#define GTM_TIM1_CH5_TDUC	(*( GTM_TIM0_CH0_TDUC_type *) 0xf0101a94u)	/* TIM1 Channel 5 TDUC Register */
#define GTM_TIM1_CH6_TDUC	(*( GTM_TIM0_CH0_TDUC_type *) 0xf0101b14u)	/* TIM1 Channel 6 TDUC Register */
#define GTM_TIM1_CH7_TDUC	(*( GTM_TIM0_CH0_TDUC_type *) 0xf0101b94u)	/* TIM1 Channel 7 TDUC Register */
#define GTM_TIM2_CH0_TDUC	(*( GTM_TIM0_CH0_TDUC_type *) 0xf0102014u)	/* TIM2 Channel 0 TDUC Register */
#define GTM_TIM2_CH1_TDUC	(*( GTM_TIM0_CH0_TDUC_type *) 0xf0102094u)	/* TIM2 Channel 1 TDUC Register */
#define GTM_TIM2_CH2_TDUC	(*( GTM_TIM0_CH0_TDUC_type *) 0xf0102114u)	/* TIM2 Channel 2 TDUC Register */
#define GTM_TIM2_CH3_TDUC	(*( GTM_TIM0_CH0_TDUC_type *) 0xf0102194u)	/* TIM2 Channel 3 TDUC Register */
#define GTM_TIM2_CH4_TDUC	(*( GTM_TIM0_CH0_TDUC_type *) 0xf0102214u)	/* TIM2 Channel 4 TDUC Register */
#define GTM_TIM2_CH5_TDUC	(*( GTM_TIM0_CH0_TDUC_type *) 0xf0102294u)	/* TIM2 Channel 5 TDUC Register */
#define GTM_TIM2_CH6_TDUC	(*( GTM_TIM0_CH0_TDUC_type *) 0xf0102314u)	/* TIM2 Channel 6 TDUC Register */
#define GTM_TIM2_CH7_TDUC	(*( GTM_TIM0_CH0_TDUC_type *) 0xf0102394u)	/* TIM2 Channel 7 TDUC Register */
#define GTM_TIM3_CH0_TDUC	(*( GTM_TIM0_CH0_TDUC_type *) 0xf0102814u)	/* TIM3 Channel 0 TDUC Register */
#define GTM_TIM3_CH1_TDUC	(*( GTM_TIM0_CH0_TDUC_type *) 0xf0102894u)	/* TIM3 Channel 1 TDUC Register */
#define GTM_TIM3_CH2_TDUC	(*( GTM_TIM0_CH0_TDUC_type *) 0xf0102914u)	/* TIM3 Channel 2 TDUC Register */
#define GTM_TIM3_CH3_TDUC	(*( GTM_TIM0_CH0_TDUC_type *) 0xf0102994u)	/* TIM3 Channel 3 TDUC Register */
#define GTM_TIM3_CH4_TDUC	(*( GTM_TIM0_CH0_TDUC_type *) 0xf0102a14u)	/* TIM3 Channel 4 TDUC Register */
#define GTM_TIM3_CH5_TDUC	(*( GTM_TIM0_CH0_TDUC_type *) 0xf0102a94u)	/* TIM3 Channel 5 TDUC Register */
#define GTM_TIM3_CH6_TDUC	(*( GTM_TIM0_CH0_TDUC_type *) 0xf0102b14u)	/* TIM3 Channel 6 TDUC Register */
#define GTM_TIM3_CH7_TDUC	(*( GTM_TIM0_CH0_TDUC_type *) 0xf0102b94u)	/* TIM3 Channel 7 TDUC Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 TOV            : 8;	/* Time out duration for channel x */
		unsigned __sfrbit32 Reserved       : 20;	/* Reserved */
		unsigned __sfrbit32 TCS            : 3;	/* Timeout Clock selection */
		/* const */ unsigned __sfrbit32 Reserved_4     : 1;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GTM_TIM0_CH0_TDUV_type;
#define GTM_TIM0_CH0_TDUV	(*( GTM_TIM0_CH0_TDUV_type *) 0xf0101018u)	/* TIM0 Channel 0 TDUV Register */
#define GTM_TIM0_CH1_TDUV	(*( GTM_TIM0_CH0_TDUV_type *) 0xf0101098u)	/* TIM0 Channel 1 TDUV Register */
#define GTM_TIM0_CH2_TDUV	(*( GTM_TIM0_CH0_TDUV_type *) 0xf0101118u)	/* TIM0 Channel 2 TDUV Register */
#define GTM_TIM0_CH3_TDUV	(*( GTM_TIM0_CH0_TDUV_type *) 0xf0101198u)	/* TIM0 Channel 3 TDUV Register */
#define GTM_TIM0_CH4_TDUV	(*( GTM_TIM0_CH0_TDUV_type *) 0xf0101218u)	/* TIM0 Channel 4 TDUV Register */
#define GTM_TIM0_CH5_TDUV	(*( GTM_TIM0_CH0_TDUV_type *) 0xf0101298u)	/* TIM0 Channel 5 TDUV Register */
#define GTM_TIM0_CH6_TDUV	(*( GTM_TIM0_CH0_TDUV_type *) 0xf0101318u)	/* TIM0 Channel 6 TDUV Register */
#define GTM_TIM0_CH7_TDUV	(*( GTM_TIM0_CH0_TDUV_type *) 0xf0101398u)	/* TIM0 Channel 7 TDUV Register */
#define GTM_TIM1_CH0_TDUV	(*( GTM_TIM0_CH0_TDUV_type *) 0xf0101818u)	/* TIM1 Channel 0 TDUV Register */
#define GTM_TIM1_CH1_TDUV	(*( GTM_TIM0_CH0_TDUV_type *) 0xf0101898u)	/* TIM1 Channel 1 TDUV Register */
#define GTM_TIM1_CH2_TDUV	(*( GTM_TIM0_CH0_TDUV_type *) 0xf0101918u)	/* TIM1 Channel 2 TDUV Register */
#define GTM_TIM1_CH3_TDUV	(*( GTM_TIM0_CH0_TDUV_type *) 0xf0101998u)	/* TIM1 Channel 3 TDUV Register */
#define GTM_TIM1_CH4_TDUV	(*( GTM_TIM0_CH0_TDUV_type *) 0xf0101a18u)	/* TIM1 Channel 4 TDUV Register */
#define GTM_TIM1_CH5_TDUV	(*( GTM_TIM0_CH0_TDUV_type *) 0xf0101a98u)	/* TIM1 Channel 5 TDUV Register */
#define GTM_TIM1_CH6_TDUV	(*( GTM_TIM0_CH0_TDUV_type *) 0xf0101b18u)	/* TIM1 Channel 6 TDUV Register */
#define GTM_TIM1_CH7_TDUV	(*( GTM_TIM0_CH0_TDUV_type *) 0xf0101b98u)	/* TIM1 Channel 7 TDUV Register */
#define GTM_TIM2_CH0_TDUV	(*( GTM_TIM0_CH0_TDUV_type *) 0xf0102018u)	/* TIM2 Channel 0 TDUV Register */
#define GTM_TIM2_CH1_TDUV	(*( GTM_TIM0_CH0_TDUV_type *) 0xf0102098u)	/* TIM2 Channel 1 TDUV Register */
#define GTM_TIM2_CH2_TDUV	(*( GTM_TIM0_CH0_TDUV_type *) 0xf0102118u)	/* TIM2 Channel 2 TDUV Register */
#define GTM_TIM2_CH3_TDUV	(*( GTM_TIM0_CH0_TDUV_type *) 0xf0102198u)	/* TIM2 Channel 3 TDUV Register */
#define GTM_TIM2_CH4_TDUV	(*( GTM_TIM0_CH0_TDUV_type *) 0xf0102218u)	/* TIM2 Channel 4 TDUV Register */
#define GTM_TIM2_CH5_TDUV	(*( GTM_TIM0_CH0_TDUV_type *) 0xf0102298u)	/* TIM2 Channel 5 TDUV Register */
#define GTM_TIM2_CH6_TDUV	(*( GTM_TIM0_CH0_TDUV_type *) 0xf0102318u)	/* TIM2 Channel 6 TDUV Register */
#define GTM_TIM2_CH7_TDUV	(*( GTM_TIM0_CH0_TDUV_type *) 0xf0102398u)	/* TIM2 Channel 7 TDUV Register */
#define GTM_TIM3_CH0_TDUV	(*( GTM_TIM0_CH0_TDUV_type *) 0xf0102818u)	/* TIM3 Channel 0 TDUV Register */
#define GTM_TIM3_CH1_TDUV	(*( GTM_TIM0_CH0_TDUV_type *) 0xf0102898u)	/* TIM3 Channel 1 TDUV Register */
#define GTM_TIM3_CH2_TDUV	(*( GTM_TIM0_CH0_TDUV_type *) 0xf0102918u)	/* TIM3 Channel 2 TDUV Register */
#define GTM_TIM3_CH3_TDUV	(*( GTM_TIM0_CH0_TDUV_type *) 0xf0102998u)	/* TIM3 Channel 3 TDUV Register */
#define GTM_TIM3_CH4_TDUV	(*( GTM_TIM0_CH0_TDUV_type *) 0xf0102a18u)	/* TIM3 Channel 4 TDUV Register */
#define GTM_TIM3_CH5_TDUV	(*( GTM_TIM0_CH0_TDUV_type *) 0xf0102a98u)	/* TIM3 Channel 5 TDUV Register */
#define GTM_TIM3_CH6_TDUV	(*( GTM_TIM0_CH0_TDUV_type *) 0xf0102b18u)	/* TIM3 Channel 6 TDUV Register */
#define GTM_TIM3_CH7_TDUV	(*( GTM_TIM0_CH0_TDUV_type *) 0xf0102b98u)	/* TIM3 Channel 7 TDUV Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 VAL_0          : 2;	/* Value to be fed to Channel 0 */
		unsigned __sfrbit32 MODE_0         : 2;	/* Input source to Channel 0 */
		unsigned __sfrbit32 VAL_1          : 2;	/* Value to be fed to Channel 1 */
		unsigned __sfrbit32 MODE_1         : 2;	/* Input source to Channel 1 */
		unsigned __sfrbit32 VAL_2          : 2;	/* Value to be fed to Channel 2 */
		unsigned __sfrbit32 MODE_2         : 2;	/* Input source to Channel 2 */
		unsigned __sfrbit32 VAL_3          : 2;	/* Value to be fed to Channel 3 */
		unsigned __sfrbit32 MODE_3         : 2;	/* Input source to Channel 3 */
		unsigned __sfrbit32 VAL_4          : 2;	/* Value to be fed to Channel 4 */
		unsigned __sfrbit32 MODE_4         : 2;	/* Input source to Channel 4 */
		unsigned __sfrbit32 VAL_5          : 2;	/* Value to be fed to Channel 5 */
		unsigned __sfrbit32 MODE_5         : 2;	/* Input source to Channel 5 */
		unsigned __sfrbit32 VAL_6          : 2;	/* Value to be fed to Channel 6 */
		unsigned __sfrbit32 MODE_6         : 2;	/* Input source to Channel 6 */
		unsigned __sfrbit32 VAL_7          : 2;	/* Value to be fed to Channel 7 */
		unsigned __sfrbit32 MODE_7         : 2;	/* Input source to Channel 7 */
	} B;
	int I;
	unsigned int U;

} GTM_TIM0_IN_SRC_type;
#define GTM_TIM0_IN_SRC	(*( GTM_TIM0_IN_SRC_type *) 0xf0101078u)	/* TIM0_IN_SRC Long Name */
#define GTM_TIM1_IN_SRC	(*( GTM_TIM0_IN_SRC_type *) 0xf0101878u)	/* TIM1_IN_SRC Long Name */
#define GTM_TIM2_IN_SRC	(*( GTM_TIM0_IN_SRC_type *) 0xf0102078u)	/* TIM2_IN_SRC Long Name */
#define GTM_TIM3_IN_SRC	(*( GTM_TIM0_IN_SRC_type *) 0xf0102878u)	/* TIM3_IN_SRC Long Name */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 RST_CH0        : 1;	/* Software reset of channel 0 */
		unsigned __sfrbit32 RST_CH1        : 1;	/* Software reset of channel 1 */
		unsigned __sfrbit32 RST_CH2        : 1;	/* Software reset of channel 2 */
		unsigned __sfrbit32 RST_CH3        : 1;	/* Software reset of channel 3 */
		unsigned __sfrbit32 RST_CH4        : 1;	/* Software reset of channel 4 */
		unsigned __sfrbit32 RST_CH5        : 1;	/* Software reset of channel 5 */
		unsigned __sfrbit32 RST_CH6        : 1;	/* Software reset of channel 6 */
		unsigned __sfrbit32 RST_CH7        : 1;	/* Software reset of channel 7 */
		/* const */ unsigned __sfrbit32 Reserved       : 24;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GTM_TIM0_RST_type;
#define GTM_TIM0_RST	(*( GTM_TIM0_RST_type *) 0xf010107cu)	/* TIM0 Global Software Reset Register */
#define GTM_TIM1_RST	(*( GTM_TIM0_RST_type *) 0xf010187cu)	/* TIM1 Global Software Reset Register */
#define GTM_TIM2_RST	(*( GTM_TIM0_RST_type *) 0xf010207cu)	/* TIM2 Global Software Reset Register */
#define GTM_TIM3_RST	(*( GTM_TIM0_RST_type *) 0xf010287cu)	/* TIM3 Global Software Reset Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 TIM_EN         : 1;	/* TIM channel x (x:0?7) enable */
		unsigned __sfrbit32 TIM_MODE       : 3;	/* TIM channel x (x:0?7) mode */
		unsigned __sfrbit32 OSM            : 1;	/* One-shot mode */
		unsigned __sfrbit32 ARU_EN         : 1;	/* GPR0 and GPR1 register values routed to ARU */
		unsigned __sfrbit32 CICTRL         : 1;	/* Channel Input Control */
		/* const */ unsigned __sfrbit32 Reserved       : 1;	/* Reserved */
		unsigned __sfrbit32 GPR0_SEL       : 2;	/* Selection for GPR0 register */
		unsigned __sfrbit32 GPR1_SEL       : 2;	/* Selection for GPR1 register */
		unsigned __sfrbit32 CNTS_SEL       : 1;	/* Selection for CNTS register */
		unsigned __sfrbit32 DSL            : 1;	/* Signal level control */
		unsigned __sfrbit32 ISL            : 1;	/* Ignore signal level */
		unsigned __sfrbit32 ECNT_RESET     : 1;	/* Enables resetting the ECNT counter in periodic sampling mode */
		unsigned __sfrbit32 FLT_EN         : 1;	/* Filter enable for channel x (x:0?7) */
		unsigned __sfrbit32 FLT_CNT_FRQ    : 2;	/* Filter counter frequency select */
		unsigned __sfrbit32 EXT_CAP_EN     : 1;	/* Enables external capture mode */
		unsigned __sfrbit32 FLT_MODE_RE    : 1;	/* Filter mode for rising edge */
		unsigned __sfrbit32 FLT_CTR_RE     : 1;	/* Filter counter mode for rising edge */
		unsigned __sfrbit32 FLT_MODE_FE    : 1;	/* Filter mode for falling edge */
		unsigned __sfrbit32 FLT_CTR_FE     : 1;	/* Filter counter mode for falling edge */
		unsigned __sfrbit32 CLK_SEL        : 3;	/* CMU clock source select for channel */
		unsigned __sfrbit32 FR_ECNT_OFL    : 1;	/* Extended Edge counter overflow behaviour */
		unsigned __sfrbit32 EGPR0_SEL      : 1;	/* Extension of GPR0_SEL bit field */
		unsigned __sfrbit32 EGPR1_SEL      : 1;	/* Extension of GPR1_SEL bit field */
		unsigned __sfrbit32 TOCTRL         : 2;	/* Timeout control */
	} B;
	int I;
	unsigned int U;

} GTM_TIM1_CH0_CTRL_type;
#define GTM_TIM1_CH0_CTRL	(*( GTM_TIM1_CH0_CTRL_type *) 0xf0101824u)	/* TIM1_Channel0_CTRL Register */
#define GTM_TIM1_CH1_CTRL	(*( GTM_TIM1_CH0_CTRL_type *) 0xf01018a4u)	/* TIM1_Channel1_CTRL Register */
#define GTM_TIM1_CH2_CTRL	(*( GTM_TIM1_CH0_CTRL_type *) 0xf0101924u)	/* TIM1_Channel2_CTRL Register */
#define GTM_TIM1_CH3_CTRL	(*( GTM_TIM1_CH0_CTRL_type *) 0xf01019a4u)	/* TIM1_Channel3_CTRL Register */
#define GTM_TIM1_CH4_CTRL	(*( GTM_TIM1_CH0_CTRL_type *) 0xf0101a24u)	/* TIM1_Channel4_CTRL Register */
#define GTM_TIM1_CH5_CTRL	(*( GTM_TIM1_CH0_CTRL_type *) 0xf0101aa4u)	/* TIM1_Channel5_CTRL Register */
#define GTM_TIM1_CH6_CTRL	(*( GTM_TIM1_CH0_CTRL_type *) 0xf0101b24u)	/* TIM1_Channel6_CTRL Register */
#define GTM_TIM1_CH7_CTRL	(*( GTM_TIM1_CH0_CTRL_type *) 0xf0101ba4u)	/* TIM1_Channel7_CTRL Register */
#define GTM_TIM2_CH0_CTRL	(*( GTM_TIM1_CH0_CTRL_type *) 0xf0102024u)	/* TIM2_Channel0_CTRL Register */
#define GTM_TIM2_CH1_CTRL	(*( GTM_TIM1_CH0_CTRL_type *) 0xf01020a4u)	/* TIM2_Channel1_CTRL Register */
#define GTM_TIM2_CH2_CTRL	(*( GTM_TIM1_CH0_CTRL_type *) 0xf0102124u)	/* TIM2_Channel2_CTRL Register */
#define GTM_TIM2_CH3_CTRL	(*( GTM_TIM1_CH0_CTRL_type *) 0xf01021a4u)	/* TIM2_Channel3_CTRL Register */
#define GTM_TIM2_CH4_CTRL	(*( GTM_TIM1_CH0_CTRL_type *) 0xf0102224u)	/* TIM2_Channel4_CTRL Register */
#define GTM_TIM2_CH5_CTRL	(*( GTM_TIM1_CH0_CTRL_type *) 0xf01022a4u)	/* TIM2_Channel5_CTRL Register */
#define GTM_TIM2_CH6_CTRL	(*( GTM_TIM1_CH0_CTRL_type *) 0xf0102324u)	/* TIM2_Channel6_CTRL Register */
#define GTM_TIM2_CH7_CTRL	(*( GTM_TIM1_CH0_CTRL_type *) 0xf01023a4u)	/* TIM2_Channel7_CTRL Register */
#define GTM_TIM3_CH0_CTRL	(*( GTM_TIM1_CH0_CTRL_type *) 0xf0102824u)	/* TIM3_Channel0_CTRL Register */
#define GTM_TIM3_CH1_CTRL	(*( GTM_TIM1_CH0_CTRL_type *) 0xf01028a4u)	/* TIM3_Channel1_CTRL Register */
#define GTM_TIM3_CH2_CTRL	(*( GTM_TIM1_CH0_CTRL_type *) 0xf0102924u)	/* TIM3_Channel2_CTRL Register */
#define GTM_TIM3_CH3_CTRL	(*( GTM_TIM1_CH0_CTRL_type *) 0xf01029a4u)	/* TIM3_Channel3_CTRL Register */
#define GTM_TIM3_CH4_CTRL	(*( GTM_TIM1_CH0_CTRL_type *) 0xf0102a24u)	/* TIM3_Channel4_CTRL Register */
#define GTM_TIM3_CH5_CTRL	(*( GTM_TIM1_CH0_CTRL_type *) 0xf0102aa4u)	/* TIM3_Channel5_CTRL Register */
#define GTM_TIM3_CH6_CTRL	(*( GTM_TIM1_CH0_CTRL_type *) 0xf0102b24u)	/* TIM3_Channel6_CTRL Register */
#define GTM_TIM3_CH7_CTRL	(*( GTM_TIM1_CH0_CTRL_type *) 0xf0102ba4u)	/* TIM3_Channel7_CTRL Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 CM0            : 16;	/* TOM CCU0 compare register */
		/* const */ unsigned __sfrbit32 Reserved       : 16;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GTM_TOM0_CH0_CM0_type;
#define GTM_TOM0_CH0_CM0	(*( GTM_TOM0_CH0_CM0_type *) 0xf010800cu)	/* TOM0 Channel 0 CCU0 Compare Register */
#define GTM_TOM0_CH10_CM0	(*( GTM_TOM0_CH0_CM0_type *) 0xf010828cu)	/* TOM0 Channel 10 CCU0 Compare Register */
#define GTM_TOM0_CH11_CM0	(*( GTM_TOM0_CH0_CM0_type *) 0xf01082ccu)	/* TOM0 Channel 11 CCU0 Compare Register */
#define GTM_TOM0_CH12_CM0	(*( GTM_TOM0_CH0_CM0_type *) 0xf010830cu)	/* TOM0 Channel 12 CCU0 Compare Register */
#define GTM_TOM0_CH13_CM0	(*( GTM_TOM0_CH0_CM0_type *) 0xf010834cu)	/* TOM0 Channel 13 CCU0 Compare Register */
#define GTM_TOM0_CH14_CM0	(*( GTM_TOM0_CH0_CM0_type *) 0xf010838cu)	/* TOM0 Channel 14 CCU0 Compare Register */
#define GTM_TOM0_CH15_CM0	(*( GTM_TOM0_CH0_CM0_type *) 0xf01083ccu)	/* TOM0 Channel 15 CCU0 Compare Register */
#define GTM_TOM0_CH1_CM0	(*( GTM_TOM0_CH0_CM0_type *) 0xf010804cu)	/* TOM0 Channel 1 CCU0 Compare Register */
#define GTM_TOM0_CH2_CM0	(*( GTM_TOM0_CH0_CM0_type *) 0xf010808cu)	/* TOM0 Channel 2 CCU0 Compare Register */
#define GTM_TOM0_CH3_CM0	(*( GTM_TOM0_CH0_CM0_type *) 0xf01080ccu)	/* TOM0 Channel 3 CCU0 Compare Register */
#define GTM_TOM0_CH4_CM0	(*( GTM_TOM0_CH0_CM0_type *) 0xf010810cu)	/* TOM0 Channel 4 CCU0 Compare Register */
#define GTM_TOM0_CH5_CM0	(*( GTM_TOM0_CH0_CM0_type *) 0xf010814cu)	/* TOM0 Channel 5 CCU0 Compare Register */
#define GTM_TOM0_CH6_CM0	(*( GTM_TOM0_CH0_CM0_type *) 0xf010818cu)	/* TOM0 Channel 6 CCU0 Compare Register */
#define GTM_TOM0_CH7_CM0	(*( GTM_TOM0_CH0_CM0_type *) 0xf01081ccu)	/* TOM0 Channel 7 CCU0 Compare Register */
#define GTM_TOM0_CH8_CM0	(*( GTM_TOM0_CH0_CM0_type *) 0xf010820cu)	/* TOM0 Channel 8 CCU0 Compare Register */
#define GTM_TOM0_CH9_CM0	(*( GTM_TOM0_CH0_CM0_type *) 0xf010824cu)	/* TOM0 Channel 9 CCU0 Compare Register */
#define GTM_TOM1_CH0_CM0	(*( GTM_TOM0_CH0_CM0_type *) 0xf010880cu)	/* TOM1 Channel 0 CCU0 Compare Register */
#define GTM_TOM1_CH10_CM0	(*( GTM_TOM0_CH0_CM0_type *) 0xf0108a8cu)	/* TOM1 Channel 10 CCU0 Compare Register */
#define GTM_TOM1_CH11_CM0	(*( GTM_TOM0_CH0_CM0_type *) 0xf0108accu)	/* TOM1 Channel 11 CCU0 Compare Register */
#define GTM_TOM1_CH12_CM0	(*( GTM_TOM0_CH0_CM0_type *) 0xf0108b0cu)	/* TOM1 Channel 12 CCU0 Compare Register */
#define GTM_TOM1_CH13_CM0	(*( GTM_TOM0_CH0_CM0_type *) 0xf0108b4cu)	/* TOM1 Channel 13 CCU0 Compare Register */
#define GTM_TOM1_CH14_CM0	(*( GTM_TOM0_CH0_CM0_type *) 0xf0108b8cu)	/* TOM1 Channel 14 CCU0 Compare Register */
#define GTM_TOM1_CH15_CM0	(*( GTM_TOM0_CH0_CM0_type *) 0xf0108bccu)	/* TOM1 Channel 15 CCU0 Compare Register */
#define GTM_TOM1_CH1_CM0	(*( GTM_TOM0_CH0_CM0_type *) 0xf010884cu)	/* TOM1 Channel 1 CCU0 Compare Register */
#define GTM_TOM1_CH2_CM0	(*( GTM_TOM0_CH0_CM0_type *) 0xf010888cu)	/* TOM1 Channel 2 CCU0 Compare Register */
#define GTM_TOM1_CH3_CM0	(*( GTM_TOM0_CH0_CM0_type *) 0xf01088ccu)	/* TOM1 Channel 3 CCU0 Compare Register */
#define GTM_TOM1_CH4_CM0	(*( GTM_TOM0_CH0_CM0_type *) 0xf010890cu)	/* TOM1 Channel 4 CCU0 Compare Register */
#define GTM_TOM1_CH5_CM0	(*( GTM_TOM0_CH0_CM0_type *) 0xf010894cu)	/* TOM1 Channel 5 CCU0 Compare Register */
#define GTM_TOM1_CH6_CM0	(*( GTM_TOM0_CH0_CM0_type *) 0xf010898cu)	/* TOM1 Channel 6 CCU0 Compare Register */
#define GTM_TOM1_CH7_CM0	(*( GTM_TOM0_CH0_CM0_type *) 0xf01089ccu)	/* TOM1 Channel 7 CCU0 Compare Register */
#define GTM_TOM1_CH8_CM0	(*( GTM_TOM0_CH0_CM0_type *) 0xf0108a0cu)	/* TOM1 Channel 8 CCU0 Compare Register */
#define GTM_TOM1_CH9_CM0	(*( GTM_TOM0_CH0_CM0_type *) 0xf0108a4cu)	/* TOM1 Channel 9 CCU0 Compare Register */
#define GTM_TOM2_CH0_CM0	(*( GTM_TOM0_CH0_CM0_type *) 0xf010900cu)	/* TOM2 Channel 0 CCU0 Compare Register */
#define GTM_TOM2_CH10_CM0	(*( GTM_TOM0_CH0_CM0_type *) 0xf010928cu)	/* TOM2 Channel 10 CCU0 Compare Register */
#define GTM_TOM2_CH11_CM0	(*( GTM_TOM0_CH0_CM0_type *) 0xf01092ccu)	/* TOM2 Channel 11 CCU0 Compare Register */
#define GTM_TOM2_CH12_CM0	(*( GTM_TOM0_CH0_CM0_type *) 0xf010930cu)	/* TOM2 Channel 12 CCU0 Compare Register */
#define GTM_TOM2_CH13_CM0	(*( GTM_TOM0_CH0_CM0_type *) 0xf010934cu)	/* TOM2 Channel 13 CCU0 Compare Register */
#define GTM_TOM2_CH14_CM0	(*( GTM_TOM0_CH0_CM0_type *) 0xf010938cu)	/* TOM2 Channel 14 CCU0 Compare Register */
#define GTM_TOM2_CH15_CM0	(*( GTM_TOM0_CH0_CM0_type *) 0xf01093ccu)	/* TOM2 Channel 15 CCU0 Compare Register */
#define GTM_TOM2_CH1_CM0	(*( GTM_TOM0_CH0_CM0_type *) 0xf010904cu)	/* TOM2 Channel 1 CCU0 Compare Register */
#define GTM_TOM2_CH2_CM0	(*( GTM_TOM0_CH0_CM0_type *) 0xf010908cu)	/* TOM2 Channel 2 CCU0 Compare Register */
#define GTM_TOM2_CH3_CM0	(*( GTM_TOM0_CH0_CM0_type *) 0xf01090ccu)	/* TOM2 Channel 3 CCU0 Compare Register */
#define GTM_TOM2_CH4_CM0	(*( GTM_TOM0_CH0_CM0_type *) 0xf010910cu)	/* TOM2 Channel 4 CCU0 Compare Register */
#define GTM_TOM2_CH5_CM0	(*( GTM_TOM0_CH0_CM0_type *) 0xf010914cu)	/* TOM2 Channel 5 CCU0 Compare Register */
#define GTM_TOM2_CH6_CM0	(*( GTM_TOM0_CH0_CM0_type *) 0xf010918cu)	/* TOM2 Channel 6 CCU0 Compare Register */
#define GTM_TOM2_CH7_CM0	(*( GTM_TOM0_CH0_CM0_type *) 0xf01091ccu)	/* TOM2 Channel 7 CCU0 Compare Register */
#define GTM_TOM2_CH8_CM0	(*( GTM_TOM0_CH0_CM0_type *) 0xf010920cu)	/* TOM2 Channel 8 CCU0 Compare Register */
#define GTM_TOM2_CH9_CM0	(*( GTM_TOM0_CH0_CM0_type *) 0xf010924cu)	/* TOM2 Channel 9 CCU0 Compare Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 CM1            : 16;	/* TOM CCU1 compare register */
		/* const */ unsigned __sfrbit32 Reserved       : 16;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GTM_TOM0_CH0_CM1_type;
#define GTM_TOM0_CH0_CM1	(*( GTM_TOM0_CH0_CM1_type *) 0xf0108010u)	/* TOM0 Channel 0 CCU1 Compare Register */
#define GTM_TOM0_CH10_CM1	(*( GTM_TOM0_CH0_CM1_type *) 0xf0108290u)	/* TOM0 Channel 10 CCU1 Compare Register */
#define GTM_TOM0_CH11_CM1	(*( GTM_TOM0_CH0_CM1_type *) 0xf01082d0u)	/* TOM0 Channel 11 CCU1 Compare Register */
#define GTM_TOM0_CH12_CM1	(*( GTM_TOM0_CH0_CM1_type *) 0xf0108310u)	/* TOM0 Channel 12 CCU1 Compare Register */
#define GTM_TOM0_CH13_CM1	(*( GTM_TOM0_CH0_CM1_type *) 0xf0108350u)	/* TOM0 Channel 13 CCU1 Compare Register */
#define GTM_TOM0_CH14_CM1	(*( GTM_TOM0_CH0_CM1_type *) 0xf0108390u)	/* TOM0 Channel 14 CCU1 Compare Register */
#define GTM_TOM0_CH15_CM1	(*( GTM_TOM0_CH0_CM1_type *) 0xf01083d0u)	/* TOM0 Channel 15 CCU1 Compare Register */
#define GTM_TOM0_CH1_CM1	(*( GTM_TOM0_CH0_CM1_type *) 0xf0108050u)	/* TOM0 Channel 1 CCU1 Compare Register */
#define GTM_TOM0_CH2_CM1	(*( GTM_TOM0_CH0_CM1_type *) 0xf0108090u)	/* TOM0 Channel 2 CCU1 Compare Register */
#define GTM_TOM0_CH3_CM1	(*( GTM_TOM0_CH0_CM1_type *) 0xf01080d0u)	/* TOM0 Channel 3 CCU1 Compare Register */
#define GTM_TOM0_CH4_CM1	(*( GTM_TOM0_CH0_CM1_type *) 0xf0108110u)	/* TOM0 Channel 4 CCU1 Compare Register */
#define GTM_TOM0_CH5_CM1	(*( GTM_TOM0_CH0_CM1_type *) 0xf0108150u)	/* TOM0 Channel 5 CCU1 Compare Register */
#define GTM_TOM0_CH6_CM1	(*( GTM_TOM0_CH0_CM1_type *) 0xf0108190u)	/* TOM0 Channel 6 CCU1 Compare Register */
#define GTM_TOM0_CH7_CM1	(*( GTM_TOM0_CH0_CM1_type *) 0xf01081d0u)	/* TOM0 Channel 7 CCU1 Compare Register */
#define GTM_TOM0_CH8_CM1	(*( GTM_TOM0_CH0_CM1_type *) 0xf0108210u)	/* TOM0 Channel 8 CCU1 Compare Register */
#define GTM_TOM0_CH9_CM1	(*( GTM_TOM0_CH0_CM1_type *) 0xf0108250u)	/* TOM0 Channel 9 CCU1 Compare Register */
#define GTM_TOM1_CH0_CM1	(*( GTM_TOM0_CH0_CM1_type *) 0xf0108810u)	/* TOM1 Channel 0 CCU1 Compare Register */
#define GTM_TOM1_CH10_CM1	(*( GTM_TOM0_CH0_CM1_type *) 0xf0108a90u)	/* TOM1 Channel 10 CCU1 Compare Register */
#define GTM_TOM1_CH11_CM1	(*( GTM_TOM0_CH0_CM1_type *) 0xf0108ad0u)	/* TOM1 Channel 11 CCU1 Compare Register */
#define GTM_TOM1_CH12_CM1	(*( GTM_TOM0_CH0_CM1_type *) 0xf0108b10u)	/* TOM1 Channel 12 CCU1 Compare Register */
#define GTM_TOM1_CH13_CM1	(*( GTM_TOM0_CH0_CM1_type *) 0xf0108b50u)	/* TOM1 Channel 13 CCU1 Compare Register */
#define GTM_TOM1_CH14_CM1	(*( GTM_TOM0_CH0_CM1_type *) 0xf0108b90u)	/* TOM1 Channel 14 CCU1 Compare Register */
#define GTM_TOM1_CH15_CM1	(*( GTM_TOM0_CH0_CM1_type *) 0xf0108bd0u)	/* TOM1 Channel 15 CCU1 Compare Register */
#define GTM_TOM1_CH1_CM1	(*( GTM_TOM0_CH0_CM1_type *) 0xf0108850u)	/* TOM1 Channel 1 CCU1 Compare Register */
#define GTM_TOM1_CH2_CM1	(*( GTM_TOM0_CH0_CM1_type *) 0xf0108890u)	/* TOM1 Channel 2 CCU1 Compare Register */
#define GTM_TOM1_CH3_CM1	(*( GTM_TOM0_CH0_CM1_type *) 0xf01088d0u)	/* TOM1 Channel 3 CCU1 Compare Register */
#define GTM_TOM1_CH4_CM1	(*( GTM_TOM0_CH0_CM1_type *) 0xf0108910u)	/* TOM1 Channel 4 CCU1 Compare Register */
#define GTM_TOM1_CH5_CM1	(*( GTM_TOM0_CH0_CM1_type *) 0xf0108950u)	/* TOM1 Channel 5 CCU1 Compare Register */
#define GTM_TOM1_CH6_CM1	(*( GTM_TOM0_CH0_CM1_type *) 0xf0108990u)	/* TOM1 Channel 6 CCU1 Compare Register */
#define GTM_TOM1_CH7_CM1	(*( GTM_TOM0_CH0_CM1_type *) 0xf01089d0u)	/* TOM1 Channel 7 CCU1 Compare Register */
#define GTM_TOM1_CH8_CM1	(*( GTM_TOM0_CH0_CM1_type *) 0xf0108a10u)	/* TOM1 Channel 8 CCU1 Compare Register */
#define GTM_TOM1_CH9_CM1	(*( GTM_TOM0_CH0_CM1_type *) 0xf0108a50u)	/* TOM1 Channel 9 CCU1 Compare Register */
#define GTM_TOM2_CH0_CM1	(*( GTM_TOM0_CH0_CM1_type *) 0xf0109010u)	/* TOM2 Channel 0 CCU1 Compare Register */
#define GTM_TOM2_CH10_CM1	(*( GTM_TOM0_CH0_CM1_type *) 0xf0109290u)	/* TOM2 Channel 10 CCU1 Compare Register */
#define GTM_TOM2_CH11_CM1	(*( GTM_TOM0_CH0_CM1_type *) 0xf01092d0u)	/* TOM2 Channel 11 CCU1 Compare Register */
#define GTM_TOM2_CH12_CM1	(*( GTM_TOM0_CH0_CM1_type *) 0xf0109310u)	/* TOM2 Channel 12 CCU1 Compare Register */
#define GTM_TOM2_CH13_CM1	(*( GTM_TOM0_CH0_CM1_type *) 0xf0109350u)	/* TOM2 Channel 13 CCU1 Compare Register */
#define GTM_TOM2_CH14_CM1	(*( GTM_TOM0_CH0_CM1_type *) 0xf0109390u)	/* TOM2 Channel 14 CCU1 Compare Register */
#define GTM_TOM2_CH15_CM1	(*( GTM_TOM0_CH0_CM1_type *) 0xf01093d0u)	/* TOM2 Channel 15 CCU1 Compare Register */
#define GTM_TOM2_CH1_CM1	(*( GTM_TOM0_CH0_CM1_type *) 0xf0109050u)	/* TOM2 Channel 1 CCU1 Compare Register */
#define GTM_TOM2_CH2_CM1	(*( GTM_TOM0_CH0_CM1_type *) 0xf0109090u)	/* TOM2 Channel 2 CCU1 Compare Register */
#define GTM_TOM2_CH3_CM1	(*( GTM_TOM0_CH0_CM1_type *) 0xf01090d0u)	/* TOM2 Channel 3 CCU1 Compare Register */
#define GTM_TOM2_CH4_CM1	(*( GTM_TOM0_CH0_CM1_type *) 0xf0109110u)	/* TOM2 Channel 4 CCU1 Compare Register */
#define GTM_TOM2_CH5_CM1	(*( GTM_TOM0_CH0_CM1_type *) 0xf0109150u)	/* TOM2 Channel 5 CCU1 Compare Register */
#define GTM_TOM2_CH6_CM1	(*( GTM_TOM0_CH0_CM1_type *) 0xf0109190u)	/* TOM2 Channel 6 CCU1 Compare Register */
#define GTM_TOM2_CH7_CM1	(*( GTM_TOM0_CH0_CM1_type *) 0xf01091d0u)	/* TOM2 Channel 7 CCU1 Compare Register */
#define GTM_TOM2_CH8_CM1	(*( GTM_TOM0_CH0_CM1_type *) 0xf0109210u)	/* TOM2 Channel 8 CCU1 Compare Register */
#define GTM_TOM2_CH9_CM1	(*( GTM_TOM0_CH0_CM1_type *) 0xf0109250u)	/* TOM2 Channel 9 CCU1 Compare Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 CN0            : 16;	/* TOM CCU0 counter register */
		/* const */ unsigned __sfrbit32 Reserved       : 16;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GTM_TOM0_CH0_CN0_type;
#define GTM_TOM0_CH0_CN0	(*( GTM_TOM0_CH0_CN0_type *) 0xf0108014u)	/* TOM0 Channel 0 CCU0 Counter Register */
#define GTM_TOM0_CH10_CN0	(*( GTM_TOM0_CH0_CN0_type *) 0xf0108294u)	/* TOM0 Channel 10 CCU0 Counter Register */
#define GTM_TOM0_CH11_CN0	(*( GTM_TOM0_CH0_CN0_type *) 0xf01082d4u)	/* TOM0 Channel 11 CCU0 Counter Register */
#define GTM_TOM0_CH12_CN0	(*( GTM_TOM0_CH0_CN0_type *) 0xf0108314u)	/* TOM0 Channel 12 CCU0 Counter Register */
#define GTM_TOM0_CH13_CN0	(*( GTM_TOM0_CH0_CN0_type *) 0xf0108354u)	/* TOM0 Channel 13 CCU0 Counter Register */
#define GTM_TOM0_CH14_CN0	(*( GTM_TOM0_CH0_CN0_type *) 0xf0108394u)	/* TOM0 Channel 14 CCU0 Counter Register */
#define GTM_TOM0_CH15_CN0	(*( GTM_TOM0_CH0_CN0_type *) 0xf01083d4u)	/* TOM0 Channel 15 CCU0 Counter Register */
#define GTM_TOM0_CH1_CN0	(*( GTM_TOM0_CH0_CN0_type *) 0xf0108054u)	/* TOM0 Channel 1 CCU0 Counter Register */
#define GTM_TOM0_CH2_CN0	(*( GTM_TOM0_CH0_CN0_type *) 0xf0108094u)	/* TOM0 Channel 2 CCU0 Counter Register */
#define GTM_TOM0_CH3_CN0	(*( GTM_TOM0_CH0_CN0_type *) 0xf01080d4u)	/* TOM0 Channel 3 CCU0 Counter Register */
#define GTM_TOM0_CH4_CN0	(*( GTM_TOM0_CH0_CN0_type *) 0xf0108114u)	/* TOM0 Channel 4 CCU0 Counter Register */
#define GTM_TOM0_CH5_CN0	(*( GTM_TOM0_CH0_CN0_type *) 0xf0108154u)	/* TOM0 Channel 5 CCU0 Counter Register */
#define GTM_TOM0_CH6_CN0	(*( GTM_TOM0_CH0_CN0_type *) 0xf0108194u)	/* TOM0 Channel 6 CCU0 Counter Register */
#define GTM_TOM0_CH7_CN0	(*( GTM_TOM0_CH0_CN0_type *) 0xf01081d4u)	/* TOM0 Channel 7 CCU0 Counter Register */
#define GTM_TOM0_CH8_CN0	(*( GTM_TOM0_CH0_CN0_type *) 0xf0108214u)	/* TOM0 Channel 8 CCU0 Counter Register */
#define GTM_TOM0_CH9_CN0	(*( GTM_TOM0_CH0_CN0_type *) 0xf0108254u)	/* TOM0 Channel 9 CCU0 Counter Register */
#define GTM_TOM1_CH0_CN0	(*( GTM_TOM0_CH0_CN0_type *) 0xf0108814u)	/* TOM1 Channel 0 CCU0 Counter Register */
#define GTM_TOM1_CH10_CN0	(*( GTM_TOM0_CH0_CN0_type *) 0xf0108a94u)	/* TOM1 Channel 10 CCU0 Counter Register */
#define GTM_TOM1_CH11_CN0	(*( GTM_TOM0_CH0_CN0_type *) 0xf0108ad4u)	/* TOM1 Channel 11 CCU0 Counter Register */
#define GTM_TOM1_CH12_CN0	(*( GTM_TOM0_CH0_CN0_type *) 0xf0108b14u)	/* TOM1 Channel 12 CCU0 Counter Register */
#define GTM_TOM1_CH13_CN0	(*( GTM_TOM0_CH0_CN0_type *) 0xf0108b54u)	/* TOM1 Channel 13 CCU0 Counter Register */
#define GTM_TOM1_CH14_CN0	(*( GTM_TOM0_CH0_CN0_type *) 0xf0108b94u)	/* TOM1 Channel 14 CCU0 Counter Register */
#define GTM_TOM1_CH15_CN0	(*( GTM_TOM0_CH0_CN0_type *) 0xf0108bd4u)	/* TOM1 Channel 15 CCU0 Counter Register */
#define GTM_TOM1_CH1_CN0	(*( GTM_TOM0_CH0_CN0_type *) 0xf0108854u)	/* TOM1 Channel 1 CCU0 Counter Register */
#define GTM_TOM1_CH2_CN0	(*( GTM_TOM0_CH0_CN0_type *) 0xf0108894u)	/* TOM1 Channel 2 CCU0 Counter Register */
#define GTM_TOM1_CH3_CN0	(*( GTM_TOM0_CH0_CN0_type *) 0xf01088d4u)	/* TOM1 Channel 3 CCU0 Counter Register */
#define GTM_TOM1_CH4_CN0	(*( GTM_TOM0_CH0_CN0_type *) 0xf0108914u)	/* TOM1 Channel 4 CCU0 Counter Register */
#define GTM_TOM1_CH5_CN0	(*( GTM_TOM0_CH0_CN0_type *) 0xf0108954u)	/* TOM1 Channel 5 CCU0 Counter Register */
#define GTM_TOM1_CH6_CN0	(*( GTM_TOM0_CH0_CN0_type *) 0xf0108994u)	/* TOM1 Channel 6 CCU0 Counter Register */
#define GTM_TOM1_CH7_CN0	(*( GTM_TOM0_CH0_CN0_type *) 0xf01089d4u)	/* TOM1 Channel 7 CCU0 Counter Register */
#define GTM_TOM1_CH8_CN0	(*( GTM_TOM0_CH0_CN0_type *) 0xf0108a14u)	/* TOM1 Channel 8 CCU0 Counter Register */
#define GTM_TOM1_CH9_CN0	(*( GTM_TOM0_CH0_CN0_type *) 0xf0108a54u)	/* TOM1 Channel 9 CCU0 Counter Register */
#define GTM_TOM2_CH0_CN0	(*( GTM_TOM0_CH0_CN0_type *) 0xf0109014u)	/* TOM2 Channel 0 CCU0 Counter Register */
#define GTM_TOM2_CH10_CN0	(*( GTM_TOM0_CH0_CN0_type *) 0xf0109294u)	/* TOM2 Channel 10 CCU0 Counter Register */
#define GTM_TOM2_CH11_CN0	(*( GTM_TOM0_CH0_CN0_type *) 0xf01092d4u)	/* TOM2 Channel 11 CCU0 Counter Register */
#define GTM_TOM2_CH12_CN0	(*( GTM_TOM0_CH0_CN0_type *) 0xf0109314u)	/* TOM2 Channel 12 CCU0 Counter Register */
#define GTM_TOM2_CH13_CN0	(*( GTM_TOM0_CH0_CN0_type *) 0xf0109354u)	/* TOM2 Channel 13 CCU0 Counter Register */
#define GTM_TOM2_CH14_CN0	(*( GTM_TOM0_CH0_CN0_type *) 0xf0109394u)	/* TOM2 Channel 14 CCU0 Counter Register */
#define GTM_TOM2_CH15_CN0	(*( GTM_TOM0_CH0_CN0_type *) 0xf01093d4u)	/* TOM2 Channel 15 CCU0 Counter Register */
#define GTM_TOM2_CH1_CN0	(*( GTM_TOM0_CH0_CN0_type *) 0xf0109054u)	/* TOM2 Channel 1 CCU0 Counter Register */
#define GTM_TOM2_CH2_CN0	(*( GTM_TOM0_CH0_CN0_type *) 0xf0109094u)	/* TOM2 Channel 2 CCU0 Counter Register */
#define GTM_TOM2_CH3_CN0	(*( GTM_TOM0_CH0_CN0_type *) 0xf01090d4u)	/* TOM2 Channel 3 CCU0 Counter Register */
#define GTM_TOM2_CH4_CN0	(*( GTM_TOM0_CH0_CN0_type *) 0xf0109114u)	/* TOM2 Channel 4 CCU0 Counter Register */
#define GTM_TOM2_CH5_CN0	(*( GTM_TOM0_CH0_CN0_type *) 0xf0109154u)	/* TOM2 Channel 5 CCU0 Counter Register */
#define GTM_TOM2_CH6_CN0	(*( GTM_TOM0_CH0_CN0_type *) 0xf0109194u)	/* TOM2 Channel 6 CCU0 Counter Register */
#define GTM_TOM2_CH7_CN0	(*( GTM_TOM0_CH0_CN0_type *) 0xf01091d4u)	/* TOM2 Channel 7 CCU0 Counter Register */
#define GTM_TOM2_CH8_CN0	(*( GTM_TOM0_CH0_CN0_type *) 0xf0109214u)	/* TOM2 Channel 8 CCU0 Counter Register */
#define GTM_TOM2_CH9_CN0	(*( GTM_TOM0_CH0_CN0_type *) 0xf0109254u)	/* TOM2 Channel 9 CCU0 Counter Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned __sfrbit32 Reserved       : 11;	/* Reserved */
		unsigned __sfrbit32 SL             : 1;	/* Signal level for duty cycle */
		unsigned __sfrbit32 CLK_SRC_SR     : 3;	/* Clock source select for channel */
		/* const */ unsigned __sfrbit32 Reserved_4     : 5;	/* Reserved */
		unsigned __sfrbit32 RST_CCU0       : 1;	/* Reset source of CCU0 */
		/* const */ unsigned __sfrbit32 Reserved_6     : 3;	/* Reserved */
		unsigned __sfrbit32 TRIGOUT        : 1;	/* Trigger output selection (output signal TRIG_[x]) of module TOM_CH[x] */
		/* const */ unsigned __sfrbit32 Reserved_8     : 1;	/* Reserved */
		unsigned __sfrbit32 OSM            : 1;	/* One-shot mode */
		/* const */ unsigned __sfrbit32 Reserved_10    : 1;	/* Reserved */
		unsigned __sfrbit32 SPEM           : 1;	/* SPE mode enable for channel */
		unsigned __sfrbit32 GCM            : 1;	/* Gated Counter Mode enable */
		/* const */ unsigned __sfrbit32 Reserved_13    : 2;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GTM_TOM0_CH0_CTRL_type;
#define GTM_TOM0_CH0_CTRL	(*( GTM_TOM0_CH0_CTRL_type *) 0xf0108000u)	/* TOM0 Channel 0 Control Register? */
#define GTM_TOM0_CH10_CTRL	(*( GTM_TOM0_CH0_CTRL_type *) 0xf0108280u)	/* TOM0 Channel 10 Control Register? */
#define GTM_TOM0_CH11_CTRL	(*( GTM_TOM0_CH0_CTRL_type *) 0xf01082c0u)	/* TOM0 Channel 11 Control Register? */
#define GTM_TOM0_CH12_CTRL	(*( GTM_TOM0_CH0_CTRL_type *) 0xf0108300u)	/* TOM0 Channel 12 Control Register? */
#define GTM_TOM0_CH13_CTRL	(*( GTM_TOM0_CH0_CTRL_type *) 0xf0108340u)	/* TOM0 Channel 13 Control Register? */
#define GTM_TOM0_CH14_CTRL	(*( GTM_TOM0_CH0_CTRL_type *) 0xf0108380u)	/* TOM0 Channel 14 Control Register? */
#define GTM_TOM0_CH1_CTRL	(*( GTM_TOM0_CH0_CTRL_type *) 0xf0108040u)	/* TOM0 Channel 1 Control Register? */
#define GTM_TOM0_CH2_CTRL	(*( GTM_TOM0_CH0_CTRL_type *) 0xf0108080u)	/* TOM0 Channel 2 Control Register? */
#define GTM_TOM0_CH3_CTRL	(*( GTM_TOM0_CH0_CTRL_type *) 0xf01080c0u)	/* TOM0 Channel 3 Control Register? */
#define GTM_TOM0_CH4_CTRL	(*( GTM_TOM0_CH0_CTRL_type *) 0xf0108100u)	/* TOM0 Channel 4 Control Register? */
#define GTM_TOM0_CH5_CTRL	(*( GTM_TOM0_CH0_CTRL_type *) 0xf0108140u)	/* TOM0 Channel 5 Control Register? */
#define GTM_TOM0_CH6_CTRL	(*( GTM_TOM0_CH0_CTRL_type *) 0xf0108180u)	/* TOM0 Channel 6 Control Register? */
#define GTM_TOM0_CH7_CTRL	(*( GTM_TOM0_CH0_CTRL_type *) 0xf01081c0u)	/* TOM0 Channel 7 Control Register? */
#define GTM_TOM0_CH8_CTRL	(*( GTM_TOM0_CH0_CTRL_type *) 0xf0108200u)	/* TOM0 Channel 8 Control Register? */
#define GTM_TOM0_CH9_CTRL	(*( GTM_TOM0_CH0_CTRL_type *) 0xf0108240u)	/* TOM0 Channel 9 Control Register? */
#define GTM_TOM1_CH0_CTRL	(*( GTM_TOM0_CH0_CTRL_type *) 0xf0108800u)	/* TOM1 Channel 0 Control Register? */
#define GTM_TOM1_CH10_CTRL	(*( GTM_TOM0_CH0_CTRL_type *) 0xf0108a80u)	/* TOM1 Channel 10 Control Register? */
#define GTM_TOM1_CH11_CTRL	(*( GTM_TOM0_CH0_CTRL_type *) 0xf0108ac0u)	/* TOM1 Channel 11 Control Register? */
#define GTM_TOM1_CH12_CTRL	(*( GTM_TOM0_CH0_CTRL_type *) 0xf0108b00u)	/* TOM1 Channel 12 Control Register? */
#define GTM_TOM1_CH13_CTRL	(*( GTM_TOM0_CH0_CTRL_type *) 0xf0108b40u)	/* TOM1 Channel 13 Control Register? */
#define GTM_TOM1_CH14_CTRL	(*( GTM_TOM0_CH0_CTRL_type *) 0xf0108b80u)	/* TOM1 Channel 14 Control Register? */
#define GTM_TOM1_CH1_CTRL	(*( GTM_TOM0_CH0_CTRL_type *) 0xf0108840u)	/* TOM1 Channel 1 Control Register? */
#define GTM_TOM1_CH2_CTRL	(*( GTM_TOM0_CH0_CTRL_type *) 0xf0108880u)	/* TOM1 Channel 2 Control Register? */
#define GTM_TOM1_CH3_CTRL	(*( GTM_TOM0_CH0_CTRL_type *) 0xf01088c0u)	/* TOM1 Channel 3 Control Register? */
#define GTM_TOM1_CH4_CTRL	(*( GTM_TOM0_CH0_CTRL_type *) 0xf0108900u)	/* TOM1 Channel 4 Control Register? */
#define GTM_TOM1_CH5_CTRL	(*( GTM_TOM0_CH0_CTRL_type *) 0xf0108940u)	/* TOM1 Channel 5 Control Register? */
#define GTM_TOM1_CH6_CTRL	(*( GTM_TOM0_CH0_CTRL_type *) 0xf0108980u)	/* TOM1 Channel 6 Control Register? */
#define GTM_TOM1_CH7_CTRL	(*( GTM_TOM0_CH0_CTRL_type *) 0xf01089c0u)	/* TOM1 Channel 7 Control Register? */
#define GTM_TOM1_CH8_CTRL	(*( GTM_TOM0_CH0_CTRL_type *) 0xf0108a00u)	/* TOM1 Channel 8 Control Register? */
#define GTM_TOM1_CH9_CTRL	(*( GTM_TOM0_CH0_CTRL_type *) 0xf0108a40u)	/* TOM1 Channel 9 Control Register? */
#define GTM_TOM2_CH0_CTRL	(*( GTM_TOM0_CH0_CTRL_type *) 0xf0109000u)	/* TOM2 Channel 0 Control Register? */
#define GTM_TOM2_CH10_CTRL	(*( GTM_TOM0_CH0_CTRL_type *) 0xf0109280u)	/* TOM2 Channel 10 Control Register? */
#define GTM_TOM2_CH11_CTRL	(*( GTM_TOM0_CH0_CTRL_type *) 0xf01092c0u)	/* TOM2 Channel 11 Control Register? */
#define GTM_TOM2_CH12_CTRL	(*( GTM_TOM0_CH0_CTRL_type *) 0xf0109300u)	/* TOM2 Channel 12 Control Register? */
#define GTM_TOM2_CH13_CTRL	(*( GTM_TOM0_CH0_CTRL_type *) 0xf0109340u)	/* TOM2 Channel 13 Control Register? */
#define GTM_TOM2_CH14_CTRL	(*( GTM_TOM0_CH0_CTRL_type *) 0xf0109380u)	/* TOM2 Channel 14 Control Register? */
#define GTM_TOM2_CH1_CTRL	(*( GTM_TOM0_CH0_CTRL_type *) 0xf0109040u)	/* TOM2 Channel 1 Control Register? */
#define GTM_TOM2_CH2_CTRL	(*( GTM_TOM0_CH0_CTRL_type *) 0xf0109080u)	/* TOM2 Channel 2 Control Register? */
#define GTM_TOM2_CH3_CTRL	(*( GTM_TOM0_CH0_CTRL_type *) 0xf01090c0u)	/* TOM2 Channel 3 Control Register? */
#define GTM_TOM2_CH4_CTRL	(*( GTM_TOM0_CH0_CTRL_type *) 0xf0109100u)	/* TOM2 Channel 4 Control Register? */
#define GTM_TOM2_CH5_CTRL	(*( GTM_TOM0_CH0_CTRL_type *) 0xf0109140u)	/* TOM2 Channel 5 Control Register? */
#define GTM_TOM2_CH6_CTRL	(*( GTM_TOM0_CH0_CTRL_type *) 0xf0109180u)	/* TOM2 Channel 6 Control Register? */
#define GTM_TOM2_CH7_CTRL	(*( GTM_TOM0_CH0_CTRL_type *) 0xf01091c0u)	/* TOM2 Channel 7 Control Register? */
#define GTM_TOM2_CH8_CTRL	(*( GTM_TOM0_CH0_CTRL_type *) 0xf0109200u)	/* TOM2 Channel 8 Control Register? */
#define GTM_TOM2_CH9_CTRL	(*( GTM_TOM0_CH0_CTRL_type *) 0xf0109240u)	/* TOM2 Channel 9 Control Register? */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 CCU0TC_IRQ_EN  : 1;	/* TOM_CCU0TC_IRQ interrupt enable */
		unsigned __sfrbit32 CCU1TC_IRQ_EN  : 1;	/* TOM_CCU1TC_IRQ interrupt enable */
		/* const */ unsigned __sfrbit32 Reserved       : 30;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GTM_TOM0_CH0_IRQ_EN_type;
#define GTM_TOM0_CH0_IRQ_EN	(*( GTM_TOM0_CH0_IRQ_EN_type *) 0xf0108020u)	/* TOM0 Channel 0 Interrupt Enable Register */
#define GTM_TOM0_CH10_IRQ_EN	(*( GTM_TOM0_CH0_IRQ_EN_type *) 0xf01082a0u)	/* TOM0 Channel 10 Interrupt Enable Register */
#define GTM_TOM0_CH11_IRQ_EN	(*( GTM_TOM0_CH0_IRQ_EN_type *) 0xf01082e0u)	/* TOM0 Channel 11 Interrupt Enable Register */
#define GTM_TOM0_CH12_IRQ_EN	(*( GTM_TOM0_CH0_IRQ_EN_type *) 0xf0108320u)	/* TOM0 Channel 12 Interrupt Enable Register */
#define GTM_TOM0_CH13_IRQ_EN	(*( GTM_TOM0_CH0_IRQ_EN_type *) 0xf0108360u)	/* TOM0 Channel 13 Interrupt Enable Register */
#define GTM_TOM0_CH14_IRQ_EN	(*( GTM_TOM0_CH0_IRQ_EN_type *) 0xf01083a0u)	/* TOM0 Channel 14 Interrupt Enable Register */
#define GTM_TOM0_CH15_IRQ_EN	(*( GTM_TOM0_CH0_IRQ_EN_type *) 0xf01083e0u)	/* TOM0 Channel 15 Interrupt Enable Register */
#define GTM_TOM0_CH1_IRQ_EN	(*( GTM_TOM0_CH0_IRQ_EN_type *) 0xf0108060u)	/* TOM0 Channel 1 Interrupt Enable Register */
#define GTM_TOM0_CH2_IRQ_EN	(*( GTM_TOM0_CH0_IRQ_EN_type *) 0xf01080a0u)	/* TOM0 Channel 2 Interrupt Enable Register */
#define GTM_TOM0_CH3_IRQ_EN	(*( GTM_TOM0_CH0_IRQ_EN_type *) 0xf01080e0u)	/* TOM0 Channel 3 Interrupt Enable Register */
#define GTM_TOM0_CH4_IRQ_EN	(*( GTM_TOM0_CH0_IRQ_EN_type *) 0xf0108120u)	/* TOM0 Channel 4 Interrupt Enable Register */
#define GTM_TOM0_CH5_IRQ_EN	(*( GTM_TOM0_CH0_IRQ_EN_type *) 0xf0108160u)	/* TOM0 Channel 5 Interrupt Enable Register */
#define GTM_TOM0_CH6_IRQ_EN	(*( GTM_TOM0_CH0_IRQ_EN_type *) 0xf01081a0u)	/* TOM0 Channel 6 Interrupt Enable Register */
#define GTM_TOM0_CH7_IRQ_EN	(*( GTM_TOM0_CH0_IRQ_EN_type *) 0xf01081e0u)	/* TOM0 Channel 7 Interrupt Enable Register */
#define GTM_TOM0_CH8_IRQ_EN	(*( GTM_TOM0_CH0_IRQ_EN_type *) 0xf0108220u)	/* TOM0 Channel 8 Interrupt Enable Register */
#define GTM_TOM0_CH9_IRQ_EN	(*( GTM_TOM0_CH0_IRQ_EN_type *) 0xf0108260u)	/* TOM0 Channel 9 Interrupt Enable Register */
#define GTM_TOM1_CH0_IRQ_EN	(*( GTM_TOM0_CH0_IRQ_EN_type *) 0xf0108820u)	/* TOM1 Channel 0 Interrupt Enable Register */
#define GTM_TOM1_CH10_IRQ_EN	(*( GTM_TOM0_CH0_IRQ_EN_type *) 0xf0108aa0u)	/* TOM1 Channel 10 Interrupt Enable Register */
#define GTM_TOM1_CH11_IRQ_EN	(*( GTM_TOM0_CH0_IRQ_EN_type *) 0xf0108ae0u)	/* TOM1 Channel 11 Interrupt Enable Register */
#define GTM_TOM1_CH12_IRQ_EN	(*( GTM_TOM0_CH0_IRQ_EN_type *) 0xf0108b20u)	/* TOM1 Channel 12 Interrupt Enable Register */
#define GTM_TOM1_CH13_IRQ_EN	(*( GTM_TOM0_CH0_IRQ_EN_type *) 0xf0108b60u)	/* TOM1 Channel 13 Interrupt Enable Register */
#define GTM_TOM1_CH14_IRQ_EN	(*( GTM_TOM0_CH0_IRQ_EN_type *) 0xf0108ba0u)	/* TOM1 Channel 14 Interrupt Enable Register */
#define GTM_TOM1_CH15_IRQ_EN	(*( GTM_TOM0_CH0_IRQ_EN_type *) 0xf0108be0u)	/* TOM1 Channel 15 Interrupt Enable Register */
#define GTM_TOM1_CH1_IRQ_EN	(*( GTM_TOM0_CH0_IRQ_EN_type *) 0xf0108860u)	/* TOM1 Channel 1 Interrupt Enable Register */
#define GTM_TOM1_CH2_IRQ_EN	(*( GTM_TOM0_CH0_IRQ_EN_type *) 0xf01088a0u)	/* TOM1 Channel 2 Interrupt Enable Register */
#define GTM_TOM1_CH3_IRQ_EN	(*( GTM_TOM0_CH0_IRQ_EN_type *) 0xf01088e0u)	/* TOM1 Channel 3 Interrupt Enable Register */
#define GTM_TOM1_CH4_IRQ_EN	(*( GTM_TOM0_CH0_IRQ_EN_type *) 0xf0108920u)	/* TOM1 Channel 4 Interrupt Enable Register */
#define GTM_TOM1_CH5_IRQ_EN	(*( GTM_TOM0_CH0_IRQ_EN_type *) 0xf0108960u)	/* TOM1 Channel 5 Interrupt Enable Register */
#define GTM_TOM1_CH6_IRQ_EN	(*( GTM_TOM0_CH0_IRQ_EN_type *) 0xf01089a0u)	/* TOM1 Channel 6 Interrupt Enable Register */
#define GTM_TOM1_CH7_IRQ_EN	(*( GTM_TOM0_CH0_IRQ_EN_type *) 0xf01089e0u)	/* TOM1 Channel 7 Interrupt Enable Register */
#define GTM_TOM1_CH8_IRQ_EN	(*( GTM_TOM0_CH0_IRQ_EN_type *) 0xf0108a20u)	/* TOM1 Channel 8 Interrupt Enable Register */
#define GTM_TOM1_CH9_IRQ_EN	(*( GTM_TOM0_CH0_IRQ_EN_type *) 0xf0108a60u)	/* TOM1 Channel 9 Interrupt Enable Register */
#define GTM_TOM2_CH0_IRQ_EN	(*( GTM_TOM0_CH0_IRQ_EN_type *) 0xf0109020u)	/* TOM2 Channel 0 Interrupt Enable Register */
#define GTM_TOM2_CH10_IRQ_EN	(*( GTM_TOM0_CH0_IRQ_EN_type *) 0xf01092a0u)	/* TOM2 Channel 10 Interrupt Enable Register */
#define GTM_TOM2_CH11_IRQ_EN	(*( GTM_TOM0_CH0_IRQ_EN_type *) 0xf01092e0u)	/* TOM2 Channel 11 Interrupt Enable Register */
#define GTM_TOM2_CH12_IRQ_EN	(*( GTM_TOM0_CH0_IRQ_EN_type *) 0xf0109320u)	/* TOM2 Channel 12 Interrupt Enable Register */
#define GTM_TOM2_CH13_IRQ_EN	(*( GTM_TOM0_CH0_IRQ_EN_type *) 0xf0109360u)	/* TOM2 Channel 13 Interrupt Enable Register */
#define GTM_TOM2_CH14_IRQ_EN	(*( GTM_TOM0_CH0_IRQ_EN_type *) 0xf01093a0u)	/* TOM2 Channel 14 Interrupt Enable Register */
#define GTM_TOM2_CH15_IRQ_EN	(*( GTM_TOM0_CH0_IRQ_EN_type *) 0xf01093e0u)	/* TOM2 Channel 15 Interrupt Enable Register */
#define GTM_TOM2_CH1_IRQ_EN	(*( GTM_TOM0_CH0_IRQ_EN_type *) 0xf0109060u)	/* TOM2 Channel 1 Interrupt Enable Register */
#define GTM_TOM2_CH2_IRQ_EN	(*( GTM_TOM0_CH0_IRQ_EN_type *) 0xf01090a0u)	/* TOM2 Channel 2 Interrupt Enable Register */
#define GTM_TOM2_CH3_IRQ_EN	(*( GTM_TOM0_CH0_IRQ_EN_type *) 0xf01090e0u)	/* TOM2 Channel 3 Interrupt Enable Register */
#define GTM_TOM2_CH4_IRQ_EN	(*( GTM_TOM0_CH0_IRQ_EN_type *) 0xf0109120u)	/* TOM2 Channel 4 Interrupt Enable Register */
#define GTM_TOM2_CH5_IRQ_EN	(*( GTM_TOM0_CH0_IRQ_EN_type *) 0xf0109160u)	/* TOM2 Channel 5 Interrupt Enable Register */
#define GTM_TOM2_CH6_IRQ_EN	(*( GTM_TOM0_CH0_IRQ_EN_type *) 0xf01091a0u)	/* TOM2 Channel 6 Interrupt Enable Register */
#define GTM_TOM2_CH7_IRQ_EN	(*( GTM_TOM0_CH0_IRQ_EN_type *) 0xf01091e0u)	/* TOM2 Channel 7 Interrupt Enable Register */
#define GTM_TOM2_CH8_IRQ_EN	(*( GTM_TOM0_CH0_IRQ_EN_type *) 0xf0109220u)	/* TOM2 Channel 8 Interrupt Enable Register */
#define GTM_TOM2_CH9_IRQ_EN	(*( GTM_TOM0_CH0_IRQ_EN_type *) 0xf0109260u)	/* TOM2 Channel 9 Interrupt Enable Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 TRG_CCU0TC0    : 1;	/* Trigger TOM_CCU0TC0_IRQ interrupt by software */
		unsigned __sfrbit32 TRG_CCU1TC0    : 1;	/* Trigger TOM_CCU1TC0_IRQ interrupt by software */
		/* const */ unsigned __sfrbit32 Reserved       : 30;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GTM_TOM0_CH0_IRQ_FORCINT_type;
#define GTM_TOM0_CH0_IRQ_FORCINT	(*( GTM_TOM0_CH0_IRQ_FORCINT_type *) 0xf0108024u)	/* TOM0 Channel 0 Software Interrupt Generation Register */
#define GTM_TOM0_CH10_IRQ_FORCINT	(*( GTM_TOM0_CH0_IRQ_FORCINT_type *) 0xf01082a4u)	/* TOM0 Channel 10 Software Interrupt Generation Register */
#define GTM_TOM0_CH11_IRQ_FORCINT	(*( GTM_TOM0_CH0_IRQ_FORCINT_type *) 0xf01082e4u)	/* TOM0 Channel 11 Software Interrupt Generation Register */
#define GTM_TOM0_CH12_IRQ_FORCINT	(*( GTM_TOM0_CH0_IRQ_FORCINT_type *) 0xf0108324u)	/* TOM0 Channel 12 Software Interrupt Generation Register */
#define GTM_TOM0_CH13_IRQ_FORCINT	(*( GTM_TOM0_CH0_IRQ_FORCINT_type *) 0xf0108364u)	/* TOM0 Channel 13 Software Interrupt Generation Register */
#define GTM_TOM0_CH14_IRQ_FORCINT	(*( GTM_TOM0_CH0_IRQ_FORCINT_type *) 0xf01083a4u)	/* TOM0 Channel 14 Software Interrupt Generation Register */
#define GTM_TOM0_CH15_IRQ_FORCINT	(*( GTM_TOM0_CH0_IRQ_FORCINT_type *) 0xf01083e4u)	/* TOM0 Channel 15 Software Interrupt Generation Register */
#define GTM_TOM0_CH1_IRQ_FORCINT	(*( GTM_TOM0_CH0_IRQ_FORCINT_type *) 0xf0108064u)	/* TOM0 Channel 1 Software Interrupt Generation Register */
#define GTM_TOM0_CH2_IRQ_FORCINT	(*( GTM_TOM0_CH0_IRQ_FORCINT_type *) 0xf01080a4u)	/* TOM0 Channel 2 Software Interrupt Generation Register */
#define GTM_TOM0_CH3_IRQ_FORCINT	(*( GTM_TOM0_CH0_IRQ_FORCINT_type *) 0xf01080e4u)	/* TOM0 Channel 3 Software Interrupt Generation Register */
#define GTM_TOM0_CH4_IRQ_FORCINT	(*( GTM_TOM0_CH0_IRQ_FORCINT_type *) 0xf0108124u)	/* TOM0 Channel 4 Software Interrupt Generation Register */
#define GTM_TOM0_CH5_IRQ_FORCINT	(*( GTM_TOM0_CH0_IRQ_FORCINT_type *) 0xf0108164u)	/* TOM0 Channel 5 Software Interrupt Generation Register */
#define GTM_TOM0_CH6_IRQ_FORCINT	(*( GTM_TOM0_CH0_IRQ_FORCINT_type *) 0xf01081a4u)	/* TOM0 Channel 6 Software Interrupt Generation Register */
#define GTM_TOM0_CH7_IRQ_FORCINT	(*( GTM_TOM0_CH0_IRQ_FORCINT_type *) 0xf01081e4u)	/* TOM0 Channel 7 Software Interrupt Generation Register */
#define GTM_TOM0_CH8_IRQ_FORCINT	(*( GTM_TOM0_CH0_IRQ_FORCINT_type *) 0xf0108224u)	/* TOM0 Channel 8 Software Interrupt Generation Register */
#define GTM_TOM0_CH9_IRQ_FORCINT	(*( GTM_TOM0_CH0_IRQ_FORCINT_type *) 0xf0108264u)	/* TOM0 Channel 9 Software Interrupt Generation Register */
#define GTM_TOM1_CH0_IRQ_FORCINT	(*( GTM_TOM0_CH0_IRQ_FORCINT_type *) 0xf0108824u)	/* TOM1 Channel 0 Software Interrupt Generation Register */
#define GTM_TOM1_CH10_IRQ_FORCINT	(*( GTM_TOM0_CH0_IRQ_FORCINT_type *) 0xf0108aa4u)	/* TOM1 Channel 10 Software Interrupt Generation Register */
#define GTM_TOM1_CH11_IRQ_FORCINT	(*( GTM_TOM0_CH0_IRQ_FORCINT_type *) 0xf0108ae4u)	/* TOM1 Channel 11 Software Interrupt Generation Register */
#define GTM_TOM1_CH12_IRQ_FORCINT	(*( GTM_TOM0_CH0_IRQ_FORCINT_type *) 0xf0108b24u)	/* TOM1 Channel 12 Software Interrupt Generation Register */
#define GTM_TOM1_CH13_IRQ_FORCINT	(*( GTM_TOM0_CH0_IRQ_FORCINT_type *) 0xf0108b64u)	/* TOM1 Channel 13 Software Interrupt Generation Register */
#define GTM_TOM1_CH14_IRQ_FORCINT	(*( GTM_TOM0_CH0_IRQ_FORCINT_type *) 0xf0108ba4u)	/* TOM1 Channel 14 Software Interrupt Generation Register */
#define GTM_TOM1_CH15_IRQ_FORCINT	(*( GTM_TOM0_CH0_IRQ_FORCINT_type *) 0xf0108be4u)	/* TOM1 Channel 15 Software Interrupt Generation Register */
#define GTM_TOM1_CH1_IRQ_FORCINT	(*( GTM_TOM0_CH0_IRQ_FORCINT_type *) 0xf0108864u)	/* TOM1 Channel 1 Software Interrupt Generation Register */
#define GTM_TOM1_CH2_IRQ_FORCINT	(*( GTM_TOM0_CH0_IRQ_FORCINT_type *) 0xf01088a4u)	/* TOM1 Channel 2 Software Interrupt Generation Register */
#define GTM_TOM1_CH3_IRQ_FORCINT	(*( GTM_TOM0_CH0_IRQ_FORCINT_type *) 0xf01088e4u)	/* TOM1 Channel 3 Software Interrupt Generation Register */
#define GTM_TOM1_CH4_IRQ_FORCINT	(*( GTM_TOM0_CH0_IRQ_FORCINT_type *) 0xf0108924u)	/* TOM1 Channel 4 Software Interrupt Generation Register */
#define GTM_TOM1_CH5_IRQ_FORCINT	(*( GTM_TOM0_CH0_IRQ_FORCINT_type *) 0xf0108964u)	/* TOM1 Channel 5 Software Interrupt Generation Register */
#define GTM_TOM1_CH6_IRQ_FORCINT	(*( GTM_TOM0_CH0_IRQ_FORCINT_type *) 0xf01089a4u)	/* TOM1 Channel 6 Software Interrupt Generation Register */
#define GTM_TOM1_CH7_IRQ_FORCINT	(*( GTM_TOM0_CH0_IRQ_FORCINT_type *) 0xf01089e4u)	/* TOM1 Channel 7 Software Interrupt Generation Register */
#define GTM_TOM1_CH8_IRQ_FORCINT	(*( GTM_TOM0_CH0_IRQ_FORCINT_type *) 0xf0108a24u)	/* TOM1 Channel 8 Software Interrupt Generation Register */
#define GTM_TOM1_CH9_IRQ_FORCINT	(*( GTM_TOM0_CH0_IRQ_FORCINT_type *) 0xf0108a64u)	/* TOM1 Channel 9 Software Interrupt Generation Register */
#define GTM_TOM2_CH0_IRQ_FORCINT	(*( GTM_TOM0_CH0_IRQ_FORCINT_type *) 0xf0109024u)	/* TOM2 Channel 0 Software Interrupt Generation Register */
#define GTM_TOM2_CH10_IRQ_FORCINT	(*( GTM_TOM0_CH0_IRQ_FORCINT_type *) 0xf01092a4u)	/* TOM2 Channel 10 Software Interrupt Generation Register */
#define GTM_TOM2_CH11_IRQ_FORCINT	(*( GTM_TOM0_CH0_IRQ_FORCINT_type *) 0xf01092e4u)	/* TOM2 Channel 11 Software Interrupt Generation Register */
#define GTM_TOM2_CH12_IRQ_FORCINT	(*( GTM_TOM0_CH0_IRQ_FORCINT_type *) 0xf0109324u)	/* TOM2 Channel 12 Software Interrupt Generation Register */
#define GTM_TOM2_CH13_IRQ_FORCINT	(*( GTM_TOM0_CH0_IRQ_FORCINT_type *) 0xf0109364u)	/* TOM2 Channel 13 Software Interrupt Generation Register */
#define GTM_TOM2_CH14_IRQ_FORCINT	(*( GTM_TOM0_CH0_IRQ_FORCINT_type *) 0xf01093a4u)	/* TOM2 Channel 14 Software Interrupt Generation Register */
#define GTM_TOM2_CH15_IRQ_FORCINT	(*( GTM_TOM0_CH0_IRQ_FORCINT_type *) 0xf01093e4u)	/* TOM2 Channel 15 Software Interrupt Generation Register */
#define GTM_TOM2_CH1_IRQ_FORCINT	(*( GTM_TOM0_CH0_IRQ_FORCINT_type *) 0xf0109064u)	/* TOM2 Channel 1 Software Interrupt Generation Register */
#define GTM_TOM2_CH2_IRQ_FORCINT	(*( GTM_TOM0_CH0_IRQ_FORCINT_type *) 0xf01090a4u)	/* TOM2 Channel 2 Software Interrupt Generation Register */
#define GTM_TOM2_CH3_IRQ_FORCINT	(*( GTM_TOM0_CH0_IRQ_FORCINT_type *) 0xf01090e4u)	/* TOM2 Channel 3 Software Interrupt Generation Register */
#define GTM_TOM2_CH4_IRQ_FORCINT	(*( GTM_TOM0_CH0_IRQ_FORCINT_type *) 0xf0109124u)	/* TOM2 Channel 4 Software Interrupt Generation Register */
#define GTM_TOM2_CH5_IRQ_FORCINT	(*( GTM_TOM0_CH0_IRQ_FORCINT_type *) 0xf0109164u)	/* TOM2 Channel 5 Software Interrupt Generation Register */
#define GTM_TOM2_CH6_IRQ_FORCINT	(*( GTM_TOM0_CH0_IRQ_FORCINT_type *) 0xf01091a4u)	/* TOM2 Channel 6 Software Interrupt Generation Register */
#define GTM_TOM2_CH7_IRQ_FORCINT	(*( GTM_TOM0_CH0_IRQ_FORCINT_type *) 0xf01091e4u)	/* TOM2 Channel 7 Software Interrupt Generation Register */
#define GTM_TOM2_CH8_IRQ_FORCINT	(*( GTM_TOM0_CH0_IRQ_FORCINT_type *) 0xf0109224u)	/* TOM2 Channel 8 Software Interrupt Generation Register */
#define GTM_TOM2_CH9_IRQ_FORCINT	(*( GTM_TOM0_CH0_IRQ_FORCINT_type *) 0xf0109264u)	/* TOM2 Channel 9 Software Interrupt Generation Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 CCU0TC         : 1;	/* CCU0 Trigger condition interrupt for channel x */
		unsigned __sfrbit32 CCU1TC         : 1;	/* CCU1 Trigger condition interrupt for channel x */
		/* const */ unsigned __sfrbit32 Reserved       : 30;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GTM_TOM0_CH0_IRQ_NOTIFY_type;
#define GTM_TOM0_CH0_IRQ_NOTIFY	(*( GTM_TOM0_CH0_IRQ_NOTIFY_type *) 0xf010801cu)	/* TOM0 Channel 0 Interrupt Notification Register */
#define GTM_TOM0_CH10_IRQ_NOTIFY	(*( GTM_TOM0_CH0_IRQ_NOTIFY_type *) 0xf010829cu)	/* TOM0 Channel 10 Interrupt Notification Register */
#define GTM_TOM0_CH11_IRQ_NOTIFY	(*( GTM_TOM0_CH0_IRQ_NOTIFY_type *) 0xf01082dcu)	/* TOM0 Channel 11 Interrupt Notification Register */
#define GTM_TOM0_CH12_IRQ_NOTIFY	(*( GTM_TOM0_CH0_IRQ_NOTIFY_type *) 0xf010831cu)	/* TOM0 Channel 12 Interrupt Notification Register */
#define GTM_TOM0_CH13_IRQ_NOTIFY	(*( GTM_TOM0_CH0_IRQ_NOTIFY_type *) 0xf010835cu)	/* TOM0 Channel 13 Interrupt Notification Register */
#define GTM_TOM0_CH14_IRQ_NOTIFY	(*( GTM_TOM0_CH0_IRQ_NOTIFY_type *) 0xf010839cu)	/* TOM0 Channel 14 Interrupt Notification Register */
#define GTM_TOM0_CH15_IRQ_NOTIFY	(*( GTM_TOM0_CH0_IRQ_NOTIFY_type *) 0xf01083dcu)	/* TOM0 Channel 15 Interrupt Notification Register */
#define GTM_TOM0_CH1_IRQ_NOTIFY	(*( GTM_TOM0_CH0_IRQ_NOTIFY_type *) 0xf010805cu)	/* TOM0 Channel 1 Interrupt Notification Register */
#define GTM_TOM0_CH2_IRQ_NOTIFY	(*( GTM_TOM0_CH0_IRQ_NOTIFY_type *) 0xf010809cu)	/* TOM0 Channel 2 Interrupt Notification Register */
#define GTM_TOM0_CH3_IRQ_NOTIFY	(*( GTM_TOM0_CH0_IRQ_NOTIFY_type *) 0xf01080dcu)	/* TOM0 Channel 3 Interrupt Notification Register */
#define GTM_TOM0_CH4_IRQ_NOTIFY	(*( GTM_TOM0_CH0_IRQ_NOTIFY_type *) 0xf010811cu)	/* TOM0 Channel 4 Interrupt Notification Register */
#define GTM_TOM0_CH5_IRQ_NOTIFY	(*( GTM_TOM0_CH0_IRQ_NOTIFY_type *) 0xf010815cu)	/* TOM0 Channel 5 Interrupt Notification Register */
#define GTM_TOM0_CH6_IRQ_NOTIFY	(*( GTM_TOM0_CH0_IRQ_NOTIFY_type *) 0xf010819cu)	/* TOM0 Channel 6 Interrupt Notification Register */
#define GTM_TOM0_CH7_IRQ_NOTIFY	(*( GTM_TOM0_CH0_IRQ_NOTIFY_type *) 0xf01081dcu)	/* TOM0 Channel 7 Interrupt Notification Register */
#define GTM_TOM0_CH8_IRQ_NOTIFY	(*( GTM_TOM0_CH0_IRQ_NOTIFY_type *) 0xf010821cu)	/* TOM0 Channel 8 Interrupt Notification Register */
#define GTM_TOM0_CH9_IRQ_NOTIFY	(*( GTM_TOM0_CH0_IRQ_NOTIFY_type *) 0xf010825cu)	/* TOM0 Channel 9 Interrupt Notification Register */
#define GTM_TOM1_CH0_IRQ_NOTIFY	(*( GTM_TOM0_CH0_IRQ_NOTIFY_type *) 0xf010881cu)	/* TOM1 Channel 0 Interrupt Notification Register */
#define GTM_TOM1_CH10_IRQ_NOTIFY	(*( GTM_TOM0_CH0_IRQ_NOTIFY_type *) 0xf0108a9cu)	/* TOM1 Channel 10 Interrupt Notification Register */
#define GTM_TOM1_CH11_IRQ_NOTIFY	(*( GTM_TOM0_CH0_IRQ_NOTIFY_type *) 0xf0108adcu)	/* TOM1 Channel 11 Interrupt Notification Register */
#define GTM_TOM1_CH12_IRQ_NOTIFY	(*( GTM_TOM0_CH0_IRQ_NOTIFY_type *) 0xf0108b1cu)	/* TOM1 Channel 12 Interrupt Notification Register */
#define GTM_TOM1_CH13_IRQ_NOTIFY	(*( GTM_TOM0_CH0_IRQ_NOTIFY_type *) 0xf0108b5cu)	/* TOM1 Channel 13 Interrupt Notification Register */
#define GTM_TOM1_CH14_IRQ_NOTIFY	(*( GTM_TOM0_CH0_IRQ_NOTIFY_type *) 0xf0108b9cu)	/* TOM1 Channel 14 Interrupt Notification Register */
#define GTM_TOM1_CH15_IRQ_NOTIFY	(*( GTM_TOM0_CH0_IRQ_NOTIFY_type *) 0xf0108bdcu)	/* TOM1 Channel 15 Interrupt Notification Register */
#define GTM_TOM1_CH1_IRQ_NOTIFY	(*( GTM_TOM0_CH0_IRQ_NOTIFY_type *) 0xf010885cu)	/* TOM1 Channel 1 Interrupt Notification Register */
#define GTM_TOM1_CH2_IRQ_NOTIFY	(*( GTM_TOM0_CH0_IRQ_NOTIFY_type *) 0xf010889cu)	/* TOM1 Channel 2 Interrupt Notification Register */
#define GTM_TOM1_CH3_IRQ_NOTIFY	(*( GTM_TOM0_CH0_IRQ_NOTIFY_type *) 0xf01088dcu)	/* TOM1 Channel 3 Interrupt Notification Register */
#define GTM_TOM1_CH4_IRQ_NOTIFY	(*( GTM_TOM0_CH0_IRQ_NOTIFY_type *) 0xf010891cu)	/* TOM1 Channel 4 Interrupt Notification Register */
#define GTM_TOM1_CH5_IRQ_NOTIFY	(*( GTM_TOM0_CH0_IRQ_NOTIFY_type *) 0xf010895cu)	/* TOM1 Channel 5 Interrupt Notification Register */
#define GTM_TOM1_CH6_IRQ_NOTIFY	(*( GTM_TOM0_CH0_IRQ_NOTIFY_type *) 0xf010899cu)	/* TOM1 Channel 6 Interrupt Notification Register */
#define GTM_TOM1_CH7_IRQ_NOTIFY	(*( GTM_TOM0_CH0_IRQ_NOTIFY_type *) 0xf01089dcu)	/* TOM1 Channel 7 Interrupt Notification Register */
#define GTM_TOM1_CH8_IRQ_NOTIFY	(*( GTM_TOM0_CH0_IRQ_NOTIFY_type *) 0xf0108a1cu)	/* TOM1 Channel 8 Interrupt Notification Register */
#define GTM_TOM1_CH9_IRQ_NOTIFY	(*( GTM_TOM0_CH0_IRQ_NOTIFY_type *) 0xf0108a5cu)	/* TOM1 Channel 9 Interrupt Notification Register */
#define GTM_TOM2_CH0_IRQ_NOTIFY	(*( GTM_TOM0_CH0_IRQ_NOTIFY_type *) 0xf010901cu)	/* TOM2 Channel 0 Interrupt Notification Register */
#define GTM_TOM2_CH10_IRQ_NOTIFY	(*( GTM_TOM0_CH0_IRQ_NOTIFY_type *) 0xf010929cu)	/* TOM2 Channel 10 Interrupt Notification Register */
#define GTM_TOM2_CH11_IRQ_NOTIFY	(*( GTM_TOM0_CH0_IRQ_NOTIFY_type *) 0xf01092dcu)	/* TOM2 Channel 11 Interrupt Notification Register */
#define GTM_TOM2_CH12_IRQ_NOTIFY	(*( GTM_TOM0_CH0_IRQ_NOTIFY_type *) 0xf010931cu)	/* TOM2 Channel 12 Interrupt Notification Register */
#define GTM_TOM2_CH13_IRQ_NOTIFY	(*( GTM_TOM0_CH0_IRQ_NOTIFY_type *) 0xf010935cu)	/* TOM2 Channel 13 Interrupt Notification Register */
#define GTM_TOM2_CH14_IRQ_NOTIFY	(*( GTM_TOM0_CH0_IRQ_NOTIFY_type *) 0xf010939cu)	/* TOM2 Channel 14 Interrupt Notification Register */
#define GTM_TOM2_CH15_IRQ_NOTIFY	(*( GTM_TOM0_CH0_IRQ_NOTIFY_type *) 0xf01093dcu)	/* TOM2 Channel 15 Interrupt Notification Register */
#define GTM_TOM2_CH1_IRQ_NOTIFY	(*( GTM_TOM0_CH0_IRQ_NOTIFY_type *) 0xf010905cu)	/* TOM2 Channel 1 Interrupt Notification Register */
#define GTM_TOM2_CH2_IRQ_NOTIFY	(*( GTM_TOM0_CH0_IRQ_NOTIFY_type *) 0xf010909cu)	/* TOM2 Channel 2 Interrupt Notification Register */
#define GTM_TOM2_CH3_IRQ_NOTIFY	(*( GTM_TOM0_CH0_IRQ_NOTIFY_type *) 0xf01090dcu)	/* TOM2 Channel 3 Interrupt Notification Register */
#define GTM_TOM2_CH4_IRQ_NOTIFY	(*( GTM_TOM0_CH0_IRQ_NOTIFY_type *) 0xf010911cu)	/* TOM2 Channel 4 Interrupt Notification Register */
#define GTM_TOM2_CH5_IRQ_NOTIFY	(*( GTM_TOM0_CH0_IRQ_NOTIFY_type *) 0xf010915cu)	/* TOM2 Channel 5 Interrupt Notification Register */
#define GTM_TOM2_CH6_IRQ_NOTIFY	(*( GTM_TOM0_CH0_IRQ_NOTIFY_type *) 0xf010919cu)	/* TOM2 Channel 6 Interrupt Notification Register */
#define GTM_TOM2_CH7_IRQ_NOTIFY	(*( GTM_TOM0_CH0_IRQ_NOTIFY_type *) 0xf01091dcu)	/* TOM2 Channel 7 Interrupt Notification Register */
#define GTM_TOM2_CH8_IRQ_NOTIFY	(*( GTM_TOM0_CH0_IRQ_NOTIFY_type *) 0xf010921cu)	/* TOM2 Channel 8 Interrupt Notification Register */
#define GTM_TOM2_CH9_IRQ_NOTIFY	(*( GTM_TOM0_CH0_IRQ_NOTIFY_type *) 0xf010925cu)	/* TOM2 Channel 9 Interrupt Notification Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 SR0            : 16;	/* TOM channel x shadow register SR0 for update of compare register CM0 */
		/* const */ unsigned __sfrbit32 Reserved       : 16;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GTM_TOM0_CH0_SR0_type;
#define GTM_TOM0_CH0_SR0	(*( GTM_TOM0_CH0_SR0_type *) 0xf0108004u)	/* TOM0 Channel 0 CCU0 Compare Shadow Register */
#define GTM_TOM0_CH10_SR0	(*( GTM_TOM0_CH0_SR0_type *) 0xf0108284u)	/* TOM0 Channel 10 CCU0 Compare Shadow Register */
#define GTM_TOM0_CH11_SR0	(*( GTM_TOM0_CH0_SR0_type *) 0xf01082c4u)	/* TOM0 Channel 11 CCU0 Compare Shadow Register */
#define GTM_TOM0_CH12_SR0	(*( GTM_TOM0_CH0_SR0_type *) 0xf0108304u)	/* TOM0 Channel 12 CCU0 Compare Shadow Register */
#define GTM_TOM0_CH13_SR0	(*( GTM_TOM0_CH0_SR0_type *) 0xf0108344u)	/* TOM0 Channel 13 CCU0 Compare Shadow Register */
#define GTM_TOM0_CH14_SR0	(*( GTM_TOM0_CH0_SR0_type *) 0xf0108384u)	/* TOM0 Channel 14 CCU0 Compare Shadow Register */
#define GTM_TOM0_CH15_SR0	(*( GTM_TOM0_CH0_SR0_type *) 0xf01083c4u)	/* TOM0 Channel 15 CCU0 Compare Shadow Register */
#define GTM_TOM0_CH1_SR0	(*( GTM_TOM0_CH0_SR0_type *) 0xf0108044u)	/* TOM0 Channel 1 CCU0 Compare Shadow Register */
#define GTM_TOM0_CH2_SR0	(*( GTM_TOM0_CH0_SR0_type *) 0xf0108084u)	/* TOM0 Channel 2 CCU0 Compare Shadow Register */
#define GTM_TOM0_CH3_SR0	(*( GTM_TOM0_CH0_SR0_type *) 0xf01080c4u)	/* TOM0 Channel 3 CCU0 Compare Shadow Register */
#define GTM_TOM0_CH4_SR0	(*( GTM_TOM0_CH0_SR0_type *) 0xf0108104u)	/* TOM0 Channel 4 CCU0 Compare Shadow Register */
#define GTM_TOM0_CH5_SR0	(*( GTM_TOM0_CH0_SR0_type *) 0xf0108144u)	/* TOM0 Channel 5 CCU0 Compare Shadow Register */
#define GTM_TOM0_CH6_SR0	(*( GTM_TOM0_CH0_SR0_type *) 0xf0108184u)	/* TOM0 Channel 6 CCU0 Compare Shadow Register */
#define GTM_TOM0_CH7_SR0	(*( GTM_TOM0_CH0_SR0_type *) 0xf01081c4u)	/* TOM0 Channel 7 CCU0 Compare Shadow Register */
#define GTM_TOM0_CH8_SR0	(*( GTM_TOM0_CH0_SR0_type *) 0xf0108204u)	/* TOM0 Channel 8 CCU0 Compare Shadow Register */
#define GTM_TOM0_CH9_SR0	(*( GTM_TOM0_CH0_SR0_type *) 0xf0108244u)	/* TOM0 Channel 9 CCU0 Compare Shadow Register */
#define GTM_TOM1_CH0_SR0	(*( GTM_TOM0_CH0_SR0_type *) 0xf0108804u)	/* TOM1 Channel 0 CCU0 Compare Shadow Register */
#define GTM_TOM1_CH10_SR0	(*( GTM_TOM0_CH0_SR0_type *) 0xf0108a84u)	/* TOM1 Channel 10 CCU0 Compare Shadow Register */
#define GTM_TOM1_CH11_SR0	(*( GTM_TOM0_CH0_SR0_type *) 0xf0108ac4u)	/* TOM1 Channel 11 CCU0 Compare Shadow Register */
#define GTM_TOM1_CH12_SR0	(*( GTM_TOM0_CH0_SR0_type *) 0xf0108b04u)	/* TOM1 Channel 12 CCU0 Compare Shadow Register */
#define GTM_TOM1_CH13_SR0	(*( GTM_TOM0_CH0_SR0_type *) 0xf0108b44u)	/* TOM1 Channel 13 CCU0 Compare Shadow Register */
#define GTM_TOM1_CH14_SR0	(*( GTM_TOM0_CH0_SR0_type *) 0xf0108b84u)	/* TOM1 Channel 14 CCU0 Compare Shadow Register */
#define GTM_TOM1_CH15_SR0	(*( GTM_TOM0_CH0_SR0_type *) 0xf0108bc4u)	/* TOM1 Channel 15 CCU0 Compare Shadow Register */
#define GTM_TOM1_CH1_SR0	(*( GTM_TOM0_CH0_SR0_type *) 0xf0108844u)	/* TOM1 Channel 1 CCU0 Compare Shadow Register */
#define GTM_TOM1_CH2_SR0	(*( GTM_TOM0_CH0_SR0_type *) 0xf0108884u)	/* TOM1 Channel 2 CCU0 Compare Shadow Register */
#define GTM_TOM1_CH3_SR0	(*( GTM_TOM0_CH0_SR0_type *) 0xf01088c4u)	/* TOM1 Channel 3 CCU0 Compare Shadow Register */
#define GTM_TOM1_CH4_SR0	(*( GTM_TOM0_CH0_SR0_type *) 0xf0108904u)	/* TOM1 Channel 4 CCU0 Compare Shadow Register */
#define GTM_TOM1_CH5_SR0	(*( GTM_TOM0_CH0_SR0_type *) 0xf0108944u)	/* TOM1 Channel 5 CCU0 Compare Shadow Register */
#define GTM_TOM1_CH6_SR0	(*( GTM_TOM0_CH0_SR0_type *) 0xf0108984u)	/* TOM1 Channel 6 CCU0 Compare Shadow Register */
#define GTM_TOM1_CH7_SR0	(*( GTM_TOM0_CH0_SR0_type *) 0xf01089c4u)	/* TOM1 Channel 7 CCU0 Compare Shadow Register */
#define GTM_TOM1_CH8_SR0	(*( GTM_TOM0_CH0_SR0_type *) 0xf0108a04u)	/* TOM1 Channel 8 CCU0 Compare Shadow Register */
#define GTM_TOM1_CH9_SR0	(*( GTM_TOM0_CH0_SR0_type *) 0xf0108a44u)	/* TOM1 Channel 9 CCU0 Compare Shadow Register */
#define GTM_TOM2_CH0_SR0	(*( GTM_TOM0_CH0_SR0_type *) 0xf0109004u)	/* TOM2 Channel 0 CCU0 Compare Shadow Register */
#define GTM_TOM2_CH10_SR0	(*( GTM_TOM0_CH0_SR0_type *) 0xf0109284u)	/* TOM2 Channel 10 CCU0 Compare Shadow Register */
#define GTM_TOM2_CH11_SR0	(*( GTM_TOM0_CH0_SR0_type *) 0xf01092c4u)	/* TOM2 Channel 11 CCU0 Compare Shadow Register */
#define GTM_TOM2_CH12_SR0	(*( GTM_TOM0_CH0_SR0_type *) 0xf0109304u)	/* TOM2 Channel 12 CCU0 Compare Shadow Register */
#define GTM_TOM2_CH13_SR0	(*( GTM_TOM0_CH0_SR0_type *) 0xf0109344u)	/* TOM2 Channel 13 CCU0 Compare Shadow Register */
#define GTM_TOM2_CH14_SR0	(*( GTM_TOM0_CH0_SR0_type *) 0xf0109384u)	/* TOM2 Channel 14 CCU0 Compare Shadow Register */
#define GTM_TOM2_CH15_SR0	(*( GTM_TOM0_CH0_SR0_type *) 0xf01093c4u)	/* TOM2 Channel 15 CCU0 Compare Shadow Register */
#define GTM_TOM2_CH1_SR0	(*( GTM_TOM0_CH0_SR0_type *) 0xf0109044u)	/* TOM2 Channel 1 CCU0 Compare Shadow Register */
#define GTM_TOM2_CH2_SR0	(*( GTM_TOM0_CH0_SR0_type *) 0xf0109084u)	/* TOM2 Channel 2 CCU0 Compare Shadow Register */
#define GTM_TOM2_CH3_SR0	(*( GTM_TOM0_CH0_SR0_type *) 0xf01090c4u)	/* TOM2 Channel 3 CCU0 Compare Shadow Register */
#define GTM_TOM2_CH4_SR0	(*( GTM_TOM0_CH0_SR0_type *) 0xf0109104u)	/* TOM2 Channel 4 CCU0 Compare Shadow Register */
#define GTM_TOM2_CH5_SR0	(*( GTM_TOM0_CH0_SR0_type *) 0xf0109144u)	/* TOM2 Channel 5 CCU0 Compare Shadow Register */
#define GTM_TOM2_CH6_SR0	(*( GTM_TOM0_CH0_SR0_type *) 0xf0109184u)	/* TOM2 Channel 6 CCU0 Compare Shadow Register */
#define GTM_TOM2_CH7_SR0	(*( GTM_TOM0_CH0_SR0_type *) 0xf01091c4u)	/* TOM2 Channel 7 CCU0 Compare Shadow Register */
#define GTM_TOM2_CH8_SR0	(*( GTM_TOM0_CH0_SR0_type *) 0xf0109204u)	/* TOM2 Channel 8 CCU0 Compare Shadow Register */
#define GTM_TOM2_CH9_SR0	(*( GTM_TOM0_CH0_SR0_type *) 0xf0109244u)	/* TOM2 Channel 9 CCU0 Compare Shadow Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 SR1            : 16;	/* TOM channel x shadow register SR1 for update of compare register CM1 */
		/* const */ unsigned __sfrbit32 Reserved       : 16;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GTM_TOM0_CH0_SR1_type;
#define GTM_TOM0_CH0_SR1	(*( GTM_TOM0_CH0_SR1_type *) 0xf0108008u)	/* TOM0 Channel 0 CCU1 Compare Shadow Register */
#define GTM_TOM0_CH10_SR1	(*( GTM_TOM0_CH0_SR1_type *) 0xf0108288u)	/* TOM0 Channel 10 CCU1 Compare Shadow Register */
#define GTM_TOM0_CH11_SR1	(*( GTM_TOM0_CH0_SR1_type *) 0xf01082c8u)	/* TOM0 Channel 11 CCU1 Compare Shadow Register */
#define GTM_TOM0_CH12_SR1	(*( GTM_TOM0_CH0_SR1_type *) 0xf0108308u)	/* TOM0 Channel 12 CCU1 Compare Shadow Register */
#define GTM_TOM0_CH13_SR1	(*( GTM_TOM0_CH0_SR1_type *) 0xf0108348u)	/* TOM0 Channel 13 CCU1 Compare Shadow Register */
#define GTM_TOM0_CH14_SR1	(*( GTM_TOM0_CH0_SR1_type *) 0xf0108388u)	/* TOM0 Channel 14 CCU1 Compare Shadow Register */
#define GTM_TOM0_CH15_SR1	(*( GTM_TOM0_CH0_SR1_type *) 0xf01083c8u)	/* TOM0 Channel 15 CCU1 Compare Shadow Register */
#define GTM_TOM0_CH1_SR1	(*( GTM_TOM0_CH0_SR1_type *) 0xf0108048u)	/* TOM0 Channel 1 CCU1 Compare Shadow Register */
#define GTM_TOM0_CH2_SR1	(*( GTM_TOM0_CH0_SR1_type *) 0xf0108088u)	/* TOM0 Channel 2 CCU1 Compare Shadow Register */
#define GTM_TOM0_CH3_SR1	(*( GTM_TOM0_CH0_SR1_type *) 0xf01080c8u)	/* TOM0 Channel 3 CCU1 Compare Shadow Register */
#define GTM_TOM0_CH4_SR1	(*( GTM_TOM0_CH0_SR1_type *) 0xf0108108u)	/* TOM0 Channel 4 CCU1 Compare Shadow Register */
#define GTM_TOM0_CH5_SR1	(*( GTM_TOM0_CH0_SR1_type *) 0xf0108148u)	/* TOM0 Channel 5 CCU1 Compare Shadow Register */
#define GTM_TOM0_CH6_SR1	(*( GTM_TOM0_CH0_SR1_type *) 0xf0108188u)	/* TOM0 Channel 6 CCU1 Compare Shadow Register */
#define GTM_TOM0_CH7_SR1	(*( GTM_TOM0_CH0_SR1_type *) 0xf01081c8u)	/* TOM0 Channel 7 CCU1 Compare Shadow Register */
#define GTM_TOM0_CH8_SR1	(*( GTM_TOM0_CH0_SR1_type *) 0xf0108208u)	/* TOM0 Channel 8 CCU1 Compare Shadow Register */
#define GTM_TOM0_CH9_SR1	(*( GTM_TOM0_CH0_SR1_type *) 0xf0108248u)	/* TOM0 Channel 9 CCU1 Compare Shadow Register */
#define GTM_TOM1_CH0_SR1	(*( GTM_TOM0_CH0_SR1_type *) 0xf0108808u)	/* TOM1 Channel 0 CCU1 Compare Shadow Register */
#define GTM_TOM1_CH10_SR1	(*( GTM_TOM0_CH0_SR1_type *) 0xf0108a88u)	/* TOM1 Channel 10 CCU1 Compare Shadow Register */
#define GTM_TOM1_CH11_SR1	(*( GTM_TOM0_CH0_SR1_type *) 0xf0108ac8u)	/* TOM1 Channel 11 CCU1 Compare Shadow Register */
#define GTM_TOM1_CH12_SR1	(*( GTM_TOM0_CH0_SR1_type *) 0xf0108b08u)	/* TOM1 Channel 12 CCU1 Compare Shadow Register */
#define GTM_TOM1_CH13_SR1	(*( GTM_TOM0_CH0_SR1_type *) 0xf0108b48u)	/* TOM1 Channel 13 CCU1 Compare Shadow Register */
#define GTM_TOM1_CH14_SR1	(*( GTM_TOM0_CH0_SR1_type *) 0xf0108b88u)	/* TOM1 Channel 14 CCU1 Compare Shadow Register */
#define GTM_TOM1_CH15_SR1	(*( GTM_TOM0_CH0_SR1_type *) 0xf0108bc8u)	/* TOM1 Channel 15 CCU1 Compare Shadow Register */
#define GTM_TOM1_CH1_SR1	(*( GTM_TOM0_CH0_SR1_type *) 0xf0108848u)	/* TOM1 Channel 1 CCU1 Compare Shadow Register */
#define GTM_TOM1_CH2_SR1	(*( GTM_TOM0_CH0_SR1_type *) 0xf0108888u)	/* TOM1 Channel 2 CCU1 Compare Shadow Register */
#define GTM_TOM1_CH3_SR1	(*( GTM_TOM0_CH0_SR1_type *) 0xf01088c8u)	/* TOM1 Channel 3 CCU1 Compare Shadow Register */
#define GTM_TOM1_CH4_SR1	(*( GTM_TOM0_CH0_SR1_type *) 0xf0108908u)	/* TOM1 Channel 4 CCU1 Compare Shadow Register */
#define GTM_TOM1_CH5_SR1	(*( GTM_TOM0_CH0_SR1_type *) 0xf0108948u)	/* TOM1 Channel 5 CCU1 Compare Shadow Register */
#define GTM_TOM1_CH6_SR1	(*( GTM_TOM0_CH0_SR1_type *) 0xf0108988u)	/* TOM1 Channel 6 CCU1 Compare Shadow Register */
#define GTM_TOM1_CH7_SR1	(*( GTM_TOM0_CH0_SR1_type *) 0xf01089c8u)	/* TOM1 Channel 7 CCU1 Compare Shadow Register */
#define GTM_TOM1_CH8_SR1	(*( GTM_TOM0_CH0_SR1_type *) 0xf0108a08u)	/* TOM1 Channel 8 CCU1 Compare Shadow Register */
#define GTM_TOM1_CH9_SR1	(*( GTM_TOM0_CH0_SR1_type *) 0xf0108a48u)	/* TOM1 Channel 9 CCU1 Compare Shadow Register */
#define GTM_TOM2_CH0_SR1	(*( GTM_TOM0_CH0_SR1_type *) 0xf0109008u)	/* TOM2 Channel 0 CCU1 Compare Shadow Register */
#define GTM_TOM2_CH10_SR1	(*( GTM_TOM0_CH0_SR1_type *) 0xf0109288u)	/* TOM2 Channel 10 CCU1 Compare Shadow Register */
#define GTM_TOM2_CH11_SR1	(*( GTM_TOM0_CH0_SR1_type *) 0xf01092c8u)	/* TOM2 Channel 11 CCU1 Compare Shadow Register */
#define GTM_TOM2_CH12_SR1	(*( GTM_TOM0_CH0_SR1_type *) 0xf0109308u)	/* TOM2 Channel 12 CCU1 Compare Shadow Register */
#define GTM_TOM2_CH13_SR1	(*( GTM_TOM0_CH0_SR1_type *) 0xf0109348u)	/* TOM2 Channel 13 CCU1 Compare Shadow Register */
#define GTM_TOM2_CH14_SR1	(*( GTM_TOM0_CH0_SR1_type *) 0xf0109388u)	/* TOM2 Channel 14 CCU1 Compare Shadow Register */
#define GTM_TOM2_CH15_SR1	(*( GTM_TOM0_CH0_SR1_type *) 0xf01093c8u)	/* TOM2 Channel 15 CCU1 Compare Shadow Register */
#define GTM_TOM2_CH1_SR1	(*( GTM_TOM0_CH0_SR1_type *) 0xf0109048u)	/* TOM2 Channel 1 CCU1 Compare Shadow Register */
#define GTM_TOM2_CH2_SR1	(*( GTM_TOM0_CH0_SR1_type *) 0xf0109088u)	/* TOM2 Channel 2 CCU1 Compare Shadow Register */
#define GTM_TOM2_CH3_SR1	(*( GTM_TOM0_CH0_SR1_type *) 0xf01090c8u)	/* TOM2 Channel 3 CCU1 Compare Shadow Register */
#define GTM_TOM2_CH4_SR1	(*( GTM_TOM0_CH0_SR1_type *) 0xf0109108u)	/* TOM2 Channel 4 CCU1 Compare Shadow Register */
#define GTM_TOM2_CH5_SR1	(*( GTM_TOM0_CH0_SR1_type *) 0xf0109148u)	/* TOM2 Channel 5 CCU1 Compare Shadow Register */
#define GTM_TOM2_CH6_SR1	(*( GTM_TOM0_CH0_SR1_type *) 0xf0109188u)	/* TOM2 Channel 6 CCU1 Compare Shadow Register */
#define GTM_TOM2_CH7_SR1	(*( GTM_TOM0_CH0_SR1_type *) 0xf01091c8u)	/* TOM2 Channel 7 CCU1 Compare Shadow Register */
#define GTM_TOM2_CH8_SR1	(*( GTM_TOM0_CH0_SR1_type *) 0xf0109208u)	/* TOM2 Channel 8 CCU1 Compare Shadow Register */
#define GTM_TOM2_CH9_SR1	(*( GTM_TOM0_CH0_SR1_type *) 0xf0109248u)	/* TOM2 Channel 9 CCU1 Compare Shadow Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned __sfrbit32 OL             : 1;	/* Output level of output TOM_OUT(x) */
		/* const */ unsigned __sfrbit32 Reserved       : 31;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GTM_TOM0_CH0_STAT_type;
#define GTM_TOM0_CH0_STAT	(*( GTM_TOM0_CH0_STAT_type *) 0xf0108018u)	/* TOM0 Channel Status Register */
#define GTM_TOM0_CH10_STAT	(*( GTM_TOM0_CH0_STAT_type *) 0xf0108298u)	/* TOM0 Channel Status Register */
#define GTM_TOM0_CH11_STAT	(*( GTM_TOM0_CH0_STAT_type *) 0xf01082d8u)	/* TOM0 Channel Status Register */
#define GTM_TOM0_CH12_STAT	(*( GTM_TOM0_CH0_STAT_type *) 0xf0108318u)	/* TOM0 Channel Status Register */
#define GTM_TOM0_CH13_STAT	(*( GTM_TOM0_CH0_STAT_type *) 0xf0108358u)	/* TOM0 Channel Status Register */
#define GTM_TOM0_CH14_STAT	(*( GTM_TOM0_CH0_STAT_type *) 0xf0108398u)	/* TOM0 Channel Status Register */
#define GTM_TOM0_CH15_STAT	(*( GTM_TOM0_CH0_STAT_type *) 0xf01083d8u)	/* TOM0 Channel Status Register */
#define GTM_TOM0_CH1_STAT	(*( GTM_TOM0_CH0_STAT_type *) 0xf0108058u)	/* TOM0 Channel Status Register */
#define GTM_TOM0_CH2_STAT	(*( GTM_TOM0_CH0_STAT_type *) 0xf0108098u)	/* TOM0 Channel Status Register */
#define GTM_TOM0_CH3_STAT	(*( GTM_TOM0_CH0_STAT_type *) 0xf01080d8u)	/* TOM0 Channel Status Register */
#define GTM_TOM0_CH4_STAT	(*( GTM_TOM0_CH0_STAT_type *) 0xf0108118u)	/* TOM0 Channel Status Register */
#define GTM_TOM0_CH5_STAT	(*( GTM_TOM0_CH0_STAT_type *) 0xf0108158u)	/* TOM0 Channel Status Register */
#define GTM_TOM0_CH6_STAT	(*( GTM_TOM0_CH0_STAT_type *) 0xf0108198u)	/* TOM0 Channel Status Register */
#define GTM_TOM0_CH7_STAT	(*( GTM_TOM0_CH0_STAT_type *) 0xf01081d8u)	/* TOM0 Channel Status Register */
#define GTM_TOM0_CH8_STAT	(*( GTM_TOM0_CH0_STAT_type *) 0xf0108218u)	/* TOM0 Channel Status Register */
#define GTM_TOM0_CH9_STAT	(*( GTM_TOM0_CH0_STAT_type *) 0xf0108258u)	/* TOM0 Channel Status Register */
#define GTM_TOM1_CH0_STAT	(*( GTM_TOM0_CH0_STAT_type *) 0xf0108818u)	/* TOM1 Channel Status Register */
#define GTM_TOM1_CH10_STAT	(*( GTM_TOM0_CH0_STAT_type *) 0xf0108a98u)	/* TOM1 Channel Status Register */
#define GTM_TOM1_CH11_STAT	(*( GTM_TOM0_CH0_STAT_type *) 0xf0108ad8u)	/* TOM1 Channel Status Register */
#define GTM_TOM1_CH12_STAT	(*( GTM_TOM0_CH0_STAT_type *) 0xf0108b18u)	/* TOM1 Channel Status Register */
#define GTM_TOM1_CH13_STAT	(*( GTM_TOM0_CH0_STAT_type *) 0xf0108b58u)	/* TOM1 Channel Status Register */
#define GTM_TOM1_CH14_STAT	(*( GTM_TOM0_CH0_STAT_type *) 0xf0108b98u)	/* TOM1 Channel Status Register */
#define GTM_TOM1_CH15_STAT	(*( GTM_TOM0_CH0_STAT_type *) 0xf0108bd8u)	/* TOM1 Channel Status Register */
#define GTM_TOM1_CH1_STAT	(*( GTM_TOM0_CH0_STAT_type *) 0xf0108858u)	/* TOM1 Channel Status Register */
#define GTM_TOM1_CH2_STAT	(*( GTM_TOM0_CH0_STAT_type *) 0xf0108898u)	/* TOM1 Channel Status Register */
#define GTM_TOM1_CH3_STAT	(*( GTM_TOM0_CH0_STAT_type *) 0xf01088d8u)	/* TOM1 Channel Status Register */
#define GTM_TOM1_CH4_STAT	(*( GTM_TOM0_CH0_STAT_type *) 0xf0108918u)	/* TOM1 Channel Status Register */
#define GTM_TOM1_CH5_STAT	(*( GTM_TOM0_CH0_STAT_type *) 0xf0108958u)	/* TOM1 Channel Status Register */
#define GTM_TOM1_CH6_STAT	(*( GTM_TOM0_CH0_STAT_type *) 0xf0108998u)	/* TOM1 Channel Status Register */
#define GTM_TOM1_CH7_STAT	(*( GTM_TOM0_CH0_STAT_type *) 0xf01089d8u)	/* TOM1 Channel Status Register */
#define GTM_TOM1_CH8_STAT	(*( GTM_TOM0_CH0_STAT_type *) 0xf0108a18u)	/* TOM1 Channel Status Register */
#define GTM_TOM1_CH9_STAT	(*( GTM_TOM0_CH0_STAT_type *) 0xf0108a58u)	/* TOM1 Channel Status Register */
#define GTM_TOM2_CH0_STAT	(*( GTM_TOM0_CH0_STAT_type *) 0xf0109018u)	/* TOM2 Channel Status Register */
#define GTM_TOM2_CH10_STAT	(*( GTM_TOM0_CH0_STAT_type *) 0xf0109298u)	/* TOM2 Channel Status Register */
#define GTM_TOM2_CH11_STAT	(*( GTM_TOM0_CH0_STAT_type *) 0xf01092d8u)	/* TOM2 Channel Status Register */
#define GTM_TOM2_CH12_STAT	(*( GTM_TOM0_CH0_STAT_type *) 0xf0109318u)	/* TOM2 Channel Status Register */
#define GTM_TOM2_CH13_STAT	(*( GTM_TOM0_CH0_STAT_type *) 0xf0109358u)	/* TOM2 Channel Status Register */
#define GTM_TOM2_CH14_STAT	(*( GTM_TOM0_CH0_STAT_type *) 0xf0109398u)	/* TOM2 Channel Status Register */
#define GTM_TOM2_CH15_STAT	(*( GTM_TOM0_CH0_STAT_type *) 0xf01093d8u)	/* TOM2 Channel Status Register */
#define GTM_TOM2_CH1_STAT	(*( GTM_TOM0_CH0_STAT_type *) 0xf0109058u)	/* TOM2 Channel Status Register */
#define GTM_TOM2_CH2_STAT	(*( GTM_TOM0_CH0_STAT_type *) 0xf0109098u)	/* TOM2 Channel Status Register */
#define GTM_TOM2_CH3_STAT	(*( GTM_TOM0_CH0_STAT_type *) 0xf01090d8u)	/* TOM2 Channel Status Register */
#define GTM_TOM2_CH4_STAT	(*( GTM_TOM0_CH0_STAT_type *) 0xf0109118u)	/* TOM2 Channel Status Register */
#define GTM_TOM2_CH5_STAT	(*( GTM_TOM0_CH0_STAT_type *) 0xf0109158u)	/* TOM2 Channel Status Register */
#define GTM_TOM2_CH6_STAT	(*( GTM_TOM0_CH0_STAT_type *) 0xf0109198u)	/* TOM2 Channel Status Register */
#define GTM_TOM2_CH7_STAT	(*( GTM_TOM0_CH0_STAT_type *) 0xf01091d8u)	/* TOM2 Channel Status Register */
#define GTM_TOM2_CH8_STAT	(*( GTM_TOM0_CH0_STAT_type *) 0xf0109218u)	/* TOM2 Channel Status Register */
#define GTM_TOM2_CH9_STAT	(*( GTM_TOM0_CH0_STAT_type *) 0xf0109258u)	/* TOM2 Channel Status Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned __sfrbit32 Reserved       : 11;	/* Reserved */
		unsigned __sfrbit32 SL             : 1;	/* Signal level for duty cycle */
		unsigned __sfrbit32 CLK_SRC_SR     : 3;	/* Clock source select for channel */
		/* const */ unsigned __sfrbit32 Reserved_4     : 5;	/* Reserved */
		unsigned __sfrbit32 RST_CCU0       : 1;	/* Reset source of CCU0 */
		/* const */ unsigned __sfrbit32 Reserved_6     : 3;	/* Reserved */
		unsigned __sfrbit32 TRIGOUT        : 1;	/* Trigger output selection (output signal TRIG_15) of module TOM_CH15 */
		/* const */ unsigned __sfrbit32 Reserved_8     : 1;	/* Reserved */
		unsigned __sfrbit32 OSM            : 1;	/* One-shot mode */
		unsigned __sfrbit32 BITREV         : 1;	/* Bit-reversing of output of counter register CN0 */
		/* const */ unsigned __sfrbit32 Reserved_11    : 4;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GTM_TOM0_CH15_CTRL_type;
#define GTM_TOM0_CH15_CTRL	(*( GTM_TOM0_CH15_CTRL_type *) 0xf01083c0u)	/* TOM0 Channel 15 Control Register */
#define GTM_TOM1_CH15_CTRL	(*( GTM_TOM0_CH15_CTRL_type *) 0xf0108bc0u)	/* TOM1 Channel 15 Control Register */
#define GTM_TOM2_CH15_CTRL	(*( GTM_TOM0_CH15_CTRL_type *) 0xf01093c0u)	/* TOM2 Channel 15 Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 HOST_TRIG      : 1;	/* Trigger request signal (see TGC0, TGC1) to update the register ENDIS_STAT and OUTEN_STAT */
		/* const */ unsigned __sfrbit32 Reserved       : 7;	/* Reserved */
		unsigned __sfrbit32 RST_CH0        : 1;	/* Software reset of channel 0 */
		unsigned __sfrbit32 RST_CH1        : 1;	/* Software reset of channel 1 */
		unsigned __sfrbit32 RST_CH2        : 1;	/* Software reset of channel 2 */
		unsigned __sfrbit32 RST_CH3        : 1;	/* Software reset of channel 3 */
		unsigned __sfrbit32 RST_CH4        : 1;	/* Software reset of channel 4 */
		unsigned __sfrbit32 RST_CH5        : 1;	/* Software reset of channel 5 */
		unsigned __sfrbit32 RST_CH6        : 1;	/* Software reset of channel 6 */
		unsigned __sfrbit32 RST_CH7        : 1;	/* Software reset of channel 7 */
		unsigned __sfrbit32 UPEN_CTRL0     : 2;	/* TOM channel 0 enable update of register CM0, CM1 and CLK_SRC from SR0, SR1 and CLK_SRC_SR */
		unsigned __sfrbit32 UPEN_CTRL1     : 2;	/* TOM channel 1 enable update of register CM0, CM1 and CLK_SRC */
		unsigned __sfrbit32 UPEN_CTRL2     : 2;	/* TOM channel 2 enable update of register CM0, CM1 and CLK_SRC */
		unsigned __sfrbit32 UPEN_CTRL3     : 2;	/* TOM channel 3 enable update of register CM0, CM1 and CLK_SRC */
		unsigned __sfrbit32 UPEN_CTRL4     : 2;	/* TOM channel 4 enable update of register CM0, CM1 and CLK_SRC */
		unsigned __sfrbit32 UPEN_CTRL5     : 2;	/* TOM channel 5 enable update of register CM0, CM1 and CLK_SRC */
		unsigned __sfrbit32 UPEN_CTRL6     : 2;	/* TOM channel 6 enable update of register CM0, CM1 and CLK_SRC */
		unsigned __sfrbit32 UPEN_CTRL7     : 2;	/* TOM channel 7 enable update of register CM0, CM1 and CLK_SRC */
	} B;
	int I;
	unsigned int U;

} GTM_TOM0_TGC0_GLB_CTRL_type;
#define GTM_TOM0_TGC0_GLB_CTRL	(*( GTM_TOM0_TGC0_GLB_CTRL_type *) 0xf0108030u)	/* TOM0 TGC0 Global Control Register */
#define GTM_TOM0_TGC1_GLB_CTRL	(*( GTM_TOM0_TGC0_GLB_CTRL_type *) 0xf0108230u)	/* TOM0 TGC1 Global Control Register */
#define GTM_TOM1_TGC0_GLB_CTRL	(*( GTM_TOM0_TGC0_GLB_CTRL_type *) 0xf0108830u)	/* TOM1 TGC0 Global Control Register */
#define GTM_TOM1_TGC1_GLB_CTRL	(*( GTM_TOM0_TGC0_GLB_CTRL_type *) 0xf0108a30u)	/* TOM1 TGC1 Global Control Register */
#define GTM_TOM2_TGC0_GLB_CTRL	(*( GTM_TOM0_TGC0_GLB_CTRL_type *) 0xf0109030u)	/* TOM2 TGC0 Global Control Register */
#define GTM_TOM2_TGC1_GLB_CTRL	(*( GTM_TOM0_TGC0_GLB_CTRL_type *) 0xf0109230u)	/* TOM2 TGC1 Global Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 SEL0           : 2;	/* TOUT(n*16+0) Output Selection */
		unsigned __sfrbit32 SEL1           : 2;	/* TOUT(n*16+1) Output Selection */
		unsigned __sfrbit32 SEL2           : 2;	/* TOUT(n*16+2) Output Selection */
		unsigned __sfrbit32 SEL3           : 2;	/* TOUT(n*16+3) Output Selection */
		unsigned __sfrbit32 SEL4           : 2;	/* TOUT(n*16+4) Output Selection */
		unsigned __sfrbit32 SEL5           : 2;	/* TOUT(n*16+5) Output Selection */
		unsigned __sfrbit32 SEL6           : 2;	/* TOUT(n*16+6) Output Selection */
		unsigned __sfrbit32 SEL7           : 2;	/* TOUT(n*16+7) Output Selection */
		unsigned __sfrbit32 SEL8           : 2;	/* TOUT(n*16+8) Output Selection */
		unsigned __sfrbit32 SEL9           : 2;	/* TOUT(n*16+9) Output Selection */
		unsigned __sfrbit32 SEL10          : 2;	/* TOUT(n*16+10) Output Selection */
		unsigned __sfrbit32 SEL11          : 2;	/* TOUT(n*16+11) Output Selection */
		unsigned __sfrbit32 SEL12          : 2;	/* TOUT(n*16+12) Output Selection */
		unsigned __sfrbit32 SEL13          : 2;	/* TOUT(n*16+13) Output Selection */
		unsigned __sfrbit32 SEL14          : 2;	/* TOUT(n*16+14) Output Selection */
		unsigned __sfrbit32 SEL15          : 2;	/* TOUT(n*16+15) Output Selection */
	} B;
	int I;
	unsigned int U;

} GTM_TOUTSEL0_type;
#define GTM_TOUTSEL0	(*( GTM_TOUTSEL0_type *) 0xf019fd30u)	/* Timer Output Select Register */
#define GTM_TOUTSEL1	(*( GTM_TOUTSEL0_type *) 0xf019fd34u)	/* Timer Output Select Register */
#define GTM_TOUTSEL10	(*( GTM_TOUTSEL0_type *) 0xf019fd58u)	/* Timer Output Select Register */
#define GTM_TOUTSEL11	(*( GTM_TOUTSEL0_type *) 0xf019fd5cu)	/* Timer Output Select Register */
#define GTM_TOUTSEL12	(*( GTM_TOUTSEL0_type *) 0xf019fd60u)	/* Timer Output Select Register */
#define GTM_TOUTSEL13	(*( GTM_TOUTSEL0_type *) 0xf019fd64u)	/* Timer Output Select Register */
#define GTM_TOUTSEL14	(*( GTM_TOUTSEL0_type *) 0xf019fd68u)	/* Timer Output Select Register */
#define GTM_TOUTSEL2	(*( GTM_TOUTSEL0_type *) 0xf019fd38u)	/* Timer Output Select Register */
#define GTM_TOUTSEL3	(*( GTM_TOUTSEL0_type *) 0xf019fd3cu)	/* Timer Output Select Register */
#define GTM_TOUTSEL4	(*( GTM_TOUTSEL0_type *) 0xf019fd40u)	/* Timer Output Select Register */
#define GTM_TOUTSEL5	(*( GTM_TOUTSEL0_type *) 0xf019fd44u)	/* Timer Output Select Register */
#define GTM_TOUTSEL6	(*( GTM_TOUTSEL0_type *) 0xf019fd48u)	/* Timer Output Select Register */
#define GTM_TOUTSEL7	(*( GTM_TOUTSEL0_type *) 0xf019fd4cu)	/* Timer Output Select Register */
#define GTM_TOUTSEL8	(*( GTM_TOUTSEL0_type *) 0xf019fd50u)	/* Timer Output Select Register */
#define GTM_TOUTSEL9	(*( GTM_TOUTSEL0_type *) 0xf019fd54u)	/* Timer Output Select Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 INT0           : 2;	/* Interrupt Trigger Request 0 */
		unsigned __sfrbit32 INT1           : 2;	/* Interrupt Trigger Request 1 */
		unsigned __sfrbit32 TRIG0          : 2;	/* Trigger 0 */
		unsigned __sfrbit32 TRIG1          : 2;	/* Trigger 1 */
		unsigned __sfrbit32 TRIG2          : 2;	/* Trigger 2 */
		unsigned __sfrbit32 TRIG3          : 2;	/* Trigger 3 */
		unsigned __sfrbit32 TRIG4          : 2;	/* Trigger 4 */
		unsigned __sfrbit32 TRIG5          : 2;	/* Trigger 5 */
		unsigned __sfrbit32                : 16;
	} B;
	int I;
	unsigned int U;

} GTM_TRIGOUT00_type;
#define GTM_TRIGOUT00	(*( GTM_TRIGOUT00_type *) 0xf019fe04u)	/* Trigger Output 0 Register 0 */
#define GTM_TRIGOUT01	(*( GTM_TRIGOUT00_type *) 0xf019fe08u)	/* Trigger Output 0 Register 1 */
#define GTM_TRIGOUT02	(*( GTM_TRIGOUT00_type *) 0xf019fe0cu)	/* Trigger Output 0 Register 2 */
#define GTM_TRIGOUT03	(*( GTM_TRIGOUT00_type *) 0xf019fe10u)	/* Trigger Output 0 Register 3 */
#define GTM_TRIGOUT10	(*( GTM_TRIGOUT00_type *) 0xf019fe44u)	/* Trigger Output 0 Register 0 */
#define GTM_TRIGOUT11	(*( GTM_TRIGOUT00_type *) 0xf019fe48u)	/* Trigger Output 0 Register 1 */
#define GTM_TRIGOUT12	(*( GTM_TRIGOUT00_type *) 0xf019fe4cu)	/* Trigger Output 0 Register 2 */
#define GTM_TRIGOUT13	(*( GTM_TRIGOUT00_type *) 0xf019fe50u)	/* Trigger Output 0 Register 3 */


/* CCU6 */
typedef volatile union
{
	struct
	{ 
		unsigned int EN0            : 1;	/* Access Enable for Master TAG ID 0 */
		unsigned int EN1            : 1;	/* Access Enable for Master TAG ID 1 */
		unsigned int EN2            : 1;	/* Access Enable for Master TAG ID 2 */
		unsigned int EN3            : 1;	/* Access Enable for Master TAG ID 3 */
		unsigned int EN4            : 1;	/* Access Enable for Master TAG ID 4 */
		unsigned int EN5            : 1;	/* Access Enable for Master TAG ID 5 */
		unsigned int EN6            : 1;	/* Access Enable for Master TAG ID 6 */
		unsigned int EN7            : 1;	/* Access Enable for Master TAG ID 7 */
		unsigned int EN8            : 1;	/* Access Enable for Master TAG ID 8 */
		unsigned int EN9            : 1;	/* Access Enable for Master TAG ID 9 */
		unsigned int EN10           : 1;	/* Access Enable for Master TAG ID 10 */
		unsigned int EN11           : 1;	/* Access Enable for Master TAG ID 11 */
		unsigned int EN12           : 1;	/* Access Enable for Master TAG ID 12 */
		unsigned int EN13           : 1;	/* Access Enable for Master TAG ID 13 */
		unsigned int EN14           : 1;	/* Access Enable for Master TAG ID 14 */
		unsigned int EN15           : 1;	/* Access Enable for Master TAG ID 15 */
		unsigned int EN16           : 1;	/* Access Enable for Master TAG ID 16 */
		unsigned int EN17           : 1;	/* Access Enable for Master TAG ID 17 */
		unsigned int EN18           : 1;	/* Access Enable for Master TAG ID 18 */
		unsigned int EN19           : 1;	/* Access Enable for Master TAG ID 19 */
		unsigned int EN20           : 1;	/* Access Enable for Master TAG ID 20 */
		unsigned int EN21           : 1;	/* Access Enable for Master TAG ID 21 */
		unsigned int EN22           : 1;	/* Access Enable for Master TAG ID 22 */
		unsigned int EN23           : 1;	/* Access Enable for Master TAG ID 23 */
		unsigned int EN24           : 1;	/* Access Enable for Master TAG ID 24 */
		unsigned int EN25           : 1;	/* Access Enable for Master TAG ID 25 */
		unsigned int EN26           : 1;	/* Access Enable for Master TAG ID 26 */
		unsigned int EN27           : 1;	/* Access Enable for Master TAG ID 27 */
		unsigned int EN28           : 1;	/* Access Enable for Master TAG ID 28 */
		unsigned int EN29           : 1;	/* Access Enable for Master TAG ID 29 */
		unsigned int EN30           : 1;	/* Access Enable for Master TAG ID 30 */
		unsigned int EN31           : 1;	/* Access Enable for Master TAG ID 31 */
	} B;
	int I;
	unsigned int U;

} CCU60_ACCEN0_type;
#define CCU60_ACCEN0	(*( CCU60_ACCEN0_type *) 0xf0002afcu)	/* Access Enable Register 0 */
#define CCU61_ACCEN0	(*( CCU60_ACCEN0_type *) 0xf0002bfcu)	/* Access Enable Register 0 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int Reserved       : 32;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} CCU60_ACCEN1_type;
#define CCU60_ACCEN1	(*( CCU60_ACCEN1_type *) 0xf0002af8u)	/* Access Enable Register 1 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int CCV            : 16;	/* Capture/Compare Value */
		/* const */ unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} CCU60_CC60R_type;
#define CCU60_CC60R	(*( CCU60_CC60R_type *) 0xf0002a30u)	/* Capture/Compare Register for Channel CC60 */
#define CCU60_CC61R	(*( CCU60_CC60R_type *) 0xf0002a34u)	/* Capture/Compare Register for Channel CC61 */
#define CCU60_CC62R	(*( CCU60_CC60R_type *) 0xf0002a38u)	/* Capture/Compare Register for Channel CC62 */
#define CCU61_CC60R	(*( CCU60_CC60R_type *) 0xf0002b30u)	/* Capture/Compare Register for Channel CC60 */
#define CCU61_CC61R	(*( CCU60_CC60R_type *) 0xf0002b34u)	/* Capture/Compare Register for Channel CC61 */
#define CCU61_CC62R	(*( CCU60_CC60R_type *) 0xf0002b38u)	/* Capture/Compare Register for Channel CC62 */

typedef volatile union
{
	struct
	{ 
		unsigned int CCS            : 16;	/* Shadow Register for Channel x Capture/Compare Value */
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} CCU60_CC60SR_type;
#define CCU60_CC60SR	(*( CCU60_CC60SR_type *) 0xf0002a40u)	/* Capture/Compare Shadow Reg. for Channel CC60 */
#define CCU60_CC61SR	(*( CCU60_CC60SR_type *) 0xf0002a44u)	/* Capture/Compare Shadow Reg. for Channel CC61 */
#define CCU60_CC62SR	(*( CCU60_CC60SR_type *) 0xf0002a48u)	/* Capture/Compare Shadow Reg. for Channel CC62 */
#define CCU61_CC60SR	(*( CCU60_CC60SR_type *) 0xf0002b40u)	/* Capture/Compare Shadow Reg. for Channel CC60 */
#define CCU61_CC61SR	(*( CCU60_CC60SR_type *) 0xf0002b44u)	/* Capture/Compare Shadow Reg. for Channel CC61 */
#define CCU61_CC62SR	(*( CCU60_CC60SR_type *) 0xf0002b48u)	/* Capture/Compare Shadow Reg. for Channel CC62 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int CCV            : 16;	/* Channel CC63 Compare Value */
		/* const */ unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} CCU60_CC63R_type;
#define CCU60_CC63R	(*( CCU60_CC63R_type *) 0xf0002a58u)	/* Compare Register for T13 */
#define CCU61_CC63R	(*( CCU60_CC63R_type *) 0xf0002b58u)	/* Compare Register for T13 */

typedef volatile union
{
	struct
	{ 
		unsigned int CCS            : 16;	/* Shadow Register for Channel CC63 Compare Value */
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} CCU60_CC63SR_type;
#define CCU60_CC63SR	(*( CCU60_CC63SR_type *) 0xf0002a5cu)	/* Compare Shadow Register for T13 */
#define CCU61_CC63SR	(*( CCU60_CC63SR_type *) 0xf0002b5cu)	/* Compare Shadow Register for T13 */

typedef volatile union
{
	struct
	{ 
		unsigned int DISR           : 1;	/* Module Disable Request Bit */
		/* const */ unsigned int DISS           : 1;	/* Module Disable Status Bit */
		unsigned int                : 1;
		unsigned int EDIS           : 1;	/* Sleep Mode Enable Control */
		unsigned int                : 28;
	} B;
	int I;
	unsigned int U;

} CCU60_CLC_type;
#define CCU60_CLC	(*( CCU60_CLC_type *) 0xf0002a00u)	/* Clock Control Register */
#define CCU61_CLC	(*( CCU60_CLC_type *) 0xf0002b00u)	/* Clock Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int MCC60S         : 1;	/* Capture/Compare Status Modification Bits */
		unsigned int MCC61S         : 1;	/* Capture/Compare Status Modification Bits */
		unsigned int MCC62S         : 1;	/* Capture/Compare Status Modification Bits */
		unsigned int                : 3;
		unsigned int MCC63S         : 1;	/* Capture/Compare Status Modification Bits */
		unsigned int                : 1;
		unsigned int MCC60R         : 1;	/* Capture/Compare Status Modification Bits */
		unsigned int MCC61R         : 1;	/* Capture/Compare Status Modification Bits */
		unsigned int MCC62R         : 1;	/* Capture/Compare Status Modification Bits */
		unsigned int                : 3;
		unsigned int MCC63R         : 1;	/* Capture/Compare Status Modification Bits */
		unsigned int                : 17;
	} B;
	int I;
	unsigned int U;

} CCU60_CMPMODIF_type;
#define CCU60_CMPMODIF	(*( CCU60_CMPMODIF_type *) 0xf0002a64u)	/* Compare State Modification Register */
#define CCU61_CMPMODIF	(*( CCU60_CMPMODIF_type *) 0xf0002b64u)	/* Compare State Modification Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int CC60ST         : 1;	/* Capture/Compare State Bits */
		/* const */ unsigned int CC61ST         : 1;	/* Capture/Compare State Bits */
		/* const */ unsigned int CC62ST         : 1;	/* Capture/Compare State Bits */
		/* const */ unsigned int CCPOS60        : 1;	/* Sampled Hall Pattern Bits */
		/* const */ unsigned int CCPOS61        : 1;	/* Sampled Hall Pattern Bits */
		/* const */ unsigned int CCPOS62        : 1;	/* Sampled Hall Pattern Bits */
		/* const */ unsigned int CC63ST         : 1;	/* Capture/Compare State Bits */
		unsigned int                : 1;
		unsigned int CC60PS         : 1;	/* Passive State Select for Compare Outputs */
		unsigned int COUT60PS       : 1;	/* Passive State Select for Compare Outputs */
		unsigned int CC61PS         : 1;	/* Passive State Select for Compare Outputs */
		unsigned int COUT61PS       : 1;	/* Passive State Select for Compare Outputs */
		unsigned int CC62PS         : 1;	/* Passive State Select for Compare Outputs */
		unsigned int COUT62PS       : 1;	/* Passive State Select for Compare Outputs */
		unsigned int COUT63PS       : 1;	/* Passive State Select for Compare Outputs */
		unsigned int T13IM          : 1;	/* T13 Inverted Modulation */
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} CCU60_CMPSTAT_type;
#define CCU60_CMPSTAT	(*( CCU60_CMPSTAT_type *) 0xf0002a60u)	/* Compare State Register */
#define CCU61_CMPSTAT	(*( CCU60_CMPSTAT_type *) 0xf0002b60u)	/* Compare State Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int MODREV         : 8;	/* Module Revision Number */
		/* const */ unsigned int MODNUM         : 8;	/* Module Number Value */
		/* const */ unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} CCU60_ID_type;
#define CCU60_ID	(*( CCU60_ID_type *) 0xf0002a08u)	/* Module Identification Register */
#define CCU61_ID	(*( CCU60_ID_type *) 0xf0002b08u)	/* Module Identification Register */

typedef volatile union
{
	struct
	{ 
		unsigned int ENCC60R        : 1;	/* Capture, Compare-Match Rising Edge Interrupt Enable for Channel CC6x */
		unsigned int ENCC60F        : 1;	/* Capture, Compare-Match Falling Edge Interrupt Enable for Channel CC6x */
		unsigned int ENCC61R        : 1;	/* Capture, Compare-Match Rising Edge Interrupt Enable for Channel CC6x */
		unsigned int ENCC61F        : 1;	/* Capture, Compare-Match Falling Edge Interrupt Enable for Channel CC6x */
		unsigned int ENCC62R        : 1;	/* Capture, Compare-Match Rising Edge Interrupt Enable for Channel CC6x */
		unsigned int ENCC62F        : 1;	/* Capture, Compare-Match Falling Edge Interrupt Enable for Channel CC6x */
		unsigned int ENT12OM        : 1;	/* Enable Interrupt for T12 One-Match */
		unsigned int ENT12PM        : 1;	/* Enable Interrupt for T12 Period-Match */
		unsigned int ENT13CM        : 1;	/* Enable Interrupt for T13 Compare-Match */
		unsigned int ENT13PM        : 1;	/* Enable Interrupt for T13 Period-Match */
		unsigned int ENTRPF         : 1;	/* Enable Interrupt for Trap Flag */
		unsigned int                : 1;
		unsigned int ENCHE          : 1;	/* Enable Interrupt for Correct Hall Event */
		unsigned int ENWHE          : 1;	/* Enable Interrupt for Wrong Hall Event */
		unsigned int ENIDLE         : 1;	/* Enable Idle */
		unsigned int ENSTR          : 1;	/* Enable Multi-Channel Mode Shadow Transfer Interrupt */
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} CCU60_IEN_type;
#define CCU60_IEN	(*( CCU60_IEN_type *) 0xf0002ab0u)	/* Interrupt Enable Register */
#define CCU61_IEN	(*( CCU60_IEN_type *) 0xf0002bb0u)	/* Interrupt Enable Register */

typedef volatile union
{
	struct
	{ 
		unsigned int LBE            : 1;	/* Lost Bit Event */
		unsigned int CCPOS0I        : 1;	/* Event indication for input signal CCPOS0 */
		unsigned int CCPOS1I        : 1;	/* Event indication for input signal CCPOS1 */
		unsigned int CCPOS2I        : 1;	/* Event indication for input signal CCPOS2 */
		unsigned int CC60INI        : 1;	/* Event indication for input signal CC60IN */
		unsigned int CC61INI        : 1;	/* Event indication for input signal CC61IN */
		unsigned int CC62INI        : 1;	/* Event indication for input signal CC62IN */
		unsigned int CTRAPI         : 1;	/* Event indication for input signal CTRAP */
		unsigned int T12HRI         : 1;	/* Event indication for input signal T12HR */
		unsigned int T13HRI         : 1;	/* Event indication for input signal T13HR */
		unsigned int                : 22;
	} B;
	int I;
	unsigned int U;

} CCU60_IMON_type;
#define CCU60_IMON	(*( CCU60_IMON_type *) 0xf0002a98u)	/* Input Monitoring Register */
#define CCU61_IMON	(*( CCU60_IMON_type *) 0xf0002b98u)	/* Input Monitoring Register */

typedef volatile union
{
	struct
	{ 
		unsigned int INPCC60        : 2;	/* Interrupt Node Pointer for Channel CC6x Interrupts */
		unsigned int INPCC61        : 2;	/* Interrupt Node Pointer for Channel CC6x Interrupts */
		unsigned int INPCC62        : 2;	/* Interrupt Node Pointer for Channel CC6x Interrupts */
		unsigned int INPCHE         : 2;	/* Interrupt Node Pointer for the CHE Interrupt */
		unsigned int INPERR         : 2;	/* Interrupt Node Pointer for Error Interrupts */
		unsigned int INPT12         : 2;	/* Interrupt Node Pointer for Timer12 Interrupts */
		unsigned int INPT13         : 2;	/* Interrupt Node Pointer for Timer13 Interrupt */
		unsigned int                : 18;
	} B;
	int I;
	unsigned int U;

} CCU60_INP_type;
#define CCU60_INP	(*( CCU60_INP_type *) 0xf0002aacu)	/* Interrupt Node Pointer Register */
#define CCU61_INP	(*( CCU60_INP_type *) 0xf0002bacu)	/* Interrupt Node Pointer Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int ICC60R         : 1;	/* Capture, Compare-Match Rising Edge Flag */
		/* const */ unsigned int ICC60F         : 1;	/* Capture, Compare-Match Falling Edge Flag */
		/* const */ unsigned int ICC61R         : 1;	/* Capture, Compare-Match Rising Edge Flag */
		/* const */ unsigned int ICC61F         : 1;	/* Capture, Compare-Match Falling Edge Flag */
		/* const */ unsigned int ICC62R         : 1;	/* Capture, Compare-Match Rising Edge Flag */
		/* const */ unsigned int ICC62F         : 1;	/* Capture, Compare-Match Falling Edge Flag */
		/* const */ unsigned int T12OM          : 1;	/* Timer T12 One-Match Flag */
		/* const */ unsigned int T12PM          : 1;	/* Timer T12 Period-Match Flag */
		/* const */ unsigned int T13CM          : 1;	/* Timer T13 Compare-Match Flag */
		/* const */ unsigned int T13PM          : 1;	/* Timer T13 Period-Match Flag */
		/* const */ unsigned int TRPF           : 1;	/* Trap Flag */
		/* const */ unsigned int TRPS           : 1;	/* Trap State */
		/* const */ unsigned int CHE            : 1;	/* Correct Hall Event */
		/* const */ unsigned int WHE            : 1;	/* Wrong Hall Event */
		/* const */ unsigned int IDLE           : 1;	/* IDLE State */
		/* const */ unsigned int STR            : 1;	/* Multi-Channel Mode Shadow Transfer Request */
		/* const */ unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} CCU60_IS_type;
#define CCU60_IS	(*( CCU60_IS_type *) 0xf0002aa0u)	/* Interrupt Status Register */
#define CCU61_IS	(*( CCU60_IS_type *) 0xf0002ba0u)	/* Interrupt Status Register */

typedef volatile union
{
	struct
	{ 
		unsigned int RCC60R         : 1;	/* Reset Capture, Compare-Match Rising Edge Flag */
		unsigned int RCC60F         : 1;	/* Reset Capture, Compare-Match Falling Edge Flag */
		unsigned int RCC61R         : 1;	/* Reset Capture, Compare-Match Rising Edge Flag */
		unsigned int RCC61F         : 1;	/* Reset Capture, Compare-Match Falling Edge Flag */
		unsigned int RCC62R         : 1;	/* Reset Capture, Compare-Match Rising Edge Flag */
		unsigned int RCC62F         : 1;	/* Reset Capture, Compare-Match Falling Edge Flag */
		unsigned int RT12OM         : 1;	/* Reset Timer T12 One-Match Flag */
		unsigned int RT12PM         : 1;	/* Reset Timer T12 Period-Match Flag */
		unsigned int RT13CM         : 1;	/* Reset Timer T13 Compare-Match Flag */
		unsigned int RT13PM         : 1;	/* Reset Timer T13 Period-Match Flag */
		unsigned int RTRPF          : 1;	/* Reset Trap Flag */
		unsigned int                : 1;
		unsigned int RCHE           : 1;	/* Reset Correct Hall Event Flag */
		unsigned int RWHE           : 1;	/* Reset Wrong Hall Event Flag */
		unsigned int RIDLE          : 1;	/* Reset IDLE Flag */
		unsigned int RSTR           : 1;	/* Reset STR Flag */
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} CCU60_ISR_type;
#define CCU60_ISR	(*( CCU60_ISR_type *) 0xf0002aa8u)	/* Interrupt Status Reset Register */
#define CCU61_ISR	(*( CCU60_ISR_type *) 0xf0002ba8u)	/* Interrupt Status Reset Register */

typedef volatile union
{
	struct
	{ 
		unsigned int SCC60R         : 1;	/* Set Capture, Compare-Match Rising Edge Flag */
		unsigned int SCC60F         : 1;	/* Set Capture, Compare-Match Falling Edge Flag */
		unsigned int SCC61R         : 1;	/* Set Capture, Compare-Match Rising Edge Flag */
		unsigned int SCC61F         : 1;	/* Set Capture, Compare-Match Falling Edge Flag */
		unsigned int SCC62R         : 1;	/* Set Capture, Compare-Match Rising Edge Flag */
		unsigned int SCC62F         : 1;	/* Set Capture, Compare-Match Falling Edge Flag */
		unsigned int ST12OM         : 1;	/* Set Timer T12 One-Match Flag */
		unsigned int ST12PM         : 1;	/* Set Timer T12 Period-Match Flag */
		unsigned int ST13CM         : 1;	/* Set Timer T13 Compare-Match Flag */
		unsigned int ST13PM         : 1;	/* Set Timer T13 Period-Match Flag */
		unsigned int STRPF          : 1;	/* Set Trap Flag */
		unsigned int SWHC           : 1;	/* Software Hall Compare */
		unsigned int SCHE           : 1;	/* Set Correct Hall Event Flag */
		unsigned int SWHE           : 1;	/* Set Wrong Hall Event Flag */
		unsigned int SIDLE          : 1;	/* Set IDLE Flag */
		unsigned int SSTR           : 1;	/* Set STR Flag */
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} CCU60_ISS_type;
#define CCU60_ISS	(*( CCU60_ISS_type *) 0xf0002aa4u)	/* Interrupt Status Set Register */
#define CCU61_ISS	(*( CCU60_ISS_type *) 0xf0002ba4u)	/* Interrupt Status Set Register */

typedef volatile union
{
	struct
	{ 
		unsigned int RST            : 1;	/* Kernel Reset */
		/* const */ unsigned int RSTSTAT        : 1;	/* Kernel Reset Status */
		unsigned int                : 30;
	} B;
	int I;
	unsigned int U;

} CCU60_KRST0_type;
#define CCU60_KRST0	(*( CCU60_KRST0_type *) 0xf0002af4u)	/* Kernel Reset Register 0 */
#define CCU61_KRST0	(*( CCU60_KRST0_type *) 0xf0002bf4u)	/* Kernel Reset Register 0 */

typedef volatile union
{
	struct
	{ 
		unsigned int RST            : 1;	/* Kernel Reset */
		unsigned int                : 31;
	} B;
	int I;
	unsigned int U;

} CCU60_KRST1_type;
#define CCU60_KRST1	(*( CCU60_KRST1_type *) 0xf0002af0u)	/* Kernel Reset Register 1 */
#define CCU61_KRST1	(*( CCU60_KRST1_type *) 0xf0002bf0u)	/* Kernel Reset Register 1 */

typedef volatile union
{
	struct
	{ 
		unsigned int CLR            : 1;	/* Kernel Reset Status Clear */
		unsigned int                : 31;
	} B;
	int I;
	unsigned int U;

} CCU60_KRSTCLR_type;
#define CCU60_KRSTCLR	(*( CCU60_KRSTCLR_type *) 0xf0002aecu)	/* Kernel Reset Status Clear Register */
#define CCU61_KRSTCLR	(*( CCU60_KRSTCLR_type *) 0xf0002becu)	/* Kernel Reset Status Clear Register */

typedef volatile union
{
	struct
	{ 
		unsigned int SB0            : 1;	/* Sensitivity Block x */
		unsigned int SB1            : 1;	/* Sensitivity Block x */
		unsigned int SB2            : 1;	/* Sensitivity Block x */
		unsigned int SB3            : 1;	/* Sensitivity Block x */
		unsigned int                : 28;
	} B;
	int I;
	unsigned int U;

} CCU60_KSCSR_type;
#define CCU60_KSCSR	(*( CCU60_KSCSR_type *) 0xf0002a1cu)	/* Kernel State Control Sensitivity Register */
#define CCU61_KSCSR	(*( CCU60_KSCSR_type *) 0xf0002b1cu)	/* Kernel State Control Sensitivity Register */

typedef volatile union
{
	struct
	{ 
		unsigned int                : 1;
		unsigned int CCPOS0EN       : 1;	/* Lost Indicator Enable for input signal CCPOS0 */
		unsigned int CCPOS1EN       : 1;	/* Lost Indicator Enable for input signal CCPOS1 */
		unsigned int CCPOS2EN       : 1;	/* Lost Indicator Enable for input signal CCPOS2 */
		unsigned int CC60INEN       : 1;	/* Lost Indicator Enable for input signal CC60IN */
		unsigned int CC61INEN       : 1;	/* Lost Indicator Enable for input signal CC61IN */
		unsigned int CC62INEN       : 1;	/* Lost Indicator Enable for input signal CC62IN */
		unsigned int CTRAPEN        : 1;	/* Lost Indicator Enable for input signal CTRAP */
		unsigned int T12HREN        : 1;	/* Lost Indicator Enable for input signal T12HR */
		unsigned int T13HREN        : 1;	/* Lost Indicator Enable for input signal T13HR */
		unsigned int                : 3;
		unsigned int LBEEN          : 1;	/* Interrupt Enable for Lost Bit Event */
		unsigned int INPLBE         : 2;	/* Interrupt Node Pointer for lost bit event */
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} CCU60_LI_type;
#define CCU60_LI	(*( CCU60_LI_type *) 0xf0002a9cu)	/* Lost Indicator Register */
#define CCU61_LI	(*( CCU60_LI_type *) 0xf0002b9cu)	/* Lost Indicator Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int T12            : 1;	/* T12 Available */
		/* const */ unsigned int T13            : 1;	/* T13 Available */
		/* const */ unsigned int MCM            : 1;	/* Multi-Channel Mode Available */
		/* const */ unsigned int                : 29;
	} B;
	int I;
	unsigned int U;

} CCU60_MCFG_type;
#define CCU60_MCFG	(*( CCU60_MCFG_type *) 0xf0002a04u)	/* Module Configuration Register */
#define CCU61_MCFG	(*( CCU60_MCFG_type *) 0xf0002b04u)	/* Module Configuration Register */

typedef volatile union
{
	struct
	{ 
		unsigned int SWSEL          : 3;	/* Switching Selection */
		unsigned int                : 1;
		unsigned int SWSYN          : 2;	/* Switching Synchronization */
		unsigned int                : 2;
		unsigned int STE12U         : 1;	/* Shadow Transfer Enable for T12 Upcounting */
		unsigned int STE12D         : 1;	/* Shadow Transfer Enable for T12 Downcounting */
		unsigned int STE13U         : 1;	/* Shadow Transfer Enable for T13 Upcounting */
		unsigned int                : 21;
	} B;
	int I;
	unsigned int U;

} CCU60_MCMCTR_type;
#define CCU60_MCMCTR	(*( CCU60_MCMCTR_type *) 0xf0002a94u)	/* Multi-Channel Mode Control Register */
#define CCU61_MCMCTR	(*( CCU60_MCMCTR_type *) 0xf0002b94u)	/* Multi-Channel Mode Control Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int MCMP           : 6;	/* Multi-Channel PWM Pattern */
		/* const */ unsigned int R              : 1;	/* Reminder Flag */
		/* const */ unsigned int                : 1;
		/* const */ unsigned int EXPH           : 3;	/* Expected Hall Pattern */
		/* const */ unsigned int CURH           : 3;	/* Current Hall Pattern */
		/* const */ unsigned int                : 18;
	} B;
	int I;
	unsigned int U;

} CCU60_MCMOUT_type;
#define CCU60_MCMOUT	(*( CCU60_MCMOUT_type *) 0xf0002a90u)	/* Multi-Channel Mode Output Register */
#define CCU61_MCMOUT	(*( CCU60_MCMOUT_type *) 0xf0002b90u)	/* Multi-Channel Mode Output Register */

typedef volatile union
{
	struct
	{ 
		unsigned int MCMPS          : 6;	/* Multi-Channel PWM Pattern Shadow */
		unsigned int                : 1;
		unsigned int STRMCM         : 1;	/* Shadow Transfer Request for MCMPS */
		unsigned int EXPHS          : 3;	/* Expected Hall Pattern Shadow */
		unsigned int CURHS          : 3;	/* Current Hall Pattern Shadow */
		unsigned int                : 1;
		unsigned int STRHP          : 1;	/* Shadow Transfer Request for the Hall Pattern */
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} CCU60_MCMOUTS_type;
#define CCU60_MCMOUTS	(*( CCU60_MCMOUTS_type *) 0xf0002a8cu)	/* Multi-Channel Mode Output Shadow Register */
#define CCU61_MCMOUTS	(*( CCU60_MCMOUTS_type *) 0xf0002b8cu)	/* Multi-Channel Mode Output Shadow Register */

typedef volatile union
{
	struct
	{ 
		unsigned int T12MODEN       : 6;	/* T12 Modulation Enable */
		unsigned int                : 1;
		unsigned int MCMEN          : 1;	/* Multi-Channel Mode Enable */
		unsigned int T13MODEN       : 6;	/* T13 Modulation Enable */
		unsigned int                : 1;
		unsigned int ECT13O         : 1;	/* Enable Compare Timer T13 Output */
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} CCU60_MODCTR_type;
#define CCU60_MODCTR	(*( CCU60_MODCTR_type *) 0xf0002a80u)	/* Modulation Control Register */
#define CCU61_MODCTR	(*( CCU60_MODCTR_type *) 0xf0002b80u)	/* Modulation Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int TRIG0SEL       : 3;	/* Output Trigger Select for CCU6061 TRIG0 */
		unsigned int TRIG1SEL       : 3;	/* Output Trigger Select for CCU6061 TRIG1 */
		unsigned int TRIG2SEL       : 3;	/* Output Trigger Select for CCU6061 TRIG2 */
		unsigned int                : 23;
	} B;
	int I;
	unsigned int U;

} CCU60_MOSEL_type;
#define CCU60_MOSEL	(*( CCU60_MOSEL_type *) 0xf0002a0cu)	/* CCU60 Module Output Select Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 TGS            : 2;	/* Trigger Set for OTGB0/1 */
		unsigned __sfrbit32 TGB            : 1;	/* OTGB0/1 Bus Select */
		unsigned __sfrbit32 TG_P           : 1;	/* TGS, TGB Write Protection */
		unsigned __sfrbit32                : 20;
		unsigned __sfrbit32 SUS            : 4;	/* OCDS Suspend Control */
		unsigned __sfrbit32 SUS_P          : 1;	/* SUS Write Protection */
		/* const */ unsigned __sfrbit32 SUSSTA         : 1;	/* Suspend State */
		unsigned __sfrbit32                : 2;
	} B;
	int I;
	unsigned int U;

} CCU60_OCS_type;
#define CCU60_OCS	(*( CCU60_OCS_type *) 0xf0002ae8u)	/* OCDS Control and Status Register */
#define CCU61_OCS	(*( CCU60_OCS_type *) 0xf0002be8u)	/* OCDS Control and Status Register */

typedef volatile union
{
	struct
	{ 
		unsigned int ISCC60         : 2;	/* Input Select for CC60 */
		unsigned int ISCC61         : 2;	/* Input Select for CC61 */
		unsigned int ISCC62         : 2;	/* Input Select for CC62 */
		unsigned int ISTRP          : 2;	/* Input Select for CTRAP */
		unsigned int ISPOS0         : 2;	/* Input Select for CCPOS0 */
		unsigned int ISPOS1         : 2;	/* Input Select for CCPOS1 */
		unsigned int ISPOS2         : 2;	/* Input Select for CCPOS2 */
		unsigned int IST12HR        : 2;	/* Input Select for T12HR */
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} CCU60_PISEL0_type;
#define CCU60_PISEL0	(*( CCU60_PISEL0_type *) 0xf0002a10u)	/* Port Input Select Register 0 */
#define CCU61_PISEL0	(*( CCU60_PISEL0_type *) 0xf0002b10u)	/* Port Input Select Register 0 */

typedef volatile union
{
	struct
	{ 
		unsigned int IST13HR        : 2;	/* Input Select for T13HR */
		unsigned int ISCNT12        : 2;	/* Input Select for T12 Counting Input */
		unsigned int ISCNT13        : 2;	/* Input Select for T13 Counting Input */
		unsigned int T12EXT         : 1;	/* Extension for T12HR Inputs */
		unsigned int T13EXT         : 1;	/* Extension for T13HR Inputs */
		unsigned int                : 24;
	} B;
	int I;
	unsigned int U;

} CCU60_PISEL2_type;
#define CCU60_PISEL2	(*( CCU60_PISEL2_type *) 0xf0002a14u)	/* Port Input Select Register 2 */
#define CCU61_PISEL2	(*( CCU60_PISEL2_type *) 0xf0002b14u)	/* Port Input Select Register 2 */

typedef volatile union
{
	struct
	{ 
		unsigned int PSL            : 6;	/* Compare Outputs Passive State Level */
		unsigned int                : 1;
		unsigned int PSL63          : 1;	/* Passive State Level of Output COUT63 */
		unsigned int                : 24;
	} B;
	int I;
	unsigned int U;

} CCU60_PSLR_type;
#define CCU60_PSLR	(*( CCU60_PSLR_type *) 0xf0002a88u)	/* Passive State Level Register */
#define CCU61_PSLR	(*( CCU60_PSLR_type *) 0xf0002b88u)	/* Passive State Level Register */

typedef volatile union
{
	struct
	{ 
		unsigned int T12CV          : 16;	/* Timer 12 Counter Value */
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} CCU60_T12_type;
#define CCU60_T12	(*( CCU60_T12_type *) 0xf0002a20u)	/* Timer T12 Counter Register */
#define CCU61_T12	(*( CCU60_T12_type *) 0xf0002b20u)	/* Timer T12 Counter Register */

typedef volatile union
{
	struct
	{ 
		unsigned int DTM            : 8;	/* Dead-Time */
		unsigned int DTE0           : 1;	/* Dead Time Enable Bits */
		unsigned int DTE1           : 1;	/* Dead Time Enable Bits */
		unsigned int DTE2           : 1;	/* Dead Time Enable Bits */
		unsigned int                : 1;
		/* const */ unsigned int DTR0           : 1;	/* Dead Time Run Indication Bits */
		/* const */ unsigned int DTR1           : 1;	/* Dead Time Run Indication Bits */
		/* const */ unsigned int DTR2           : 1;	/* Dead Time Run Indication Bits */
		unsigned int                : 17;
	} B;
	int I;
	unsigned int U;

} CCU60_T12DTC_type;
#define CCU60_T12DTC	(*( CCU60_T12DTC_type *) 0xf0002a28u)	/* Dead-Time Control Register for Timer12 */
#define CCU61_T12DTC	(*( CCU60_T12DTC_type *) 0xf0002b28u)	/* Dead-Time Control Register for Timer12 */

typedef volatile union
{
	struct
	{ 
		unsigned int MSEL60         : 4;	/* Capture/Compare Mode Selection */
		unsigned int MSEL61         : 4;	/* Capture/Compare Mode Selection */
		unsigned int MSEL62         : 4;	/* Capture/Compare Mode Selection */
		unsigned int HSYNC          : 3;	/* Hall Synchronization */
		unsigned int DBYP           : 1;	/* Delay Bypass */
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} CCU60_T12MSEL_type;
#define CCU60_T12MSEL	(*( CCU60_T12MSEL_type *) 0xf0002a68u)	/* T12 Mode Select Register */
#define CCU61_T12MSEL	(*( CCU60_T12MSEL_type *) 0xf0002b68u)	/* T12 Mode Select Register */

typedef volatile union
{
	struct
	{ 
		unsigned int T12PV          : 16;	/* T12 Period Value */
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} CCU60_T12PR_type;
#define CCU60_T12PR	(*( CCU60_T12PR_type *) 0xf0002a24u)	/* Timer 12 Period Register */
#define CCU61_T12PR	(*( CCU60_T12PR_type *) 0xf0002b24u)	/* Timer 12 Period Register */

typedef volatile union
{
	struct
	{ 
		unsigned int T13CV          : 16;	/* Timer 13 Counter Value */
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} CCU60_T13_type;
#define CCU60_T13	(*( CCU60_T13_type *) 0xf0002a50u)	/* Timer T13 Counter Register */
#define CCU61_T13	(*( CCU60_T13_type *) 0xf0002b50u)	/* Timer T13 Counter Register */

typedef volatile union
{
	struct
	{ 
		unsigned int T13PV          : 16;	/* T13 Period Value */
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} CCU60_T13PR_type;
#define CCU60_T13PR	(*( CCU60_T13PR_type *) 0xf0002a54u)	/* Timer 13 Period Register */
#define CCU61_T13PR	(*( CCU60_T13PR_type *) 0xf0002b54u)	/* Timer 13 Period Register */

typedef volatile union
{
	struct
	{ 
		unsigned int T12CLK         : 3;	/* Timer T12 Input Clock Select */
		unsigned int T12PRE         : 1;	/* Timer T12 Prescaler Bit */
		/* const */ unsigned int T12R           : 1;	/* Timer T12 Run Bit */
		/* const */ unsigned int STE12          : 1;	/* Timer T12 Shadow Transfer Enable */
		/* const */ unsigned int CDIR           : 1;	/* Count Direction of Timer T12 */
		unsigned int CTM            : 1;	/* T12 Operating Mode */
		unsigned int T13CLK         : 3;	/* Timer T13 Input Clock Select */
		unsigned int T13PRE         : 1;	/* Timer T13 Prescaler Bit */
		/* const */ unsigned int T13R           : 1;	/* Timer T13 Run Bit */
		/* const */ unsigned int STE13          : 1;	/* Timer T13 Shadow Transfer Enable */
		unsigned int                : 18;
	} B;
	int I;
	unsigned int U;

} CCU60_TCTR0_type;
#define CCU60_TCTR0	(*( CCU60_TCTR0_type *) 0xf0002a70u)	/* Timer Control Register 0 */
#define CCU61_TCTR0	(*( CCU60_TCTR0_type *) 0xf0002b70u)	/* Timer Control Register 0 */

typedef volatile union
{
	struct
	{ 
		unsigned int T12SSC         : 1;	/* Timer T12 Single Shot Control */
		unsigned int T13SSC         : 1;	/* Timer T13 Single Shot Control */
		unsigned int T13TEC         : 3;	/* T13 Trigger Event Control */
		unsigned int T13TED         : 2;	/* Timer T13 Trigger Event Direction */
		unsigned int                : 1;
		unsigned int T12RSEL        : 2;	/* Timer T12 External Run Selection */
		unsigned int T13RSEL        : 2;	/* Timer T13 External Run Selection */
		unsigned int                : 20;
	} B;
	int I;
	unsigned int U;

} CCU60_TCTR2_type;
#define CCU60_TCTR2	(*( CCU60_TCTR2_type *) 0xf0002a74u)	/* Timer Control Register 2 */
#define CCU61_TCTR2	(*( CCU60_TCTR2_type *) 0xf0002b74u)	/* Timer Control Register 2 */

typedef volatile union
{
	struct
	{ 
		unsigned int T12RR          : 1;	/* Timer T12 Run Reset */
		unsigned int T12RS          : 1;	/* Timer T12 Run Set */
		unsigned int T12RES         : 1;	/* Timer T12 Reset */
		unsigned int DTRES          : 1;	/* Dead-Time Counter Reset */
		unsigned int                : 1;
		unsigned int T12CNT         : 1;	/* Timer T12 Count Event */
		unsigned int T12STR         : 1;	/* Timer T12 Shadow Transfer Request */
		unsigned int T12STD         : 1;	/* Timer T12 Shadow Transfer Disable */
		unsigned int T13RR          : 1;	/* Timer T13 Run Reset */
		unsigned int T13RS          : 1;	/* Timer T13 Run Set */
		unsigned int T13RES         : 1;	/* Timer T13 Reset */
		unsigned int                : 2;
		unsigned int T13CNT         : 1;	/* Timer T13 Count Event */
		unsigned int T13STR         : 1;	/* Timer T13 Shadow Transfer Request */
		unsigned int T13STD         : 1;	/* Timer T13 Shadow Transfer Disable */
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} CCU60_TCTR4_type;
#define CCU60_TCTR4	(*( CCU60_TCTR4_type *) 0xf0002a78u)	/* Timer Control Register 4 */
#define CCU61_TCTR4	(*( CCU60_TCTR4_type *) 0xf0002b78u)	/* Timer Control Register 4 */

typedef volatile union
{
	struct
	{ 
		unsigned int TRPM0          : 1;	/* Trap Mode Control Bits 1, 0 */
		unsigned int TRPM1          : 1;	/* Trap Mode Control Bits 1, 0 */
		unsigned int TRPM2          : 1;	/* Trap Mode Control Bit 2 */
		unsigned int                : 5;
		unsigned int TRPEN          : 6;	/* Trap Enable Control */
		unsigned int TRPEN13        : 1;	/* Trap Enable Control for Timer T13 */
		unsigned int TRPPEN         : 1;	/* Trap Pin Enable */
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} CCU60_TRPCTR_type;
#define CCU60_TRPCTR	(*( CCU60_TRPCTR_type *) 0xf0002a84u)	/* Trap Control Register */
#define CCU61_TRPCTR	(*( CCU60_TRPCTR_type *) 0xf0002b84u)	/* Trap Control Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int Reserved       : 32;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} CCU61_ACCEN1_type;
#define CCU61_ACCEN1	(*( CCU61_ACCEN1_type *) 0xf0002bf8u)	/* Access Enable Register 1 */


/* GPT12 */
typedef volatile union
{
	struct
	{ 
		unsigned int EN0            : 1;	/* Access Enable for Master TAG ID 0 */
		unsigned int EN1            : 1;	/* Access Enable for Master TAG ID 1 */
		unsigned int EN2            : 1;	/* Access Enable for Master TAG ID 2 */
		unsigned int EN3            : 1;	/* Access Enable for Master TAG ID 3 */
		unsigned int EN4            : 1;	/* Access Enable for Master TAG ID 4 */
		unsigned int EN5            : 1;	/* Access Enable for Master TAG ID 5 */
		unsigned int EN6            : 1;	/* Access Enable for Master TAG ID 6 */
		unsigned int EN7            : 1;	/* Access Enable for Master TAG ID 7 */
		unsigned int EN8            : 1;	/* Access Enable for Master TAG ID 8 */
		unsigned int EN9            : 1;	/* Access Enable for Master TAG ID 9 */
		unsigned int EN10           : 1;	/* Access Enable for Master TAG ID 10 */
		unsigned int EN11           : 1;	/* Access Enable for Master TAG ID 11 */
		unsigned int EN12           : 1;	/* Access Enable for Master TAG ID 12 */
		unsigned int EN13           : 1;	/* Access Enable for Master TAG ID 13 */
		unsigned int EN14           : 1;	/* Access Enable for Master TAG ID 14 */
		unsigned int EN15           : 1;	/* Access Enable for Master TAG ID 15 */
		unsigned int EN16           : 1;	/* Access Enable for Master TAG ID 16 */
		unsigned int EN17           : 1;	/* Access Enable for Master TAG ID 17 */
		unsigned int EN18           : 1;	/* Access Enable for Master TAG ID 18 */
		unsigned int EN19           : 1;	/* Access Enable for Master TAG ID 19 */
		unsigned int EN20           : 1;	/* Access Enable for Master TAG ID 20 */
		unsigned int EN21           : 1;	/* Access Enable for Master TAG ID 21 */
		unsigned int EN22           : 1;	/* Access Enable for Master TAG ID 22 */
		unsigned int EN23           : 1;	/* Access Enable for Master TAG ID 23 */
		unsigned int EN24           : 1;	/* Access Enable for Master TAG ID 24 */
		unsigned int EN25           : 1;	/* Access Enable for Master TAG ID 25 */
		unsigned int EN26           : 1;	/* Access Enable for Master TAG ID 26 */
		unsigned int EN27           : 1;	/* Access Enable for Master TAG ID 27 */
		unsigned int EN28           : 1;	/* Access Enable for Master TAG ID 28 */
		unsigned int EN29           : 1;	/* Access Enable for Master TAG ID 29 */
		unsigned int EN30           : 1;	/* Access Enable for Master TAG ID 30 */
		unsigned int EN31           : 1;	/* Access Enable for Master TAG ID 31 */
	} B;
	int I;
	unsigned int U;

} GPT120_ACCEN0_type;
#define GPT120_ACCEN0	(*( GPT120_ACCEN0_type *) 0xf0002efcu)	/* Access Enable Register 0 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int Reserved       : 32;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GPT120_ACCEN1_type;
#define GPT120_ACCEN1	(*( GPT120_ACCEN1_type *) 0xf0002ef8u)	/* Access Enable Register 1 */

typedef volatile union
{
	struct
	{ 
		unsigned int CAPREL         : 16;	/* Current reload value or Captured value */
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} GPT120_CAPREL_type;
#define GPT120_CAPREL	(*( GPT120_CAPREL_type *) 0xf0002e30u)	/* Capture and Reload Register */

typedef volatile union
{
	struct
	{ 
		unsigned int DISR           : 1;	/* Module Disable Request Bit */
		/* const */ unsigned int DISS           : 1;	/* Module Disable Status Bit */
		unsigned int                : 1;
		unsigned int EDIS           : 1;	/* Sleep Mode Enable Control */
		unsigned int                : 28;
	} B;
	int I;
	unsigned int U;

} GPT120_CLC_type;
#define GPT120_CLC	(*( GPT120_CLC_type *) 0xf0002e00u)	/* Clock Control Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int MODREV         : 8;	/* Module Revision Number */
		/* const */ unsigned int MODTYPE        : 8;	/* Module Type */
		/* const */ unsigned int MODNUMBER      : 16;	/* Module Number */
	} B;
	int I;
	unsigned int U;

} GPT120_ID_type;
#define GPT120_ID	(*( GPT120_ID_type *) 0xf0002e08u)	/* Identification Register */

typedef volatile union
{
	struct
	{ 
		unsigned int RST            : 1;	/* Kernel Reset */
		unsigned int RSTSTAT        : 1;	/* Kernel Reset Status */
		unsigned int                : 30;
	} B;
	int I;
	unsigned int U;

} GPT120_KRST0_type;
#define GPT120_KRST0	(*( GPT120_KRST0_type *) 0xf0002ef4u)	/* Kernel Reset Register 0 */

typedef volatile union
{
	struct
	{ 
		unsigned int RST            : 1;	/* Kernel Reset */
		unsigned int                : 31;
	} B;
	int I;
	unsigned int U;

} GPT120_KRST1_type;
#define GPT120_KRST1	(*( GPT120_KRST1_type *) 0xf0002ef0u)	/* Kernel Reset Register 1 */

typedef volatile union
{
	struct
	{ 
		unsigned int CLR            : 1;	/* Kernel Reset Status Clear */
		unsigned int                : 31;
	} B;
	int I;
	unsigned int U;

} GPT120_KRSTCLR_type;
#define GPT120_KRSTCLR	(*( GPT120_KRSTCLR_type *) 0xf0002eecu)	/* Kernel Reset Status Clear Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32                : 24;
		unsigned __sfrbit32 SUS            : 4;	/* OCDS Suspend Control */
		unsigned __sfrbit32 SUS_P          : 1;	/* SUS Write Protection */
		/* const */ unsigned __sfrbit32 SUSSTA         : 1;	/* Suspend State */
		unsigned __sfrbit32                : 2;
	} B;
	int I;
	unsigned int U;

} GPT120_OCS_type;
#define GPT120_OCS	(*( GPT120_OCS_type *) 0xf0002ee8u)	/* OCDS Control and Status Register */

typedef volatile union
{
	struct
	{ 
		unsigned int IST2IN         : 1;	/* Input Select for T2IN */
		unsigned int IST2EUD        : 1;	/* Input Select for T2EUD */
		unsigned int IST3IN         : 2;	/* Input Select for T3IN */
		unsigned int IST3EUD        : 2;	/* Input Select for T3EUD */
		unsigned int IST4IN         : 2;	/* Input Select for T4IN */
		unsigned int IST4EUD        : 2;	/* Input Select for T4EUD */
		unsigned int IST5IN         : 1;	/* Input Select for T5IN */
		unsigned int IST5EUD        : 1;	/* Input Select for T5EUD */
		unsigned int IST6IN         : 1;	/* Input Select for T6IN */
		unsigned int IST6EUD        : 1;	/* Input Select for T6EUD */
		unsigned int ISCAPIN        : 2;	/* Input Select for CAPIN */
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} GPT120_PISEL_type;
#define GPT120_PISEL	(*( GPT120_PISEL_type *) 0xf0002e04u)	/* Port Input Select Register */

typedef volatile union
{
	struct
	{ 
		unsigned int T2             : 16;	/* Timer T2 */
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} GPT120_T2_type;
#define GPT120_T2	(*( GPT120_T2_type *) 0xf0002e34u)	/* Timer T2 Register */

typedef volatile union
{
	struct
	{ 
		unsigned int T2I            : 3;	/* Timer T2 Input Parameter Selection */
		unsigned int T2M            : 3;	/* Timer T2 Mode Control (Basic Operating Mode) */
		unsigned int T2R            : 1;	/* Timer T2 Run Bit */
		unsigned int T2UD           : 1;	/* Timer T2 Up/Down Control */
		unsigned int T2UDE          : 1;	/* Timer T2 External Up/Down Enable */
		unsigned int T2RC           : 1;	/* Timer T2 Remote Control */
		unsigned int                : 2;
		unsigned int T2IRDIS        : 1;	/* Timer T2 Interrupt Disable */
		unsigned int T2EDGE         : 1;	/* Timer T2 Edge Detection */
		unsigned int T2CHDIR        : 1;	/* Timer T2 Count Direction Change */
		/* const */ unsigned int T2RDIR         : 1;	/* Timer T2 Rotation Direction */
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} GPT120_T2CON_type;
#define GPT120_T2CON	(*( GPT120_T2CON_type *) 0xf0002e10u)	/* Timer T2 Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int T3             : 16;	/* Timer T3 */
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} GPT120_T3_type;
#define GPT120_T3	(*( GPT120_T3_type *) 0xf0002e38u)	/* Timer T3 Register */

typedef volatile union
{
	struct
	{ 
		unsigned int T3I            : 3;	/* Timer T3 Input Parameter Selection */
		unsigned int T3M            : 3;	/* Timer T3 Mode Control */
		unsigned int T3R            : 1;	/* Timer T3 Run Bit */
		unsigned int T3UD           : 1;	/* Timer T3 Up/Down Control */
		unsigned int T3UDE          : 1;	/* Timer T3 External Up/Down Enable */
		unsigned int T3OE           : 1;	/* Overflow/Underflow Output Enable */
		unsigned int T3OTL          : 1;	/* Timer T3 Overflow Toggle Latch */
		unsigned int BPS1           : 2;	/* GPT1 Block Prescaler Control */
		unsigned int T3EDGE         : 1;	/* Timer T3 Edge Detection Flag */
		unsigned int T3CHDIR        : 1;	/* Timer T3 Count Direction Change Flag */
		/* const */ unsigned int T3RDIR         : 1;	/* Timer T3 Rotation Direction Flag */
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} GPT120_T3CON_type;
#define GPT120_T3CON	(*( GPT120_T3CON_type *) 0xf0002e14u)	/* Timer T3 Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int T4             : 16;	/* Timer T4 */
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} GPT120_T4_type;
#define GPT120_T4	(*( GPT120_T4_type *) 0xf0002e3cu)	/* Timer T4 Register */

typedef volatile union
{
	struct
	{ 
		unsigned int T4I            : 3;	/* Timer T4 Input Parameter Selection */
		unsigned int T4M            : 3;	/* Timer T4 Mode Control (Basic Operating Mode) */
		unsigned int T4R            : 1;	/* Timer T4 Run Bit */
		unsigned int T4UD           : 1;	/* Timer T4 Up/Down Control */
		unsigned int T4UDE          : 1;	/* Timer T4 External Up/Down Enable */
		unsigned int T4RC           : 1;	/* Timer T4 Remote Control */
		unsigned int CLRT2EN        : 1;	/* Clear Timer T2 Enable */
		unsigned int CLRT3EN        : 1;	/* Clear Timer T3 Enable */
		unsigned int T4IRDIS        : 1;	/* Timer T4 Interrupt Disable */
		unsigned int T4EDGE         : 1;	/* Timer T4 Edge Detection */
		unsigned int T4CHDIR        : 1;	/* Timer T4 Count Direction Change */
		/* const */ unsigned int T4RDIR         : 1;	/* Timer T4 Rotation Direction */
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} GPT120_T4CON_type;
#define GPT120_T4CON	(*( GPT120_T4CON_type *) 0xf0002e18u)	/* Timer T4 Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int T5             : 16;	/* Timer T5 */
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} GPT120_T5_type;
#define GPT120_T5	(*( GPT120_T5_type *) 0xf0002e40u)	/* Timer T5 Register */

typedef volatile union
{
	struct
	{ 
		unsigned int T5I            : 3;	/* Timer T5 Input Parameter Selection */
		unsigned int T5M            : 3;	/* Timer T5 Mode Control (Basic Operating Mode) */
		unsigned int T5R            : 1;	/* Timer T5 Run Bit */
		unsigned int T5UD           : 1;	/* Timer T5 Up/Down Control */
		unsigned int T5UDE          : 1;	/* Timer T5 External Up/Down Enable */
		unsigned int T5RC           : 1;	/* Timer T5 Remote Control */
		unsigned int CT3            : 1;	/* Timer T3 Capture Trigger Enable */
		unsigned int                : 1;
		unsigned int CI             : 2;	/* Register CAPREL Capture Trigger Selection */
		unsigned int T5CLR          : 1;	/* Timer T5 Clear Enable Bit */
		unsigned int T5SC           : 1;	/* Timer T5 Capture Mode Enable */
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} GPT120_T5CON_type;
#define GPT120_T5CON	(*( GPT120_T5CON_type *) 0xf0002e1cu)	/* Timer T5 Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int T6             : 16;	/* Timer T6 */
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} GPT120_T6_type;
#define GPT120_T6	(*( GPT120_T6_type *) 0xf0002e44u)	/* Timer T6 Register */

typedef volatile union
{
	struct
	{ 
		unsigned int T6I            : 3;	/* Timer T6 Input Parameter Selection */
		unsigned int T6M            : 3;	/* Timer T6 Mode Control (Basic Operating Mode) */
		unsigned int T6R            : 1;	/* Timer T6 Run Bit */
		unsigned int T6UD           : 1;	/* Timer T6 Up/Down Control */
		unsigned int T6UDE          : 1;	/* Timer T6 External Up/Down Enable */
		unsigned int T6OE           : 1;	/* Overflow/Underflow Output Enable */
		unsigned int T6OTL          : 1;	/* Timer T6 Overflow Toggle Latch */
		unsigned int BPS2           : 2;	/* GPT2 Block Prescaler Control */
		unsigned int                : 1;
		unsigned int T6CLR          : 1;	/* Timer T6 Clear Enable Bit */
		unsigned int T6SR           : 1;	/* Timer T6 Reload Mode Enable */
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} GPT120_T6CON_type;
#define GPT120_T6CON	(*( GPT120_T6CON_type *) 0xf0002e20u)	/* Timer T6 Control Register */


/* VADC */
typedef volatile union
{
	struct
	{ 
		unsigned int EN0            : 1;	/* Access Enable for Master TAG ID 0 */
		unsigned int EN1            : 1;	/* Access Enable for Master TAG ID 1 */
		unsigned int EN2            : 1;	/* Access Enable for Master TAG ID 2 */
		unsigned int EN3            : 1;	/* Access Enable for Master TAG ID 3 */
		unsigned int EN4            : 1;	/* Access Enable for Master TAG ID 4 */
		unsigned int EN5            : 1;	/* Access Enable for Master TAG ID 5 */
		unsigned int EN6            : 1;	/* Access Enable for Master TAG ID 6 */
		unsigned int EN7            : 1;	/* Access Enable for Master TAG ID 7 */
		unsigned int EN8            : 1;	/* Access Enable for Master TAG ID 8 */
		unsigned int EN9            : 1;	/* Access Enable for Master TAG ID 9 */
		unsigned int EN10           : 1;	/* Access Enable for Master TAG ID 10 */
		unsigned int EN11           : 1;	/* Access Enable for Master TAG ID 11 */
		unsigned int EN12           : 1;	/* Access Enable for Master TAG ID 12 */
		unsigned int EN13           : 1;	/* Access Enable for Master TAG ID 13 */
		unsigned int EN14           : 1;	/* Access Enable for Master TAG ID 14 */
		unsigned int EN15           : 1;	/* Access Enable for Master TAG ID 15 */
		unsigned int EN16           : 1;	/* Access Enable for Master TAG ID 16 */
		unsigned int EN17           : 1;	/* Access Enable for Master TAG ID 17 */
		unsigned int EN18           : 1;	/* Access Enable for Master TAG ID 18 */
		unsigned int EN19           : 1;	/* Access Enable for Master TAG ID 19 */
		unsigned int EN20           : 1;	/* Access Enable for Master TAG ID 20 */
		unsigned int EN21           : 1;	/* Access Enable for Master TAG ID 21 */
		unsigned int EN22           : 1;	/* Access Enable for Master TAG ID 22 */
		unsigned int EN23           : 1;	/* Access Enable for Master TAG ID 23 */
		unsigned int EN24           : 1;	/* Access Enable for Master TAG ID 24 */
		unsigned int EN25           : 1;	/* Access Enable for Master TAG ID 25 */
		unsigned int EN26           : 1;	/* Access Enable for Master TAG ID 26 */
		unsigned int EN27           : 1;	/* Access Enable for Master TAG ID 27 */
		unsigned int EN28           : 1;	/* Access Enable for Master TAG ID 28 */
		unsigned int EN29           : 1;	/* Access Enable for Master TAG ID 29 */
		unsigned int EN30           : 1;	/* Access Enable for Master TAG ID 30 */
		unsigned int EN31           : 1;	/* Access Enable for Master TAG ID 31 */
	} B;
	int I;
	unsigned int U;

} VADC_ACCEN0_type;
#define VADC_ACCEN0	(*( VADC_ACCEN0_type *) 0xf002003cu)	/* Access Enable Register 0 */

typedef volatile union
{
	struct
	{ 
		unsigned int APC0           : 1;	/* Access Protection Channel Control, Group 0 - 7 */
		unsigned int APC1           : 1;	/* Access Protection Channel Control, Group 0 - 7 */
		unsigned int APC2           : 1;	/* Access Protection Channel Control, Group 0 - 7 */
		unsigned int APC3           : 1;	/* Access Protection Channel Control, Group 0 - 7 */
		unsigned int APC4           : 1;	/* Access Protection Channel Control, Group 0 - 7 */
		unsigned int APC5           : 1;	/* Access Protection Channel Control, Group 0 - 7 */
		unsigned int APC6           : 1;	/* Access Protection Channel Control, Group 0 - 7 */
		unsigned int APC7           : 1;	/* Access Protection Channel Control, Group 0 - 7 */
		unsigned int                : 7;
		unsigned int APEM           : 1;	/* Access Protection External Multiplexer */
		unsigned int API0           : 1;	/* Access Protection Initialization, Group 0 - 7 */
		unsigned int API1           : 1;	/* Access Protection Initialization, Group 0 - 7 */
		unsigned int API2           : 1;	/* Access Protection Initialization, Group 0 - 7 */
		unsigned int API3           : 1;	/* Access Protection Initialization, Group 0 - 7 */
		unsigned int API4           : 1;	/* Access Protection Initialization, Group 0 - 7 */
		unsigned int API5           : 1;	/* Access Protection Initialization, Group 0 - 7 */
		unsigned int API6           : 1;	/* Access Protection Initialization, Group 0 - 7 */
		unsigned int API7           : 1;	/* Access Protection Initialization, Group 0 - 7 */
		unsigned int                : 7;
		unsigned int APGC           : 1;	/* Access Protection Global Configuration */
	} B;
	int I;
	unsigned int U;

} VADC_ACCPROT0_type;
#define VADC_ACCPROT0	(*( VADC_ACCPROT0_type *) 0xf0020088u)	/* Access Protection Register */

typedef volatile union
{
	struct
	{ 
		unsigned int APS0           : 1;	/* Access Protection Service Request, Group 0 - 7 */
		unsigned int APS1           : 1;	/* Access Protection Service Request, Group 0 - 7 */
		unsigned int APS2           : 1;	/* Access Protection Service Request, Group 0 - 7 */
		unsigned int APS3           : 1;	/* Access Protection Service Request, Group 0 - 7 */
		unsigned int APS4           : 1;	/* Access Protection Service Request, Group 0 - 7 */
		unsigned int APS5           : 1;	/* Access Protection Service Request, Group 0 - 7 */
		unsigned int APS6           : 1;	/* Access Protection Service Request, Group 0 - 7 */
		unsigned int APS7           : 1;	/* Access Protection Service Request, Group 0 - 7 */
		unsigned int                : 7;
		unsigned int APTF           : 1;	/* Access Protection Test Function */
		unsigned int APR0           : 1;	/* Access Protection Result Registers, Group 0 - 7 */
		unsigned int APR1           : 1;	/* Access Protection Result Registers, Group 0 - 7 */
		unsigned int APR2           : 1;	/* Access Protection Result Registers, Group 0 - 7 */
		unsigned int APR3           : 1;	/* Access Protection Result Registers, Group 0 - 7 */
		unsigned int APR4           : 1;	/* Access Protection Result Registers, Group 0 - 7 */
		unsigned int APR5           : 1;	/* Access Protection Result Registers, Group 0 - 7 */
		unsigned int APR6           : 1;	/* Access Protection Result Registers, Group 0 - 7 */
		unsigned int APR7           : 1;	/* Access Protection Result Registers, Group 0 - 7 */
		unsigned int                : 8;
	} B;
	int I;
	unsigned int U;

} VADC_ACCPROT1_type;
#define VADC_ACCPROT1	(*( VADC_ACCPROT1_type *) 0xf002008cu)	/* Access Protection Register */

typedef volatile union
{
	struct
	{ 
		unsigned int SRCRESREG      : 4;	/* Source-specific Result Register */
		unsigned int                : 4;
		unsigned int XTSEL          : 4;	/* External Trigger Input Selection */
		/* const */ unsigned int XTLVL          : 1;	/* External Trigger Level */
		unsigned int XTMODE         : 2;	/* Trigger Operating Mode */
		unsigned int XTWC           : 1;	/* Write Control for Trigger Configuration */
		unsigned int GTSEL          : 4;	/* Gate Input Selection */
		/* const */ unsigned int GTLVL          : 1;	/* Gate Input Level */
		unsigned int                : 2;
		unsigned int GTWC           : 1;	/* Write Control for Gate Configuration */
		unsigned int                : 8;
	} B;
	int I;
	unsigned int U;

} VADC_BRSCTRL_type;
#define VADC_BRSCTRL	(*( VADC_BRSCTRL_type *) 0xf0020200u)	/* Background Request Source Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int ENGT           : 2;	/* Enable Gate */
		unsigned int ENTR           : 1;	/* Enable External Trigger */
		unsigned int ENSI           : 1;	/* Enable Source Interrupt */
		unsigned int SCAN           : 1;	/* Autoscan Enable */
		unsigned int LDM            : 1;	/* Autoscan Source Load Event Mode */
		unsigned int                : 1;
		/* const */ unsigned int REQGT          : 1;	/* Request Gate Level */
		unsigned int CLRPND         : 1;	/* Clear Pending Bits */
		unsigned int LDEV           : 1;	/* Generate Load Event */
		unsigned int                : 6;
		unsigned int RPTDIS         : 1;	/* Repeat Disable */
		unsigned int                : 15;
	} B;
	int I;
	unsigned int U;

} VADC_BRSMR_type;
#define VADC_BRSMR	(*( VADC_BRSMR_type *) 0xf0020204u)	/* Background Request Source Mode Register */

typedef volatile union
{
	struct
	{ 
		unsigned int CHPNDGy        : 32;	/* Channels Pending Group x */
	} B;
	int I;
	unsigned int U;

} VADC_BRSPND0_type;
#define VADC_BRSPND0	(*( VADC_BRSPND0_type *) 0xf00201c0u)	/* Background Request Source Pending Register, Group 0 */
#define VADC_BRSPND1	(*( VADC_BRSPND0_type *) 0xf00201c4u)	/* Background Request Source Pending Register, Group 1 */
#define VADC_BRSPND2	(*( VADC_BRSPND0_type *) 0xf00201c8u)	/* Background Request Source Pending Register, Group 2 */
#define VADC_BRSPND3	(*( VADC_BRSPND0_type *) 0xf00201ccu)	/* Background Request Source Pending Register, Group 3 */
#define VADC_BRSPND4	(*( VADC_BRSPND0_type *) 0xf00201d0u)	/* Background Request Source Pending Register, Group 4 */
#define VADC_BRSPND5	(*( VADC_BRSPND0_type *) 0xf00201d4u)	/* Background Request Source Pending Register, Group 5 */
#define VADC_BRSPND6	(*( VADC_BRSPND0_type *) 0xf00201d8u)	/* Background Request Source Pending Register, Group 6 */
#define VADC_BRSPND7	(*( VADC_BRSPND0_type *) 0xf00201dcu)	/* Background Request Source Pending Register, Group 7 */

typedef volatile union
{
	struct
	{ 
		unsigned int CHSELGy        : 32;	/* Channel Selection Group x */
	} B;
	int I;
	unsigned int U;

} VADC_BRSSEL0_type;
#define VADC_BRSSEL0	(*( VADC_BRSSEL0_type *) 0xf0020180u)	/* Background Request Source Channel Select Register, Group 0 */
#define VADC_BRSSEL1	(*( VADC_BRSSEL0_type *) 0xf0020184u)	/* Background Request Source Channel Select Register, Group 1 */
#define VADC_BRSSEL2	(*( VADC_BRSSEL0_type *) 0xf0020188u)	/* Background Request Source Channel Select Register, Group 2 */
#define VADC_BRSSEL3	(*( VADC_BRSSEL0_type *) 0xf002018cu)	/* Background Request Source Channel Select Register, Group 3 */
#define VADC_BRSSEL4	(*( VADC_BRSSEL0_type *) 0xf0020190u)	/* Background Request Source Channel Select Register, Group 4 */
#define VADC_BRSSEL5	(*( VADC_BRSSEL0_type *) 0xf0020194u)	/* Background Request Source Channel Select Register, Group 5 */
#define VADC_BRSSEL6	(*( VADC_BRSSEL0_type *) 0xf0020198u)	/* Background Request Source Channel Select Register, Group 6 */
#define VADC_BRSSEL7	(*( VADC_BRSSEL0_type *) 0xf002019cu)	/* Background Request Source Channel Select Register, Group 7 */

typedef volatile union
{
	struct
	{ 
		unsigned int DISR           : 1;	/* Module Disable Request Bit */
		/* const */ unsigned int DISS           : 1;	/* Module Disable Status Bit */
		unsigned int                : 1;
		unsigned int EDIS           : 1;	/* Sleep Mode Enable Control */
		unsigned int                : 28;
	} B;
	int I;
	unsigned int U;

} VADC_CLC_type;
#define VADC_CLC	(*( VADC_CLC_type *) 0xf0020000u)	/* Clock Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int EMUXGRP0       : 4;	/* External Multiplexer Group for Interface x */
		unsigned int EMUXGRP1       : 4;	/* External Multiplexer Group for Interface x */
		unsigned int                : 24;
	} B;
	int I;
	unsigned int U;

} VADC_EMUXSEL_type;
#define VADC_EMUXSEL	(*( VADC_EMUXSEL_type *) 0xf00203f0u)	/* External Multiplexer Select Register */

typedef volatile union
{
	struct
	{ 
		unsigned int ALIAS0         : 5;	/* Alias Value for CH0 Conversion Requests */
		unsigned int                : 3;
		unsigned int ALIAS1         : 5;	/* Alias Value for CH1 Conversion Requests */
		unsigned int                : 19;
	} B;
	int I;
	unsigned int U;

} VADC_G0ALIAS_type;
#define VADC_G0ALIAS	(*( VADC_G0ALIAS_type *) 0xf00204b0u)	/* Alias Register, Group 0 */
#define VADC_G1ALIAS	(*( VADC_G0ALIAS_type *) 0xf00208b0u)	/* Alias Register, Group 1 */
#define VADC_G2ALIAS	(*( VADC_G0ALIAS_type *) 0xf0020cb0u)	/* Alias Register, Group 2 */
#define VADC_G3ALIAS	(*( VADC_G0ALIAS_type *) 0xf00210b0u)	/* Alias Register, Group 3 */
#define VADC_G4ALIAS	(*( VADC_G0ALIAS_type *) 0xf00214b0u)	/* Alias Register, Group 4 */
#define VADC_G5ALIAS	(*( VADC_G0ALIAS_type *) 0xf00218b0u)	/* Alias Register, Group 5 */
#define VADC_G6ALIAS	(*( VADC_G0ALIAS_type *) 0xf0021cb0u)	/* Alias Register, Group 6 */
#define VADC_G7ALIAS	(*( VADC_G0ALIAS_type *) 0xf00220b0u)	/* Alias Register, Group 7 */

typedef volatile union
{
	struct
	{ 
		unsigned int ANONC          : 2;	/* Analog Converter Control */
		unsigned int                : 2;
		unsigned int ARBRND         : 2;	/* Arbitration Round Length */
		unsigned int                : 1;
		unsigned int ARBM           : 1;	/* Arbitration Mode */
		unsigned int                : 8;
		/* const */ unsigned int ANONS          : 2;	/* Analog Converter Control Status */
		/* const */ unsigned int CSRC           : 2;	/* Currently Converted Request Source */
		/* const */ unsigned int CHNR           : 5;	/* Channel Number */
		/* const */ unsigned int SYNRUN         : 1;	/* Synchronous Conversion Running */
		unsigned int                : 2;
		/* const */ unsigned int CAL            : 1;	/* Start-Up Calibration Active Indication */
		/* const */ unsigned int CALS           : 1;	/* Start-Up Calibration Started */
		/* const */ unsigned int BUSY           : 1;	/* Converter Busy Flag */
		/* const */ unsigned int SAMPLE         : 1;	/* Sample Phase Flag */
	} B;
	int I;
	unsigned int U;

} VADC_G0ARBCFG_type;
#define VADC_G0ARBCFG	(*( VADC_G0ARBCFG_type *) 0xf0020480u)	/* Arbitration Configuration Register, Group 0 */
#define VADC_G1ARBCFG	(*( VADC_G0ARBCFG_type *) 0xf0020880u)	/* Arbitration Configuration Register, Group 1 */
#define VADC_G2ARBCFG	(*( VADC_G0ARBCFG_type *) 0xf0020c80u)	/* Arbitration Configuration Register, Group 2 */
#define VADC_G3ARBCFG	(*( VADC_G0ARBCFG_type *) 0xf0021080u)	/* Arbitration Configuration Register, Group 3 */
#define VADC_G4ARBCFG	(*( VADC_G0ARBCFG_type *) 0xf0021480u)	/* Arbitration Configuration Register, Group 4 */
#define VADC_G5ARBCFG	(*( VADC_G0ARBCFG_type *) 0xf0021880u)	/* Arbitration Configuration Register, Group 5 */
#define VADC_G6ARBCFG	(*( VADC_G0ARBCFG_type *) 0xf0021c80u)	/* Arbitration Configuration Register, Group 6 */
#define VADC_G7ARBCFG	(*( VADC_G0ARBCFG_type *) 0xf0022080u)	/* Arbitration Configuration Register, Group 7 */

typedef volatile union
{
	struct
	{ 
		unsigned int PRIO0          : 2;	/* Priority of Request Source x */
		unsigned int                : 1;
		unsigned int CSM0           : 1;	/* Conversion Start Mode of Request Source x */
		unsigned int PRIO1          : 2;	/* Priority of Request Source x */
		unsigned int                : 1;
		unsigned int CSM1           : 1;	/* Conversion Start Mode of Request Source x */
		unsigned int PRIO2          : 2;	/* Priority of Request Source x */
		unsigned int                : 1;
		unsigned int CSM2           : 1;	/* Conversion Start Mode of Request Source x */
		unsigned int                : 12;
		unsigned int ASEN0          : 1;	/* Arbitration Slot 0 Enable */
		unsigned int ASEN1          : 1;	/* Arbitration Slot 1 Enable */
		unsigned int ASEN2          : 1;	/* Arbitration Slot 2 Enable */
		unsigned int                : 5;
	} B;
	int I;
	unsigned int U;

} VADC_G0ARBPR_type;
#define VADC_G0ARBPR	(*( VADC_G0ARBPR_type *) 0xf0020484u)	/* Arbitration Priority Register, Group 0 */
#define VADC_G1ARBPR	(*( VADC_G0ARBPR_type *) 0xf0020884u)	/* Arbitration Priority Register, Group 1 */
#define VADC_G2ARBPR	(*( VADC_G0ARBPR_type *) 0xf0020c84u)	/* Arbitration Priority Register, Group 2 */
#define VADC_G3ARBPR	(*( VADC_G0ARBPR_type *) 0xf0021084u)	/* Arbitration Priority Register, Group 3 */
#define VADC_G4ARBPR	(*( VADC_G0ARBPR_type *) 0xf0021484u)	/* Arbitration Priority Register, Group 4 */
#define VADC_G5ARBPR	(*( VADC_G0ARBPR_type *) 0xf0021884u)	/* Arbitration Priority Register, Group 5 */
#define VADC_G6ARBPR	(*( VADC_G0ARBPR_type *) 0xf0021c84u)	/* Arbitration Priority Register, Group 6 */
#define VADC_G7ARBPR	(*( VADC_G0ARBPR_type *) 0xf0022084u)	/* Arbitration Priority Register, Group 7 */

typedef volatile union
{
	struct
	{ 
		unsigned int SRCRESREG      : 4;	/* Source-specific Result Register */
		unsigned int                : 4;
		unsigned int XTSEL          : 4;	/* External Trigger Input Selection */
		/* const */ unsigned int XTLVL          : 1;	/* External Trigger Level */
		unsigned int XTMODE         : 2;	/* Trigger Operating Mode */
		unsigned int XTWC           : 1;	/* Write Control for Trigger Configuration */
		unsigned int GTSEL          : 4;	/* Gate Input Selection */
		/* const */ unsigned int GTLVL          : 1;	/* Gate Input Level */
		unsigned int                : 2;
		unsigned int GTWC           : 1;	/* Write Control for Gate Configuration */
		unsigned int                : 4;
		unsigned int TMEN           : 1;	/* Timer Mode Enable */
		unsigned int                : 2;
		unsigned int TMWC           : 1;	/* Write Control for Timer Mode */
	} B;
	int I;
	unsigned int U;

} VADC_G0ASCTRL_type;
#define VADC_G0ASCTRL	(*( VADC_G0ASCTRL_type *) 0xf0020520u)	/* Autoscan Source Control Register, Group 0 */
#define VADC_G0QCTRL0	(*( VADC_G0ASCTRL_type *) 0xf0020500u)	/* Queue 0 Source Control Register, Group 0 */
#define VADC_G1ASCTRL	(*( VADC_G0ASCTRL_type *) 0xf0020920u)	/* Autoscan Source Control Register, Group 1 */
#define VADC_G1QCTRL0	(*( VADC_G0ASCTRL_type *) 0xf0020900u)	/* Queue 0 Source Control Register, Group 1 */
#define VADC_G2ASCTRL	(*( VADC_G0ASCTRL_type *) 0xf0020d20u)	/* Autoscan Source Control Register, Group 2 */
#define VADC_G2QCTRL0	(*( VADC_G0ASCTRL_type *) 0xf0020d00u)	/* Queue 0 Source Control Register, Group 2 */
#define VADC_G3ASCTRL	(*( VADC_G0ASCTRL_type *) 0xf0021120u)	/* Autoscan Source Control Register, Group 3 */
#define VADC_G3QCTRL0	(*( VADC_G0ASCTRL_type *) 0xf0021100u)	/* Queue 0 Source Control Register, Group 3 */
#define VADC_G4ASCTRL	(*( VADC_G0ASCTRL_type *) 0xf0021520u)	/* Autoscan Source Control Register, Group 4 */
#define VADC_G4QCTRL0	(*( VADC_G0ASCTRL_type *) 0xf0021500u)	/* Queue 0 Source Control Register, Group 4 */
#define VADC_G5ASCTRL	(*( VADC_G0ASCTRL_type *) 0xf0021920u)	/* Autoscan Source Control Register, Group 5 */
#define VADC_G5QCTRL0	(*( VADC_G0ASCTRL_type *) 0xf0021900u)	/* Queue 0 Source Control Register, Group 5 */
#define VADC_G6ASCTRL	(*( VADC_G0ASCTRL_type *) 0xf0021d20u)	/* Autoscan Source Control Register, Group 6 */
#define VADC_G6QCTRL0	(*( VADC_G0ASCTRL_type *) 0xf0021d00u)	/* Queue 0 Source Control Register, Group 6 */
#define VADC_G7ASCTRL	(*( VADC_G0ASCTRL_type *) 0xf0022120u)	/* Autoscan Source Control Register, Group 7 */
#define VADC_G7QCTRL0	(*( VADC_G0ASCTRL_type *) 0xf0022100u)	/* Queue 0 Source Control Register, Group 7 */

typedef volatile union
{
	struct
	{ 
		unsigned int ENGT           : 2;	/* Enable Gate */
		unsigned int ENTR           : 1;	/* Enable External Trigger */
		unsigned int ENSI           : 1;	/* Enable Source Interrupt */
		unsigned int SCAN           : 1;	/* Autoscan Enable */
		unsigned int LDM            : 1;	/* Autoscan Source Load Event Mode */
		unsigned int                : 1;
		/* const */ unsigned int REQGT          : 1;	/* Request Gate Level */
		unsigned int CLRPND         : 1;	/* Clear Pending Bits */
		unsigned int LDEV           : 1;	/* Generate Load Event */
		unsigned int                : 6;
		unsigned int RPTDIS         : 1;	/* Repeat Disable */
		unsigned int                : 15;
	} B;
	int I;
	unsigned int U;

} VADC_G0ASMR_type;
#define VADC_G0ASMR	(*( VADC_G0ASMR_type *) 0xf0020524u)	/* Autoscan Source Mode Register, Group 0 */
#define VADC_G1ASMR	(*( VADC_G0ASMR_type *) 0xf0020924u)	/* Autoscan Source Mode Register, Group 1 */
#define VADC_G2ASMR	(*( VADC_G0ASMR_type *) 0xf0020d24u)	/* Autoscan Source Mode Register, Group 2 */
#define VADC_G3ASMR	(*( VADC_G0ASMR_type *) 0xf0021124u)	/* Autoscan Source Mode Register, Group 3 */
#define VADC_G4ASMR	(*( VADC_G0ASMR_type *) 0xf0021524u)	/* Autoscan Source Mode Register, Group 4 */
#define VADC_G5ASMR	(*( VADC_G0ASMR_type *) 0xf0021924u)	/* Autoscan Source Mode Register, Group 5 */
#define VADC_G6ASMR	(*( VADC_G0ASMR_type *) 0xf0021d24u)	/* Autoscan Source Mode Register, Group 6 */
#define VADC_G7ASMR	(*( VADC_G0ASMR_type *) 0xf0022124u)	/* Autoscan Source Mode Register, Group 7 */

typedef volatile union
{
	struct
	{ 
		unsigned int CHPND          : 32;	/* Channels Pending */
	} B;
	int I;
	unsigned int U;

} VADC_G0ASPND_type;
#define VADC_G0ASPND	(*( VADC_G0ASPND_type *) 0xf002052cu)	/* Autoscan Source Pending Register, Group 0 */
#define VADC_G1ASPND	(*( VADC_G0ASPND_type *) 0xf002092cu)	/* Autoscan Source Pending Register, Group 1 */
#define VADC_G2ASPND	(*( VADC_G0ASPND_type *) 0xf0020d2cu)	/* Autoscan Source Pending Register, Group 2 */
#define VADC_G3ASPND	(*( VADC_G0ASPND_type *) 0xf002112cu)	/* Autoscan Source Pending Register, Group 3 */
#define VADC_G4ASPND	(*( VADC_G0ASPND_type *) 0xf002152cu)	/* Autoscan Source Pending Register, Group 4 */
#define VADC_G5ASPND	(*( VADC_G0ASPND_type *) 0xf002192cu)	/* Autoscan Source Pending Register, Group 5 */
#define VADC_G6ASPND	(*( VADC_G0ASPND_type *) 0xf0021d2cu)	/* Autoscan Source Pending Register, Group 6 */
#define VADC_G7ASPND	(*( VADC_G0ASPND_type *) 0xf002212cu)	/* Autoscan Source Pending Register, Group 7 */

typedef volatile union
{
	struct
	{ 
		unsigned int CHSEL          : 32;	/* Channel Selection */
	} B;
	int I;
	unsigned int U;

} VADC_G0ASSEL_type;
#define VADC_G0ASSEL	(*( VADC_G0ASSEL_type *) 0xf0020528u)	/* Autoscan Source Channel Select Register, Group 0 */
#define VADC_G1ASSEL	(*( VADC_G0ASSEL_type *) 0xf0020928u)	/* Autoscan Source Channel Select Register, Group 1 */
#define VADC_G2ASSEL	(*( VADC_G0ASSEL_type *) 0xf0020d28u)	/* Autoscan Source Channel Select Register, Group 2 */
#define VADC_G3ASSEL	(*( VADC_G0ASSEL_type *) 0xf0021128u)	/* Autoscan Source Channel Select Register, Group 3 */
#define VADC_G4ASSEL	(*( VADC_G0ASSEL_type *) 0xf0021528u)	/* Autoscan Source Channel Select Register, Group 4 */
#define VADC_G5ASSEL	(*( VADC_G0ASSEL_type *) 0xf0021928u)	/* Autoscan Source Channel Select Register, Group 5 */
#define VADC_G6ASSEL	(*( VADC_G0ASSEL_type *) 0xf0021d28u)	/* Autoscan Source Channel Select Register, Group 6 */
#define VADC_G7ASSEL	(*( VADC_G0ASSEL_type *) 0xf0022128u)	/* Autoscan Source Channel Select Register, Group 7 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int BFL0           : 1;	/* Boundary Flag 0 */
		/* const */ unsigned int BFL1           : 1;	/* Boundary Flag 1 */
		/* const */ unsigned int BFL2           : 1;	/* Boundary Flag 2 */
		/* const */ unsigned int BFL3           : 1;	/* Boundary Flag 3 */
		unsigned int                : 4;
		unsigned int BFA0           : 1;	/* Boundary Flag 0 Activation Select */
		unsigned int BFA1           : 1;	/* Boundary Flag 1 Activation Select */
		unsigned int BFA2           : 1;	/* Boundary Flag 2 Activation Select */
		unsigned int BFA3           : 1;	/* Boundary Flag 3 Activation Select */
		unsigned int                : 4;
		unsigned int BFI0           : 1;	/* Boundary Flag 0 Inversion Control */
		unsigned int BFI1           : 1;	/* Boundary Flag 1 Inversion Control */
		unsigned int BFI2           : 1;	/* Boundary Flag 2 Inversion Control */
		unsigned int BFI3           : 1;	/* Boundary Flag 3 Inversion Control */
		unsigned int                : 12;
	} B;
	int I;
	unsigned int U;

} VADC_G0BFL_type;
#define VADC_G0BFL	(*( VADC_G0BFL_type *) 0xf00204c8u)	/* Boundary Flag Register, Group 0 */
#define VADC_G1BFL	(*( VADC_G0BFL_type *) 0xf00208c8u)	/* Boundary Flag Register, Group 1 */
#define VADC_G2BFL	(*( VADC_G0BFL_type *) 0xf0020cc8u)	/* Boundary Flag Register, Group 2 */
#define VADC_G3BFL	(*( VADC_G0BFL_type *) 0xf00210c8u)	/* Boundary Flag Register, Group 3 */
#define VADC_G4BFL	(*( VADC_G0BFL_type *) 0xf00214c8u)	/* Boundary Flag Register, Group 4 */
#define VADC_G5BFL	(*( VADC_G0BFL_type *) 0xf00218c8u)	/* Boundary Flag Register, Group 5 */
#define VADC_G6BFL	(*( VADC_G0BFL_type *) 0xf0021cc8u)	/* Boundary Flag Register, Group 6 */
#define VADC_G7BFL	(*( VADC_G0BFL_type *) 0xf00220c8u)	/* Boundary Flag Register, Group 7 */

typedef volatile union
{
	struct
	{ 
		unsigned int BFM0           : 4;	/* Boundary Flag y Mode Control */
		unsigned int BFM1           : 4;	/* Boundary Flag y Mode Control */
		unsigned int BFM2           : 4;	/* Boundary Flag y Mode Control */
		unsigned int BFM3           : 4;	/* Boundary Flag y Mode Control */
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} VADC_G0BFLC_type;
#define VADC_G0BFLC	(*( VADC_G0BFLC_type *) 0xf00204d0u)	/* Boundary Flag Control Register, Group 0 */
#define VADC_G1BFLC	(*( VADC_G0BFLC_type *) 0xf00208d0u)	/* Boundary Flag Control Register, Group 1 */
#define VADC_G2BFLC	(*( VADC_G0BFLC_type *) 0xf0020cd0u)	/* Boundary Flag Control Register, Group 2 */
#define VADC_G3BFLC	(*( VADC_G0BFLC_type *) 0xf00210d0u)	/* Boundary Flag Control Register, Group 3 */
#define VADC_G4BFLC	(*( VADC_G0BFLC_type *) 0xf00214d0u)	/* Boundary Flag Control Register, Group 4 */
#define VADC_G5BFLC	(*( VADC_G0BFLC_type *) 0xf00218d0u)	/* Boundary Flag Control Register, Group 5 */
#define VADC_G6BFLC	(*( VADC_G0BFLC_type *) 0xf0021cd0u)	/* Boundary Flag Control Register, Group 6 */
#define VADC_G7BFLC	(*( VADC_G0BFLC_type *) 0xf00220d0u)	/* Boundary Flag Control Register, Group 7 */

typedef volatile union
{
	struct
	{ 
		unsigned int BFL0NP         : 4;	/* Boundary Flag y Node Pointer */
		unsigned int BFL1NP         : 4;	/* Boundary Flag y Node Pointer */
		unsigned int BFL2NP         : 4;	/* Boundary Flag y Node Pointer */
		unsigned int BFL3NP         : 4;	/* Boundary Flag y Node Pointer */
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} VADC_G0BFLNP_type;
#define VADC_G0BFLNP	(*( VADC_G0BFLNP_type *) 0xf00204d4u)	/* Boundary Flag Node Pointer Register, Group 0 */
#define VADC_G1BFLNP	(*( VADC_G0BFLNP_type *) 0xf00208d4u)	/* Boundary Flag Node Pointer Register, Group 1 */
#define VADC_G2BFLNP	(*( VADC_G0BFLNP_type *) 0xf0020cd4u)	/* Boundary Flag Node Pointer Register, Group 2 */
#define VADC_G3BFLNP	(*( VADC_G0BFLNP_type *) 0xf00210d4u)	/* Boundary Flag Node Pointer Register, Group 3 */
#define VADC_G4BFLNP	(*( VADC_G0BFLNP_type *) 0xf00214d4u)	/* Boundary Flag Node Pointer Register, Group 4 */
#define VADC_G5BFLNP	(*( VADC_G0BFLNP_type *) 0xf00218d4u)	/* Boundary Flag Node Pointer Register, Group 5 */
#define VADC_G6BFLNP	(*( VADC_G0BFLNP_type *) 0xf0021cd4u)	/* Boundary Flag Node Pointer Register, Group 6 */
#define VADC_G7BFLNP	(*( VADC_G0BFLNP_type *) 0xf00220d4u)	/* Boundary Flag Node Pointer Register, Group 7 */

typedef volatile union
{
	struct
	{ 
		unsigned int BFC0           : 1;	/* Boundary Flag 0 Clear */
		unsigned int BFC1           : 1;	/* Boundary Flag 1 Clear */
		unsigned int BFC2           : 1;	/* Boundary Flag 2 Clear */
		unsigned int BFC3           : 1;	/* Boundary Flag 3 Clear */
		unsigned int                : 12;
		unsigned int BFS0           : 1;	/* Boundary Flag 0 Set */
		unsigned int BFS1           : 1;	/* Boundary Flag 1 Set */
		unsigned int BFS2           : 1;	/* Boundary Flag 2 Set */
		unsigned int BFS3           : 1;	/* Boundary Flag 3 Set */
		unsigned int                : 12;
	} B;
	int I;
	unsigned int U;

} VADC_G0BFLS_type;
#define VADC_G0BFLS	(*( VADC_G0BFLS_type *) 0xf00204ccu)	/* Boundary Flag Software Register, Group 0 */
#define VADC_G1BFLS	(*( VADC_G0BFLS_type *) 0xf00208ccu)	/* Boundary Flag Software Register, Group 1 */
#define VADC_G2BFLS	(*( VADC_G0BFLS_type *) 0xf0020cccu)	/* Boundary Flag Software Register, Group 2 */
#define VADC_G3BFLS	(*( VADC_G0BFLS_type *) 0xf00210ccu)	/* Boundary Flag Software Register, Group 3 */
#define VADC_G4BFLS	(*( VADC_G0BFLS_type *) 0xf00214ccu)	/* Boundary Flag Software Register, Group 4 */
#define VADC_G5BFLS	(*( VADC_G0BFLS_type *) 0xf00218ccu)	/* Boundary Flag Software Register, Group 5 */
#define VADC_G6BFLS	(*( VADC_G0BFLS_type *) 0xf0021cccu)	/* Boundary Flag Software Register, Group 6 */
#define VADC_G7BFLS	(*( VADC_G0BFLS_type *) 0xf00220ccu)	/* Boundary Flag Software Register, Group 7 */

typedef volatile union
{
	struct
	{ 
		unsigned int BOUNDARY0      : 12;	/* Boundary Value 0 for Limit Checking */
		unsigned int                : 4;
		unsigned int BOUNDARY1      : 12;	/* Boundary Value 1 for Limit Checking */
		unsigned int                : 4;
	} B;
	int I;
	unsigned int U;

} VADC_G0BOUND_type;
#define VADC_G0BOUND	(*( VADC_G0BOUND_type *) 0xf00204b8u)	/* Boundary Select Register, Group 0 */
#define VADC_G1BOUND	(*( VADC_G0BOUND_type *) 0xf00208b8u)	/* Boundary Select Register, Group 1 */
#define VADC_G2BOUND	(*( VADC_G0BOUND_type *) 0xf0020cb8u)	/* Boundary Select Register, Group 2 */
#define VADC_G3BOUND	(*( VADC_G0BOUND_type *) 0xf00210b8u)	/* Boundary Select Register, Group 3 */
#define VADC_G4BOUND	(*( VADC_G0BOUND_type *) 0xf00214b8u)	/* Boundary Select Register, Group 4 */
#define VADC_G5BOUND	(*( VADC_G0BOUND_type *) 0xf00218b8u)	/* Boundary Select Register, Group 5 */
#define VADC_G6BOUND	(*( VADC_G0BOUND_type *) 0xf0021cb8u)	/* Boundary Select Register, Group 6 */
#define VADC_G7BOUND	(*( VADC_G0BOUND_type *) 0xf00220b8u)	/* Boundary Select Register, Group 7 */
#define VADC_GLOBBOUND	(*( VADC_G0BOUND_type *) 0xf00200b8u)	/* Global Boundary Select Register */

typedef volatile union
{
	struct
	{ 
		unsigned int CEV0           : 1;	/* Clear Channel Event for Channel 0 */
		unsigned int CEV1           : 1;	/* Clear Channel Event for Channel 1 */
		unsigned int CEV2           : 1;	/* Clear Channel Event for Channel 2 */
		unsigned int CEV3           : 1;	/* Clear Channel Event for Channel 3 */
		unsigned int CEV4           : 1;	/* Clear Channel Event for Channel 4 */
		unsigned int CEV5           : 1;	/* Clear Channel Event for Channel 5 */
		unsigned int CEV6           : 1;	/* Clear Channel Event for Channel 6 */
		unsigned int CEV7           : 1;	/* Clear Channel Event for Channel 7 */
		unsigned int                : 24;
	} B;
	int I;
	unsigned int U;

} VADC_G0CEFCLR_type;
#define VADC_G0CEFCLR	(*( VADC_G0CEFCLR_type *) 0xf0020590u)	/* Channel Event Flag Clear Register, Group 0 */
#define VADC_G1CEFCLR	(*( VADC_G0CEFCLR_type *) 0xf0020990u)	/* Channel Event Flag Clear Register, Group 1 */
#define VADC_G2CEFCLR	(*( VADC_G0CEFCLR_type *) 0xf0020d90u)	/* Channel Event Flag Clear Register, Group 2 */
#define VADC_G3CEFCLR	(*( VADC_G0CEFCLR_type *) 0xf0021190u)	/* Channel Event Flag Clear Register, Group 3 */
#define VADC_G4CEFCLR	(*( VADC_G0CEFCLR_type *) 0xf0021590u)	/* Channel Event Flag Clear Register, Group 4 */
#define VADC_G5CEFCLR	(*( VADC_G0CEFCLR_type *) 0xf0021990u)	/* Channel Event Flag Clear Register, Group 5 */
#define VADC_G6CEFCLR	(*( VADC_G0CEFCLR_type *) 0xf0021d90u)	/* Channel Event Flag Clear Register, Group 6 */
#define VADC_G7CEFCLR	(*( VADC_G0CEFCLR_type *) 0xf0022190u)	/* Channel Event Flag Clear Register, Group 7 */

typedef volatile union
{
	struct
	{ 
		unsigned int CEV0           : 1;	/* Channel Event for Channel 0 */
		unsigned int CEV1           : 1;	/* Channel Event for Channel 1 */
		unsigned int CEV2           : 1;	/* Channel Event for Channel 2 */
		unsigned int CEV3           : 1;	/* Channel Event for Channel 3 */
		unsigned int CEV4           : 1;	/* Channel Event for Channel 4 */
		unsigned int CEV5           : 1;	/* Channel Event for Channel 5 */
		unsigned int CEV6           : 1;	/* Channel Event for Channel 6 */
		unsigned int CEV7           : 1;	/* Channel Event for Channel 7 */
		unsigned int                : 24;
	} B;
	int I;
	unsigned int U;

} VADC_G0CEFLAG_type;
#define VADC_G0CEFLAG	(*( VADC_G0CEFLAG_type *) 0xf0020580u)	/* Channel Event Flag Register, Group 0 */
#define VADC_G1CEFLAG	(*( VADC_G0CEFLAG_type *) 0xf0020980u)	/* Channel Event Flag Register, Group 1 */
#define VADC_G2CEFLAG	(*( VADC_G0CEFLAG_type *) 0xf0020d80u)	/* Channel Event Flag Register, Group 2 */
#define VADC_G3CEFLAG	(*( VADC_G0CEFLAG_type *) 0xf0021180u)	/* Channel Event Flag Register, Group 3 */
#define VADC_G4CEFLAG	(*( VADC_G0CEFLAG_type *) 0xf0021580u)	/* Channel Event Flag Register, Group 4 */
#define VADC_G5CEFLAG	(*( VADC_G0CEFLAG_type *) 0xf0021980u)	/* Channel Event Flag Register, Group 5 */
#define VADC_G6CEFLAG	(*( VADC_G0CEFLAG_type *) 0xf0021d80u)	/* Channel Event Flag Register, Group 6 */
#define VADC_G7CEFLAG	(*( VADC_G0CEFLAG_type *) 0xf0022180u)	/* Channel Event Flag Register, Group 7 */

typedef volatile union
{
	struct
	{ 
		unsigned int CEV0NP         : 4;	/* Service Request Node Pointer Channel Event i */
		unsigned int CEV1NP         : 4;	/* Service Request Node Pointer Channel Event i */
		unsigned int CEV2NP         : 4;	/* Service Request Node Pointer Channel Event i */
		unsigned int CEV3NP         : 4;	/* Service Request Node Pointer Channel Event i */
		unsigned int CEV4NP         : 4;	/* Service Request Node Pointer Channel Event i */
		unsigned int CEV5NP         : 4;	/* Service Request Node Pointer Channel Event i */
		unsigned int CEV6NP         : 4;	/* Service Request Node Pointer Channel Event i */
		unsigned int CEV7NP         : 4;	/* Service Request Node Pointer Channel Event i */
	} B;
	int I;
	unsigned int U;

} VADC_G0CEVNP0_type;
#define VADC_G0CEVNP0	(*( VADC_G0CEVNP0_type *) 0xf00205a0u)	/* Channel Event Node Pointer Register 0, Group 0 */
#define VADC_G1CEVNP0	(*( VADC_G0CEVNP0_type *) 0xf00209a0u)	/* Channel Event Node Pointer Register 0, Group 1 */
#define VADC_G2CEVNP0	(*( VADC_G0CEVNP0_type *) 0xf0020da0u)	/* Channel Event Node Pointer Register 0, Group 2 */
#define VADC_G3CEVNP0	(*( VADC_G0CEVNP0_type *) 0xf00211a0u)	/* Channel Event Node Pointer Register 0, Group 3 */
#define VADC_G4CEVNP0	(*( VADC_G0CEVNP0_type *) 0xf00215a0u)	/* Channel Event Node Pointer Register 0, Group 4 */
#define VADC_G5CEVNP0	(*( VADC_G0CEVNP0_type *) 0xf00219a0u)	/* Channel Event Node Pointer Register 0, Group 5 */
#define VADC_G6CEVNP0	(*( VADC_G0CEVNP0_type *) 0xf0021da0u)	/* Channel Event Node Pointer Register 0, Group 6 */
#define VADC_G7CEVNP0	(*( VADC_G0CEVNP0_type *) 0xf00221a0u)	/* Channel Event Node Pointer Register 0, Group 7 */

typedef volatile union
{
	struct
	{ 
		unsigned int ASSCH0         : 1;	/* Assignment for Channel 0 */
		unsigned int ASSCH1         : 1;	/* Assignment for Channel 1 */
		unsigned int ASSCH2         : 1;	/* Assignment for Channel 2 */
		unsigned int ASSCH3         : 1;	/* Assignment for Channel 3 */
		unsigned int ASSCH4         : 1;	/* Assignment for Channel 4 */
		unsigned int ASSCH5         : 1;	/* Assignment for Channel 5 */
		unsigned int ASSCH6         : 1;	/* Assignment for Channel 6 */
		unsigned int ASSCH7         : 1;	/* Assignment for Channel 7 */
		unsigned int ASSCH8         : 1;	/* Assignment for Channel 8 */
		unsigned int ASSCH9         : 1;	/* Assignment for Channel 9 */
		unsigned int ASSCH10        : 1;	/* Assignment for Channel 10 */
		unsigned int ASSCH11        : 1;	/* Assignment for Channel 11 */
		unsigned int ASSCH12        : 1;	/* Assignment for Channel 12 */
		unsigned int ASSCH13        : 1;	/* Assignment for Channel 13 */
		unsigned int ASSCH14        : 1;	/* Assignment for Channel 14 */
		unsigned int ASSCH15        : 1;	/* Assignment for Channel 15 */
		unsigned int ASSCH16        : 1;	/* Assignment for Channel 16 */
		unsigned int ASSCH17        : 1;	/* Assignment for Channel 17 */
		unsigned int ASSCH18        : 1;	/* Assignment for Channel 18 */
		unsigned int ASSCH19        : 1;	/* Assignment for Channel 19 */
		unsigned int ASSCH20        : 1;	/* Assignment for Channel 20 */
		unsigned int ASSCH21        : 1;	/* Assignment for Channel 21 */
		unsigned int ASSCH22        : 1;	/* Assignment for Channel 22 */
		unsigned int ASSCH23        : 1;	/* Assignment for Channel 23 */
		unsigned int ASSCH24        : 1;	/* Assignment for Channel 24 */
		unsigned int ASSCH25        : 1;	/* Assignment for Channel 25 */
		unsigned int ASSCH26        : 1;	/* Assignment for Channel 26 */
		unsigned int ASSCH27        : 1;	/* Assignment for Channel 27 */
		unsigned int ASSCH28        : 1;	/* Assignment for Channel 28 */
		unsigned int ASSCH29        : 1;	/* Assignment for Channel 29 */
		unsigned int ASSCH30        : 1;	/* Assignment for Channel 30 */
		unsigned int ASSCH31        : 1;	/* Assignment for Channel 31 */
	} B;
	int I;
	unsigned int U;

} VADC_G0CHASS_type;
#define VADC_G0CHASS	(*( VADC_G0CHASS_type *) 0xf0020488u)	/* Channel Assignment Register, Group 0 */
#define VADC_G1CHASS	(*( VADC_G0CHASS_type *) 0xf0020888u)	/* Channel Assignment Register, Group 1 */
#define VADC_G2CHASS	(*( VADC_G0CHASS_type *) 0xf0020c88u)	/* Channel Assignment Register, Group 2 */
#define VADC_G3CHASS	(*( VADC_G0CHASS_type *) 0xf0021088u)	/* Channel Assignment Register, Group 3 */
#define VADC_G4CHASS	(*( VADC_G0CHASS_type *) 0xf0021488u)	/* Channel Assignment Register, Group 4 */
#define VADC_G5CHASS	(*( VADC_G0CHASS_type *) 0xf0021888u)	/* Channel Assignment Register, Group 5 */
#define VADC_G6CHASS	(*( VADC_G0CHASS_type *) 0xf0021c88u)	/* Channel Assignment Register, Group 6 */
#define VADC_G7CHASS	(*( VADC_G0CHASS_type *) 0xf0022088u)	/* Channel Assignment Register, Group 7 */

typedef volatile union
{
	struct
	{ 
		unsigned int ICLSEL         : 2;	/* Input Class Select */
		unsigned int                : 2;
		unsigned int BNDSELL        : 2;	/* Lower Boundary Select */
		unsigned int BNDSELU        : 2;	/* Upper Boundary Select */
		unsigned int CHEVMODE       : 2;	/* Channel Event Mode */
		unsigned int SYNC           : 1;	/* Synchronization Request */
		unsigned int REFSEL         : 1;	/* Reference Input Selection */
		unsigned int BNDSELX        : 4;	/* BoundaryExtension */
		unsigned int RESREG         : 4;	/* Result Register */
		unsigned int RESTBS         : 1;	/* Result Target for Background Source */
		unsigned int RESPOS         : 1;	/* Result Position */
		unsigned int                : 6;
		unsigned int BWDCH          : 2;	/* Broken Wire Detection Channel */
		unsigned int BWDEN          : 1;	/* Broken Wire Detection Enable */
		unsigned int                : 1;
	} B;
	int I;
	unsigned int U;

} VADC_G0CHCTR0_type;
#define VADC_G0CHCTR0	(*( VADC_G0CHCTR0_type *) 0xf0020600u)	/* Group 0, Channel 0 Ctrl. Reg. */
#define VADC_G0CHCTR1	(*( VADC_G0CHCTR0_type *) 0xf0020604u)	/* Group 0, Channel 1 Ctrl. Reg. */
#define VADC_G0CHCTR2	(*( VADC_G0CHCTR0_type *) 0xf0020608u)	/* Group 0, Channel 2 Ctrl. Reg. */
#define VADC_G0CHCTR3	(*( VADC_G0CHCTR0_type *) 0xf002060cu)	/* Group 0, Channel 3 Ctrl. Reg. */
#define VADC_G0CHCTR4	(*( VADC_G0CHCTR0_type *) 0xf0020610u)	/* Group 0, Channel 4 Ctrl. Reg. */
#define VADC_G0CHCTR5	(*( VADC_G0CHCTR0_type *) 0xf0020614u)	/* Group 0, Channel 5 Ctrl. Reg. */
#define VADC_G0CHCTR6	(*( VADC_G0CHCTR0_type *) 0xf0020618u)	/* Group 0, Channel 6 Ctrl. Reg. */
#define VADC_G0CHCTR7	(*( VADC_G0CHCTR0_type *) 0xf002061cu)	/* Group 0, Channel 7 Ctrl. Reg. */
#define VADC_G1CHCTR0	(*( VADC_G0CHCTR0_type *) 0xf0020a00u)	/* Group 1, Channel 0 Ctrl. Reg. */
#define VADC_G1CHCTR1	(*( VADC_G0CHCTR0_type *) 0xf0020a04u)	/* Group 1, Channel 1 Ctrl. Reg. */
#define VADC_G1CHCTR2	(*( VADC_G0CHCTR0_type *) 0xf0020a08u)	/* Group 1, Channel 2 Ctrl. Reg. */
#define VADC_G1CHCTR3	(*( VADC_G0CHCTR0_type *) 0xf0020a0cu)	/* Group 1, Channel 3 Ctrl. Reg. */
#define VADC_G1CHCTR4	(*( VADC_G0CHCTR0_type *) 0xf0020a10u)	/* Group 1, Channel 4 Ctrl. Reg. */
#define VADC_G1CHCTR5	(*( VADC_G0CHCTR0_type *) 0xf0020a14u)	/* Group 1, Channel 5 Ctrl. Reg. */
#define VADC_G1CHCTR6	(*( VADC_G0CHCTR0_type *) 0xf0020a18u)	/* Group 1, Channel 6 Ctrl. Reg. */
#define VADC_G1CHCTR7	(*( VADC_G0CHCTR0_type *) 0xf0020a1cu)	/* Group 1, Channel 7 Ctrl. Reg. */
#define VADC_G2CHCTR0	(*( VADC_G0CHCTR0_type *) 0xf0020e00u)	/* Group 2, Channel 0 Ctrl. Reg. */
#define VADC_G2CHCTR1	(*( VADC_G0CHCTR0_type *) 0xf0020e04u)	/* Group 2, Channel 1 Ctrl. Reg. */
#define VADC_G2CHCTR2	(*( VADC_G0CHCTR0_type *) 0xf0020e08u)	/* Group 2, Channel 2 Ctrl. Reg. */
#define VADC_G2CHCTR3	(*( VADC_G0CHCTR0_type *) 0xf0020e0cu)	/* Group 2, Channel 3 Ctrl. Reg. */
#define VADC_G2CHCTR4	(*( VADC_G0CHCTR0_type *) 0xf0020e10u)	/* Group 2, Channel 4 Ctrl. Reg. */
#define VADC_G2CHCTR5	(*( VADC_G0CHCTR0_type *) 0xf0020e14u)	/* Group 2, Channel 5 Ctrl. Reg. */
#define VADC_G2CHCTR6	(*( VADC_G0CHCTR0_type *) 0xf0020e18u)	/* Group 2, Channel 6 Ctrl. Reg. */
#define VADC_G2CHCTR7	(*( VADC_G0CHCTR0_type *) 0xf0020e1cu)	/* Group 2, Channel 7 Ctrl. Reg. */
#define VADC_G3CHCTR0	(*( VADC_G0CHCTR0_type *) 0xf0021200u)	/* Group 3, Channel 0 Ctrl. Reg. */
#define VADC_G3CHCTR1	(*( VADC_G0CHCTR0_type *) 0xf0021204u)	/* Group 3, Channel 1 Ctrl. Reg. */
#define VADC_G3CHCTR2	(*( VADC_G0CHCTR0_type *) 0xf0021208u)	/* Group 3, Channel 2 Ctrl. Reg. */
#define VADC_G3CHCTR3	(*( VADC_G0CHCTR0_type *) 0xf002120cu)	/* Group 3, Channel 3 Ctrl. Reg. */
#define VADC_G3CHCTR4	(*( VADC_G0CHCTR0_type *) 0xf0021210u)	/* Group 3, Channel 4 Ctrl. Reg. */
#define VADC_G3CHCTR5	(*( VADC_G0CHCTR0_type *) 0xf0021214u)	/* Group 3, Channel 5 Ctrl. Reg. */
#define VADC_G3CHCTR6	(*( VADC_G0CHCTR0_type *) 0xf0021218u)	/* Group 3, Channel 6 Ctrl. Reg. */
#define VADC_G3CHCTR7	(*( VADC_G0CHCTR0_type *) 0xf002121cu)	/* Group 3, Channel 7 Ctrl. Reg. */
#define VADC_G4CHCTR0	(*( VADC_G0CHCTR0_type *) 0xf0021600u)	/* Group 4, Channel 0 Ctrl. Reg. */
#define VADC_G4CHCTR1	(*( VADC_G0CHCTR0_type *) 0xf0021604u)	/* Group 4, Channel 1 Ctrl. Reg. */
#define VADC_G4CHCTR2	(*( VADC_G0CHCTR0_type *) 0xf0021608u)	/* Group 4, Channel 2 Ctrl. Reg. */
#define VADC_G4CHCTR3	(*( VADC_G0CHCTR0_type *) 0xf002160cu)	/* Group 4, Channel 3 Ctrl. Reg. */
#define VADC_G4CHCTR4	(*( VADC_G0CHCTR0_type *) 0xf0021610u)	/* Group 4, Channel 4 Ctrl. Reg. */
#define VADC_G4CHCTR5	(*( VADC_G0CHCTR0_type *) 0xf0021614u)	/* Group 4, Channel 5 Ctrl. Reg. */
#define VADC_G4CHCTR6	(*( VADC_G0CHCTR0_type *) 0xf0021618u)	/* Group 4, Channel 6 Ctrl. Reg. */
#define VADC_G4CHCTR7	(*( VADC_G0CHCTR0_type *) 0xf002161cu)	/* Group 4, Channel 7 Ctrl. Reg. */
#define VADC_G5CHCTR0	(*( VADC_G0CHCTR0_type *) 0xf0021a00u)	/* Group 5, Channel 0 Ctrl. Reg. */
#define VADC_G5CHCTR1	(*( VADC_G0CHCTR0_type *) 0xf0021a04u)	/* Group 5, Channel 1 Ctrl. Reg. */
#define VADC_G5CHCTR2	(*( VADC_G0CHCTR0_type *) 0xf0021a08u)	/* Group 5, Channel 2 Ctrl. Reg. */
#define VADC_G5CHCTR3	(*( VADC_G0CHCTR0_type *) 0xf0021a0cu)	/* Group 5, Channel 3 Ctrl. Reg. */
#define VADC_G5CHCTR4	(*( VADC_G0CHCTR0_type *) 0xf0021a10u)	/* Group 5, Channel 4 Ctrl. Reg. */
#define VADC_G5CHCTR5	(*( VADC_G0CHCTR0_type *) 0xf0021a14u)	/* Group 5, Channel 5 Ctrl. Reg. */
#define VADC_G5CHCTR6	(*( VADC_G0CHCTR0_type *) 0xf0021a18u)	/* Group 5, Channel 6 Ctrl. Reg. */
#define VADC_G5CHCTR7	(*( VADC_G0CHCTR0_type *) 0xf0021a1cu)	/* Group 5, Channel 7 Ctrl. Reg. */
#define VADC_G6CHCTR0	(*( VADC_G0CHCTR0_type *) 0xf0021e00u)	/* Group 6, Channel 0 Ctrl. Reg. */
#define VADC_G6CHCTR1	(*( VADC_G0CHCTR0_type *) 0xf0021e04u)	/* Group 6, Channel 1 Ctrl. Reg. */
#define VADC_G6CHCTR2	(*( VADC_G0CHCTR0_type *) 0xf0021e08u)	/* Group 6, Channel 2 Ctrl. Reg. */
#define VADC_G6CHCTR3	(*( VADC_G0CHCTR0_type *) 0xf0021e0cu)	/* Group 6, Channel 3 Ctrl. Reg. */
#define VADC_G6CHCTR4	(*( VADC_G0CHCTR0_type *) 0xf0021e10u)	/* Group 6, Channel 4 Ctrl. Reg. */
#define VADC_G6CHCTR5	(*( VADC_G0CHCTR0_type *) 0xf0021e14u)	/* Group 6, Channel 5 Ctrl. Reg. */
#define VADC_G6CHCTR6	(*( VADC_G0CHCTR0_type *) 0xf0021e18u)	/* Group 6, Channel 6 Ctrl. Reg. */
#define VADC_G6CHCTR7	(*( VADC_G0CHCTR0_type *) 0xf0021e1cu)	/* Group 6, Channel 7 Ctrl. Reg. */
#define VADC_G7CHCTR0	(*( VADC_G0CHCTR0_type *) 0xf0022200u)	/* Group 7, Channel 0 Ctrl. Reg. */
#define VADC_G7CHCTR1	(*( VADC_G0CHCTR0_type *) 0xf0022204u)	/* Group 7, Channel 1 Ctrl. Reg. */
#define VADC_G7CHCTR2	(*( VADC_G0CHCTR0_type *) 0xf0022208u)	/* Group 7, Channel 2 Ctrl. Reg. */
#define VADC_G7CHCTR3	(*( VADC_G0CHCTR0_type *) 0xf002220cu)	/* Group 7, Channel 3 Ctrl. Reg. */
#define VADC_G7CHCTR4	(*( VADC_G0CHCTR0_type *) 0xf0022210u)	/* Group 7, Channel 4 Ctrl. Reg. */
#define VADC_G7CHCTR5	(*( VADC_G0CHCTR0_type *) 0xf0022214u)	/* Group 7, Channel 5 Ctrl. Reg. */
#define VADC_G7CHCTR6	(*( VADC_G0CHCTR0_type *) 0xf0022218u)	/* Group 7, Channel 6 Ctrl. Reg. */
#define VADC_G7CHCTR7	(*( VADC_G0CHCTR0_type *) 0xf002221cu)	/* Group 7, Channel 7 Ctrl. Reg. */

typedef volatile union
{
	struct
	{ 
		unsigned int EMUXSET        : 3;	/* External Multiplexer Start Selection */
		unsigned int                : 5;
		/* const */ unsigned int EMUXACT        : 3;	/* External Multiplexer Actual Selection */
		unsigned int                : 5;
		unsigned int EMUXCH         : 10;	/* External Multiplexer Channel Select */
		unsigned int EMUXMODE       : 2;	/* External Multiplexer Mode */
		unsigned int EMXCOD         : 1;	/* External Multiplexer Coding Scheme */
		unsigned int EMXST          : 1;	/* External Multiplexer Sample Time Control */
		/* const */ unsigned int EMXCSS         : 1;	/* External Multiplexer Channel Selection Style */
		unsigned int EMXWC          : 1;	/* Write Control for EMUX Configuration */
	} B;
	int I;
	unsigned int U;

} VADC_G0EMUXCTR_type;
#define VADC_G0EMUXCTR	(*( VADC_G0EMUXCTR_type *) 0xf00205f0u)	/* E0ternal Multiplexer Control Register, Group x */
#define VADC_G1EMUXCTR	(*( VADC_G0EMUXCTR_type *) 0xf00209f0u)	/* E1ternal Multiplexer Control Register, Group x */
#define VADC_G2EMUXCTR	(*( VADC_G0EMUXCTR_type *) 0xf0020df0u)	/* E2ternal Multiplexer Control Register, Group x */
#define VADC_G3EMUXCTR	(*( VADC_G0EMUXCTR_type *) 0xf00211f0u)	/* E3ternal Multiplexer Control Register, Group x */
#define VADC_G4EMUXCTR	(*( VADC_G0EMUXCTR_type *) 0xf00215f0u)	/* E4ternal Multiplexer Control Register, Group x */
#define VADC_G5EMUXCTR	(*( VADC_G0EMUXCTR_type *) 0xf00219f0u)	/* E5ternal Multiplexer Control Register, Group x */
#define VADC_G6EMUXCTR	(*( VADC_G0EMUXCTR_type *) 0xf0021df0u)	/* E6ternal Multiplexer Control Register, Group x */
#define VADC_G7EMUXCTR	(*( VADC_G0EMUXCTR_type *) 0xf00221f0u)	/* E7ternal Multiplexer Control Register, Group x */

typedef volatile union
{
	struct
	{ 
		unsigned int STCS           : 5;	/* Sample Time Control for Standard Conversions */
		unsigned int                : 3;
		unsigned int CMS            : 3;	/* Conversion Mode for Standard Conversions */
		unsigned int                : 5;
		unsigned int STCE           : 5;	/* Sample Time Control for EMUX Conversions */
		unsigned int                : 3;
		unsigned int CME            : 3;	/* Conversion Mode for EMUX Conversions */
		unsigned int                : 5;
	} B;
	int I;
	unsigned int U;

} VADC_G0ICLASS0_type;
#define VADC_G0ICLASS0	(*( VADC_G0ICLASS0_type *) 0xf00204a0u)	/* Input Class Register 0, Group 0 */
#define VADC_G0ICLASS1	(*( VADC_G0ICLASS0_type *) 0xf00204a4u)	/* Input Class Register 1, Group 0 */
#define VADC_G1ICLASS0	(*( VADC_G0ICLASS0_type *) 0xf00208a0u)	/* Input Class Register 0, Group 1 */
#define VADC_G1ICLASS1	(*( VADC_G0ICLASS0_type *) 0xf00208a4u)	/* Input Class Register 1, Group 1 */
#define VADC_G2ICLASS0	(*( VADC_G0ICLASS0_type *) 0xf0020ca0u)	/* Input Class Register 0, Group 2 */
#define VADC_G2ICLASS1	(*( VADC_G0ICLASS0_type *) 0xf0020ca4u)	/* Input Class Register 1, Group 2 */
#define VADC_G3ICLASS0	(*( VADC_G0ICLASS0_type *) 0xf00210a0u)	/* Input Class Register 0, Group 3 */
#define VADC_G3ICLASS1	(*( VADC_G0ICLASS0_type *) 0xf00210a4u)	/* Input Class Register 1, Group 3 */
#define VADC_G4ICLASS0	(*( VADC_G0ICLASS0_type *) 0xf00214a0u)	/* Input Class Register 0, Group 4 */
#define VADC_G4ICLASS1	(*( VADC_G0ICLASS0_type *) 0xf00214a4u)	/* Input Class Register 1, Group 4 */
#define VADC_G5ICLASS0	(*( VADC_G0ICLASS0_type *) 0xf00218a0u)	/* Input Class Register 0, Group 5 */
#define VADC_G5ICLASS1	(*( VADC_G0ICLASS0_type *) 0xf00218a4u)	/* Input Class Register 1, Group 5 */
#define VADC_G6ICLASS0	(*( VADC_G0ICLASS0_type *) 0xf0021ca0u)	/* Input Class Register 0, Group 6 */
#define VADC_G6ICLASS1	(*( VADC_G0ICLASS0_type *) 0xf0021ca4u)	/* Input Class Register 1, Group 6 */
#define VADC_G7ICLASS0	(*( VADC_G0ICLASS0_type *) 0xf00220a0u)	/* Input Class Register 0, Group 7 */
#define VADC_G7ICLASS1	(*( VADC_G0ICLASS0_type *) 0xf00220a4u)	/* Input Class Register 1, Group 7 */
#define VADC_GLOBICLASS0	(*( VADC_G0ICLASS0_type *) 0xf00200a0u)	/* Input Class Register 0, Global */
#define VADC_GLOBICLASS1	(*( VADC_G0ICLASS0_type *) 0xf00200a4u)	/* Input Class Register 1, Global */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int REQCHNR        : 5;	/* Request Channel Number */
		/* const */ unsigned int RF             : 1;	/* Refill */
		/* const */ unsigned int ENSI           : 1;	/* Enable Source Interrupt */
		/* const */ unsigned int EXTR           : 1;	/* External Trigger */
		/* const */ unsigned int V              : 1;	/* Request Channel Number Valid */
		/* const */ unsigned int                : 23;
	} B;
	int I;
	unsigned int U;

} VADC_G0Q0R0_type;
#define VADC_G0Q0R0	(*( VADC_G0Q0R0_type *) 0xf002050cu)	/* Queue 0 Register 0, Group 0 */
#define VADC_G1Q0R0	(*( VADC_G0Q0R0_type *) 0xf002090cu)	/* Queue 0 Register 0, Group 1 */
#define VADC_G2Q0R0	(*( VADC_G0Q0R0_type *) 0xf0020d0cu)	/* Queue 0 Register 0, Group 2 */
#define VADC_G3Q0R0	(*( VADC_G0Q0R0_type *) 0xf002110cu)	/* Queue 0 Register 0, Group 3 */
#define VADC_G4Q0R0	(*( VADC_G0Q0R0_type *) 0xf002150cu)	/* Queue 0 Register 0, Group 4 */
#define VADC_G5Q0R0	(*( VADC_G0Q0R0_type *) 0xf002190cu)	/* Queue 0 Register 0, Group 5 */
#define VADC_G6Q0R0	(*( VADC_G0Q0R0_type *) 0xf0021d0cu)	/* Queue 0 Register 0, Group 6 */
#define VADC_G7Q0R0	(*( VADC_G0Q0R0_type *) 0xf002210cu)	/* Queue 0 Register 0, Group 7 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int REQCHNR        : 5;	/* Request Channel Number */
		/* const */ unsigned int RF             : 1;	/* Refill */
		/* const */ unsigned int ENSI           : 1;	/* Enable Source Interrupt */
		/* const */ unsigned int EXTR           : 1;	/* External Trigger */
		/* const */ unsigned int V              : 1;	/* Request Channel Number Valid */
		/* const */ unsigned int                : 23;
	} B;
	int I;
	unsigned int U;

} VADC_G0QBUR0_type;
#define VADC_G0QBUR0	(*( VADC_G0QBUR0_type *) 0xf0020510u)	/* Queue 0 Backup Register, Group 0 */
#define VADC_G1QBUR0	(*( VADC_G0QBUR0_type *) 0xf0020910u)	/* Queue 0 Backup Register, Group 1 */
#define VADC_G2QBUR0	(*( VADC_G0QBUR0_type *) 0xf0020d10u)	/* Queue 0 Backup Register, Group 2 */
#define VADC_G3QBUR0	(*( VADC_G0QBUR0_type *) 0xf0021110u)	/* Queue 0 Backup Register, Group 3 */
#define VADC_G4QBUR0	(*( VADC_G0QBUR0_type *) 0xf0021510u)	/* Queue 0 Backup Register, Group 4 */
#define VADC_G5QBUR0	(*( VADC_G0QBUR0_type *) 0xf0021910u)	/* Queue 0 Backup Register, Group 5 */
#define VADC_G6QBUR0	(*( VADC_G0QBUR0_type *) 0xf0021d10u)	/* Queue 0 Backup Register, Group 6 */
#define VADC_G7QBUR0	(*( VADC_G0QBUR0_type *) 0xf0022110u)	/* Queue 0 Backup Register, Group 7 */

typedef volatile union
{
	struct
	{ 
		unsigned int REQCHNR        : 5;	/* Request Channel Number */
		unsigned int RF             : 1;	/* Refill */
		unsigned int ENSI           : 1;	/* Enable Source Interrupt */
		unsigned int EXTR           : 1;	/* External Trigger */
		unsigned int                : 24;
	} B;
	int I;
	unsigned int U;

} VADC_G0QINR0_type;
#define VADC_G0QINR0	(*( VADC_G0QINR0_type *) 0xf0020510u)	/* Queue 0 Input Register, Group 0 */
#define VADC_G1QINR0	(*( VADC_G0QINR0_type *) 0xf0020910u)	/* Queue 0 Input Register, Group 1 */
#define VADC_G2QINR0	(*( VADC_G0QINR0_type *) 0xf0020d10u)	/* Queue 0 Input Register, Group 2 */
#define VADC_G3QINR0	(*( VADC_G0QINR0_type *) 0xf0021110u)	/* Queue 0 Input Register, Group 3 */
#define VADC_G4QINR0	(*( VADC_G0QINR0_type *) 0xf0021510u)	/* Queue 0 Input Register, Group 4 */
#define VADC_G5QINR0	(*( VADC_G0QINR0_type *) 0xf0021910u)	/* Queue 0 Input Register, Group 5 */
#define VADC_G6QINR0	(*( VADC_G0QINR0_type *) 0xf0021d10u)	/* Queue 0 Input Register, Group 6 */
#define VADC_G7QINR0	(*( VADC_G0QINR0_type *) 0xf0022110u)	/* Queue 0 Input Register, Group 7 */

typedef volatile union
{
	struct
	{ 
		unsigned int ENGT           : 2;	/* Enable Gate */
		unsigned int ENTR           : 1;	/* Enable External Trigger */
		unsigned int                : 5;
		unsigned int CLRV           : 1;	/* Clear Valid Bit */
		unsigned int TREV           : 1;	/* Trigger Event */
		unsigned int FLUSH          : 1;	/* Flush Queue */
		unsigned int CEV            : 1;	/* Clear Event Flag */
		unsigned int                : 4;
		unsigned int RPTDIS         : 1;	/* Repeat Disable */
		unsigned int                : 15;
	} B;
	int I;
	unsigned int U;

} VADC_G0QMR0_type;
#define VADC_G0QMR0	(*( VADC_G0QMR0_type *) 0xf0020504u)	/* Queue 0 Mode Register, Group 0 */
#define VADC_G1QMR0	(*( VADC_G0QMR0_type *) 0xf0020904u)	/* Queue 0 Mode Register, Group 1 */
#define VADC_G2QMR0	(*( VADC_G0QMR0_type *) 0xf0020d04u)	/* Queue 0 Mode Register, Group 2 */
#define VADC_G3QMR0	(*( VADC_G0QMR0_type *) 0xf0021104u)	/* Queue 0 Mode Register, Group 3 */
#define VADC_G4QMR0	(*( VADC_G0QMR0_type *) 0xf0021504u)	/* Queue 0 Mode Register, Group 4 */
#define VADC_G5QMR0	(*( VADC_G0QMR0_type *) 0xf0021904u)	/* Queue 0 Mode Register, Group 5 */
#define VADC_G6QMR0	(*( VADC_G0QMR0_type *) 0xf0021d04u)	/* Queue 0 Mode Register, Group 6 */
#define VADC_G7QMR0	(*( VADC_G0QMR0_type *) 0xf0022104u)	/* Queue 0 Mode Register, Group 7 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int FILL           : 4;	/* Filling Level for Queue 0 */
		/* const */ unsigned int                : 1;
		/* const */ unsigned int EMPTY          : 1;	/* Queue Empty */
		/* const */ unsigned int                : 1;
		/* const */ unsigned int REQGT          : 1;	/* Request Gate Level */
		/* const */ unsigned int EV             : 1;	/* Event Detected */
		/* const */ unsigned int                : 23;
	} B;
	int I;
	unsigned int U;

} VADC_G0QSR0_type;
#define VADC_G0QSR0	(*( VADC_G0QSR0_type *) 0xf0020508u)	/* Queue 0 Status Register, Group 0 */
#define VADC_G1QSR0	(*( VADC_G0QSR0_type *) 0xf0020908u)	/* Queue 0 Status Register, Group 1 */
#define VADC_G2QSR0	(*( VADC_G0QSR0_type *) 0xf0020d08u)	/* Queue 0 Status Register, Group 2 */
#define VADC_G3QSR0	(*( VADC_G0QSR0_type *) 0xf0021108u)	/* Queue 0 Status Register, Group 3 */
#define VADC_G4QSR0	(*( VADC_G0QSR0_type *) 0xf0021508u)	/* Queue 0 Status Register, Group 4 */
#define VADC_G5QSR0	(*( VADC_G0QSR0_type *) 0xf0021908u)	/* Queue 0 Status Register, Group 5 */
#define VADC_G6QSR0	(*( VADC_G0QSR0_type *) 0xf0021d08u)	/* Queue 0 Status Register, Group 6 */
#define VADC_G7QSR0	(*( VADC_G0QSR0_type *) 0xf0022108u)	/* Queue 0 Status Register, Group 7 */

typedef volatile union
{
	struct
	{ 
		unsigned int                : 16;
		unsigned int DRCTR          : 4;	/* Data Reduction Control */
		unsigned int DMM            : 2;	/* Data Modification Mode */
		unsigned int                : 2;
		unsigned int WFR            : 1;	/* Wait-for-Read Mode Enable */
		unsigned int FEN            : 2;	/* FIFO Mode Enable */
		unsigned int                : 4;
		unsigned int SRGEN          : 1;	/* Service Request Generation Enable */
	} B;
	int I;
	unsigned int U;

} VADC_G0RCR0_type;
#define VADC_G0RCR0	(*( VADC_G0RCR0_type *) 0xf0020680u)	/* Group 0 Result Control Reg. 0 */
#define VADC_G0RCR1	(*( VADC_G0RCR0_type *) 0xf0020684u)	/* Group 0 Result Control Reg. 1 */
#define VADC_G0RCR10	(*( VADC_G0RCR0_type *) 0xf00206a8u)	/* Group 0 Result Control Reg. 10 */
#define VADC_G0RCR11	(*( VADC_G0RCR0_type *) 0xf00206acu)	/* Group 0 Result Control Reg. 11 */
#define VADC_G0RCR12	(*( VADC_G0RCR0_type *) 0xf00206b0u)	/* Group 0 Result Control Reg. 12 */
#define VADC_G0RCR13	(*( VADC_G0RCR0_type *) 0xf00206b4u)	/* Group 0 Result Control Reg. 13 */
#define VADC_G0RCR14	(*( VADC_G0RCR0_type *) 0xf00206b8u)	/* Group 0 Result Control Reg. 14 */
#define VADC_G0RCR15	(*( VADC_G0RCR0_type *) 0xf00206bcu)	/* Group 0 Result Control Reg. 15 */
#define VADC_G0RCR2	(*( VADC_G0RCR0_type *) 0xf0020688u)	/* Group 0 Result Control Reg. 2 */
#define VADC_G0RCR3	(*( VADC_G0RCR0_type *) 0xf002068cu)	/* Group 0 Result Control Reg. 3 */
#define VADC_G0RCR4	(*( VADC_G0RCR0_type *) 0xf0020690u)	/* Group 0 Result Control Reg. 4 */
#define VADC_G0RCR5	(*( VADC_G0RCR0_type *) 0xf0020694u)	/* Group 0 Result Control Reg. 5 */
#define VADC_G0RCR6	(*( VADC_G0RCR0_type *) 0xf0020698u)	/* Group 0 Result Control Reg. 6 */
#define VADC_G0RCR7	(*( VADC_G0RCR0_type *) 0xf002069cu)	/* Group 0 Result Control Reg. 7 */
#define VADC_G0RCR8	(*( VADC_G0RCR0_type *) 0xf00206a0u)	/* Group 0 Result Control Reg. 8 */
#define VADC_G0RCR9	(*( VADC_G0RCR0_type *) 0xf00206a4u)	/* Group 0 Result Control Reg. 9 */
#define VADC_G1RCR0	(*( VADC_G0RCR0_type *) 0xf0020a80u)	/* Group 1 Result Control Reg. 0 */
#define VADC_G1RCR1	(*( VADC_G0RCR0_type *) 0xf0020a84u)	/* Group 1 Result Control Reg. 1 */
#define VADC_G1RCR10	(*( VADC_G0RCR0_type *) 0xf0020aa8u)	/* Group 1 Result Control Reg. 10 */
#define VADC_G1RCR11	(*( VADC_G0RCR0_type *) 0xf0020aacu)	/* Group 1 Result Control Reg. 11 */
#define VADC_G1RCR12	(*( VADC_G0RCR0_type *) 0xf0020ab0u)	/* Group 1 Result Control Reg. 12 */
#define VADC_G1RCR13	(*( VADC_G0RCR0_type *) 0xf0020ab4u)	/* Group 1 Result Control Reg. 13 */
#define VADC_G1RCR14	(*( VADC_G0RCR0_type *) 0xf0020ab8u)	/* Group 1 Result Control Reg. 14 */
#define VADC_G1RCR15	(*( VADC_G0RCR0_type *) 0xf0020abcu)	/* Group 1 Result Control Reg. 15 */
#define VADC_G1RCR2	(*( VADC_G0RCR0_type *) 0xf0020a88u)	/* Group 1 Result Control Reg. 2 */
#define VADC_G1RCR3	(*( VADC_G0RCR0_type *) 0xf0020a8cu)	/* Group 1 Result Control Reg. 3 */
#define VADC_G1RCR4	(*( VADC_G0RCR0_type *) 0xf0020a90u)	/* Group 1 Result Control Reg. 4 */
#define VADC_G1RCR5	(*( VADC_G0RCR0_type *) 0xf0020a94u)	/* Group 1 Result Control Reg. 5 */
#define VADC_G1RCR6	(*( VADC_G0RCR0_type *) 0xf0020a98u)	/* Group 1 Result Control Reg. 6 */
#define VADC_G1RCR7	(*( VADC_G0RCR0_type *) 0xf0020a9cu)	/* Group 1 Result Control Reg. 7 */
#define VADC_G1RCR8	(*( VADC_G0RCR0_type *) 0xf0020aa0u)	/* Group 1 Result Control Reg. 8 */
#define VADC_G1RCR9	(*( VADC_G0RCR0_type *) 0xf0020aa4u)	/* Group 1 Result Control Reg. 9 */
#define VADC_G2RCR0	(*( VADC_G0RCR0_type *) 0xf0020e80u)	/* Group 2 Result Control Reg. 0 */
#define VADC_G2RCR1	(*( VADC_G0RCR0_type *) 0xf0020e84u)	/* Group 2 Result Control Reg. 1 */
#define VADC_G2RCR10	(*( VADC_G0RCR0_type *) 0xf0020ea8u)	/* Group 2 Result Control Reg. 10 */
#define VADC_G2RCR11	(*( VADC_G0RCR0_type *) 0xf0020eacu)	/* Group 2 Result Control Reg. 11 */
#define VADC_G2RCR12	(*( VADC_G0RCR0_type *) 0xf0020eb0u)	/* Group 2 Result Control Reg. 12 */
#define VADC_G2RCR13	(*( VADC_G0RCR0_type *) 0xf0020eb4u)	/* Group 2 Result Control Reg. 13 */
#define VADC_G2RCR14	(*( VADC_G0RCR0_type *) 0xf0020eb8u)	/* Group 2 Result Control Reg. 14 */
#define VADC_G2RCR15	(*( VADC_G0RCR0_type *) 0xf0020ebcu)	/* Group 2 Result Control Reg. 15 */
#define VADC_G2RCR2	(*( VADC_G0RCR0_type *) 0xf0020e88u)	/* Group 2 Result Control Reg. 2 */
#define VADC_G2RCR3	(*( VADC_G0RCR0_type *) 0xf0020e8cu)	/* Group 2 Result Control Reg. 3 */
#define VADC_G2RCR4	(*( VADC_G0RCR0_type *) 0xf0020e90u)	/* Group 2 Result Control Reg. 4 */
#define VADC_G2RCR5	(*( VADC_G0RCR0_type *) 0xf0020e94u)	/* Group 2 Result Control Reg. 5 */
#define VADC_G2RCR6	(*( VADC_G0RCR0_type *) 0xf0020e98u)	/* Group 2 Result Control Reg. 6 */
#define VADC_G2RCR7	(*( VADC_G0RCR0_type *) 0xf0020e9cu)	/* Group 2 Result Control Reg. 7 */
#define VADC_G2RCR8	(*( VADC_G0RCR0_type *) 0xf0020ea0u)	/* Group 2 Result Control Reg. 8 */
#define VADC_G2RCR9	(*( VADC_G0RCR0_type *) 0xf0020ea4u)	/* Group 2 Result Control Reg. 9 */
#define VADC_G3RCR0	(*( VADC_G0RCR0_type *) 0xf0021280u)	/* Group 3 Result Control Reg. 0 */
#define VADC_G3RCR1	(*( VADC_G0RCR0_type *) 0xf0021284u)	/* Group 3 Result Control Reg. 1 */
#define VADC_G3RCR10	(*( VADC_G0RCR0_type *) 0xf00212a8u)	/* Group 3 Result Control Reg. 10 */
#define VADC_G3RCR11	(*( VADC_G0RCR0_type *) 0xf00212acu)	/* Group 3 Result Control Reg. 11 */
#define VADC_G3RCR12	(*( VADC_G0RCR0_type *) 0xf00212b0u)	/* Group 3 Result Control Reg. 12 */
#define VADC_G3RCR13	(*( VADC_G0RCR0_type *) 0xf00212b4u)	/* Group 3 Result Control Reg. 13 */
#define VADC_G3RCR14	(*( VADC_G0RCR0_type *) 0xf00212b8u)	/* Group 3 Result Control Reg. 14 */
#define VADC_G3RCR15	(*( VADC_G0RCR0_type *) 0xf00212bcu)	/* Group 3 Result Control Reg. 15 */
#define VADC_G3RCR2	(*( VADC_G0RCR0_type *) 0xf0021288u)	/* Group 3 Result Control Reg. 2 */
#define VADC_G3RCR3	(*( VADC_G0RCR0_type *) 0xf002128cu)	/* Group 3 Result Control Reg. 3 */
#define VADC_G3RCR4	(*( VADC_G0RCR0_type *) 0xf0021290u)	/* Group 3 Result Control Reg. 4 */
#define VADC_G3RCR5	(*( VADC_G0RCR0_type *) 0xf0021294u)	/* Group 3 Result Control Reg. 5 */
#define VADC_G3RCR6	(*( VADC_G0RCR0_type *) 0xf0021298u)	/* Group 3 Result Control Reg. 6 */
#define VADC_G3RCR7	(*( VADC_G0RCR0_type *) 0xf002129cu)	/* Group 3 Result Control Reg. 7 */
#define VADC_G3RCR8	(*( VADC_G0RCR0_type *) 0xf00212a0u)	/* Group 3 Result Control Reg. 8 */
#define VADC_G3RCR9	(*( VADC_G0RCR0_type *) 0xf00212a4u)	/* Group 3 Result Control Reg. 9 */
#define VADC_G4RCR0	(*( VADC_G0RCR0_type *) 0xf0021680u)	/* Group 4 Result Control Reg. 0 */
#define VADC_G4RCR1	(*( VADC_G0RCR0_type *) 0xf0021684u)	/* Group 4 Result Control Reg. 1 */
#define VADC_G4RCR10	(*( VADC_G0RCR0_type *) 0xf00216a8u)	/* Group 4 Result Control Reg. 10 */
#define VADC_G4RCR11	(*( VADC_G0RCR0_type *) 0xf00216acu)	/* Group 4 Result Control Reg. 11 */
#define VADC_G4RCR12	(*( VADC_G0RCR0_type *) 0xf00216b0u)	/* Group 4 Result Control Reg. 12 */
#define VADC_G4RCR13	(*( VADC_G0RCR0_type *) 0xf00216b4u)	/* Group 4 Result Control Reg. 13 */
#define VADC_G4RCR14	(*( VADC_G0RCR0_type *) 0xf00216b8u)	/* Group 4 Result Control Reg. 14 */
#define VADC_G4RCR15	(*( VADC_G0RCR0_type *) 0xf00216bcu)	/* Group 4 Result Control Reg. 15 */
#define VADC_G4RCR2	(*( VADC_G0RCR0_type *) 0xf0021688u)	/* Group 4 Result Control Reg. 2 */
#define VADC_G4RCR3	(*( VADC_G0RCR0_type *) 0xf002168cu)	/* Group 4 Result Control Reg. 3 */
#define VADC_G4RCR4	(*( VADC_G0RCR0_type *) 0xf0021690u)	/* Group 4 Result Control Reg. 4 */
#define VADC_G4RCR5	(*( VADC_G0RCR0_type *) 0xf0021694u)	/* Group 4 Result Control Reg. 5 */
#define VADC_G4RCR6	(*( VADC_G0RCR0_type *) 0xf0021698u)	/* Group 4 Result Control Reg. 6 */
#define VADC_G4RCR7	(*( VADC_G0RCR0_type *) 0xf002169cu)	/* Group 4 Result Control Reg. 7 */
#define VADC_G4RCR8	(*( VADC_G0RCR0_type *) 0xf00216a0u)	/* Group 4 Result Control Reg. 8 */
#define VADC_G4RCR9	(*( VADC_G0RCR0_type *) 0xf00216a4u)	/* Group 4 Result Control Reg. 9 */
#define VADC_G5RCR0	(*( VADC_G0RCR0_type *) 0xf0021a80u)	/* Group 5 Result Control Reg. 0 */
#define VADC_G5RCR1	(*( VADC_G0RCR0_type *) 0xf0021a84u)	/* Group 5 Result Control Reg. 1 */
#define VADC_G5RCR10	(*( VADC_G0RCR0_type *) 0xf0021aa8u)	/* Group 5 Result Control Reg. 10 */
#define VADC_G5RCR11	(*( VADC_G0RCR0_type *) 0xf0021aacu)	/* Group 5 Result Control Reg. 11 */
#define VADC_G5RCR12	(*( VADC_G0RCR0_type *) 0xf0021ab0u)	/* Group 5 Result Control Reg. 12 */
#define VADC_G5RCR13	(*( VADC_G0RCR0_type *) 0xf0021ab4u)	/* Group 5 Result Control Reg. 13 */
#define VADC_G5RCR14	(*( VADC_G0RCR0_type *) 0xf0021ab8u)	/* Group 5 Result Control Reg. 14 */
#define VADC_G5RCR15	(*( VADC_G0RCR0_type *) 0xf0021abcu)	/* Group 5 Result Control Reg. 15 */
#define VADC_G5RCR2	(*( VADC_G0RCR0_type *) 0xf0021a88u)	/* Group 5 Result Control Reg. 2 */
#define VADC_G5RCR3	(*( VADC_G0RCR0_type *) 0xf0021a8cu)	/* Group 5 Result Control Reg. 3 */
#define VADC_G5RCR4	(*( VADC_G0RCR0_type *) 0xf0021a90u)	/* Group 5 Result Control Reg. 4 */
#define VADC_G5RCR5	(*( VADC_G0RCR0_type *) 0xf0021a94u)	/* Group 5 Result Control Reg. 5 */
#define VADC_G5RCR6	(*( VADC_G0RCR0_type *) 0xf0021a98u)	/* Group 5 Result Control Reg. 6 */
#define VADC_G5RCR7	(*( VADC_G0RCR0_type *) 0xf0021a9cu)	/* Group 5 Result Control Reg. 7 */
#define VADC_G5RCR8	(*( VADC_G0RCR0_type *) 0xf0021aa0u)	/* Group 5 Result Control Reg. 8 */
#define VADC_G5RCR9	(*( VADC_G0RCR0_type *) 0xf0021aa4u)	/* Group 5 Result Control Reg. 9 */
#define VADC_G6RCR0	(*( VADC_G0RCR0_type *) 0xf0021e80u)	/* Group 6 Result Control Reg. 0 */
#define VADC_G6RCR1	(*( VADC_G0RCR0_type *) 0xf0021e84u)	/* Group 6 Result Control Reg. 1 */
#define VADC_G6RCR10	(*( VADC_G0RCR0_type *) 0xf0021ea8u)	/* Group 6 Result Control Reg. 10 */
#define VADC_G6RCR11	(*( VADC_G0RCR0_type *) 0xf0021eacu)	/* Group 6 Result Control Reg. 11 */
#define VADC_G6RCR12	(*( VADC_G0RCR0_type *) 0xf0021eb0u)	/* Group 6 Result Control Reg. 12 */
#define VADC_G6RCR13	(*( VADC_G0RCR0_type *) 0xf0021eb4u)	/* Group 6 Result Control Reg. 13 */
#define VADC_G6RCR14	(*( VADC_G0RCR0_type *) 0xf0021eb8u)	/* Group 6 Result Control Reg. 14 */
#define VADC_G6RCR15	(*( VADC_G0RCR0_type *) 0xf0021ebcu)	/* Group 6 Result Control Reg. 15 */
#define VADC_G6RCR2	(*( VADC_G0RCR0_type *) 0xf0021e88u)	/* Group 6 Result Control Reg. 2 */
#define VADC_G6RCR3	(*( VADC_G0RCR0_type *) 0xf0021e8cu)	/* Group 6 Result Control Reg. 3 */
#define VADC_G6RCR4	(*( VADC_G0RCR0_type *) 0xf0021e90u)	/* Group 6 Result Control Reg. 4 */
#define VADC_G6RCR5	(*( VADC_G0RCR0_type *) 0xf0021e94u)	/* Group 6 Result Control Reg. 5 */
#define VADC_G6RCR6	(*( VADC_G0RCR0_type *) 0xf0021e98u)	/* Group 6 Result Control Reg. 6 */
#define VADC_G6RCR7	(*( VADC_G0RCR0_type *) 0xf0021e9cu)	/* Group 6 Result Control Reg. 7 */
#define VADC_G6RCR8	(*( VADC_G0RCR0_type *) 0xf0021ea0u)	/* Group 6 Result Control Reg. 8 */
#define VADC_G6RCR9	(*( VADC_G0RCR0_type *) 0xf0021ea4u)	/* Group 6 Result Control Reg. 9 */
#define VADC_G7RCR0	(*( VADC_G0RCR0_type *) 0xf0022280u)	/* Group 7 Result Control Reg. 0 */
#define VADC_G7RCR1	(*( VADC_G0RCR0_type *) 0xf0022284u)	/* Group 7 Result Control Reg. 1 */
#define VADC_G7RCR10	(*( VADC_G0RCR0_type *) 0xf00222a8u)	/* Group 7 Result Control Reg. 10 */
#define VADC_G7RCR11	(*( VADC_G0RCR0_type *) 0xf00222acu)	/* Group 7 Result Control Reg. 11 */
#define VADC_G7RCR12	(*( VADC_G0RCR0_type *) 0xf00222b0u)	/* Group 7 Result Control Reg. 12 */
#define VADC_G7RCR13	(*( VADC_G0RCR0_type *) 0xf00222b4u)	/* Group 7 Result Control Reg. 13 */
#define VADC_G7RCR14	(*( VADC_G0RCR0_type *) 0xf00222b8u)	/* Group 7 Result Control Reg. 14 */
#define VADC_G7RCR15	(*( VADC_G0RCR0_type *) 0xf00222bcu)	/* Group 7 Result Control Reg. 15 */
#define VADC_G7RCR2	(*( VADC_G0RCR0_type *) 0xf0022288u)	/* Group 7 Result Control Reg. 2 */
#define VADC_G7RCR3	(*( VADC_G0RCR0_type *) 0xf002228cu)	/* Group 7 Result Control Reg. 3 */
#define VADC_G7RCR4	(*( VADC_G0RCR0_type *) 0xf0022290u)	/* Group 7 Result Control Reg. 4 */
#define VADC_G7RCR5	(*( VADC_G0RCR0_type *) 0xf0022294u)	/* Group 7 Result Control Reg. 5 */
#define VADC_G7RCR6	(*( VADC_G0RCR0_type *) 0xf0022298u)	/* Group 7 Result Control Reg. 6 */
#define VADC_G7RCR7	(*( VADC_G0RCR0_type *) 0xf002229cu)	/* Group 7 Result Control Reg. 7 */
#define VADC_G7RCR8	(*( VADC_G0RCR0_type *) 0xf00222a0u)	/* Group 7 Result Control Reg. 8 */
#define VADC_G7RCR9	(*( VADC_G0RCR0_type *) 0xf00222a4u)	/* Group 7 Result Control Reg. 9 */

typedef volatile union
{
	struct
	{ 
		unsigned int REV0           : 1;	/* Clear Result Event for Result Register 0 */
		unsigned int REV1           : 1;	/* Clear Result Event for Result Register 1 */
		unsigned int REV2           : 1;	/* Clear Result Event for Result Register 2 */
		unsigned int REV3           : 1;	/* Clear Result Event for Result Register 3 */
		unsigned int REV4           : 1;	/* Clear Result Event for Result Register 4 */
		unsigned int REV5           : 1;	/* Clear Result Event for Result Register 5 */
		unsigned int REV6           : 1;	/* Clear Result Event for Result Register 6 */
		unsigned int REV7           : 1;	/* Clear Result Event for Result Register 7 */
		unsigned int REV8           : 1;	/* Clear Result Event for Result Register 8 */
		unsigned int REV9           : 1;	/* Clear Result Event for Result Register 9 */
		unsigned int REV10          : 1;	/* Clear Result Event for Result Register 10 */
		unsigned int REV11          : 1;	/* Clear Result Event for Result Register 11 */
		unsigned int REV12          : 1;	/* Clear Result Event for Result Register 12 */
		unsigned int REV13          : 1;	/* Clear Result Event for Result Register 13 */
		unsigned int REV14          : 1;	/* Clear Result Event for Result Register 14 */
		unsigned int REV15          : 1;	/* Clear Result Event for Result Register 15 */
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} VADC_G0REFCLR_type;
#define VADC_G0REFCLR	(*( VADC_G0REFCLR_type *) 0xf0020594u)	/* Result Event Flag Clear Register, Group 0 */
#define VADC_G1REFCLR	(*( VADC_G0REFCLR_type *) 0xf0020994u)	/* Result Event Flag Clear Register, Group 1 */
#define VADC_G2REFCLR	(*( VADC_G0REFCLR_type *) 0xf0020d94u)	/* Result Event Flag Clear Register, Group 2 */
#define VADC_G3REFCLR	(*( VADC_G0REFCLR_type *) 0xf0021194u)	/* Result Event Flag Clear Register, Group 3 */
#define VADC_G4REFCLR	(*( VADC_G0REFCLR_type *) 0xf0021594u)	/* Result Event Flag Clear Register, Group 4 */
#define VADC_G5REFCLR	(*( VADC_G0REFCLR_type *) 0xf0021994u)	/* Result Event Flag Clear Register, Group 5 */
#define VADC_G6REFCLR	(*( VADC_G0REFCLR_type *) 0xf0021d94u)	/* Result Event Flag Clear Register, Group 6 */
#define VADC_G7REFCLR	(*( VADC_G0REFCLR_type *) 0xf0022194u)	/* Result Event Flag Clear Register, Group 7 */

typedef volatile union
{
	struct
	{ 
		unsigned int REV0           : 1;	/* Result Event for Result Register 0 */
		unsigned int REV1           : 1;	/* Result Event for Result Register 1 */
		unsigned int REV2           : 1;	/* Result Event for Result Register 2 */
		unsigned int REV3           : 1;	/* Result Event for Result Register 3 */
		unsigned int REV4           : 1;	/* Result Event for Result Register 4 */
		unsigned int REV5           : 1;	/* Result Event for Result Register 5 */
		unsigned int REV6           : 1;	/* Result Event for Result Register 6 */
		unsigned int REV7           : 1;	/* Result Event for Result Register 7 */
		unsigned int REV8           : 1;	/* Result Event for Result Register 8 */
		unsigned int REV9           : 1;	/* Result Event for Result Register 9 */
		unsigned int REV10          : 1;	/* Result Event for Result Register 10 */
		unsigned int REV11          : 1;	/* Result Event for Result Register 11 */
		unsigned int REV12          : 1;	/* Result Event for Result Register 12 */
		unsigned int REV13          : 1;	/* Result Event for Result Register 13 */
		unsigned int REV14          : 1;	/* Result Event for Result Register 14 */
		unsigned int REV15          : 1;	/* Result Event for Result Register 15 */
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} VADC_G0REFLAG_type;
#define VADC_G0REFLAG	(*( VADC_G0REFLAG_type *) 0xf0020584u)	/* Result Event Flag Register, Group 0 */
#define VADC_G1REFLAG	(*( VADC_G0REFLAG_type *) 0xf0020984u)	/* Result Event Flag Register, Group 1 */
#define VADC_G2REFLAG	(*( VADC_G0REFLAG_type *) 0xf0020d84u)	/* Result Event Flag Register, Group 2 */
#define VADC_G3REFLAG	(*( VADC_G0REFLAG_type *) 0xf0021184u)	/* Result Event Flag Register, Group 3 */
#define VADC_G4REFLAG	(*( VADC_G0REFLAG_type *) 0xf0021584u)	/* Result Event Flag Register, Group 4 */
#define VADC_G5REFLAG	(*( VADC_G0REFLAG_type *) 0xf0021984u)	/* Result Event Flag Register, Group 5 */
#define VADC_G6REFLAG	(*( VADC_G0REFLAG_type *) 0xf0021d84u)	/* Result Event Flag Register, Group 6 */
#define VADC_G7REFLAG	(*( VADC_G0REFLAG_type *) 0xf0022184u)	/* Result Event Flag Register, Group 7 */

typedef volatile union
{
	struct
	{ 
		unsigned int RESULT         : 16;	/* Result of Most Recent Conversion */
		/* const */ unsigned int DRC            : 4;	/* Data Reduction Counter */
		/* const */ unsigned int CHNR           : 5;	/* Channel Number */
		/* const */ unsigned int EMUX           : 3;	/* External Multiplexer Setting */
		/* const */ unsigned int CRS            : 2;	/* Converted Request Source */
		/* const */ unsigned int FCR            : 1;	/* Fast Compare Result */
		/* const */ unsigned int VF             : 1;	/* Valid Flag */
	} B;
	int I;
	unsigned int U;

} VADC_G0RES0_type;
#define VADC_G0RES0	(*( VADC_G0RES0_type *) 0xf0020700u)	/* Group 0 Result Register 0 */
#define VADC_G0RES1	(*( VADC_G0RES0_type *) 0xf0020704u)	/* Group 0 Result Register 1 */
#define VADC_G0RES10	(*( VADC_G0RES0_type *) 0xf0020728u)	/* Group 0 Result Register 10 */
#define VADC_G0RES11	(*( VADC_G0RES0_type *) 0xf002072cu)	/* Group 0 Result Register 11 */
#define VADC_G0RES12	(*( VADC_G0RES0_type *) 0xf0020730u)	/* Group 0 Result Register 12 */
#define VADC_G0RES13	(*( VADC_G0RES0_type *) 0xf0020734u)	/* Group 0 Result Register 13 */
#define VADC_G0RES14	(*( VADC_G0RES0_type *) 0xf0020738u)	/* Group 0 Result Register 14 */
#define VADC_G0RES15	(*( VADC_G0RES0_type *) 0xf002073cu)	/* Group 0 Result Register 15 */
#define VADC_G0RES2	(*( VADC_G0RES0_type *) 0xf0020708u)	/* Group 0 Result Register 2 */
#define VADC_G0RES3	(*( VADC_G0RES0_type *) 0xf002070cu)	/* Group 0 Result Register 3 */
#define VADC_G0RES4	(*( VADC_G0RES0_type *) 0xf0020710u)	/* Group 0 Result Register 4 */
#define VADC_G0RES5	(*( VADC_G0RES0_type *) 0xf0020714u)	/* Group 0 Result Register 5 */
#define VADC_G0RES6	(*( VADC_G0RES0_type *) 0xf0020718u)	/* Group 0 Result Register 6 */
#define VADC_G0RES7	(*( VADC_G0RES0_type *) 0xf002071cu)	/* Group 0 Result Register 7 */
#define VADC_G0RES8	(*( VADC_G0RES0_type *) 0xf0020720u)	/* Group 0 Result Register 8 */
#define VADC_G0RES9	(*( VADC_G0RES0_type *) 0xf0020724u)	/* Group 0 Result Register 9 */
#define VADC_G1RES0	(*( VADC_G0RES0_type *) 0xf0020b00u)	/* Group 1 Result Register 0 */
#define VADC_G1RES1	(*( VADC_G0RES0_type *) 0xf0020b04u)	/* Group 1 Result Register 1 */
#define VADC_G1RES10	(*( VADC_G0RES0_type *) 0xf0020b28u)	/* Group 1 Result Register 10 */
#define VADC_G1RES11	(*( VADC_G0RES0_type *) 0xf0020b2cu)	/* Group 1 Result Register 11 */
#define VADC_G1RES12	(*( VADC_G0RES0_type *) 0xf0020b30u)	/* Group 1 Result Register 12 */
#define VADC_G1RES13	(*( VADC_G0RES0_type *) 0xf0020b34u)	/* Group 1 Result Register 13 */
#define VADC_G1RES14	(*( VADC_G0RES0_type *) 0xf0020b38u)	/* Group 1 Result Register 14 */
#define VADC_G1RES15	(*( VADC_G0RES0_type *) 0xf0020b3cu)	/* Group 1 Result Register 15 */
#define VADC_G1RES2	(*( VADC_G0RES0_type *) 0xf0020b08u)	/* Group 1 Result Register 2 */
#define VADC_G1RES3	(*( VADC_G0RES0_type *) 0xf0020b0cu)	/* Group 1 Result Register 3 */
#define VADC_G1RES4	(*( VADC_G0RES0_type *) 0xf0020b10u)	/* Group 1 Result Register 4 */
#define VADC_G1RES5	(*( VADC_G0RES0_type *) 0xf0020b14u)	/* Group 1 Result Register 5 */
#define VADC_G1RES6	(*( VADC_G0RES0_type *) 0xf0020b18u)	/* Group 1 Result Register 6 */
#define VADC_G1RES7	(*( VADC_G0RES0_type *) 0xf0020b1cu)	/* Group 1 Result Register 7 */
#define VADC_G1RES8	(*( VADC_G0RES0_type *) 0xf0020b20u)	/* Group 1 Result Register 8 */
#define VADC_G1RES9	(*( VADC_G0RES0_type *) 0xf0020b24u)	/* Group 1 Result Register 9 */
#define VADC_G2RES0	(*( VADC_G0RES0_type *) 0xf0020f00u)	/* Group 2 Result Register 0 */
#define VADC_G2RES1	(*( VADC_G0RES0_type *) 0xf0020f04u)	/* Group 2 Result Register 1 */
#define VADC_G2RES10	(*( VADC_G0RES0_type *) 0xf0020f28u)	/* Group 2 Result Register 10 */
#define VADC_G2RES11	(*( VADC_G0RES0_type *) 0xf0020f2cu)	/* Group 2 Result Register 11 */
#define VADC_G2RES12	(*( VADC_G0RES0_type *) 0xf0020f30u)	/* Group 2 Result Register 12 */
#define VADC_G2RES13	(*( VADC_G0RES0_type *) 0xf0020f34u)	/* Group 2 Result Register 13 */
#define VADC_G2RES14	(*( VADC_G0RES0_type *) 0xf0020f38u)	/* Group 2 Result Register 14 */
#define VADC_G2RES15	(*( VADC_G0RES0_type *) 0xf0020f3cu)	/* Group 2 Result Register 15 */
#define VADC_G2RES2	(*( VADC_G0RES0_type *) 0xf0020f08u)	/* Group 2 Result Register 2 */
#define VADC_G2RES3	(*( VADC_G0RES0_type *) 0xf0020f0cu)	/* Group 2 Result Register 3 */
#define VADC_G2RES4	(*( VADC_G0RES0_type *) 0xf0020f10u)	/* Group 2 Result Register 4 */
#define VADC_G2RES5	(*( VADC_G0RES0_type *) 0xf0020f14u)	/* Group 2 Result Register 5 */
#define VADC_G2RES6	(*( VADC_G0RES0_type *) 0xf0020f18u)	/* Group 2 Result Register 6 */
#define VADC_G2RES7	(*( VADC_G0RES0_type *) 0xf0020f1cu)	/* Group 2 Result Register 7 */
#define VADC_G2RES8	(*( VADC_G0RES0_type *) 0xf0020f20u)	/* Group 2 Result Register 8 */
#define VADC_G2RES9	(*( VADC_G0RES0_type *) 0xf0020f24u)	/* Group 2 Result Register 9 */
#define VADC_G3RES0	(*( VADC_G0RES0_type *) 0xf0021300u)	/* Group 3 Result Register 0 */
#define VADC_G3RES1	(*( VADC_G0RES0_type *) 0xf0021304u)	/* Group 3 Result Register 1 */
#define VADC_G3RES10	(*( VADC_G0RES0_type *) 0xf0021328u)	/* Group 3 Result Register 10 */
#define VADC_G3RES11	(*( VADC_G0RES0_type *) 0xf002132cu)	/* Group 3 Result Register 11 */
#define VADC_G3RES12	(*( VADC_G0RES0_type *) 0xf0021330u)	/* Group 3 Result Register 12 */
#define VADC_G3RES13	(*( VADC_G0RES0_type *) 0xf0021334u)	/* Group 3 Result Register 13 */
#define VADC_G3RES14	(*( VADC_G0RES0_type *) 0xf0021338u)	/* Group 3 Result Register 14 */
#define VADC_G3RES15	(*( VADC_G0RES0_type *) 0xf002133cu)	/* Group 3 Result Register 15 */
#define VADC_G3RES2	(*( VADC_G0RES0_type *) 0xf0021308u)	/* Group 3 Result Register 2 */
#define VADC_G3RES3	(*( VADC_G0RES0_type *) 0xf002130cu)	/* Group 3 Result Register 3 */
#define VADC_G3RES4	(*( VADC_G0RES0_type *) 0xf0021310u)	/* Group 3 Result Register 4 */
#define VADC_G3RES5	(*( VADC_G0RES0_type *) 0xf0021314u)	/* Group 3 Result Register 5 */
#define VADC_G3RES6	(*( VADC_G0RES0_type *) 0xf0021318u)	/* Group 3 Result Register 6 */
#define VADC_G3RES7	(*( VADC_G0RES0_type *) 0xf002131cu)	/* Group 3 Result Register 7 */
#define VADC_G3RES8	(*( VADC_G0RES0_type *) 0xf0021320u)	/* Group 3 Result Register 8 */
#define VADC_G3RES9	(*( VADC_G0RES0_type *) 0xf0021324u)	/* Group 3 Result Register 9 */
#define VADC_G4RES0	(*( VADC_G0RES0_type *) 0xf0021700u)	/* Group 4 Result Register 0 */
#define VADC_G4RES1	(*( VADC_G0RES0_type *) 0xf0021704u)	/* Group 4 Result Register 1 */
#define VADC_G4RES10	(*( VADC_G0RES0_type *) 0xf0021728u)	/* Group 4 Result Register 10 */
#define VADC_G4RES11	(*( VADC_G0RES0_type *) 0xf002172cu)	/* Group 4 Result Register 11 */
#define VADC_G4RES12	(*( VADC_G0RES0_type *) 0xf0021730u)	/* Group 4 Result Register 12 */
#define VADC_G4RES13	(*( VADC_G0RES0_type *) 0xf0021734u)	/* Group 4 Result Register 13 */
#define VADC_G4RES14	(*( VADC_G0RES0_type *) 0xf0021738u)	/* Group 4 Result Register 14 */
#define VADC_G4RES15	(*( VADC_G0RES0_type *) 0xf002173cu)	/* Group 4 Result Register 15 */
#define VADC_G4RES2	(*( VADC_G0RES0_type *) 0xf0021708u)	/* Group 4 Result Register 2 */
#define VADC_G4RES3	(*( VADC_G0RES0_type *) 0xf002170cu)	/* Group 4 Result Register 3 */
#define VADC_G4RES4	(*( VADC_G0RES0_type *) 0xf0021710u)	/* Group 4 Result Register 4 */
#define VADC_G4RES5	(*( VADC_G0RES0_type *) 0xf0021714u)	/* Group 4 Result Register 5 */
#define VADC_G4RES6	(*( VADC_G0RES0_type *) 0xf0021718u)	/* Group 4 Result Register 6 */
#define VADC_G4RES7	(*( VADC_G0RES0_type *) 0xf002171cu)	/* Group 4 Result Register 7 */
#define VADC_G4RES8	(*( VADC_G0RES0_type *) 0xf0021720u)	/* Group 4 Result Register 8 */
#define VADC_G4RES9	(*( VADC_G0RES0_type *) 0xf0021724u)	/* Group 4 Result Register 9 */
#define VADC_G5RES0	(*( VADC_G0RES0_type *) 0xf0021b00u)	/* Group 5 Result Register 0 */
#define VADC_G5RES1	(*( VADC_G0RES0_type *) 0xf0021b04u)	/* Group 5 Result Register 1 */
#define VADC_G5RES10	(*( VADC_G0RES0_type *) 0xf0021b28u)	/* Group 5 Result Register 10 */
#define VADC_G5RES11	(*( VADC_G0RES0_type *) 0xf0021b2cu)	/* Group 5 Result Register 11 */
#define VADC_G5RES12	(*( VADC_G0RES0_type *) 0xf0021b30u)	/* Group 5 Result Register 12 */
#define VADC_G5RES13	(*( VADC_G0RES0_type *) 0xf0021b34u)	/* Group 5 Result Register 13 */
#define VADC_G5RES14	(*( VADC_G0RES0_type *) 0xf0021b38u)	/* Group 5 Result Register 14 */
#define VADC_G5RES15	(*( VADC_G0RES0_type *) 0xf0021b3cu)	/* Group 5 Result Register 15 */
#define VADC_G5RES2	(*( VADC_G0RES0_type *) 0xf0021b08u)	/* Group 5 Result Register 2 */
#define VADC_G5RES3	(*( VADC_G0RES0_type *) 0xf0021b0cu)	/* Group 5 Result Register 3 */
#define VADC_G5RES4	(*( VADC_G0RES0_type *) 0xf0021b10u)	/* Group 5 Result Register 4 */
#define VADC_G5RES5	(*( VADC_G0RES0_type *) 0xf0021b14u)	/* Group 5 Result Register 5 */
#define VADC_G5RES6	(*( VADC_G0RES0_type *) 0xf0021b18u)	/* Group 5 Result Register 6 */
#define VADC_G5RES7	(*( VADC_G0RES0_type *) 0xf0021b1cu)	/* Group 5 Result Register 7 */
#define VADC_G5RES8	(*( VADC_G0RES0_type *) 0xf0021b20u)	/* Group 5 Result Register 8 */
#define VADC_G5RES9	(*( VADC_G0RES0_type *) 0xf0021b24u)	/* Group 5 Result Register 9 */
#define VADC_G6RES0	(*( VADC_G0RES0_type *) 0xf0021f00u)	/* Group 6 Result Register 0 */
#define VADC_G6RES1	(*( VADC_G0RES0_type *) 0xf0021f04u)	/* Group 6 Result Register 1 */
#define VADC_G6RES10	(*( VADC_G0RES0_type *) 0xf0021f28u)	/* Group 6 Result Register 10 */
#define VADC_G6RES11	(*( VADC_G0RES0_type *) 0xf0021f2cu)	/* Group 6 Result Register 11 */
#define VADC_G6RES12	(*( VADC_G0RES0_type *) 0xf0021f30u)	/* Group 6 Result Register 12 */
#define VADC_G6RES13	(*( VADC_G0RES0_type *) 0xf0021f34u)	/* Group 6 Result Register 13 */
#define VADC_G6RES14	(*( VADC_G0RES0_type *) 0xf0021f38u)	/* Group 6 Result Register 14 */
#define VADC_G6RES15	(*( VADC_G0RES0_type *) 0xf0021f3cu)	/* Group 6 Result Register 15 */
#define VADC_G6RES2	(*( VADC_G0RES0_type *) 0xf0021f08u)	/* Group 6 Result Register 2 */
#define VADC_G6RES3	(*( VADC_G0RES0_type *) 0xf0021f0cu)	/* Group 6 Result Register 3 */
#define VADC_G6RES4	(*( VADC_G0RES0_type *) 0xf0021f10u)	/* Group 6 Result Register 4 */
#define VADC_G6RES5	(*( VADC_G0RES0_type *) 0xf0021f14u)	/* Group 6 Result Register 5 */
#define VADC_G6RES6	(*( VADC_G0RES0_type *) 0xf0021f18u)	/* Group 6 Result Register 6 */
#define VADC_G6RES7	(*( VADC_G0RES0_type *) 0xf0021f1cu)	/* Group 6 Result Register 7 */
#define VADC_G6RES8	(*( VADC_G0RES0_type *) 0xf0021f20u)	/* Group 6 Result Register 8 */
#define VADC_G6RES9	(*( VADC_G0RES0_type *) 0xf0021f24u)	/* Group 6 Result Register 9 */
#define VADC_G7RES0	(*( VADC_G0RES0_type *) 0xf0022300u)	/* Group 7 Result Register 0 */
#define VADC_G7RES1	(*( VADC_G0RES0_type *) 0xf0022304u)	/* Group 7 Result Register 1 */
#define VADC_G7RES10	(*( VADC_G0RES0_type *) 0xf0022328u)	/* Group 7 Result Register 10 */
#define VADC_G7RES11	(*( VADC_G0RES0_type *) 0xf002232cu)	/* Group 7 Result Register 11 */
#define VADC_G7RES12	(*( VADC_G0RES0_type *) 0xf0022330u)	/* Group 7 Result Register 12 */
#define VADC_G7RES13	(*( VADC_G0RES0_type *) 0xf0022334u)	/* Group 7 Result Register 13 */
#define VADC_G7RES14	(*( VADC_G0RES0_type *) 0xf0022338u)	/* Group 7 Result Register 14 */
#define VADC_G7RES15	(*( VADC_G0RES0_type *) 0xf002233cu)	/* Group 7 Result Register 15 */
#define VADC_G7RES2	(*( VADC_G0RES0_type *) 0xf0022308u)	/* Group 7 Result Register 2 */
#define VADC_G7RES3	(*( VADC_G0RES0_type *) 0xf002230cu)	/* Group 7 Result Register 3 */
#define VADC_G7RES4	(*( VADC_G0RES0_type *) 0xf0022310u)	/* Group 7 Result Register 4 */
#define VADC_G7RES5	(*( VADC_G0RES0_type *) 0xf0022314u)	/* Group 7 Result Register 5 */
#define VADC_G7RES6	(*( VADC_G0RES0_type *) 0xf0022318u)	/* Group 7 Result Register 6 */
#define VADC_G7RES7	(*( VADC_G0RES0_type *) 0xf002231cu)	/* Group 7 Result Register 7 */
#define VADC_G7RES8	(*( VADC_G0RES0_type *) 0xf0022320u)	/* Group 7 Result Register 8 */
#define VADC_G7RES9	(*( VADC_G0RES0_type *) 0xf0022324u)	/* Group 7 Result Register 9 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int RESULT         : 16;	/* Result of Most Recent Conversion */
		/* const */ unsigned int DRC            : 4;	/* Data Reduction Counter */
		/* const */ unsigned int CHNR           : 5;	/* Channel Number */
		/* const */ unsigned int EMUX           : 3;	/* External Multiplexer Setting */
		/* const */ unsigned int CRS            : 2;	/* Converted Request Source */
		/* const */ unsigned int FCR            : 1;	/* Fast Compare Result */
		/* const */ unsigned int VF             : 1;	/* Valid Flag */
	} B;
	int I;
	unsigned int U;

} VADC_G0RESD0_type;
#define VADC_G0RESD0	(*( VADC_G0RESD0_type *) 0xf0020780u)	/* Group 0 Result Reg. 0, Debug */
#define VADC_G0RESD1	(*( VADC_G0RESD0_type *) 0xf0020784u)	/* Group 0 Result Reg. 1, Debug */
#define VADC_G0RESD10	(*( VADC_G0RESD0_type *) 0xf00207a8u)	/* Group 0 Result Reg. 10, Debug */
#define VADC_G0RESD11	(*( VADC_G0RESD0_type *) 0xf00207acu)	/* Group 0 Result Reg. 11, Debug */
#define VADC_G0RESD12	(*( VADC_G0RESD0_type *) 0xf00207b0u)	/* Group 0 Result Reg. 12, Debug */
#define VADC_G0RESD13	(*( VADC_G0RESD0_type *) 0xf00207b4u)	/* Group 0 Result Reg. 13, Debug */
#define VADC_G0RESD14	(*( VADC_G0RESD0_type *) 0xf00207b8u)	/* Group 0 Result Reg. 14, Debug */
#define VADC_G0RESD15	(*( VADC_G0RESD0_type *) 0xf00207bcu)	/* Group 0 Result Reg. 15, Debug */
#define VADC_G0RESD2	(*( VADC_G0RESD0_type *) 0xf0020788u)	/* Group 0 Result Reg. 2, Debug */
#define VADC_G0RESD3	(*( VADC_G0RESD0_type *) 0xf002078cu)	/* Group 0 Result Reg. 3, Debug */
#define VADC_G0RESD4	(*( VADC_G0RESD0_type *) 0xf0020790u)	/* Group 0 Result Reg. 4, Debug */
#define VADC_G0RESD5	(*( VADC_G0RESD0_type *) 0xf0020794u)	/* Group 0 Result Reg. 5, Debug */
#define VADC_G0RESD6	(*( VADC_G0RESD0_type *) 0xf0020798u)	/* Group 0 Result Reg. 6, Debug */
#define VADC_G0RESD7	(*( VADC_G0RESD0_type *) 0xf002079cu)	/* Group 0 Result Reg. 7, Debug */
#define VADC_G0RESD8	(*( VADC_G0RESD0_type *) 0xf00207a0u)	/* Group 0 Result Reg. 8, Debug */
#define VADC_G0RESD9	(*( VADC_G0RESD0_type *) 0xf00207a4u)	/* Group 0 Result Reg. 9, Debug */
#define VADC_G1RESD0	(*( VADC_G0RESD0_type *) 0xf0020b80u)	/* Group 1 Result Reg. 0, Debug */
#define VADC_G1RESD1	(*( VADC_G0RESD0_type *) 0xf0020b84u)	/* Group 1 Result Reg. 1, Debug */
#define VADC_G1RESD10	(*( VADC_G0RESD0_type *) 0xf0020ba8u)	/* Group 1 Result Reg. 10, Debug */
#define VADC_G1RESD11	(*( VADC_G0RESD0_type *) 0xf0020bacu)	/* Group 1 Result Reg. 11, Debug */
#define VADC_G1RESD12	(*( VADC_G0RESD0_type *) 0xf0020bb0u)	/* Group 1 Result Reg. 12, Debug */
#define VADC_G1RESD13	(*( VADC_G0RESD0_type *) 0xf0020bb4u)	/* Group 1 Result Reg. 13, Debug */
#define VADC_G1RESD14	(*( VADC_G0RESD0_type *) 0xf0020bb8u)	/* Group 1 Result Reg. 14, Debug */
#define VADC_G1RESD15	(*( VADC_G0RESD0_type *) 0xf0020bbcu)	/* Group 1 Result Reg. 15, Debug */
#define VADC_G1RESD2	(*( VADC_G0RESD0_type *) 0xf0020b88u)	/* Group 1 Result Reg. 2, Debug */
#define VADC_G1RESD3	(*( VADC_G0RESD0_type *) 0xf0020b8cu)	/* Group 1 Result Reg. 3, Debug */
#define VADC_G1RESD4	(*( VADC_G0RESD0_type *) 0xf0020b90u)	/* Group 1 Result Reg. 4, Debug */
#define VADC_G1RESD5	(*( VADC_G0RESD0_type *) 0xf0020b94u)	/* Group 1 Result Reg. 5, Debug */
#define VADC_G1RESD6	(*( VADC_G0RESD0_type *) 0xf0020b98u)	/* Group 1 Result Reg. 6, Debug */
#define VADC_G1RESD7	(*( VADC_G0RESD0_type *) 0xf0020b9cu)	/* Group 1 Result Reg. 7, Debug */
#define VADC_G1RESD8	(*( VADC_G0RESD0_type *) 0xf0020ba0u)	/* Group 1 Result Reg. 8, Debug */
#define VADC_G1RESD9	(*( VADC_G0RESD0_type *) 0xf0020ba4u)	/* Group 1 Result Reg. 9, Debug */
#define VADC_G2RESD0	(*( VADC_G0RESD0_type *) 0xf0020f80u)	/* Group 2 Result Reg. 0, Debug */
#define VADC_G2RESD1	(*( VADC_G0RESD0_type *) 0xf0020f84u)	/* Group 2 Result Reg. 1, Debug */
#define VADC_G2RESD10	(*( VADC_G0RESD0_type *) 0xf0020fa8u)	/* Group 2 Result Reg. 10, Debug */
#define VADC_G2RESD11	(*( VADC_G0RESD0_type *) 0xf0020facu)	/* Group 2 Result Reg. 11, Debug */
#define VADC_G2RESD12	(*( VADC_G0RESD0_type *) 0xf0020fb0u)	/* Group 2 Result Reg. 12, Debug */
#define VADC_G2RESD13	(*( VADC_G0RESD0_type *) 0xf0020fb4u)	/* Group 2 Result Reg. 13, Debug */
#define VADC_G2RESD14	(*( VADC_G0RESD0_type *) 0xf0020fb8u)	/* Group 2 Result Reg. 14, Debug */
#define VADC_G2RESD15	(*( VADC_G0RESD0_type *) 0xf0020fbcu)	/* Group 2 Result Reg. 15, Debug */
#define VADC_G2RESD2	(*( VADC_G0RESD0_type *) 0xf0020f88u)	/* Group 2 Result Reg. 2, Debug */
#define VADC_G2RESD3	(*( VADC_G0RESD0_type *) 0xf0020f8cu)	/* Group 2 Result Reg. 3, Debug */
#define VADC_G2RESD4	(*( VADC_G0RESD0_type *) 0xf0020f90u)	/* Group 2 Result Reg. 4, Debug */
#define VADC_G2RESD5	(*( VADC_G0RESD0_type *) 0xf0020f94u)	/* Group 2 Result Reg. 5, Debug */
#define VADC_G2RESD6	(*( VADC_G0RESD0_type *) 0xf0020f98u)	/* Group 2 Result Reg. 6, Debug */
#define VADC_G2RESD7	(*( VADC_G0RESD0_type *) 0xf0020f9cu)	/* Group 2 Result Reg. 7, Debug */
#define VADC_G2RESD8	(*( VADC_G0RESD0_type *) 0xf0020fa0u)	/* Group 2 Result Reg. 8, Debug */
#define VADC_G2RESD9	(*( VADC_G0RESD0_type *) 0xf0020fa4u)	/* Group 2 Result Reg. 9, Debug */
#define VADC_G3RESD0	(*( VADC_G0RESD0_type *) 0xf0021380u)	/* Group 3 Result Reg. 0, Debug */
#define VADC_G3RESD1	(*( VADC_G0RESD0_type *) 0xf0021384u)	/* Group 3 Result Reg. 1, Debug */
#define VADC_G3RESD10	(*( VADC_G0RESD0_type *) 0xf00213a8u)	/* Group 3 Result Reg. 10, Debug */
#define VADC_G3RESD11	(*( VADC_G0RESD0_type *) 0xf00213acu)	/* Group 3 Result Reg. 11, Debug */
#define VADC_G3RESD12	(*( VADC_G0RESD0_type *) 0xf00213b0u)	/* Group 3 Result Reg. 12, Debug */
#define VADC_G3RESD13	(*( VADC_G0RESD0_type *) 0xf00213b4u)	/* Group 3 Result Reg. 13, Debug */
#define VADC_G3RESD14	(*( VADC_G0RESD0_type *) 0xf00213b8u)	/* Group 3 Result Reg. 14, Debug */
#define VADC_G3RESD15	(*( VADC_G0RESD0_type *) 0xf00213bcu)	/* Group 3 Result Reg. 15, Debug */
#define VADC_G3RESD2	(*( VADC_G0RESD0_type *) 0xf0021388u)	/* Group 3 Result Reg. 2, Debug */
#define VADC_G3RESD3	(*( VADC_G0RESD0_type *) 0xf002138cu)	/* Group 3 Result Reg. 3, Debug */
#define VADC_G3RESD4	(*( VADC_G0RESD0_type *) 0xf0021390u)	/* Group 3 Result Reg. 4, Debug */
#define VADC_G3RESD5	(*( VADC_G0RESD0_type *) 0xf0021394u)	/* Group 3 Result Reg. 5, Debug */
#define VADC_G3RESD6	(*( VADC_G0RESD0_type *) 0xf0021398u)	/* Group 3 Result Reg. 6, Debug */
#define VADC_G3RESD7	(*( VADC_G0RESD0_type *) 0xf002139cu)	/* Group 3 Result Reg. 7, Debug */
#define VADC_G3RESD8	(*( VADC_G0RESD0_type *) 0xf00213a0u)	/* Group 3 Result Reg. 8, Debug */
#define VADC_G3RESD9	(*( VADC_G0RESD0_type *) 0xf00213a4u)	/* Group 3 Result Reg. 9, Debug */
#define VADC_G4RESD0	(*( VADC_G0RESD0_type *) 0xf0021780u)	/* Group 4 Result Reg. 0, Debug */
#define VADC_G4RESD1	(*( VADC_G0RESD0_type *) 0xf0021784u)	/* Group 4 Result Reg. 1, Debug */
#define VADC_G4RESD10	(*( VADC_G0RESD0_type *) 0xf00217a8u)	/* Group 4 Result Reg. 10, Debug */
#define VADC_G4RESD11	(*( VADC_G0RESD0_type *) 0xf00217acu)	/* Group 4 Result Reg. 11, Debug */
#define VADC_G4RESD12	(*( VADC_G0RESD0_type *) 0xf00217b0u)	/* Group 4 Result Reg. 12, Debug */
#define VADC_G4RESD13	(*( VADC_G0RESD0_type *) 0xf00217b4u)	/* Group 4 Result Reg. 13, Debug */
#define VADC_G4RESD14	(*( VADC_G0RESD0_type *) 0xf00217b8u)	/* Group 4 Result Reg. 14, Debug */
#define VADC_G4RESD15	(*( VADC_G0RESD0_type *) 0xf00217bcu)	/* Group 4 Result Reg. 15, Debug */
#define VADC_G4RESD2	(*( VADC_G0RESD0_type *) 0xf0021788u)	/* Group 4 Result Reg. 2, Debug */
#define VADC_G4RESD3	(*( VADC_G0RESD0_type *) 0xf002178cu)	/* Group 4 Result Reg. 3, Debug */
#define VADC_G4RESD4	(*( VADC_G0RESD0_type *) 0xf0021790u)	/* Group 4 Result Reg. 4, Debug */
#define VADC_G4RESD5	(*( VADC_G0RESD0_type *) 0xf0021794u)	/* Group 4 Result Reg. 5, Debug */
#define VADC_G4RESD6	(*( VADC_G0RESD0_type *) 0xf0021798u)	/* Group 4 Result Reg. 6, Debug */
#define VADC_G4RESD7	(*( VADC_G0RESD0_type *) 0xf002179cu)	/* Group 4 Result Reg. 7, Debug */
#define VADC_G4RESD8	(*( VADC_G0RESD0_type *) 0xf00217a0u)	/* Group 4 Result Reg. 8, Debug */
#define VADC_G4RESD9	(*( VADC_G0RESD0_type *) 0xf00217a4u)	/* Group 4 Result Reg. 9, Debug */
#define VADC_G5RESD0	(*( VADC_G0RESD0_type *) 0xf0021b80u)	/* Group 5 Result Reg. 0, Debug */
#define VADC_G5RESD1	(*( VADC_G0RESD0_type *) 0xf0021b84u)	/* Group 5 Result Reg. 1, Debug */
#define VADC_G5RESD10	(*( VADC_G0RESD0_type *) 0xf0021ba8u)	/* Group 5 Result Reg. 10, Debug */
#define VADC_G5RESD11	(*( VADC_G0RESD0_type *) 0xf0021bacu)	/* Group 5 Result Reg. 11, Debug */
#define VADC_G5RESD12	(*( VADC_G0RESD0_type *) 0xf0021bb0u)	/* Group 5 Result Reg. 12, Debug */
#define VADC_G5RESD13	(*( VADC_G0RESD0_type *) 0xf0021bb4u)	/* Group 5 Result Reg. 13, Debug */
#define VADC_G5RESD14	(*( VADC_G0RESD0_type *) 0xf0021bb8u)	/* Group 5 Result Reg. 14, Debug */
#define VADC_G5RESD15	(*( VADC_G0RESD0_type *) 0xf0021bbcu)	/* Group 5 Result Reg. 15, Debug */
#define VADC_G5RESD2	(*( VADC_G0RESD0_type *) 0xf0021b88u)	/* Group 5 Result Reg. 2, Debug */
#define VADC_G5RESD3	(*( VADC_G0RESD0_type *) 0xf0021b8cu)	/* Group 5 Result Reg. 3, Debug */
#define VADC_G5RESD4	(*( VADC_G0RESD0_type *) 0xf0021b90u)	/* Group 5 Result Reg. 4, Debug */
#define VADC_G5RESD5	(*( VADC_G0RESD0_type *) 0xf0021b94u)	/* Group 5 Result Reg. 5, Debug */
#define VADC_G5RESD6	(*( VADC_G0RESD0_type *) 0xf0021b98u)	/* Group 5 Result Reg. 6, Debug */
#define VADC_G5RESD7	(*( VADC_G0RESD0_type *) 0xf0021b9cu)	/* Group 5 Result Reg. 7, Debug */
#define VADC_G5RESD8	(*( VADC_G0RESD0_type *) 0xf0021ba0u)	/* Group 5 Result Reg. 8, Debug */
#define VADC_G5RESD9	(*( VADC_G0RESD0_type *) 0xf0021ba4u)	/* Group 5 Result Reg. 9, Debug */
#define VADC_G6RESD0	(*( VADC_G0RESD0_type *) 0xf0021f80u)	/* Group 6 Result Reg. 0, Debug */
#define VADC_G6RESD1	(*( VADC_G0RESD0_type *) 0xf0021f84u)	/* Group 6 Result Reg. 1, Debug */
#define VADC_G6RESD10	(*( VADC_G0RESD0_type *) 0xf0021fa8u)	/* Group 6 Result Reg. 10, Debug */
#define VADC_G6RESD11	(*( VADC_G0RESD0_type *) 0xf0021facu)	/* Group 6 Result Reg. 11, Debug */
#define VADC_G6RESD12	(*( VADC_G0RESD0_type *) 0xf0021fb0u)	/* Group 6 Result Reg. 12, Debug */
#define VADC_G6RESD13	(*( VADC_G0RESD0_type *) 0xf0021fb4u)	/* Group 6 Result Reg. 13, Debug */
#define VADC_G6RESD14	(*( VADC_G0RESD0_type *) 0xf0021fb8u)	/* Group 6 Result Reg. 14, Debug */
#define VADC_G6RESD15	(*( VADC_G0RESD0_type *) 0xf0021fbcu)	/* Group 6 Result Reg. 15, Debug */
#define VADC_G6RESD2	(*( VADC_G0RESD0_type *) 0xf0021f88u)	/* Group 6 Result Reg. 2, Debug */
#define VADC_G6RESD3	(*( VADC_G0RESD0_type *) 0xf0021f8cu)	/* Group 6 Result Reg. 3, Debug */
#define VADC_G6RESD4	(*( VADC_G0RESD0_type *) 0xf0021f90u)	/* Group 6 Result Reg. 4, Debug */
#define VADC_G6RESD5	(*( VADC_G0RESD0_type *) 0xf0021f94u)	/* Group 6 Result Reg. 5, Debug */
#define VADC_G6RESD6	(*( VADC_G0RESD0_type *) 0xf0021f98u)	/* Group 6 Result Reg. 6, Debug */
#define VADC_G6RESD7	(*( VADC_G0RESD0_type *) 0xf0021f9cu)	/* Group 6 Result Reg. 7, Debug */
#define VADC_G6RESD8	(*( VADC_G0RESD0_type *) 0xf0021fa0u)	/* Group 6 Result Reg. 8, Debug */
#define VADC_G6RESD9	(*( VADC_G0RESD0_type *) 0xf0021fa4u)	/* Group 6 Result Reg. 9, Debug */
#define VADC_G7RESD0	(*( VADC_G0RESD0_type *) 0xf0022380u)	/* Group 7 Result Reg. 0, Debug */
#define VADC_G7RESD1	(*( VADC_G0RESD0_type *) 0xf0022384u)	/* Group 7 Result Reg. 1, Debug */
#define VADC_G7RESD10	(*( VADC_G0RESD0_type *) 0xf00223a8u)	/* Group 7 Result Reg. 10, Debug */
#define VADC_G7RESD11	(*( VADC_G0RESD0_type *) 0xf00223acu)	/* Group 7 Result Reg. 11, Debug */
#define VADC_G7RESD12	(*( VADC_G0RESD0_type *) 0xf00223b0u)	/* Group 7 Result Reg. 12, Debug */
#define VADC_G7RESD13	(*( VADC_G0RESD0_type *) 0xf00223b4u)	/* Group 7 Result Reg. 13, Debug */
#define VADC_G7RESD14	(*( VADC_G0RESD0_type *) 0xf00223b8u)	/* Group 7 Result Reg. 14, Debug */
#define VADC_G7RESD15	(*( VADC_G0RESD0_type *) 0xf00223bcu)	/* Group 7 Result Reg. 15, Debug */
#define VADC_G7RESD2	(*( VADC_G0RESD0_type *) 0xf0022388u)	/* Group 7 Result Reg. 2, Debug */
#define VADC_G7RESD3	(*( VADC_G0RESD0_type *) 0xf002238cu)	/* Group 7 Result Reg. 3, Debug */
#define VADC_G7RESD4	(*( VADC_G0RESD0_type *) 0xf0022390u)	/* Group 7 Result Reg. 4, Debug */
#define VADC_G7RESD5	(*( VADC_G0RESD0_type *) 0xf0022394u)	/* Group 7 Result Reg. 5, Debug */
#define VADC_G7RESD6	(*( VADC_G0RESD0_type *) 0xf0022398u)	/* Group 7 Result Reg. 6, Debug */
#define VADC_G7RESD7	(*( VADC_G0RESD0_type *) 0xf002239cu)	/* Group 7 Result Reg. 7, Debug */
#define VADC_G7RESD8	(*( VADC_G0RESD0_type *) 0xf00223a0u)	/* Group 7 Result Reg. 8, Debug */
#define VADC_G7RESD9	(*( VADC_G0RESD0_type *) 0xf00223a4u)	/* Group 7 Result Reg. 9, Debug */

typedef volatile union
{
	struct
	{ 
		unsigned int REV0NP         : 4;	/* Service Request Node Pointer Result Event i */
		unsigned int REV1NP         : 4;	/* Service Request Node Pointer Result Event i */
		unsigned int REV2NP         : 4;	/* Service Request Node Pointer Result Event i */
		unsigned int REV3NP         : 4;	/* Service Request Node Pointer Result Event i */
		unsigned int REV4NP         : 4;	/* Service Request Node Pointer Result Event i */
		unsigned int REV5NP         : 4;	/* Service Request Node Pointer Result Event i */
		unsigned int REV6NP         : 4;	/* Service Request Node Pointer Result Event i */
		unsigned int REV7NP         : 4;	/* Service Request Node Pointer Result Event i */
	} B;
	int I;
	unsigned int U;

} VADC_G0REVNP0_type;
#define VADC_G0REVNP0	(*( VADC_G0REVNP0_type *) 0xf00205b0u)	/* Result Event Node Pointer Register 0, Group 0 */
#define VADC_G1REVNP0	(*( VADC_G0REVNP0_type *) 0xf00209b0u)	/* Result Event Node Pointer Register 0, Group 1 */
#define VADC_G2REVNP0	(*( VADC_G0REVNP0_type *) 0xf0020db0u)	/* Result Event Node Pointer Register 0, Group 2 */
#define VADC_G3REVNP0	(*( VADC_G0REVNP0_type *) 0xf00211b0u)	/* Result Event Node Pointer Register 0, Group 3 */
#define VADC_G4REVNP0	(*( VADC_G0REVNP0_type *) 0xf00215b0u)	/* Result Event Node Pointer Register 0, Group 4 */
#define VADC_G5REVNP0	(*( VADC_G0REVNP0_type *) 0xf00219b0u)	/* Result Event Node Pointer Register 0, Group 5 */
#define VADC_G6REVNP0	(*( VADC_G0REVNP0_type *) 0xf0021db0u)	/* Result Event Node Pointer Register 0, Group 6 */
#define VADC_G7REVNP0	(*( VADC_G0REVNP0_type *) 0xf00221b0u)	/* Result Event Node Pointer Register 0, Group 7 */

typedef volatile union
{
	struct
	{ 
		unsigned int REV8NP         : 4;	/* Service Request Node Pointer Result Event i */
		unsigned int REV9NP         : 4;	/* Service Request Node Pointer Result Event i */
		unsigned int REV10NP        : 4;	/* Service Request Node Pointer Result Event i */
		unsigned int REV11NP        : 4;	/* Service Request Node Pointer Result Event i */
		unsigned int REV12NP        : 4;	/* Service Request Node Pointer Result Event i */
		unsigned int REV13NP        : 4;	/* Service Request Node Pointer Result Event i */
		unsigned int REV14NP        : 4;	/* Service Request Node Pointer Result Event i */
		unsigned int REV15NP        : 4;	/* Service Request Node Pointer Result Event i */
	} B;
	int I;
	unsigned int U;

} VADC_G0REVNP1_type;
#define VADC_G0REVNP1	(*( VADC_G0REVNP1_type *) 0xf00205b4u)	/* Result Event Node Pointer Register 1, Group 0 */
#define VADC_G1REVNP1	(*( VADC_G0REVNP1_type *) 0xf00209b4u)	/* Result Event Node Pointer Register 1, Group 1 */
#define VADC_G2REVNP1	(*( VADC_G0REVNP1_type *) 0xf0020db4u)	/* Result Event Node Pointer Register 1, Group 2 */
#define VADC_G3REVNP1	(*( VADC_G0REVNP1_type *) 0xf00211b4u)	/* Result Event Node Pointer Register 1, Group 3 */
#define VADC_G4REVNP1	(*( VADC_G0REVNP1_type *) 0xf00215b4u)	/* Result Event Node Pointer Register 1, Group 4 */
#define VADC_G5REVNP1	(*( VADC_G0REVNP1_type *) 0xf00219b4u)	/* Result Event Node Pointer Register 1, Group 5 */
#define VADC_G6REVNP1	(*( VADC_G0REVNP1_type *) 0xf0021db4u)	/* Result Event Node Pointer Register 1, Group 6 */
#define VADC_G7REVNP1	(*( VADC_G0REVNP1_type *) 0xf00221b4u)	/* Result Event Node Pointer Register 1, Group 7 */

typedef volatile union
{
	struct
	{ 
		unsigned int ASSRR0         : 1;	/* Assignment for Result Register 0 */
		unsigned int ASSRR1         : 1;	/* Assignment for Result Register 1 */
		unsigned int ASSRR2         : 1;	/* Assignment for Result Register 2 */
		unsigned int ASSRR3         : 1;	/* Assignment for Result Register 3 */
		unsigned int ASSRR4         : 1;	/* Assignment for Result Register 4 */
		unsigned int ASSRR5         : 1;	/* Assignment for Result Register 5 */
		unsigned int ASSRR6         : 1;	/* Assignment for Result Register 6 */
		unsigned int ASSRR7         : 1;	/* Assignment for Result Register 7 */
		unsigned int ASSRR8         : 1;	/* Assignment for Result Register 8 */
		unsigned int ASSRR9         : 1;	/* Assignment for Result Register 9 */
		unsigned int ASSRR10        : 1;	/* Assignment for Result Register 10 */
		unsigned int ASSRR11        : 1;	/* Assignment for Result Register 11 */
		unsigned int ASSRR12        : 1;	/* Assignment for Result Register 12 */
		unsigned int ASSRR13        : 1;	/* Assignment for Result Register 13 */
		unsigned int ASSRR14        : 1;	/* Assignment for Result Register 14 */
		unsigned int ASSRR15        : 1;	/* Assignment for Result Register 15 */
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} VADC_G0RRASS_type;
#define VADC_G0RRASS	(*( VADC_G0RRASS_type *) 0xf002048cu)	/* Result Assignment Register, Group 0 */
#define VADC_G1RRASS	(*( VADC_G0RRASS_type *) 0xf002088cu)	/* Result Assignment Register, Group 1 */
#define VADC_G2RRASS	(*( VADC_G0RRASS_type *) 0xf0020c8cu)	/* Result Assignment Register, Group 2 */
#define VADC_G3RRASS	(*( VADC_G0RRASS_type *) 0xf002108cu)	/* Result Assignment Register, Group 3 */
#define VADC_G4RRASS	(*( VADC_G0RRASS_type *) 0xf002148cu)	/* Result Assignment Register, Group 4 */
#define VADC_G5RRASS	(*( VADC_G0RRASS_type *) 0xf002188cu)	/* Result Assignment Register, Group 5 */
#define VADC_G6RRASS	(*( VADC_G0RRASS_type *) 0xf0021c8cu)	/* Result Assignment Register, Group 6 */
#define VADC_G7RRASS	(*( VADC_G0RRASS_type *) 0xf002208cu)	/* Result Assignment Register, Group 7 */

typedef volatile union
{
	struct
	{ 
		unsigned int SEV0           : 1;	/* Clear Source Event 0/1 */
		unsigned int SEV1           : 1;	/* Clear Source Event 0/1 */
		unsigned int                : 30;
	} B;
	int I;
	unsigned int U;

} VADC_G0SEFCLR_type;
#define VADC_G0SEFCLR	(*( VADC_G0SEFCLR_type *) 0xf0020598u)	/* Source Event Flag Clear Register, Group 0 */
#define VADC_G1SEFCLR	(*( VADC_G0SEFCLR_type *) 0xf0020998u)	/* Source Event Flag Clear Register, Group 1 */
#define VADC_G2SEFCLR	(*( VADC_G0SEFCLR_type *) 0xf0020d98u)	/* Source Event Flag Clear Register, Group 2 */
#define VADC_G3SEFCLR	(*( VADC_G0SEFCLR_type *) 0xf0021198u)	/* Source Event Flag Clear Register, Group 3 */
#define VADC_G4SEFCLR	(*( VADC_G0SEFCLR_type *) 0xf0021598u)	/* Source Event Flag Clear Register, Group 4 */
#define VADC_G5SEFCLR	(*( VADC_G0SEFCLR_type *) 0xf0021998u)	/* Source Event Flag Clear Register, Group 5 */
#define VADC_G6SEFCLR	(*( VADC_G0SEFCLR_type *) 0xf0021d98u)	/* Source Event Flag Clear Register, Group 6 */
#define VADC_G7SEFCLR	(*( VADC_G0SEFCLR_type *) 0xf0022198u)	/* Source Event Flag Clear Register, Group 7 */

typedef volatile union
{
	struct
	{ 
		unsigned int SEV0           : 1;	/* Source Event 0/1 */
		unsigned int SEV1           : 1;	/* Source Event 0/1 */
		unsigned int                : 30;
	} B;
	int I;
	unsigned int U;

} VADC_G0SEFLAG_type;
#define VADC_G0SEFLAG	(*( VADC_G0SEFLAG_type *) 0xf0020588u)	/* Source Event Flag Register, Group 0 */
#define VADC_G1SEFLAG	(*( VADC_G0SEFLAG_type *) 0xf0020988u)	/* Source Event Flag Register, Group 1 */
#define VADC_G2SEFLAG	(*( VADC_G0SEFLAG_type *) 0xf0020d88u)	/* Source Event Flag Register, Group 2 */
#define VADC_G3SEFLAG	(*( VADC_G0SEFLAG_type *) 0xf0021188u)	/* Source Event Flag Register, Group 3 */
#define VADC_G4SEFLAG	(*( VADC_G0SEFLAG_type *) 0xf0021588u)	/* Source Event Flag Register, Group 4 */
#define VADC_G5SEFLAG	(*( VADC_G0SEFLAG_type *) 0xf0021988u)	/* Source Event Flag Register, Group 5 */
#define VADC_G6SEFLAG	(*( VADC_G0SEFLAG_type *) 0xf0021d88u)	/* Source Event Flag Register, Group 6 */
#define VADC_G7SEFLAG	(*( VADC_G0SEFLAG_type *) 0xf0022188u)	/* Source Event Flag Register, Group 7 */

typedef volatile union
{
	struct
	{ 
		unsigned int SEV0NP         : 4;	/* Service Request Node Pointer Source Event i */
		unsigned int SEV1NP         : 4;	/* Service Request Node Pointer Source Event i */
		unsigned int                : 24;
	} B;
	int I;
	unsigned int U;

} VADC_G0SEVNP_type;
#define VADC_G0SEVNP	(*( VADC_G0SEVNP_type *) 0xf00205c0u)	/* Source Event Node Pointer Register, Group 0 */
#define VADC_G1SEVNP	(*( VADC_G0SEVNP_type *) 0xf00209c0u)	/* Source Event Node Pointer Register, Group 1 */
#define VADC_G2SEVNP	(*( VADC_G0SEVNP_type *) 0xf0020dc0u)	/* Source Event Node Pointer Register, Group 2 */
#define VADC_G3SEVNP	(*( VADC_G0SEVNP_type *) 0xf00211c0u)	/* Source Event Node Pointer Register, Group 3 */
#define VADC_G4SEVNP	(*( VADC_G0SEVNP_type *) 0xf00215c0u)	/* Source Event Node Pointer Register, Group 4 */
#define VADC_G5SEVNP	(*( VADC_G0SEVNP_type *) 0xf00219c0u)	/* Source Event Node Pointer Register, Group 5 */
#define VADC_G6SEVNP	(*( VADC_G0SEVNP_type *) 0xf0021dc0u)	/* Source Event Node Pointer Register, Group 6 */
#define VADC_G7SEVNP	(*( VADC_G0SEVNP_type *) 0xf00221c0u)	/* Source Event Node Pointer Register, Group 7 */

typedef volatile union
{
	struct
	{ 
		unsigned int AGSR0          : 1;	/* Activate Group Service Request Node 0 */
		unsigned int AGSR1          : 1;	/* Activate Group Service Request Node 1 */
		unsigned int AGSR2          : 1;	/* Activate Group Service Request Node 2 */
		unsigned int AGSR3          : 1;	/* Activate Group Service Request Node 3 */
		unsigned int                : 4;
		unsigned int ASSR0          : 1;	/* Activate Shared Service Request Node 0 */
		unsigned int ASSR1          : 1;	/* Activate Shared Service Request Node 1 */
		unsigned int ASSR2          : 1;	/* Activate Shared Service Request Node 2 */
		unsigned int ASSR3          : 1;	/* Activate Shared Service Request Node 3 */
		unsigned int                : 20;
	} B;
	int I;
	unsigned int U;

} VADC_G0SRACT_type;
#define VADC_G0SRACT	(*( VADC_G0SRACT_type *) 0xf00205c8u)	/* Service Request Software Activation Trigger, Group 0 */
#define VADC_G1SRACT	(*( VADC_G0SRACT_type *) 0xf00209c8u)	/* Service Request Software Activation Trigger, Group 1 */
#define VADC_G2SRACT	(*( VADC_G0SRACT_type *) 0xf0020dc8u)	/* Service Request Software Activation Trigger, Group 2 */
#define VADC_G3SRACT	(*( VADC_G0SRACT_type *) 0xf00211c8u)	/* Service Request Software Activation Trigger, Group 3 */
#define VADC_G4SRACT	(*( VADC_G0SRACT_type *) 0xf00215c8u)	/* Service Request Software Activation Trigger, Group 4 */
#define VADC_G5SRACT	(*( VADC_G0SRACT_type *) 0xf00219c8u)	/* Service Request Software Activation Trigger, Group 5 */
#define VADC_G6SRACT	(*( VADC_G0SRACT_type *) 0xf0021dc8u)	/* Service Request Software Activation Trigger, Group 6 */
#define VADC_G7SRACT	(*( VADC_G0SRACT_type *) 0xf00221c8u)	/* Service Request Software Activation Trigger, Group 7 */

typedef volatile union
{
	struct
	{ 
		unsigned int STSEL          : 2;	/* Start Selection */
		unsigned int                : 2;
		unsigned int EVALR1         : 1;	/* Evaluate Ready Input Rx */
		unsigned int EVALR2         : 1;	/* Evaluate Ready Input Rx */
		unsigned int EVALR3         : 1;	/* Evaluate Ready Input Rx */
		unsigned int                : 25;
	} B;
	int I;
	unsigned int U;

} VADC_G0SYNCTR_type;
#define VADC_G0SYNCTR	(*( VADC_G0SYNCTR_type *) 0xf00204c0u)	/* Synchronization Control Register, Group 0 */
#define VADC_G1SYNCTR	(*( VADC_G0SYNCTR_type *) 0xf00208c0u)	/* Synchronization Control Register, Group 1 */
#define VADC_G2SYNCTR	(*( VADC_G0SYNCTR_type *) 0xf0020cc0u)	/* Synchronization Control Register, Group 2 */
#define VADC_G3SYNCTR	(*( VADC_G0SYNCTR_type *) 0xf00210c0u)	/* Synchronization Control Register, Group 3 */
#define VADC_G4SYNCTR	(*( VADC_G0SYNCTR_type *) 0xf00214c0u)	/* Synchronization Control Register, Group 4 */
#define VADC_G5SYNCTR	(*( VADC_G0SYNCTR_type *) 0xf00218c0u)	/* Synchronization Control Register, Group 5 */
#define VADC_G6SYNCTR	(*( VADC_G0SYNCTR_type *) 0xf0021cc0u)	/* Synchronization Control Register, Group 6 */
#define VADC_G7SYNCTR	(*( VADC_G0SYNCTR_type *) 0xf00220c0u)	/* Synchronization Control Register, Group 7 */

typedef volatile union
{
	struct
	{ 
		unsigned int VF0            : 1;	/* Valid Flag of Result Register x */
		unsigned int VF1            : 1;	/* Valid Flag of Result Register x */
		unsigned int VF2            : 1;	/* Valid Flag of Result Register x */
		unsigned int VF3            : 1;	/* Valid Flag of Result Register x */
		unsigned int VF4            : 1;	/* Valid Flag of Result Register x */
		unsigned int VF5            : 1;	/* Valid Flag of Result Register x */
		unsigned int VF6            : 1;	/* Valid Flag of Result Register x */
		unsigned int VF7            : 1;	/* Valid Flag of Result Register x */
		unsigned int VF8            : 1;	/* Valid Flag of Result Register x */
		unsigned int VF9            : 1;	/* Valid Flag of Result Register x */
		unsigned int VF10           : 1;	/* Valid Flag of Result Register x */
		unsigned int VF11           : 1;	/* Valid Flag of Result Register x */
		unsigned int VF12           : 1;	/* Valid Flag of Result Register x */
		unsigned int VF13           : 1;	/* Valid Flag of Result Register x */
		unsigned int VF14           : 1;	/* Valid Flag of Result Register x */
		unsigned int VF15           : 1;	/* Valid Flag of Result Register x */
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} VADC_G0VFR_type;
#define VADC_G0VFR	(*( VADC_G0VFR_type *) 0xf00205f8u)	/* Valid Flag Register, Group 0 */
#define VADC_G1VFR	(*( VADC_G0VFR_type *) 0xf00209f8u)	/* Valid Flag Register, Group 1 */
#define VADC_G2VFR	(*( VADC_G0VFR_type *) 0xf0020df8u)	/* Valid Flag Register, Group 2 */
#define VADC_G3VFR	(*( VADC_G0VFR_type *) 0xf00211f8u)	/* Valid Flag Register, Group 3 */
#define VADC_G4VFR	(*( VADC_G0VFR_type *) 0xf00215f8u)	/* Valid Flag Register, Group 4 */
#define VADC_G5VFR	(*( VADC_G0VFR_type *) 0xf00219f8u)	/* Valid Flag Register, Group 5 */
#define VADC_G6VFR	(*( VADC_G0VFR_type *) 0xf0021df8u)	/* Valid Flag Register, Group 6 */
#define VADC_G7VFR	(*( VADC_G0VFR_type *) 0xf00221f8u)	/* Valid Flag Register, Group 7 */

typedef volatile union
{
	struct
	{ 
		unsigned int DIVA           : 5;	/* Divider Factor for the Analog Internal Clock */
		unsigned int                : 2;
		unsigned int DCMSB          : 1;	/* Double Clock for the MSB Conversion */
		unsigned int DIVD           : 2;	/* Divider Factor for the Arbiter Clock */
		unsigned int                : 2;
		unsigned int REFPC          : 1;	/* Reference Precharge Control */
		unsigned int                : 1;
		unsigned int LOSUP          : 1;	/* Low Power Supply Voltage Select */
		unsigned int DIVWC          : 1;	/* Write Control for Divider Parameters */
		unsigned int DPCAL0         : 1;	/* Disable Post-Calibration */
		unsigned int DPCAL1         : 1;	/* Disable Post-Calibration */
		unsigned int DPCAL2         : 1;	/* Disable Post-Calibration */
		unsigned int DPCAL3         : 1;	/* Disable Post-Calibration */
		unsigned int DPCAL4         : 1;	/* Disable Post-Calibration */
		unsigned int DPCAL5         : 1;	/* Disable Post-Calibration */
		unsigned int DPCAL6         : 1;	/* Disable Post-Calibration */
		unsigned int DPCAL7         : 1;	/* Disable Post-Calibration */
		unsigned int                : 7;
		unsigned int SUCAL          : 1;	/* Start-Up Calibration */
	} B;
	int I;
	unsigned int U;

} VADC_GLOBCFG_type;
#define VADC_GLOBCFG	(*( VADC_GLOBCFG_type *) 0xf0020080u)	/* Global Configuration Register */

typedef volatile union
{
	struct
	{ 
		unsigned int SEVGLB         : 1;	/* Source Event (Background) */
		unsigned int                : 7;
		unsigned int REVGLB         : 1;	/* Global Result Event */
		unsigned int                : 7;
		unsigned int SEVGLBCLR      : 1;	/* Clear Source Event (Background) */
		unsigned int                : 7;
		unsigned int REVGLBCLR      : 1;	/* Clear Global Result Event */
		unsigned int                : 7;
	} B;
	int I;
	unsigned int U;

} VADC_GLOBEFLAG_type;
#define VADC_GLOBEFLAG	(*( VADC_GLOBEFLAG_type *) 0xf00200e0u)	/* Global Event Flag Register */

typedef volatile union
{
	struct
	{ 
		unsigned int SEV0NP         : 4;	/* Service Request Node Pointer Backgr. Source */
		unsigned int                : 12;
		unsigned int REV0NP         : 4;	/* Service Request Node Pointer Backgr. Result */
		unsigned int                : 12;
	} B;
	int I;
	unsigned int U;

} VADC_GLOBEVNP_type;
#define VADC_GLOBEVNP	(*( VADC_GLOBEVNP_type *) 0xf0020140u)	/* Global Event Node Pointer Register */

typedef volatile union
{
	struct
	{ 
		unsigned int                : 16;
		unsigned int DRCTR          : 4;	/* Data Reduction Control */
		unsigned int                : 4;
		unsigned int WFR            : 1;	/* Wait-for-Read Mode Enable */
		unsigned int                : 6;
		unsigned int SRGEN          : 1;	/* Service Request Generation Enable */
	} B;
	int I;
	unsigned int U;

} VADC_GLOBRCR_type;
#define VADC_GLOBRCR	(*( VADC_GLOBRCR_type *) 0xf0020280u)	/* Global Result Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int RESULT         : 16;	/* Result of most recent conversion */
		/* const */ unsigned int GNR            : 4;	/* Group Number */
		/* const */ unsigned int CHNR           : 5;	/* Channel Number */
		/* const */ unsigned int EMUX           : 3;	/* External Multiplexer Setting */
		/* const */ unsigned int CRS            : 2;	/* Converted Request Source */
		/* const */ unsigned int FCR            : 1;	/* Fast Compare Result */
		unsigned int VF             : 1;	/* Valid Flag */
	} B;
	int I;
	unsigned int U;

} VADC_GLOBRES_type;
#define VADC_GLOBRES	(*( VADC_GLOBRES_type *) 0xf0020300u)	/* Global Result Register */
#define VADC_GLOBRESD	(*( VADC_GLOBRES_type *) 0xf0020380u)	/* Global Result Register, Debug */

typedef volatile union
{
	struct
	{ 
		unsigned int CDCH           : 4;	/* Conversion Diagnostics Channel */
		unsigned int CDGR           : 4;	/* Conversion Diagnostics Group */
		unsigned int CDEN           : 1;	/* Converter Diagnostics Enable */
		unsigned int CDSEL          : 2;	/* Converter Diagnostics Pull-Devices Select */
		unsigned int                : 4;
		unsigned int CDWC           : 1;	/* Write Control for Conversion Diagnostics */
		unsigned int PDD            : 1;	/* Pull-Down Diagnostics Enable */
		unsigned int MDPD           : 1;	/* Multiplexer Diagnostics Pull-Devices Enable */
		unsigned int MDPU           : 1;	/* Multiplexer Diagnostics Pull-Devices Enable */
		unsigned int                : 4;
		unsigned int MDWC           : 1;	/* Write Control for Multiplexer Diagnostics */
		unsigned int                : 8;
	} B;
	int I;
	unsigned int U;

} VADC_GLOBTF_type;
#define VADC_GLOBTF	(*( VADC_GLOBTF_type *) 0xf0020160u)	/* Global Test Functions Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int MOD_REV        : 8;	/* Module Revision */
		/* const */ unsigned int MOD_TYPE       : 8;	/* Module Type */
		/* const */ unsigned int MOD_NUMBER     : 16;	/* Module Number */
	} B;
	int I;
	unsigned int U;

} VADC_ID_type;
#define VADC_ID	(*( VADC_ID_type *) 0xf0020008u)	/* Module Identification Register */

typedef volatile union
{
	struct
	{ 
		unsigned int RST            : 1;	/* Kernel Reset */
		/* const */ unsigned int RSTSTAT        : 1;	/* Kernel Reset Status */
		unsigned int                : 30;
	} B;
	int I;
	unsigned int U;

} VADC_KRST0_type;
#define VADC_KRST0	(*( VADC_KRST0_type *) 0xf0020034u)	/* Kernel Reset Register 0 */

typedef volatile union
{
	struct
	{ 
		unsigned int RST            : 1;	/* Kernel Reset */
		unsigned int                : 31;
	} B;
	int I;
	unsigned int U;

} VADC_KRST1_type;
#define VADC_KRST1	(*( VADC_KRST1_type *) 0xf0020030u)	/* Kernel Reset Register 1 */

typedef volatile union
{
	struct
	{ 
		unsigned int CLR            : 1;	/* Kernel Reset Status Clear */
		unsigned int                : 31;
	} B;
	int I;
	unsigned int U;

} VADC_KRSTCLR_type;
#define VADC_KRSTCLR	(*( VADC_KRSTCLR_type *) 0xf002002cu)	/* Kernel Reset Status Clear Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 TGS            : 2;	/* Trigger Set for OTGB0/1 */
		unsigned __sfrbit32 TGB            : 1;	/* OTGB0/1 Bus Select */
		unsigned __sfrbit32 TG_P           : 1;	/* TGS, TGB Write Protection */
		unsigned __sfrbit32                : 20;
		unsigned __sfrbit32 SUS            : 4;	/* OCDS Suspend Control */
		unsigned __sfrbit32 SUS_P          : 1;	/* SUS Write Protection */
		/* const */ unsigned __sfrbit32 SUSSTA         : 1;	/* Suspend State */
		unsigned __sfrbit32                : 2;
	} B;
	int I;
	unsigned int U;

} VADC_OCS_type;
#define VADC_OCS	(*( VADC_OCS_type *) 0xf0020028u)	/* OCDS Control and Status Register */


/* DSADC */
typedef volatile union
{
	struct
	{ 
		unsigned int EN0            : 1;	/* Access Enable for Master TAG ID 0 */
		unsigned int EN1            : 1;	/* Access Enable for Master TAG ID 1 */
		unsigned int EN2            : 1;	/* Access Enable for Master TAG ID 2 */
		unsigned int EN3            : 1;	/* Access Enable for Master TAG ID 3 */
		unsigned int EN4            : 1;	/* Access Enable for Master TAG ID 4 */
		unsigned int EN5            : 1;	/* Access Enable for Master TAG ID 5 */
		unsigned int EN6            : 1;	/* Access Enable for Master TAG ID 6 */
		unsigned int EN7            : 1;	/* Access Enable for Master TAG ID 7 */
		unsigned int EN8            : 1;	/* Access Enable for Master TAG ID 8 */
		unsigned int EN9            : 1;	/* Access Enable for Master TAG ID 9 */
		unsigned int EN10           : 1;	/* Access Enable for Master TAG ID 10 */
		unsigned int EN11           : 1;	/* Access Enable for Master TAG ID 11 */
		unsigned int EN12           : 1;	/* Access Enable for Master TAG ID 12 */
		unsigned int EN13           : 1;	/* Access Enable for Master TAG ID 13 */
		unsigned int EN14           : 1;	/* Access Enable for Master TAG ID 14 */
		unsigned int EN15           : 1;	/* Access Enable for Master TAG ID 15 */
		unsigned int EN16           : 1;	/* Access Enable for Master TAG ID 16 */
		unsigned int EN17           : 1;	/* Access Enable for Master TAG ID 17 */
		unsigned int EN18           : 1;	/* Access Enable for Master TAG ID 18 */
		unsigned int EN19           : 1;	/* Access Enable for Master TAG ID 19 */
		unsigned int EN20           : 1;	/* Access Enable for Master TAG ID 20 */
		unsigned int EN21           : 1;	/* Access Enable for Master TAG ID 21 */
		unsigned int EN22           : 1;	/* Access Enable for Master TAG ID 22 */
		unsigned int EN23           : 1;	/* Access Enable for Master TAG ID 23 */
		unsigned int EN24           : 1;	/* Access Enable for Master TAG ID 24 */
		unsigned int EN25           : 1;	/* Access Enable for Master TAG ID 25 */
		unsigned int EN26           : 1;	/* Access Enable for Master TAG ID 26 */
		unsigned int EN27           : 1;	/* Access Enable for Master TAG ID 27 */
		unsigned int EN28           : 1;	/* Access Enable for Master TAG ID 28 */
		unsigned int EN29           : 1;	/* Access Enable for Master TAG ID 29 */
		unsigned int EN30           : 1;	/* Access Enable for Master TAG ID 30 */
		unsigned int EN31           : 1;	/* Access Enable for Master TAG ID 31 */
	} B;
	int I;
	unsigned int U;

} DSADC_ACCEN0_type;
#define DSADC_ACCEN0	(*( DSADC_ACCEN0_type *) 0xf002403cu)	/* Access Enable Register 0 */

typedef volatile union
{
	struct
	{ 
		unsigned int RG00           : 1;	/* Register Group 0, Channels 0 - 3 */
		unsigned int RG01           : 1;	/* Register Group 1, Channels 0 - 3 */
		unsigned int RG02           : 1;	/* Register Group 2, Channels 0 - 3 */
		unsigned int RG03           : 1;	/* Register Group 3, Channels 0 - 3 */
		unsigned int RG04           : 1;	/* Register Group 4, Channels 0 - 3 */
		unsigned int                : 9;
		unsigned int RG10           : 1;	/* Register Group 0/1, General Control */
		unsigned int RG11           : 1;	/* Register Group 0/1, General Control */
		unsigned int RG40           : 1;	/* Register Group 0, Channels 4 - 5 */
		unsigned int RG41           : 1;	/* Register Group 1, Channels 4 - 5 */
		unsigned int RG42           : 1;	/* Register Group 2, Channels 4 - 5 */
		unsigned int RG43           : 1;	/* Register Group 3, Channels 4 - 5 */
		unsigned int RG44           : 1;	/* Register Group 4, Channels 4 - 5 */
		unsigned int                : 11;
	} B;
	int I;
	unsigned int U;

} DSADC_ACCPROT_type;
#define DSADC_ACCPROT	(*( DSADC_ACCPROT_type *) 0xf0024090u)	/* Access Protection Register */

typedef volatile union
{
	struct
	{ 
		unsigned int BOUNDARYL      : 16;	/* Lower Boundary Value for Limit Checking */
		unsigned int BOUNDARYU      : 16;	/* Upper Boundary Value for Limit Checking */
	} B;
	int I;
	unsigned int U;

} DSADC_BOUNDSEL0_type;
#define DSADC_BOUNDSEL0	(*( DSADC_BOUNDSEL0_type *) 0xf0024128u)	/* Boundary Select Register 0 */
#define DSADC_BOUNDSEL1	(*( DSADC_BOUNDSEL0_type *) 0xf0024228u)	/* Boundary Select Register 1 */
#define DSADC_BOUNDSEL2	(*( DSADC_BOUNDSEL0_type *) 0xf0024328u)	/* Boundary Select Register 2 */
#define DSADC_BOUNDSEL3	(*( DSADC_BOUNDSEL0_type *) 0xf0024428u)	/* Boundary Select Register 3 */
#define DSADC_BOUNDSEL4	(*( DSADC_BOUNDSEL0_type *) 0xf0024528u)	/* Boundary Select Register 4 */
#define DSADC_BOUNDSEL5	(*( DSADC_BOUNDSEL0_type *) 0xf0024628u)	/* Boundary Select Register 5 */

typedef volatile union
{
	struct
	{ 
		unsigned int CGMOD          : 2;	/* Carrier Generator Operating Mode */
		unsigned int BREV           : 1;	/* Bit-Reverse PWM Generation */
		unsigned int SIGPOL         : 1;	/* Signal Polarity */
		unsigned int DIVCG          : 4;	/* Divider Factor for the PWM Pattern Signal Generator */
		unsigned int                : 7;
		/* const */ unsigned int RUN            : 1;	/* Run Indicator */
		/* const */ unsigned int BITCOUNT       : 5;	/* Bit Counter */
		unsigned int                : 3;
		/* const */ unsigned int STEPCOUNT      : 4;	/* Step Counter */
		/* const */ unsigned int STEPS          : 1;	/* Step Counter Sign */
		/* const */ unsigned int STEPD          : 1;	/* Step Counter Direction */
		/* const */ unsigned int SGNCG          : 1;	/* Sign Signal from Carrier Generator */
		unsigned int                : 1;
	} B;
	int I;
	unsigned int U;

} DSADC_CGCFG_type;
#define DSADC_CGCFG	(*( DSADC_CGCFG_type *) 0xf00240a0u)	/* Carrier Generator Configuration Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int SDCOUNT        : 8;	/* Sign Delay Counter */
		/* const */ unsigned int SDCAP          : 8;	/* Sign Delay Capture Value */
		unsigned int SDPOS          : 8;	/* Sign Delay Value for Positive Halfwave */
		unsigned int SDNEG          : 8;	/* Sign Delay Value for Negative Halfwave */
	} B;
	int I;
	unsigned int U;

} DSADC_CGSYNC0_type;
#define DSADC_CGSYNC0	(*( DSADC_CGSYNC0_type *) 0xf00241a0u)	/* Carrier Generator Synchronization Register 0 */
#define DSADC_CGSYNC1	(*( DSADC_CGSYNC0_type *) 0xf00242a0u)	/* Carrier Generator Synchronization Register 1 */
#define DSADC_CGSYNC2	(*( DSADC_CGSYNC0_type *) 0xf00243a0u)	/* Carrier Generator Synchronization Register 2 */
#define DSADC_CGSYNC3	(*( DSADC_CGSYNC0_type *) 0xf00244a0u)	/* Carrier Generator Synchronization Register 3 */
#define DSADC_CGSYNC4	(*( DSADC_CGSYNC0_type *) 0xf00245a0u)	/* Carrier Generator Synchronization Register 4 */
#define DSADC_CGSYNC5	(*( DSADC_CGSYNC0_type *) 0xf00246a0u)	/* Carrier Generator Synchronization Register 5 */

typedef volatile union
{
	struct
	{ 
		unsigned int DISR           : 1;	/* Module Disable Request Bit */
		/* const */ unsigned int DISS           : 1;	/* Module Disable Status Bit */
		unsigned int                : 1;
		unsigned int EDIS           : 1;	/* Sleep Mode Enable Control */
		unsigned int                : 28;
	} B;
	int I;
	unsigned int U;

} DSADC_CLC_type;
#define DSADC_CLC	(*( DSADC_CLC_type *) 0xf0024000u)	/* Clock Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int DSRC           : 4;	/* Input Data Source Select */
		unsigned int                : 3;
		unsigned int DSWC           : 1;	/* Write Control for Data Selection */
		unsigned int ITRMODE        : 2;	/* Integrator Trigger Mode */
		unsigned int TSTRMODE       : 2;	/* Timestamp Trigger Mode */
		unsigned int TRSEL          : 3;	/* Trigger Select */
		unsigned int TRWC           : 1;	/* Write Control for Trigger Parameters */
		unsigned int CSRC           : 4;	/* Sample Clock Source Select */
		unsigned int STROBE         : 4;	/* Data Strobe Generation Mode */
		unsigned int                : 7;
		unsigned int SCWC           : 1;	/* Write Control for Strobe/Clock Selection */
	} B;
	int I;
	unsigned int U;

} DSADC_DICFG0_type;
#define DSADC_DICFG0	(*( DSADC_DICFG0_type *) 0xf0024108u)	/* Demodulator Input Configuration Register 0 */
#define DSADC_DICFG1	(*( DSADC_DICFG0_type *) 0xf0024208u)	/* Demodulator Input Configuration Register 1 */
#define DSADC_DICFG2	(*( DSADC_DICFG0_type *) 0xf0024308u)	/* Demodulator Input Configuration Register 2 */
#define DSADC_DICFG3	(*( DSADC_DICFG0_type *) 0xf0024408u)	/* Demodulator Input Configuration Register 3 */
#define DSADC_DICFG4	(*( DSADC_DICFG0_type *) 0xf0024508u)	/* Demodulator Input Configuration Register 4 */
#define DSADC_DICFG5	(*( DSADC_DICFG0_type *) 0xf0024608u)	/* Demodulator Input Configuration Register 5 */

typedef volatile union
{
	struct
	{ 
		unsigned int RESEV0         : 1;	/* Result Event */
		unsigned int RESEV1         : 1;	/* Result Event */
		unsigned int RESEV2         : 1;	/* Result Event */
		unsigned int RESEV3         : 1;	/* Result Event */
		unsigned int RESEV4         : 1;	/* Result Event */
		unsigned int RESEV5         : 1;	/* Result Event */
		unsigned int                : 10;
		unsigned int ALEV0          : 1;	/* Alarm Event */
		unsigned int ALEV1          : 1;	/* Alarm Event */
		unsigned int ALEV2          : 1;	/* Alarm Event */
		unsigned int ALEV3          : 1;	/* Alarm Event */
		unsigned int ALEV4          : 1;	/* Alarm Event */
		unsigned int ALEV5          : 1;	/* Alarm Event */
		unsigned int                : 10;
	} B;
	int I;
	unsigned int U;

} DSADC_EVFLAG_type;
#define DSADC_EVFLAG	(*( DSADC_EVFLAG_type *) 0xf00240e0u)	/* Event Flag Register */

typedef volatile union
{
	struct
	{ 
		unsigned int RESEC0         : 1;	/* Result Event Clear */
		unsigned int RESEC1         : 1;	/* Result Event Clear */
		unsigned int RESEC2         : 1;	/* Result Event Clear */
		unsigned int RESEC3         : 1;	/* Result Event Clear */
		unsigned int RESEC4         : 1;	/* Result Event Clear */
		unsigned int RESEC5         : 1;	/* Result Event Clear */
		unsigned int                : 10;
		unsigned int ALEC0          : 1;	/* Alarm Event Clear */
		unsigned int ALEC1          : 1;	/* Alarm Event Clear */
		unsigned int ALEC2          : 1;	/* Alarm Event Clear */
		unsigned int ALEC3          : 1;	/* Alarm Event Clear */
		unsigned int ALEC4          : 1;	/* Alarm Event Clear */
		unsigned int ALEC5          : 1;	/* Alarm Event Clear */
		unsigned int                : 10;
	} B;
	int I;
	unsigned int U;

} DSADC_EVFLAGCLR_type;
#define DSADC_EVFLAGCLR	(*( DSADC_EVFLAGCLR_type *) 0xf00240e4u)	/* Event Flag Clear Register */

typedef volatile union
{
	struct
	{ 
		unsigned int CFADF          : 8;	/* CIC Filter (Auxiliary) Decimation Factor */
		unsigned int CFAC           : 2;	/* CIC Filter (Auxiliary) Configuration */
		unsigned int SRGA           : 2;	/* Service Request Generation Auxiliary Filter */
		unsigned int ESEL           : 2;	/* Event Select */
		unsigned int EGT            : 1;	/* Event Gating */
		unsigned int                : 1;
		unsigned int AFSC           : 2;	/* Auxiliary Filter Shift Control */
		unsigned int                : 6;
		/* const */ unsigned int CFADCNT        : 8;	/* CIC Filter (Auxiliary) Decimation Counter */
	} B;
	int I;
	unsigned int U;

} DSADC_FCFGA0_type;
#define DSADC_FCFGA0	(*( DSADC_FCFGA0_type *) 0xf0024118u)	/* Filter Configuration Register 0, Auxiliary Filter */
#define DSADC_FCFGA1	(*( DSADC_FCFGA0_type *) 0xf0024218u)	/* Filter Configuration Register 1, Auxiliary Filter */
#define DSADC_FCFGA2	(*( DSADC_FCFGA0_type *) 0xf0024318u)	/* Filter Configuration Register 2, Auxiliary Filter */
#define DSADC_FCFGA3	(*( DSADC_FCFGA0_type *) 0xf0024418u)	/* Filter Configuration Register 3, Auxiliary Filter */
#define DSADC_FCFGA4	(*( DSADC_FCFGA0_type *) 0xf0024518u)	/* Filter Configuration Register 4, Auxiliary Filter */
#define DSADC_FCFGA5	(*( DSADC_FCFGA0_type *) 0xf0024618u)	/* Filter Configuration Register 5, Auxiliary Filter */

typedef volatile union
{
	struct
	{ 
		unsigned int CFMDF          : 8;	/* CIC Filter (Main Chain) Decimation Factor */
		unsigned int CFMC           : 2;	/* CIC Filter (Main Chain) Configuration */
		unsigned int CFEN           : 1;	/* CIC Filter Enable */
		unsigned int                : 1;
		unsigned int MFSC           : 2;	/* Main Filter Shift Control */
		unsigned int SRGM           : 2;	/* Service Request Generation Main Chain */
		unsigned int CFMSV          : 8;	/* CIC Filter (Main Chain) Start Value */
		/* const */ unsigned int CFMDCNT        : 8;	/* CIC Filter (Main Chain) Decimation Counter */
	} B;
	int I;
	unsigned int U;

} DSADC_FCFGC0_type;
#define DSADC_FCFGC0	(*( DSADC_FCFGC0_type *) 0xf0024114u)	/* Filter Configuration Register 0, Main CIC Filter */
#define DSADC_FCFGC1	(*( DSADC_FCFGC0_type *) 0xf0024214u)	/* Filter Configuration Register 1, Main CIC Filter */
#define DSADC_FCFGC2	(*( DSADC_FCFGC0_type *) 0xf0024314u)	/* Filter Configuration Register 2, Main CIC Filter */
#define DSADC_FCFGC3	(*( DSADC_FCFGC0_type *) 0xf0024414u)	/* Filter Configuration Register 3, Main CIC Filter */
#define DSADC_FCFGC4	(*( DSADC_FCFGC0_type *) 0xf0024514u)	/* Filter Configuration Register 4, Main CIC Filter */
#define DSADC_FCFGC5	(*( DSADC_FCFGC0_type *) 0xf0024614u)	/* Filter Configuration Register 5, Main CIC Filter */

typedef volatile union
{
	struct
	{ 
		unsigned int FIR0EN         : 1;	/* FIR Filter 0 Enable */
		unsigned int FIR1EN         : 1;	/* FIR Filter 1 Enable */
		unsigned int OCEN           : 1;	/* Offset Compensation Filter Enable */
		unsigned int DSH            : 2;	/* Data Shift Control */
		unsigned int FSH            : 1;	/* FIR Shift Control */
		unsigned int                : 26;
	} B;
	int I;
	unsigned int U;

} DSADC_FCFGM0_type;
#define DSADC_FCFGM0	(*( DSADC_FCFGM0_type *) 0xf0024110u)	/* Filter Configuration Register 0, Main Filter Chain */
#define DSADC_FCFGM1	(*( DSADC_FCFGM0_type *) 0xf0024210u)	/* Filter Configuration Register 1, Main Filter Chain */
#define DSADC_FCFGM2	(*( DSADC_FCFGM0_type *) 0xf0024310u)	/* Filter Configuration Register 2, Main Filter Chain */
#define DSADC_FCFGM3	(*( DSADC_FCFGM0_type *) 0xf0024410u)	/* Filter Configuration Register 3, Main Filter Chain */
#define DSADC_FCFGM4	(*( DSADC_FCFGM0_type *) 0xf0024510u)	/* Filter Configuration Register 4, Main Filter Chain */
#define DSADC_FCFGM5	(*( DSADC_FCFGM0_type *) 0xf0024610u)	/* Filter Configuration Register 5, Main Filter Chain */

typedef volatile union
{
	struct
	{ 
		unsigned int MCSEL          : 3;	/* Modulator Clock Select */
		unsigned int                : 8;
		unsigned int IRM0           : 1;	/* Internal Resistance Measurement Control */
		unsigned int IRM2           : 1;	/* Internal Resistance Measurement Control */
		unsigned int IRM4           : 1;	/* Internal Resistance Measurement Control */
		unsigned int                : 2;
		unsigned int IBSEL          : 4;	/* Bias Current Select */
		unsigned int LOSUP          : 1;	/* Low Power Supply Voltage Select */
		unsigned int                : 1;
		unsigned int ICT            : 1;	/* Internal Channel Test */
		unsigned int PSWC           : 1;	/* Write Control for Power Supply Parameters */
		unsigned int                : 8;
	} B;
	int I;
	unsigned int U;

} DSADC_GLOBCFG_type;
#define DSADC_GLOBCFG	(*( DSADC_GLOBCFG_type *) 0xf0024080u)	/* Global Configuration Register */

typedef volatile union
{
	struct
	{ 
		unsigned int CH0RUN         : 1;	/* Channel 0 Run Control */
		unsigned int CH1RUN         : 1;	/* Channel 1 Run Control */
		unsigned int CH2RUN         : 1;	/* Channel 2 Run Control */
		unsigned int CH3RUN         : 1;	/* Channel 3 Run Control */
		unsigned int CH4RUN         : 1;	/* Channel 4 Run Control */
		unsigned int CH5RUN         : 1;	/* Channel 5 Run Control */
		unsigned int                : 10;
		unsigned int M0RUN          : 1;	/* Modulator 0 Run Control */
		unsigned int M1RUN          : 1;	/* Modulator 1 Run Control */
		unsigned int M2RUN          : 1;	/* Modulator 2 Run Control */
		unsigned int M3RUN          : 1;	/* Modulator 3 Run Control */
		unsigned int M4RUN          : 1;	/* Modulator 4 Run Control */
		unsigned int M5RUN          : 1;	/* Modulator 5 Run Control */
		unsigned int                : 10;
	} B;
	int I;
	unsigned int U;

} DSADC_GLOBRC_type;
#define DSADC_GLOBRC	(*( DSADC_GLOBRC_type *) 0xf0024088u)	/* Global Run Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int IN0PVC0        : 1;	/* Voltage Control of Positive Input 0 of CH0 */
		unsigned int                : 3;
		unsigned int IN0NVC0        : 1;	/* Voltage Control of Negative Input 0 of CH0 */
		unsigned int                : 3;
		unsigned int IN1PVC0        : 1;	/* Voltage Control of Positive Input 0 of CH1 */
		unsigned int                : 3;
		unsigned int IN1NVC0        : 1;	/* Voltage Control of Negative Input 0 of CH1 */
		unsigned int                : 3;
		unsigned int IN2PVC0        : 1;	/* Voltage Control of Positive Inputs 0-1 of CH2 */
		unsigned int IN2PVC1        : 1;	/* Voltage Control of Positive Inputs 0-1 of CH2 */
		unsigned int                : 2;
		unsigned int IN2NVC0        : 1;	/* Voltage Control of Negative Inputs 0-1 of CH2 */
		unsigned int IN2NVC1        : 1;	/* Voltage Control of Negative Inputs 0-1 of CH2 */
		unsigned int                : 2;
		unsigned int IN3PVC0        : 1;	/* Voltage Control of Positive Inputs 0-3 of CH3 */
		unsigned int IN3PVC1        : 1;	/* Voltage Control of Positive Inputs 0-3 of CH3 */
		unsigned int IN3PVC2        : 1;	/* Voltage Control of Positive Inputs 0-3 of CH3 */
		unsigned int IN3PVC3        : 1;	/* Voltage Control of Positive Inputs 0-3 of CH3 */
		unsigned int IN3NVC0        : 1;	/* Voltage Control of Negative Inputs 0-3 of CH3 */
		unsigned int IN3NVC1        : 1;	/* Voltage Control of Negative Inputs 0-3 of CH3 */
		unsigned int IN3NVC2        : 1;	/* Voltage Control of Negative Inputs 0-3 of CH3 */
		unsigned int IN3NVC3        : 1;	/* Voltage Control of Negative Inputs 0-3 of CH3 */
	} B;
	int I;
	unsigned int U;

} DSADC_GLOBVCMH0_type;
#define DSADC_GLOBVCMH0	(*( DSADC_GLOBVCMH0_type *) 0xf00240b0u)	/* Common Mode Hold Voltage Register 0 */

typedef volatile union
{
	struct
	{ 
		unsigned int IN4PVC0        : 1;	/* Voltage Control of Positive Input 0 of CH4 */
		unsigned int                : 3;
		unsigned int IN4NVC0        : 1;	/* Voltage Control of Negative Input 0 of CH4 */
		unsigned int                : 3;
		unsigned int IN5PVC0        : 1;	/* Voltage Control of Positive Input 0 of CH5 */
		unsigned int                : 3;
		unsigned int IN5NVC0        : 1;	/* Voltage Control of Negative Input 0 of CH5 */
		unsigned int                : 19;
	} B;
	int I;
	unsigned int U;

} DSADC_GLOBVCMH1_type;
#define DSADC_GLOBVCMH1	(*( DSADC_GLOBVCMH1_type *) 0xf00240b4u)	/* Common Mode Hold Voltage Register 1 */

typedef volatile union
{
	struct
	{ 
		unsigned int                : 29;
		unsigned int VHON           : 1;	/* Common Mode Hold Voltage On */
		unsigned int VCMHS          : 2;	/* Common Mode Hold Voltage Selection */
	} B;
	int I;
	unsigned int U;

} DSADC_GLOBVCMH2_type;
#define DSADC_GLOBVCMH2	(*( DSADC_GLOBVCMH2_type *) 0xf00240b8u)	/* Common Mode Hold Voltage Register 2 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int MOD_REV        : 8;	/* Module Revision */
		/* const */ unsigned int MOD_TYPE       : 8;	/* Module Type */
		/* const */ unsigned int MOD_NUMBER     : 16;	/* Module Number */
	} B;
	int I;
	unsigned int U;

} DSADC_ID_type;
#define DSADC_ID	(*( DSADC_ID_type *) 0xf0024008u)	/* Module Identification Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int NVALCNT        : 6;	/* Number of Values Counted */
		unsigned int                : 1;
		/* const */ unsigned int INTEN          : 1;	/* Integration Enable */
		/* const */ unsigned int REPCNT         : 4;	/* Integration Cycle Counter */
		unsigned int REPVAL         : 4;	/* Number of Integration Cycles */
		unsigned int NVALDIS        : 6;	/* Number of Values Discarded */
		unsigned int                : 1;
		unsigned int IWS            : 1;	/* Integration Window Size */
		unsigned int NVALINT        : 6;	/* Number of Values Integrated */
		unsigned int                : 2;
	} B;
	int I;
	unsigned int U;

} DSADC_IWCTR0_type;
#define DSADC_IWCTR0	(*( DSADC_IWCTR0_type *) 0xf0024120u)	/* Integration Window Control Register 0 */
#define DSADC_IWCTR1	(*( DSADC_IWCTR0_type *) 0xf0024220u)	/* Integration Window Control Register 1 */
#define DSADC_IWCTR2	(*( DSADC_IWCTR0_type *) 0xf0024320u)	/* Integration Window Control Register 2 */
#define DSADC_IWCTR3	(*( DSADC_IWCTR0_type *) 0xf0024420u)	/* Integration Window Control Register 3 */
#define DSADC_IWCTR4	(*( DSADC_IWCTR0_type *) 0xf0024520u)	/* Integration Window Control Register 4 */
#define DSADC_IWCTR5	(*( DSADC_IWCTR0_type *) 0xf0024620u)	/* Integration Window Control Register 5 */

typedef volatile union
{
	struct
	{ 
		unsigned int RST            : 1;	/* Kernel Reset */
		/* const */ unsigned int RSTSTAT        : 1;	/* Kernel Reset Status */
		unsigned int                : 30;
	} B;
	int I;
	unsigned int U;

} DSADC_KRST0_type;
#define DSADC_KRST0	(*( DSADC_KRST0_type *) 0xf0024034u)	/* Kernel Reset Register 0 */

typedef volatile union
{
	struct
	{ 
		unsigned int RST            : 1;	/* Kernel Reset */
		unsigned int                : 31;
	} B;
	int I;
	unsigned int U;

} DSADC_KRST1_type;
#define DSADC_KRST1	(*( DSADC_KRST1_type *) 0xf0024030u)	/* Kernel Reset Register 1 */

typedef volatile union
{
	struct
	{ 
		unsigned int CLR            : 1;	/* Kernel Reset Status Clear */
		unsigned int                : 31;
	} B;
	int I;
	unsigned int U;

} DSADC_KRSTCLR_type;
#define DSADC_KRSTCLR	(*( DSADC_KRSTCLR_type *) 0xf002402cu)	/* Kernel Reset Status Clear Register */

typedef volatile union
{
	struct
	{ 
		unsigned int INCFGP         : 2;	/* Configuration of Positive Input Line */
		unsigned int INCFGN         : 2;	/* Configuration of Negative Input Line */
		unsigned int GAINSEL        : 4;	/* Gain Select of Analog Input Path */
		unsigned int INSEL          : 2;	/* Input Pin Selection */
		/* const */ unsigned int INMUX          : 2;	/* Input Multiplexer Setting */
		unsigned int INMODE         : 2;	/* Input Multiplexer Control Mode */
		unsigned int INMAC          : 1;	/* Input Multiplexer Action Control */
		unsigned int INCWC          : 1;	/* Write Control for Input Parameters */
		unsigned int DIVM           : 4;	/* Divider Factor for Modulator Clock */
		unsigned int                : 3;
		unsigned int DWC            : 1;	/* Write Control for Divider Factor */
		unsigned int CMVS           : 2;	/* Common Mode Voltage Selection */
		unsigned int MCFG           : 2;	/* Modulator Configuration */
		unsigned int GCEN           : 1;	/* Gain Calibration Enable */
		unsigned int APC            : 1;	/* Automatic Power Control */
		unsigned int                : 1;
		unsigned int MWC            : 1;	/* Write Control for Mode Selection */
	} B;
	int I;
	unsigned int U;

} DSADC_MODCFG0_type;
#define DSADC_MODCFG0	(*( DSADC_MODCFG0_type *) 0xf0024100u)	/* Modulator Configuration Register 0 */
#define DSADC_MODCFG1	(*( DSADC_MODCFG0_type *) 0xf0024200u)	/* Modulator Configuration Register 1 */
#define DSADC_MODCFG2	(*( DSADC_MODCFG0_type *) 0xf0024300u)	/* Modulator Configuration Register 2 */
#define DSADC_MODCFG3	(*( DSADC_MODCFG0_type *) 0xf0024400u)	/* Modulator Configuration Register 3 */
#define DSADC_MODCFG4	(*( DSADC_MODCFG0_type *) 0xf0024500u)	/* Modulator Configuration Register 4 */
#define DSADC_MODCFG5	(*( DSADC_MODCFG0_type *) 0xf0024600u)	/* Modulator Configuration Register 5 */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32                : 24;
		unsigned __sfrbit32 SUS            : 4;	/* OCDS Suspend Control */
		unsigned __sfrbit32 SUS_P          : 1;	/* SUS Write Protection */
		/* const */ unsigned __sfrbit32 SUSSTA         : 1;	/* Suspend State */
		unsigned __sfrbit32                : 2;
	} B;
	int I;
	unsigned int U;

} DSADC_OCS_type;
#define DSADC_OCS	(*( DSADC_OCS_type *) 0xf0024028u)	/* OCDS Control and Status Register */

typedef volatile union
{
	struct
	{ 
		unsigned int OFFSET         : 16;	/* Offset Value */
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} DSADC_OFFM0_type;
#define DSADC_OFFM0	(*( DSADC_OFFM0_type *) 0xf0024138u)	/* Offset Register 0 Main Filter */
#define DSADC_OFFM1	(*( DSADC_OFFM0_type *) 0xf0024238u)	/* Offset Register 1 Main Filter */
#define DSADC_OFFM2	(*( DSADC_OFFM0_type *) 0xf0024338u)	/* Offset Register 2 Main Filter */
#define DSADC_OFFM3	(*( DSADC_OFFM0_type *) 0xf0024438u)	/* Offset Register 3 Main Filter */
#define DSADC_OFFM4	(*( DSADC_OFFM0_type *) 0xf0024538u)	/* Offset Register 4 Main Filter */
#define DSADC_OFFM5	(*( DSADC_OFFM0_type *) 0xf0024638u)	/* Offset Register 5 Main Filter */

typedef volatile union
{
	struct
	{ 
		unsigned int RFEN           : 1;	/* Rectification Enable */
		unsigned int                : 3;
		unsigned int SSRC           : 2;	/* Sign Source */
		unsigned int                : 9;
		/* const */ unsigned int SDCVAL         : 1;	/* Sign Delay Capture Valid Flag */
		unsigned int                : 14;
		/* const */ unsigned int SGNCS          : 1;	/* Selected Carrier Sign Signal */
		/* const */ unsigned int SGND           : 1;	/* Sign Signal Delayed */
	} B;
	int I;
	unsigned int U;

} DSADC_RECTCFG0_type;
#define DSADC_RECTCFG0	(*( DSADC_RECTCFG0_type *) 0xf00241a8u)	/* Rectification Configuration Register 0 */
#define DSADC_RECTCFG1	(*( DSADC_RECTCFG0_type *) 0xf00242a8u)	/* Rectification Configuration Register 1 */
#define DSADC_RECTCFG2	(*( DSADC_RECTCFG0_type *) 0xf00243a8u)	/* Rectification Configuration Register 2 */
#define DSADC_RECTCFG3	(*( DSADC_RECTCFG0_type *) 0xf00244a8u)	/* Rectification Configuration Register 3 */
#define DSADC_RECTCFG4	(*( DSADC_RECTCFG0_type *) 0xf00245a8u)	/* Rectification Configuration Register 4 */
#define DSADC_RECTCFG5	(*( DSADC_RECTCFG0_type *) 0xf00246a8u)	/* Rectification Configuration Register 5 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int RESULT         : 16;	/* Result of most recent conversion */
		/* const */ unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} DSADC_RESA0_type;
#define DSADC_RESA0	(*( DSADC_RESA0_type *) 0xf0024140u)	/* Result Register 0 Auxiliary Filter */
#define DSADC_RESA1	(*( DSADC_RESA0_type *) 0xf0024240u)	/* Result Register 1 Auxiliary Filter */
#define DSADC_RESA2	(*( DSADC_RESA0_type *) 0xf0024340u)	/* Result Register 2 Auxiliary Filter */
#define DSADC_RESA3	(*( DSADC_RESA0_type *) 0xf0024440u)	/* Result Register 3 Auxiliary Filter */
#define DSADC_RESA4	(*( DSADC_RESA0_type *) 0xf0024540u)	/* Result Register 4 Auxiliary Filter */
#define DSADC_RESA5	(*( DSADC_RESA0_type *) 0xf0024640u)	/* Result Register 5 Auxiliary Filter */
#define DSADC_RESM0	(*( DSADC_RESA0_type *) 0xf0024130u)	/* Result Register 0 Main Filter */
#define DSADC_RESM1	(*( DSADC_RESA0_type *) 0xf0024230u)	/* Result Register 1 Main Filter */
#define DSADC_RESM2	(*( DSADC_RESA0_type *) 0xf0024330u)	/* Result Register 2 Main Filter */
#define DSADC_RESM3	(*( DSADC_RESA0_type *) 0xf0024430u)	/* Result Register 3 Main Filter */
#define DSADC_RESM4	(*( DSADC_RESA0_type *) 0xf0024530u)	/* Result Register 4 Main Filter */
#define DSADC_RESM5	(*( DSADC_RESA0_type *) 0xf0024630u)	/* Result Register 5 Main Filter */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int RESULT         : 16;	/* Result of most recent conversion */
		/* const */ unsigned int CFMDCNT        : 8;	/* CIC Filter (Main Chain) Decimation Counter */
		/* const */ unsigned int NVALCNT        : 6;	/* Number of Values Counted */
		/* const */ unsigned int TSVAL          : 1;	/* Timestamp Valid */
		unsigned int TSSR           : 1;	/* Timestamp Service Request */
	} B;
	int I;
	unsigned int U;

} DSADC_TSTMP0_type;
#define DSADC_TSTMP0	(*( DSADC_TSTMP0_type *) 0xf0024150u)	/* Time-Stamp Register 0 */
#define DSADC_TSTMP1	(*( DSADC_TSTMP0_type *) 0xf0024250u)	/* Time-Stamp Register 1 */
#define DSADC_TSTMP2	(*( DSADC_TSTMP0_type *) 0xf0024350u)	/* Time-Stamp Register 2 */
#define DSADC_TSTMP3	(*( DSADC_TSTMP0_type *) 0xf0024450u)	/* Time-Stamp Register 3 */
#define DSADC_TSTMP4	(*( DSADC_TSTMP0_type *) 0xf0024550u)	/* Time-Stamp Register 4 */
#define DSADC_TSTMP5	(*( DSADC_TSTMP0_type *) 0xf0024650u)	/* Time-Stamp Register 5 */


/* I2C */
typedef volatile union
{
	struct
	{ 
		unsigned int EN0            : 1;	/* Access Enable for Master TAG ID 0 */
		unsigned int EN1            : 1;	/* Access Enable for Master TAG ID 1 */
		unsigned int EN2            : 1;	/* Access Enable for Master TAG ID 2 */
		unsigned int EN3            : 1;	/* Access Enable for Master TAG ID 3 */
		unsigned int EN4            : 1;	/* Access Enable for Master TAG ID 4 */
		unsigned int EN5            : 1;	/* Access Enable for Master TAG ID 5 */
		unsigned int EN6            : 1;	/* Access Enable for Master TAG ID 6 */
		unsigned int EN7            : 1;	/* Access Enable for Master TAG ID 7 */
		unsigned int EN8            : 1;	/* Access Enable for Master TAG ID 8 */
		unsigned int EN9            : 1;	/* Access Enable for Master TAG ID 9 */
		unsigned int EN10           : 1;	/* Access Enable for Master TAG ID 10 */
		unsigned int EN11           : 1;	/* Access Enable for Master TAG ID 11 */
		unsigned int EN12           : 1;	/* Access Enable for Master TAG ID 12 */
		unsigned int EN13           : 1;	/* Access Enable for Master TAG ID 13 */
		unsigned int EN14           : 1;	/* Access Enable for Master TAG ID 14 */
		unsigned int EN15           : 1;	/* Access Enable for Master TAG ID 15 */
		unsigned int EN16           : 1;	/* Access Enable for Master TAG ID 16 */
		unsigned int EN17           : 1;	/* Access Enable for Master TAG ID 17 */
		unsigned int EN18           : 1;	/* Access Enable for Master TAG ID 18 */
		unsigned int EN19           : 1;	/* Access Enable for Master TAG ID 19 */
		unsigned int EN20           : 1;	/* Access Enable for Master TAG ID 20 */
		unsigned int EN21           : 1;	/* Access Enable for Master TAG ID 21 */
		unsigned int EN22           : 1;	/* Access Enable for Master TAG ID 22 */
		unsigned int EN23           : 1;	/* Access Enable for Master TAG ID 23 */
		unsigned int EN24           : 1;	/* Access Enable for Master TAG ID 24 */
		unsigned int EN25           : 1;	/* Access Enable for Master TAG ID 25 */
		unsigned int EN26           : 1;	/* Access Enable for Master TAG ID 26 */
		unsigned int EN27           : 1;	/* Access Enable for Master TAG ID 27 */
		unsigned int EN28           : 1;	/* Access Enable for Master TAG ID 28 */
		unsigned int EN29           : 1;	/* Access Enable for Master TAG ID 29 */
		unsigned int EN30           : 1;	/* Access Enable for Master TAG ID 30 */
		unsigned int EN31           : 1;	/* Access Enable for Master TAG ID 31 */
	} B;
	int I;
	unsigned int U;

} I2C0_ACCEN0_type;
#define I2C0_ACCEN0	(*( I2C0_ACCEN0_type *) 0xf00d000cu)	/* Access Enable Register 0 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int RES            : 32;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} I2C0_ACCEN1_type;
#define I2C0_ACCEN1	(*( I2C0_ACCEN1_type *) 0xf00d0010u)	/* Access Enable Register 1 */

typedef volatile union
{
	struct
	{ 
		unsigned int ADR            : 10;	/* I2C-bus Device Address */
		unsigned int                : 6;
		unsigned int TBAM           : 1;	/* Ten Bit Address Mode */
		unsigned int GCE            : 1;	/* General Call Enable */
		unsigned int MCE            : 1;	/* Master Code Enable */
		unsigned int MnS            : 1;	/* Master / not Slave */
		unsigned int SONA           : 1;	/* Stop on Not-acknowledge */
		unsigned int SOPE           : 1;	/* Stop on Packet End */
		unsigned int                : 10;
	} B;
	int I;
	unsigned int U;

} I2C0_ADDRCFG_type;
#define I2C0_ADDRCFG	(*( I2C0_ADDRCFG_type *) 0xf00c0020u)	/* Address Configuration Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int BS             : 2;	/* Bus Status */
		/* const */ unsigned int RnW            : 1;	/* Read/not Write */
		/* const */ unsigned int                : 29;
	} B;
	int I;
	unsigned int U;

} I2C0_BUSSTAT_type;
#define I2C0_BUSSTAT	(*( I2C0_BUSSTAT_type *) 0xf00c0024u)	/* Bus Status Register */

typedef volatile union
{
	struct
	{ 
		unsigned int DISR           : 1;	/* Module Disable Request Bit */
		/* const */ unsigned int DISS           : 1;	/* Module Disable Status Bit */
		unsigned int                : 30;
	} B;
	int I;
	unsigned int U;

} I2C0_CLC_type;
#define I2C0_CLC	(*( I2C0_CLC_type *) 0xf00d0000u)	/* Clock Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int DISR           : 1;	/* Module Disable Request Bit */
		/* const */ unsigned int DISS           : 1;	/* Module Disable Status Bit */
		unsigned int SPEN           : 1;	/* Module Suspend Enable Bit for OCDS */
		unsigned int EDIS           : 1;	/* External Request Disable */
		unsigned int SBWE           : 1;	/* Module Suspend Bit Write Enable for OCDS */
		unsigned int FSOE           : 1;	/* Fast Switch Off Enable */
		unsigned int                : 2;
		unsigned int RMC            : 8;	/* Clock Divider for Standard Run Mode */
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} I2C0_CLC1_type;
#define I2C0_CLC1	(*( I2C0_CLC1_type *) 0xf00c0000u)	/* Clock Control 1 Register */

typedef volatile union
{
	struct
	{ 
		unsigned int SETRSC         : 1;	/* Set Restart Condition */
		unsigned int SETEND         : 1;	/* Set End of Transmission */
		unsigned int                : 30;
	} B;
	int I;
	unsigned int U;

} I2C0_ENDDCTRL_type;
#define I2C0_ENDDCTRL	(*( I2C0_ENDDCTRL_type *) 0xf00c0014u)	/* End Data Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int RXF_UFL        : 1;	/* RX FIFO Underflow */
		unsigned int RXF_OFL        : 1;	/* RX FIFO Overflow */
		unsigned int TXF_UFL        : 1;	/* TX FIFO Underflow */
		unsigned int TXF_OFL        : 1;	/* TX FIFO Overflow */
		unsigned int                : 28;
	} B;
	int I;
	unsigned int U;

} I2C0_ERRIRQSC_type;
#define I2C0_ERRIRQSC	(*( I2C0_ERRIRQSC_type *) 0xf00c0068u)	/* Error Interrupt Request Source Clear Register */

typedef volatile union
{
	struct
	{ 
		unsigned int RXF_UFL        : 1;	/* RX FIFO Underflow */
		unsigned int RXF_OFL        : 1;	/* RX FIFO Overflow */
		unsigned int TXF_UFL        : 1;	/* TX FIFO Underflow */
		unsigned int TXF_OFL        : 1;	/* TX FIFO Overflow */
		unsigned int                : 28;
	} B;
	int I;
	unsigned int U;

} I2C0_ERRIRQSM_type;
#define I2C0_ERRIRQSM	(*( I2C0_ERRIRQSM_type *) 0xf00c0060u)	/* Error Interrupt Request Source Mask Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int RXF_UFL        : 1;	/* RX FIFO Underflow */
		/* const */ unsigned int RXF_OFL        : 1;	/* RX FIFO Overflow */
		/* const */ unsigned int TXF_UFL        : 1;	/* TX FIFO Underflow */
		/* const */ unsigned int TXF_OFL        : 1;	/* TX FIFO Overflow */
		/* const */ unsigned int                : 28;
	} B;
	int I;
	unsigned int U;

} I2C0_ERRIRQSS_type;
#define I2C0_ERRIRQSS	(*( I2C0_ERRIRQSS_type *) 0xf00c0064u)	/* Error Interrupt Request Source Status Register */

typedef volatile union
{
	struct
	{ 
		unsigned int DEC            : 11;	/* Decrement Value of Fractional Divider */
		unsigned int                : 5;
		unsigned int INC            : 8;	/* Increment Value of Fractional Divider */
		unsigned int                : 8;
	} B;
	int I;
	unsigned int U;

} I2C0_FDIVCFG_type;
#define I2C0_FDIVCFG	(*( I2C0_FDIVCFG_type *) 0xf00c0018u)	/* Fractional Divider Configuration Register */
#define I2C0_FDIVHIGHCFG	(*( I2C0_FDIVCFG_type *) 0xf00c001cu)	/* Fractional Divider High-speed Mode Configuration Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int FFS            : 6;	/* Filled FIFO Stages */
		/* const */ unsigned int                : 26;
	} B;
	int I;
	unsigned int U;

} I2C0_FFSSTAT_type;
#define I2C0_FFSSTAT	(*( I2C0_FFSSTAT_type *) 0xf00c0038u)	/* Filled FIFO Stages Status Register */

typedef volatile union
{
	struct
	{ 
		unsigned int RXBS           : 2;	/* RX Burst Size */
		unsigned int                : 2;
		unsigned int TXBS           : 2;	/* TX Burst Size */
		unsigned int                : 2;
		unsigned int RXFA           : 2;	/* RX FIFO Alignment */
		unsigned int                : 2;
		unsigned int TXFA           : 2;	/* TX FIFO Alignment */
		unsigned int                : 2;
		unsigned int RXFC           : 1;	/* RX FIFO Flow Control */
		unsigned int TXFC           : 1;	/* TX FIFO Flow Control */
		unsigned int                : 14;
	} B;
	int I;
	unsigned int U;

} I2C0_FIFOCFG_type;
#define I2C0_FIFOCFG	(*( I2C0_FIFOCFG_type *) 0xf00c0028u)	/* FIFO Configuration Register */

typedef volatile union
{
	struct
	{ 
		unsigned int PISEL          : 3;	/* Port Input Select */
		unsigned int                : 29;
	} B;
	int I;
	unsigned int U;

} I2C0_GPCTL_type;
#define I2C0_GPCTL	(*( I2C0_GPCTL_type *) 0xf00d0008u)	/* General Purpose Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int LSREQ_INT      : 1;	/* Last Single Request Interrupt */
		unsigned int SREQ_INT       : 1;	/* Single Request Interrupt */
		unsigned int LBREQ_INT      : 1;	/* Last Burst Request Interrupt */
		unsigned int BREQ_INT       : 1;	/* Burst Request Interrupt */
		unsigned int                : 28;
	} B;
	int I;
	unsigned int U;

} I2C0_ICR_type;
#define I2C0_ICR	(*( I2C0_ICR_type *) 0xf00c008cu)	/* Interrupt Clear Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int MOD_REV        : 8;	/* Module Revision Number */
		/* const */ unsigned int MOD_NUMBER     : 8;	/* Module Number */
		/* const */ unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} I2C0_ID_type;
#define I2C0_ID	(*( I2C0_ID_type *) 0xf00c0008u)	/* Module Identification Register */

typedef volatile union
{
	struct
	{ 
		unsigned int LSREQ_INT      : 1;	/* Last Single Request Interrupt */
		unsigned int SREQ_INT       : 1;	/* Single Request Interrupt */
		unsigned int LBREQ_INT      : 1;	/* Last Burst Request Interrupt */
		unsigned int BREQ_INT       : 1;	/* Burst Request Interrupt */
		unsigned int I2C_ERR_INT    : 1;	/* I2C Error Interrupt */
		unsigned int I2C_P_INT      : 1;	/* I2C Protocol Interrupt */
		unsigned int                : 26;
	} B;
	int I;
	unsigned int U;

} I2C0_IMSC_type;
#define I2C0_IMSC	(*( I2C0_IMSC_type *) 0xf00c0084u)	/* Interrupt Mask Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int LSREQ_INT      : 1;	/* Last Single Request Interrupt */
		unsigned int SREQ_INT       : 1;	/* Single Request Interrupt */
		unsigned int LBREQ_INT      : 1;	/* Last Burst Request Interrupt */
		unsigned int BREQ_INT       : 1;	/* Burst Request Interrupt */
		unsigned int I2C_ERR_INT    : 1;	/* I2C Error Interrupt */
		unsigned int I2C_P_INT      : 1;	/* I2C Protocol Interrupt */
		unsigned int                : 26;
	} B;
	int I;
	unsigned int U;

} I2C0_ISR_type;
#define I2C0_ISR	(*( I2C0_ISR_type *) 0xf00c0090u)	/* Interrupt Set Register */

typedef volatile union
{
	struct
	{ 
		unsigned int RST            : 1;	/* Kernel Reset */
		/* const */ unsigned int RSTSTAT        : 1;	/* Kernel Reset Status */
		unsigned int                : 30;
	} B;
	int I;
	unsigned int U;

} I2C0_KRST0_type;
#define I2C0_KRST0	(*( I2C0_KRST0_type *) 0xf00d0014u)	/* Kernel Reset Register 0 */

typedef volatile union
{
	struct
	{ 
		unsigned int RST            : 1;	/* Kernel Reset */
		unsigned int                : 31;
	} B;
	int I;
	unsigned int U;

} I2C0_KRST1_type;
#define I2C0_KRST1	(*( I2C0_KRST1_type *) 0xf00d0018u)	/* Kernel Reset Register 1 */

typedef volatile union
{
	struct
	{ 
		unsigned int CLR            : 1;	/* Kernel Reset Status Clear */
		unsigned int                : 31;
	} B;
	int I;
	unsigned int U;

} I2C0_KRSTCLR_type;
#define I2C0_KRSTCLR	(*( I2C0_KRSTCLR_type *) 0xf00d001cu)	/* Kernel Reset Status Clear Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int LSREQ_INT      : 1;	/* Last Single Request Interrupt */
		/* const */ unsigned int SREQ_INT       : 1;	/* Single Request Interrupt */
		/* const */ unsigned int LBREQ_INT      : 1;	/* Last Burst Request Interrupt */
		/* const */ unsigned int BREQ_INT       : 1;	/* Burst Request Interrupt */
		/* const */ unsigned int I2C_ERR_INT    : 1;	/* I2C Error Interrupt */
		/* const */ unsigned int I2C_P_INT      : 1;	/* I2C Protocol Interrupt */
		/* const */ unsigned int                : 26;
	} B;
	int I;
	unsigned int U;

} I2C0_MIS_type;
#define I2C0_MIS	(*( I2C0_MIS_type *) 0xf00c0088u)	/* Masked Interrupt Status Register */
#define I2C0_RIS	(*( I2C0_MIS_type *) 0xf00c0080u)	/* Raw Interrupt Status Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int MOD_REV        : 8;	/* Module Revision Number */
		/* const */ unsigned int MOD_TYPE       : 8;	/* Module Type */
		/* const */ unsigned int MOD_NUMBER     : 16;	/* Module Number Value */
	} B;
	int I;
	unsigned int U;

} I2C0_MODID_type;
#define I2C0_MODID	(*( I2C0_MODID_type *) 0xf00d0004u)	/* Module Identification Register */

typedef volatile union
{
	struct
	{ 
		unsigned int MRPS           : 14;	/* Maximum Received Packet Size */
		unsigned int                : 18;
	} B;
	int I;
	unsigned int U;

} I2C0_MRPSCTRL_type;
#define I2C0_MRPSCTRL	(*( I2C0_MRPSCTRL_type *) 0xf00c002cu)	/* Maximum Received Packet Size Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int AM             : 1;	/* Address Match */
		unsigned int GC             : 1;	/* General Call */
		unsigned int MC             : 1;	/* Master Code */
		unsigned int AL             : 1;	/* Arbitration Lost */
		unsigned int NACK           : 1;	/* Not-acknowledge Received */
		unsigned int TX_END         : 1;	/* Transmission End */
		unsigned int RX             : 1;	/* Receive Mode */
		unsigned int                : 25;
	} B;
	int I;
	unsigned int U;

} I2C0_PIRQSC_type;
#define I2C0_PIRQSC	(*( I2C0_PIRQSC_type *) 0xf00c0078u)	/* Protocol Interrupt Request Source Clear Register */

typedef volatile union
{
	struct
	{ 
		unsigned int AM             : 1;	/* Address Match */
		unsigned int GC             : 1;	/* General Call */
		unsigned int MC             : 1;	/* Master Code */
		unsigned int AL             : 1;	/* Arbitration Lost */
		unsigned int NACK           : 1;	/* Not-acknowledge Received */
		unsigned int TX_END         : 1;	/* Transmission End */
		unsigned int RX             : 1;	/* Receive Mode */
		unsigned int                : 25;
	} B;
	int I;
	unsigned int U;

} I2C0_PIRQSM_type;
#define I2C0_PIRQSM	(*( I2C0_PIRQSM_type *) 0xf00c0070u)	/* Protocol Interrupt Request Source Mask Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int AM             : 1;	/* Address Match */
		/* const */ unsigned int GC             : 1;	/* General Call */
		/* const */ unsigned int MC             : 1;	/* Master Code */
		/* const */ unsigned int AL             : 1;	/* Arbitration Lost */
		/* const */ unsigned int NACK           : 1;	/* Not-acknowledge Received */
		/* const */ unsigned int TX_END         : 1;	/* Transmission End */
		/* const */ unsigned int RX             : 1;	/* Receive Mode */
		/* const */ unsigned int                : 25;
	} B;
	int I;
	unsigned int U;

} I2C0_PIRQSS_type;
#define I2C0_PIRQSS	(*( I2C0_PIRQSS_type *) 0xf00c0074u)	/* Protocol Interrupt Request Source Status Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int RPS            : 14;	/* Received Packet Size */
		/* const */ unsigned int                : 18;
	} B;
	int I;
	unsigned int U;

} I2C0_RPSSTAT_type;
#define I2C0_RPSSTAT	(*( I2C0_RPSSTAT_type *) 0xf00c0030u)	/* Received Packet Size Status Register */

typedef volatile union
{
	struct
	{ 
		unsigned int RUN            : 1;	/* Enable I2C-bus Interface */
		unsigned int                : 31;
	} B;
	int I;
	unsigned int U;

} I2C0_RUNCTRL_type;
#define I2C0_RUNCTRL	(*( I2C0_RUNCTRL_type *) 0xf00c0010u)	/* RUN Control Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int RXD            : 32;	/* Reception Data */
	} B;
	int I;
	unsigned int U;

} I2C0_RXD_type;
#define I2C0_RXD	(*( I2C0_RXD_type *) 0xf00cc000u)	/* Reception Data Register */

typedef volatile union
{
	struct
	{ 
		unsigned int SDA_DEL_HD_DAT : 6;	/* SDA Delay Stages for Data Hold Time */
		unsigned int HS_SDA_DEL_HD_DAT: 3;	/* SDA Delay Stages for Data Hold Time in High-speed Mode */
		unsigned int SCL_DEL_HD_STA : 3;	/* SCL Delay Stages for Hold Time Start (Restart) Bit */
		unsigned int                : 2;
		unsigned int EN_SCL_LOW_LEN : 1;	/* Enable Direct Configuration of SCL Low Period Length in Fast Mode */
		unsigned int FS_SCL_LOW     : 1;	/* Set Fast Mode SCL Low Period Timing */
		unsigned int HS_SDA_DEL     : 3;	/* SDA Delay Stages for Start/Stop bit in High-speed Mode */
		unsigned int                : 5;
		unsigned int SCL_LOW_LEN    : 8;	/* SCL Low Length in Fast Mode */
	} B;
	int I;
	unsigned int U;

} I2C0_TIMCFG_type;
#define I2C0_TIMCFG	(*( I2C0_TIMCFG_type *) 0xf00c0040u)	/* Timing Configuration Register */

typedef volatile union
{
	struct
	{ 
		unsigned int TPS            : 14;	/* Transmit Packet Size */
		unsigned int                : 18;
	} B;
	int I;
	unsigned int U;

} I2C0_TPSCTRL_type;
#define I2C0_TPSCTRL	(*( I2C0_TPSCTRL_type *) 0xf00c0034u)	/* Transmit Packet Size Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int TXD            : 32;	/* Transmission Data */
	} B;
	int I;
	unsigned int U;

} I2C0_TXD_type;
#define I2C0_TXD	(*( I2C0_TXD_type *) 0xf00c8000u)	/* Transmission Data Register */


/* IOM */
typedef volatile union
{
	struct
	{ 
		unsigned int EN0            : 1;	/* Access Enable for Master TAG ID 0 */
		unsigned int EN1            : 1;	/* Access Enable for Master TAG ID 1 */
		unsigned int EN2            : 1;	/* Access Enable for Master TAG ID 2 */
		unsigned int EN3            : 1;	/* Access Enable for Master TAG ID 3 */
		unsigned int EN4            : 1;	/* Access Enable for Master TAG ID 4 */
		unsigned int EN5            : 1;	/* Access Enable for Master TAG ID 5 */
		unsigned int EN6            : 1;	/* Access Enable for Master TAG ID 6 */
		unsigned int EN7            : 1;	/* Access Enable for Master TAG ID 7 */
		unsigned int EN8            : 1;	/* Access Enable for Master TAG ID 8 */
		unsigned int EN9            : 1;	/* Access Enable for Master TAG ID 9 */
		unsigned int EN10           : 1;	/* Access Enable for Master TAG ID 10 */
		unsigned int EN11           : 1;	/* Access Enable for Master TAG ID 11 */
		unsigned int EN12           : 1;	/* Access Enable for Master TAG ID 12 */
		unsigned int EN13           : 1;	/* Access Enable for Master TAG ID 13 */
		unsigned int EN14           : 1;	/* Access Enable for Master TAG ID 14 */
		unsigned int EN15           : 1;	/* Access Enable for Master TAG ID 15 */
		unsigned int EN16           : 1;	/* Access Enable for Master TAG ID 16 */
		unsigned int EN17           : 1;	/* Access Enable for Master TAG ID 17 */
		unsigned int EN18           : 1;	/* Access Enable for Master TAG ID 18 */
		unsigned int EN19           : 1;	/* Access Enable for Master TAG ID 19 */
		unsigned int EN20           : 1;	/* Access Enable for Master TAG ID 20 */
		unsigned int EN21           : 1;	/* Access Enable for Master TAG ID 21 */
		unsigned int EN22           : 1;	/* Access Enable for Master TAG ID 22 */
		unsigned int EN23           : 1;	/* Access Enable for Master TAG ID 23 */
		unsigned int EN24           : 1;	/* Access Enable for Master TAG ID 24 */
		unsigned int EN25           : 1;	/* Access Enable for Master TAG ID 25 */
		unsigned int EN26           : 1;	/* Access Enable for Master TAG ID 26 */
		unsigned int EN27           : 1;	/* Access Enable for Master TAG ID 27 */
		unsigned int EN28           : 1;	/* Access Enable for Master TAG ID 28 */
		unsigned int EN29           : 1;	/* Access Enable for Master TAG ID 29 */
		unsigned int EN30           : 1;	/* Access Enable for Master TAG ID 30 */
		unsigned int EN31           : 1;	/* Access Enable for Master TAG ID 31 */
	} B;
	int I;
	unsigned int U;

} IOM_ACCEN0_type;
#define IOM_ACCEN0	(*( IOM_ACCEN0_type *) 0xf003502cu)	/* IOM Access Enable Register 0 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int Reserved       : 32;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} IOM_ACCEN1_type;
#define IOM_ACCEN1	(*( IOM_ACCEN1_type *) 0xf0035028u)	/* IOM Access Enable Register 1 */

typedef volatile union
{
	struct
	{ 
		unsigned int DISR           : 1;	/* Module Disable Request Bit */
		/* const */ unsigned int DISS           : 1;	/* Module Disable Status Bit */
		unsigned int                : 1;
		unsigned int EDIS           : 1;	/* Sleep Mode Enable Control */
		unsigned int                : 4;
		unsigned int RMC            : 8;	/* 8-bit Clock Divider Value in RUN Mode */
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} IOM_CLC_type;
#define IOM_CLC	(*( IOM_CLC_type *) 0xf0035000u)	/* IOM Clock Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int SELC0          : 4;	/* Event Channel Select */
		unsigned int THRC0          : 4;	/* Channel Event Counter Threshold */
		unsigned int SELC1          : 4;	/* Event Channel Select */
		unsigned int THCR1          : 4;	/* Channel Event Counter Threshold */
		unsigned int SELC2          : 4;	/* Event Channel Select */
		unsigned int THCR2          : 4;	/* Channel Event Counter Threshold */
		unsigned int SELC3          : 4;	/* Event Channel Select */
		unsigned int THCR3          : 4;	/* Channel Event Counter Threshold */
	} B;
	int I;
	unsigned int U;

} IOM_ECMCCFG_type;
#define IOM_ECMCCFG	(*( IOM_ECMCCFG_type *) 0xf0035030u)	/* IOM Event Combiner Module Counter Configuration Register */

typedef volatile union
{
	struct
	{ 
		unsigned int ETA0           : 1;	/* LAM 0-15 Event Trigger Activity (last) */
		unsigned int ETA1           : 1;	/* LAM 0-15 Event Trigger Activity (last) */
		unsigned int ETA2           : 1;	/* LAM 0-15 Event Trigger Activity (last) */
		unsigned int ETA3           : 1;	/* LAM 0-15 Event Trigger Activity (last) */
		unsigned int ETA4           : 1;	/* LAM 0-15 Event Trigger Activity (last) */
		unsigned int ETA5           : 1;	/* LAM 0-15 Event Trigger Activity (last) */
		unsigned int ETA6           : 1;	/* LAM 0-15 Event Trigger Activity (last) */
		unsigned int ETA7           : 1;	/* LAM 0-15 Event Trigger Activity (last) */
		unsigned int ETA8           : 1;	/* LAM 0-15 Event Trigger Activity (last) */
		unsigned int ETA9           : 1;	/* LAM 0-15 Event Trigger Activity (last) */
		unsigned int ETA10          : 1;	/* LAM 0-15 Event Trigger Activity (last) */
		unsigned int ETA11          : 1;	/* LAM 0-15 Event Trigger Activity (last) */
		unsigned int ETA12          : 1;	/* LAM 0-15 Event Trigger Activity (last) */
		unsigned int ETA13          : 1;	/* LAM 0-15 Event Trigger Activity (last) */
		unsigned int ETA14          : 1;	/* LAM 0-15 Event Trigger Activity (last) */
		unsigned int ETA15          : 1;	/* LAM 0-15 Event Trigger Activity (last) */
		unsigned int ETB0           : 1;	/* LAM 0-15 Event Trigger Activity (previous ETA0-15) */
		unsigned int ETB1           : 1;	/* LAM 0-15 Event Trigger Activity (previous ETA0-15) */
		unsigned int ETB2           : 1;	/* LAM 0-15 Event Trigger Activity (previous ETA0-15) */
		unsigned int ETB3           : 1;	/* LAM 0-15 Event Trigger Activity (previous ETA0-15) */
		unsigned int ETB4           : 1;	/* LAM 0-15 Event Trigger Activity (previous ETA0-15) */
		unsigned int ETB5           : 1;	/* LAM 0-15 Event Trigger Activity (previous ETA0-15) */
		unsigned int ETB6           : 1;	/* LAM 0-15 Event Trigger Activity (previous ETA0-15) */
		unsigned int ETB7           : 1;	/* LAM 0-15 Event Trigger Activity (previous ETA0-15) */
		unsigned int ETB8           : 1;	/* LAM 0-15 Event Trigger Activity (previous ETA0-15) */
		unsigned int ETB9           : 1;	/* LAM 0-15 Event Trigger Activity (previous ETA0-15) */
		unsigned int ETB10          : 1;	/* LAM 0-15 Event Trigger Activity (previous ETA0-15) */
		unsigned int ETB11          : 1;	/* LAM 0-15 Event Trigger Activity (previous ETA0-15) */
		unsigned int ETB12          : 1;	/* LAM 0-15 Event Trigger Activity (previous ETA0-15) */
		unsigned int ETB13          : 1;	/* LAM 0-15 Event Trigger Activity (previous ETA0-15) */
		unsigned int ETB14          : 1;	/* LAM 0-15 Event Trigger Activity (previous ETA0-15) */
		unsigned int ETB15          : 1;	/* LAM 0-15 Event Trigger Activity (previous ETA0-15) */
	} B;
	int I;
	unsigned int U;

} IOM_ECMETH0_type;
#define IOM_ECMETH0	(*( IOM_ECMETH0_type *) 0xf0035038u)	/* IOM Event Combiner Module Event Trigger History Register 0 */

typedef volatile union
{
	struct
	{ 
		unsigned int ETC0           : 1;	/* LAM 0-15 Event Trigger Activity (previous ETB0-15) */
		unsigned int ETC1           : 1;	/* LAM 0-15 Event Trigger Activity (previous ETB0-15) */
		unsigned int ETC2           : 1;	/* LAM 0-15 Event Trigger Activity (previous ETB0-15) */
		unsigned int ETC3           : 1;	/* LAM 0-15 Event Trigger Activity (previous ETB0-15) */
		unsigned int ETC4           : 1;	/* LAM 0-15 Event Trigger Activity (previous ETB0-15) */
		unsigned int ETC5           : 1;	/* LAM 0-15 Event Trigger Activity (previous ETB0-15) */
		unsigned int ETC6           : 1;	/* LAM 0-15 Event Trigger Activity (previous ETB0-15) */
		unsigned int ETC7           : 1;	/* LAM 0-15 Event Trigger Activity (previous ETB0-15) */
		unsigned int ETC8           : 1;	/* LAM 0-15 Event Trigger Activity (previous ETB0-15) */
		unsigned int ETC9           : 1;	/* LAM 0-15 Event Trigger Activity (previous ETB0-15) */
		unsigned int ETC10          : 1;	/* LAM 0-15 Event Trigger Activity (previous ETB0-15) */
		unsigned int ETC11          : 1;	/* LAM 0-15 Event Trigger Activity (previous ETB0-15) */
		unsigned int ETC12          : 1;	/* LAM 0-15 Event Trigger Activity (previous ETB0-15) */
		unsigned int ETC13          : 1;	/* LAM 0-15 Event Trigger Activity (previous ETB0-15) */
		unsigned int ETC14          : 1;	/* LAM 0-15 Event Trigger Activity (previous ETB0-15) */
		unsigned int ETC15          : 1;	/* LAM 0-15 Event Trigger Activity (previous ETB0-15) */
		unsigned int ETD0           : 1;	/* LAM 0-15 Event Trigger Activity (previous ETC0-15) */
		unsigned int ETD1           : 1;	/* LAM 0-15 Event Trigger Activity (previous ETC0-15) */
		unsigned int ETD2           : 1;	/* LAM 0-15 Event Trigger Activity (previous ETC0-15) */
		unsigned int ETD3           : 1;	/* LAM 0-15 Event Trigger Activity (previous ETC0-15) */
		unsigned int ETD4           : 1;	/* LAM 0-15 Event Trigger Activity (previous ETC0-15) */
		unsigned int ETD5           : 1;	/* LAM 0-15 Event Trigger Activity (previous ETC0-15) */
		unsigned int ETD6           : 1;	/* LAM 0-15 Event Trigger Activity (previous ETC0-15) */
		unsigned int ETD7           : 1;	/* LAM 0-15 Event Trigger Activity (previous ETC0-15) */
		unsigned int ETD8           : 1;	/* LAM 0-15 Event Trigger Activity (previous ETC0-15) */
		unsigned int ETD9           : 1;	/* LAM 0-15 Event Trigger Activity (previous ETC0-15) */
		unsigned int ETD10          : 1;	/* LAM 0-15 Event Trigger Activity (previous ETC0-15) */
		unsigned int ETD11          : 1;	/* LAM 0-15 Event Trigger Activity (previous ETC0-15) */
		unsigned int ETD12          : 1;	/* LAM 0-15 Event Trigger Activity (previous ETC0-15) */
		unsigned int ETD13          : 1;	/* LAM 0-15 Event Trigger Activity (previous ETC0-15) */
		unsigned int ETD14          : 1;	/* LAM 0-15 Event Trigger Activity (previous ETC0-15) */
		unsigned int ETD15          : 1;	/* LAM 0-15 Event Trigger Activity (previous ETC0-15) */
	} B;
	int I;
	unsigned int U;

} IOM_ECMETH1_type;
#define IOM_ECMETH1	(*( IOM_ECMETH1_type *) 0xf003503cu)	/* IOM Event Combiner Module Event Trigger History Register 1 */

typedef volatile union
{
	struct
	{ 
		unsigned int CES0           : 1;	/* Event Combiner Selection */
		unsigned int CES1           : 1;	/* Event Combiner Selection */
		unsigned int CES2           : 1;	/* Event Combiner Selection */
		unsigned int CES3           : 1;	/* Event Combiner Selection */
		unsigned int CES4           : 1;	/* Event Combiner Selection */
		unsigned int CES5           : 1;	/* Event Combiner Selection */
		unsigned int CES6           : 1;	/* Event Combiner Selection */
		unsigned int CES7           : 1;	/* Event Combiner Selection */
		unsigned int CES8           : 1;	/* Event Combiner Selection */
		unsigned int CES9           : 1;	/* Event Combiner Selection */
		unsigned int CES10          : 1;	/* Event Combiner Selection */
		unsigned int CES11          : 1;	/* Event Combiner Selection */
		unsigned int CES12          : 1;	/* Event Combiner Selection */
		unsigned int CES13          : 1;	/* Event Combiner Selection */
		unsigned int CES14          : 1;	/* Event Combiner Selection */
		unsigned int CES15          : 1;	/* Event Combiner Selection */
		unsigned int CTS0           : 1;	/* Accumulated (Counted) Event Combiner Selection */
		unsigned int CTS1           : 1;	/* Accumulated (Counted) Event Combiner Selection */
		unsigned int CTS2           : 1;	/* Accumulated (Counted) Event Combiner Selection */
		unsigned int CTS3           : 1;	/* Accumulated (Counted) Event Combiner Selection */
		unsigned int                : 12;
	} B;
	int I;
	unsigned int U;

} IOM_ECMSELR_type;
#define IOM_ECMSELR	(*( IOM_ECMSELR_type *) 0xf0035034u)	/* IOM Event Combiner Module Global Event Selection Register */

typedef volatile union
{
	struct
	{ 
		unsigned int CMP            : 16;	/* Threshold Value of Filter 'and' Prescaler Cell k */
		unsigned int MOD            : 3;	/* Operation Mode Selection for Filter 'and' Prescaler Cell k */
		unsigned int ISM            : 2;	/* Monitor Input Signal Selection for Filter 'and' Prescaler Cell k */
		unsigned int                : 1;
		unsigned int RTG            : 1;	/* Reset Timer behaviour for Filter 'and' Prescaler Cell k on Glitch */
		unsigned int                : 1;
		unsigned int ISR            : 3;	/* Reference Input Signal Selection for Filter 'and' Prescaler Cell k */
		unsigned int                : 5;
	} B;
	int I;
	unsigned int U;

} IOM_FPCCTR0_type;
#define IOM_FPCCTR0	(*( IOM_FPCCTR0_type *) 0xf0035080u)	/* IOM Filter and Prescaler Cell Control Register0 */
#define IOM_FPCCTR1	(*( IOM_FPCCTR0_type *) 0xf0035084u)	/* IOM Filter and Prescaler Cell Control Register1 */
#define IOM_FPCCTR10	(*( IOM_FPCCTR0_type *) 0xf00350a8u)	/* IOM Filter and Prescaler Cell Control Register10 */
#define IOM_FPCCTR11	(*( IOM_FPCCTR0_type *) 0xf00350acu)	/* IOM Filter and Prescaler Cell Control Register11 */
#define IOM_FPCCTR12	(*( IOM_FPCCTR0_type *) 0xf00350b0u)	/* IOM Filter and Prescaler Cell Control Register12 */
#define IOM_FPCCTR13	(*( IOM_FPCCTR0_type *) 0xf00350b4u)	/* IOM Filter and Prescaler Cell Control Register13 */
#define IOM_FPCCTR14	(*( IOM_FPCCTR0_type *) 0xf00350b8u)	/* IOM Filter and Prescaler Cell Control Register14 */
#define IOM_FPCCTR15	(*( IOM_FPCCTR0_type *) 0xf00350bcu)	/* IOM Filter and Prescaler Cell Control Register15 */
#define IOM_FPCCTR2	(*( IOM_FPCCTR0_type *) 0xf0035088u)	/* IOM Filter and Prescaler Cell Control Register2 */
#define IOM_FPCCTR3	(*( IOM_FPCCTR0_type *) 0xf003508cu)	/* IOM Filter and Prescaler Cell Control Register3 */
#define IOM_FPCCTR4	(*( IOM_FPCCTR0_type *) 0xf0035090u)	/* IOM Filter and Prescaler Cell Control Register4 */
#define IOM_FPCCTR5	(*( IOM_FPCCTR0_type *) 0xf0035094u)	/* IOM Filter and Prescaler Cell Control Register5 */
#define IOM_FPCCTR6	(*( IOM_FPCCTR0_type *) 0xf0035098u)	/* IOM Filter and Prescaler Cell Control Register6 */
#define IOM_FPCCTR7	(*( IOM_FPCCTR0_type *) 0xf003509cu)	/* IOM Filter and Prescaler Cell Control Register7 */
#define IOM_FPCCTR8	(*( IOM_FPCCTR0_type *) 0xf00350a0u)	/* IOM Filter and Prescaler Cell Control Register8 */
#define IOM_FPCCTR9	(*( IOM_FPCCTR0_type *) 0xf00350a4u)	/* IOM Filter and Prescaler Cell Control Register9 */

typedef volatile union
{
	struct
	{ 
		unsigned int FEG0           : 1;	/* Falling Edge Glitch Flag for FPC0 */
		unsigned int FEG1           : 1;	/* Falling Edge Glitch Flag for FPC1 */
		unsigned int FEG2           : 1;	/* Falling Edge Glitch Flag for FPC2 */
		unsigned int FEG3           : 1;	/* Falling Edge Glitch Flag for FPC3 */
		unsigned int FEG4           : 1;	/* Falling Edge Glitch Flag for FPC4 */
		unsigned int FEG5           : 1;	/* Falling Edge Glitch Flag for FPC5 */
		unsigned int FEG6           : 1;	/* Falling Edge Glitch Flag for FPC6 */
		unsigned int FEG7           : 1;	/* Falling Edge Glitch Flag for FPC7 */
		unsigned int FEG8           : 1;	/* Falling Edge Glitch Flag for FPC8 */
		unsigned int FEG9           : 1;	/* Falling Edge Glitch Flag for FPC9 */
		unsigned int FEG10          : 1;	/* Falling Edge Glitch Flag for FPC10 */
		unsigned int FEG11          : 1;	/* Falling Edge Glitch Flag for FPC11 */
		unsigned int FEG12          : 1;	/* Falling Edge Glitch Flag for FPC12 */
		unsigned int FEG13          : 1;	/* Falling Edge Glitch Flag for FPC13 */
		unsigned int FEG14          : 1;	/* Falling Edge Glitch Flag for FPC14 */
		unsigned int FEG15          : 1;	/* Falling Edge Glitch Flag for FPC15 */
		unsigned int REG0           : 1;	/* Rising Edge Glitch Flag for FPC0 */
		unsigned int REG1           : 1;	/* Rising Edge Glitch Flag for FPC1 */
		unsigned int REG2           : 1;	/* Rising Edge Glitch Flag for FPC2 */
		unsigned int REG3           : 1;	/* Rising Edge Glitch Flag for FPC3 */
		unsigned int REG4           : 1;	/* Rising Edge Glitch Flag for FPC4 */
		unsigned int REG5           : 1;	/* Rising Edge Glitch Flag for FPC5 */
		unsigned int REG6           : 1;	/* Rising Edge Glitch Flag for FPC6 */
		unsigned int REG7           : 1;	/* Rising Edge Glitch Flag for FPC7 */
		unsigned int REG8           : 1;	/* Rising Edge Glitch Flag for FPC8 */
		unsigned int REG9           : 1;	/* Rising Edge Glitch Flag for FPC9 */
		unsigned int REG10          : 1;	/* Rising Edge Glitch Flag for FPC10 */
		unsigned int REG11          : 1;	/* Rising Edge Glitch Flag for FPC11 */
		unsigned int REG12          : 1;	/* Rising Edge Glitch Flag for FPC12 */
		unsigned int REG13          : 1;	/* Rising Edge Glitch Flag for FPC13 */
		unsigned int REG14          : 1;	/* Rising Edge Glitch Flag for FPC14 */
		unsigned int REG15          : 1;	/* Rising Edge Glitch Flag for FPC15 */
	} B;
	int I;
	unsigned int U;

} IOM_FPCESR_type;
#define IOM_FPCESR	(*( IOM_FPCESR_type *) 0xf0035078u)	/* IOM Filter and Prescaler Cells Rising 'and' Falling Edge Status Register */

typedef volatile union
{
	struct
	{ 
		unsigned int TIM            : 16;	/* Timer Value of Filter and Prescaler Cell k */
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} IOM_FPCTIM0_type;
#define IOM_FPCTIM0	(*( IOM_FPCTIM0_type *) 0xf00350c0u)	/* IOM Filter and Prescaler Cell 0Timer Registerk */
#define IOM_FPCTIM1	(*( IOM_FPCTIM0_type *) 0xf00350c4u)	/* IOM Filter and Prescaler Cell 1Timer Registerk */
#define IOM_FPCTIM10	(*( IOM_FPCTIM0_type *) 0xf00350e8u)	/* IOM Filter and Prescaler Cell 10Timer Registerk */
#define IOM_FPCTIM11	(*( IOM_FPCTIM0_type *) 0xf00350ecu)	/* IOM Filter and Prescaler Cell 11Timer Registerk */
#define IOM_FPCTIM12	(*( IOM_FPCTIM0_type *) 0xf00350f0u)	/* IOM Filter and Prescaler Cell 12Timer Registerk */
#define IOM_FPCTIM13	(*( IOM_FPCTIM0_type *) 0xf00350f4u)	/* IOM Filter and Prescaler Cell 13Timer Registerk */
#define IOM_FPCTIM14	(*( IOM_FPCTIM0_type *) 0xf00350f8u)	/* IOM Filter and Prescaler Cell 14Timer Registerk */
#define IOM_FPCTIM15	(*( IOM_FPCTIM0_type *) 0xf00350fcu)	/* IOM Filter and Prescaler Cell 15Timer Registerk */
#define IOM_FPCTIM2	(*( IOM_FPCTIM0_type *) 0xf00350c8u)	/* IOM Filter and Prescaler Cell 2Timer Registerk */
#define IOM_FPCTIM3	(*( IOM_FPCTIM0_type *) 0xf00350ccu)	/* IOM Filter and Prescaler Cell 3Timer Registerk */
#define IOM_FPCTIM4	(*( IOM_FPCTIM0_type *) 0xf00350d0u)	/* IOM Filter and Prescaler Cell 4Timer Registerk */
#define IOM_FPCTIM5	(*( IOM_FPCTIM0_type *) 0xf00350d4u)	/* IOM Filter and Prescaler Cell 5Timer Registerk */
#define IOM_FPCTIM6	(*( IOM_FPCTIM0_type *) 0xf00350d8u)	/* IOM Filter and Prescaler Cell 6Timer Registerk */
#define IOM_FPCTIM7	(*( IOM_FPCTIM0_type *) 0xf00350dcu)	/* IOM Filter and Prescaler Cell 7Timer Registerk */
#define IOM_FPCTIM8	(*( IOM_FPCTIM0_type *) 0xf00350e0u)	/* IOM Filter and Prescaler Cell 8Timer Registerk */
#define IOM_FPCTIM9	(*( IOM_FPCTIM0_type *) 0xf00350e4u)	/* IOM Filter and Prescaler Cell 9Timer Registerk */

typedef volatile union
{
	struct
	{ 
		unsigned int EN0            : 1;	/* GTM input 0 selection for EXOR combiner */
		unsigned int EN1            : 1;	/* GTM input 1 selection for EXOR combiner */
		unsigned int EN2            : 1;	/* GTM input 2 selection for EXOR combiner */
		unsigned int EN3            : 1;	/* GTM input 3 selection for EXOR combiner */
		unsigned int EN4            : 1;	/* GTM input 4 selection for EXOR combiner */
		unsigned int EN5            : 1;	/* GTM input 5 selection for EXOR combiner */
		unsigned int EN6            : 1;	/* GTM input 6 selection for EXOR combiner */
		unsigned int EN7            : 1;	/* GTM input 7 selection for EXOR combiner */
		unsigned int                : 24;
	} B;
	int I;
	unsigned int U;

} IOM_GTMEXR_type;
#define IOM_GTMEXR	(*( IOM_GTMEXR_type *) 0xf0035040u)	/* IOM GTM Input EXOR Combiner Selection Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int MOD_REV        : 8;	/* Module Revision Number */
		/* const */ unsigned int MOD_TYPE       : 8;	/* Module Number Value */
		/* const */ unsigned int MOD_NUM        : 16;	/* Module Number Value */
	} B;
	int I;
	unsigned int U;

} IOM_ID_type;
#define IOM_ID	(*( IOM_ID_type *) 0xf0035008u)	/* IOM Identification Register */

typedef volatile union
{
	struct
	{ 
		unsigned int RST            : 1;	/* Kernel Reset */
		/* const */ unsigned int RSTSTAT        : 1;	/* Kernel Reset Status */
		unsigned int                : 30;
	} B;
	int I;
	unsigned int U;

} IOM_KRST0_type;
#define IOM_KRST0	(*( IOM_KRST0_type *) 0xf0035024u)	/* IOM Kernel Reset Register 0 */

typedef volatile union
{
	struct
	{ 
		unsigned int RST            : 1;	/* Kernel Reset */
		unsigned int                : 31;
	} B;
	int I;
	unsigned int U;

} IOM_KRST1_type;
#define IOM_KRST1	(*( IOM_KRST1_type *) 0xf0035020u)	/* IOM Kernel Reset Register 1 */

typedef volatile union
{
	struct
	{ 
		unsigned int CLR            : 1;	/* Kernel Reset Status Clear */
		unsigned int                : 31;
	} B;
	int I;
	unsigned int U;

} IOM_KRSTCLR_type;
#define IOM_KRSTCLR	(*( IOM_KRSTCLR_type *) 0xf003501cu)	/* IOM Kernel Reset Status Clear Register */

typedef volatile union
{
	struct
	{ 
		unsigned int IVR            : 1;	/* Invert Reference LAM block m */
		unsigned int IVM            : 1;	/* Invert Monitor LAM block m */
		unsigned int MOS            : 1;	/* Monitor Source Select LAM block m */
		unsigned int RMS            : 1;	/* Runmode Select LAM block m */
		unsigned int EWS            : 1;	/* Event Window Select LAM block m */
		unsigned int                : 3;
		unsigned int EDS            : 4;	/* Event Window Active Edge Selection LAM block m */
		unsigned int IVW            : 1;	/* Invert Event Window LAM block m */
		unsigned int                : 3;
		unsigned int MCS            : 4;	/* Monitor Input Signal Selection LAM block m */
		unsigned int RCS            : 4;	/* Reference Input Signal Selection LAM block m */
		unsigned int                : 8;
	} B;
	int I;
	unsigned int U;

} IOM_LAMCFG0_type;
#define IOM_LAMCFG0	(*( IOM_LAMCFG0_type *) 0xf0035180u)	/* IOM Logic Analyzer Module Configuration Register0 */
#define IOM_LAMCFG1	(*( IOM_LAMCFG0_type *) 0xf0035184u)	/* IOM Logic Analyzer Module Configuration Register1 */
#define IOM_LAMCFG10	(*( IOM_LAMCFG0_type *) 0xf00351a8u)	/* IOM Logic Analyzer Module Configuration Register10 */
#define IOM_LAMCFG11	(*( IOM_LAMCFG0_type *) 0xf00351acu)	/* IOM Logic Analyzer Module Configuration Register11 */
#define IOM_LAMCFG12	(*( IOM_LAMCFG0_type *) 0xf00351b0u)	/* IOM Logic Analyzer Module Configuration Register12 */
#define IOM_LAMCFG13	(*( IOM_LAMCFG0_type *) 0xf00351b4u)	/* IOM Logic Analyzer Module Configuration Register13 */
#define IOM_LAMCFG14	(*( IOM_LAMCFG0_type *) 0xf00351b8u)	/* IOM Logic Analyzer Module Configuration Register14 */
#define IOM_LAMCFG15	(*( IOM_LAMCFG0_type *) 0xf00351bcu)	/* IOM Logic Analyzer Module Configuration Register15 */
#define IOM_LAMCFG2	(*( IOM_LAMCFG0_type *) 0xf0035188u)	/* IOM Logic Analyzer Module Configuration Register2 */
#define IOM_LAMCFG3	(*( IOM_LAMCFG0_type *) 0xf003518cu)	/* IOM Logic Analyzer Module Configuration Register3 */
#define IOM_LAMCFG4	(*( IOM_LAMCFG0_type *) 0xf0035190u)	/* IOM Logic Analyzer Module Configuration Register4 */
#define IOM_LAMCFG5	(*( IOM_LAMCFG0_type *) 0xf0035194u)	/* IOM Logic Analyzer Module Configuration Register5 */
#define IOM_LAMCFG6	(*( IOM_LAMCFG0_type *) 0xf0035198u)	/* IOM Logic Analyzer Module Configuration Register6 */
#define IOM_LAMCFG7	(*( IOM_LAMCFG0_type *) 0xf003519cu)	/* IOM Logic Analyzer Module Configuration Register7 */
#define IOM_LAMCFG8	(*( IOM_LAMCFG0_type *) 0xf00351a0u)	/* IOM Logic Analyzer Module Configuration Register8 */
#define IOM_LAMCFG9	(*( IOM_LAMCFG0_type *) 0xf00351a4u)	/* IOM Logic Analyzer Module Configuration Register9 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int CNT            : 24;	/* Event Window Count Value LAM block m */
		/* const */ unsigned int                : 8;
	} B;
	int I;
	unsigned int U;

} IOM_LAMEWC0_type;
#define IOM_LAMEWC0	(*( IOM_LAMEWC0_type *) 0xf0035100u)	/* IOM Logic Analyzer Module Event Window Count Status Register0 */
#define IOM_LAMEWC1	(*( IOM_LAMEWC0_type *) 0xf0035104u)	/* IOM Logic Analyzer Module Event Window Count Status Register1 */
#define IOM_LAMEWC10	(*( IOM_LAMEWC0_type *) 0xf0035128u)	/* IOM Logic Analyzer Module Event Window Count Status Register10 */
#define IOM_LAMEWC11	(*( IOM_LAMEWC0_type *) 0xf003512cu)	/* IOM Logic Analyzer Module Event Window Count Status Register11 */
#define IOM_LAMEWC12	(*( IOM_LAMEWC0_type *) 0xf0035130u)	/* IOM Logic Analyzer Module Event Window Count Status Register12 */
#define IOM_LAMEWC13	(*( IOM_LAMEWC0_type *) 0xf0035134u)	/* IOM Logic Analyzer Module Event Window Count Status Register13 */
#define IOM_LAMEWC14	(*( IOM_LAMEWC0_type *) 0xf0035138u)	/* IOM Logic Analyzer Module Event Window Count Status Register14 */
#define IOM_LAMEWC15	(*( IOM_LAMEWC0_type *) 0xf003513cu)	/* IOM Logic Analyzer Module Event Window Count Status Register15 */
#define IOM_LAMEWC2	(*( IOM_LAMEWC0_type *) 0xf0035108u)	/* IOM Logic Analyzer Module Event Window Count Status Register2 */
#define IOM_LAMEWC3	(*( IOM_LAMEWC0_type *) 0xf003510cu)	/* IOM Logic Analyzer Module Event Window Count Status Register3 */
#define IOM_LAMEWC4	(*( IOM_LAMEWC0_type *) 0xf0035110u)	/* IOM Logic Analyzer Module Event Window Count Status Register4 */
#define IOM_LAMEWC5	(*( IOM_LAMEWC0_type *) 0xf0035114u)	/* IOM Logic Analyzer Module Event Window Count Status Register5 */
#define IOM_LAMEWC6	(*( IOM_LAMEWC0_type *) 0xf0035118u)	/* IOM Logic Analyzer Module Event Window Count Status Register6 */
#define IOM_LAMEWC7	(*( IOM_LAMEWC0_type *) 0xf003511cu)	/* IOM Logic Analyzer Module Event Window Count Status Register7 */
#define IOM_LAMEWC8	(*( IOM_LAMEWC0_type *) 0xf0035120u)	/* IOM Logic Analyzer Module Event Window Count Status Register8 */
#define IOM_LAMEWC9	(*( IOM_LAMEWC0_type *) 0xf0035124u)	/* IOM Logic Analyzer Module Event Window Count Status Register9 */

typedef volatile union
{
	struct
	{ 
		unsigned int THR            : 24;	/* Event Window Count Threshold */
		unsigned int                : 8;
	} B;
	int I;
	unsigned int U;

} IOM_LAMEWS0_type;
#define IOM_LAMEWS0	(*( IOM_LAMEWS0_type *) 0xf00351c0u)	/* IOM Logic Analyzer Module Event Window Configuration Register0 */
#define IOM_LAMEWS1	(*( IOM_LAMEWS0_type *) 0xf00351c4u)	/* IOM Logic Analyzer Module Event Window Configuration Register1 */
#define IOM_LAMEWS10	(*( IOM_LAMEWS0_type *) 0xf00351e8u)	/* IOM Logic Analyzer Module Event Window Configuration Register10 */
#define IOM_LAMEWS11	(*( IOM_LAMEWS0_type *) 0xf00351ecu)	/* IOM Logic Analyzer Module Event Window Configuration Register11 */
#define IOM_LAMEWS12	(*( IOM_LAMEWS0_type *) 0xf00351f0u)	/* IOM Logic Analyzer Module Event Window Configuration Register12 */
#define IOM_LAMEWS13	(*( IOM_LAMEWS0_type *) 0xf00351f4u)	/* IOM Logic Analyzer Module Event Window Configuration Register13 */
#define IOM_LAMEWS14	(*( IOM_LAMEWS0_type *) 0xf00351f8u)	/* IOM Logic Analyzer Module Event Window Configuration Register14 */
#define IOM_LAMEWS15	(*( IOM_LAMEWS0_type *) 0xf00351fcu)	/* IOM Logic Analyzer Module Event Window Configuration Register15 */
#define IOM_LAMEWS2	(*( IOM_LAMEWS0_type *) 0xf00351c8u)	/* IOM Logic Analyzer Module Event Window Configuration Register2 */
#define IOM_LAMEWS3	(*( IOM_LAMEWS0_type *) 0xf00351ccu)	/* IOM Logic Analyzer Module Event Window Configuration Register3 */
#define IOM_LAMEWS4	(*( IOM_LAMEWS0_type *) 0xf00351d0u)	/* IOM Logic Analyzer Module Event Window Configuration Register4 */
#define IOM_LAMEWS5	(*( IOM_LAMEWS0_type *) 0xf00351d4u)	/* IOM Logic Analyzer Module Event Window Configuration Register5 */
#define IOM_LAMEWS6	(*( IOM_LAMEWS0_type *) 0xf00351d8u)	/* IOM Logic Analyzer Module Event Window Configuration Register6 */
#define IOM_LAMEWS7	(*( IOM_LAMEWS0_type *) 0xf00351dcu)	/* IOM Logic Analyzer Module Event Window Configuration Register7 */
#define IOM_LAMEWS8	(*( IOM_LAMEWS0_type *) 0xf00351e0u)	/* IOM Logic Analyzer Module Event Window Configuration Register8 */
#define IOM_LAMEWS9	(*( IOM_LAMEWS0_type *) 0xf00351e4u)	/* IOM Logic Analyzer Module Event Window Configuration Register9 */


/* PSI5 */
typedef volatile union
{
	struct
	{ 
		unsigned int EN0            : 1;	/* Access Enable for Master TAG ID 0 */
		unsigned int EN1            : 1;	/* Access Enable for Master TAG ID 1 */
		unsigned int EN2            : 1;	/* Access Enable for Master TAG ID 2 */
		unsigned int EN3            : 1;	/* Access Enable for Master TAG ID 3 */
		unsigned int EN4            : 1;	/* Access Enable for Master TAG ID 4 */
		unsigned int EN5            : 1;	/* Access Enable for Master TAG ID 5 */
		unsigned int EN6            : 1;	/* Access Enable for Master TAG ID 6 */
		unsigned int EN7            : 1;	/* Access Enable for Master TAG ID 7 */
		unsigned int EN8            : 1;	/* Access Enable for Master TAG ID 8 */
		unsigned int EN9            : 1;	/* Access Enable for Master TAG ID 9 */
		unsigned int EN10           : 1;	/* Access Enable for Master TAG ID 10 */
		unsigned int EN11           : 1;	/* Access Enable for Master TAG ID 11 */
		unsigned int EN12           : 1;	/* Access Enable for Master TAG ID 12 */
		unsigned int EN13           : 1;	/* Access Enable for Master TAG ID 13 */
		unsigned int EN14           : 1;	/* Access Enable for Master TAG ID 14 */
		unsigned int EN15           : 1;	/* Access Enable for Master TAG ID 15 */
		unsigned int EN16           : 1;	/* Access Enable for Master TAG ID 16 */
		unsigned int EN17           : 1;	/* Access Enable for Master TAG ID 17 */
		unsigned int EN18           : 1;	/* Access Enable for Master TAG ID 18 */
		unsigned int EN19           : 1;	/* Access Enable for Master TAG ID 19 */
		unsigned int EN20           : 1;	/* Access Enable for Master TAG ID 20 */
		unsigned int EN21           : 1;	/* Access Enable for Master TAG ID 21 */
		unsigned int EN22           : 1;	/* Access Enable for Master TAG ID 22 */
		unsigned int EN23           : 1;	/* Access Enable for Master TAG ID 23 */
		unsigned int EN24           : 1;	/* Access Enable for Master TAG ID 24 */
		unsigned int EN25           : 1;	/* Access Enable for Master TAG ID 25 */
		unsigned int EN26           : 1;	/* Access Enable for Master TAG ID 26 */
		unsigned int EN27           : 1;	/* Access Enable for Master TAG ID 27 */
		unsigned int EN28           : 1;	/* Access Enable for Master TAG ID 28 */
		unsigned int EN29           : 1;	/* Access Enable for Master TAG ID 29 */
		unsigned int EN30           : 1;	/* Access Enable for Master TAG ID 30 */
		unsigned int EN31           : 1;	/* Access Enable for Master TAG ID 31 */
	} B;
	int I;
	unsigned int U;

} PSI5_ACCEN0_type;
#define PSI5_ACCEN0	(*( PSI5_ACCEN0_type *) 0xf00053d0u)	/* Access Enable Register 0 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int Reserved       : 32;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} PSI5_ACCEN1_type;
#define PSI5_ACCEN1	(*( PSI5_ACCEN1_type *) 0xf00053d4u)	/* Access Enable Register 1 */

typedef volatile union
{
	struct
	{ 
		unsigned int DISR           : 1;	/* Module Disable Request Bit */
		/* const */ unsigned int DISS           : 1;	/* Module Disable Status Bit */
		unsigned int                : 30;
	} B;
	int I;
	unsigned int U;

} PSI5_CLC_type;
#define PSI5_CLC	(*( PSI5_CLC_type *) 0xf0005000u)	/* Clock Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int CRCI0          : 1;	/* Clear CRCI Flag of Buffer 0 */
		unsigned int CRCI1          : 1;	/* Clear CRCI Flag of Buffer 1 */
		unsigned int CRCI2          : 1;	/* Clear CRCI Flag of Buffer 2 */
		unsigned int CRCI3          : 1;	/* Clear CRCI Flag of Buffer 3 */
		unsigned int CRCI4          : 1;	/* Clear CRCI Flag of Buffer 4 */
		unsigned int CRCI5          : 1;	/* Clear CRCI Flag of Buffer 5 */
		unsigned int CRCI6          : 1;	/* Clear CRCI Flag of Buffer 6 */
		unsigned int CRCI7          : 1;	/* Clear CRCI Flag of Buffer 7 */
		unsigned int CRCI8          : 1;	/* Clear CRCI Flag of Buffer 8 */
		unsigned int CRCI9          : 1;	/* Clear CRCI Flag of Buffer 9 */
		unsigned int CRCI10         : 1;	/* Clear CRCI Flag of Buffer 10 */
		unsigned int CRCI11         : 1;	/* Clear CRCI Flag of Buffer 11 */
		unsigned int CRCI12         : 1;	/* Clear CRCI Flag of Buffer 12 */
		unsigned int CRCI13         : 1;	/* Clear CRCI Flag of Buffer 13 */
		unsigned int CRCI14         : 1;	/* Clear CRCI Flag of Buffer 14 */
		unsigned int CRCI15         : 1;	/* Clear CRCI Flag of Buffer 15 */
		unsigned int CRCI16         : 1;	/* Clear CRCI Flag of Buffer 16 */
		unsigned int CRCI17         : 1;	/* Clear CRCI Flag of Buffer 17 */
		unsigned int CRCI18         : 1;	/* Clear CRCI Flag of Buffer 18 */
		unsigned int CRCI19         : 1;	/* Clear CRCI Flag of Buffer 19 */
		unsigned int CRCI20         : 1;	/* Clear CRCI Flag of Buffer 20 */
		unsigned int CRCI21         : 1;	/* Clear CRCI Flag of Buffer 21 */
		unsigned int CRCI22         : 1;	/* Clear CRCI Flag of Buffer 22 */
		unsigned int CRCI23         : 1;	/* Clear CRCI Flag of Buffer 23 */
		unsigned int CRCI24         : 1;	/* Clear CRCI Flag of Buffer 24 */
		unsigned int CRCI25         : 1;	/* Clear CRCI Flag of Buffer 25 */
		unsigned int CRCI26         : 1;	/* Clear CRCI Flag of Buffer 26 */
		unsigned int CRCI27         : 1;	/* Clear CRCI Flag of Buffer 27 */
		unsigned int CRCI28         : 1;	/* Clear CRCI Flag of Buffer 28 */
		unsigned int CRCI29         : 1;	/* Clear CRCI Flag of Buffer 29 */
		unsigned int CRCI30         : 1;	/* Clear CRCI Flag of Buffer 30 */
		unsigned int CRCI31         : 1;	/* Clear CRCI Flag of Buffer 31 */
	} B;
	int I;
	unsigned int U;

} PSI5_CRCICLR0_type;
#define PSI5_CRCICLR0	(*( PSI5_CRCICLR0_type *) 0xf000559cu)	/* CRCIOV0 Clear Register */
#define PSI5_CRCICLR1	(*( PSI5_CRCICLR0_type *) 0xf00055a0u)	/* CRCIOV1 Clear Register */
#define PSI5_CRCICLR2	(*( PSI5_CRCICLR0_type *) 0xf00055a4u)	/* CRCIOV2 Clear Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int CRCI0          : 1;	/* CRCI Flag of Buffer 0 */
		/* const */ unsigned int CRCI1          : 1;	/* CRCI Flag of Buffer 1 */
		/* const */ unsigned int CRCI2          : 1;	/* CRCI Flag of Buffer 2 */
		/* const */ unsigned int CRCI3          : 1;	/* CRCI Flag of Buffer 3 */
		/* const */ unsigned int CRCI4          : 1;	/* CRCI Flag of Buffer 4 */
		/* const */ unsigned int CRCI5          : 1;	/* CRCI Flag of Buffer 5 */
		/* const */ unsigned int CRCI6          : 1;	/* CRCI Flag of Buffer 6 */
		/* const */ unsigned int CRCI7          : 1;	/* CRCI Flag of Buffer 7 */
		/* const */ unsigned int CRCI8          : 1;	/* CRCI Flag of Buffer 8 */
		/* const */ unsigned int CRCI9          : 1;	/* CRCI Flag of Buffer 9 */
		/* const */ unsigned int CRCI10         : 1;	/* CRCI Flag of Buffer 10 */
		/* const */ unsigned int CRCI11         : 1;	/* CRCI Flag of Buffer 11 */
		/* const */ unsigned int CRCI12         : 1;	/* CRCI Flag of Buffer 12 */
		/* const */ unsigned int CRCI13         : 1;	/* CRCI Flag of Buffer 13 */
		/* const */ unsigned int CRCI14         : 1;	/* CRCI Flag of Buffer 14 */
		/* const */ unsigned int CRCI15         : 1;	/* CRCI Flag of Buffer 15 */
		/* const */ unsigned int CRCI16         : 1;	/* CRCI Flag of Buffer 16 */
		/* const */ unsigned int CRCI17         : 1;	/* CRCI Flag of Buffer 17 */
		/* const */ unsigned int CRCI18         : 1;	/* CRCI Flag of Buffer 18 */
		/* const */ unsigned int CRCI19         : 1;	/* CRCI Flag of Buffer 19 */
		/* const */ unsigned int CRCI20         : 1;	/* CRCI Flag of Buffer 20 */
		/* const */ unsigned int CRCI21         : 1;	/* CRCI Flag of Buffer 21 */
		/* const */ unsigned int CRCI22         : 1;	/* CRCI Flag of Buffer 22 */
		/* const */ unsigned int CRCI23         : 1;	/* CRCI Flag of Buffer 23 */
		/* const */ unsigned int CRCI24         : 1;	/* CRCI Flag of Buffer 24 */
		/* const */ unsigned int CRCI25         : 1;	/* CRCI Flag of Buffer 25 */
		/* const */ unsigned int CRCI26         : 1;	/* CRCI Flag of Buffer 26 */
		/* const */ unsigned int CRCI27         : 1;	/* CRCI Flag of Buffer 27 */
		/* const */ unsigned int CRCI28         : 1;	/* CRCI Flag of Buffer 28 */
		/* const */ unsigned int CRCI29         : 1;	/* CRCI Flag of Buffer 29 */
		/* const */ unsigned int CRCI30         : 1;	/* CRCI Flag of Buffer 30 */
		/* const */ unsigned int CRCI31         : 1;	/* CRCI Flag of Buffer 31 */
	} B;
	int I;
	unsigned int U;

} PSI5_CRCIOV0_type;
#define PSI5_CRCIOV0	(*( PSI5_CRCIOV0_type *) 0xf000545cu)	/* CRCI Overview Register */
#define PSI5_CRCIOV1	(*( PSI5_CRCIOV0_type *) 0xf0005460u)	/* CRCI Overview Register */
#define PSI5_CRCIOV2	(*( PSI5_CRCIOV0_type *) 0xf0005464u)	/* CRCI Overview Register */

typedef volatile union
{
	struct
	{ 
		unsigned int CRCI0          : 1;	/* Set CRCI Flag of Buffer 0 */
		unsigned int CRCI1          : 1;	/* Set CRCI Flag of Buffer 1 */
		unsigned int CRCI2          : 1;	/* Set CRCI Flag of Buffer 2 */
		unsigned int CRCI3          : 1;	/* Set CRCI Flag of Buffer 3 */
		unsigned int CRCI4          : 1;	/* Set CRCI Flag of Buffer 4 */
		unsigned int CRCI5          : 1;	/* Set CRCI Flag of Buffer 5 */
		unsigned int CRCI6          : 1;	/* Set CRCI Flag of Buffer 6 */
		unsigned int CRCI7          : 1;	/* Set CRCI Flag of Buffer 7 */
		unsigned int CRCI8          : 1;	/* Set CRCI Flag of Buffer 8 */
		unsigned int CRCI9          : 1;	/* Set CRCI Flag of Buffer 9 */
		unsigned int CRCI10         : 1;	/* Set CRCI Flag of Buffer 10 */
		unsigned int CRCI11         : 1;	/* Set CRCI Flag of Buffer 11 */
		unsigned int CRCI12         : 1;	/* Set CRCI Flag of Buffer 12 */
		unsigned int CRCI13         : 1;	/* Set CRCI Flag of Buffer 13 */
		unsigned int CRCI14         : 1;	/* Set CRCI Flag of Buffer 14 */
		unsigned int CRCI15         : 1;	/* Set CRCI Flag of Buffer 15 */
		unsigned int CRCI16         : 1;	/* Set CRCI Flag of Buffer 16 */
		unsigned int CRCI17         : 1;	/* Set CRCI Flag of Buffer 17 */
		unsigned int CRCI18         : 1;	/* Set CRCI Flag of Buffer 18 */
		unsigned int CRCI19         : 1;	/* Set CRCI Flag of Buffer 19 */
		unsigned int CRCI20         : 1;	/* Set CRCI Flag of Buffer 20 */
		unsigned int CRCI21         : 1;	/* Set CRCI Flag of Buffer 21 */
		unsigned int CRCI22         : 1;	/* Set CRCI Flag of Buffer 22 */
		unsigned int CRCI23         : 1;	/* Set CRCI Flag of Buffer 23 */
		unsigned int CRCI24         : 1;	/* Set CRCI Flag of Buffer 24 */
		unsigned int CRCI25         : 1;	/* Set CRCI Flag of Buffer 25 */
		unsigned int CRCI26         : 1;	/* Set CRCI Flag of Buffer 26 */
		unsigned int CRCI27         : 1;	/* Set CRCI Flag of Buffer 27 */
		unsigned int CRCI28         : 1;	/* Set CRCI Flag of Buffer 28 */
		unsigned int CRCI29         : 1;	/* Set CRCI Flag of Buffer 29 */
		unsigned int CRCI30         : 1;	/* Set CRCI Flag of Buffer 30 */
		unsigned int CRCI31         : 1;	/* Set CRCI Flag of Buffer 31 */
	} B;
	int I;
	unsigned int U;

} PSI5_CRCISET0_type;
#define PSI5_CRCISET0	(*( PSI5_CRCISET0_type *) 0xf00054fcu)	/* CRCIOV0 Set Register */
#define PSI5_CRCISET1	(*( PSI5_CRCISET0_type *) 0xf0005500u)	/* CRCIOV1 Set Register */
#define PSI5_CRCISET2	(*( PSI5_CRCISET0_type *) 0xf0005504u)	/* CRCIOV2 Set Register */

typedef volatile union
{
	struct
	{ 
		unsigned int CTV            : 16;	/* Channel Trigger Value CTV */
		unsigned int CTC            : 16;	/* Channel Trigger Counter */
	} B;
	int I;
	unsigned int U;

} PSI5_CTV0_type;
#define PSI5_CTV0	(*( PSI5_CTV0_type *) 0xf000508cu)	/* Channel Trigger Value Register 0 */
#define PSI5_CTV1	(*( PSI5_CTV0_type *) 0xf000511cu)	/* Channel Trigger Value Register 1 */
#define PSI5_CTV2	(*( PSI5_CTV0_type *) 0xf00051acu)	/* Channel Trigger Value Register 2 */

typedef volatile union
{
	struct
	{ 
		unsigned int STEP           : 10;	/* Step Value */
		unsigned int                : 4;
		unsigned int DM             : 2;	/* Divider Mode */
		/* const */ unsigned int RESULT         : 10;	/* Result Value */
		unsigned int                : 6;
	} B;
	int I;
	unsigned int U;

} PSI5_FDR_type;
#define PSI5_FDR	(*( PSI5_FDR_type *) 0xf000500cu)	/* PSI5 Fractional Divider Register */

typedef volatile union
{
	struct
	{ 
		unsigned int STEP           : 10;	/* Step Value */
		unsigned int                : 4;
		unsigned int DM             : 2;	/* Divider Mode */
		/* const */ unsigned int RESULT         : 10;	/* Result Value */
		unsigned int                : 6;
	} B;
	int I;
	unsigned int U;

} PSI5_FDRH_type;
#define PSI5_FDRH	(*( PSI5_FDRH_type *) 0xf0005014u)	/* Fractional Divider Register for Higher Bit Rate */
#define PSI5_FDRL	(*( PSI5_FDRH_type *) 0xf0005010u)	/* Fractional Divider Register for Lower Bit Rate */

typedef volatile union
{
	struct
	{ 
		unsigned int STEP           : 10;	/* Step Value */
		unsigned int                : 4;
		unsigned int DM             : 2;	/* Divider Mode */
		/* const */ unsigned int RESULT         : 10;	/* Result Value */
		unsigned int ECS            : 3;	/* External Time Stamp Clear Source Select */
		unsigned int ECEA           : 1;	/* External Time Stamp Clear Enable A */
		unsigned int ECEB           : 1;	/* External Time Stamp Clear Enable B */
		unsigned int ECEC           : 1;	/* External Time Stamp Clear Enable C */
	} B;
	int I;
	unsigned int U;

} PSI5_FDRT_type;
#define PSI5_FDRT	(*( PSI5_FDRT_type *) 0xf0005018u)	/* Fractional Divider Register for Time Stamp */

typedef volatile union
{
	struct
	{ 
		unsigned int CRCI           : 1;	/* CRCI */
		unsigned int NBI            : 1;	/* NBI */
		unsigned int MEI            : 1;	/* MEI */
		unsigned int NFI            : 1;	/* NFI */
		unsigned int TEI            : 1;	/* TEI */
		unsigned int                : 3;
		unsigned int ETC0           : 1;	/* Enable Channel Trigger Counter CTVx.CTC */
		unsigned int ETC1           : 1;	/* Enable Channel Trigger Counter CTVx.CTC */
		unsigned int ETC2           : 1;	/* Enable Channel Trigger Counter CTVx.CTC */
		unsigned int ETC3           : 1;	/* Enable Channel Trigger Counter CTVx.CTC */
		unsigned int ETC4           : 1;	/* Enable Channel Trigger Counter CTVx.CTC */
		unsigned int                : 3;
		unsigned int CEN0           : 1;	/* Enable Channel */
		unsigned int CEN1           : 1;	/* Enable Channel */
		unsigned int CEN2           : 1;	/* Enable Channel */
		unsigned int CEN3           : 1;	/* Enable Channel */
		unsigned int CEN4           : 1;	/* Enable Channel */
		unsigned int                : 11;
	} B;
	int I;
	unsigned int U;

} PSI5_GCR_type;
#define PSI5_GCR	(*( PSI5_GCR_type *) 0xf000502cu)	/* Global Control Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int MODREV         : 8;	/* Module Revision Number */
		/* const */ unsigned int MODTYPE        : 8;	/* Module Type */
		/* const */ unsigned int MODNUM         : 16;	/* Module Number Value */
	} B;
	int I;
	unsigned int U;

} PSI5_ID_type;
#define PSI5_ID	(*( PSI5_ID_type *) 0xf0005008u)	/* Module Identification Register */

typedef volatile union
{
	struct
	{ 
		unsigned int RSI            : 4;	/* Interrupt Node Pointer for Interrupt RSI */
		unsigned int RDI            : 4;	/* Interrupt Node Pointer for Interrupt RDI */
		unsigned int RBI            : 4;	/* Interrupt Node Pointer for Interrupt RBI */
		unsigned int TDI            : 4;	/* Interrupt Node Pointer for Interrupt TDI */
		unsigned int TBI            : 4;	/* Interrupt Node Pointer for Interrupt TBI */
		unsigned int ERRI           : 4;	/* Interrupt Node Pointer for Interrupt ERRI */
		unsigned int SDI            : 4;	/* Interrupt Node Pointer for Interrupt SDI */
		unsigned int FWI            : 4;	/* Interrupt Node Pointer for FWI */
	} B;
	int I;
	unsigned int U;

} PSI5_INP0_type;
#define PSI5_INP0	(*( PSI5_INP0_type *) 0xf00052fcu)	/* Interrupt Node Pointer Register 0 */
#define PSI5_INP1	(*( PSI5_INP0_type *) 0xf0005300u)	/* Interrupt Node Pointer Register 1 */
#define PSI5_INP2	(*( PSI5_INP0_type *) 0xf0005304u)	/* Interrupt Node Pointer Register 2 */

typedef volatile union
{
	struct
	{ 
		unsigned int RSI            : 1;	/* Clear Interrupt Request Flag RSI */
		unsigned int RDI            : 1;	/* Clear Interrupt Request Flag RDI */
		unsigned int RBI            : 1;	/* Clear Interrupt Request Flag RBI */
		unsigned int TEI            : 1;	/* Clear Interrupt Request Flag TEI */
		unsigned int NBI            : 1;	/* Clear Interrupt Request Flag NBI */
		unsigned int MEI            : 1;	/* Clear Interrupt Request Flag MEI */
		unsigned int CRCI           : 1;	/* Clear Interrupt Request Flag CRCI */
		unsigned int FWI            : 1;	/* Clear Interrupt Request Flag FWI */
		unsigned int RUI            : 1;	/* Clear Interrupt Request Flag RUI */
		unsigned int RMI            : 1;	/* Clear Interrupt Request Flag RMI */
		unsigned int TPI            : 1;	/* Clear Interrupt Request Flag TPI */
		unsigned int TPOI           : 1;	/* Clear Interrupt Request Flag TPOI */
		unsigned int TSI            : 1;	/* Clear Interrupt Request Flag TSI */
		unsigned int TSOI           : 1;	/* Clear Interrupt Request Flag TSOI */
		unsigned int TOI            : 1;	/* Clear Interrupt Request Flag TOI */
		unsigned int TOOI           : 1;	/* Clear Interrupt Request Flag TOOI */
		unsigned int NFI            : 1;	/* Clear Interrupt Request Flag NFI */
		unsigned int                : 15;
	} B;
	int I;
	unsigned int U;

} PSI5_INTCLRA0_type;
#define PSI5_INTCLRA0	(*( PSI5_INTCLRA0_type *) 0xf0005360u)	/* Interrupt Clear Register A 0 */
#define PSI5_INTCLRA1	(*( PSI5_INTCLRA0_type *) 0xf0005364u)	/* Interrupt Clear Register A 1 */
#define PSI5_INTCLRA2	(*( PSI5_INTCLRA0_type *) 0xf0005368u)	/* Interrupt Clear Register A 2 */

typedef volatile union
{
	struct
	{ 
		unsigned int WSI0           : 1;	/* Clear Interrupt Request Flag WSI0 */
		unsigned int WSI1           : 1;	/* Clear Interrupt Request Flag WSI1 */
		unsigned int WSI2           : 1;	/* Clear Interrupt Request Flag WSI2 */
		unsigned int WSI3           : 1;	/* Clear Interrupt Request Flag WSI3 */
		unsigned int WSI4           : 1;	/* Clear Interrupt Request Flag WSI4 */
		unsigned int WSI5           : 1;	/* Clear Interrupt Request Flag WSI5 */
		unsigned int SDI0           : 1;	/* Clear Interrupt Request Flag SDI0 */
		unsigned int SDI1           : 1;	/* Clear Interrupt Request Flag SDI1 */
		unsigned int SDI2           : 1;	/* Clear Interrupt Request Flag SDI2 */
		unsigned int SDI3           : 1;	/* Clear Interrupt Request Flag SDI3 */
		unsigned int SDI4           : 1;	/* Clear Interrupt Request Flag SDI4 */
		unsigned int SDI5           : 1;	/* Clear Interrupt Request Flag SDI5 */
		unsigned int SOI0           : 1;	/* Clear Interrupt Request Flag SOI0 */
		unsigned int SOI1           : 1;	/* Clear Interrupt Request Flag SOI1 */
		unsigned int SOI2           : 1;	/* Clear Interrupt Request Flag SOI2 */
		unsigned int SOI3           : 1;	/* Clear Interrupt Request Flag SOI3 */
		unsigned int SOI4           : 1;	/* Clear Interrupt Request Flag SOI4 */
		unsigned int SOI5           : 1;	/* Clear Interrupt Request Flag SOI5 */
		unsigned int SCRI0          : 1;	/* Clear Interrupt Request Flag SCRI0 */
		unsigned int SCRI1          : 1;	/* Clear Interrupt Request Flag SCRI1 */
		unsigned int SCRI2          : 1;	/* Clear Interrupt Request Flag SCRI2 */
		unsigned int SCRI3          : 1;	/* Clear Interrupt Request Flag SCRI3 */
		unsigned int SCRI4          : 1;	/* Clear Interrupt Request Flag SCRI4 */
		unsigned int SCRI5          : 1;	/* Clear Interrupt Request Flag SCRI5 */
		unsigned int                : 8;
	} B;
	int I;
	unsigned int U;

} PSI5_INTCLRB0_type;
#define PSI5_INTCLRB0	(*( PSI5_INTCLRB0_type *) 0xf0005374u)	/* Interrupt Clear Register A 0 */
#define PSI5_INTCLRB1	(*( PSI5_INTCLRB0_type *) 0xf0005378u)	/* Interrupt Clear Register A 1 */
#define PSI5_INTCLRB2	(*( PSI5_INTCLRB0_type *) 0xf000537cu)	/* Interrupt Clear Register A 2 */

typedef volatile union
{
	struct
	{ 
		unsigned int RSI            : 1;	/* Enable Interrupt Request RSI */
		unsigned int RDI            : 1;	/* Enable Interrupt Request RDI */
		unsigned int RBI            : 1;	/* Enable Interrupt Request RBI */
		unsigned int TEI            : 1;	/* Enable Interrupt Request TEI */
		unsigned int NBI            : 1;	/* Enable Interrupt Request NBI */
		unsigned int MEI            : 1;	/* Enable Interrupt Request MEII */
		unsigned int CRCI           : 1;	/* Enable Interrupt Request CRCI */
		unsigned int FWI            : 1;	/* Enable Interrupt Request FWI */
		unsigned int RUI            : 1;	/* Enable Interrupt Request RUI */
		unsigned int RMI            : 1;	/* Enable Interrupt Request RMII */
		unsigned int TPI            : 1;	/* Enable Interrupt Request TPI */
		unsigned int TPOI           : 1;	/* Enable Interrupt Request TPOI */
		unsigned int TSI            : 1;	/* Enable Interrupt Request TSI */
		unsigned int TSOI           : 1;	/* Enable Interrupt Request TSOI */
		unsigned int TOI            : 1;	/* Enable Interrupt Request TOI */
		unsigned int TOOI           : 1;	/* Enable Interrupt Request TOOI */
		unsigned int NFI            : 1;	/* Enable Interrupt Request NFI */
		unsigned int                : 15;
	} B;
	int I;
	unsigned int U;

} PSI5_INTENA0_type;
#define PSI5_INTENA0	(*( PSI5_INTENA0_type *) 0xf0005388u)	/* Interrupt Enable Register A 0 */
#define PSI5_INTENA1	(*( PSI5_INTENA0_type *) 0xf000538cu)	/* Interrupt Enable Register A 1 */
#define PSI5_INTENA2	(*( PSI5_INTENA0_type *) 0xf0005390u)	/* Interrupt Enable Register A 2 */

typedef volatile union
{
	struct
	{ 
		unsigned int WSI0           : 1;	/* Enable Interrupt Request WSI0 */
		unsigned int WSI1           : 1;	/* Enable Interrupt Request WSI1 */
		unsigned int WSI2           : 1;	/* Enable Interrupt Request WSI2 */
		unsigned int WSI3           : 1;	/* Enable Interrupt Request WSI3 */
		unsigned int WSI4           : 1;	/* Enable Interrupt Request WSI4 */
		unsigned int WSI5           : 1;	/* Enable Interrupt Request WSI5 */
		unsigned int SDI0           : 1;	/* Enable Interrupt Request SDI0 */
		unsigned int SDI1           : 1;	/* Enable Interrupt Request SDI1 */
		unsigned int SDI2           : 1;	/* Enable Interrupt Request SDI2 */
		unsigned int SDI3           : 1;	/* Enable Interrupt Request SDI3 */
		unsigned int SDI4           : 1;	/* Enable Interrupt Request SDI4 */
		unsigned int SDI5           : 1;	/* Enable Interrupt Request SDI5 */
		unsigned int SOI0           : 1;	/* Enable Interrupt Request SOI0 */
		unsigned int SOI1           : 1;	/* Enable Interrupt Request SOI1 */
		unsigned int SOI2           : 1;	/* Enable Interrupt Request SOI2 */
		unsigned int SOI3           : 1;	/* Enable Interrupt Request SOI3 */
		unsigned int SOI4           : 1;	/* Enable Interrupt Request SOI4 */
		unsigned int SOI5           : 1;	/* Enable Interrupt Request SOI5 */
		unsigned int SCRI0          : 1;	/* Enable Interrupt Request SCRI0 */
		unsigned int SCRI1          : 1;	/* Enable Interrupt Request SCRI1 */
		unsigned int SCRI2          : 1;	/* Enable Interrupt Request SCRI2 */
		unsigned int SCRI3          : 1;	/* Enable Interrupt Request SCRI3 */
		unsigned int SCRI4          : 1;	/* Enable Interrupt Request SCRI4 */
		unsigned int SCRI5          : 1;	/* Enable Interrupt Request SCRI5 */
		unsigned int                : 8;
	} B;
	int I;
	unsigned int U;

} PSI5_INTENB0_type;
#define PSI5_INTENB0	(*( PSI5_INTENB0_type *) 0xf000539cu)	/* Interrupt Enable Register B0 */
#define PSI5_INTENB1	(*( PSI5_INTENB0_type *) 0xf00053a0u)	/* Interrupt Enable Register B1 */
#define PSI5_INTENB2	(*( PSI5_INTENB0_type *) 0xf00053a4u)	/* Interrupt Enable Register B2 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int RSI            : 1;	/* Interrupt Pending on any Node Pointer RSI */
		/* const */ unsigned int RDI            : 1;	/* Interrupt Pending on any Node Pointer RDI */
		/* const */ unsigned int RBI            : 1;	/* Interrupt Pending on any Node Pointer RBI */
		/* const */ unsigned int TDI            : 1;	/* Interrupt Pending on any Node Pointer TDI */
		/* const */ unsigned int TBI            : 1;	/* Interrupt Pending on any Node Pointer TBI */
		/* const */ unsigned int ERRI           : 1;	/* Interrupt Pending on any Node Pointer ERRI */
		/* const */ unsigned int SDI            : 1;	/* Interrupt Pending on any Node Pointer SDI */
		/* const */ unsigned int FWI            : 1;	/* Interrupt Pending on any Node Pointer FWI */
		/* const */ unsigned int                : 24;
	} B;
	int I;
	unsigned int U;

} PSI5_INTOV_type;
#define PSI5_INTOV	(*( PSI5_INTOV_type *) 0xf00052f8u)	/* Interrupt Overview Register */

typedef volatile union
{
	struct
	{ 
		unsigned int RSI            : 1;	/* Set Interrupt Request Flag RSI */
		unsigned int RDI            : 1;	/* Set Interrupt Request Flag RDI */
		unsigned int RBI            : 1;	/* Set Interrupt Request Flag RBI */
		unsigned int TEI            : 1;	/* Set Interrupt Request Flag TEI */
		unsigned int NBI            : 1;	/* Set Interrupt Request Flag NBI */
		unsigned int MEI            : 1;	/* Set Interrupt Request Flag MEI */
		unsigned int CRCI           : 1;	/* Set Interrupt Request Flag CRCI */
		unsigned int FWI            : 1;	/* Set Interrupt Request Flag FWI */
		unsigned int RUI            : 1;	/* Set Interrupt Request Flag RUI */
		unsigned int RMI            : 1;	/* Set Interrupt Request Flag RMI */
		unsigned int TPI            : 1;	/* Set Interrupt Request Flag TPI */
		unsigned int TPOI           : 1;	/* Set Interrupt Request Flag TPOI */
		unsigned int TSI            : 1;	/* Set Interrupt Request Flag TSI */
		unsigned int TSOI           : 1;	/* Set Interrupt Request Flag TSOI */
		unsigned int TOI            : 1;	/* Set Interrupt Request Flag TOI */
		unsigned int TOOI           : 1;	/* Set Interrupt Request Flag TOOI */
		unsigned int NFI            : 1;	/* Set Interrupt Request Flag NFI */
		unsigned int                : 15;
	} B;
	int I;
	unsigned int U;

} PSI5_INTSETA0_type;
#define PSI5_INTSETA0	(*( PSI5_INTSETA0_type *) 0xf0005338u)	/* Interrupt Set Register A 0 */
#define PSI5_INTSETA1	(*( PSI5_INTSETA0_type *) 0xf000533cu)	/* Interrupt Set Register A 1 */
#define PSI5_INTSETA2	(*( PSI5_INTSETA0_type *) 0xf0005340u)	/* Interrupt Set Register A 2 */

typedef volatile union
{
	struct
	{ 
		unsigned int WSI0           : 1;	/* Set Interrupt Request Flag WSI0 */
		unsigned int WSI1           : 1;	/* Set Interrupt Request Flag WSI1 */
		unsigned int WSI2           : 1;	/* Set Interrupt Request Flag WSI2 */
		unsigned int WSI3           : 1;	/* Set Interrupt Request Flag WSI3 */
		unsigned int WSI4           : 1;	/* Set Interrupt Request Flag WSI4 */
		unsigned int WSI5           : 1;	/* Set Interrupt Request Flag WSI5 */
		unsigned int SDI0           : 1;	/* Set Interrupt Request Flag SDI0 */
		unsigned int SDI1           : 1;	/* Set Interrupt Request Flag SDI1 */
		unsigned int SDI2           : 1;	/* Set Interrupt Request Flag SDI2 */
		unsigned int SDI3           : 1;	/* Set Interrupt Request Flag SDI3 */
		unsigned int SDI4           : 1;	/* Set Interrupt Request Flag SDI4 */
		unsigned int SDI5           : 1;	/* Set Interrupt Request Flag SDI5 */
		unsigned int SOI0           : 1;	/* Set Interrupt Request Flag SOI0 */
		unsigned int SOI1           : 1;	/* Set Interrupt Request Flag SOI1 */
		unsigned int SOI2           : 1;	/* Set Interrupt Request Flag SOI2 */
		unsigned int SOI3           : 1;	/* Set Interrupt Request Flag SOI3 */
		unsigned int SOI4           : 1;	/* Set Interrupt Request Flag SOI4 */
		unsigned int SOI5           : 1;	/* Set Interrupt Request Flag SOI5 */
		unsigned int SCRI0          : 1;	/* Set Interrupt Request Flag SCRI0 */
		unsigned int SCRI1          : 1;	/* Set Interrupt Request Flag SCRI1 */
		unsigned int SCRI2          : 1;	/* Set Interrupt Request Flag SCRI2 */
		unsigned int SCRI3          : 1;	/* Set Interrupt Request Flag SCRI3 */
		unsigned int SCRI4          : 1;	/* Set Interrupt Request Flag SCRI4 */
		unsigned int SCRI5          : 1;	/* Set Interrupt Request Flag SCRI5 */
		unsigned int                : 8;
	} B;
	int I;
	unsigned int U;

} PSI5_INTSETB0_type;
#define PSI5_INTSETB0	(*( PSI5_INTSETB0_type *) 0xf000534cu)	/* Interrupt Set Register B 0 */
#define PSI5_INTSETB1	(*( PSI5_INTSETB0_type *) 0xf0005350u)	/* Interrupt Set Register B 1 */
#define PSI5_INTSETB2	(*( PSI5_INTSETB0_type *) 0xf0005354u)	/* Interrupt Set Register B 2 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int RSI            : 1;	/* Receive Success Interrupt Request Flag */
		/* const */ unsigned int RDI            : 1;	/* Receive Data Interrupt Request Flag */
		/* const */ unsigned int RBI            : 1;	/* Receive Buffer Overflow Interrupt Request Flag */
		/* const */ unsigned int TEI            : 1;	/* Time Slot Error Interrupt Request Flag */
		/* const */ unsigned int NBI            : 1;	/* Number of Bits Wrong Request Flag */
		/* const */ unsigned int MEI            : 1;	/* Error in Message Bits Flag */
		/* const */ unsigned int CRCI           : 1;	/* CRC Error Request Flag */
		/* const */ unsigned int FWI            : 1;	/* FIFO Warning Level Request Flag */
		/* const */ unsigned int RUI            : 1;	/* Receive Memory Underrun Interrupt Request Flag */
		/* const */ unsigned int RMI            : 1;	/* Receive Memory Overflow Flag */
		/* const */ unsigned int TPI            : 1;	/* Transfer Preparation Interrupt Request Flag */
		/* const */ unsigned int TPOI           : 1;	/* Transmit Preparation Overflow Interrupt Request Flag */
		/* const */ unsigned int TSI            : 1;	/* Transfer Shift Interrupt Request Flag */
		/* const */ unsigned int TSOI           : 1;	/* Transmit Shift Overflow Interrupt Request Flag */
		/* const */ unsigned int TOI            : 1;	/* Transfer Output Interrupt Request Flag */
		/* const */ unsigned int TOOI           : 1;	/* Transmit Shift Overflow Interrupt Request Flag */
		/* const */ unsigned int NFI            : 1;	/* No Frame Received Interrupt Flag */
		/* const */ unsigned int                : 15;
	} B;
	int I;
	unsigned int U;

} PSI5_INTSTATA0_type;
#define PSI5_INTSTATA0	(*( PSI5_INTSTATA0_type *) 0xf0005310u)	/* Interrupt Status Register A 0 */
#define PSI5_INTSTATA1	(*( PSI5_INTSTATA0_type *) 0xf0005314u)	/* Interrupt Status Register A 1 */
#define PSI5_INTSTATA2	(*( PSI5_INTSTATA0_type *) 0xf0005318u)	/* Interrupt Status Register A 2 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int WSI0           : 1;	/* Wrong Serial Protocol Error Request Flag */
		/* const */ unsigned int WSI1           : 1;	/* Wrong Serial Protocol Error Request Flag */
		/* const */ unsigned int WSI2           : 1;	/* Wrong Serial Protocol Error Request Flag */
		/* const */ unsigned int WSI3           : 1;	/* Wrong Serial Protocol Error Request Flag */
		/* const */ unsigned int WSI4           : 1;	/* Wrong Serial Protocol Error Request Flag */
		/* const */ unsigned int WSI5           : 1;	/* Wrong Serial Protocol Error Request Flag */
		/* const */ unsigned int SDI0           : 1;	/* Serial Data Receive Interrupt Request Flag */
		/* const */ unsigned int SDI1           : 1;	/* Serial Data Receive Interrupt Request Flag */
		/* const */ unsigned int SDI2           : 1;	/* Serial Data Receive Interrupt Request Flag */
		/* const */ unsigned int SDI3           : 1;	/* Serial Data Receive Interrupt Request Flag */
		/* const */ unsigned int SDI4           : 1;	/* Serial Data Receive Interrupt Request Flag */
		/* const */ unsigned int SDI5           : 1;	/* Serial Data Receive Interrupt Request Flag */
		/* const */ unsigned int SOI0           : 1;	/* Serial Data Buffer Overrun Interrupt Request Flag */
		/* const */ unsigned int SOI1           : 1;	/* Serial Data Buffer Overrun Interrupt Request Flag */
		/* const */ unsigned int SOI2           : 1;	/* Serial Data Buffer Overrun Interrupt Request Flag */
		/* const */ unsigned int SOI3           : 1;	/* Serial Data Buffer Overrun Interrupt Request Flag */
		/* const */ unsigned int SOI4           : 1;	/* Serial Data Buffer Overrun Interrupt Request Flag */
		/* const */ unsigned int SOI5           : 1;	/* Serial Data Buffer Overrun Interrupt Request Flag */
		/* const */ unsigned int SCRI0          : 1;	/* Serial Data CRC Error Request Flag */
		/* const */ unsigned int SCRI1          : 1;	/* Serial Data CRC Error Request Flag */
		/* const */ unsigned int SCRI2          : 1;	/* Serial Data CRC Error Request Flag */
		/* const */ unsigned int SCRI3          : 1;	/* Serial Data CRC Error Request Flag */
		/* const */ unsigned int SCRI4          : 1;	/* Serial Data CRC Error Request Flag */
		/* const */ unsigned int SCRI5          : 1;	/* Serial Data CRC Error Request Flag */
		/* const */ unsigned int                : 8;
	} B;
	int I;
	unsigned int U;

} PSI5_INTSTATB0_type;
#define PSI5_INTSTATB0	(*( PSI5_INTSTATB0_type *) 0xf0005324u)	/* Interrupt Status Register B 0 */
#define PSI5_INTSTATB1	(*( PSI5_INTSTATB0_type *) 0xf0005328u)	/* Interrupt Status Register B 1 */
#define PSI5_INTSTATB2	(*( PSI5_INTSTATB0_type *) 0xf000532cu)	/* Interrupt Status Register B 2 */

typedef volatile union
{
	struct
	{ 
		unsigned int ALTI           : 2;	/* Alternate Input Select */
		unsigned int                : 2;
		unsigned int DEPTH          : 4;	/* Digital Glitch Filter Depth */
		unsigned int OIE            : 1;	/* Output Inverter Enable Channel x */
		unsigned int IIE            : 1;	/* Input Inverter Enable Channel x */
		unsigned int                : 2;
		/* const */ unsigned int REG            : 1;	/* Rising Edge Glitch Flag for Channel x */
		/* const */ unsigned int FEG            : 1;	/* Falling Edge Glitch Flag for Channel x */
		unsigned int CREG           : 1;	/* Clear Rising Edge Glitch Flag for Channel x */
		unsigned int CFEG           : 1;	/* Clear Falling Edge Glitch Flag for Channel x */
		unsigned int                : 14;
		/* const */ unsigned int RXM            : 1;	/* Receive Monitor for Channel x */
		/* const */ unsigned int TXM            : 1;	/* Transmit Monitor for Channel x */
	} B;
	int I;
	unsigned int U;

} PSI5_IOCR0_type;
#define PSI5_IOCR0	(*( PSI5_IOCR0_type *) 0xf0005030u)	/* Input and Output Control Register 0 */
#define PSI5_IOCR1	(*( PSI5_IOCR0_type *) 0xf00050c0u)	/* Input and Output Control Register 1 */
#define PSI5_IOCR2	(*( PSI5_IOCR0_type *) 0xf0005150u)	/* Input and Output Control Register 2 */

typedef volatile union
{
	struct
	{ 
		unsigned int RST            : 1;	/* Kernel Reset */
		/* const */ unsigned int RSTSTAT        : 1;	/* Kernel Reset Status */
		unsigned int                : 30;
	} B;
	int I;
	unsigned int U;

} PSI5_KRST0_type;
#define PSI5_KRST0	(*( PSI5_KRST0_type *) 0xf00053d8u)	/* Kernel Reset Register 0 */

typedef volatile union
{
	struct
	{ 
		unsigned int RST            : 1;	/* Kernel Reset */
		unsigned int                : 31;
	} B;
	int I;
	unsigned int U;

} PSI5_KRST1_type;
#define PSI5_KRST1	(*( PSI5_KRST1_type *) 0xf00053dcu)	/* Kernel Reset Register 1 */

typedef volatile union
{
	struct
	{ 
		unsigned int CLR            : 1;	/* Kernel Reset Status Clear */
		unsigned int                : 31;
	} B;
	int I;
	unsigned int U;

} PSI5_KRSTCLR_type;
#define PSI5_KRSTCLR	(*( PSI5_KRSTCLR_type *) 0xf00053e0u)	/* Kernel Reset Status Clear Register */

typedef volatile union
{
	struct
	{ 
		unsigned int MEI0           : 1;	/* Clear MEI Flag of Buffer 0 */
		unsigned int MEI1           : 1;	/* Clear MEI Flag of Buffer 1 */
		unsigned int MEI2           : 1;	/* Clear MEI Flag of Buffer 2 */
		unsigned int MEI3           : 1;	/* Clear MEI Flag of Buffer 3 */
		unsigned int MEI4           : 1;	/* Clear MEI Flag of Buffer 4 */
		unsigned int MEI5           : 1;	/* Clear MEI Flag of Buffer 5 */
		unsigned int MEI6           : 1;	/* Clear MEI Flag of Buffer 6 */
		unsigned int MEI7           : 1;	/* Clear MEI Flag of Buffer 7 */
		unsigned int MEI8           : 1;	/* Clear MEI Flag of Buffer 8 */
		unsigned int MEI9           : 1;	/* Clear MEI Flag of Buffer 9 */
		unsigned int MEI10          : 1;	/* Clear MEI Flag of Buffer 10 */
		unsigned int MEI11          : 1;	/* Clear MEI Flag of Buffer 11 */
		unsigned int MEI12          : 1;	/* Clear MEI Flag of Buffer 12 */
		unsigned int MEI13          : 1;	/* Clear MEI Flag of Buffer 13 */
		unsigned int MEI14          : 1;	/* Clear MEI Flag of Buffer 14 */
		unsigned int MEI15          : 1;	/* Clear MEI Flag of Buffer 15 */
		unsigned int MEI16          : 1;	/* Clear MEI Flag of Buffer 16 */
		unsigned int MEI17          : 1;	/* Clear MEI Flag of Buffer 17 */
		unsigned int MEI18          : 1;	/* Clear MEI Flag of Buffer 18 */
		unsigned int MEI19          : 1;	/* Clear MEI Flag of Buffer 19 */
		unsigned int MEI20          : 1;	/* Clear MEI Flag of Buffer 20 */
		unsigned int MEI21          : 1;	/* Clear MEI Flag of Buffer 21 */
		unsigned int MEI22          : 1;	/* Clear MEI Flag of Buffer 22 */
		unsigned int MEI23          : 1;	/* Clear MEI Flag of Buffer 23 */
		unsigned int MEI24          : 1;	/* Clear MEI Flag of Buffer 24 */
		unsigned int MEI25          : 1;	/* Clear MEI Flag of Buffer 25 */
		unsigned int MEI26          : 1;	/* Clear MEI Flag of Buffer 26 */
		unsigned int MEI27          : 1;	/* Clear MEI Flag of Buffer 27 */
		unsigned int MEI28          : 1;	/* Clear MEI Flag of Buffer 28 */
		unsigned int MEI29          : 1;	/* Clear MEI Flag of Buffer 29 */
		unsigned int MEI30          : 1;	/* Clear MEI Flag of Buffer 30 */
		unsigned int MEI31          : 1;	/* Clear MEI Flag of Buffer 31 */
	} B;
	int I;
	unsigned int U;

} PSI5_MEICLR0_type;
#define PSI5_MEICLR0	(*( PSI5_MEICLR0_type *) 0xf00055d8u)	/* MEIOV0 Clear Register */
#define PSI5_MEICLR1	(*( PSI5_MEICLR0_type *) 0xf00055dcu)	/* MEIOV1 Clear Register */
#define PSI5_MEICLR2	(*( PSI5_MEICLR0_type *) 0xf00055e0u)	/* MEIOV2 Clear Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int MEI0           : 1;	/* MEI Flag of Buffer 0 */
		/* const */ unsigned int MEI1           : 1;	/* MEI Flag of Buffer 1 */
		/* const */ unsigned int MEI2           : 1;	/* MEI Flag of Buffer 2 */
		/* const */ unsigned int MEI3           : 1;	/* MEI Flag of Buffer 3 */
		/* const */ unsigned int MEI4           : 1;	/* MEI Flag of Buffer 4 */
		/* const */ unsigned int MEI5           : 1;	/* MEI Flag of Buffer 5 */
		/* const */ unsigned int MEI6           : 1;	/* MEI Flag of Buffer 6 */
		/* const */ unsigned int MEI7           : 1;	/* MEI Flag of Buffer 7 */
		/* const */ unsigned int MEI8           : 1;	/* MEI Flag of Buffer 8 */
		/* const */ unsigned int MEI9           : 1;	/* MEI Flag of Buffer 9 */
		/* const */ unsigned int MEI10          : 1;	/* MEI Flag of Buffer 10 */
		/* const */ unsigned int MEI11          : 1;	/* MEI Flag of Buffer 11 */
		/* const */ unsigned int MEI12          : 1;	/* MEI Flag of Buffer 12 */
		/* const */ unsigned int MEI13          : 1;	/* MEI Flag of Buffer 13 */
		/* const */ unsigned int MEI14          : 1;	/* MEI Flag of Buffer 14 */
		/* const */ unsigned int MEI15          : 1;	/* MEI Flag of Buffer 15 */
		/* const */ unsigned int MEI16          : 1;	/* MEI Flag of Buffer 16 */
		/* const */ unsigned int MEI17          : 1;	/* MEI Flag of Buffer 17 */
		/* const */ unsigned int MEI18          : 1;	/* MEI Flag of Buffer 18 */
		/* const */ unsigned int MEI19          : 1;	/* MEI Flag of Buffer 19 */
		/* const */ unsigned int MEI20          : 1;	/* MEI Flag of Buffer 20 */
		/* const */ unsigned int MEI21          : 1;	/* MEI Flag of Buffer 21 */
		/* const */ unsigned int MEI22          : 1;	/* MEI Flag of Buffer 22 */
		/* const */ unsigned int MEI23          : 1;	/* MEI Flag of Buffer 23 */
		/* const */ unsigned int MEI24          : 1;	/* MEI Flag of Buffer 24 */
		/* const */ unsigned int MEI25          : 1;	/* MEI Flag of Buffer 25 */
		/* const */ unsigned int MEI26          : 1;	/* MEI Flag of Buffer 26 */
		/* const */ unsigned int MEI27          : 1;	/* MEI Flag of Buffer 27 */
		/* const */ unsigned int MEI28          : 1;	/* MEI Flag of Buffer 28 */
		/* const */ unsigned int MEI29          : 1;	/* MEI Flag of Buffer 29 */
		/* const */ unsigned int MEI30          : 1;	/* MEI Flag of Buffer 30 */
		/* const */ unsigned int MEI31          : 1;	/* MEI Flag of Buffer 31 */
	} B;
	int I;
	unsigned int U;

} PSI5_MEIOV0_type;
#define PSI5_MEIOV0	(*( PSI5_MEIOV0_type *) 0xf0005498u)	/* MEI Overview Register */
#define PSI5_MEIOV1	(*( PSI5_MEIOV0_type *) 0xf000549cu)	/* MEI Overview Register */
#define PSI5_MEIOV2	(*( PSI5_MEIOV0_type *) 0xf00054a0u)	/* MEI Overview Register */

typedef volatile union
{
	struct
	{ 
		unsigned int MEI0           : 1;	/* Set MEI Flag of Buffer 0 */
		unsigned int MEI1           : 1;	/* Set MEI Flag of Buffer 1 */
		unsigned int MEI2           : 1;	/* Set MEI Flag of Buffer 2 */
		unsigned int MEI3           : 1;	/* Set MEI Flag of Buffer 3 */
		unsigned int MEI4           : 1;	/* Set MEI Flag of Buffer 4 */
		unsigned int MEI5           : 1;	/* Set MEI Flag of Buffer 5 */
		unsigned int MEI6           : 1;	/* Set MEI Flag of Buffer 6 */
		unsigned int MEI7           : 1;	/* Set MEI Flag of Buffer 7 */
		unsigned int MEI8           : 1;	/* Set MEI Flag of Buffer 8 */
		unsigned int MEI9           : 1;	/* Set MEI Flag of Buffer 9 */
		unsigned int MEI10          : 1;	/* Set MEI Flag of Buffer 10 */
		unsigned int MEI11          : 1;	/* Set MEI Flag of Buffer 11 */
		unsigned int MEI12          : 1;	/* Set MEI Flag of Buffer 12 */
		unsigned int MEI13          : 1;	/* Set MEI Flag of Buffer 13 */
		unsigned int MEI14          : 1;	/* Set MEI Flag of Buffer 14 */
		unsigned int MEI15          : 1;	/* Set MEI Flag of Buffer 15 */
		unsigned int MEI16          : 1;	/* Set MEI Flag of Buffer 16 */
		unsigned int MEI17          : 1;	/* Set MEI Flag of Buffer 17 */
		unsigned int MEI18          : 1;	/* Set MEI Flag of Buffer 18 */
		unsigned int MEI19          : 1;	/* Set MEI Flag of Buffer 19 */
		unsigned int MEI20          : 1;	/* Set MEI Flag of Buffer 20 */
		unsigned int MEI21          : 1;	/* Set MEI Flag of Buffer 21 */
		unsigned int MEI22          : 1;	/* Set MEI Flag of Buffer 22 */
		unsigned int MEI23          : 1;	/* Set MEI Flag of Buffer 23 */
		unsigned int MEI24          : 1;	/* Set MEI Flag of Buffer 24 */
		unsigned int MEI25          : 1;	/* Set MEI Flag of Buffer 25 */
		unsigned int MEI26          : 1;	/* Set MEI Flag of Buffer 26 */
		unsigned int MEI27          : 1;	/* Set MEI Flag of Buffer 27 */
		unsigned int MEI28          : 1;	/* Set MEI Flag of Buffer 28 */
		unsigned int MEI29          : 1;	/* Set MEI Flag of Buffer 29 */
		unsigned int MEI30          : 1;	/* Set MEI Flag of Buffer 30 */
		unsigned int MEI31          : 1;	/* Set MEI Flag of Buffer 31 */
	} B;
	int I;
	unsigned int U;

} PSI5_MEISET0_type;
#define PSI5_MEISET0	(*( PSI5_MEISET0_type *) 0xf0005538u)	/* MEIOV0 Set Register */
#define PSI5_MEISET1	(*( PSI5_MEISET0_type *) 0xf000553cu)	/* MEIOV1 Set Register */
#define PSI5_MEISET2	(*( PSI5_MEISET0_type *) 0xf0005540u)	/* MEIOV2 Set Register */

typedef volatile union
{
	struct
	{ 
		unsigned int NBI0           : 1;	/* Clear NBI Flag of Buffer 0 */
		unsigned int NBI1           : 1;	/* Clear NBI Flag of Buffer 1 */
		unsigned int NBI2           : 1;	/* Clear NBI Flag of Buffer 2 */
		unsigned int NBI3           : 1;	/* Clear NBI Flag of Buffer 3 */
		unsigned int NBI4           : 1;	/* Clear NBI Flag of Buffer 4 */
		unsigned int NBI5           : 1;	/* Clear NBI Flag of Buffer 5 */
		unsigned int NBI6           : 1;	/* Clear NBI Flag of Buffer 6 */
		unsigned int NBI7           : 1;	/* Clear NBI Flag of Buffer 7 */
		unsigned int NBI8           : 1;	/* Clear NBI Flag of Buffer 8 */
		unsigned int NBI9           : 1;	/* Clear NBI Flag of Buffer 9 */
		unsigned int NBI10          : 1;	/* Clear NBI Flag of Buffer 10 */
		unsigned int NBI11          : 1;	/* Clear NBI Flag of Buffer 11 */
		unsigned int NBI12          : 1;	/* Clear NBI Flag of Buffer 12 */
		unsigned int NBI13          : 1;	/* Clear NBI Flag of Buffer 13 */
		unsigned int NBI14          : 1;	/* Clear NBI Flag of Buffer 14 */
		unsigned int NBI15          : 1;	/* Clear NBI Flag of Buffer 15 */
		unsigned int NBI16          : 1;	/* Clear NBI Flag of Buffer 16 */
		unsigned int NBI17          : 1;	/* Clear NBI Flag of Buffer 17 */
		unsigned int NBI18          : 1;	/* Clear NBI Flag of Buffer 18 */
		unsigned int NBI19          : 1;	/* Clear NBI Flag of Buffer 19 */
		unsigned int NBI20          : 1;	/* Clear NBI Flag of Buffer 20 */
		unsigned int NBI21          : 1;	/* Clear NBI Flag of Buffer 21 */
		unsigned int NBI22          : 1;	/* Clear NBI Flag of Buffer 22 */
		unsigned int NBI23          : 1;	/* Clear NBI Flag of Buffer 23 */
		unsigned int NBI24          : 1;	/* Clear NBI Flag of Buffer 24 */
		unsigned int NBI25          : 1;	/* Clear NBI Flag of Buffer 25 */
		unsigned int NBI26          : 1;	/* Clear NBI Flag of Buffer 26 */
		unsigned int NBI27          : 1;	/* Clear NBI Flag of Buffer 27 */
		unsigned int NBI28          : 1;	/* Clear NBI Flag of Buffer 28 */
		unsigned int NBI29          : 1;	/* Clear NBI Flag of Buffer 29 */
		unsigned int NBI30          : 1;	/* Clear NBI Flag of Buffer 30 */
		unsigned int NBI31          : 1;	/* Clear NBI Flag of Buffer 31 */
	} B;
	int I;
	unsigned int U;

} PSI5_NBICLR0_type;
#define PSI5_NBICLR0	(*( PSI5_NBICLR0_type *) 0xf0005574u)	/* NBIOV0 Clear Register */
#define PSI5_NBICLR1	(*( PSI5_NBICLR0_type *) 0xf0005578u)	/* NBIOV1 Clear Register */
#define PSI5_NBICLR2	(*( PSI5_NBICLR0_type *) 0xf000557cu)	/* NBIOV2 Clear Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int NBI0           : 1;	/* NBI Flag of Buffer 0 */
		/* const */ unsigned int NBI1           : 1;	/* NBI Flag of Buffer 1 */
		/* const */ unsigned int NBI2           : 1;	/* NBI Flag of Buffer 2 */
		/* const */ unsigned int NBI3           : 1;	/* NBI Flag of Buffer 3 */
		/* const */ unsigned int NBI4           : 1;	/* NBI Flag of Buffer 4 */
		/* const */ unsigned int NBI5           : 1;	/* NBI Flag of Buffer 5 */
		/* const */ unsigned int NBI6           : 1;	/* NBI Flag of Buffer 6 */
		/* const */ unsigned int NBI7           : 1;	/* NBI Flag of Buffer 7 */
		/* const */ unsigned int NBI8           : 1;	/* NBI Flag of Buffer 8 */
		/* const */ unsigned int NBI9           : 1;	/* NBI Flag of Buffer 9 */
		/* const */ unsigned int NBI10          : 1;	/* NBI Flag of Buffer 10 */
		/* const */ unsigned int NBI11          : 1;	/* NBI Flag of Buffer 11 */
		/* const */ unsigned int NBI12          : 1;	/* NBI Flag of Buffer 12 */
		/* const */ unsigned int NBI13          : 1;	/* NBI Flag of Buffer 13 */
		/* const */ unsigned int NBI14          : 1;	/* NBI Flag of Buffer 14 */
		/* const */ unsigned int NBI15          : 1;	/* NBI Flag of Buffer 15 */
		/* const */ unsigned int NBI16          : 1;	/* NBI Flag of Buffer 16 */
		/* const */ unsigned int NBI17          : 1;	/* NBI Flag of Buffer 17 */
		/* const */ unsigned int NBI18          : 1;	/* NBI Flag of Buffer 18 */
		/* const */ unsigned int NBI19          : 1;	/* NBI Flag of Buffer 19 */
		/* const */ unsigned int NBI20          : 1;	/* NBI Flag of Buffer 20 */
		/* const */ unsigned int NBI21          : 1;	/* NBI Flag of Buffer 21 */
		/* const */ unsigned int NBI22          : 1;	/* NBI Flag of Buffer 22 */
		/* const */ unsigned int NBI23          : 1;	/* NBI Flag of Buffer 23 */
		/* const */ unsigned int NBI24          : 1;	/* NBI Flag of Buffer 24 */
		/* const */ unsigned int NBI25          : 1;	/* NBI Flag of Buffer 25 */
		/* const */ unsigned int NBI26          : 1;	/* NBI Flag of Buffer 26 */
		/* const */ unsigned int NBI27          : 1;	/* NBI Flag of Buffer 27 */
		/* const */ unsigned int NBI28          : 1;	/* NBI Flag of Buffer 28 */
		/* const */ unsigned int NBI29          : 1;	/* NBI Flag of Buffer 29 */
		/* const */ unsigned int NBI30          : 1;	/* NBI Flag of Buffer 30 */
		/* const */ unsigned int NBI31          : 1;	/* NBI Flag of Buffer 31 */
	} B;
	int I;
	unsigned int U;

} PSI5_NBIOV0_type;
#define PSI5_NBIOV0	(*( PSI5_NBIOV0_type *) 0xf0005434u)	/* NBI Overview Register */
#define PSI5_NBIOV1	(*( PSI5_NBIOV0_type *) 0xf0005438u)	/* NBI Overview Register */
#define PSI5_NBIOV2	(*( PSI5_NBIOV0_type *) 0xf000543cu)	/* NBI Overview Register */

typedef volatile union
{
	struct
	{ 
		unsigned int NBI0           : 1;	/* Set NBI Flag of Buffer 0 */
		unsigned int NBI1           : 1;	/* Set NBI Flag of Buffer 1 */
		unsigned int NBI2           : 1;	/* Set NBI Flag of Buffer 2 */
		unsigned int NBI3           : 1;	/* Set NBI Flag of Buffer 3 */
		unsigned int NBI4           : 1;	/* Set NBI Flag of Buffer 4 */
		unsigned int NBI5           : 1;	/* Set NBI Flag of Buffer 5 */
		unsigned int NBI6           : 1;	/* Set NBI Flag of Buffer 6 */
		unsigned int NBI7           : 1;	/* Set NBI Flag of Buffer 7 */
		unsigned int NBI8           : 1;	/* Set NBI Flag of Buffer 8 */
		unsigned int NBI9           : 1;	/* Set NBI Flag of Buffer 9 */
		unsigned int NBI10          : 1;	/* Set NBI Flag of Buffer 10 */
		unsigned int NBI11          : 1;	/* Set NBI Flag of Buffer 11 */
		unsigned int NBI12          : 1;	/* Set NBI Flag of Buffer 12 */
		unsigned int NBI13          : 1;	/* Set NBI Flag of Buffer 13 */
		unsigned int NBI14          : 1;	/* Set NBI Flag of Buffer 14 */
		unsigned int NBI15          : 1;	/* Set NBI Flag of Buffer 15 */
		unsigned int NBI16          : 1;	/* Set NBI Flag of Buffer 16 */
		unsigned int NBI17          : 1;	/* Set NBI Flag of Buffer 17 */
		unsigned int NBI18          : 1;	/* Set NBI Flag of Buffer 18 */
		unsigned int NBI19          : 1;	/* Set NBI Flag of Buffer 19 */
		unsigned int NBI20          : 1;	/* Set NBI Flag of Buffer 20 */
		unsigned int NBI21          : 1;	/* Set NBI Flag of Buffer 21 */
		unsigned int NBI22          : 1;	/* Set NBI Flag of Buffer 22 */
		unsigned int NBI23          : 1;	/* Set NBI Flag of Buffer 23 */
		unsigned int NBI24          : 1;	/* Set NBI Flag of Buffer 24 */
		unsigned int NBI25          : 1;	/* Set NBI Flag of Buffer 25 */
		unsigned int NBI26          : 1;	/* Set NBI Flag of Buffer 26 */
		unsigned int NBI27          : 1;	/* Set NBI Flag of Buffer 27 */
		unsigned int NBI28          : 1;	/* Set NBI Flag of Buffer 28 */
		unsigned int NBI29          : 1;	/* Set NBI Flag of Buffer 29 */
		unsigned int NBI30          : 1;	/* Set NBI Flag of Buffer 30 */
		unsigned int NBI31          : 1;	/* Set NBI Flag of Buffer 31 */
	} B;
	int I;
	unsigned int U;

} PSI5_NBISET0_type;
#define PSI5_NBISET0	(*( PSI5_NBISET0_type *) 0xf00054d4u)	/* NBIOV0 Set Register */
#define PSI5_NBISET1	(*( PSI5_NBISET0_type *) 0xf00054d8u)	/* NBIOV1 Set Register */
#define PSI5_NBISET2	(*( PSI5_NBISET0_type *) 0xf00054dcu)	/* NBIOV2 Set Register */

typedef volatile union
{
	struct
	{ 
		unsigned int NFI0           : 1;	/* Clear NFI Flag of Buffer 0 */
		unsigned int NFI1           : 1;	/* Clear NFI Flag of Buffer 1 */
		unsigned int NFI2           : 1;	/* Clear NFI Flag of Buffer 2 */
		unsigned int NFI3           : 1;	/* Clear NFI Flag of Buffer 3 */
		unsigned int NFI4           : 1;	/* Clear NFI Flag of Buffer 4 */
		unsigned int NFI5           : 1;	/* Clear NFI Flag of Buffer 5 */
		unsigned int NFI6           : 1;	/* Clear NFI Flag of Buffer 6 */
		unsigned int NFI7           : 1;	/* Clear NFI Flag of Buffer 7 */
		unsigned int NFI8           : 1;	/* Clear NFI Flag of Buffer 8 */
		unsigned int NFI9           : 1;	/* Clear NFI Flag of Buffer 9 */
		unsigned int NFI10          : 1;	/* Clear NFI Flag of Buffer 10 */
		unsigned int NFI11          : 1;	/* Clear NFI Flag of Buffer 11 */
		unsigned int NFI12          : 1;	/* Clear NFI Flag of Buffer 12 */
		unsigned int NFI13          : 1;	/* Clear NFI Flag of Buffer 13 */
		unsigned int NFI14          : 1;	/* Clear NFI Flag of Buffer 14 */
		unsigned int NFI15          : 1;	/* Clear NFI Flag of Buffer 15 */
		unsigned int NFI16          : 1;	/* Clear NFI Flag of Buffer 16 */
		unsigned int NFI17          : 1;	/* Clear NFI Flag of Buffer 17 */
		unsigned int NFI18          : 1;	/* Clear NFI Flag of Buffer 18 */
		unsigned int NFI19          : 1;	/* Clear NFI Flag of Buffer 19 */
		unsigned int NFI20          : 1;	/* Clear NFI Flag of Buffer 20 */
		unsigned int NFI21          : 1;	/* Clear NFI Flag of Buffer 21 */
		unsigned int NFI22          : 1;	/* Clear NFI Flag of Buffer 22 */
		unsigned int NFI23          : 1;	/* Clear NFI Flag of Buffer 23 */
		unsigned int NFI24          : 1;	/* Clear NFI Flag of Buffer 24 */
		unsigned int NFI25          : 1;	/* Clear NFI Flag of Buffer 25 */
		unsigned int NFI26          : 1;	/* Clear NFI Flag of Buffer 26 */
		unsigned int NFI27          : 1;	/* Clear NFI Flag of Buffer 27 */
		unsigned int NFI28          : 1;	/* Clear NFI Flag of Buffer 28 */
		unsigned int NFI29          : 1;	/* Clear NFI Flag of Buffer 29 */
		unsigned int NFI30          : 1;	/* Clear NFI Flag of Buffer 30 */
		unsigned int NFI31          : 1;	/* Clear NFI Flag of Buffer 31 */
	} B;
	int I;
	unsigned int U;

} PSI5_NFICLR0_type;
#define PSI5_NFICLR0	(*( PSI5_NFICLR0_type *) 0xf00055c4u)	/* NFIOV0 Clear Register */
#define PSI5_NFICLR1	(*( PSI5_NFICLR0_type *) 0xf00055c8u)	/* NFIOV1 Clear Register */
#define PSI5_NFICLR2	(*( PSI5_NFICLR0_type *) 0xf00055ccu)	/* NFIOV2 Clear Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int NFI0           : 1;	/* NFI Flag of Buffer 0 */
		/* const */ unsigned int NFI1           : 1;	/* NFI Flag of Buffer 1 */
		/* const */ unsigned int NFI2           : 1;	/* NFI Flag of Buffer 2 */
		/* const */ unsigned int NFI3           : 1;	/* NFI Flag of Buffer 3 */
		/* const */ unsigned int NFI4           : 1;	/* NFI Flag of Buffer 4 */
		/* const */ unsigned int NFI5           : 1;	/* NFI Flag of Buffer 5 */
		/* const */ unsigned int NFI6           : 1;	/* NFI Flag of Buffer 6 */
		/* const */ unsigned int NFI7           : 1;	/* NFI Flag of Buffer 7 */
		/* const */ unsigned int NFI8           : 1;	/* NFI Flag of Buffer 8 */
		/* const */ unsigned int NFI9           : 1;	/* NFI Flag of Buffer 9 */
		/* const */ unsigned int NFI10          : 1;	/* NFI Flag of Buffer 10 */
		/* const */ unsigned int NFI11          : 1;	/* NFI Flag of Buffer 11 */
		/* const */ unsigned int NFI12          : 1;	/* NFI Flag of Buffer 12 */
		/* const */ unsigned int NFI13          : 1;	/* NFI Flag of Buffer 13 */
		/* const */ unsigned int NFI14          : 1;	/* NFI Flag of Buffer 14 */
		/* const */ unsigned int NFI15          : 1;	/* NFI Flag of Buffer 15 */
		/* const */ unsigned int NFI16          : 1;	/* NFI Flag of Buffer 16 */
		/* const */ unsigned int NFI17          : 1;	/* NFI Flag of Buffer 17 */
		/* const */ unsigned int NFI18          : 1;	/* NFI Flag of Buffer 18 */
		/* const */ unsigned int NFI19          : 1;	/* NFI Flag of Buffer 19 */
		/* const */ unsigned int NFI20          : 1;	/* NFI Flag of Buffer 20 */
		/* const */ unsigned int NFI21          : 1;	/* NFI Flag of Buffer 21 */
		/* const */ unsigned int NFI22          : 1;	/* NFI Flag of Buffer 22 */
		/* const */ unsigned int NFI23          : 1;	/* NFI Flag of Buffer 23 */
		/* const */ unsigned int NFI24          : 1;	/* NFI Flag of Buffer 24 */
		/* const */ unsigned int NFI25          : 1;	/* NFI Flag of Buffer 25 */
		/* const */ unsigned int NFI26          : 1;	/* NFI Flag of Buffer 26 */
		/* const */ unsigned int NFI27          : 1;	/* NFI Flag of Buffer 27 */
		/* const */ unsigned int NFI28          : 1;	/* NFI Flag of Buffer 28 */
		/* const */ unsigned int NFI29          : 1;	/* NFI Flag of Buffer 29 */
		/* const */ unsigned int NFI30          : 1;	/* NFI Flag of Buffer 30 */
		/* const */ unsigned int NFI31          : 1;	/* NFI Flag of Buffer 31 */
	} B;
	int I;
	unsigned int U;

} PSI5_NFIOV0_type;
#define PSI5_NFIOV0	(*( PSI5_NFIOV0_type *) 0xf0005484u)	/* NFI Overview Register */
#define PSI5_NFIOV1	(*( PSI5_NFIOV0_type *) 0xf0005488u)	/* NFI Overview Register */
#define PSI5_NFIOV2	(*( PSI5_NFIOV0_type *) 0xf000548cu)	/* NFI Overview Register */

typedef volatile union
{
	struct
	{ 
		unsigned int NFI0           : 1;	/* Set NFI Flag of Buffer 0 */
		unsigned int NFI1           : 1;	/* Set NFI Flag of Buffer 1 */
		unsigned int NFI2           : 1;	/* Set NFI Flag of Buffer 2 */
		unsigned int NFI3           : 1;	/* Set NFI Flag of Buffer 3 */
		unsigned int NFI4           : 1;	/* Set NFI Flag of Buffer 4 */
		unsigned int NFI5           : 1;	/* Set NFI Flag of Buffer 5 */
		unsigned int NFI6           : 1;	/* Set NFI Flag of Buffer 6 */
		unsigned int NFI7           : 1;	/* Set NFI Flag of Buffer 7 */
		unsigned int NFI8           : 1;	/* Set NFI Flag of Buffer 8 */
		unsigned int NFI9           : 1;	/* Set NFI Flag of Buffer 9 */
		unsigned int NFI10          : 1;	/* Set NFI Flag of Buffer 10 */
		unsigned int NFI11          : 1;	/* Set NFI Flag of Buffer 11 */
		unsigned int NFI12          : 1;	/* Set NFI Flag of Buffer 12 */
		unsigned int NFI13          : 1;	/* Set NFI Flag of Buffer 13 */
		unsigned int NFI14          : 1;	/* Set NFI Flag of Buffer 14 */
		unsigned int NFI15          : 1;	/* Set NFI Flag of Buffer 15 */
		unsigned int NFI16          : 1;	/* Set NFI Flag of Buffer 16 */
		unsigned int NFI17          : 1;	/* Set NFI Flag of Buffer 17 */
		unsigned int NFI18          : 1;	/* Set NFI Flag of Buffer 18 */
		unsigned int NFI19          : 1;	/* Set NFI Flag of Buffer 19 */
		unsigned int NFI20          : 1;	/* Set NFI Flag of Buffer 20 */
		unsigned int NFI21          : 1;	/* Set NFI Flag of Buffer 21 */
		unsigned int NFI22          : 1;	/* Set NFI Flag of Buffer 22 */
		unsigned int NFI23          : 1;	/* Set NFI Flag of Buffer 23 */
		unsigned int NFI24          : 1;	/* Set NFI Flag of Buffer 24 */
		unsigned int NFI25          : 1;	/* Set NFI Flag of Buffer 25 */
		unsigned int NFI26          : 1;	/* Set NFI Flag of Buffer 26 */
		unsigned int NFI27          : 1;	/* Set NFI Flag of Buffer 27 */
		unsigned int NFI28          : 1;	/* Set NFI Flag of Buffer 28 */
		unsigned int NFI29          : 1;	/* Set NFI Flag of Buffer 29 */
		unsigned int NFI30          : 1;	/* Set NFI Flag of Buffer 30 */
		unsigned int NFI31          : 1;	/* Set NFI Flag of Buffer 31 */
	} B;
	int I;
	unsigned int U;

} PSI5_NFISET0_type;
#define PSI5_NFISET0	(*( PSI5_NFISET0_type *) 0xf0005524u)	/* NFIOV0 Set Register */
#define PSI5_NFISET1	(*( PSI5_NFISET0_type *) 0xf0005528u)	/* NFIOV1 Set Register */
#define PSI5_NFISET2	(*( PSI5_NFISET0_type *) 0xf000552cu)	/* NFIOV2 Set Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32                : 24;
		unsigned __sfrbit32 SUS            : 4;	/* OCDS Suspend Control */
		unsigned __sfrbit32 SUS_P          : 1;	/* SUS Write Protection */
		/* const */ unsigned __sfrbit32 SUSSTA         : 1;	/* Suspend State */
		unsigned __sfrbit32                : 2;
	} B;
	int I;
	unsigned int U;

} PSI5_OCS_type;
#define PSI5_OCS	(*( PSI5_OCS_type *) 0xf00053ccu)	/* OCDS Control and Status */

typedef volatile union
{
	struct
	{ 
		unsigned int PLEN           : 6;	/* Pulse Length */
		unsigned int                : 2;
		unsigned int DEL            : 6;	/* Delay Length */
		unsigned int                : 1;
		unsigned int TBS            : 1;	/* Time Base Select */
		unsigned int ETB            : 3;	/* External Time Base Select */
		unsigned int PTE            : 1;	/* Periodic Trigger Enable */
		unsigned int ETS            : 3;	/* External Trigger Select */
		unsigned int ETE            : 1;	/* External Trigger Enable */
		unsigned int BYP            : 1;	/* Bypass Enable */
		unsigned int BOT            : 7;	/* Blank Out Time */
	} B;
	int I;
	unsigned int U;

} PSI5_PGC0_type;
#define PSI5_PGC0	(*( PSI5_PGC0_type *) 0xf0005088u)	/* Pulse Generation Control Register 0 */
#define PSI5_PGC1	(*( PSI5_PGC0_type *) 0xf0005118u)	/* Pulse Generation Control Register 1 */
#define PSI5_PGC2	(*( PSI5_PGC0_type *) 0xf00051a8u)	/* Pulse Generation Control Register 2 */

typedef volatile union
{
	struct
	{ 
		unsigned int PDL0           : 5;	/* Payload Data Length */
		unsigned int PDL1           : 5;	/* Payload Data Length */
		unsigned int PDL2           : 5;	/* Payload Data Length */
		unsigned int PDL3           : 5;	/* Payload Data Length */
		unsigned int PDL4           : 5;	/* Payload Data Length */
		unsigned int PDL5           : 5;	/* Payload Data Length */
		unsigned int ASYN           : 1;	/* Asynchronous Mode */
		unsigned int AVBS           : 1;	/* Verbose Mode for Asynchronous Mode */
	} B;
	int I;
	unsigned int U;

} PSI5_RCRA0_type;
#define PSI5_RCRA0	(*( PSI5_RCRA0_type *) 0xf0005034u)	/* Receiver Control Register A 0 */
#define PSI5_RCRA1	(*( PSI5_RCRA0_type *) 0xf00050c4u)	/* Receiver Control Register A 1 */
#define PSI5_RCRA2	(*( PSI5_RCRA0_type *) 0xf0005154u)	/* Receiver Control Register A 2 */

typedef volatile union
{
	struct
	{ 
		unsigned int MSG0           : 1;	/* Messaging Bits */
		unsigned int CRC0           : 1;	/* CRC or Parity Selection */
		unsigned int FEC0           : 1;	/* Frame Expectation Control */
		unsigned int VBS0           : 1;	/* Verbose Mode */
		unsigned int MSG1           : 1;	/* Messaging Bits */
		unsigned int CRC1           : 1;	/* CRC or Parity Selection */
		unsigned int FEC1           : 1;	/* Frame Expectation Control */
		unsigned int VBS1           : 1;	/* Verbose Mode */
		unsigned int MSG2           : 1;	/* Messaging Bits */
		unsigned int CRC2           : 1;	/* CRC or Parity Selection */
		unsigned int FEC2           : 1;	/* Frame Expectation Control */
		unsigned int VBS2           : 1;	/* Verbose Mode */
		unsigned int MSG3           : 1;	/* Messaging Bits */
		unsigned int CRC3           : 1;	/* CRC or Parity Selection */
		unsigned int FEC3           : 1;	/* Frame Expectation Control */
		unsigned int VBS3           : 1;	/* Verbose Mode */
		unsigned int MSG4           : 1;	/* Messaging Bits */
		unsigned int CRC4           : 1;	/* CRC or Parity Selection */
		unsigned int FEC4           : 1;	/* Frame Expectation Control */
		unsigned int VBS4           : 1;	/* Verbose Mode */
		unsigned int MSG5           : 1;	/* Messaging Bits */
		unsigned int CRC5           : 1;	/* CRC or Parity Selection */
		unsigned int FEC5           : 1;	/* Frame Expectation Control */
		unsigned int VBS5           : 1;	/* Verbose Mode */
		unsigned int                : 8;
	} B;
	int I;
	unsigned int U;

} PSI5_RCRB0_type;
#define PSI5_RCRB0	(*( PSI5_RCRB0_type *) 0xf0005038u)	/* Receiver Control Register B 0 */
#define PSI5_RCRB1	(*( PSI5_RCRB0_type *) 0xf00050c8u)	/* Receiver Control Register B 1 */
#define PSI5_RCRB2	(*( PSI5_RCRB0_type *) 0xf0005158u)	/* Receiver Control Register B 2 */

typedef volatile union
{
	struct
	{ 
		unsigned int BRS            : 1;	/* Baud Rate Select */
		unsigned int TSP            : 2;	/* Time Stamp Select for Pulses */
		unsigned int TSF            : 2;	/* Time Stamp Select for Start of Frame (SOF) */
		unsigned int TSR            : 1;	/* Time Stamp Select for Receive Data Registers */
		unsigned int                : 26;
	} B;
	int I;
	unsigned int U;

} PSI5_RCRC0_type;
#define PSI5_RCRC0	(*( PSI5_RCRC0_type *) 0xf000503cu)	/* Receiver Control Register C 0 */
#define PSI5_RCRC1	(*( PSI5_RCRC0_type *) 0xf00050ccu)	/* Receiver Control Register C 1 */
#define PSI5_RCRC2	(*( PSI5_RCRC0_type *) 0xf000515cu)	/* Receiver Control Register C 2 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int RD             : 32;	/* RD */
	} B;
	int I;
	unsigned int U;

} PSI5_RDF0_type;
#define PSI5_RDF0	(*( PSI5_RDF0_type *) 0xf00053f8u)	/* Receive Data FIFO 0 */
#define PSI5_RDF1	(*( PSI5_RDF0_type *) 0xf00053fcu)	/* Receive Data FIFO 1 */
#define PSI5_RDF2	(*( PSI5_RDF0_type *) 0xf0005400u)	/* Receive Data FIFO 2 */

typedef volatile union
{
	struct
	{ 
		unsigned int RDI0           : 1;	/* Clear RDI Flag of Buffer 0 */
		unsigned int RDI1           : 1;	/* Clear RDI Flag of Buffer 1 */
		unsigned int RDI2           : 1;	/* Clear RDI Flag of Buffer 2 */
		unsigned int RDI3           : 1;	/* Clear RDI Flag of Buffer 3 */
		unsigned int RDI4           : 1;	/* Clear RDI Flag of Buffer 4 */
		unsigned int RDI5           : 1;	/* Clear RDI Flag of Buffer 5 */
		unsigned int RDI6           : 1;	/* Clear RDI Flag of Buffer 6 */
		unsigned int RDI7           : 1;	/* Clear RDI Flag of Buffer 7 */
		unsigned int RDI8           : 1;	/* Clear RDI Flag of Buffer 8 */
		unsigned int RDI9           : 1;	/* Clear RDI Flag of Buffer 9 */
		unsigned int RDI10          : 1;	/* Clear RDI Flag of Buffer 10 */
		unsigned int RDI11          : 1;	/* Clear RDI Flag of Buffer 11 */
		unsigned int RDI12          : 1;	/* Clear RDI Flag of Buffer 12 */
		unsigned int RDI13          : 1;	/* Clear RDI Flag of Buffer 13 */
		unsigned int RDI14          : 1;	/* Clear RDI Flag of Buffer 14 */
		unsigned int RDI15          : 1;	/* Clear RDI Flag of Buffer 15 */
		unsigned int RDI16          : 1;	/* Clear RDI Flag of Buffer 16 */
		unsigned int RDI17          : 1;	/* Clear RDI Flag of Buffer 17 */
		unsigned int RDI18          : 1;	/* Clear RDI Flag of Buffer 18 */
		unsigned int RDI19          : 1;	/* Clear RDI Flag of Buffer 19 */
		unsigned int RDI20          : 1;	/* Clear RDI Flag of Buffer 20 */
		unsigned int RDI21          : 1;	/* Clear RDI Flag of Buffer 21 */
		unsigned int RDI22          : 1;	/* Clear RDI Flag of Buffer 22 */
		unsigned int RDI23          : 1;	/* Clear RDI Flag of Buffer 23 */
		unsigned int RDI24          : 1;	/* Clear RDI Flag of Buffer 24 */
		unsigned int RDI25          : 1;	/* Clear RDI Flag of Buffer 25 */
		unsigned int RDI26          : 1;	/* Clear RDI Flag of Buffer 26 */
		unsigned int RDI27          : 1;	/* Clear RDI Flag of Buffer 27 */
		unsigned int RDI28          : 1;	/* Clear RDI Flag of Buffer 28 */
		unsigned int RDI29          : 1;	/* Clear RDI Flag of Buffer 29 */
		unsigned int RDI30          : 1;	/* Clear RDI Flag of Buffer 30 */
		unsigned int RDI31          : 1;	/* Clear RDI Flag of Buffer 31 */
	} B;
	int I;
	unsigned int U;

} PSI5_RDICLR0_type;
#define PSI5_RDICLR0	(*( PSI5_RDICLR0_type *) 0xf00055b0u)	/* RDIOV0 Clear Register */
#define PSI5_RDICLR1	(*( PSI5_RDICLR0_type *) 0xf00055b4u)	/* RDIOV1 Clear Register */
#define PSI5_RDICLR2	(*( PSI5_RDICLR0_type *) 0xf00055b8u)	/* RDIOV2 Clear Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int RDI0           : 1;	/* RDI Flag of Buffer 0 */
		/* const */ unsigned int RDI1           : 1;	/* RDI Flag of Buffer 1 */
		/* const */ unsigned int RDI2           : 1;	/* RDI Flag of Buffer 2 */
		/* const */ unsigned int RDI3           : 1;	/* RDI Flag of Buffer 3 */
		/* const */ unsigned int RDI4           : 1;	/* RDI Flag of Buffer 4 */
		/* const */ unsigned int RDI5           : 1;	/* RDI Flag of Buffer 5 */
		/* const */ unsigned int RDI6           : 1;	/* RDI Flag of Buffer 6 */
		/* const */ unsigned int RDI7           : 1;	/* RDI Flag of Buffer 7 */
		/* const */ unsigned int RDI8           : 1;	/* RDI Flag of Buffer 8 */
		/* const */ unsigned int RDI9           : 1;	/* RDI Flag of Buffer 9 */
		/* const */ unsigned int RDI10          : 1;	/* RDI Flag of Buffer 10 */
		/* const */ unsigned int RDI11          : 1;	/* RDI Flag of Buffer 11 */
		/* const */ unsigned int RDI12          : 1;	/* RDI Flag of Buffer 12 */
		/* const */ unsigned int RDI13          : 1;	/* RDI Flag of Buffer 13 */
		/* const */ unsigned int RDI14          : 1;	/* RDI Flag of Buffer 14 */
		/* const */ unsigned int RDI15          : 1;	/* RDI Flag of Buffer 15 */
		/* const */ unsigned int RDI16          : 1;	/* RDI Flag of Buffer 16 */
		/* const */ unsigned int RDI17          : 1;	/* RDI Flag of Buffer 17 */
		/* const */ unsigned int RDI18          : 1;	/* RDI Flag of Buffer 18 */
		/* const */ unsigned int RDI19          : 1;	/* RDI Flag of Buffer 19 */
		/* const */ unsigned int RDI20          : 1;	/* RDI Flag of Buffer 20 */
		/* const */ unsigned int RDI21          : 1;	/* RDI Flag of Buffer 21 */
		/* const */ unsigned int RDI22          : 1;	/* RDI Flag of Buffer 22 */
		/* const */ unsigned int RDI23          : 1;	/* RDI Flag of Buffer 23 */
		/* const */ unsigned int RDI24          : 1;	/* RDI Flag of Buffer 24 */
		/* const */ unsigned int RDI25          : 1;	/* RDI Flag of Buffer 25 */
		/* const */ unsigned int RDI26          : 1;	/* RDI Flag of Buffer 26 */
		/* const */ unsigned int RDI27          : 1;	/* RDI Flag of Buffer 27 */
		/* const */ unsigned int RDI28          : 1;	/* RDI Flag of Buffer 28 */
		/* const */ unsigned int RDI29          : 1;	/* RDI Flag of Buffer 29 */
		/* const */ unsigned int RDI30          : 1;	/* RDI Flag of Buffer 30 */
		/* const */ unsigned int RDI31          : 1;	/* RDI Flag of Buffer 31 */
	} B;
	int I;
	unsigned int U;

} PSI5_RDIOV0_type;
#define PSI5_RDIOV0	(*( PSI5_RDIOV0_type *) 0xf0005470u)	/* RDI Overview Register */
#define PSI5_RDIOV1	(*( PSI5_RDIOV0_type *) 0xf0005474u)	/* RDI Overview Register */
#define PSI5_RDIOV2	(*( PSI5_RDIOV0_type *) 0xf0005478u)	/* RDI Overview Register */

typedef volatile union
{
	struct
	{ 
		unsigned int RDI0           : 1;	/* Set RDI Flag of Buffer 0 */
		unsigned int RDI1           : 1;	/* Set RDI Flag of Buffer 1 */
		unsigned int RDI2           : 1;	/* Set RDI Flag of Buffer 2 */
		unsigned int RDI3           : 1;	/* Set RDI Flag of Buffer 3 */
		unsigned int RDI4           : 1;	/* Set RDI Flag of Buffer 4 */
		unsigned int RDI5           : 1;	/* Set RDI Flag of Buffer 5 */
		unsigned int RDI6           : 1;	/* Set RDI Flag of Buffer 6 */
		unsigned int RDI7           : 1;	/* Set RDI Flag of Buffer 7 */
		unsigned int RDI8           : 1;	/* Set RDI Flag of Buffer 8 */
		unsigned int RDI9           : 1;	/* Set RDI Flag of Buffer 9 */
		unsigned int RDI10          : 1;	/* Set RDI Flag of Buffer 10 */
		unsigned int RDI11          : 1;	/* Set RDI Flag of Buffer 11 */
		unsigned int RDI12          : 1;	/* Set RDI Flag of Buffer 12 */
		unsigned int RDI13          : 1;	/* Set RDI Flag of Buffer 13 */
		unsigned int RDI14          : 1;	/* Set RDI Flag of Buffer 14 */
		unsigned int RDI15          : 1;	/* Set RDI Flag of Buffer 15 */
		unsigned int RDI16          : 1;	/* Set RDI Flag of Buffer 16 */
		unsigned int RDI17          : 1;	/* Set RDI Flag of Buffer 17 */
		unsigned int RDI18          : 1;	/* Set RDI Flag of Buffer 18 */
		unsigned int RDI19          : 1;	/* Set RDI Flag of Buffer 19 */
		unsigned int RDI20          : 1;	/* Set RDI Flag of Buffer 20 */
		unsigned int RDI21          : 1;	/* Set RDI Flag of Buffer 21 */
		unsigned int RDI22          : 1;	/* Set RDI Flag of Buffer 22 */
		unsigned int RDI23          : 1;	/* Set RDI Flag of Buffer 23 */
		unsigned int RDI24          : 1;	/* Set RDI Flag of Buffer 24 */
		unsigned int RDI25          : 1;	/* Set RDI Flag of Buffer 25 */
		unsigned int RDI26          : 1;	/* Set RDI Flag of Buffer 26 */
		unsigned int RDI27          : 1;	/* Set RDI Flag of Buffer 27 */
		unsigned int RDI28          : 1;	/* Set RDI Flag of Buffer 28 */
		unsigned int RDI29          : 1;	/* Set RDI Flag of Buffer 29 */
		unsigned int RDI30          : 1;	/* Set RDI Flag of Buffer 30 */
		unsigned int RDI31          : 1;	/* Set RDI Flag of Buffer 31 */
	} B;
	int I;
	unsigned int U;

} PSI5_RDISET0_type;
#define PSI5_RDISET0	(*( PSI5_RDISET0_type *) 0xf0005510u)	/* RDIOV0 Set Register */
#define PSI5_RDISET1	(*( PSI5_RDISET0_type *) 0xf0005514u)	/* RDIOV1 Set Register */
#define PSI5_RDISET2	(*( PSI5_RDISET0_type *) 0xf0005518u)	/* RDIOV2 Set Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int TS             : 24;	/* Time Stamp */
		/* const */ unsigned int SC             : 3;	/* Slot Counter */
		/* const */ unsigned int TEI            : 1;	/* Time Slot Error Flag */
		/* const */ unsigned int NBI            : 1;	/* Number of bits Error Flag */
		/* const */ unsigned int MEI            : 1;	/* Error in Messaging Bits Flag */
		/* const */ unsigned int NFI            : 1;	/* No Frame Received Flag */
		/* const */ unsigned int RMI            : 1;	/* Receive Memory Overflow Flag */
	} B;
	int I;
	unsigned int U;

} PSI5_RDMH00_type;
#define PSI5_RDMH00	(*( PSI5_RDMH00_type *) 0xf0005604u)	/* Receive Data Memor0 High 0y */
#define PSI5_RDMH01	(*( PSI5_RDMH00_type *) 0xf000560cu)	/* Receive Data Memor1 High 0y */
#define PSI5_RDMH010	(*( PSI5_RDMH00_type *) 0xf0005654u)	/* Receive Data Memor10 High 0y */
#define PSI5_RDMH011	(*( PSI5_RDMH00_type *) 0xf000565cu)	/* Receive Data Memor11 High 0y */
#define PSI5_RDMH012	(*( PSI5_RDMH00_type *) 0xf0005664u)	/* Receive Data Memor12 High 0y */
#define PSI5_RDMH013	(*( PSI5_RDMH00_type *) 0xf000566cu)	/* Receive Data Memor13 High 0y */
#define PSI5_RDMH014	(*( PSI5_RDMH00_type *) 0xf0005674u)	/* Receive Data Memor14 High 0y */
#define PSI5_RDMH015	(*( PSI5_RDMH00_type *) 0xf000567cu)	/* Receive Data Memor15 High 0y */
#define PSI5_RDMH016	(*( PSI5_RDMH00_type *) 0xf0005684u)	/* Receive Data Memor16 High 0y */
#define PSI5_RDMH017	(*( PSI5_RDMH00_type *) 0xf000568cu)	/* Receive Data Memor17 High 0y */
#define PSI5_RDMH018	(*( PSI5_RDMH00_type *) 0xf0005694u)	/* Receive Data Memor18 High 0y */
#define PSI5_RDMH019	(*( PSI5_RDMH00_type *) 0xf000569cu)	/* Receive Data Memor19 High 0y */
#define PSI5_RDMH02	(*( PSI5_RDMH00_type *) 0xf0005614u)	/* Receive Data Memor2 High 0y */
#define PSI5_RDMH020	(*( PSI5_RDMH00_type *) 0xf00056a4u)	/* Receive Data Memor20 High 0y */
#define PSI5_RDMH021	(*( PSI5_RDMH00_type *) 0xf00056acu)	/* Receive Data Memor21 High 0y */
#define PSI5_RDMH022	(*( PSI5_RDMH00_type *) 0xf00056b4u)	/* Receive Data Memor22 High 0y */
#define PSI5_RDMH023	(*( PSI5_RDMH00_type *) 0xf00056bcu)	/* Receive Data Memor23 High 0y */
#define PSI5_RDMH024	(*( PSI5_RDMH00_type *) 0xf00056c4u)	/* Receive Data Memor24 High 0y */
#define PSI5_RDMH025	(*( PSI5_RDMH00_type *) 0xf00056ccu)	/* Receive Data Memor25 High 0y */
#define PSI5_RDMH026	(*( PSI5_RDMH00_type *) 0xf00056d4u)	/* Receive Data Memor26 High 0y */
#define PSI5_RDMH027	(*( PSI5_RDMH00_type *) 0xf00056dcu)	/* Receive Data Memor27 High 0y */
#define PSI5_RDMH028	(*( PSI5_RDMH00_type *) 0xf00056e4u)	/* Receive Data Memor28 High 0y */
#define PSI5_RDMH029	(*( PSI5_RDMH00_type *) 0xf00056ecu)	/* Receive Data Memor29 High 0y */
#define PSI5_RDMH03	(*( PSI5_RDMH00_type *) 0xf000561cu)	/* Receive Data Memor3 High 0y */
#define PSI5_RDMH030	(*( PSI5_RDMH00_type *) 0xf00056f4u)	/* Receive Data Memor30 High 0y */
#define PSI5_RDMH031	(*( PSI5_RDMH00_type *) 0xf00056fcu)	/* Receive Data Memor31 High 0y */
#define PSI5_RDMH04	(*( PSI5_RDMH00_type *) 0xf0005624u)	/* Receive Data Memor4 High 0y */
#define PSI5_RDMH05	(*( PSI5_RDMH00_type *) 0xf000562cu)	/* Receive Data Memor5 High 0y */
#define PSI5_RDMH06	(*( PSI5_RDMH00_type *) 0xf0005634u)	/* Receive Data Memor6 High 0y */
#define PSI5_RDMH07	(*( PSI5_RDMH00_type *) 0xf000563cu)	/* Receive Data Memor7 High 0y */
#define PSI5_RDMH08	(*( PSI5_RDMH00_type *) 0xf0005644u)	/* Receive Data Memor8 High 0y */
#define PSI5_RDMH09	(*( PSI5_RDMH00_type *) 0xf000564cu)	/* Receive Data Memor9 High 0y */
#define PSI5_RDMH10	(*( PSI5_RDMH00_type *) 0xf0005704u)	/* Receive Data Memor0 High 1y */
#define PSI5_RDMH11	(*( PSI5_RDMH00_type *) 0xf000570cu)	/* Receive Data Memor1 High 1y */
#define PSI5_RDMH110	(*( PSI5_RDMH00_type *) 0xf0005754u)	/* Receive Data Memor10 High 1y */
#define PSI5_RDMH111	(*( PSI5_RDMH00_type *) 0xf000575cu)	/* Receive Data Memor11 High 1y */
#define PSI5_RDMH112	(*( PSI5_RDMH00_type *) 0xf0005764u)	/* Receive Data Memor12 High 1y */
#define PSI5_RDMH113	(*( PSI5_RDMH00_type *) 0xf000576cu)	/* Receive Data Memor13 High 1y */
#define PSI5_RDMH114	(*( PSI5_RDMH00_type *) 0xf0005774u)	/* Receive Data Memor14 High 1y */
#define PSI5_RDMH115	(*( PSI5_RDMH00_type *) 0xf000577cu)	/* Receive Data Memor15 High 1y */
#define PSI5_RDMH116	(*( PSI5_RDMH00_type *) 0xf0005784u)	/* Receive Data Memor16 High 1y */
#define PSI5_RDMH117	(*( PSI5_RDMH00_type *) 0xf000578cu)	/* Receive Data Memor17 High 1y */
#define PSI5_RDMH118	(*( PSI5_RDMH00_type *) 0xf0005794u)	/* Receive Data Memor18 High 1y */
#define PSI5_RDMH119	(*( PSI5_RDMH00_type *) 0xf000579cu)	/* Receive Data Memor19 High 1y */
#define PSI5_RDMH12	(*( PSI5_RDMH00_type *) 0xf0005714u)	/* Receive Data Memor2 High 1y */
#define PSI5_RDMH120	(*( PSI5_RDMH00_type *) 0xf00057a4u)	/* Receive Data Memor20 High 1y */
#define PSI5_RDMH121	(*( PSI5_RDMH00_type *) 0xf00057acu)	/* Receive Data Memor21 High 1y */
#define PSI5_RDMH122	(*( PSI5_RDMH00_type *) 0xf00057b4u)	/* Receive Data Memor22 High 1y */
#define PSI5_RDMH123	(*( PSI5_RDMH00_type *) 0xf00057bcu)	/* Receive Data Memor23 High 1y */
#define PSI5_RDMH124	(*( PSI5_RDMH00_type *) 0xf00057c4u)	/* Receive Data Memor24 High 1y */
#define PSI5_RDMH125	(*( PSI5_RDMH00_type *) 0xf00057ccu)	/* Receive Data Memor25 High 1y */
#define PSI5_RDMH126	(*( PSI5_RDMH00_type *) 0xf00057d4u)	/* Receive Data Memor26 High 1y */
#define PSI5_RDMH127	(*( PSI5_RDMH00_type *) 0xf00057dcu)	/* Receive Data Memor27 High 1y */
#define PSI5_RDMH128	(*( PSI5_RDMH00_type *) 0xf00057e4u)	/* Receive Data Memor28 High 1y */
#define PSI5_RDMH129	(*( PSI5_RDMH00_type *) 0xf00057ecu)	/* Receive Data Memor29 High 1y */
#define PSI5_RDMH13	(*( PSI5_RDMH00_type *) 0xf000571cu)	/* Receive Data Memor3 High 1y */
#define PSI5_RDMH130	(*( PSI5_RDMH00_type *) 0xf00057f4u)	/* Receive Data Memor30 High 1y */
#define PSI5_RDMH131	(*( PSI5_RDMH00_type *) 0xf00057fcu)	/* Receive Data Memor31 High 1y */
#define PSI5_RDMH14	(*( PSI5_RDMH00_type *) 0xf0005724u)	/* Receive Data Memor4 High 1y */
#define PSI5_RDMH15	(*( PSI5_RDMH00_type *) 0xf000572cu)	/* Receive Data Memor5 High 1y */
#define PSI5_RDMH16	(*( PSI5_RDMH00_type *) 0xf0005734u)	/* Receive Data Memor6 High 1y */
#define PSI5_RDMH17	(*( PSI5_RDMH00_type *) 0xf000573cu)	/* Receive Data Memor7 High 1y */
#define PSI5_RDMH18	(*( PSI5_RDMH00_type *) 0xf0005744u)	/* Receive Data Memor8 High 1y */
#define PSI5_RDMH19	(*( PSI5_RDMH00_type *) 0xf000574cu)	/* Receive Data Memor9 High 1y */
#define PSI5_RDMH20	(*( PSI5_RDMH00_type *) 0xf0005804u)	/* Receive Data Memor0 High 2y */
#define PSI5_RDMH21	(*( PSI5_RDMH00_type *) 0xf000580cu)	/* Receive Data Memor1 High 2y */
#define PSI5_RDMH210	(*( PSI5_RDMH00_type *) 0xf0005854u)	/* Receive Data Memor10 High 2y */
#define PSI5_RDMH211	(*( PSI5_RDMH00_type *) 0xf000585cu)	/* Receive Data Memor11 High 2y */
#define PSI5_RDMH212	(*( PSI5_RDMH00_type *) 0xf0005864u)	/* Receive Data Memor12 High 2y */
#define PSI5_RDMH213	(*( PSI5_RDMH00_type *) 0xf000586cu)	/* Receive Data Memor13 High 2y */
#define PSI5_RDMH214	(*( PSI5_RDMH00_type *) 0xf0005874u)	/* Receive Data Memor14 High 2y */
#define PSI5_RDMH215	(*( PSI5_RDMH00_type *) 0xf000587cu)	/* Receive Data Memor15 High 2y */
#define PSI5_RDMH216	(*( PSI5_RDMH00_type *) 0xf0005884u)	/* Receive Data Memor16 High 2y */
#define PSI5_RDMH217	(*( PSI5_RDMH00_type *) 0xf000588cu)	/* Receive Data Memor17 High 2y */
#define PSI5_RDMH218	(*( PSI5_RDMH00_type *) 0xf0005894u)	/* Receive Data Memor18 High 2y */
#define PSI5_RDMH219	(*( PSI5_RDMH00_type *) 0xf000589cu)	/* Receive Data Memor19 High 2y */
#define PSI5_RDMH22	(*( PSI5_RDMH00_type *) 0xf0005814u)	/* Receive Data Memor2 High 2y */
#define PSI5_RDMH220	(*( PSI5_RDMH00_type *) 0xf00058a4u)	/* Receive Data Memor20 High 2y */
#define PSI5_RDMH221	(*( PSI5_RDMH00_type *) 0xf00058acu)	/* Receive Data Memor21 High 2y */
#define PSI5_RDMH222	(*( PSI5_RDMH00_type *) 0xf00058b4u)	/* Receive Data Memor22 High 2y */
#define PSI5_RDMH223	(*( PSI5_RDMH00_type *) 0xf00058bcu)	/* Receive Data Memor23 High 2y */
#define PSI5_RDMH224	(*( PSI5_RDMH00_type *) 0xf00058c4u)	/* Receive Data Memor24 High 2y */
#define PSI5_RDMH225	(*( PSI5_RDMH00_type *) 0xf00058ccu)	/* Receive Data Memor25 High 2y */
#define PSI5_RDMH226	(*( PSI5_RDMH00_type *) 0xf00058d4u)	/* Receive Data Memor26 High 2y */
#define PSI5_RDMH227	(*( PSI5_RDMH00_type *) 0xf00058dcu)	/* Receive Data Memor27 High 2y */
#define PSI5_RDMH228	(*( PSI5_RDMH00_type *) 0xf00058e4u)	/* Receive Data Memor28 High 2y */
#define PSI5_RDMH229	(*( PSI5_RDMH00_type *) 0xf00058ecu)	/* Receive Data Memor29 High 2y */
#define PSI5_RDMH23	(*( PSI5_RDMH00_type *) 0xf000581cu)	/* Receive Data Memor3 High 2y */
#define PSI5_RDMH230	(*( PSI5_RDMH00_type *) 0xf00058f4u)	/* Receive Data Memor30 High 2y */
#define PSI5_RDMH231	(*( PSI5_RDMH00_type *) 0xf00058fcu)	/* Receive Data Memor31 High 2y */
#define PSI5_RDMH24	(*( PSI5_RDMH00_type *) 0xf0005824u)	/* Receive Data Memor4 High 2y */
#define PSI5_RDMH25	(*( PSI5_RDMH00_type *) 0xf000582cu)	/* Receive Data Memor5 High 2y */
#define PSI5_RDMH26	(*( PSI5_RDMH00_type *) 0xf0005834u)	/* Receive Data Memor6 High 2y */
#define PSI5_RDMH27	(*( PSI5_RDMH00_type *) 0xf000583cu)	/* Receive Data Memor7 High 2y */
#define PSI5_RDMH28	(*( PSI5_RDMH00_type *) 0xf0005844u)	/* Receive Data Memor8 High 2y */
#define PSI5_RDMH29	(*( PSI5_RDMH00_type *) 0xf000584cu)	/* Receive Data Memor9 High 2y */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int CRCI           : 1;	/* CRC Error Flag */
		/* const */ unsigned int CRC            : 3;	/* CRC */
		/* const */ unsigned int RD             : 28;	/* RD */
	} B;
	int I;
	unsigned int U;

} PSI5_RDML00_type;
#define PSI5_RDML00	(*( PSI5_RDML00_type *) 0xf0005600u)	/* Receive Data Memor0 Low 0y */
#define PSI5_RDML01	(*( PSI5_RDML00_type *) 0xf0005608u)	/* Receive Data Memor1 Low 0y */
#define PSI5_RDML010	(*( PSI5_RDML00_type *) 0xf0005650u)	/* Receive Data Memor10 Low 0y */
#define PSI5_RDML011	(*( PSI5_RDML00_type *) 0xf0005658u)	/* Receive Data Memor11 Low 0y */
#define PSI5_RDML012	(*( PSI5_RDML00_type *) 0xf0005660u)	/* Receive Data Memor12 Low 0y */
#define PSI5_RDML013	(*( PSI5_RDML00_type *) 0xf0005668u)	/* Receive Data Memor13 Low 0y */
#define PSI5_RDML014	(*( PSI5_RDML00_type *) 0xf0005670u)	/* Receive Data Memor14 Low 0y */
#define PSI5_RDML015	(*( PSI5_RDML00_type *) 0xf0005678u)	/* Receive Data Memor15 Low 0y */
#define PSI5_RDML016	(*( PSI5_RDML00_type *) 0xf0005680u)	/* Receive Data Memor16 Low 0y */
#define PSI5_RDML017	(*( PSI5_RDML00_type *) 0xf0005688u)	/* Receive Data Memor17 Low 0y */
#define PSI5_RDML018	(*( PSI5_RDML00_type *) 0xf0005690u)	/* Receive Data Memor18 Low 0y */
#define PSI5_RDML019	(*( PSI5_RDML00_type *) 0xf0005698u)	/* Receive Data Memor19 Low 0y */
#define PSI5_RDML02	(*( PSI5_RDML00_type *) 0xf0005610u)	/* Receive Data Memor2 Low 0y */
#define PSI5_RDML020	(*( PSI5_RDML00_type *) 0xf00056a0u)	/* Receive Data Memor20 Low 0y */
#define PSI5_RDML021	(*( PSI5_RDML00_type *) 0xf00056a8u)	/* Receive Data Memor21 Low 0y */
#define PSI5_RDML022	(*( PSI5_RDML00_type *) 0xf00056b0u)	/* Receive Data Memor22 Low 0y */
#define PSI5_RDML023	(*( PSI5_RDML00_type *) 0xf00056b8u)	/* Receive Data Memor23 Low 0y */
#define PSI5_RDML024	(*( PSI5_RDML00_type *) 0xf00056c0u)	/* Receive Data Memor24 Low 0y */
#define PSI5_RDML025	(*( PSI5_RDML00_type *) 0xf00056c8u)	/* Receive Data Memor25 Low 0y */
#define PSI5_RDML026	(*( PSI5_RDML00_type *) 0xf00056d0u)	/* Receive Data Memor26 Low 0y */
#define PSI5_RDML027	(*( PSI5_RDML00_type *) 0xf00056d8u)	/* Receive Data Memor27 Low 0y */
#define PSI5_RDML028	(*( PSI5_RDML00_type *) 0xf00056e0u)	/* Receive Data Memor28 Low 0y */
#define PSI5_RDML029	(*( PSI5_RDML00_type *) 0xf00056e8u)	/* Receive Data Memor29 Low 0y */
#define PSI5_RDML03	(*( PSI5_RDML00_type *) 0xf0005618u)	/* Receive Data Memor3 Low 0y */
#define PSI5_RDML030	(*( PSI5_RDML00_type *) 0xf00056f0u)	/* Receive Data Memor30 Low 0y */
#define PSI5_RDML031	(*( PSI5_RDML00_type *) 0xf00056f8u)	/* Receive Data Memor31 Low 0y */
#define PSI5_RDML04	(*( PSI5_RDML00_type *) 0xf0005620u)	/* Receive Data Memor4 Low 0y */
#define PSI5_RDML05	(*( PSI5_RDML00_type *) 0xf0005628u)	/* Receive Data Memor5 Low 0y */
#define PSI5_RDML06	(*( PSI5_RDML00_type *) 0xf0005630u)	/* Receive Data Memor6 Low 0y */
#define PSI5_RDML07	(*( PSI5_RDML00_type *) 0xf0005638u)	/* Receive Data Memor7 Low 0y */
#define PSI5_RDML08	(*( PSI5_RDML00_type *) 0xf0005640u)	/* Receive Data Memor8 Low 0y */
#define PSI5_RDML09	(*( PSI5_RDML00_type *) 0xf0005648u)	/* Receive Data Memor9 Low 0y */
#define PSI5_RDML10	(*( PSI5_RDML00_type *) 0xf0005700u)	/* Receive Data Memor0 Low 1y */
#define PSI5_RDML11	(*( PSI5_RDML00_type *) 0xf0005708u)	/* Receive Data Memor1 Low 1y */
#define PSI5_RDML110	(*( PSI5_RDML00_type *) 0xf0005750u)	/* Receive Data Memor10 Low 1y */
#define PSI5_RDML111	(*( PSI5_RDML00_type *) 0xf0005758u)	/* Receive Data Memor11 Low 1y */
#define PSI5_RDML112	(*( PSI5_RDML00_type *) 0xf0005760u)	/* Receive Data Memor12 Low 1y */
#define PSI5_RDML113	(*( PSI5_RDML00_type *) 0xf0005768u)	/* Receive Data Memor13 Low 1y */
#define PSI5_RDML114	(*( PSI5_RDML00_type *) 0xf0005770u)	/* Receive Data Memor14 Low 1y */
#define PSI5_RDML115	(*( PSI5_RDML00_type *) 0xf0005778u)	/* Receive Data Memor15 Low 1y */
#define PSI5_RDML116	(*( PSI5_RDML00_type *) 0xf0005780u)	/* Receive Data Memor16 Low 1y */
#define PSI5_RDML117	(*( PSI5_RDML00_type *) 0xf0005788u)	/* Receive Data Memor17 Low 1y */
#define PSI5_RDML118	(*( PSI5_RDML00_type *) 0xf0005790u)	/* Receive Data Memor18 Low 1y */
#define PSI5_RDML119	(*( PSI5_RDML00_type *) 0xf0005798u)	/* Receive Data Memor19 Low 1y */
#define PSI5_RDML12	(*( PSI5_RDML00_type *) 0xf0005710u)	/* Receive Data Memor2 Low 1y */
#define PSI5_RDML120	(*( PSI5_RDML00_type *) 0xf00057a0u)	/* Receive Data Memor20 Low 1y */
#define PSI5_RDML121	(*( PSI5_RDML00_type *) 0xf00057a8u)	/* Receive Data Memor21 Low 1y */
#define PSI5_RDML122	(*( PSI5_RDML00_type *) 0xf00057b0u)	/* Receive Data Memor22 Low 1y */
#define PSI5_RDML123	(*( PSI5_RDML00_type *) 0xf00057b8u)	/* Receive Data Memor23 Low 1y */
#define PSI5_RDML124	(*( PSI5_RDML00_type *) 0xf00057c0u)	/* Receive Data Memor24 Low 1y */
#define PSI5_RDML125	(*( PSI5_RDML00_type *) 0xf00057c8u)	/* Receive Data Memor25 Low 1y */
#define PSI5_RDML126	(*( PSI5_RDML00_type *) 0xf00057d0u)	/* Receive Data Memor26 Low 1y */
#define PSI5_RDML127	(*( PSI5_RDML00_type *) 0xf00057d8u)	/* Receive Data Memor27 Low 1y */
#define PSI5_RDML128	(*( PSI5_RDML00_type *) 0xf00057e0u)	/* Receive Data Memor28 Low 1y */
#define PSI5_RDML129	(*( PSI5_RDML00_type *) 0xf00057e8u)	/* Receive Data Memor29 Low 1y */
#define PSI5_RDML13	(*( PSI5_RDML00_type *) 0xf0005718u)	/* Receive Data Memor3 Low 1y */
#define PSI5_RDML130	(*( PSI5_RDML00_type *) 0xf00057f0u)	/* Receive Data Memor30 Low 1y */
#define PSI5_RDML131	(*( PSI5_RDML00_type *) 0xf00057f8u)	/* Receive Data Memor31 Low 1y */
#define PSI5_RDML14	(*( PSI5_RDML00_type *) 0xf0005720u)	/* Receive Data Memor4 Low 1y */
#define PSI5_RDML15	(*( PSI5_RDML00_type *) 0xf0005728u)	/* Receive Data Memor5 Low 1y */
#define PSI5_RDML16	(*( PSI5_RDML00_type *) 0xf0005730u)	/* Receive Data Memor6 Low 1y */
#define PSI5_RDML17	(*( PSI5_RDML00_type *) 0xf0005738u)	/* Receive Data Memor7 Low 1y */
#define PSI5_RDML18	(*( PSI5_RDML00_type *) 0xf0005740u)	/* Receive Data Memor8 Low 1y */
#define PSI5_RDML19	(*( PSI5_RDML00_type *) 0xf0005748u)	/* Receive Data Memor9 Low 1y */
#define PSI5_RDML20	(*( PSI5_RDML00_type *) 0xf0005800u)	/* Receive Data Memor0 Low 2y */
#define PSI5_RDML21	(*( PSI5_RDML00_type *) 0xf0005808u)	/* Receive Data Memor1 Low 2y */
#define PSI5_RDML210	(*( PSI5_RDML00_type *) 0xf0005850u)	/* Receive Data Memor10 Low 2y */
#define PSI5_RDML211	(*( PSI5_RDML00_type *) 0xf0005858u)	/* Receive Data Memor11 Low 2y */
#define PSI5_RDML212	(*( PSI5_RDML00_type *) 0xf0005860u)	/* Receive Data Memor12 Low 2y */
#define PSI5_RDML213	(*( PSI5_RDML00_type *) 0xf0005868u)	/* Receive Data Memor13 Low 2y */
#define PSI5_RDML214	(*( PSI5_RDML00_type *) 0xf0005870u)	/* Receive Data Memor14 Low 2y */
#define PSI5_RDML215	(*( PSI5_RDML00_type *) 0xf0005878u)	/* Receive Data Memor15 Low 2y */
#define PSI5_RDML216	(*( PSI5_RDML00_type *) 0xf0005880u)	/* Receive Data Memor16 Low 2y */
#define PSI5_RDML217	(*( PSI5_RDML00_type *) 0xf0005888u)	/* Receive Data Memor17 Low 2y */
#define PSI5_RDML218	(*( PSI5_RDML00_type *) 0xf0005890u)	/* Receive Data Memor18 Low 2y */
#define PSI5_RDML219	(*( PSI5_RDML00_type *) 0xf0005898u)	/* Receive Data Memor19 Low 2y */
#define PSI5_RDML22	(*( PSI5_RDML00_type *) 0xf0005810u)	/* Receive Data Memor2 Low 2y */
#define PSI5_RDML220	(*( PSI5_RDML00_type *) 0xf00058a0u)	/* Receive Data Memor20 Low 2y */
#define PSI5_RDML221	(*( PSI5_RDML00_type *) 0xf00058a8u)	/* Receive Data Memor21 Low 2y */
#define PSI5_RDML222	(*( PSI5_RDML00_type *) 0xf00058b0u)	/* Receive Data Memor22 Low 2y */
#define PSI5_RDML223	(*( PSI5_RDML00_type *) 0xf00058b8u)	/* Receive Data Memor23 Low 2y */
#define PSI5_RDML224	(*( PSI5_RDML00_type *) 0xf00058c0u)	/* Receive Data Memor24 Low 2y */
#define PSI5_RDML225	(*( PSI5_RDML00_type *) 0xf00058c8u)	/* Receive Data Memor25 Low 2y */
#define PSI5_RDML226	(*( PSI5_RDML00_type *) 0xf00058d0u)	/* Receive Data Memor26 Low 2y */
#define PSI5_RDML227	(*( PSI5_RDML00_type *) 0xf00058d8u)	/* Receive Data Memor27 Low 2y */
#define PSI5_RDML228	(*( PSI5_RDML00_type *) 0xf00058e0u)	/* Receive Data Memor28 Low 2y */
#define PSI5_RDML229	(*( PSI5_RDML00_type *) 0xf00058e8u)	/* Receive Data Memor29 Low 2y */
#define PSI5_RDML23	(*( PSI5_RDML00_type *) 0xf0005818u)	/* Receive Data Memor3 Low 2y */
#define PSI5_RDML230	(*( PSI5_RDML00_type *) 0xf00058f0u)	/* Receive Data Memor30 Low 2y */
#define PSI5_RDML231	(*( PSI5_RDML00_type *) 0xf00058f8u)	/* Receive Data Memor31 Low 2y */
#define PSI5_RDML24	(*( PSI5_RDML00_type *) 0xf0005820u)	/* Receive Data Memor4 Low 2y */
#define PSI5_RDML25	(*( PSI5_RDML00_type *) 0xf0005828u)	/* Receive Data Memor5 Low 2y */
#define PSI5_RDML26	(*( PSI5_RDML00_type *) 0xf0005830u)	/* Receive Data Memor6 Low 2y */
#define PSI5_RDML27	(*( PSI5_RDML00_type *) 0xf0005838u)	/* Receive Data Memor7 Low 2y */
#define PSI5_RDML28	(*( PSI5_RDML00_type *) 0xf0005840u)	/* Receive Data Memor8 Low 2y */
#define PSI5_RDML29	(*( PSI5_RDML00_type *) 0xf0005848u)	/* Receive Data Memor9 Low 2y */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int TS             : 24;	/* Time Stamp */
		/* const */ unsigned int SC             : 3;	/* Slot Counter */
		/* const */ unsigned int TEI            : 1;	/* Time Slot Error Flag */
		/* const */ unsigned int NBI            : 1;	/* Number of bits Error Flag */
		/* const */ unsigned int MEI            : 1;	/* Error in Message Bits Flag */
		/* const */ unsigned int NFI            : 1;	/* No Frame Received Flag */
		/* const */ unsigned int RBI            : 1;	/* Receive Buffer Overflow Flag */
	} B;
	int I;
	unsigned int U;

} PSI5_RDRH0_type;
#define PSI5_RDRH0	(*( PSI5_RDRH0_type *) 0xf0005084u)	/* Receive Data Register High 0 */
#define PSI5_RDRH1	(*( PSI5_RDRH0_type *) 0xf0005114u)	/* Receive Data Register High 1 */
#define PSI5_RDRH2	(*( PSI5_RDRH0_type *) 0xf00051a4u)	/* Receive Data Register High 2 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int CRCI           : 1;	/* CRC Error Flag */
		/* const */ unsigned int CRC            : 3;	/* CRC */
		/* const */ unsigned int RD             : 28;	/* RD */
	} B;
	int I;
	unsigned int U;

} PSI5_RDRL0_type;
#define PSI5_RDRL0	(*( PSI5_RDRL0_type *) 0xf0005080u)	/* Receive Data Register Low 0 */
#define PSI5_RDRL1	(*( PSI5_RDRL0_type *) 0xf0005110u)	/* Receive Data Register Low 1 */
#define PSI5_RDRL2	(*( PSI5_RDRL0_type *) 0xf00051a0u)	/* Receive Data Register Low 2 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int REP            : 6;	/* FIFO Read Pointer */
		unsigned int                : 2;
		/* const */ unsigned int WRP            : 6;	/* FIFO/Ring Buffer Write Pointer */
		unsigned int                : 2;
		unsigned int FWL            : 5;	/* FIFO Warning Level */
		unsigned int                : 8;
		/* const */ unsigned int WRAP           : 1;	/* Write Pointer WRAP Indicator */
		/* const */ unsigned int FRQ            : 1;	/* Flush Request */
		unsigned int FLU            : 1;	/* Flush */
	} B;
	int I;
	unsigned int U;

} PSI5_RFC0_type;
#define PSI5_RFC0	(*( PSI5_RFC0_type *) 0xf00053e4u)	/* Receive FIFO Control Register 0 */
#define PSI5_RFC1	(*( PSI5_RFC0_type *) 0xf00053e8u)	/* Receive FIFO Control Register 1 */
#define PSI5_RFC2	(*( PSI5_RFC0_type *) 0xf00053ecu)	/* Receive FIFO Control Register 2 */

typedef volatile union
{
	struct
	{ 
		unsigned int RMI0           : 1;	/* Clear RMI Flag of Buffer 0 */
		unsigned int RMI1           : 1;	/* Clear RMI Flag of Buffer 1 */
		unsigned int RMI2           : 1;	/* Clear RMI Flag of Buffer 2 */
		unsigned int RMI3           : 1;	/* Clear RMI Flag of Buffer 3 */
		unsigned int RMI4           : 1;	/* Clear RMI Flag of Buffer 4 */
		unsigned int RMI5           : 1;	/* Clear RMI Flag of Buffer 5 */
		unsigned int RMI6           : 1;	/* Clear RMI Flag of Buffer 6 */
		unsigned int RMI7           : 1;	/* Clear RMI Flag of Buffer 7 */
		unsigned int RMI8           : 1;	/* Clear RMI Flag of Buffer 8 */
		unsigned int RMI9           : 1;	/* Clear RMI Flag of Buffer 9 */
		unsigned int RMI10          : 1;	/* Clear RMI Flag of Buffer 10 */
		unsigned int RMI11          : 1;	/* Clear RMI Flag of Buffer 11 */
		unsigned int RMI12          : 1;	/* Clear RMI Flag of Buffer 12 */
		unsigned int RMI13          : 1;	/* Clear RMI Flag of Buffer 13 */
		unsigned int RMI14          : 1;	/* Clear RMI Flag of Buffer 14 */
		unsigned int RMI15          : 1;	/* Clear RMI Flag of Buffer 15 */
		unsigned int RMI16          : 1;	/* Clear RMI Flag of Buffer 16 */
		unsigned int RMI17          : 1;	/* Clear RMI Flag of Buffer 17 */
		unsigned int RMI18          : 1;	/* Clear RMI Flag of Buffer 18 */
		unsigned int RMI19          : 1;	/* Clear RMI Flag of Buffer 19 */
		unsigned int RMI20          : 1;	/* Clear RMI Flag of Buffer 20 */
		unsigned int RMI21          : 1;	/* Clear RMI Flag of Buffer 21 */
		unsigned int RMI22          : 1;	/* Clear RMI Flag of Buffer 22 */
		unsigned int RMI23          : 1;	/* Clear RMI Flag of Buffer 23 */
		unsigned int RMI24          : 1;	/* Clear RMI Flag of Buffer 24 */
		unsigned int RMI25          : 1;	/* Clear RMI Flag of Buffer 25 */
		unsigned int RMI26          : 1;	/* Clear RMI Flag of Buffer 26 */
		unsigned int RMI27          : 1;	/* Clear RMI Flag of Buffer 27 */
		unsigned int RMI28          : 1;	/* Clear RMI Flag of Buffer 28 */
		unsigned int RMI29          : 1;	/* Clear RMI Flag of Buffer 29 */
		unsigned int RMI30          : 1;	/* Clear RMI Flag of Buffer 30 */
		unsigned int RMI31          : 1;	/* Clear RMI Flag of Buffer 31 */
	} B;
	int I;
	unsigned int U;

} PSI5_RMICLR0_type;
#define PSI5_RMICLR0	(*( PSI5_RMICLR0_type *) 0xf0005560u)	/* RMIOV0 Clear Register */
#define PSI5_RMICLR1	(*( PSI5_RMICLR0_type *) 0xf0005564u)	/* RMIOV1 Clear Register */
#define PSI5_RMICLR2	(*( PSI5_RMICLR0_type *) 0xf0005568u)	/* RMIOV2 Clear Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int RMI0           : 1;	/* RMI Flag of Buffer 0 */
		/* const */ unsigned int RMI1           : 1;	/* RMI Flag of Buffer 1 */
		/* const */ unsigned int RMI2           : 1;	/* RMI Flag of Buffer 2 */
		/* const */ unsigned int RMI3           : 1;	/* RMI Flag of Buffer 3 */
		/* const */ unsigned int RMI4           : 1;	/* RMI Flag of Buffer 4 */
		/* const */ unsigned int RMI5           : 1;	/* RMI Flag of Buffer 5 */
		/* const */ unsigned int RMI6           : 1;	/* RMI Flag of Buffer 6 */
		/* const */ unsigned int RMI7           : 1;	/* RMI Flag of Buffer 7 */
		/* const */ unsigned int RMI8           : 1;	/* RMI Flag of Buffer 8 */
		/* const */ unsigned int RMI9           : 1;	/* RMI Flag of Buffer 9 */
		/* const */ unsigned int RMI10          : 1;	/* RMI Flag of Buffer 10 */
		/* const */ unsigned int RMI11          : 1;	/* RMI Flag of Buffer 11 */
		/* const */ unsigned int RMI12          : 1;	/* RMI Flag of Buffer 12 */
		/* const */ unsigned int RMI13          : 1;	/* RMI Flag of Buffer 13 */
		/* const */ unsigned int RMI14          : 1;	/* RMI Flag of Buffer 14 */
		/* const */ unsigned int RMI15          : 1;	/* RMI Flag of Buffer 15 */
		/* const */ unsigned int RMI16          : 1;	/* RMI Flag of Buffer 16 */
		/* const */ unsigned int RMI17          : 1;	/* RMI Flag of Buffer 17 */
		/* const */ unsigned int RMI18          : 1;	/* RMI Flag of Buffer 18 */
		/* const */ unsigned int RMI19          : 1;	/* RMI Flag of Buffer 19 */
		/* const */ unsigned int RMI20          : 1;	/* RMI Flag of Buffer 20 */
		/* const */ unsigned int RMI21          : 1;	/* RMI Flag of Buffer 21 */
		/* const */ unsigned int RMI22          : 1;	/* RMI Flag of Buffer 22 */
		/* const */ unsigned int RMI23          : 1;	/* RMI Flag of Buffer 23 */
		/* const */ unsigned int RMI24          : 1;	/* RMI Flag of Buffer 24 */
		/* const */ unsigned int RMI25          : 1;	/* RMI Flag of Buffer 25 */
		/* const */ unsigned int RMI26          : 1;	/* RMI Flag of Buffer 26 */
		/* const */ unsigned int RMI27          : 1;	/* RMI Flag of Buffer 27 */
		/* const */ unsigned int RMI28          : 1;	/* RMI Flag of Buffer 28 */
		/* const */ unsigned int RMI29          : 1;	/* RMI Flag of Buffer 29 */
		/* const */ unsigned int RMI30          : 1;	/* RMI Flag of Buffer 30 */
		/* const */ unsigned int RMI31          : 1;	/* RMI Flag of Buffer 31 */
	} B;
	int I;
	unsigned int U;

} PSI5_RMIOV0_type;
#define PSI5_RMIOV0	(*( PSI5_RMIOV0_type *) 0xf0005420u)	/* RMI Overview Register */
#define PSI5_RMIOV1	(*( PSI5_RMIOV0_type *) 0xf0005424u)	/* RMI Overview Register */
#define PSI5_RMIOV2	(*( PSI5_RMIOV0_type *) 0xf0005428u)	/* RMI Overview Register */

typedef volatile union
{
	struct
	{ 
		unsigned int RMI0           : 1;	/* Set RMI Flag of Buffer 0 */
		unsigned int RMI1           : 1;	/* Set RMI Flag of Buffer 1 */
		unsigned int RMI2           : 1;	/* Set RMI Flag of Buffer 2 */
		unsigned int RMI3           : 1;	/* Set RMI Flag of Buffer 3 */
		unsigned int RMI4           : 1;	/* Set RMI Flag of Buffer 4 */
		unsigned int RMI5           : 1;	/* Set RMI Flag of Buffer 5 */
		unsigned int RMI6           : 1;	/* Set RMI Flag of Buffer 6 */
		unsigned int RMI7           : 1;	/* Set RMI Flag of Buffer 7 */
		unsigned int RMI8           : 1;	/* Set RMI Flag of Buffer 8 */
		unsigned int RMI9           : 1;	/* Set RMI Flag of Buffer 9 */
		unsigned int RMI10          : 1;	/* Set RMI Flag of Buffer 10 */
		unsigned int RMI11          : 1;	/* Set RMI Flag of Buffer 11 */
		unsigned int RMI12          : 1;	/* Set RMI Flag of Buffer 12 */
		unsigned int RMI13          : 1;	/* Set RMI Flag of Buffer 13 */
		unsigned int RMI14          : 1;	/* Set RMI Flag of Buffer 14 */
		unsigned int RMI15          : 1;	/* Set RMI Flag of Buffer 15 */
		unsigned int RMI16          : 1;	/* Set RMI Flag of Buffer 16 */
		unsigned int RMI17          : 1;	/* Set RMI Flag of Buffer 17 */
		unsigned int RMI18          : 1;	/* Set RMI Flag of Buffer 18 */
		unsigned int RMI19          : 1;	/* Set RMI Flag of Buffer 19 */
		unsigned int RMI20          : 1;	/* Set RMI Flag of Buffer 20 */
		unsigned int RMI21          : 1;	/* Set RMI Flag of Buffer 21 */
		unsigned int RMI22          : 1;	/* Set RMI Flag of Buffer 22 */
		unsigned int RMI23          : 1;	/* Set RMI Flag of Buffer 23 */
		unsigned int RMI24          : 1;	/* Set RMI Flag of Buffer 24 */
		unsigned int RMI25          : 1;	/* Set RMI Flag of Buffer 25 */
		unsigned int RMI26          : 1;	/* Set RMI Flag of Buffer 26 */
		unsigned int RMI27          : 1;	/* Set RMI Flag of Buffer 27 */
		unsigned int RMI28          : 1;	/* Set RMI Flag of Buffer 28 */
		unsigned int RMI29          : 1;	/* Set RMI Flag of Buffer 29 */
		unsigned int RMI30          : 1;	/* Set RMI Flag of Buffer 30 */
		unsigned int RMI31          : 1;	/* Set RMI Flag of Buffer 31 */
	} B;
	int I;
	unsigned int U;

} PSI5_RMISET0_type;
#define PSI5_RMISET0	(*( PSI5_RMISET0_type *) 0xf00054c0u)	/* RMIOV0 Set Register */
#define PSI5_RMISET1	(*( PSI5_RMISET0_type *) 0xf00054c4u)	/* RMIOV1 Set Register */
#define PSI5_RMISET2	(*( PSI5_RMISET0_type *) 0xf00054c8u)	/* RMIOV2 Set Register */

typedef volatile union
{
	struct
	{ 
		unsigned int RSI0           : 1;	/* Clear RSI Flag of Buffer 0 */
		unsigned int RSI1           : 1;	/* Clear RSI Flag of Buffer 1 */
		unsigned int RSI2           : 1;	/* Clear RSI Flag of Buffer 2 */
		unsigned int RSI3           : 1;	/* Clear RSI Flag of Buffer 3 */
		unsigned int RSI4           : 1;	/* Clear RSI Flag of Buffer 4 */
		unsigned int RSI5           : 1;	/* Clear RSI Flag of Buffer 5 */
		unsigned int RSI6           : 1;	/* Clear RSI Flag of Buffer 6 */
		unsigned int RSI7           : 1;	/* Clear RSI Flag of Buffer 7 */
		unsigned int RSI8           : 1;	/* Clear RSI Flag of Buffer 8 */
		unsigned int RSI9           : 1;	/* Clear RSI Flag of Buffer 9 */
		unsigned int RSI10          : 1;	/* Clear RSI Flag of Buffer 10 */
		unsigned int RSI11          : 1;	/* Clear RSI Flag of Buffer 11 */
		unsigned int RSI12          : 1;	/* Clear RSI Flag of Buffer 12 */
		unsigned int RSI13          : 1;	/* Clear RSI Flag of Buffer 13 */
		unsigned int RSI14          : 1;	/* Clear RSI Flag of Buffer 14 */
		unsigned int RSI15          : 1;	/* Clear RSI Flag of Buffer 15 */
		unsigned int RSI16          : 1;	/* Clear RSI Flag of Buffer 16 */
		unsigned int RSI17          : 1;	/* Clear RSI Flag of Buffer 17 */
		unsigned int RSI18          : 1;	/* Clear RSI Flag of Buffer 18 */
		unsigned int RSI19          : 1;	/* Clear RSI Flag of Buffer 19 */
		unsigned int RSI20          : 1;	/* Clear RSI Flag of Buffer 20 */
		unsigned int RSI21          : 1;	/* Clear RSI Flag of Buffer 21 */
		unsigned int RSI22          : 1;	/* Clear RSI Flag of Buffer 22 */
		unsigned int RSI23          : 1;	/* Clear RSI Flag of Buffer 23 */
		unsigned int RSI24          : 1;	/* Clear RSI Flag of Buffer 24 */
		unsigned int RSI25          : 1;	/* Clear RSI Flag of Buffer 25 */
		unsigned int RSI26          : 1;	/* Clear RSI Flag of Buffer 26 */
		unsigned int RSI27          : 1;	/* Clear RSI Flag of Buffer 27 */
		unsigned int RSI28          : 1;	/* Clear RSI Flag of Buffer 28 */
		unsigned int RSI29          : 1;	/* Clear RSI Flag of Buffer 29 */
		unsigned int RSI30          : 1;	/* Clear RSI Flag of Buffer 30 */
		unsigned int RSI31          : 1;	/* Clear RSI Flag of Buffer 31 */
	} B;
	int I;
	unsigned int U;

} PSI5_RSICLR0_type;
#define PSI5_RSICLR0	(*( PSI5_RSICLR0_type *) 0xf000554cu)	/* RSIOV0 Clear Register */
#define PSI5_RSICLR1	(*( PSI5_RSICLR0_type *) 0xf0005550u)	/* RSIOV1 Clear Register */
#define PSI5_RSICLR2	(*( PSI5_RSICLR0_type *) 0xf0005554u)	/* RSIOV2 Clear Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int RSI0           : 1;	/* RSI Flag of Buffer 0 */
		/* const */ unsigned int RSI1           : 1;	/* RSI Flag of Buffer 1 */
		/* const */ unsigned int RSI2           : 1;	/* RSI Flag of Buffer 2 */
		/* const */ unsigned int RSI3           : 1;	/* RSI Flag of Buffer 3 */
		/* const */ unsigned int RSI4           : 1;	/* RSI Flag of Buffer 4 */
		/* const */ unsigned int RSI5           : 1;	/* RSI Flag of Buffer 5 */
		/* const */ unsigned int RSI6           : 1;	/* RSI Flag of Buffer 6 */
		/* const */ unsigned int RSI7           : 1;	/* RSI Flag of Buffer 7 */
		/* const */ unsigned int RSI8           : 1;	/* RSI Flag of Buffer 8 */
		/* const */ unsigned int RSI9           : 1;	/* RSI Flag of Buffer 9 */
		/* const */ unsigned int RSI10          : 1;	/* RSI Flag of Buffer 10 */
		/* const */ unsigned int RSI11          : 1;	/* RSI Flag of Buffer 11 */
		/* const */ unsigned int RSI12          : 1;	/* RSI Flag of Buffer 12 */
		/* const */ unsigned int RSI13          : 1;	/* RSI Flag of Buffer 13 */
		/* const */ unsigned int RSI14          : 1;	/* RSI Flag of Buffer 14 */
		/* const */ unsigned int RSI15          : 1;	/* RSI Flag of Buffer 15 */
		/* const */ unsigned int RSI16          : 1;	/* RSI Flag of Buffer 16 */
		/* const */ unsigned int RSI17          : 1;	/* RSI Flag of Buffer 17 */
		/* const */ unsigned int RSI18          : 1;	/* RSI Flag of Buffer 18 */
		/* const */ unsigned int RSI19          : 1;	/* RSI Flag of Buffer 19 */
		/* const */ unsigned int RSI20          : 1;	/* RSI Flag of Buffer 20 */
		/* const */ unsigned int RSI21          : 1;	/* RSI Flag of Buffer 21 */
		/* const */ unsigned int RSI22          : 1;	/* RSI Flag of Buffer 22 */
		/* const */ unsigned int RSI23          : 1;	/* RSI Flag of Buffer 23 */
		/* const */ unsigned int RSI24          : 1;	/* RSI Flag of Buffer 24 */
		/* const */ unsigned int RSI25          : 1;	/* RSI Flag of Buffer 25 */
		/* const */ unsigned int RSI26          : 1;	/* RSI Flag of Buffer 26 */
		/* const */ unsigned int RSI27          : 1;	/* RSI Flag of Buffer 27 */
		/* const */ unsigned int RSI28          : 1;	/* RSI Flag of Buffer 28 */
		/* const */ unsigned int RSI29          : 1;	/* RSI Flag of Buffer 29 */
		/* const */ unsigned int RSI30          : 1;	/* RSI Flag of Buffer 30 */
		/* const */ unsigned int RSI31          : 1;	/* RSI Flag of Buffer 31 */
	} B;
	int I;
	unsigned int U;

} PSI5_RSIOV0_type;
#define PSI5_RSIOV0	(*( PSI5_RSIOV0_type *) 0xf000540cu)	/* RSI Overview Register */
#define PSI5_RSIOV1	(*( PSI5_RSIOV0_type *) 0xf0005410u)	/* RSI Overview Register */
#define PSI5_RSIOV2	(*( PSI5_RSIOV0_type *) 0xf0005414u)	/* RSI Overview Register */

typedef volatile union
{
	struct
	{ 
		unsigned int RSI0           : 1;	/* Set RSI Flag of Buffer 0 */
		unsigned int RSI1           : 1;	/* Set RSI Flag of Buffer 1 */
		unsigned int RSI2           : 1;	/* Set RSI Flag of Buffer 2 */
		unsigned int RSI3           : 1;	/* Set RSI Flag of Buffer 3 */
		unsigned int RSI4           : 1;	/* Set RSI Flag of Buffer 4 */
		unsigned int RSI5           : 1;	/* Set RSI Flag of Buffer 5 */
		unsigned int RSI6           : 1;	/* Set RSI Flag of Buffer 6 */
		unsigned int RSI7           : 1;	/* Set RSI Flag of Buffer 7 */
		unsigned int RSI8           : 1;	/* Set RSI Flag of Buffer 8 */
		unsigned int RSI9           : 1;	/* Set RSI Flag of Buffer 9 */
		unsigned int RSI10          : 1;	/* Set RSI Flag of Buffer 10 */
		unsigned int RSI11          : 1;	/* Set RSI Flag of Buffer 11 */
		unsigned int RSI12          : 1;	/* Set RSI Flag of Buffer 12 */
		unsigned int RSI13          : 1;	/* Set RSI Flag of Buffer 13 */
		unsigned int RSI14          : 1;	/* Set RSI Flag of Buffer 14 */
		unsigned int RSI15          : 1;	/* Set RSI Flag of Buffer 15 */
		unsigned int RSI16          : 1;	/* Set RSI Flag of Buffer 16 */
		unsigned int RSI17          : 1;	/* Set RSI Flag of Buffer 17 */
		unsigned int RSI18          : 1;	/* Set RSI Flag of Buffer 18 */
		unsigned int RSI19          : 1;	/* Set RSI Flag of Buffer 19 */
		unsigned int RSI20          : 1;	/* Set RSI Flag of Buffer 20 */
		unsigned int RSI21          : 1;	/* Set RSI Flag of Buffer 21 */
		unsigned int RSI22          : 1;	/* Set RSI Flag of Buffer 22 */
		unsigned int RSI23          : 1;	/* Set RSI Flag of Buffer 23 */
		unsigned int RSI24          : 1;	/* Set RSI Flag of Buffer 24 */
		unsigned int RSI25          : 1;	/* Set RSI Flag of Buffer 25 */
		unsigned int RSI26          : 1;	/* Set RSI Flag of Buffer 26 */
		unsigned int RSI27          : 1;	/* Set RSI Flag of Buffer 27 */
		unsigned int RSI28          : 1;	/* Set RSI Flag of Buffer 28 */
		unsigned int RSI29          : 1;	/* Set RSI Flag of Buffer 29 */
		unsigned int RSI30          : 1;	/* Set RSI Flag of Buffer 30 */
		unsigned int RSI31          : 1;	/* Set RSI Flag of Buffer 31 */
	} B;
	int I;
	unsigned int U;

} PSI5_RSISET0_type;
#define PSI5_RSISET0	(*( PSI5_RSISET0_type *) 0xf00054acu)	/* RSIOV0 Set Register */
#define PSI5_RSISET1	(*( PSI5_RSISET0_type *) 0xf00054b0u)	/* RSIOV1 Set Register */
#define PSI5_RSISET2	(*( PSI5_RSISET0_type *) 0xf00054b4u)	/* RSIOV2 Set Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int CRC            : 3;	/* CRC */
		/* const */ unsigned int                : 5;
		/* const */ unsigned int MSG            : 2;	/* Messaging Bits */
		/* const */ unsigned int                : 22;
	} B;
	int I;
	unsigned int U;

} PSI5_RSR0_type;
#define PSI5_RSR0	(*( PSI5_RSR0_type *) 0xf000505cu)	/* Receive Status Register 0 */
#define PSI5_RSR1	(*( PSI5_RSR0_type *) 0xf00050ecu)	/* Receive Status Register 1 */
#define PSI5_RSR2	(*( PSI5_RSR0_type *) 0xf000517cu)	/* Receive Status Register 2 */

typedef volatile union
{
	struct
	{ 
		unsigned int PLL            : 6;	/* Pay Load Length of Registers SDRL/H */
		unsigned int EPS            : 1;	/* Enhanced Protocol Selection */
		unsigned int BSC            : 1;	/* Bit Stuffing Control */
		unsigned int SSL            : 6;	/* Pay Load Length of Registers SSRL/H */
		unsigned int FLUS           : 1;	/* Flush SSRH/Lx */
		unsigned int FLUO           : 1;	/* Flush SORH/Lx */
		unsigned int SOL            : 6;	/* Pay Load Length of Registers SORL/H */
		unsigned int CRC            : 1;	/* CRC Generation Control */
		unsigned int STA            : 1;	/* Start Sequence Generation Control */
		unsigned int INH            : 1;	/* Inhibit Transfer */
		unsigned int GO             : 1;	/* Release prepared Send data */
		/* const */ unsigned int TPF            : 1;	/* Transmit Preparation Flag */
		/* const */ unsigned int TSF            : 1;	/* Transmit Shift Flag */
		/* const */ unsigned int TOF            : 1;	/* Transmit Output Flag */
		unsigned int                : 2;
		/* const */ unsigned int TRQ            : 1;	/* Transfer Request in Progress */
	} B;
	int I;
	unsigned int U;

} PSI5_SCR0_type;
#define PSI5_SCR0	(*( PSI5_SCR0_type *) 0xf0005090u)	/* Send Control Register 0 */
#define PSI5_SCR1	(*( PSI5_SCR0_type *) 0xf0005120u)	/* Send Control Register 1 */
#define PSI5_SCR2	(*( PSI5_SCR0_type *) 0xf00051b0u)	/* Send Control Register 2 */

typedef volatile union
{
	struct
	{ 
		unsigned int SD32           : 1;	/* SD32 */
		unsigned int SD33           : 1;	/* SD33 */
		unsigned int SD34           : 1;	/* SD34 */
		unsigned int SD35           : 1;	/* SD35 */
		unsigned int SD36           : 1;	/* SD36 */
		unsigned int SD37           : 1;	/* SD37 */
		unsigned int SD38           : 1;	/* SD38 */
		unsigned int SD39           : 1;	/* SD39 */
		unsigned int SD40           : 1;	/* SD40 */
		unsigned int SD41           : 1;	/* SD41 */
		unsigned int SD42           : 1;	/* SD42 */
		unsigned int SD43           : 1;	/* SD43 */
		unsigned int SD44           : 1;	/* SD44 */
		unsigned int SD45           : 1;	/* SD45 */
		unsigned int SD46           : 1;	/* SD46 */
		unsigned int SD47           : 1;	/* SD47 */
		unsigned int SD48           : 1;	/* SD48 */
		unsigned int SD49           : 1;	/* SD49 */
		unsigned int SD50           : 1;	/* SD50 */
		unsigned int SD51           : 1;	/* SD51 */
		unsigned int SD52           : 1;	/* SD52 */
		unsigned int SD53           : 1;	/* SD53 */
		unsigned int SD54           : 1;	/* SD54 */
		unsigned int SD55           : 1;	/* SD55 */
		unsigned int SD56           : 1;	/* SD56 */
		unsigned int SD57           : 1;	/* SD57 */
		unsigned int SD58           : 1;	/* SD58 */
		unsigned int SD59           : 1;	/* SD59 */
		unsigned int SD60           : 1;	/* SD60 */
		unsigned int SD61           : 1;	/* SD61 */
		unsigned int SD62           : 1;	/* SD62 */
		unsigned int SD63           : 1;	/* SD63 */
	} B;
	int I;
	unsigned int U;

} PSI5_SDRH0_type;
#define PSI5_SDRH0	(*( PSI5_SDRH0_type *) 0xf0005098u)	/* Send Data Register High 0 */
#define PSI5_SDRH1	(*( PSI5_SDRH0_type *) 0xf0005128u)	/* Send Data Register High 1 */
#define PSI5_SDRH2	(*( PSI5_SDRH0_type *) 0xf00051b8u)	/* Send Data Register High 2 */
#define PSI5_SORH0	(*( PSI5_SDRH0_type *) 0xf00050a8u)	/* Send Output Register High 0 */
#define PSI5_SORH1	(*( PSI5_SDRH0_type *) 0xf0005138u)	/* Send Output Register High 1 */
#define PSI5_SORH2	(*( PSI5_SDRH0_type *) 0xf00051c8u)	/* Send Output Register High 2 */
#define PSI5_SSRH0	(*( PSI5_SDRH0_type *) 0xf00050a0u)	/* Send Shift Register High 0 */
#define PSI5_SSRH1	(*( PSI5_SDRH0_type *) 0xf0005130u)	/* Send Shift Register High 1 */
#define PSI5_SSRH2	(*( PSI5_SDRH0_type *) 0xf00051c0u)	/* Send Shift Register High 2 */

typedef volatile union
{
	struct
	{ 
		unsigned int SD0            : 1;	/* SD0 */
		unsigned int SD1            : 1;	/* SD1 */
		unsigned int SD2            : 1;	/* SD2 */
		unsigned int SD3            : 1;	/* SD3 */
		unsigned int SD4            : 1;	/* SD4 */
		unsigned int SD5            : 1;	/* SD5 */
		unsigned int SD6            : 1;	/* SD6 */
		unsigned int SD7            : 1;	/* SD7 */
		unsigned int SD8            : 1;	/* SD8 */
		unsigned int SD9            : 1;	/* SD9 */
		unsigned int SD10           : 1;	/* SD10 */
		unsigned int SD11           : 1;	/* SD11 */
		unsigned int SD12           : 1;	/* SD12 */
		unsigned int SD13           : 1;	/* SD13 */
		unsigned int SD14           : 1;	/* SD14 */
		unsigned int SD15           : 1;	/* SD15 */
		unsigned int SD16           : 1;	/* SD16 */
		unsigned int SD17           : 1;	/* SD17 */
		unsigned int SD18           : 1;	/* SD18 */
		unsigned int SD19           : 1;	/* SD19 */
		unsigned int SD20           : 1;	/* SD20 */
		unsigned int SD21           : 1;	/* SD21 */
		unsigned int SD22           : 1;	/* SD22 */
		unsigned int SD23           : 1;	/* SD23 */
		unsigned int SD24           : 1;	/* SD24 */
		unsigned int SD25           : 1;	/* SD25 */
		unsigned int SD26           : 1;	/* SD26 */
		unsigned int SD27           : 1;	/* SD27 */
		unsigned int SD28           : 1;	/* SD28 */
		unsigned int SD29           : 1;	/* SD29 */
		unsigned int SD30           : 1;	/* SD30 */
		unsigned int SD31           : 1;	/* SD31 */
	} B;
	int I;
	unsigned int U;

} PSI5_SDRL0_type;
#define PSI5_SDRL0	(*( PSI5_SDRL0_type *) 0xf0005094u)	/* Send Data Register Low 0 */
#define PSI5_SDRL1	(*( PSI5_SDRL0_type *) 0xf0005124u)	/* Send Data Register Low 1 */
#define PSI5_SDRL2	(*( PSI5_SDRL0_type *) 0xf00051b4u)	/* Send Data Register Low 2 */
#define PSI5_SORL0	(*( PSI5_SDRL0_type *) 0xf00050a4u)	/* Send Output Register Low 0 */
#define PSI5_SORL1	(*( PSI5_SDRL0_type *) 0xf0005134u)	/* Send Output Register Low 1 */
#define PSI5_SORL2	(*( PSI5_SDRL0_type *) 0xf00051c4u)	/* Send Output Register Low 2 */
#define PSI5_SSRL0	(*( PSI5_SDRL0_type *) 0xf000509cu)	/* Send Shift Register Low 0 */
#define PSI5_SSRL1	(*( PSI5_SDRL0_type *) 0xf000512cu)	/* Send Shift Register Low 1 */
#define PSI5_SSRL2	(*( PSI5_SDRL0_type *) 0xf00051bcu)	/* Send Shift Register Low 2 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int SD             : 16;	/* Serial Data */
		/* const */ unsigned int MID            : 8;	/* Message ID */
		/* const */ unsigned int SCRC           : 6;	/* SCRC */
		/* const */ unsigned int SCRI           : 1;	/* CRC of Serial Message failed Interrupt Flag. */
		/* const */ unsigned int CON            : 1;	/* Configuration bit */
	} B;
	int I;
	unsigned int U;

} PSI5_SDS00_type;
#define PSI5_SDS00	(*( PSI5_SDS00_type *) 0xf0005060u)	/* Serial Data and Status Register 00 */
#define PSI5_SDS01	(*( PSI5_SDS00_type *) 0xf0005064u)	/* Serial Data and Status Register 01 */
#define PSI5_SDS02	(*( PSI5_SDS00_type *) 0xf0005068u)	/* Serial Data and Status Register 02 */
#define PSI5_SDS03	(*( PSI5_SDS00_type *) 0xf000506cu)	/* Serial Data and Status Register 03 */
#define PSI5_SDS04	(*( PSI5_SDS00_type *) 0xf0005070u)	/* Serial Data and Status Register 04 */
#define PSI5_SDS05	(*( PSI5_SDS00_type *) 0xf0005074u)	/* Serial Data and Status Register 05 */
#define PSI5_SDS10	(*( PSI5_SDS00_type *) 0xf00050f0u)	/* Serial Data and Status Register 10 */
#define PSI5_SDS11	(*( PSI5_SDS00_type *) 0xf00050f4u)	/* Serial Data and Status Register 11 */
#define PSI5_SDS12	(*( PSI5_SDS00_type *) 0xf00050f8u)	/* Serial Data and Status Register 12 */
#define PSI5_SDS13	(*( PSI5_SDS00_type *) 0xf00050fcu)	/* Serial Data and Status Register 13 */
#define PSI5_SDS14	(*( PSI5_SDS00_type *) 0xf0005100u)	/* Serial Data and Status Register 14 */
#define PSI5_SDS15	(*( PSI5_SDS00_type *) 0xf0005104u)	/* Serial Data and Status Register 15 */
#define PSI5_SDS20	(*( PSI5_SDS00_type *) 0xf0005180u)	/* Serial Data and Status Register 20 */
#define PSI5_SDS21	(*( PSI5_SDS00_type *) 0xf0005184u)	/* Serial Data and Status Register 21 */
#define PSI5_SDS22	(*( PSI5_SDS00_type *) 0xf0005188u)	/* Serial Data and Status Register 22 */
#define PSI5_SDS23	(*( PSI5_SDS00_type *) 0xf000518cu)	/* Serial Data and Status Register 23 */
#define PSI5_SDS24	(*( PSI5_SDS00_type *) 0xf0005190u)	/* Serial Data and Status Register 24 */
#define PSI5_SDS25	(*( PSI5_SDS00_type *) 0xf0005194u)	/* Serial Data and Status Register 25 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int TS             : 24;	/* Time Stamp */
		/* const */ unsigned int                : 8;
	} B;
	int I;
	unsigned int U;

} PSI5_SFTSC0_type;
#define PSI5_SFTSC0	(*( PSI5_SFTSC0_type *) 0xf000507cu)	/* SOF TS Capture Register SFTSC0 */
#define PSI5_SFTSC1	(*( PSI5_SFTSC0_type *) 0xf000510cu)	/* SOF TS Capture Register SFTSC1 */
#define PSI5_SFTSC2	(*( PSI5_SFTSC0_type *) 0xf000519cu)	/* SOF TS Capture Register SFTSC2 */
#define PSI5_SPTSC0	(*( PSI5_SFTSC0_type *) 0xf0005078u)	/* SOP TS Capture Register SPTSC0 */
#define PSI5_SPTSC1	(*( PSI5_SFTSC0_type *) 0xf0005108u)	/* SOP TS Capture Register SPTSC1 */
#define PSI5_SPTSC2	(*( PSI5_SFTSC0_type *) 0xf0005198u)	/* SOP TS Capture Register SPTSC2 */

typedef volatile union
{
	struct
	{ 
		unsigned int TEI0           : 1;	/* Clear TEI Flag of Buffer 0 */
		unsigned int TEI1           : 1;	/* Clear TEI Flag of Buffer 1 */
		unsigned int TEI2           : 1;	/* Clear TEI Flag of Buffer 2 */
		unsigned int TEI3           : 1;	/* Clear TEI Flag of Buffer 3 */
		unsigned int TEI4           : 1;	/* Clear TEI Flag of Buffer 4 */
		unsigned int TEI5           : 1;	/* Clear TEI Flag of Buffer 5 */
		unsigned int TEI6           : 1;	/* Clear TEI Flag of Buffer 6 */
		unsigned int TEI7           : 1;	/* Clear TEI Flag of Buffer 7 */
		unsigned int TEI8           : 1;	/* Clear TEI Flag of Buffer 8 */
		unsigned int TEI9           : 1;	/* Clear TEI Flag of Buffer 9 */
		unsigned int TEI10          : 1;	/* Clear TEI Flag of Buffer 10 */
		unsigned int TEI11          : 1;	/* Clear TEI Flag of Buffer 11 */
		unsigned int TEI12          : 1;	/* Clear TEI Flag of Buffer 12 */
		unsigned int TEI13          : 1;	/* Clear TEI Flag of Buffer 13 */
		unsigned int TEI14          : 1;	/* Clear TEI Flag of Buffer 14 */
		unsigned int TEI15          : 1;	/* Clear TEI Flag of Buffer 15 */
		unsigned int TEI16          : 1;	/* Clear TEI Flag of Buffer 16 */
		unsigned int TEI17          : 1;	/* Clear TEI Flag of Buffer 17 */
		unsigned int TEI18          : 1;	/* Clear TEI Flag of Buffer 18 */
		unsigned int TEI19          : 1;	/* Clear TEI Flag of Buffer 19 */
		unsigned int TEI20          : 1;	/* Clear TEI Flag of Buffer 20 */
		unsigned int TEI21          : 1;	/* Clear TEI Flag of Buffer 21 */
		unsigned int TEI22          : 1;	/* Clear TEI Flag of Buffer 22 */
		unsigned int TEI23          : 1;	/* Clear TEI Flag of Buffer 23 */
		unsigned int TEI24          : 1;	/* Clear TEI Flag of Buffer 24 */
		unsigned int TEI25          : 1;	/* Clear TEI Flag of Buffer 25 */
		unsigned int TEI26          : 1;	/* Clear TEI Flag of Buffer 26 */
		unsigned int TEI27          : 1;	/* Clear TEI Flag of Buffer 27 */
		unsigned int TEI28          : 1;	/* Clear TEI Flag of Buffer 28 */
		unsigned int TEI29          : 1;	/* Clear TEI Flag of Buffer 29 */
		unsigned int TEI30          : 1;	/* Clear TEI Flag of Buffer 30 */
		unsigned int TEI31          : 1;	/* Clear TEI Flag of Buffer 31 */
	} B;
	int I;
	unsigned int U;

} PSI5_TEICLR0_type;
#define PSI5_TEICLR0	(*( PSI5_TEICLR0_type *) 0xf0005588u)	/* TEIOV0 Clear Register */
#define PSI5_TEICLR1	(*( PSI5_TEICLR0_type *) 0xf000558cu)	/* TEIOV1 Clear Register */
#define PSI5_TEICLR2	(*( PSI5_TEICLR0_type *) 0xf0005590u)	/* TEIOV2 Clear Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int TEI0           : 1;	/* TEI Flag of Buffer 0 */
		/* const */ unsigned int TEI1           : 1;	/* TEI Flag of Buffer 1 */
		/* const */ unsigned int TEI2           : 1;	/* TEI Flag of Buffer 2 */
		/* const */ unsigned int TEI3           : 1;	/* TEI Flag of Buffer 3 */
		/* const */ unsigned int TEI4           : 1;	/* TEI Flag of Buffer 4 */
		/* const */ unsigned int TEI5           : 1;	/* TEI Flag of Buffer 5 */
		/* const */ unsigned int TEI6           : 1;	/* TEI Flag of Buffer 6 */
		/* const */ unsigned int TEI7           : 1;	/* TEI Flag of Buffer 7 */
		/* const */ unsigned int TEI8           : 1;	/* TEI Flag of Buffer 8 */
		/* const */ unsigned int TEI9           : 1;	/* TEI Flag of Buffer 9 */
		/* const */ unsigned int TEI10          : 1;	/* TEI Flag of Buffer 10 */
		/* const */ unsigned int TEI11          : 1;	/* TEI Flag of Buffer 11 */
		/* const */ unsigned int TEI12          : 1;	/* TEI Flag of Buffer 12 */
		/* const */ unsigned int TEI13          : 1;	/* TEI Flag of Buffer 13 */
		/* const */ unsigned int TEI14          : 1;	/* TEI Flag of Buffer 14 */
		/* const */ unsigned int TEI15          : 1;	/* TEI Flag of Buffer 15 */
		/* const */ unsigned int TEI16          : 1;	/* TEI Flag of Buffer 16 */
		/* const */ unsigned int TEI17          : 1;	/* TEI Flag of Buffer 17 */
		/* const */ unsigned int TEI18          : 1;	/* TEI Flag of Buffer 18 */
		/* const */ unsigned int TEI19          : 1;	/* TEI Flag of Buffer 19 */
		/* const */ unsigned int TEI20          : 1;	/* TEI Flag of Buffer 20 */
		/* const */ unsigned int TEI21          : 1;	/* TEI Flag of Buffer 21 */
		/* const */ unsigned int TEI22          : 1;	/* TEI Flag of Buffer 22 */
		/* const */ unsigned int TEI23          : 1;	/* TEI Flag of Buffer 23 */
		/* const */ unsigned int TEI24          : 1;	/* TEI Flag of Buffer 24 */
		/* const */ unsigned int TEI25          : 1;	/* TEI Flag of Buffer 25 */
		/* const */ unsigned int TEI26          : 1;	/* TEI Flag of Buffer 26 */
		/* const */ unsigned int TEI27          : 1;	/* TEI Flag of Buffer 27 */
		/* const */ unsigned int TEI28          : 1;	/* TEI Flag of Buffer 28 */
		/* const */ unsigned int TEI29          : 1;	/* TEI Flag of Buffer 29 */
		/* const */ unsigned int TEI30          : 1;	/* TEI Flag of Buffer 30 */
		/* const */ unsigned int TEI31          : 1;	/* TEI Flag of Buffer 31 */
	} B;
	int I;
	unsigned int U;

} PSI5_TEIOV0_type;
#define PSI5_TEIOV0	(*( PSI5_TEIOV0_type *) 0xf0005448u)	/* TEI Overview Register */
#define PSI5_TEIOV1	(*( PSI5_TEIOV0_type *) 0xf000544cu)	/* TEI Overview Register */
#define PSI5_TEIOV2	(*( PSI5_TEIOV0_type *) 0xf0005450u)	/* TEI Overview Register */

typedef volatile union
{
	struct
	{ 
		unsigned int TEI0           : 1;	/* Set TEI Flag of Buffer 0 */
		unsigned int TEI1           : 1;	/* Set TEI Flag of Buffer 1 */
		unsigned int TEI2           : 1;	/* Set TEI Flag of Buffer 2 */
		unsigned int TEI3           : 1;	/* Set TEI Flag of Buffer 3 */
		unsigned int TEI4           : 1;	/* Set TEI Flag of Buffer 4 */
		unsigned int TEI5           : 1;	/* Set TEI Flag of Buffer 5 */
		unsigned int TEI6           : 1;	/* Set TEI Flag of Buffer 6 */
		unsigned int TEI7           : 1;	/* Set TEI Flag of Buffer 7 */
		unsigned int TEI8           : 1;	/* Set TEI Flag of Buffer 8 */
		unsigned int TEI9           : 1;	/* Set TEI Flag of Buffer 9 */
		unsigned int TEI10          : 1;	/* Set TEI Flag of Buffer 10 */
		unsigned int TEI11          : 1;	/* Set TEI Flag of Buffer 11 */
		unsigned int TEI12          : 1;	/* Set TEI Flag of Buffer 12 */
		unsigned int TEI13          : 1;	/* Set TEI Flag of Buffer 13 */
		unsigned int TEI14          : 1;	/* Set TEI Flag of Buffer 14 */
		unsigned int TEI15          : 1;	/* Set TEI Flag of Buffer 15 */
		unsigned int TEI16          : 1;	/* Set TEI Flag of Buffer 16 */
		unsigned int TEI17          : 1;	/* Set TEI Flag of Buffer 17 */
		unsigned int TEI18          : 1;	/* Set TEI Flag of Buffer 18 */
		unsigned int TEI19          : 1;	/* Set TEI Flag of Buffer 19 */
		unsigned int TEI20          : 1;	/* Set TEI Flag of Buffer 20 */
		unsigned int TEI21          : 1;	/* Set TEI Flag of Buffer 21 */
		unsigned int TEI22          : 1;	/* Set TEI Flag of Buffer 22 */
		unsigned int TEI23          : 1;	/* Set TEI Flag of Buffer 23 */
		unsigned int TEI24          : 1;	/* Set TEI Flag of Buffer 24 */
		unsigned int TEI25          : 1;	/* Set TEI Flag of Buffer 25 */
		unsigned int TEI26          : 1;	/* Set TEI Flag of Buffer 26 */
		unsigned int TEI27          : 1;	/* Set TEI Flag of Buffer 27 */
		unsigned int TEI28          : 1;	/* Set TEI Flag of Buffer 28 */
		unsigned int TEI29          : 1;	/* Set TEI Flag of Buffer 29 */
		unsigned int TEI30          : 1;	/* Set TEI Flag of Buffer 30 */
		unsigned int TEI31          : 1;	/* Set TEI Flag of Buffer 31 */
	} B;
	int I;
	unsigned int U;

} PSI5_TEISET0_type;
#define PSI5_TEISET0	(*( PSI5_TEISET0_type *) 0xf00054e8u)	/* TEIOV0 Set Register */
#define PSI5_TEISET1	(*( PSI5_TEISET0_type *) 0xf00054ecu)	/* TEIOV1 Set Register */
#define PSI5_TEISET2	(*( PSI5_TEISET0_type *) 0xf00054f0u)	/* TEIOV2 Set Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int CTS            : 24;	/* Current Time Stamp for the Module */
		unsigned int ETB            : 3;	/* External Time Base Select */
		unsigned int TBS            : 1;	/* Time Base Select */
		unsigned int                : 2;
		unsigned int ACLR           : 1;	/* Clear All Current Time Stamp Counters */
		unsigned int CLR            : 1;	/* Clear Current Time Stamp for the Module */
	} B;
	int I;
	unsigned int U;

} PSI5_TSRA_type;
#define PSI5_TSRA	(*( PSI5_TSRA_type *) 0xf000501cu)	/* Time Stamp Register A */
#define PSI5_TSRB	(*( PSI5_TSRA_type *) 0xf0005020u)	/* Time Stamp Register B */
#define PSI5_TSRC	(*( PSI5_TSRA_type *) 0xf0005024u)	/* Time Stamp Register C */

typedef volatile union
{
	struct
	{ 
		unsigned int WDLxw          : 16;	/* Watch Dog Timer Limit */
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} PSI5_WDT00_type;
#define PSI5_WDT00	(*( PSI5_WDT00_type *) 0xf0005040u)	/* Watch Dog Timer Register 00 */
#define PSI5_WDT01	(*( PSI5_WDT00_type *) 0xf0005044u)	/* Watch Dog Timer Register 01 */
#define PSI5_WDT02	(*( PSI5_WDT00_type *) 0xf0005048u)	/* Watch Dog Timer Register 02 */
#define PSI5_WDT03	(*( PSI5_WDT00_type *) 0xf000504cu)	/* Watch Dog Timer Register 03 */
#define PSI5_WDT04	(*( PSI5_WDT00_type *) 0xf0005050u)	/* Watch Dog Timer Register 04 */
#define PSI5_WDT05	(*( PSI5_WDT00_type *) 0xf0005054u)	/* Watch Dog Timer Register 05 */
#define PSI5_WDT06	(*( PSI5_WDT00_type *) 0xf0005058u)	/* Watch Dog Timer Register 06 */
#define PSI5_WDT10	(*( PSI5_WDT00_type *) 0xf00050d0u)	/* Watch Dog Timer Register 10 */
#define PSI5_WDT11	(*( PSI5_WDT00_type *) 0xf00050d4u)	/* Watch Dog Timer Register 11 */
#define PSI5_WDT12	(*( PSI5_WDT00_type *) 0xf00050d8u)	/* Watch Dog Timer Register 12 */
#define PSI5_WDT13	(*( PSI5_WDT00_type *) 0xf00050dcu)	/* Watch Dog Timer Register 13 */
#define PSI5_WDT14	(*( PSI5_WDT00_type *) 0xf00050e0u)	/* Watch Dog Timer Register 14 */
#define PSI5_WDT15	(*( PSI5_WDT00_type *) 0xf00050e4u)	/* Watch Dog Timer Register 15 */
#define PSI5_WDT16	(*( PSI5_WDT00_type *) 0xf00050e8u)	/* Watch Dog Timer Register 16 */
#define PSI5_WDT20	(*( PSI5_WDT00_type *) 0xf0005160u)	/* Watch Dog Timer Register 20 */
#define PSI5_WDT21	(*( PSI5_WDT00_type *) 0xf0005164u)	/* Watch Dog Timer Register 21 */
#define PSI5_WDT22	(*( PSI5_WDT00_type *) 0xf0005168u)	/* Watch Dog Timer Register 22 */
#define PSI5_WDT23	(*( PSI5_WDT00_type *) 0xf000516cu)	/* Watch Dog Timer Register 23 */
#define PSI5_WDT24	(*( PSI5_WDT00_type *) 0xf0005170u)	/* Watch Dog Timer Register 24 */
#define PSI5_WDT25	(*( PSI5_WDT00_type *) 0xf0005174u)	/* Watch Dog Timer Register 25 */
#define PSI5_WDT26	(*( PSI5_WDT00_type *) 0xf0005178u)	/* Watch Dog Timer Register 26 */


/* PSI5S */
typedef volatile union
{
	struct
	{ 
		unsigned int EN0            : 1;	/* Access Enable for Master TAG ID 0 */
		unsigned int EN1            : 1;	/* Access Enable for Master TAG ID 1 */
		unsigned int EN2            : 1;	/* Access Enable for Master TAG ID 2 */
		unsigned int EN3            : 1;	/* Access Enable for Master TAG ID 3 */
		unsigned int EN4            : 1;	/* Access Enable for Master TAG ID 4 */
		unsigned int EN5            : 1;	/* Access Enable for Master TAG ID 5 */
		unsigned int EN6            : 1;	/* Access Enable for Master TAG ID 6 */
		unsigned int EN7            : 1;	/* Access Enable for Master TAG ID 7 */
		unsigned int EN8            : 1;	/* Access Enable for Master TAG ID 8 */
		unsigned int EN9            : 1;	/* Access Enable for Master TAG ID 9 */
		unsigned int EN10           : 1;	/* Access Enable for Master TAG ID 10 */
		unsigned int EN11           : 1;	/* Access Enable for Master TAG ID 11 */
		unsigned int EN12           : 1;	/* Access Enable for Master TAG ID 12 */
		unsigned int EN13           : 1;	/* Access Enable for Master TAG ID 13 */
		unsigned int EN14           : 1;	/* Access Enable for Master TAG ID 14 */
		unsigned int EN15           : 1;	/* Access Enable for Master TAG ID 15 */
		unsigned int EN16           : 1;	/* Access Enable for Master TAG ID 16 */
		unsigned int EN17           : 1;	/* Access Enable for Master TAG ID 17 */
		unsigned int EN18           : 1;	/* Access Enable for Master TAG ID 18 */
		unsigned int EN19           : 1;	/* Access Enable for Master TAG ID 19 */
		unsigned int EN20           : 1;	/* Access Enable for Master TAG ID 20 */
		unsigned int EN21           : 1;	/* Access Enable for Master TAG ID 21 */
		unsigned int EN22           : 1;	/* Access Enable for Master TAG ID 22 */
		unsigned int EN23           : 1;	/* Access Enable for Master TAG ID 23 */
		unsigned int EN24           : 1;	/* Access Enable for Master TAG ID 24 */
		unsigned int EN25           : 1;	/* Access Enable for Master TAG ID 25 */
		unsigned int EN26           : 1;	/* Access Enable for Master TAG ID 26 */
		unsigned int EN27           : 1;	/* Access Enable for Master TAG ID 27 */
		unsigned int EN28           : 1;	/* Access Enable for Master TAG ID 28 */
		unsigned int EN29           : 1;	/* Access Enable for Master TAG ID 29 */
		unsigned int EN30           : 1;	/* Access Enable for Master TAG ID 30 */
		unsigned int EN31           : 1;	/* Access Enable for Master TAG ID 31 */
	} B;
	int I;
	unsigned int U;

} PSI5S_ACCEN0_type;
#define PSI5S_ACCEN0	(*( PSI5S_ACCEN0_type *) 0xf00073d0u)	/* Access Enable Register 0 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int Reserved       : 32;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} PSI5S_ACCEN1_type;
#define PSI5S_ACCEN1	(*( PSI5S_ACCEN1_type *) 0xf00073d4u)	/* Access Enable Register 1 */

typedef volatile union
{
	struct
	{ 
		unsigned int                : 2;
		unsigned int BA             : 30;	/* Base Address */
	} B;
	int I;
	unsigned int U;

} PSI5S_BAR_type;
#define PSI5S_BAR	(*( PSI5S_BAR_type *) 0xf00070d4u)	/* Base Address Register */

typedef volatile union
{
	struct
	{ 
		unsigned int BR_VALUE       : 13;	/* Baud Rate Timer/Reload Register Value */
		unsigned int                : 19;
	} B;
	int I;
	unsigned int U;

} PSI5S_BG_type;
#define PSI5S_BG	(*( PSI5S_BG_type *) 0xf0007214u)	/* Baud Rate Timer/Reload Register */

typedef volatile union
{
	struct
	{ 
		unsigned int SD0            : 1;	/* SD0 */
		unsigned int SD1            : 1;	/* SD1 */
		unsigned int SD2            : 1;	/* SD2 */
		unsigned int SD3            : 1;	/* SD3 */
		unsigned int SD4            : 1;	/* SD4 */
		unsigned int SD5            : 1;	/* SD5 */
		unsigned int SD6            : 1;	/* SD6 */
		unsigned int SD7            : 1;	/* SD7 */
		unsigned int TSI            : 1;	/* Trigger Pulse Indicator */
		unsigned int                : 23;
	} B;
	int I;
	unsigned int U;

} PSI5S_CDW_type;
#define PSI5S_CDW	(*( PSI5S_CDW_type *) 0xf0007170u)	/* CPU Direct Write Register */

typedef volatile union
{
	struct
	{ 
		unsigned int DISR           : 1;	/* Module Disable Request Bit */
		/* const */ unsigned int DISS           : 1;	/* Module Disable Status Bit */
		unsigned int                : 1;
		unsigned int EDIS           : 1;	/* External Sleep Mode Request Disable Bit */
		unsigned int                : 28;
	} B;
	int I;
	unsigned int U;

} PSI5S_CLC_type;
#define PSI5S_CLC	(*( PSI5S_CLC_type *) 0xf0007000u)	/* Clock Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int M              : 3;	/* Mode Selection */
		unsigned int STP            : 1;	/* Number of Stop Bit Selection */
		/* const */ unsigned int REN            : 1;	/* Receiver Enable Control */
		unsigned int PEN            : 1;	/* Parity Check Enable (asynchronous mode only) */
		unsigned int FEN            : 1;	/* Framing Check Enable (asynchronous mode only) */
		unsigned int OEN            : 1;	/* Overrun Check Enable */
		/* const */ unsigned int PE             : 1;	/* ASC Parity Error Flag */
		/* const */ unsigned int FE             : 1;	/* ASC Framing Error Flag */
		/* const */ unsigned int OE             : 1;	/* ASC Overrun Error Flag */
		unsigned int FDE            : 1;	/* Fractional Divider Enable */
		unsigned int ODD            : 1;	/* Parity Selection */
		unsigned int BRS            : 1;	/* Baud Rate Selection */
		unsigned int LB             : 1;	/* Loop-back Mode Enable */
		unsigned int R              : 1;	/* Baud Rate Generator Run Control */
		unsigned int MTX            : 3;	/* Mode Selection TX direction */
		unsigned int                : 9;
		unsigned int ODDTX          : 1;	/* Parity Selection TX direction */
		unsigned int                : 3;
	} B;
	int I;
	unsigned int U;

} PSI5S_CON_type;
#define PSI5S_CON	(*( PSI5S_CON_type *) 0xf0007210u)	/* Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int CTV            : 16;	/* Channel Trigger Value CTV */
		unsigned int CTC            : 16;	/* Channel Trigger Counter */
	} B;
	int I;
	unsigned int U;

} PSI5S_CTV0_type;
#define PSI5S_CTV0	(*( PSI5S_CTV0_type *) 0xf0007110u)	/* Channel Trigger Value Register 0 */
#define PSI5S_CTV1	(*( PSI5S_CTV0_type *) 0xf0007114u)	/* Channel Trigger Value Register 1 */
#define PSI5S_CTV2	(*( PSI5S_CTV0_type *) 0xf0007118u)	/* Channel Trigger Value Register 2 */
#define PSI5S_CTV3	(*( PSI5S_CTV0_type *) 0xf000711cu)	/* Channel Trigger Value Register 3 */
#define PSI5S_CTV4	(*( PSI5S_CTV0_type *) 0xf0007120u)	/* Channel Trigger Value Register 4 */
#define PSI5S_CTV5	(*( PSI5S_CTV0_type *) 0xf0007124u)	/* Channel Trigger Value Register 5 */
#define PSI5S_CTV6	(*( PSI5S_CTV0_type *) 0xf0007128u)	/* Channel Trigger Value Register 6 */
#define PSI5S_CTV7	(*( PSI5S_CTV0_type *) 0xf000712cu)	/* Channel Trigger Value Register 7 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int FC0            : 3;	/* Frame Counter for Channel 0 */
		/* const */ unsigned int FC1            : 3;	/* Frame Counter for Channel 1 */
		/* const */ unsigned int FC2            : 3;	/* Frame Counter for Channel 2 */
		/* const */ unsigned int FC3            : 3;	/* Frame Counter for Channel 3 */
		/* const */ unsigned int FC4            : 3;	/* Frame Counter for Channel 4 */
		/* const */ unsigned int FC5            : 3;	/* Frame Counter for Channel 5 */
		/* const */ unsigned int FC6            : 3;	/* Frame Counter for Channel 6 */
		/* const */ unsigned int FC7            : 3;	/* Frame Counter for Channel 7 */
		unsigned int NFCLR0         : 1;	/* Clear Number of Frame Counter for Channel 0 */
		unsigned int NFCLR1         : 1;	/* Clear Number of Frame Counter for Channel 1 */
		unsigned int NFCLR2         : 1;	/* Clear Number of Frame Counter for Channel 2 */
		unsigned int NFCLR3         : 1;	/* Clear Number of Frame Counter for Channel 3 */
		unsigned int NFCLR4         : 1;	/* Clear Number of Frame Counter for Channel 4 */
		unsigned int NFCLR5         : 1;	/* Clear Number of Frame Counter for Channel 5 */
		unsigned int NFCLR6         : 1;	/* Clear Number of Frame Counter for Channel 6 */
		unsigned int NFCLR7         : 1;	/* Clear Number of Frame Counter for Channel 7 */
	} B;
	int I;
	unsigned int U;

} PSI5S_FCNT_type;
#define PSI5S_FCNT	(*( PSI5S_FCNT_type *) 0xf0007024u)	/* Frame Counter Register */

typedef volatile union
{
	struct
	{ 
		unsigned int STEP           : 11;	/* Step Value */
		unsigned int                : 3;
		unsigned int DM             : 2;	/* Divider Mode */
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} PSI5S_FDO_type;
#define PSI5S_FDO	(*( PSI5S_FDO_type *) 0xf000721cu)	/* Fractional Divider for Output CLK Register */

typedef volatile union
{
	struct
	{ 
		unsigned int STEP           : 10;	/* Step Value */
		unsigned int                : 4;
		unsigned int DM             : 2;	/* Divider Mode */
		/* const */ unsigned int RESULT         : 10;	/* Result Value */
		unsigned int                : 6;
	} B;
	int I;
	unsigned int U;

} PSI5S_FDR_type;
#define PSI5S_FDR	(*( PSI5S_FDR_type *) 0xf000700cu)	/* PSI5-S Fractional Divider Register */

typedef volatile union
{
	struct
	{ 
		unsigned int STEP           : 10;	/* Step Value */
		unsigned int                : 4;
		unsigned int DM             : 2;	/* Divider Mode */
		/* const */ unsigned int RESULT         : 10;	/* Result Value */
		unsigned int ECS            : 3;	/* External Time Stamp Clear Source Select */
		unsigned int ECEA           : 1;	/* External Time Stamp Clear Enable A */
		unsigned int ECEB           : 1;	/* External Time Stamp Clear Enable B */
		unsigned int                : 1;
	} B;
	int I;
	unsigned int U;

} PSI5S_FDRT_type;
#define PSI5S_FDRT	(*( PSI5S_FDRT_type *) 0xf0007010u)	/* Fractional Divider Register for Time Stamp */

typedef volatile union
{
	struct
	{ 
		unsigned int FD_VALUE       : 11;	/* Fractional Divider Register Value */
		unsigned int                : 21;
	} B;
	int I;
	unsigned int U;

} PSI5S_FDV_type;
#define PSI5S_FDV	(*( PSI5S_FDV_type *) 0xf0007218u)	/* Fractional Divider Register */

typedef volatile union
{
	struct
	{ 
		unsigned int CRCI           : 1;	/* CRCI */
		unsigned int XCRCI          : 1;	/* XCRCI */
		unsigned int TEI            : 1;	/* TEI */
		unsigned int PE             : 1;	/* PE */
		unsigned int FE             : 1;	/* FE */
		unsigned int OE             : 1;	/* OE */
		unsigned int RBI            : 1;	/* RBI */
		unsigned int HDI            : 1;	/* HDI */
		unsigned int ETC0           : 1;	/* Enable Channel Trigger Counter CTVx.CTC */
		unsigned int ETC1           : 1;	/* Enable Channel Trigger Counter CTVx.CTC */
		unsigned int ETC2           : 1;	/* Enable Channel Trigger Counter CTVx.CTC */
		unsigned int ETC3           : 1;	/* Enable Channel Trigger Counter CTVx.CTC */
		unsigned int ETC4           : 1;	/* Enable Channel Trigger Counter CTVx.CTC */
		unsigned int ETC5           : 1;	/* Enable Channel Trigger Counter CTVx.CTC */
		unsigned int ETC6           : 1;	/* Enable Channel Trigger Counter CTVx.CTC */
		unsigned int ETC7           : 1;	/* Enable Channel Trigger Counter CTVx.CTC */
		unsigned int CEN0           : 1;	/* Enable Channel 0 */
		unsigned int CEN1           : 1;	/* Enable Channel 1 */
		unsigned int CEN2           : 1;	/* Enable Channel 2 */
		unsigned int CEN3           : 1;	/* Enable Channel 3 */
		unsigned int CEN4           : 1;	/* Enable Channel 4 */
		unsigned int CEN5           : 1;	/* Enable Channel 5 */
		unsigned int CEN6           : 1;	/* Enable Channel 6 */
		unsigned int CEN7           : 1;	/* Enable Channel 7 */
		unsigned int IDT            : 4;	/* Idle Time (GLOBAL VALUE FOR ALL CHANNELS) */
		unsigned int                : 3;
		unsigned int ASC            : 1;	/* ASC only Mode */
	} B;
	int I;
	unsigned int U;

} PSI5S_GCR_type;
#define PSI5S_GCR	(*( PSI5S_GCR_type *) 0xf000701cu)	/* Global Control Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int MODREV         : 8;	/* Module Revision Number */
		/* const */ unsigned int MODTYPE        : 8;	/* Module Type */
		/* const */ unsigned int MODNUM         : 16;	/* Module Number Value */
	} B;
	int I;
	unsigned int U;

} PSI5S_ID_type;
#define PSI5S_ID	(*( PSI5S_ID_type *) 0xf0007008u)	/* Module Identification Register */

typedef volatile union
{
	struct
	{ 
		unsigned int RSI            : 3;	/* Interrupt Node Pointer for Interrupt RSI */
		unsigned int RDI            : 3;	/* Interrupt Node Pointer for Interrupt RDI */
		unsigned int RBI            : 3;	/* Interrupt Node Pointer for Interrupt RBI */
		unsigned int TEI            : 3;	/* Interrupt Node Pointer for Interrupt TEI */
		unsigned int CHCI           : 3;	/* Interrupt Node Pointer for Interrupt CHCI */
		unsigned int CRCI           : 3;	/* Interrupt Node Pointer for Interrupt CRCI */
		unsigned int TPI            : 3;	/* Interrupt Node Pointer for Interrupt TOI */
		unsigned int TPOI           : 3;	/* Interrupt Node Pointer for TPOI */
		unsigned int HDI            : 3;	/* Interrupt Node Pointer for HDI */
		unsigned int                : 5;
	} B;
	int I;
	unsigned int U;

} PSI5S_INP0_type;
#define PSI5S_INP0	(*( PSI5S_INP0_type *) 0xf00072e0u)	/* Interrupt Node Pointer Register 0 */
#define PSI5S_INP1	(*( PSI5S_INP0_type *) 0xf00072e4u)	/* Interrupt Node Pointer Register 1 */
#define PSI5S_INP2	(*( PSI5S_INP0_type *) 0xf00072e8u)	/* Interrupt Node Pointer Register 2 */
#define PSI5S_INP3	(*( PSI5S_INP0_type *) 0xf00072ecu)	/* Interrupt Node Pointer Register 3 */
#define PSI5S_INP4	(*( PSI5S_INP0_type *) 0xf00072f0u)	/* Interrupt Node Pointer Register 4 */
#define PSI5S_INP5	(*( PSI5S_INP0_type *) 0xf00072f4u)	/* Interrupt Node Pointer Register 5 */
#define PSI5S_INP6	(*( PSI5S_INP0_type *) 0xf00072f8u)	/* Interrupt Node Pointer Register 6 */
#define PSI5S_INP7	(*( PSI5S_INP0_type *) 0xf00072fcu)	/* Interrupt Node Pointer Register 7 */

typedef volatile union
{
	struct
	{ 
		unsigned int TIR            : 3;	/* Interrupt Node Pointer for Interrupt TIR */
		unsigned int RIR            : 3;	/* Interrupt Node Pointer for Interrupt RIR */
		unsigned int EIR            : 3;	/* Interrupt Node Pointer for Interrupt EIR */
		unsigned int TBIR           : 3;	/* Interrupt Node Pointer for Interrupt TBIR */
		unsigned int XCRCI          : 3;	/* Interrupt Node Pointer for Interrupt XCRCI */
		unsigned int FOI            : 3;	/* Interrupt Node Pointer for Interrupt FOI */
		unsigned int                : 14;
	} B;
	int I;
	unsigned int U;

} PSI5S_INPG_type;
#define PSI5S_INPG	(*( PSI5S_INPG_type *) 0xf0007314u)	/* Interrupt Node Pointer G Register */

typedef volatile union
{
	struct
	{ 
		unsigned int RSI            : 1;	/* Clear Interrupt Request Flag RSI */
		unsigned int RDI            : 1;	/* Clear Interrupt Request Flag RDI */
		unsigned int RBI            : 1;	/* Clear Interrupt Request Flag RBI */
		unsigned int TEI            : 1;	/* Clear Interrupt Request Flag TEI */
		unsigned int CHCI           : 1;	/* Clear Interrupt Request Flag CHCI */
		unsigned int CRCI           : 1;	/* Clear Interrupt Request Flag CRCI */
		unsigned int TPI            : 1;	/* Clear Interrupt Request Flag TPI */
		unsigned int TPOI           : 1;	/* Clear Interrupt Request Flag TPOI */
		unsigned int HDI            : 1;	/* Clear Interrupt Request Flag HDI */
		unsigned int                : 23;
	} B;
	int I;
	unsigned int U;

} PSI5S_INTCLR0_type;
#define PSI5S_INTCLR0	(*( PSI5S_INTCLR0_type *) 0xf00072a0u)	/* Interrupt Clear Register 0 */
#define PSI5S_INTCLR1	(*( PSI5S_INTCLR0_type *) 0xf00072a4u)	/* Interrupt Clear Register 1 */
#define PSI5S_INTCLR2	(*( PSI5S_INTCLR0_type *) 0xf00072a8u)	/* Interrupt Clear Register 2 */
#define PSI5S_INTCLR3	(*( PSI5S_INTCLR0_type *) 0xf00072acu)	/* Interrupt Clear Register 3 */
#define PSI5S_INTCLR4	(*( PSI5S_INTCLR0_type *) 0xf00072b0u)	/* Interrupt Clear Register 4 */
#define PSI5S_INTCLR5	(*( PSI5S_INTCLR0_type *) 0xf00072b4u)	/* Interrupt Clear Register 5 */
#define PSI5S_INTCLR6	(*( PSI5S_INTCLR0_type *) 0xf00072b8u)	/* Interrupt Clear Register 6 */
#define PSI5S_INTCLR7	(*( PSI5S_INTCLR0_type *) 0xf00072bcu)	/* Interrupt Clear Register 7 */

typedef volatile union
{
	struct
	{ 
		unsigned int TIR            : 1;	/* Clear Interrupt Request Flag TIR */
		unsigned int RIR            : 1;	/* Clear Interrupt Request Flag RIR */
		unsigned int EIR            : 1;	/* Clear Interrupt Request Flag EIR */
		unsigned int TBIR           : 1;	/* Clear Interrupt Request Flag TBIR */
		unsigned int XCRCI          : 1;	/* Clear Interrupt Request Flag XCRCI */
		unsigned int FOI            : 1;	/* Clear Interrupt Request Flag FOI */
		unsigned int                : 26;
	} B;
	int I;
	unsigned int U;

} PSI5S_INTCLRG_type;
#define PSI5S_INTCLRG	(*( PSI5S_INTCLRG_type *) 0xf000730cu)	/* Interrupt Clear Register G */

typedef volatile union
{
	struct
	{ 
		unsigned int RSI            : 1;	/* Enable Interrupt Request RSI */
		unsigned int RDI            : 1;	/* Enable Interrupt Request RDI */
		unsigned int RBI            : 1;	/* Enable Interrupt Request RBI */
		unsigned int TEI            : 1;	/* Enable Interrupt Request TEI */
		unsigned int CHCI           : 1;	/* Enable Interrupt Request CHCI */
		unsigned int CRCI           : 1;	/* Enable Interrupt Request CRCI */
		unsigned int TPI            : 1;	/* Enable Interrupt Request TPI */
		unsigned int TPOI           : 1;	/* Enable Interrupt Request TPOI */
		unsigned int HDI            : 1;	/* Enable Interrupt Request HDI */
		unsigned int                : 23;
	} B;
	int I;
	unsigned int U;

} PSI5S_INTEN0_type;
#define PSI5S_INTEN0	(*( PSI5S_INTEN0_type *) 0xf00072c0u)	/* Interrupt Enable Register 0 */
#define PSI5S_INTEN1	(*( PSI5S_INTEN0_type *) 0xf00072c4u)	/* Interrupt Enable Register 1 */
#define PSI5S_INTEN2	(*( PSI5S_INTEN0_type *) 0xf00072c8u)	/* Interrupt Enable Register 2 */
#define PSI5S_INTEN3	(*( PSI5S_INTEN0_type *) 0xf00072ccu)	/* Interrupt Enable Register 3 */
#define PSI5S_INTEN4	(*( PSI5S_INTEN0_type *) 0xf00072d0u)	/* Interrupt Enable Register 4 */
#define PSI5S_INTEN5	(*( PSI5S_INTEN0_type *) 0xf00072d4u)	/* Interrupt Enable Register 5 */
#define PSI5S_INTEN6	(*( PSI5S_INTEN0_type *) 0xf00072d8u)	/* Interrupt Enable Register 6 */
#define PSI5S_INTEN7	(*( PSI5S_INTEN0_type *) 0xf00072dcu)	/* Interrupt Enable Register 7 */

typedef volatile union
{
	struct
	{ 
		unsigned int TIR            : 1;	/* Enable Interrupt Request TIR */
		unsigned int RIR            : 1;	/* Enable Interrupt Request RIR */
		unsigned int EIR            : 1;	/* Enable Interrupt Request EIR */
		unsigned int TBIR           : 1;	/* Enable Interrupt Request TBIR */
		unsigned int XCRCI          : 1;	/* Enable Interrupt Request XCRCI */
		unsigned int FOI            : 1;	/* Enable Interrupt Request FOI */
		unsigned int                : 26;
	} B;
	int I;
	unsigned int U;

} PSI5S_INTENG_type;
#define PSI5S_INTENG	(*( PSI5S_INTENG_type *) 0xf0007310u)	/* Interrupt Enable Register G */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int RSI            : 1;	/* Interrupt Pending on Node Pointer RSI */
		/* const */ unsigned int RDI            : 1;	/* Interrupt Pending on Node Pointer RDI */
		/* const */ unsigned int RBI            : 1;	/* Interrupt Pending on Node Pointer RBI */
		/* const */ unsigned int TEI            : 1;	/* Interrupt Pending on Node Pointer TEI */
		/* const */ unsigned int CHCI           : 1;	/* Interrupt Pending on Node Pointer CHCI */
		/* const */ unsigned int CRCI           : 1;	/* Interrupt Pending on Node Pointer CRCI */
		/* const */ unsigned int TPI            : 1;	/* Interrupt Pending on Node Pointer TPI */
		/* const */ unsigned int TPOI           : 1;	/* Interrupt Pending on Node Pointer TPOI */
		/* const */ unsigned int HDI            : 1;	/* Interrupt Pending on Node Pointer HDI */
		/* const */ unsigned int TIR            : 1;	/* Interrupt Pending on Node Pointer TIR */
		/* const */ unsigned int RIR            : 1;	/* Interrupt Pending on Node Pointer RIR */
		/* const */ unsigned int EIR            : 1;	/* Interrupt Pending on Node Pointer EIR */
		/* const */ unsigned int TBIR           : 1;	/* Interrupt Pending on Node Pointer TBIR */
		/* const */ unsigned int XCRCI          : 1;	/* Interrupt Pending on Node Pointer XCRCI */
		/* const */ unsigned int FOI            : 1;	/* Interrupt Pending on Node Pointer FOI */
		/* const */ unsigned int                : 17;
	} B;
	int I;
	unsigned int U;

} PSI5S_INTOV_type;
#define PSI5S_INTOV	(*( PSI5S_INTOV_type *) 0xf0007300u)	/* Interrupt Overview Register */

typedef volatile union
{
	struct
	{ 
		unsigned int RSI            : 1;	/* Set Interrupt Request Flag RSI */
		unsigned int RDI            : 1;	/* Set Interrupt Request Flag RDI */
		unsigned int RBI            : 1;	/* Set Interrupt Request Flag RBI */
		unsigned int TEI            : 1;	/* Set Interrupt Request Flag TEI */
		unsigned int CHCI           : 1;	/* Set Interrupt Request Flag CHCI */
		unsigned int CRCI           : 1;	/* Set Interrupt Request Flag CRCI */
		unsigned int TPI            : 1;	/* Set Interrupt Request Flag TPI */
		unsigned int TPOI           : 1;	/* Set Interrupt Request Flag TPOI */
		unsigned int HDI            : 1;	/* Set Interrupt Request Flag HDI */
		unsigned int                : 23;
	} B;
	int I;
	unsigned int U;

} PSI5S_INTSET0_type;
#define PSI5S_INTSET0	(*( PSI5S_INTSET0_type *) 0xf0007280u)	/* Interrupt Set Register 0 */
#define PSI5S_INTSET1	(*( PSI5S_INTSET0_type *) 0xf0007284u)	/* Interrupt Set Register 1 */
#define PSI5S_INTSET2	(*( PSI5S_INTSET0_type *) 0xf0007288u)	/* Interrupt Set Register 2 */
#define PSI5S_INTSET3	(*( PSI5S_INTSET0_type *) 0xf000728cu)	/* Interrupt Set Register 3 */
#define PSI5S_INTSET4	(*( PSI5S_INTSET0_type *) 0xf0007290u)	/* Interrupt Set Register 4 */
#define PSI5S_INTSET5	(*( PSI5S_INTSET0_type *) 0xf0007294u)	/* Interrupt Set Register 5 */
#define PSI5S_INTSET6	(*( PSI5S_INTSET0_type *) 0xf0007298u)	/* Interrupt Set Register 6 */
#define PSI5S_INTSET7	(*( PSI5S_INTSET0_type *) 0xf000729cu)	/* Interrupt Set Register 7 */

typedef volatile union
{
	struct
	{ 
		unsigned int TIR            : 1;	/* Set Interrupt Request Flag TIR */
		unsigned int RIR            : 1;	/* Set Interrupt Request Flag RIR */
		unsigned int EIR            : 1;	/* Set Interrupt Request Flag EIR */
		unsigned int TBIR           : 1;	/* Set Interrupt Request Flag TBIR */
		unsigned int XCRCI          : 1;	/* Set Interrupt Request Flag XCRCI */
		unsigned int FOI            : 1;	/* Set Interrupt Request Flag FOI */
		unsigned int                : 26;
	} B;
	int I;
	unsigned int U;

} PSI5S_INTSETG_type;
#define PSI5S_INTSETG	(*( PSI5S_INTSETG_type *) 0xf0007308u)	/* Interrupt Set Register G */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int RSI            : 1;	/* Receive Success Interrupt Request Flag */
		/* const */ unsigned int RDI            : 1;	/* Receive Data Interrupt Request Flag */
		/* const */ unsigned int RBI            : 1;	/* Receive Buffer Overflow Interrupt Request Flag */
		/* const */ unsigned int TEI            : 1;	/* Timing Error Interrupt Request Flag */
		/* const */ unsigned int CHCI           : 1;	/* Channel Completed Interrupt Request Flag */
		/* const */ unsigned int CRCI           : 1;	/* CRC Error Request Flag */
		/* const */ unsigned int TPI            : 1;	/* Transfer Preparation Interrupt Request Flag */
		/* const */ unsigned int TPOI           : 1;	/* Transmit Preparation Overflow Interrupt Request Flag */
		/* const */ unsigned int HDI            : 1;	/* Header Error Signalled Flag */
		/* const */ unsigned int                : 23;
	} B;
	int I;
	unsigned int U;

} PSI5S_INTSTAT0_type;
#define PSI5S_INTSTAT0	(*( PSI5S_INTSTAT0_type *) 0xf0007260u)	/* Interrupt Status Register 0 */
#define PSI5S_INTSTAT1	(*( PSI5S_INTSTAT0_type *) 0xf0007264u)	/* Interrupt Status Register 1 */
#define PSI5S_INTSTAT2	(*( PSI5S_INTSTAT0_type *) 0xf0007268u)	/* Interrupt Status Register 2 */
#define PSI5S_INTSTAT3	(*( PSI5S_INTSTAT0_type *) 0xf000726cu)	/* Interrupt Status Register 3 */
#define PSI5S_INTSTAT4	(*( PSI5S_INTSTAT0_type *) 0xf0007270u)	/* Interrupt Status Register 4 */
#define PSI5S_INTSTAT5	(*( PSI5S_INTSTAT0_type *) 0xf0007274u)	/* Interrupt Status Register 5 */
#define PSI5S_INTSTAT6	(*( PSI5S_INTSTAT0_type *) 0xf0007278u)	/* Interrupt Status Register 6 */
#define PSI5S_INTSTAT7	(*( PSI5S_INTSTAT0_type *) 0xf000727cu)	/* Interrupt Status Register 7 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int TIR            : 1;	/* Transmit Interrupt Request Flag */
		/* const */ unsigned int RIR            : 1;	/* Receive Interrupt Request Flag */
		/* const */ unsigned int EIR            : 1;	/* Error Interrupt Request Flag */
		/* const */ unsigned int TBIR           : 1;	/* Transmit Buffer Interrupt Request Flag */
		/* const */ unsigned int XCRCI          : 1;	/* XCRC Error Request Flag */
		/* const */ unsigned int FOI            : 1;	/* FIFO Error Request Flag */
		/* const */ unsigned int                : 26;
	} B;
	int I;
	unsigned int U;

} PSI5S_INTSTATG_type;
#define PSI5S_INTSTATG	(*( PSI5S_INTSTATG_type *) 0xf0007304u)	/* Interrupt Status Register G */

typedef volatile union
{
	struct
	{ 
		unsigned int ALTI           : 2;	/* Alternate Input Select */
		unsigned int                : 30;
	} B;
	int I;
	unsigned int U;

} PSI5S_IOCR_type;
#define PSI5S_IOCR	(*( PSI5S_IOCR_type *) 0xf0007028u)	/* Input and Output Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int RST            : 1;	/* Kernel Reset */
		/* const */ unsigned int RSTSTAT        : 1;	/* Kernel Reset Status */
		unsigned int                : 30;
	} B;
	int I;
	unsigned int U;

} PSI5S_KRST0_type;
#define PSI5S_KRST0	(*( PSI5S_KRST0_type *) 0xf00073d8u)	/* Kernel Reset Register 0 */

typedef volatile union
{
	struct
	{ 
		unsigned int RST            : 1;	/* Kernel Reset */
		unsigned int                : 31;
	} B;
	int I;
	unsigned int U;

} PSI5S_KRST1_type;
#define PSI5S_KRST1	(*( PSI5S_KRST1_type *) 0xf00073dcu)	/* Kernel Reset Register 1 */

typedef volatile union
{
	struct
	{ 
		unsigned int CLR            : 1;	/* Kernel Reset Status Clear */
		unsigned int                : 31;
	} B;
	int I;
	unsigned int U;

} PSI5S_KRSTCLR_type;
#define PSI5S_KRSTCLR	(*( PSI5S_KRSTCLR_type *) 0xf00073e0u)	/* Kernel Reset Status Clear Register */

typedef volatile union
{
	struct
	{ 
		unsigned int NF0            : 3;	/* Number of expected Frames on Channel 0 */
		unsigned int NF1            : 3;	/* Number of expected Frames on Channel 1 */
		unsigned int NF2            : 3;	/* Number of expected Frames on Channel 2 */
		unsigned int NF3            : 3;	/* Number of expected Frames on Channel 3 */
		unsigned int NF4            : 3;	/* Number of expected Frames on Channel 4 */
		unsigned int NF5            : 3;	/* Number of expected Frames on Channel 5 */
		unsigned int NF6            : 3;	/* Number of expected Frames on Channel 6 */
		unsigned int NF7            : 3;	/* Number of expected Frames on Channel 7 */
		unsigned int                : 8;
	} B;
	int I;
	unsigned int U;

} PSI5S_NFC_type;
#define PSI5S_NFC	(*( PSI5S_NFC_type *) 0xf0007020u)	/* Number of Frames Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32                : 24;
		unsigned __sfrbit32 SUS            : 4;	/* OCDS Suspend Control */
		unsigned __sfrbit32 SUS_P          : 1;	/* SUS Write Protection */
		/* const */ unsigned __sfrbit32 SUSSTA         : 1;	/* Suspend State */
		unsigned __sfrbit32                : 2;
	} B;
	int I;
	unsigned int U;

} PSI5S_OCS_type;
#define PSI5S_OCS	(*( PSI5S_OCS_type *) 0xf00073ccu)	/* OCDS Control and Status */

typedef volatile union
{
	struct
	{ 
		unsigned int TXCMD          : 5;	/* TX Command */
		unsigned int                : 3;
		unsigned int ATXCMD         : 5;	/* Alternate TX Command */
		unsigned int                : 2;
		unsigned int TBS            : 1;	/* Time Base Select */
		unsigned int ETB            : 3;	/* External Time Base Select */
		unsigned int PTE            : 1;	/* Periodic Trigger Enable */
		unsigned int ETS            : 3;	/* External Trigger Select */
		unsigned int ETE            : 1;	/* External Trigger Enable */
		unsigned int                : 8;
	} B;
	int I;
	unsigned int U;

} PSI5S_PGC0_type;
#define PSI5S_PGC0	(*( PSI5S_PGC0_type *) 0xf00070f0u)	/* Pulse Generation Control Register 0 */
#define PSI5S_PGC1	(*( PSI5S_PGC0_type *) 0xf00070f4u)	/* Pulse Generation Control Register 1 */
#define PSI5S_PGC2	(*( PSI5S_PGC0_type *) 0xf00070f8u)	/* Pulse Generation Control Register 2 */
#define PSI5S_PGC3	(*( PSI5S_PGC0_type *) 0xf00070fcu)	/* Pulse Generation Control Register 3 */
#define PSI5S_PGC4	(*( PSI5S_PGC0_type *) 0xf0007100u)	/* Pulse Generation Control Register 4 */
#define PSI5S_PGC5	(*( PSI5S_PGC0_type *) 0xf0007104u)	/* Pulse Generation Control Register 5 */
#define PSI5S_PGC6	(*( PSI5S_PGC0_type *) 0xf0007108u)	/* Pulse Generation Control Register 6 */
#define PSI5S_PGC7	(*( PSI5S_PGC0_type *) 0xf000710cu)	/* Pulse Generation Control Register 7 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int RD_VALUE       : 9;	/* Receive Data Register Value */
		/* const */ unsigned int                : 23;
	} B;
	int I;
	unsigned int U;

} PSI5S_RBUF_type;
#define PSI5S_RBUF	(*( PSI5S_RBUF_type *) 0xf0007224u)	/* Receive Buffer Register */

typedef volatile union
{
	struct
	{ 
		unsigned int CRC0           : 1;	/* CRC or Parity Selection */
		unsigned int CRC1           : 1;	/* CRC or Parity Selection */
		unsigned int CRC2           : 1;	/* CRC or Parity Selection */
		unsigned int CRC3           : 1;	/* CRC or Parity Selection */
		unsigned int CRC4           : 1;	/* CRC or Parity Selection */
		unsigned int CRC5           : 1;	/* CRC or Parity Selection */
		unsigned int TSEN           : 1;	/* Time Stamp Enable */
		unsigned int TSP            : 1;	/* Time Stamp Select */
		unsigned int TSTS           : 1;	/* Time Stamp Trigger Select */
		unsigned int FIDS           : 1;	/* Frame ID Select */
		unsigned int WDMS           : 1;	/* Watch Dog Timer Mode Select */
		unsigned int                : 5;
		unsigned int UFC0           : 2;	/* UART Frame Count per Packet Frame in Slot 0 */
		unsigned int UFC1           : 2;	/* UART Frame Count per Packet Frame in Slot 1 */
		unsigned int UFC2           : 2;	/* UART Frame Count per Packet Frame in Slot 2 */
		unsigned int UFC3           : 2;	/* UART Frame Count per Packet Frame in Slot 3 */
		unsigned int UFC4           : 2;	/* UART Frame Count per Packet Frame in Slot 4 */
		unsigned int UFC5           : 2;	/* UART Frame Count per Packet Frame in Slot 5 */
		unsigned int                : 4;
	} B;
	int I;
	unsigned int U;

} PSI5S_RCRA0_type;
#define PSI5S_RCRA0	(*( PSI5S_RCRA0_type *) 0xf0007030u)	/* Receiver Control Register A0 */
#define PSI5S_RCRA1	(*( PSI5S_RCRA0_type *) 0xf0007034u)	/* Receiver Control Register A1 */
#define PSI5S_RCRA2	(*( PSI5S_RCRA0_type *) 0xf0007038u)	/* Receiver Control Register A2 */
#define PSI5S_RCRA3	(*( PSI5S_RCRA0_type *) 0xf000703cu)	/* Receiver Control Register A3 */
#define PSI5S_RCRA4	(*( PSI5S_RCRA0_type *) 0xf0007040u)	/* Receiver Control Register A4 */
#define PSI5S_RCRA5	(*( PSI5S_RCRA0_type *) 0xf0007044u)	/* Receiver Control Register A5 */
#define PSI5S_RCRA6	(*( PSI5S_RCRA0_type *) 0xf0007048u)	/* Receiver Control Register A6 */
#define PSI5S_RCRA7	(*( PSI5S_RCRA0_type *) 0xf000704cu)	/* Receiver Control Register A7 */

typedef volatile union
{
	struct
	{ 
		unsigned int PDL0           : 5;	/* Payload Data Length */
		unsigned int PDL1           : 5;	/* Payload Data Length */
		unsigned int PDL2           : 5;	/* Payload Data Length */
		unsigned int PDL3           : 5;	/* Payload Data Length */
		unsigned int PDL4           : 5;	/* Payload Data Length */
		unsigned int PDL5           : 5;	/* Payload Data Length */
		unsigned int                : 2;
	} B;
	int I;
	unsigned int U;

} PSI5S_RCRB0_type;
#define PSI5S_RCRB0	(*( PSI5S_RCRB0_type *) 0xf0007050u)	/* Receiver Control Register B0 */
#define PSI5S_RCRB1	(*( PSI5S_RCRB0_type *) 0xf0007054u)	/* Receiver Control Register B1 */
#define PSI5S_RCRB2	(*( PSI5S_RCRB0_type *) 0xf0007058u)	/* Receiver Control Register B2 */
#define PSI5S_RCRB3	(*( PSI5S_RCRB0_type *) 0xf000705cu)	/* Receiver Control Register B3 */
#define PSI5S_RCRB4	(*( PSI5S_RCRB0_type *) 0xf0007060u)	/* Receiver Control Register B4 */
#define PSI5S_RCRB5	(*( PSI5S_RCRB0_type *) 0xf0007064u)	/* Receiver Control Register B5 */
#define PSI5S_RCRB6	(*( PSI5S_RCRB0_type *) 0xf0007068u)	/* Receiver Control Register B6 */
#define PSI5S_RCRB7	(*( PSI5S_RCRB0_type *) 0xf000706cu)	/* Receiver Control Register B7 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int RD0            : 1;	/* PSI5 Receive Data */
		/* const */ unsigned int RD1            : 1;	/* PSI5 Receive Data */
		/* const */ unsigned int RD2            : 1;	/* PSI5 Receive Data */
		/* const */ unsigned int RD3            : 1;	/* PSI5 Receive Data */
		/* const */ unsigned int RD4            : 1;	/* PSI5 Receive Data */
		/* const */ unsigned int RD5            : 1;	/* PSI5 Receive Data */
		/* const */ unsigned int RD6            : 1;	/* PSI5 Receive Data */
		/* const */ unsigned int RD7            : 1;	/* PSI5 Receive Data */
		/* const */ unsigned int RD8            : 1;	/* PSI5 Receive Data */
		/* const */ unsigned int RD9            : 1;	/* PSI5 Receive Data */
		/* const */ unsigned int RD10           : 1;	/* PSI5 Receive Data */
		/* const */ unsigned int RD11           : 1;	/* PSI5 Receive Data */
		/* const */ unsigned int RD12           : 1;	/* PSI5 Receive Data */
		/* const */ unsigned int RD13           : 1;	/* PSI5 Receive Data */
		/* const */ unsigned int RD14           : 1;	/* PSI5 Receive Data */
		/* const */ unsigned int RD15           : 1;	/* PSI5 Receive Data */
		/* const */ unsigned int RD16           : 1;	/* PSI5 Receive Data */
		/* const */ unsigned int RD17           : 1;	/* PSI5 Receive Data */
		/* const */ unsigned int RD18           : 1;	/* PSI5 Receive Data */
		/* const */ unsigned int RD19           : 1;	/* PSI5 Receive Data */
		/* const */ unsigned int RD20           : 1;	/* PSI5 Receive Data */
		/* const */ unsigned int RD21           : 1;	/* PSI5 Receive Data */
		/* const */ unsigned int RD22           : 1;	/* PSI5 Receive Data */
		/* const */ unsigned int RD23           : 1;	/* PSI5 Receive Data */
		/* const */ unsigned int RD24           : 1;	/* PSI5 Receive Data */
		/* const */ unsigned int RD25           : 1;	/* PSI5 Receive Data */
		/* const */ unsigned int RD26           : 1;	/* PSI5 Receive Data */
		/* const */ unsigned int RD27           : 1;	/* PSI5 Receive Data */
		/* const */ unsigned int PFC            : 4;	/* Packet Frame Count */
	} B;
	int I;
	unsigned int U;

} PSI5S_RDR_type;
#define PSI5S_RDR	(*( PSI5S_RDR_type *) 0xf00070b4u)	/* Receive Data Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int XCRC0          : 1;	/* XCRC */
		/* const */ unsigned int XCRC1          : 1;	/* XCRC */
		/* const */ unsigned int XCRC2          : 1;	/* XCRC */
		/* const */ unsigned int XCRC3          : 1;	/* XCRC */
		/* const */ unsigned int XCRC4          : 1;	/* XCRC */
		/* const */ unsigned int XCRC5          : 1;	/* XCRC */
		/* const */ unsigned int XCRCI          : 1;	/* XCRC Error Flag */
		/* const */ unsigned int CRC0           : 1;	/* CRC */
		/* const */ unsigned int CRC1           : 1;	/* CRC */
		/* const */ unsigned int CRC2           : 1;	/* CRC */
		/* const */ unsigned int CRCI           : 1;	/* CRC Error Flag */
		/* const */ unsigned int ERR0           : 1;	/* Error signalling Flag 0 */
		/* const */ unsigned int ERR1           : 1;	/* Error signalling Flag 1 */
		/* const */ unsigned int HDI            : 1;	/* Header Error Signalled Flag */
		/* const */ unsigned int PE             : 1;	/* ASC Parity Error Flag */
		/* const */ unsigned int FE             : 1;	/* ASC Framing Error Flag */
		/* const */ unsigned int OE             : 1;	/* ASC Overrun Error Flag */
		/* const */ unsigned int TEI            : 1;	/* Time Error Flag */
		/* const */ unsigned int RBI            : 1;	/* Receive Buffer Overflow Flag */
		/* const */ unsigned int FID            : 3;	/* Frame ID (Frame Number) */
		/* const */ unsigned int CID            : 3;	/* Channel ID (Channel Number) */
		/* const */ unsigned int AFC            : 3;	/* Actual UART Frame Count */
		/* const */ unsigned int PFC            : 4;	/* Packet Frame Count */
	} B;
	int I;
	unsigned int U;

} PSI5S_RDS_type;
#define PSI5S_RDS	(*( PSI5S_RDS_type *) 0xf00070b0u)	/* Receive Status Register */

typedef volatile union
{
	struct
	{ 
		unsigned int PLL            : 5;	/* Pay Load Length of Registers SDRx */
		unsigned int                : 1;
		unsigned int EPS            : 2;	/* Enhanced Protocol Selection */
		unsigned int BSC            : 1;	/* Bit Stuffing Control */
		unsigned int                : 5;
		unsigned int FLUS           : 1;	/* Flush SDRx */
		unsigned int                : 7;
		unsigned int CRC            : 1;	/* CRC Generation Control */
		unsigned int STA            : 1;	/* Start Sequence Generation Control */
		unsigned int                : 2;
		/* const */ unsigned int TPF            : 1;	/* Transmit in Progress Flag */
		unsigned int                : 5;
	} B;
	int I;
	unsigned int U;

} PSI5S_SCR0_type;
#define PSI5S_SCR0	(*( PSI5S_SCR0_type *) 0xf0007130u)	/* Send Control Register 0 */
#define PSI5S_SCR1	(*( PSI5S_SCR0_type *) 0xf0007134u)	/* Send Control Register 1 */
#define PSI5S_SCR2	(*( PSI5S_SCR0_type *) 0xf0007138u)	/* Send Control Register 2 */
#define PSI5S_SCR3	(*( PSI5S_SCR0_type *) 0xf000713cu)	/* Send Control Register 3 */
#define PSI5S_SCR4	(*( PSI5S_SCR0_type *) 0xf0007140u)	/* Send Control Register 4 */
#define PSI5S_SCR5	(*( PSI5S_SCR0_type *) 0xf0007144u)	/* Send Control Register 5 */
#define PSI5S_SCR6	(*( PSI5S_SCR0_type *) 0xf0007148u)	/* Send Control Register 6 */
#define PSI5S_SCR7	(*( PSI5S_SCR0_type *) 0xf000714cu)	/* Send Control Register 7 */

typedef volatile union
{
	struct
	{ 
		unsigned int SD0            : 1;	/* SD0 */
		unsigned int SD1            : 1;	/* SD1 */
		unsigned int SD2            : 1;	/* SD2 */
		unsigned int SD3            : 1;	/* SD3 */
		unsigned int SD4            : 1;	/* SD4 */
		unsigned int SD5            : 1;	/* SD5 */
		unsigned int SD6            : 1;	/* SD6 */
		unsigned int SD7            : 1;	/* SD7 */
		unsigned int SD8            : 1;	/* SD8 */
		unsigned int SD9            : 1;	/* SD9 */
		unsigned int SD10           : 1;	/* SD10 */
		unsigned int SD11           : 1;	/* SD11 */
		unsigned int SD12           : 1;	/* SD12 */
		unsigned int SD13           : 1;	/* SD13 */
		unsigned int SD14           : 1;	/* SD14 */
		unsigned int SD15           : 1;	/* SD15 */
		unsigned int SD16           : 1;	/* SD16 */
		unsigned int SD17           : 1;	/* SD17 */
		unsigned int SD18           : 1;	/* SD18 */
		unsigned int SD19           : 1;	/* SD19 */
		unsigned int SD20           : 1;	/* SD20 */
		unsigned int SD21           : 1;	/* SD21 */
		unsigned int SD22           : 1;	/* SD22 */
		unsigned int SD23           : 1;	/* SD23 */
		unsigned int                : 8;
	} B;
	int I;
	unsigned int U;

} PSI5S_SDR0_type;
#define PSI5S_SDR0	(*( PSI5S_SDR0_type *) 0xf0007150u)	/* Send Data Register 0 */
#define PSI5S_SDR1	(*( PSI5S_SDR0_type *) 0xf0007154u)	/* Send Data Register 1 */
#define PSI5S_SDR2	(*( PSI5S_SDR0_type *) 0xf0007158u)	/* Send Data Register 2 */
#define PSI5S_SDR3	(*( PSI5S_SDR0_type *) 0xf000715cu)	/* Send Data Register 3 */
#define PSI5S_SDR4	(*( PSI5S_SDR0_type *) 0xf0007160u)	/* Send Data Register 4 */
#define PSI5S_SDR5	(*( PSI5S_SDR0_type *) 0xf0007164u)	/* Send Data Register 5 */
#define PSI5S_SDR6	(*( PSI5S_SDR0_type *) 0xf0007168u)	/* Send Data Register 6 */
#define PSI5S_SDR7	(*( PSI5S_SDR0_type *) 0xf000716cu)	/* Send Data Register 7 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int                : 2;
		/* const */ unsigned int TA             : 30;	/* Target Address */
	} B;
	int I;
	unsigned int U;

} PSI5S_TAR_type;
#define PSI5S_TAR	(*( PSI5S_TAR_type *) 0xf00070d0u)	/* Target Address Register */

typedef volatile union
{
	struct
	{ 
		unsigned int TD_VALUE       : 9;	/* Transmit Data Register Value */
		unsigned int                : 23;
	} B;
	int I;
	unsigned int U;

} PSI5S_TBUF_type;
#define PSI5S_TBUF	(*( PSI5S_TBUF_type *) 0xf0007220u)	/* Transmit Buffer Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int CTS            : 24;	/* Current Time Stamp for the Module */
		unsigned int ETB            : 3;	/* External Time Base Select */
		unsigned int TBS            : 1;	/* Time Base Select */
		unsigned int TBEA           : 1;	/* Time Base Enable TSCNTA */
		unsigned int TBEB           : 1;	/* Time Base Enable TSCNTB */
		unsigned int CLRA           : 1;	/* Clear Time Stamp Counter A */
		unsigned int CLRB           : 1;	/* Clear Time Stamp Counter B */
	} B;
	int I;
	unsigned int U;

} PSI5S_TSCNTA_type;
#define PSI5S_TSCNTA	(*( PSI5S_TSCNTA_type *) 0xf0007014u)	/* Time Stamp Count Register A */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int CTS            : 24;	/* Current Time Stamp for the Module */
		unsigned int ETB            : 3;	/* External Time Base Select */
		unsigned int TBS            : 1;	/* Time Base Select */
		unsigned int                : 4;
	} B;
	int I;
	unsigned int U;

} PSI5S_TSCNTB_type;
#define PSI5S_TSCNTB	(*( PSI5S_TSCNTB_type *) 0xf0007018u)	/* Time Stamp Count Register B */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int TS             : 24;	/* Time Stamp */
		/* const */ unsigned int                : 8;
	} B;
	int I;
	unsigned int U;

} PSI5S_TSCR0_type;
#define PSI5S_TSCR0	(*( PSI5S_TSCR0_type *) 0xf0007090u)	/* Capture Register TSCR0 */
#define PSI5S_TSCR1	(*( PSI5S_TSCR0_type *) 0xf0007094u)	/* Capture Register TSCR1 */
#define PSI5S_TSCR2	(*( PSI5S_TSCR0_type *) 0xf0007098u)	/* Capture Register TSCR2 */
#define PSI5S_TSCR3	(*( PSI5S_TSCR0_type *) 0xf000709cu)	/* Capture Register TSCR3 */
#define PSI5S_TSCR4	(*( PSI5S_TSCR0_type *) 0xf00070a0u)	/* Capture Register TSCR4 */
#define PSI5S_TSCR5	(*( PSI5S_TSCR0_type *) 0xf00070a4u)	/* Capture Register TSCR5 */
#define PSI5S_TSCR6	(*( PSI5S_TSCR0_type *) 0xf00070a8u)	/* Capture Register TSCR6 */
#define PSI5S_TSCR7	(*( PSI5S_TSCR0_type *) 0xf00070acu)	/* Capture Register TSCR7 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int TS             : 24;	/* Time Stamp */
		/* const */ unsigned int                : 4;
		/* const */ unsigned int PFC            : 4;	/* Packet Frame Count */
	} B;
	int I;
	unsigned int U;

} PSI5S_TSM_type;
#define PSI5S_TSM	(*( PSI5S_TSM_type *) 0xf00070b8u)	/* Time Stamp Mirror Register TSM */

typedef volatile union
{
	struct
	{ 
		unsigned int WDL            : 24;	/* Watch Dog Timer Limit */
		unsigned int                : 8;
	} B;
	int I;
	unsigned int U;

} PSI5S_WDT0_type;
#define PSI5S_WDT0	(*( PSI5S_WDT0_type *) 0xf0007070u)	/* Watch Dog Timer Register 0 */
#define PSI5S_WDT1	(*( PSI5S_WDT0_type *) 0xf0007074u)	/* Watch Dog Timer Register 1 */
#define PSI5S_WDT2	(*( PSI5S_WDT0_type *) 0xf0007078u)	/* Watch Dog Timer Register 2 */
#define PSI5S_WDT3	(*( PSI5S_WDT0_type *) 0xf000707cu)	/* Watch Dog Timer Register 3 */
#define PSI5S_WDT4	(*( PSI5S_WDT0_type *) 0xf0007080u)	/* Watch Dog Timer Register 4 */
#define PSI5S_WDT5	(*( PSI5S_WDT0_type *) 0xf0007084u)	/* Watch Dog Timer Register 5 */
#define PSI5S_WDT6	(*( PSI5S_WDT0_type *) 0xf0007088u)	/* Watch Dog Timer Register 6 */
#define PSI5S_WDT7	(*( PSI5S_WDT0_type *) 0xf000708cu)	/* Watch Dog Timer Register 7 */

typedef volatile union
{
	struct
	{ 
		unsigned int                : 4;
		unsigned int CLRREN         : 1;	/* Clear Receiver Enable Bit */
		unsigned int SETREN         : 1;	/* Set Receiver Enable Bit */
		unsigned int                : 2;
		unsigned int CLRPE          : 1;	/* Clear Parity Error Flag */
		unsigned int CLRFE          : 1;	/* Clear Framing Error Flag */
		unsigned int CLROE          : 1;	/* Clear Overrun Error Flag */
		unsigned int SETPE          : 1;	/* Set Parity Error Flag */
		unsigned int SETFE          : 1;	/* Set Framing Error Flag */
		unsigned int SETOE          : 1;	/* Set Overrun Error Flag */
		unsigned int                : 18;
	} B;
	int I;
	unsigned int U;

} PSI5S_WHBCON_type;
#define PSI5S_WHBCON	(*( PSI5S_WHBCON_type *) 0xf0007250u)	/* Write Hardware Bits Control Register */


/* ETH */
typedef volatile union
{
	struct
	{ 
		unsigned int EN0            : 1;	/* Access Enable for Master TAG ID 0 */
		unsigned int EN1            : 1;	/* Access Enable for Master TAG ID 1 */
		unsigned int EN2            : 1;	/* Access Enable for Master TAG ID 2 */
		unsigned int EN3            : 1;	/* Access Enable for Master TAG ID 3 */
		unsigned int EN4            : 1;	/* Access Enable for Master TAG ID 4 */
		unsigned int EN5            : 1;	/* Access Enable for Master TAG ID 5 */
		unsigned int EN6            : 1;	/* Access Enable for Master TAG ID 6 */
		unsigned int EN7            : 1;	/* Access Enable for Master TAG ID 7 */
		unsigned int EN8            : 1;	/* Access Enable for Master TAG ID 8 */
		unsigned int EN9            : 1;	/* Access Enable for Master TAG ID 9 */
		unsigned int EN10           : 1;	/* Access Enable for Master TAG ID 10 */
		unsigned int EN11           : 1;	/* Access Enable for Master TAG ID 11 */
		unsigned int EN12           : 1;	/* Access Enable for Master TAG ID 12 */
		unsigned int EN13           : 1;	/* Access Enable for Master TAG ID 13 */
		unsigned int EN14           : 1;	/* Access Enable for Master TAG ID 14 */
		unsigned int EN15           : 1;	/* Access Enable for Master TAG ID 15 */
		unsigned int EN16           : 1;	/* Access Enable for Master TAG ID 16 */
		unsigned int EN17           : 1;	/* Access Enable for Master TAG ID 17 */
		unsigned int EN18           : 1;	/* Access Enable for Master TAG ID 18 */
		unsigned int EN19           : 1;	/* Access Enable for Master TAG ID 19 */
		unsigned int EN20           : 1;	/* Access Enable for Master TAG ID 20 */
		unsigned int EN21           : 1;	/* Access Enable for Master TAG ID 21 */
		unsigned int EN22           : 1;	/* Access Enable for Master TAG ID 22 */
		unsigned int EN23           : 1;	/* Access Enable for Master TAG ID 23 */
		unsigned int EN24           : 1;	/* Access Enable for Master TAG ID 24 */
		unsigned int EN25           : 1;	/* Access Enable for Master TAG ID 25 */
		unsigned int EN26           : 1;	/* Access Enable for Master TAG ID 26 */
		unsigned int EN27           : 1;	/* Access Enable for Master TAG ID 27 */
		unsigned int EN28           : 1;	/* Access Enable for Master TAG ID 28 */
		unsigned int EN29           : 1;	/* Access Enable for Master TAG ID 29 */
		unsigned int EN30           : 1;	/* Access Enable for Master TAG ID 30 */
		unsigned int EN31           : 1;	/* Access Enable for Master TAG ID 31 */
	} B;
	int I;
	unsigned int U;

} ETH_ACCEN0_type;
#define ETH_ACCEN0	(*( ETH_ACCEN0_type *) 0xf001d00cu)	/* Access Enable Register 0 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int Reserved       : 32;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} ETH_ACCEN1_type;
#define ETH_ACCEN1	(*( ETH_ACCEN1_type *) 0xf001d010u)	/* Access Enable Register 1 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int AXWHSTS        : 1;	/* AXI Master Write Channel or AHB Master Status */
		/* const */ unsigned int AXIRDSTS       : 1;	/* AXI Master Read Channel Status */
		/* const */ unsigned int RESERVED_31_2  : 30;	/* RESERVED_31_2 */
	} B;
	int I;
	unsigned int U;

} ETH_AHB_OR_AXI_STATUS_type;
#define ETH_AHB_OR_AXI_STATUS	(*( ETH_AHB_OR_AXI_STATUS_type *) 0xf001f02cu)	/* Register 11 - AHB or AXI Status Register */

typedef volatile union
{
	struct
	{ 
		unsigned int SWR            : 1;	/* Software Reset */
		unsigned int DA             : 1;	/* DMA Arbitration Scheme */
		unsigned int DSL            : 5;	/* Descriptor Skip Length */
		unsigned int ATDS           : 1;	/* Alternate Descriptor Size */
		unsigned int PBL            : 6;	/* Programmable Burst Length */
		unsigned int PR             : 2;	/* Priority Ratio */
		unsigned int FB             : 1;	/* Fixed Burst */
		unsigned int RPBL           : 6;	/* Rx DMA PBL */
		unsigned int USP            : 1;	/* Use Seperate PBL */
		unsigned int PBLx8          : 1;	/* PBLx8 Mode */
		unsigned int AAL            : 1;	/* Address Aligned Beats */
		unsigned int MB             : 1;	/* Mixed Burst */
		unsigned int TXPR           : 1;	/* Transmit Priority */
		/* const */ unsigned int PRWG           : 2;	/* Channel Priority Weights */
		/* const */ unsigned int RESERVED_31_30 : 2;	/* RESERVED_31_30 */
	} B;
	int I;
	unsigned int U;

} ETH_BUS_MODE_type;
#define ETH_BUS_MODE	(*( ETH_BUS_MODE_type *) 0xf001f000u)	/* Register 0 - Bus Mode Register */

typedef volatile union
{
	struct
	{ 
		unsigned int DISR           : 1;	/* Module Disable Request Bit */
		/* const */ unsigned int DISS           : 1;	/* Module Disable Status Bit */
		unsigned int                : 30;
	} B;
	int I;
	unsigned int U;

} ETH_CLC_type;
#define ETH_CLC	(*( ETH_CLC_type *) 0xf001d000u)	/* Clock Control Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int CURRBUFAPTR    : 32;	/* Host Receive Buffer Address Pointer */
	} B;
	int I;
	unsigned int U;

} ETH_CURRENT_HOST_RECEIVE_BUFFER_ADDRESS_type;
#define ETH_CURRENT_HOST_RECEIVE_BUFFER_ADDRESS	(*( ETH_CURRENT_HOST_RECEIVE_BUFFER_ADDRESS_type *) 0xf001f054u)	/* Register 21 - Current Host Receive Buffer Address Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int CURRDESAPTR    : 32;	/* Host Receive Descriptor Address Pointer */
	} B;
	int I;
	unsigned int U;

} ETH_CURRENT_HOST_RECEIVE_DESCRIPTOR_type;
#define ETH_CURRENT_HOST_RECEIVE_DESCRIPTOR	(*( ETH_CURRENT_HOST_RECEIVE_DESCRIPTOR_type *) 0xf001f04cu)	/* Register 19 - Current Host Receive Descriptor Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int CURTBUFAPTR    : 32;	/* Host Transmit Buffer Address Pointer */
	} B;
	int I;
	unsigned int U;

} ETH_CURRENT_HOST_TRANSMIT_BUFFER_ADDRESS_type;
#define ETH_CURRENT_HOST_TRANSMIT_BUFFER_ADDRESS	(*( ETH_CURRENT_HOST_TRANSMIT_BUFFER_ADDRESS_type *) 0xf001f050u)	/* Register 20 - Current Host Transmit Buffer Address Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int CURTDESAPTR    : 32;	/* Host Transmit Descriptor Address Pointer */
	} B;
	int I;
	unsigned int U;

} ETH_CURRENT_HOST_TRANSMIT_DESCRIPTOR_type;
#define ETH_CURRENT_HOST_TRANSMIT_DESCRIPTOR	(*( ETH_CURRENT_HOST_TRANSMIT_DESCRIPTOR_type *) 0xf001f048u)	/* Register 18 - Current Host Transmit Descriptor Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int RPESTS         : 1;	/* MAC GMII or MII Receive Protocol Engine Status */
		/* const */ unsigned int RFCFCSTS       : 2;	/* MAC Receive Frame Controller FIFO Status */
		/* const */ unsigned int RESERVED_3     : 1;	/* RESERVED_3 */
		/* const */ unsigned int RWCSTS         : 1;	/* MTL Rx FIFO Write Controller Active Status */
		/* const */ unsigned int RRCSTS         : 2;	/* MTL Rx FIFO Read Controller State */
		/* const */ unsigned int RESERVED_7     : 1;	/* RESERVED_7 */
		/* const */ unsigned int RXFSTS         : 2;	/* MTL Rx FIFO Fill-level Status */
		/* const */ unsigned int RESERVED_15_10 : 6;	/* RESERVED_15_10 */
		/* const */ unsigned int TPESTS         : 1;	/* MAC GMII or MII Transmit Protocol Engine Status */
		/* const */ unsigned int TFCSTS         : 2;	/* MAC Transmit Frame Controller Status */
		/* const */ unsigned int TXPAUSED       : 1;	/* MAC transmitter in PAUSE */
		/* const */ unsigned int TRCSTS         : 2;	/* MTL Tx FIFO Read Controller Status */
		/* const */ unsigned int TWCSTS         : 1;	/* MTL Tx FIFO Write Controller Active Status */
		/* const */ unsigned int RESERVED_23    : 1;	/* RESERVED_23 */
		/* const */ unsigned int TXFSTS         : 1;	/* MTL Tx FIFO Not Empty Status */
		/* const */ unsigned int TXSTSFSTS      : 1;	/* MTL TxStatus FIFO Full Status */
		/* const */ unsigned int RESERVED_31_26 : 6;	/* RESERVED_31_26 */
	} B;
	int I;
	unsigned int U;

} ETH_DEBUG_type;
#define ETH_DEBUG	(*( ETH_DEBUG_type *) 0xf001e024u)	/* Register 9 - Debug Register */

typedef volatile union
{
	struct
	{ 
		unsigned int FCA_BPA        : 1;	/* Flow Control Busy or Backpressure Activate */
		unsigned int TFE            : 1;	/* Transmit Flow Control Enable */
		unsigned int RFE            : 1;	/* Receive Flow Control Enable */
		unsigned int UP             : 1;	/* Unicast Pause Frame Detect */
		unsigned int PLT            : 2;	/* Pause Low Threshold */
		/* const */ unsigned int RESERVED_6     : 1;	/* RESERVED_6 */
		unsigned int DZPQ           : 1;	/* Disable Zero-Quanta Pause */
		/* const */ unsigned int RESERVED_15_8  : 8;	/* RESERVED_15_8 */
		unsigned int PT             : 16;	/* Pause Time */
	} B;
	int I;
	unsigned int U;

} ETH_FLOW_CONTROL_type;
#define ETH_FLOW_CONTROL	(*( ETH_FLOW_CONTROL_type *) 0xf001e018u)	/* Register 6 - Flow Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int GB             : 1;	/* GMII Busy */
		unsigned int GW             : 1;	/* GMII Write */
		unsigned int CR             : 4;	/* CSR Clock Range */
		unsigned int GR             : 5;	/* GMII Register */
		unsigned int PA             : 5;	/* Physical Layer Address */
		/* const */ unsigned int RESERVED_31_16 : 16;	/* RESERVED_31_16 */
	} B;
	int I;
	unsigned int U;

} ETH_GMII_ADDRESS_type;
#define ETH_GMII_ADDRESS	(*( ETH_GMII_ADDRESS_type *) 0xf001e010u)	/* Register 4 - GMII Address Register */

typedef volatile union
{
	struct
	{ 
		unsigned int GD             : 16;	/* GMII Data */
		/* const */ unsigned int RESERVED_31_16 : 16;	/* RESERVED_31_16 */
	} B;
	int I;
	unsigned int U;

} ETH_GMII_DATA_type;
#define ETH_GMII_DATA	(*( ETH_GMII_DATA_type *) 0xf001e014u)	/* Register 5 - GMII Data Register */

typedef volatile union
{
	struct
	{ 
		unsigned int ALTI0          : 2;	/* Alternate Input Select */
		unsigned int ALTI1          : 2;	/* Alternate Input Select */
		unsigned int ALTI2          : 2;	/* Alternate Input Select */
		unsigned int ALTI3          : 2;	/* Alternate Input Select */
		unsigned int ALTI4          : 2;	/* Alternate Input Select */
		unsigned int ALTI5          : 2;	/* Alternate Input Select */
		unsigned int ALTI6          : 2;	/* Alternate Input Select */
		unsigned int ALTI7          : 2;	/* Alternate Input Select */
		unsigned int ALTI8          : 2;	/* Alternate Input Select */
		unsigned int ALTI9          : 2;	/* Alternate Input Select */
		unsigned int ALTI10         : 2;	/* Alternate Input Select */
		unsigned int                : 2;
		unsigned int EPR            : 1;	/* External Phy Interface RMMI Mode Bit */
		unsigned int DIV            : 1;	/* Module Clock Divider Request Bit */
		unsigned int                : 6;
	} B;
	int I;
	unsigned int U;

} ETH_GPCTL_type;
#define ETH_GPCTL	(*( ETH_GPCTL_type *) 0xf001d008u)	/* Input and Output Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int HTH            : 32;	/* Hash Table High */
	} B;
	int I;
	unsigned int U;

} ETH_HASH_TABLE_HIGH_type;
#define ETH_HASH_TABLE_HIGH	(*( ETH_HASH_TABLE_HIGH_type *) 0xf001e008u)	/* Register 2 - Hash Table High Register */

typedef volatile union
{
	struct
	{ 
		unsigned int HTL            : 32;	/* Hash Table Low */
	} B;
	int I;
	unsigned int U;

} ETH_HASH_TABLE_LOW_type;
#define ETH_HASH_TABLE_LOW	(*( ETH_HASH_TABLE_LOW_type *) 0xf001e00cu)	/* Register 3 - Hash Table Low Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int MIISEL         : 1;	/* MIISEL */
		/* const */ unsigned int GMIISEL        : 1;	/* GMIISEL */
		/* const */ unsigned int HDSEL          : 1;	/* HDSEL */
		/* const */ unsigned int EXTHASHEN      : 1;	/* EXTHASHEN */
		/* const */ unsigned int HASHSEL        : 1;	/* HASHSEL */
		/* const */ unsigned int ADDMACADRSEL   : 1;	/* ADDMACADRSEL */
		/* const */ unsigned int PCSSEL         : 1;	/* PCSSEL */
		/* const */ unsigned int L3L4FLTREN     : 1;	/* L3L4FLTREN */
		/* const */ unsigned int SMASEL         : 1;	/* SMASEL */
		/* const */ unsigned int RWKSEL         : 1;	/* RWKSEL */
		/* const */ unsigned int MGKSEL         : 1;	/* MGKSEL */
		/* const */ unsigned int MMCSEL         : 1;	/* MMCSEL */
		/* const */ unsigned int TSVER1SEL      : 1;	/* TSVER1SEL */
		/* const */ unsigned int TSVER2SEL      : 1;	/* TSVER2SEL */
		/* const */ unsigned int EEESEL         : 1;	/* EEESEL */
		/* const */ unsigned int AVSEL          : 1;	/* AVSEL */
		/* const */ unsigned int TXCOESEL       : 1;	/* TXCOESEL */
		/* const */ unsigned int RXTYP1COE      : 1;	/* RXTYP1COE */
		/* const */ unsigned int RXTYP2COE      : 1;	/* RXTYP2COE */
		unsigned int RXFIFOSIZE     : 1;	/* RXFIFOSIZE */
		/* const */ unsigned int RXCHCNT        : 2;	/* RXCHCNT */
		/* const */ unsigned int TXCHCNT        : 2;	/* TXCHCNT */
		/* const */ unsigned int ENHDESSEL      : 1;	/* ENHDESSEL */
		/* const */ unsigned int INTTSEN        : 1;	/* INTTSEN */
		/* const */ unsigned int FLEXIPPSEN     : 1;	/* FLEXIPPSEN */
		/* const */ unsigned int SAVLANINS      : 1;	/* SAVLANINS */
		/* const */ unsigned int ACTPHYIF       : 3;	/* Active or Selected PHY interface */
		/* const */ unsigned int RESERVED_31    : 1;	/* RESERVED_31 */
	} B;
	int I;
	unsigned int U;

} ETH_HW_FEATURE_type;
#define ETH_HW_FEATURE	(*( ETH_HW_FEATURE_type *) 0xf001f058u)	/* Register 22 - HW Feature Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int MODREV         : 8;	/* Module Revision Number */
		/* const */ unsigned int MODTYPE        : 8;	/* Module Type */
		/* const */ unsigned int MODNUM         : 16;	/* Module Number Value */
	} B;
	int I;
	unsigned int U;

} ETH_ID_type;
#define ETH_ID	(*( ETH_ID_type *) 0xf001d004u)	/* Module Identification Register */

typedef volatile union
{
	struct
	{ 
		unsigned int TIE            : 1;	/* Transmit Interrupt Enable */
		unsigned int TSE            : 1;	/* Transmit Stopped Enable */
		unsigned int TUE            : 1;	/* Transmit Buffer Unvailable Enable */
		unsigned int TJE            : 1;	/* Transmit Jabber Timeout Enable */
		unsigned int OVE            : 1;	/* Overflow Interrupt Enable */
		unsigned int UNE            : 1;	/* Underflow Interrupt Enable */
		unsigned int RIE            : 1;	/* Receive Interrupt Enable */
		unsigned int RUE            : 1;	/* Receive Buffer Unavailable Enable */
		unsigned int RSE            : 1;	/* Receive Stopped Enable */
		unsigned int RWE            : 1;	/* Receive Watchdog Timeout Enable */
		unsigned int ETE            : 1;	/* Early Transmit Interrupt Enable */
		/* const */ unsigned int RESERVED_12_11 : 2;	/* RESERVED_12_11 */
		unsigned int FBE            : 1;	/* Fatal Bus Error Enable */
		unsigned int ERE            : 1;	/* Early Receive Interrupt Enable */
		unsigned int AIE            : 1;	/* Abnormal Interrupt Summary Enable */
		unsigned int NIE            : 1;	/* Normal Interrupt Summary Enable */
		/* const */ unsigned int RESERVED_31_17 : 15;	/* RESERVED_31_17 */
	} B;
	int I;
	unsigned int U;

} ETH_INTERRUPT_ENABLE_type;
#define ETH_INTERRUPT_ENABLE	(*( ETH_INTERRUPT_ENABLE_type *) 0xf001f01cu)	/* Register 7 - Interrupt Enable Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int RGSMIIIM       : 1;	/* RGMII or SMII Interrupt Mask */
		/* const */ unsigned int PCSLCHGIM      : 1;	/* PCS Link Status Interrupt Mask */
		/* const */ unsigned int PCSANCIM       : 1;	/* PCS AN Completion Interrupt Mask */
		unsigned int PMTIM          : 1;	/* PMT Interrupt Mask */
		/* const */ unsigned int RESERVED_8_4   : 5;	/* RESERVED_8_4 */
		unsigned int TSIM           : 1;	/* Timestamp Interrupt Mask */
		/* const */ unsigned int LPIIM          : 1;	/* LPI Interrupt Mask */
		/* const */ unsigned int RESERVED_31_11 : 21;	/* RESERVED_31_11 */
	} B;
	int I;
	unsigned int U;

} ETH_INTERRUPT_MASK_type;
#define ETH_INTERRUPT_MASK	(*( ETH_INTERRUPT_MASK_type *) 0xf001e03cu)	/* Register 15 - Interrupt Mask Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int RGSMIIIS       : 1;	/* RGMII or SMII Interrupt Status */
		/* const */ unsigned int PCSLCHGIS      : 1;	/* PCS Link Status Changed */
		/* const */ unsigned int PCSANCIS       : 1;	/* PCS Auto-Negotiation Complete */
		/* const */ unsigned int PMTIS          : 1;	/* PMT Interrupt Status */
		/* const */ unsigned int MMCIS          : 1;	/* MMC Interrupt Status */
		/* const */ unsigned int MMCRXIS        : 1;	/* MMC Receive Interrupt Status */
		/* const */ unsigned int MMCTXIS        : 1;	/* MMC Transmit Interrupt Status */
		/* const */ unsigned int MMCRXIPIS      : 1;	/* MMC Receive Checksum Offload Interrupt Status */
		/* const */ unsigned int RESERVED_8     : 1;	/* RESERVED_8 */
		/* const */ unsigned int TSIS           : 1;	/* Timestamp Interrupt Status */
		/* const */ unsigned int LPIIS          : 1;	/* LPI Interrupt Status */
		/* const */ unsigned int RESERVED_31_11 : 21;	/* RESERVED_31_11 */
	} B;
	int I;
	unsigned int U;

} ETH_INTERRUPT_STATUS_type;
#define ETH_INTERRUPT_STATUS	(*( ETH_INTERRUPT_STATUS_type *) 0xf001e038u)	/* Register 14 - Interrupt Register */

typedef volatile union
{
	struct
	{ 
		unsigned int RST            : 1;	/* Kernel Reset */
		/* const */ unsigned int RSTSTAT        : 1;	/* Kernel Reset Status */
		unsigned int                : 30;
	} B;
	int I;
	unsigned int U;

} ETH_KRST0_type;
#define ETH_KRST0	(*( ETH_KRST0_type *) 0xf001d014u)	/* Kernel Reset Register 0 */

typedef volatile union
{
	struct
	{ 
		unsigned int RST            : 1;	/* Kernel Reset */
		unsigned int                : 31;
	} B;
	int I;
	unsigned int U;

} ETH_KRST1_type;
#define ETH_KRST1	(*( ETH_KRST1_type *) 0xf001d018u)	/* Kernel Reset Register 1 */

typedef volatile union
{
	struct
	{ 
		unsigned int CLR            : 1;	/* Kernel Reset Status Clear */
		unsigned int                : 31;
	} B;
	int I;
	unsigned int U;

} ETH_KRSTCLR_type;
#define ETH_KRSTCLR	(*( ETH_KRSTCLR_type *) 0xf001d01cu)	/* Kernel Reset Status Clear Register */

typedef volatile union
{
	struct
	{ 
		unsigned int ADDRHI         : 16;	/* MAC Address0 [47:32] */
		/* const */ unsigned int RESERVED_30_16 : 15;	/* RESERVED_30_16 */
		/* const */ unsigned int AE             : 1;	/* Address Enable */
	} B;
	int I;
	unsigned int U;

} ETH_MAC_ADDRESS0_HIGH_type;
#define ETH_MAC_ADDRESS0_HIGH	(*( ETH_MAC_ADDRESS0_HIGH_type *) 0xf001e040u)	/* Register 16 - MAC Address0 High Register */

typedef volatile union
{
	struct
	{ 
		unsigned int ADDRLO         : 32;	/* MAC Address0 [31:0] */
	} B;
	int I;
	unsigned int U;

} ETH_MAC_ADDRESS0_LOW_type;
#define ETH_MAC_ADDRESS0_LOW	(*( ETH_MAC_ADDRESS0_LOW_type *) 0xf001e044u)	/* Register 17 - MAC Address0 Low Register */

typedef volatile union
{
	struct
	{ 
		unsigned int ADDRHI         : 16;	/* MAC Address10 [47:32] */
		/* const */ unsigned int RESERVED_23_16 : 8;	/* RESERVED_23_16 */
		unsigned int MBC            : 6;	/* Mask Byte Control */
		unsigned int SA             : 1;	/* Source Address */
		unsigned int AE             : 1;	/* Address Enable */
	} B;
	int I;
	unsigned int U;

} ETH_MAC_ADDRESS10_HIGH_type;
#define ETH_MAC_ADDRESS10_HIGH	(*( ETH_MAC_ADDRESS10_HIGH_type *) 0xf001e090u)	/* Register 36 - MAC Address10 High Register */

typedef volatile union
{
	struct
	{ 
		unsigned int ADDRLO         : 32;	/* MAC Address10 [31:0] */
	} B;
	int I;
	unsigned int U;

} ETH_MAC_ADDRESS10_LOW_type;
#define ETH_MAC_ADDRESS10_LOW	(*( ETH_MAC_ADDRESS10_LOW_type *) 0xf001e094u)	/* Register 37 - MAC Address10 Low Register */

typedef volatile union
{
	struct
	{ 
		unsigned int ADDRHI         : 16;	/* MAC Address11 [47:32] */
		/* const */ unsigned int RESERVED_23_16 : 8;	/* RESERVED_23_16 */
		unsigned int MBC            : 6;	/* Mask Byte Control */
		unsigned int SA             : 1;	/* Source Address */
		unsigned int AE             : 1;	/* Address Enable */
	} B;
	int I;
	unsigned int U;

} ETH_MAC_ADDRESS11_HIGH_type;
#define ETH_MAC_ADDRESS11_HIGH	(*( ETH_MAC_ADDRESS11_HIGH_type *) 0xf001e098u)	/* Register 38 - MAC Address11 High Register */

typedef volatile union
{
	struct
	{ 
		unsigned int ADDRLO         : 32;	/* MAC Address11 [31:0] */
	} B;
	int I;
	unsigned int U;

} ETH_MAC_ADDRESS11_LOW_type;
#define ETH_MAC_ADDRESS11_LOW	(*( ETH_MAC_ADDRESS11_LOW_type *) 0xf001e09cu)	/* Register 39 - MAC Address1 Low Register */

typedef volatile union
{
	struct
	{ 
		unsigned int ADDRHI         : 16;	/* MAC Address12 [47:32] */
		/* const */ unsigned int RESERVED_23_16 : 8;	/* RESERVED_23_16 */
		unsigned int MBC            : 6;	/* Mask Byte Control */
		unsigned int SA             : 1;	/* Source Address */
		unsigned int AE             : 1;	/* Address Enable */
	} B;
	int I;
	unsigned int U;

} ETH_MAC_ADDRESS12_HIGH_type;
#define ETH_MAC_ADDRESS12_HIGH	(*( ETH_MAC_ADDRESS12_HIGH_type *) 0xf001e0a0u)	/* Register 40 - MAC Address12 High Register */

typedef volatile union
{
	struct
	{ 
		unsigned int ADDRLO         : 32;	/* MAC Address12 [31:0] */
	} B;
	int I;
	unsigned int U;

} ETH_MAC_ADDRESS12_LOW_type;
#define ETH_MAC_ADDRESS12_LOW	(*( ETH_MAC_ADDRESS12_LOW_type *) 0xf001e0a4u)	/* Register 41 - MAC Address12 Low Register */

typedef volatile union
{
	struct
	{ 
		unsigned int ADDRHI         : 16;	/* MAC Address13 [47:32] */
		/* const */ unsigned int RESERVED_23_16 : 8;	/* RESERVED_23_16 */
		unsigned int MBC            : 6;	/* Mask Byte Control */
		unsigned int SA             : 1;	/* Source Address */
		unsigned int AE             : 1;	/* Address Enable */
	} B;
	int I;
	unsigned int U;

} ETH_MAC_ADDRESS13_HIGH_type;
#define ETH_MAC_ADDRESS13_HIGH	(*( ETH_MAC_ADDRESS13_HIGH_type *) 0xf001e0a8u)	/* Register 42 - MAC Address13 High Register */

typedef volatile union
{
	struct
	{ 
		unsigned int ADDRLO         : 32;	/* MAC Address13 [31:0] */
	} B;
	int I;
	unsigned int U;

} ETH_MAC_ADDRESS13_LOW_type;
#define ETH_MAC_ADDRESS13_LOW	(*( ETH_MAC_ADDRESS13_LOW_type *) 0xf001e0acu)	/* Register 43 - MAC Address13 Low Register */

typedef volatile union
{
	struct
	{ 
		unsigned int ADDRHI         : 16;	/* MAC Address14 [47:32] */
		/* const */ unsigned int RESERVED_23_16 : 8;	/* RESERVED_23_16 */
		unsigned int MBC            : 6;	/* Mask Byte Control */
		unsigned int SA             : 1;	/* Source Address */
		unsigned int AE             : 1;	/* Address Enable */
	} B;
	int I;
	unsigned int U;

} ETH_MAC_ADDRESS14_HIGH_type;
#define ETH_MAC_ADDRESS14_HIGH	(*( ETH_MAC_ADDRESS14_HIGH_type *) 0xf001e0b0u)	/* Register 44 - MAC Address14 High Register */

typedef volatile union
{
	struct
	{ 
		unsigned int ADDRLO         : 32;	/* MAC Address14 [31:0] */
	} B;
	int I;
	unsigned int U;

} ETH_MAC_ADDRESS14_LOW_type;
#define ETH_MAC_ADDRESS14_LOW	(*( ETH_MAC_ADDRESS14_LOW_type *) 0xf001e0b4u)	/* Register 45 - MAC Address14 Low Register */

typedef volatile union
{
	struct
	{ 
		unsigned int ADDRHI         : 16;	/* ADDRHI */
		/* const */ unsigned int RESERVED_23_16 : 8;	/* RESERVED_23_16 */
		unsigned int MBC            : 6;	/* Mask Byte Control */
		unsigned int SA             : 1;	/* Source Address */
		unsigned int AE             : 1;	/* Address Enable */
	} B;
	int I;
	unsigned int U;

} ETH_MAC_ADDRESS15_HIGH_type;
#define ETH_MAC_ADDRESS15_HIGH	(*( ETH_MAC_ADDRESS15_HIGH_type *) 0xf001e0b8u)	/* Register 46 - MAC Address15 High Register */

typedef volatile union
{
	struct
	{ 
		unsigned int ADDRLO         : 32;	/* MAC Address15 [31:0] */
	} B;
	int I;
	unsigned int U;

} ETH_MAC_ADDRESS15_LOW_type;
#define ETH_MAC_ADDRESS15_LOW	(*( ETH_MAC_ADDRESS15_LOW_type *) 0xf001e0bcu)	/* Register 47 - MAC Address15 Low Register */

typedef volatile union
{
	struct
	{ 
		unsigned int ADDRHI         : 16;	/* MAC Address16 [47:32] */
		/* const */ unsigned int RESERVED_23_16 : 8;	/* RESERVED_23_16 */
		unsigned int MBC            : 6;	/* Mask Byte Control */
		unsigned int SA             : 1;	/* Source Address */
		unsigned int AE             : 1;	/* Address Enable */
	} B;
	int I;
	unsigned int U;

} ETH_MAC_ADDRESS16_HIGH_type;
#define ETH_MAC_ADDRESS16_HIGH	(*( ETH_MAC_ADDRESS16_HIGH_type *) 0xf001e800u)	/* Register 512 - MAC Address16 High Register */

typedef volatile union
{
	struct
	{ 
		unsigned int ADDRLO         : 32;	/* MAC Address16 [31:0] */
	} B;
	int I;
	unsigned int U;

} ETH_MAC_ADDRESS16_LOW_type;
#define ETH_MAC_ADDRESS16_LOW	(*( ETH_MAC_ADDRESS16_LOW_type *) 0xf001e804u)	/* Register 513 - MAC Address16 Low Register */

typedef volatile union
{
	struct
	{ 
		unsigned int ADDRHI         : 16;	/* MAC Address18 [47:32] */
		/* const */ unsigned int RESERVED_23_16 : 8;	/* RESERVED_23_16 */
		unsigned int MBC            : 6;	/* Mask Byte Control */
		unsigned int SA             : 1;	/* Source Address */
		unsigned int AE             : 1;	/* Address Enable */
	} B;
	int I;
	unsigned int U;

} ETH_MAC_ADDRESS17_HIGH_type;
#define ETH_MAC_ADDRESS17_HIGH	(*( ETH_MAC_ADDRESS17_HIGH_type *) 0xf001e808u)	/* Register 514 - MAC Address17 High Register */
#define ETH_MAC_ADDRESS18_HIGH	(*( ETH_MAC_ADDRESS17_HIGH_type *) 0xf001e810u)	/* Register 516 - MAC Address18 High Register */

typedef volatile union
{
	struct
	{ 
		unsigned int ADDRLO         : 32;	/* MAC Address17 [31:0] */
	} B;
	int I;
	unsigned int U;

} ETH_MAC_ADDRESS17_LOW_type;
#define ETH_MAC_ADDRESS17_LOW	(*( ETH_MAC_ADDRESS17_LOW_type *) 0xf001e80cu)	/* Register 515 - MAC Address17 Low Register */

typedef volatile union
{
	struct
	{ 
		unsigned int ADDRLO         : 32;	/* MAC Address18 [31:0] */
	} B;
	int I;
	unsigned int U;

} ETH_MAC_ADDRESS18_LOW_type;
#define ETH_MAC_ADDRESS18_LOW	(*( ETH_MAC_ADDRESS18_LOW_type *) 0xf001e814u)	/* Register 517 - MAC Address18 Low Register */

typedef volatile union
{
	struct
	{ 
		unsigned int ADDRHI         : 16;	/* MAC Address19 [47:32] */
		/* const */ unsigned int RESERVED_23_16 : 8;	/* RESERVED_23_16 */
		unsigned int MBC            : 6;	/* Mask Byte Control */
		unsigned int SA             : 1;	/* Source Address */
		unsigned int AE             : 1;	/* Address Enable */
	} B;
	int I;
	unsigned int U;

} ETH_MAC_ADDRESS19_HIGH_type;
#define ETH_MAC_ADDRESS19_HIGH	(*( ETH_MAC_ADDRESS19_HIGH_type *) 0xf001e818u)	/* Register 518 - MAC Address19 High Register */

typedef volatile union
{
	struct
	{ 
		unsigned int ADDRLO         : 32;	/* MAC Address19 [31:0] */
	} B;
	int I;
	unsigned int U;

} ETH_MAC_ADDRESS19_LOW_type;
#define ETH_MAC_ADDRESS19_LOW	(*( ETH_MAC_ADDRESS19_LOW_type *) 0xf001e81cu)	/* Register 519 - MAC Address19 Low Register */

typedef volatile union
{
	struct
	{ 
		unsigned int ADDRHI         : 16;	/* MAC Address1 [47:32] */
		/* const */ unsigned int RESERVED_23_16 : 8;	/* RESERVED_23_16 */
		unsigned int MBC            : 6;	/* Mask Byte Control */
		unsigned int SA             : 1;	/* Source Address */
		unsigned int AE             : 1;	/* Address Enable */
	} B;
	int I;
	unsigned int U;

} ETH_MAC_ADDRESS1_HIGH_type;
#define ETH_MAC_ADDRESS1_HIGH	(*( ETH_MAC_ADDRESS1_HIGH_type *) 0xf001e048u)	/* Register 18 - MAC Address1 High Register */
#define ETH_MAC_ADDRESS24_HIGH	(*( ETH_MAC_ADDRESS1_HIGH_type *) 0xf001e840u)	/* Register 528 - MAC Address24 High Register */

typedef volatile union
{
	struct
	{ 
		unsigned int ADDRLO         : 32;	/* MAC Address1 [31:0] */
	} B;
	int I;
	unsigned int U;

} ETH_MAC_ADDRESS1_LOW_type;
#define ETH_MAC_ADDRESS1_LOW	(*( ETH_MAC_ADDRESS1_LOW_type *) 0xf001e04cu)	/* Register 19 - MAC Address1 Low Register */

typedef volatile union
{
	struct
	{ 
		unsigned int ADDRHI         : 16;	/* MAC Address20 [47:32] */
		/* const */ unsigned int RESERVED_23_16 : 8;	/* RESERVED_23_16 */
		unsigned int MBC            : 6;	/* Mask Byte Control */
		unsigned int SA             : 1;	/* Source Address */
		unsigned int AE             : 1;	/* Address Enable */
	} B;
	int I;
	unsigned int U;

} ETH_MAC_ADDRESS20_HIGH_type;
#define ETH_MAC_ADDRESS20_HIGH	(*( ETH_MAC_ADDRESS20_HIGH_type *) 0xf001e820u)	/* Register 520 - MAC Address20 High Register */

typedef volatile union
{
	struct
	{ 
		unsigned int ADDRLO         : 32;	/* MAC Address20 [31:0] */
	} B;
	int I;
	unsigned int U;

} ETH_MAC_ADDRESS20_LOW_type;
#define ETH_MAC_ADDRESS20_LOW	(*( ETH_MAC_ADDRESS20_LOW_type *) 0xf001e824u)	/* Register 521 - MAC Address20 Low Register */

typedef volatile union
{
	struct
	{ 
		unsigned int ADDRHI         : 16;	/* MAC Address21 [47:32] */
		/* const */ unsigned int RESERVED_23_16 : 8;	/* RESERVED_23_16 */
		unsigned int MBC            : 6;	/* Mask Byte Control */
		unsigned int SA             : 1;	/* Source Address */
		unsigned int AE             : 1;	/* Address Enable */
	} B;
	int I;
	unsigned int U;

} ETH_MAC_ADDRESS21_HIGH_type;
#define ETH_MAC_ADDRESS21_HIGH	(*( ETH_MAC_ADDRESS21_HIGH_type *) 0xf001e828u)	/* Register 522 - MAC Address21 High Register */

typedef volatile union
{
	struct
	{ 
		unsigned int ADDRLO         : 32;	/* MAC Address21 [31:0] */
	} B;
	int I;
	unsigned int U;

} ETH_MAC_ADDRESS21_LOW_type;
#define ETH_MAC_ADDRESS21_LOW	(*( ETH_MAC_ADDRESS21_LOW_type *) 0xf001e82cu)	/* Register 523 - MAC Address21 Low Register */

typedef volatile union
{
	struct
	{ 
		unsigned int ADDRHI         : 16;	/* MAC Address22 [47:32] */
		/* const */ unsigned int RESERVED_23_16 : 8;	/* RESERVED_23_16 */
		unsigned int MBC            : 6;	/* Mask Byte Control */
		unsigned int SA             : 1;	/* Source Address */
		unsigned int AE             : 1;	/* Address Enable */
	} B;
	int I;
	unsigned int U;

} ETH_MAC_ADDRESS22_HIGH_type;
#define ETH_MAC_ADDRESS22_HIGH	(*( ETH_MAC_ADDRESS22_HIGH_type *) 0xf001e830u)	/* Register 524 - MAC Address22 High Register */

typedef volatile union
{
	struct
	{ 
		unsigned int ADDRLO         : 32;	/* MAC Address22 [31:0] */
	} B;
	int I;
	unsigned int U;

} ETH_MAC_ADDRESS22_LOW_type;
#define ETH_MAC_ADDRESS22_LOW	(*( ETH_MAC_ADDRESS22_LOW_type *) 0xf001e834u)	/* Register 525 - MAC Address22 Low Register */

typedef volatile union
{
	struct
	{ 
		unsigned int ADDRHI         : 16;	/* MAC Address23 [47:32] */
		/* const */ unsigned int RESERVED_23_16 : 8;	/* RESERVED_23_16 */
		unsigned int MBC            : 6;	/* Mask Byte Control */
		unsigned int SA             : 1;	/* Source Address */
		unsigned int AE             : 1;	/* Address Enable */
	} B;
	int I;
	unsigned int U;

} ETH_MAC_ADDRESS23_HIGH_type;
#define ETH_MAC_ADDRESS23_HIGH	(*( ETH_MAC_ADDRESS23_HIGH_type *) 0xf001e838u)	/* Register 526 - */

typedef volatile union
{
	struct
	{ 
		unsigned int ADDRLO         : 32;	/* MAC Address23 [31:0] */
	} B;
	int I;
	unsigned int U;

} ETH_MAC_ADDRESS23_LOW_type;
#define ETH_MAC_ADDRESS23_LOW	(*( ETH_MAC_ADDRESS23_LOW_type *) 0xf001e83cu)	/* Register 527 - MAC Address23 Low Register */

typedef volatile union
{
	struct
	{ 
		unsigned int ADDRLO         : 32;	/* MAC Address24 [31:0] */
	} B;
	int I;
	unsigned int U;

} ETH_MAC_ADDRESS24_LOW_type;
#define ETH_MAC_ADDRESS24_LOW	(*( ETH_MAC_ADDRESS24_LOW_type *) 0xf001e844u)	/* Register 529 - MAC Address24 Low Register */

typedef volatile union
{
	struct
	{ 
		unsigned int ADDRHI         : 16;	/* MAC Address25 [47:32] */
		/* const */ unsigned int RESERVED_23_16 : 8;	/* RESERVED_23_16 */
		unsigned int MBC            : 6;	/* Mask Byte Control */
		unsigned int SA             : 1;	/* Source Address */
		unsigned int AE             : 1;	/* Address Enable */
	} B;
	int I;
	unsigned int U;

} ETH_MAC_ADDRESS25_HIGH_type;
#define ETH_MAC_ADDRESS25_HIGH	(*( ETH_MAC_ADDRESS25_HIGH_type *) 0xf001e848u)	/* Register 530 - MAC Address25 High Register */

typedef volatile union
{
	struct
	{ 
		unsigned int ADDRLO         : 32;	/* MAC Address25 [31:0] */
	} B;
	int I;
	unsigned int U;

} ETH_MAC_ADDRESS25_LOW_type;
#define ETH_MAC_ADDRESS25_LOW	(*( ETH_MAC_ADDRESS25_LOW_type *) 0xf001e84cu)	/* Register 531 - MAC Address25 Low Register */

typedef volatile union
{
	struct
	{ 
		unsigned int ADDRHI         : 16;	/* MAC Address26 [47:32] */
		/* const */ unsigned int RESERVED_23_16 : 8;	/* RESERVED_23_16 */
		unsigned int MBC            : 6;	/* Mask Byte Control */
		unsigned int SA             : 1;	/* Source Address */
		unsigned int AE             : 1;	/* Address Enable */
	} B;
	int I;
	unsigned int U;

} ETH_MAC_ADDRESS26_HIGH_type;
#define ETH_MAC_ADDRESS26_HIGH	(*( ETH_MAC_ADDRESS26_HIGH_type *) 0xf001e850u)	/* Register 532 - MAC Address26 High Register */

typedef volatile union
{
	struct
	{ 
		unsigned int ADDRLO         : 32;	/* MAC Address26 [31:0] */
	} B;
	int I;
	unsigned int U;

} ETH_MAC_ADDRESS26_LOW_type;
#define ETH_MAC_ADDRESS26_LOW	(*( ETH_MAC_ADDRESS26_LOW_type *) 0xf001e854u)	/* Register 533 - MAC Address26 Low Register */

typedef volatile union
{
	struct
	{ 
		unsigned int ADDRHI         : 16;	/* MAC Address27 [47:32] */
		/* const */ unsigned int RESERVED_23_16 : 8;	/* RESERVED_23_16 */
		unsigned int MBC            : 6;	/* Mask Byte Control */
		unsigned int SA             : 1;	/* Source Address */
		unsigned int AE             : 1;	/* Address Enable */
	} B;
	int I;
	unsigned int U;

} ETH_MAC_ADDRESS27_HIGH_type;
#define ETH_MAC_ADDRESS27_HIGH	(*( ETH_MAC_ADDRESS27_HIGH_type *) 0xf001e858u)	/* Register 534 - MAC Address27 High Register */

typedef volatile union
{
	struct
	{ 
		unsigned int ADDRLO         : 32;	/* MAC Address27 [31:0] */
	} B;
	int I;
	unsigned int U;

} ETH_MAC_ADDRESS27_LOW_type;
#define ETH_MAC_ADDRESS27_LOW	(*( ETH_MAC_ADDRESS27_LOW_type *) 0xf001e85cu)	/* Register 535 - MAC Address27 Low Register */

typedef volatile union
{
	struct
	{ 
		unsigned int ADDRHI         : 16;	/* MAC Address28 [47:32] */
		/* const */ unsigned int RESERVED_23_16 : 8;	/* RESERVED_23_16 */
		unsigned int MBC            : 6;	/* Mask Byte Control */
		unsigned int SA             : 1;	/* Source Address */
		unsigned int AE             : 1;	/* Address Enable */
	} B;
	int I;
	unsigned int U;

} ETH_MAC_ADDRESS28_HIGH_type;
#define ETH_MAC_ADDRESS28_HIGH	(*( ETH_MAC_ADDRESS28_HIGH_type *) 0xf001e860u)	/* Register 536 - MAC Address28 High Register */

typedef volatile union
{
	struct
	{ 
		unsigned int ADDRLO         : 32;	/* MAC Address28 [31:0] */
	} B;
	int I;
	unsigned int U;

} ETH_MAC_ADDRESS28_LOW_type;
#define ETH_MAC_ADDRESS28_LOW	(*( ETH_MAC_ADDRESS28_LOW_type *) 0xf001e864u)	/* Register 537 - MAC Address28 Low Register */

typedef volatile union
{
	struct
	{ 
		unsigned int ADDRHI         : 16;	/* MAC Address29 [47:32] */
		/* const */ unsigned int RESERVED_23_16 : 8;	/* RESERVED_23_16 */
		unsigned int MBC            : 6;	/* Mask Byte Control */
		unsigned int SA             : 1;	/* Source Address */
		unsigned int AE             : 1;	/* Address Enable */
	} B;
	int I;
	unsigned int U;

} ETH_MAC_ADDRESS29_HIGH_type;
#define ETH_MAC_ADDRESS29_HIGH	(*( ETH_MAC_ADDRESS29_HIGH_type *) 0xf001e868u)	/* Register 538 - MAC Address29 High Register */

typedef volatile union
{
	struct
	{ 
		unsigned int ADDRLO         : 32;	/* MAC Address29 [31:0] */
	} B;
	int I;
	unsigned int U;

} ETH_MAC_ADDRESS29_LOW_type;
#define ETH_MAC_ADDRESS29_LOW	(*( ETH_MAC_ADDRESS29_LOW_type *) 0xf001e86cu)	/* Register 539 - MAC Address29 Low Register */

typedef volatile union
{
	struct
	{ 
		unsigned int ADDRHI         : 16;	/* MAC Address2 [47:32] */
		/* const */ unsigned int RESERVED_23_16 : 8;	/* RESERVED_23_16 */
		unsigned int MBC            : 6;	/* Mask Byte Control */
		unsigned int SA             : 1;	/* Source Address */
		unsigned int AE             : 1;	/* Address Enable */
	} B;
	int I;
	unsigned int U;

} ETH_MAC_ADDRESS2_HIGH_type;
#define ETH_MAC_ADDRESS2_HIGH	(*( ETH_MAC_ADDRESS2_HIGH_type *) 0xf001e050u)	/* Register 20 - MAC Address2 High Register */

typedef volatile union
{
	struct
	{ 
		unsigned int ADDRLO         : 32;	/* MAC Address2 [31:0] */
	} B;
	int I;
	unsigned int U;

} ETH_MAC_ADDRESS2_LOW_type;
#define ETH_MAC_ADDRESS2_LOW	(*( ETH_MAC_ADDRESS2_LOW_type *) 0xf001e054u)	/* Register 21 - MAC Address2 Low Register */

typedef volatile union
{
	struct
	{ 
		unsigned int ADDRHI         : 16;	/* MAC Address30 [47:32] */
		/* const */ unsigned int RESERVED_23_16 : 8;	/* RESERVED_23_16 */
		unsigned int MBC            : 6;	/* Mask Byte Control */
		unsigned int SA             : 1;	/* Source Address */
		unsigned int AE             : 1;	/* Address Enable */
	} B;
	int I;
	unsigned int U;

} ETH_MAC_ADDRESS30_HIGH_type;
#define ETH_MAC_ADDRESS30_HIGH	(*( ETH_MAC_ADDRESS30_HIGH_type *) 0xf001e870u)	/* Register 540 - MAC Address30 High Register */

typedef volatile union
{
	struct
	{ 
		unsigned int ADDRLO         : 32;	/* MAC Address30 [31:0] */
	} B;
	int I;
	unsigned int U;

} ETH_MAC_ADDRESS30_LOW_type;
#define ETH_MAC_ADDRESS30_LOW	(*( ETH_MAC_ADDRESS30_LOW_type *) 0xf001e874u)	/* Register 541 - MAC Address30 Low Register */

typedef volatile union
{
	struct
	{ 
		unsigned int ADDRHI         : 16;	/* MAC Address31 [47:32] */
		/* const */ unsigned int RESERVED_23_16 : 8;	/* RESERVED_23_16 */
		unsigned int MBC            : 6;	/* Mask Byte Control */
		unsigned int SA             : 1;	/* Source Address */
		unsigned int AE             : 1;	/* Address Enable */
	} B;
	int I;
	unsigned int U;

} ETH_MAC_ADDRESS31_HIGH_type;
#define ETH_MAC_ADDRESS31_HIGH	(*( ETH_MAC_ADDRESS31_HIGH_type *) 0xf001e878u)	/* Register 542 - MAC Address31 High Register */

typedef volatile union
{
	struct
	{ 
		unsigned int ADDRLO         : 32;	/* MAC Address31 [31:0] */
	} B;
	int I;
	unsigned int U;

} ETH_MAC_ADDRESS31_LOW_type;
#define ETH_MAC_ADDRESS31_LOW	(*( ETH_MAC_ADDRESS31_LOW_type *) 0xf001e87cu)	/* Register 543 - MAC Address31 Low Register */

typedef volatile union
{
	struct
	{ 
		unsigned int ADDRHI         : 16;	/* MAC Address3 [47:32] */
		/* const */ unsigned int RESERVED_23_16 : 8;	/* RESERVED_23_16 */
		unsigned int MBC            : 6;	/* Mask Byte Control */
		unsigned int SA             : 1;	/* Source Address */
		unsigned int AE             : 1;	/* Address Enable */
	} B;
	int I;
	unsigned int U;

} ETH_MAC_ADDRESS3_HIGH_type;
#define ETH_MAC_ADDRESS3_HIGH	(*( ETH_MAC_ADDRESS3_HIGH_type *) 0xf001e058u)	/* Register 22 - MAC Address3 High Register */

typedef volatile union
{
	struct
	{ 
		unsigned int ADDRLO         : 32;	/* MAC Address3 [31:0] */
	} B;
	int I;
	unsigned int U;

} ETH_MAC_ADDRESS3_LOW_type;
#define ETH_MAC_ADDRESS3_LOW	(*( ETH_MAC_ADDRESS3_LOW_type *) 0xf001e05cu)	/* Register 23 - MAC Address3 Low Register */

typedef volatile union
{
	struct
	{ 
		unsigned int ADDRHI         : 16;	/* MAC Address4 [47:32] */
		/* const */ unsigned int RESERVED_23_16 : 8;	/* RESERVED_23_16 */
		unsigned int MBC            : 6;	/* Mask Byte Control */
		unsigned int SA             : 1;	/* Source Address */
		unsigned int AE             : 1;	/* Address Enable */
	} B;
	int I;
	unsigned int U;

} ETH_MAC_ADDRESS4_HIGH_type;
#define ETH_MAC_ADDRESS4_HIGH	(*( ETH_MAC_ADDRESS4_HIGH_type *) 0xf001e060u)	/* Register 24 - MAC Address4 High Register */

typedef volatile union
{
	struct
	{ 
		unsigned int ADDRLO         : 32;	/* MAC Address4 [31:0] */
	} B;
	int I;
	unsigned int U;

} ETH_MAC_ADDRESS4_LOW_type;
#define ETH_MAC_ADDRESS4_LOW	(*( ETH_MAC_ADDRESS4_LOW_type *) 0xf001e064u)	/* Register 25 - MAC Address4 Low Register */

typedef volatile union
{
	struct
	{ 
		unsigned int ADDRHI         : 16;	/* MAC Address5 [47:32] */
		/* const */ unsigned int RESERVED_23_16 : 8;	/* RESERVED_23_16 */
		unsigned int MBC            : 6;	/* Mask Byte Control */
		unsigned int SA             : 1;	/* Source Address */
		unsigned int AE             : 1;	/* Address Enable */
	} B;
	int I;
	unsigned int U;

} ETH_MAC_ADDRESS5_HIGH_type;
#define ETH_MAC_ADDRESS5_HIGH	(*( ETH_MAC_ADDRESS5_HIGH_type *) 0xf001e068u)	/* Register 26 - MAC Address5 High Register */

typedef volatile union
{
	struct
	{ 
		unsigned int ADDRLO         : 32;	/* MAC Address5 [31:0] */
	} B;
	int I;
	unsigned int U;

} ETH_MAC_ADDRESS5_LOW_type;
#define ETH_MAC_ADDRESS5_LOW	(*( ETH_MAC_ADDRESS5_LOW_type *) 0xf001e06cu)	/* Register 27 - MAC Address5 Low Register */

typedef volatile union
{
	struct
	{ 
		unsigned int ADDRHI         : 16;	/* MAC Address6 [47:32] */
		/* const */ unsigned int RESERVED_23_16 : 8;	/* RESERVED_23_16 */
		unsigned int MBC            : 6;	/* Mask Byte Control */
		unsigned int SA             : 1;	/* Source Address */
		unsigned int AE             : 1;	/* Address Enable */
	} B;
	int I;
	unsigned int U;

} ETH_MAC_ADDRESS6_HIGH_type;
#define ETH_MAC_ADDRESS6_HIGH	(*( ETH_MAC_ADDRESS6_HIGH_type *) 0xf001e070u)	/* Register 28 - MAC Address6 High Register */

typedef volatile union
{
	struct
	{ 
		unsigned int ADDRLO         : 32;	/* MAC Address6 [31:0] */
	} B;
	int I;
	unsigned int U;

} ETH_MAC_ADDRESS6_LOW_type;
#define ETH_MAC_ADDRESS6_LOW	(*( ETH_MAC_ADDRESS6_LOW_type *) 0xf001e074u)	/* Register 29 - MAC Address6 Low Register */

typedef volatile union
{
	struct
	{ 
		unsigned int ADDRHI         : 16;	/* MAC Address7 [47:32] */
		/* const */ unsigned int RESERVED_23_16 : 8;	/* RESERVED_23_16 */
		unsigned int MBC            : 6;	/* Mask Byte Control */
		unsigned int SA             : 1;	/* Source Address */
		unsigned int AE             : 1;	/* Address Enable */
	} B;
	int I;
	unsigned int U;

} ETH_MAC_ADDRESS7_HIGH_type;
#define ETH_MAC_ADDRESS7_HIGH	(*( ETH_MAC_ADDRESS7_HIGH_type *) 0xf001e078u)	/* Register 30 - MAC Address7 High Register */

typedef volatile union
{
	struct
	{ 
		unsigned int ADDRLO         : 32;	/* MAC Address7 [31:0] */
	} B;
	int I;
	unsigned int U;

} ETH_MAC_ADDRESS7_LOW_type;
#define ETH_MAC_ADDRESS7_LOW	(*( ETH_MAC_ADDRESS7_LOW_type *) 0xf001e07cu)	/* Register 31 - MAC Address7 Low Register */

typedef volatile union
{
	struct
	{ 
		unsigned int ADDRHI         : 16;	/* MAC Address8 [47:32] */
		/* const */ unsigned int RESERVED_23_16 : 8;	/* RESERVED_23_16 */
		unsigned int MBC            : 6;	/* Mask Byte Control */
		unsigned int SA             : 1;	/* Source Address */
		unsigned int AE             : 1;	/* Address Enable */
	} B;
	int I;
	unsigned int U;

} ETH_MAC_ADDRESS8_HIGH_type;
#define ETH_MAC_ADDRESS8_HIGH	(*( ETH_MAC_ADDRESS8_HIGH_type *) 0xf001e080u)	/* Register 32 - MAC Address8 High Register */

typedef volatile union
{
	struct
	{ 
		unsigned int ADDRLO         : 32;	/* MAC Address8 [31:0] */
	} B;
	int I;
	unsigned int U;

} ETH_MAC_ADDRESS8_LOW_type;
#define ETH_MAC_ADDRESS8_LOW	(*( ETH_MAC_ADDRESS8_LOW_type *) 0xf001e084u)	/* Register 33 - MAC Address8 Low Register */

typedef volatile union
{
	struct
	{ 
		unsigned int ADDRHI         : 16;	/* MAC Address9 [47:32] */
		/* const */ unsigned int RESERVED_23_16 : 8;	/* RESERVED_23_16 */
		unsigned int MBC            : 6;	/* Mask Byte Control */
		unsigned int SA             : 1;	/* Source Address */
		unsigned int AE             : 1;	/* Address Enable */
	} B;
	int I;
	unsigned int U;

} ETH_MAC_ADDRESS9_HIGH_type;
#define ETH_MAC_ADDRESS9_HIGH	(*( ETH_MAC_ADDRESS9_HIGH_type *) 0xf001e088u)	/* Register 34 - MAC Address9 High Register */

typedef volatile union
{
	struct
	{ 
		unsigned int ADDRLO         : 32;	/* MAC Address9 [31:0] */
	} B;
	int I;
	unsigned int U;

} ETH_MAC_ADDRESS9_LOW_type;
#define ETH_MAC_ADDRESS9_LOW	(*( ETH_MAC_ADDRESS9_LOW_type *) 0xf001e08cu)	/* Register 35 - MAC Address9 Low Register */

typedef volatile union
{
	struct
	{ 
		unsigned int PRELEN         : 2;	/* Preamble Length for Transmit Frames */
		unsigned int RE             : 1;	/* Receiver Enable */
		unsigned int TE             : 1;	/* Transmitter Enable */
		unsigned int DC             : 1;	/* Deferral Check */
		unsigned int BL             : 2;	/* Back-Off Limit */
		unsigned int ACS            : 1;	/* Automatic Pad or CRC Stripping */
		/* const */ unsigned int LUD            : 1;	/* Link Up or Down */
		unsigned int DR             : 1;	/* Disable Retry */
		unsigned int IPC            : 1;	/* Checksum Offload */
		unsigned int DM             : 1;	/* Duplex Mode */
		unsigned int LM             : 1;	/* Loopback Mode */
		unsigned int DO             : 1;	/* Disable Receive Own */
		unsigned int FES            : 1;	/* Speed */
		/* const */ unsigned int PS             : 1;	/* Port Select */
		unsigned int DCRS           : 1;	/* Disable Carrier Sense During Transmission */
		unsigned int IFG            : 3;	/* Inter-Frame Gap */
		unsigned int JE             : 1;	/* Jumbo Frame Enable */
		/* const */ unsigned int BE             : 1;	/* Frame Burst Enable */
		unsigned int JD             : 1;	/* Jabber Disable */
		unsigned int WD             : 1;	/* Watchdog Disable */
		/* const */ unsigned int TC             : 1;	/* Transmit Configuration in RGMII, SGMII, or SMII */
		unsigned int CST            : 1;	/* CRC Stripping of Type Frames */
		/* const */ unsigned int SFTERR         : 1;	/* SMII Force Transmit Error */
		unsigned int TWOKPE         : 1;	/* IEEE 802.3as support for 2K packets Enable */
		/* const */ unsigned int SARC           : 3;	/* Source Address Insertion or Replacement Control */
		/* const */ unsigned int RESERVED_31    : 1;	/* RESERVED_31 */
	} B;
	int I;
	unsigned int U;

} ETH_MAC_CONFIGURATION_type;
#define ETH_MAC_CONFIGURATION	(*( ETH_MAC_CONFIGURATION_type *) 0xf001e000u)	/* Register 0 - MAC Configuration Register */

typedef volatile union
{
	struct
	{ 
		unsigned int PR             : 1;	/* Promiscuous Mode */
		unsigned int HUC            : 1;	/* Hash Unicast */
		unsigned int HMC            : 1;	/* Hash Multicast */
		unsigned int DAIF           : 1;	/* DA Inverse Filtering */
		unsigned int PM             : 1;	/* Pass All Multicast */
		unsigned int DBF            : 1;	/* Disable Broadcast Frames */
		unsigned int PCF            : 2;	/* Pass Control Frames */
		unsigned int SAIF           : 1;	/* SA Inverse Filtering */
		unsigned int SAF            : 1;	/* Source Address Filter Enable */
		unsigned int HPF            : 1;	/* Hash or Perfect Filter */
		/* const */ unsigned int RESERVED_15_11 : 5;	/* RESERVED_15_11 */
		unsigned int VTFE           : 1;	/* VLAN Tag Filter Enable */
		/* const */ unsigned int RESERVED_19_17 : 3;	/* RESERVED_19_17 */
		/* const */ unsigned int IPFE           : 1;	/* Layer 3 and Layer 4 Filter Enable */
		/* const */ unsigned int DNTU           : 1;	/* Drop non-TCP/UDP over IP Frames */
		/* const */ unsigned int RESERVED_30_22 : 9;	/* RESERVED_30_22 */
		unsigned int RA             : 1;	/* Receive All */
	} B;
	int I;
	unsigned int U;

} ETH_MAC_FRAME_FILTER_type;
#define ETH_MAC_FRAME_FILTER	(*( ETH_MAC_FRAME_FILTER_type *) 0xf001e004u)	/* Register 1 - MAC Frame Filter */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int MISFRMCNT      : 16;	/* MISFRMCNT */
		/* const */ unsigned int MISCNTOVF      : 1;	/* MISCNTOVF */
		/* const */ unsigned int OVFFRMCNT      : 11;	/* OVFFRMCNT */
		/* const */ unsigned int OVFCNTOVF      : 1;	/* OVFCNTOVF */
		/* const */ unsigned int RESERVED_31_29 : 3;	/* RESERVED_31_29 */
	} B;
	int I;
	unsigned int U;

} ETH_MISSED_FRAME_AND_BUFFER_OVERFLOW_COUNTER_type;
#define ETH_MISSED_FRAME_AND_BUFFER_OVERFLOW_COUNTER	(*( ETH_MISSED_FRAME_AND_BUFFER_OVERFLOW_COUNTER_type *) 0xf001f020u)	/* Register 8 - Missed Frame and Buffer Overflow Counter Register */

typedef volatile union
{
	struct
	{ 
		unsigned int CNTRST         : 1;	/* Counters Reset */
		unsigned int CNTSTOPRO      : 1;	/* Counters Stop Rollover */
		unsigned int RSTONRD        : 1;	/* Reset on Read */
		unsigned int CNTFREEZ       : 1;	/* MMC Counter Freeze */
		unsigned int CNTPRST        : 1;	/* Counters Preset */
		unsigned int CNTPRSTLVL     : 1;	/* Full-Half Preset */
		/* const */ unsigned int RESERVED_7_6   : 2;	/* RESERVED_7_6 */
		unsigned int UCDBC          : 1;	/* Update MMC Counters for Dropped Broadcast Frames */
		/* const */ unsigned int RESERVED_31_9  : 23;	/* RESERVED_31_9 */
	} B;
	int I;
	unsigned int U;

} ETH_MMC_CONTROL_type;
#define ETH_MMC_CONTROL	(*( ETH_MMC_CONTROL_type *) 0xf001e100u)	/* Register 64 - MMC Control Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int RXIPV4GFIS     : 1;	/* MMC Receive IPV4 Good Frame Counter Interrupt Status */
		/* const */ unsigned int RXIPV4HERFIS   : 1;	/* MMC Receive IPV4 Header Error Frame Counter Interrupt Status */
		/* const */ unsigned int RXIPV4NOPAYFIS : 1;	/* MMC Receive IPV4 No Payload Frame Counter Interrupt Status */
		/* const */ unsigned int RXIPV4FRAGFIS  : 1;	/* MMC Receive IPV4 Fragmented Frame Counter Interrupt Status */
		/* const */ unsigned int RXIPV4UDSBLFIS : 1;	/* MMC Receive IPV4 UDP Checksum Disabled Frame Counter Interrupt Status */
		/* const */ unsigned int RXIPV6GFIS     : 1;	/* MMC Receive IPV6 Good Frame Counter Interrupt Status */
		/* const */ unsigned int RXIPV6HERFIS   : 1;	/* MMC Receive IPV6 Header Error Frame Counter Interrupt Status */
		/* const */ unsigned int RXIPV6NOPAYFIS : 1;	/* MMC Receive IPV6 No Payload Frame Counter Interrupt Status */
		/* const */ unsigned int RXUDPGFIS      : 1;	/* MMC Receive UDP Good Frame Counter Interrupt Status */
		/* const */ unsigned int RXUDPERFIS     : 1;	/* MMC Receive UDP Error Frame Counter Interrupt Status */
		/* const */ unsigned int RXTCPGFIS      : 1;	/* MMC Receive TCP Good Frame Counter Interrupt Status */
		/* const */ unsigned int RXTCPERFIS     : 1;	/* MMC Receive TCP Error Frame Counter Interrupt Status */
		/* const */ unsigned int RXICMPGFIS     : 1;	/* MMC Receive ICMP Good Frame Counter Interrupt Status */
		/* const */ unsigned int RXICMPERFIS    : 1;	/* MMC Receive ICMP Error Frame Counter Interrupt Status */
		/* const */ unsigned int RESERVED_15_14 : 2;	/* RESERVED_15_14 */
		/* const */ unsigned int RXIPV4GOIS     : 1;	/* MMC Receive IPV4 Good Octet Counter Interrupt Status */
		/* const */ unsigned int RXIPV4HEROIS   : 1;	/* MMC Receive IPV4 Header Error Octet Counter Interrupt Status */
		/* const */ unsigned int RXIPV4NOPAYOIS : 1;	/* MMC Receive IPV4 No Payload Octet Counter Interrupt Status */
		/* const */ unsigned int RXIPV4FRAGOIS  : 1;	/* MMC Receive IPV4 Fragmented Octet Counter Interrupt Status */
		/* const */ unsigned int RXIPV4UDSBLOIS : 1;	/* MMC Receive IPV4 UDP Checksum Disabled Octet Counter Interrupt Status */
		/* const */ unsigned int RXIPV6GOIS     : 1;	/* MMC Receive IPV6 Good Octet Counter Interrupt Status */
		/* const */ unsigned int RXIPV6HEROIS   : 1;	/* MMC Receive IPV6 Header Error Octet Counter Interrupt Status */
		/* const */ unsigned int RXIPV6NOPAYOIS : 1;	/* MMC Receive IPV6 No Payload Octet Counter Interrupt Status */
		/* const */ unsigned int RXUDPGOIS      : 1;	/* MMC Receive UDP Good Octet Counter Interrupt Status */
		/* const */ unsigned int RXUDPEROIS     : 1;	/* MMC Receive UDP Error Octet Counter Interrupt Status */
		/* const */ unsigned int RXTCPGOIS      : 1;	/* MMC Receive TCP Good Octet Counter Interrupt Status */
		/* const */ unsigned int RXTCPEROIS     : 1;	/* MMC Receive TCP Error Octet Counter Interrupt Status */
		/* const */ unsigned int RXICMPGOIS     : 1;	/* MMC Receive ICMP Good Octet Counter Interrupt Status */
		/* const */ unsigned int RXICMPEROIS    : 1;	/* MMC Receive ICMP Error Octet Counter Interrupt Status */
		/* const */ unsigned int RESERVED_31_30 : 2;	/* RESERVED_31_30 */
	} B;
	int I;
	unsigned int U;

} ETH_MMC_IPC_RECEIVE_INTERRUPT_type;
#define ETH_MMC_IPC_RECEIVE_INTERRUPT	(*( ETH_MMC_IPC_RECEIVE_INTERRUPT_type *) 0xf001e208u)	/* Register 130 - MMC Receive Checksum Offload Interrupt Register */

typedef volatile union
{
	struct
	{ 
		unsigned int RXIPV4GFIM     : 1;	/* MMC Receive IPV4 Good Frame Counter Interrupt Mask */
		unsigned int RXIPV4HERFIM   : 1;	/* MMC Receive IPV4 Header Error Frame Counter Interrupt Mask */
		unsigned int RXIPV4NOPAYFIM : 1;	/* MMC Receive IPV4 No Payload Frame Counter Interrupt Mask */
		unsigned int RXIPV4FRAGFIM  : 1;	/* MMC Receive IPV4 Fragmented Frame Counter Interrupt Mask */
		unsigned int RXIPV4UDSBLFIM : 1;	/* MMC Receive IPV4 UDP Checksum Disabled Frame Counter Interrupt Mask */
		unsigned int RXIPV6GFIM     : 1;	/* MMC Receive IPV6 Good Frame Counter Interrupt Mask */
		unsigned int RXIPV6HERFIM   : 1;	/* MMC Receive IPV6 Header Error Frame Counter Interrupt Mask */
		unsigned int RXIPV6NOPAYFIM : 1;	/* MMC Receive IPV6 No Payload Frame Counter Interrupt Mask */
		unsigned int RXUDPGFIM      : 1;	/* MMC Receive UDP Good Frame Counter Interrupt Mask */
		unsigned int RXUDPERFIM     : 1;	/* MMC Receive UDP Error Frame Counter Interrupt Mask */
		unsigned int RXTCPGFIM      : 1;	/* MMC Receive TCP Good Frame Counter Interrupt Mask */
		unsigned int RXTCPERFIM     : 1;	/* MMC Receive TCP Error Frame Counter Interrupt Mask */
		unsigned int RXICMPGFIM     : 1;	/* MMC Receive ICMP Good Frame Counter Interrupt Mask */
		unsigned int RXICMPERFIM    : 1;	/* MMC Receive ICMP Error Frame Counter Interrupt Mask */
		/* const */ unsigned int RESERVED_15_14 : 2;	/* RESERVED_15_14 */
		unsigned int RXIPV4GOIM     : 1;	/* MMC Receive IPV4 Good Octet Counter Interrupt Mask */
		unsigned int RXIPV4HEROIM   : 1;	/* MMC Receive IPV4 Header Error Octet Counter Interrupt Mask */
		unsigned int RXIPV4NOPAYOIM : 1;	/* MMC Receive IPV4 No Payload Octet Counter Interrupt Mask */
		unsigned int RXIPV4FRAGOIM  : 1;	/* MMC Receive IPV4 Fragmented Octet Counter Interrupt Mask */
		unsigned int RXIPV4UDSBLOIM : 1;	/* MMC Receive IPV4 UDP Checksum Disabled Octet Counter Interrupt Mask */
		unsigned int RXIPV6GOIM     : 1;	/* MMC Receive IPV6 Good Octet Counter Interrupt Mask */
		unsigned int RXIPV6HEROIM   : 1;	/* MMC Receive IPV6 Header Error Octet Counter Interrupt Mask */
		unsigned int RXIPV6NOPAYOIM : 1;	/* MMC Receive IPV6 No Payload Octet Counter Interrupt Mask */
		unsigned int RXUDPGOIM      : 1;	/* MMC Receive UDP Good Octet Counter Interrupt Mask */
		unsigned int RXUDPEROIM     : 1;	/* MMC Receive UDP Error Octet Counter Interrupt Mask */
		unsigned int RXTCPGOIM      : 1;	/* MMC Receive TCP Good Octet Counter Interrupt Mask */
		unsigned int RXTCPEROIM     : 1;	/* MMC Receive TCP Error Octet Counter Interrupt Mask */
		unsigned int RXICMPGOIM     : 1;	/* MMC Receive ICMP Good Octet Counter Interrupt Mask */
		unsigned int RXICMPEROIM    : 1;	/* MMC Receive ICMP Error Octet Counter Interrupt Mask */
		/* const */ unsigned int RESERVED_31_30 : 2;	/* RESERVED_31_30 */
	} B;
	int I;
	unsigned int U;

} ETH_MMC_IPC_RECEIVE_INTERRUPT_MASK_type;
#define ETH_MMC_IPC_RECEIVE_INTERRUPT_MASK	(*( ETH_MMC_IPC_RECEIVE_INTERRUPT_MASK_type *) 0xf001e200u)	/* Register 128 - MMC Receive Checksum Offload Interrupt Mask Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int RXGBFRMIS      : 1;	/* MMC Receive Good Bad Frame Counter Interrupt Status */
		/* const */ unsigned int RXGBOCTIS      : 1;	/* MMC Receive Good Bad Octet Counter Interrupt Status */
		/* const */ unsigned int RXGOCTIS       : 1;	/* MMC Receive Good Octet Counter Interrupt Status. */
		/* const */ unsigned int RXBCGFIS       : 1;	/* MMC Receive Broadcast Good Frame Counter Interrupt Status. */
		/* const */ unsigned int RXMCGFIS       : 1;	/* MMC Receive Multicast Good Frame Counter Interrupt Status */
		/* const */ unsigned int RXCRCERFIS     : 1;	/* MMC Receive CRC Error Frame Counter Interrupt Status */
		/* const */ unsigned int RXALGNERFIS    : 1;	/* MMC Receive Alignment Error Frame Counter Interrupt Status */
		/* const */ unsigned int RXRUNTFIS      : 1;	/* MMC Receive Runt Frame Counter Interrupt Status */
		/* const */ unsigned int RXJABERFIS     : 1;	/* MMC Receive Jabber Error Frame Counter Interrupt Status */
		/* const */ unsigned int RXUSIZEGFIS    : 1;	/* MMC Receive Undersize Good Frame Counter Interrupt Status */
		/* const */ unsigned int RXOSIZEGFIS    : 1;	/* MMC Receive Oversize Good Frame Counter Interrupt Status */
		/* const */ unsigned int RX64OCTGBFIS   : 1;	/* MMC Receive 64 Octet Good Bad Frame Counter Interrupt Status */
		/* const */ unsigned int RX65T127OCTGBFIS: 1;	/* MMC Receive 65 to 127 Octet Good Bad Frame Counter Interrupt Status */
		/* const */ unsigned int RX128T255OCTGBFIS: 1;	/* MMC Receive 128 to 255 Octet Good Bad Frame Counter Interrupt Status */
		/* const */ unsigned int RX256T511OCTGBFIS: 1;	/* MMC Receive 256 to 511 Octet Good Bad Frame Counter Interrupt Status */
		/* const */ unsigned int RX512T1023OCTGBFIS: 1;	/* MMC Receive 512 to 1023 Octet Good Bad Frame Counter Interrupt Status */
		/* const */ unsigned int RX1024TMAXOCTGBFIS: 1;	/* MMC Receive 1024 to Maximum Octet Good Bad Frame Counter Interrupt Status */
		/* const */ unsigned int RXUCGFIS       : 1;	/* MMC Receive Unicast Good Frame Counter Interrupt Status */
		/* const */ unsigned int RXLENERFIS     : 1;	/* MMC Receive Length Error Frame Counter Interrupt Status */
		/* const */ unsigned int RXORANGEFIS    : 1;	/* MMC Receive Out Of Range Error Frame Counter Interrupt Status */
		/* const */ unsigned int RXPAUSFIS      : 1;	/* MMC Receive Pause Frame Counter Interrupt Status */
		/* const */ unsigned int RXFOVFIS       : 1;	/* MMC Receive FIFO Overflow Frame Counter Interrupt Status */
		/* const */ unsigned int RXVLANGBFIS    : 1;	/* MMC Receive VLAN Good Bad Frame Counter Interrupt Status */
		/* const */ unsigned int RXWDOGFIS      : 1;	/* MMC Receive Watchdog Error Frame Counter Interrupt Status */
		/* const */ unsigned int RXRCVERRFIS    : 1;	/* MMC Receive Error Frame Counter Interrupt Status */
		/* const */ unsigned int RXCTRLFIS      : 1;	/* MMC Receive Control Frame Counter Interrupt Status */
		/* const */ unsigned int RESERVED_31_26 : 6;	/* RESERVED_31_26 */
	} B;
	int I;
	unsigned int U;

} ETH_MMC_RECEIVE_INTERRUPT_type;
#define ETH_MMC_RECEIVE_INTERRUPT	(*( ETH_MMC_RECEIVE_INTERRUPT_type *) 0xf001e104u)	/* Register 65 - MMC Receive Interrupt Register */

typedef volatile union
{
	struct
	{ 
		unsigned int RXGBFRMIM      : 1;	/* MMC Receive Good Bad Frame Counter Interrupt Mask */
		unsigned int RXGBOCTIM      : 1;	/* MMC Receive Good Bad Octet Counter Interrupt Mask */
		unsigned int RXGOCTIM       : 1;	/* MMC Receive Good Octet Counter Interrupt Mask */
		unsigned int RXBCGFIM       : 1;	/* MMC Receive Broadcast Good Frame Counter Interrupt Mask */
		unsigned int RXMCGFIM       : 1;	/* MMC Receive Multicast Good Frame Counter Interrupt Mask */
		unsigned int RXCRCERFIM     : 1;	/* MMC Receive CRC Error Frame Counter Interrupt Mask */
		unsigned int RXALGNERFIM    : 1;	/* MMC Receive Alignment Error Frame Counter Interrupt Mask */
		unsigned int RXRUNTFIM      : 1;	/* MMC Receive Runt Frame Counter Interrupt Mask */
		unsigned int RXJABERFIM     : 1;	/* MMC Receive Jabber Error Frame Counter Interrupt Mask */
		unsigned int RXUSIZEGFIM    : 1;	/* MMC Receive Undersize Good Frame Counter Interrupt Mask */
		unsigned int RXOSIZEGFIM    : 1;	/* MMC Receive Oversize Good Frame Counter Interrupt Mask */
		unsigned int RX64OCTGBFIM   : 1;	/* MMC Receive 64 Octet Good Bad Frame Counter Interrupt Mask */
		unsigned int RX65T127OCTGBFIM: 1;	/* MMC Receive 65 to 127 Octet Good Bad Frame Counter Interrupt Mask */
		unsigned int RX128T255OCTGBFIM: 1;	/* MMC Receive 128 to 255 Octet Good Bad Frame Counter Interrupt Mask */
		unsigned int RX256T511OCTGBFIM: 1;	/* MMC Receive 256 to 511 Octet Good Bad Frame Counter Interrupt Mask */
		unsigned int RX512T1023OCTGBFIM: 1;	/* MMC Receive 512 to 1023 Octet Good Bad Frame Counter Interrupt Mask */
		unsigned int RX1024TMAXOCTGBFIM: 1;	/* MMC Receive 1024 to Maximum Octet Good Bad Frame Counter Interrupt Mask */
		unsigned int RXUCGFIM       : 1;	/* MMC Receive Unicast Good Frame Counter Interrupt Mask */
		unsigned int RXLENERFIM     : 1;	/* MMC Receive Length Error Frame Counter Interrupt Mask */
		unsigned int RXORANGEFIM    : 1;	/* MMC Receive Out Of Range Error Frame Counter Interrupt Mask */
		unsigned int RXPAUSFIM      : 1;	/* MMC Receive Pause Frame Counter Interrupt Mask */
		unsigned int RXFOVFIM       : 1;	/* MMC Receive FIFO Overflow Frame Counter Interrupt Mask */
		unsigned int RXVLANGBFIM    : 1;	/* MMC Receive VLAN Good Bad Frame Counter Interrupt Mask */
		unsigned int RXWDOGFIM      : 1;	/* MMC Receive Watchdog Error Frame Counter Interrupt Mask */
		unsigned int RXRCVERRFIM    : 1;	/* MMC Receive Error Frame Counter Interrupt Mask */
		unsigned int RXCTRLFIM      : 1;	/* MMC Receive Control Frame Counter Interrupt Mask */
		/* const */ unsigned int RESERVED_31_26 : 6;	/* RESERVED_31_26 */
	} B;
	int I;
	unsigned int U;

} ETH_MMC_RECEIVE_INTERRUPT_MASK_type;
#define ETH_MMC_RECEIVE_INTERRUPT_MASK	(*( ETH_MMC_RECEIVE_INTERRUPT_MASK_type *) 0xf001e10cu)	/* - */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int TXGBOCTIS      : 1;	/* MMC Transmit Good Bad Octet Counter Interrupt Status */
		/* const */ unsigned int TXGBFRMIS      : 1;	/* MMC Transmit Good Bad Frame Counter Interrupt Status */
		/* const */ unsigned int TXBCGFIS       : 1;	/* MMC Transmit Broadcast Good Frame Counter Interrupt Status */
		/* const */ unsigned int TXMCGFIS       : 1;	/* MMC Transmit Multicast Good Frame Counter Interrupt Status */
		/* const */ unsigned int TX64OCTGBFIS   : 1;	/* MMC Transmit 64 Octet Good Bad Frame Counter Interrupt Status. */
		/* const */ unsigned int TX65T127OCTGBFIS: 1;	/* MMC Transmit 65 to 127 Octet Good Bad Frame Counter Interrupt Status */
		/* const */ unsigned int TX128T255OCTGBFIS: 1;	/* MMC Transmit 128 to 255 Octet Good Bad Frame Counter Interrupt Status */
		/* const */ unsigned int TX256T511OCTGBFIS: 1;	/* MMC Transmit 256 to 511 Octet Good Bad Frame Counter Interrupt Status */
		/* const */ unsigned int TX512T1023OCTGBFIS: 1;	/* MMC Transmit 512 to 1023 Octet Good Bad Frame Counter Interrupt Status */
		/* const */ unsigned int TX1024TMAXOCTGBFIS: 1;	/* MMC Transmit 1024 to Maximum Octet Good Bad Frame Counter Interrupt Status */
		/* const */ unsigned int TXUCGBFIS      : 1;	/* MMC Transmit Unicast Good Bad Frame Counter Interrupt Status */
		/* const */ unsigned int TXMCGBFIS      : 1;	/* MMC Transmit Multicast Good Bad Frame Counter Interrupt Status */
		/* const */ unsigned int TXBCGBFIS      : 1;	/* MMC Transmit Broadcast Good Bad Frame Counter Interrupt Status */
		/* const */ unsigned int TXUFLOWERFIS   : 1;	/* MMC Transmit Underflow Error Frame Counter Interrupt Status */
		/* const */ unsigned int TXSCOLGFIS     : 1;	/* MMC Transmit Single Collision Good Frame Counter Interrupt Status */
		/* const */ unsigned int TXMCOLGFIS     : 1;	/* MMC Transmit Multiple Collision Good Frame Counter Interrupt Status */
		/* const */ unsigned int TXDEFFIS       : 1;	/* MMC Transmit Deferred Frame Counter Interrupt Status */
		/* const */ unsigned int TXLATCOLFIS    : 1;	/* MMC Transmit Late Collision Frame Counter Interrupt Status */
		/* const */ unsigned int TXEXCOLFIS     : 1;	/* MMC Transmit Excessive Collision Frame Counter Interrupt Status */
		/* const */ unsigned int TXCARERFIS     : 1;	/* MMC Transmit Carrier Error Frame Counter Interrupt Status */
		/* const */ unsigned int TXGOCTIS       : 1;	/* MMC Transmit Good Octet Counter Interrupt Status */
		/* const */ unsigned int TXGFRMIS       : 1;	/* MMC Transmit Good Frame Counter Interrupt Status */
		/* const */ unsigned int TXEXDEFFIS     : 1;	/* MMC Transmit Excessive Deferral Frame Counter Interrupt Status */
		/* const */ unsigned int TXPAUSFIS      : 1;	/* MMC Transmit Pause Frame Counter Interrupt Status */
		/* const */ unsigned int TXVLANGFIS     : 1;	/* MMC Transmit VLAN Good Frame Counter Interrupt Status */
		/* const */ unsigned int TXOSIZEGFIS    : 1;	/* MMC Transmit Oversize Good Frame Counter Interrupt Status */
		/* const */ unsigned int RESERVED_31_26 : 6;	/* RESERVED_31_26 */
	} B;
	int I;
	unsigned int U;

} ETH_MMC_TRANSMIT_INTERRUPT_type;
#define ETH_MMC_TRANSMIT_INTERRUPT	(*( ETH_MMC_TRANSMIT_INTERRUPT_type *) 0xf001e108u)	/* Register 66 - MMC Transmit Interrupt Register */

typedef volatile union
{
	struct
	{ 
		unsigned int TXGBOCTIM      : 1;	/* MMC Transmit Good Bad Octet Counter Interrupt Mask */
		unsigned int TXGBFRMIM      : 1;	/* MMC Transmit Good Bad Frame Counter Interrupt Mask */
		unsigned int TXBCGFIM       : 1;	/* MMC Transmit Broadcast Good Frame Counter Interrupt Mask */
		unsigned int TXMCGFIM       : 1;	/* MMC Transmit Multicast Good Frame Counter Interrupt Mask */
		unsigned int TX64OCTGBFIM   : 1;	/* MMC Transmit 64 Octet Good Bad Frame Counter Interrupt Mask */
		unsigned int TX65T127OCTGBFIM: 1;	/* MMC Transmit 65 to 127 Octet Good Bad Frame Counter Interrupt Mask */
		unsigned int TX128T255OCTGBFIM: 1;	/* MMC Transmit 128 to 255 Octet Good Bad Frame Counter Interrupt Mask */
		unsigned int TX256T511OCTGBFIM: 1;	/* MMC Transmit 256 to 511 Octet Good Bad Frame Counter Interrupt Mask */
		unsigned int TX512T1023OCTGBFIM: 1;	/* MMC Transmit 512 to 1023 Octet Good Bad Frame Counter Interrupt Mask */
		unsigned int TX1024TMAXOCTGBFIM: 1;	/* MMC Transmit 1024 to Maximum Octet Good Bad Frame Counter Interrupt Mask */
		unsigned int TXUCGBFIM      : 1;	/* MMC Transmit Unicast Good Bad Frame Counter Interrupt Mask */
		unsigned int TXMCGBFIM      : 1;	/* MMC Transmit Multicast Good Bad Frame Counter Interrupt Mask */
		unsigned int TXBCGBFIM      : 1;	/* MMC Transmit Broadcast Good Bad Frame Counter Interrupt Mask */
		unsigned int TXUFLOWERFIM   : 1;	/* MMC Transmit Underflow Error Frame Counter Interrupt Mask */
		unsigned int TXSCOLGFIM     : 1;	/* MMC Transmit Single Collision Good Frame Counter Interrupt Mask */
		unsigned int TXMCOLGFIM     : 1;	/* MMC Transmit Multiple Collision Good Frame Counter Interrupt Mask */
		unsigned int TXDEFFIM       : 1;	/* MMC Transmit Deferred Frame Counter Interrupt Mask */
		unsigned int TXLATCOLFIM    : 1;	/* MMC Transmit Late Collision Frame Counter Interrupt Mask */
		unsigned int TXEXCOLFIM     : 1;	/* MMC Transmit Excessive Collision Frame Counter Interrupt Mask */
		unsigned int TXCARERFIM     : 1;	/* MMC Transmit Carrier Error Frame Counter Interrupt Mask */
		unsigned int TXGOCTIM       : 1;	/* MMC Transmit Good Octet Counter Interrupt Mask */
		unsigned int TXGFRMIM       : 1;	/* MMC Transmit Good Frame Counter Interrupt Mask */
		unsigned int TXEXDEFFIM     : 1;	/* MMC Transmit Excessive Deferral Frame Counter Interrupt Mask */
		unsigned int TXPAUSFIM      : 1;	/* MMC Transmit Pause Frame Counter Interrupt Mask */
		unsigned int TXVLANGFIM     : 1;	/* MMC Transmit VLAN Good Frame Counter Interrupt Mask */
		unsigned int TXOSIZEGFIM    : 1;	/* MMC Transmit Oversize Good Frame Counter Interrupt Mask */
		/* const */ unsigned int RESERVED_31_26 : 6;	/* RESERVED_31_26 */
	} B;
	int I;
	unsigned int U;

} ETH_MMC_TRANSMIT_INTERRUPT_MASK_type;
#define ETH_MMC_TRANSMIT_INTERRUPT_MASK	(*( ETH_MMC_TRANSMIT_INTERRUPT_MASK_type *) 0xf001e110u)	/* Register 68 - MMC Transmit Interrupt Mask Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int RESERVED_0     : 1;	/* RESERVED_0 */
		unsigned int SR             : 1;	/* Start or Stop Receive */
		unsigned int OSF            : 1;	/* Operate on Second Frame */
		unsigned int RTC            : 2;	/* Receive Threshold Control */
		/* const */ unsigned int RESERVED_5     : 1;	/* RESERVED_5 */
		unsigned int FUF            : 1;	/* Forward Undersized Good Frames */
		unsigned int FEF            : 1;	/* Forward Error Frames */
		unsigned int EFC            : 1;	/* Enable HW Flow Control */
		unsigned int RFA            : 2;	/* Threshold for Activating Flow Control (in half-duplex and full-duplex) */
		unsigned int RFD            : 2;	/* Threshold for Deactivating Flow Control (in half-duplex and full-duplex) */
		unsigned int ST             : 1;	/* Start or Stop Transmission Command */
		unsigned int TTC            : 3;	/* Transmit Threshold Control */
		/* const */ unsigned int RESERVED_19_17 : 3;	/* RESERVED_19_17 */
		unsigned int FTF            : 1;	/* Flush Transmit FIFO */
		unsigned int TSF            : 1;	/* Transmit Store and Forward */
		/* const */ unsigned int RFD_2          : 1;	/* MSB of Threshold for Deactivating Flow Control */
		/* const */ unsigned int RFA_2          : 1;	/* MSB of Threshold for Activating Flow Control */
		unsigned int DFF            : 1;	/* Disable Flushing of Received Frames */
		unsigned int RSF            : 1;	/* Receive Store and Forward */
		unsigned int DT             : 1;	/* Disable Dropping of TCP/IP Checksum Error Frames */
		/* const */ unsigned int RESERVED_31_27 : 5;	/* RESERVED_31_27 */
	} B;
	int I;
	unsigned int U;

} ETH_OPERATION_MODE_type;
#define ETH_OPERATION_MODE	(*( ETH_OPERATION_MODE_type *) 0xf001f018u)	/* Register 6 - Operation Mode Register */

typedef volatile union
{
	struct
	{ 
		unsigned int PWRDWN         : 1;	/* Power Down */
		unsigned int MGKPKTEN       : 1;	/* Magic Packet Enable */
		unsigned int RWKPKTEN       : 1;	/* Wake-Up Frame Enable */
		/* const */ unsigned int RESERVED_4_3   : 2;	/* RESERVED_4_3 */
		/* const */ unsigned int MGKPRCVD       : 1;	/* Magic Packet Received */
		/* const */ unsigned int RWKPRCVD       : 1;	/* Wake-Up Frame Received */
		/* const */ unsigned int RESERVED_8_7   : 2;	/* RESERVED_8_7 */
		unsigned int GLBLUCAST      : 1;	/* Global Unicast */
		/* const */ unsigned int RESERVED_30_10 : 21;	/* RESERVED_30_10 */
		unsigned int RWKFILTRST     : 1;	/* Wake-Up Frame Filter Register Pointer Reset */
	} B;
	int I;
	unsigned int U;

} ETH_PMT_CONTROL_STATUS_type;
#define ETH_PMT_CONTROL_STATUS	(*( ETH_PMT_CONTROL_STATUS_type *) 0xf001e02cu)	/* Register 11 - PMT Control and Status Register */

typedef volatile union
{
	struct
	{ 
		unsigned int PPSCTRL_PPSCMD : 4;	/* PPSCTRL0 or PPSCMD0 */
		/* const */ unsigned int PPSEN0         : 1;	/* Flexible PPS Output Mode Enable */
		/* const */ unsigned int TRGTMODSEL0    : 2;	/* Target Time Register Mode for PPS0 Output */
		/* const */ unsigned int RESERVED_7     : 1;	/* RESERVED_7 */
		/* const */ unsigned int PPSCMD1        : 3;	/* Flexible PPS1 Output Control */
		/* const */ unsigned int RESERVED_12_11 : 2;	/* RESERVED_12_11 */
		/* const */ unsigned int TRGTMODSEL1    : 2;	/* Target Time Register Mode for PPS1 Output */
		/* const */ unsigned int RESERVED_15    : 1;	/* RESERVED_15 */
		/* const */ unsigned int PPSCMD2        : 3;	/* Flexible PPS2 Output Control */
		/* const */ unsigned int RESERVED_20_19 : 2;	/* RESERVED_20_19 */
		/* const */ unsigned int TRGTMODSEL2    : 2;	/* Target Time Register Mode for PPS2 Output */
		/* const */ unsigned int RESERVED_23    : 1;	/* RESERVED_23 */
		/* const */ unsigned int PPSCMD3        : 3;	/* Flexible PPS3 Output Control */
		/* const */ unsigned int RESERVED_28_27 : 2;	/* RESERVED_28_27 */
		/* const */ unsigned int TRGTMODSEL3    : 2;	/* Target Time Register Mode for PPS3 Output */
		/* const */ unsigned int RESERVED_31    : 1;	/* RESERVED_31 */
	} B;
	int I;
	unsigned int U;

} ETH_PPS_CONTROL_type;
#define ETH_PPS_CONTROL	(*( ETH_PPS_CONTROL_type *) 0xf001e72cu)	/* Register 459 - PPS Control Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int RESERVED_1_0   : 2;	/* RESERVED_1_0 */
		unsigned int RDESLA         : 30;	/* Start of Receive List */
	} B;
	int I;
	unsigned int U;

} ETH_RECEIVE_DESCRIPTOR_LIST_ADDRESS_type;
#define ETH_RECEIVE_DESCRIPTOR_LIST_ADDRESS	(*( ETH_RECEIVE_DESCRIPTOR_LIST_ADDRESS_type *) 0xf001f00cu)	/* Register 3 - Receive Descriptor List Address Register */

typedef volatile union
{
	struct
	{ 
		unsigned int RIWT           : 8;	/* RI Watchdog Timer Count */
		/* const */ unsigned int RESERVED_31_8  : 24;	/* RESERVED_31_8 */
	} B;
	int I;
	unsigned int U;

} ETH_RECEIVE_INTERRUPT_WATCHDOG_TIMER_type;
#define ETH_RECEIVE_INTERRUPT_WATCHDOG_TIMER	(*( ETH_RECEIVE_INTERRUPT_WATCHDOG_TIMER_type *) 0xf001f024u)	/* Register 9 - Receive Interrupt Watchdog Timer Register */

typedef volatile union
{
	struct
	{ 
		unsigned int RPD            : 32;	/* Receive Poll Demand */
	} B;
	int I;
	unsigned int U;

} ETH_RECEIVE_POLL_DEMAND_type;
#define ETH_RECEIVE_POLL_DEMAND	(*( ETH_RECEIVE_POLL_DEMAND_type *) 0xf001f008u)	/* Register 2 - Receive Poll Demand Register */

typedef volatile union
{
	struct
	{ 
		unsigned int WKUPFRMFTR     : 32;	/* WKUPFRMFTR */
	} B;
	int I;
	unsigned int U;

} ETH_REMOTE_WAKE_UP_FRAME_FILTER_type;
#define ETH_REMOTE_WAKE_UP_FRAME_FILTER	(*( ETH_REMOTE_WAKE_UP_FRAME_FILTER_type *) 0xf001e028u)	/* Register 10 - Remote Wake-Up Frame Filter Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int RXICMPERRFRM   : 32;	/* RXICMPERRFRM */
	} B;
	int I;
	unsigned int U;

} ETH_RXICMP_ERROR_FRAMES_type;
#define ETH_RXICMP_ERROR_FRAMES	(*( ETH_RXICMP_ERROR_FRAMES_type *) 0xf001e244u)	/* Register 145 - Receive ICMP Error Frame Counter Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int RXICMPERROCT   : 32;	/* RXICMPERROCT */
	} B;
	int I;
	unsigned int U;

} ETH_RXICMP_ERROR_OCTETS_type;
#define ETH_RXICMP_ERROR_OCTETS	(*( ETH_RXICMP_ERROR_OCTETS_type *) 0xf001e284u)	/* Register 161 - Receive ICMP Error Octet Counter Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int RXICMPGDFRM    : 32;	/* RXICMPGDFRM */
	} B;
	int I;
	unsigned int U;

} ETH_RXICMP_GOOD_FRAMES_type;
#define ETH_RXICMP_GOOD_FRAMES	(*( ETH_RXICMP_GOOD_FRAMES_type *) 0xf001e240u)	/* Register 144 - Receive ICMP Good Frame Counter Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int RXICMPGDOCT    : 32;	/* RXICMPGDOCT */
	} B;
	int I;
	unsigned int U;

} ETH_RXICMP_GOOD_OCTETS_type;
#define ETH_RXICMP_GOOD_OCTETS	(*( ETH_RXICMP_GOOD_OCTETS_type *) 0xf001e280u)	/* Register 160 - Receive ICMP Good Octet Counter Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int RXIPV4FRAGFRM  : 32;	/* RXIPV4FRAGFRM */
	} B;
	int I;
	unsigned int U;

} ETH_RXIPV4_FRAGMENTED_FRAMES_type;
#define ETH_RXIPV4_FRAGMENTED_FRAMES	(*( ETH_RXIPV4_FRAGMENTED_FRAMES_type *) 0xf001e21cu)	/* Register 135 - Receive IPV4 Fragmented Frame Counter Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int RXIPV4FRAGOCT  : 32;	/* This field indicates the number of bytes received in fragmented IPv4 datagrams. The value in the IPv4 headers Length field is used to update this counter. */
	} B;
	int I;
	unsigned int U;

} ETH_RXIPV4_FRAGMENTED_OCTETS_type;
#define ETH_RXIPV4_FRAGMENTED_OCTETS	(*( ETH_RXIPV4_FRAGMENTED_OCTETS_type *) 0xf001e25cu)	/* Register 151 - Receive IPV4 Fragmented Octet Counter Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int RXIPV4GDFRM    : 32;	/* RXIPV4GDFRM */
	} B;
	int I;
	unsigned int U;

} ETH_RXIPV4_GOOD_FRAMES_type;
#define ETH_RXIPV4_GOOD_FRAMES	(*( ETH_RXIPV4_GOOD_FRAMES_type *) 0xf001e210u)	/* Register 132 - Receive IPV4 Good Frame Counter Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int RXIPV4GDOCT    : 32;	/* This field indicates the number of bytes received in good IPv4 datagrams encapsulating TCP, UDP, or ICMP data. The Ethernet header, FCS, pad, or IP pad */
	} B;
	int I;
	unsigned int U;

} ETH_RXIPV4_GOOD_OCTETS_type;
#define ETH_RXIPV4_GOOD_OCTETS	(*( ETH_RXIPV4_GOOD_OCTETS_type *) 0xf001e250u)	/* Register 148 - Receive IPV4 Good Octet Counter Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int RXIPV4HDRERRFRM: 32;	/* RXIPV4HDRERRFRM */
	} B;
	int I;
	unsigned int U;

} ETH_RXIPV4_HEADER_ERROR_FRAMES_type;
#define ETH_RXIPV4_HEADER_ERROR_FRAMES	(*( ETH_RXIPV4_HEADER_ERROR_FRAMES_type *) 0xf001e214u)	/* Register 133 - Receive IPV4 Header Error Frame Counter Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int RXIPV4HDRERROCT: 32;	/* This field indicates the number of bytes received in the IPv4 datagrams with header errors (checksum, length, or version mismatch). The value in the Length field of IPv4 header is used to update this counter. */
	} B;
	int I;
	unsigned int U;

} ETH_RXIPV4_HEADER_ERROR_OCTETS_type;
#define ETH_RXIPV4_HEADER_ERROR_OCTETS	(*( ETH_RXIPV4_HEADER_ERROR_OCTETS_type *) 0xf001e254u)	/* Register 149 - Receive IPV4 Header Error Octet Counter Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int RXIPV4NOPAYFRM : 32;	/* RXIPV4NOPAYFRM */
	} B;
	int I;
	unsigned int U;

} ETH_RXIPV4_NO_PAYLOAD_FRAMES_type;
#define ETH_RXIPV4_NO_PAYLOAD_FRAMES	(*( ETH_RXIPV4_NO_PAYLOAD_FRAMES_type *) 0xf001e218u)	/* Register 134 - Receive IPV4 No Payload Frame Counter Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int RXIPV4NOPAYOCT : 32;	/* This field indicates the number of bytes received in IPv4 datagrams that did not have a TCP, UDP, or ICMP payload. The value in the IPv4 headers Length field is used to update this counter. */
	} B;
	int I;
	unsigned int U;

} ETH_RXIPV4_NO_PAYLOAD_OCTETS_type;
#define ETH_RXIPV4_NO_PAYLOAD_OCTETS	(*( ETH_RXIPV4_NO_PAYLOAD_OCTETS_type *) 0xf001e258u)	/* Register 150 - Receive IPV4 No Payload Octet Counter Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int RXIPV4UDSBLFRM : 32;	/* RXIPV4UDSBLFRM */
	} B;
	int I;
	unsigned int U;

} ETH_RXIPV4_UDP_CHECKSUM_DISABLED_FRAMES_type;
#define ETH_RXIPV4_UDP_CHECKSUM_DISABLED_FRAMES	(*( ETH_RXIPV4_UDP_CHECKSUM_DISABLED_FRAMES_type *) 0xf001e220u)	/* Register 136 - Receive IPV4 UDP Checksum Disabled Frame Counter Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int RXIPV4UDSBLOCT : 32;	/* RXIPV4UDSBLOCT */
	} B;
	int I;
	unsigned int U;

} ETH_RXIPV4_UDP_CHECKSUM_DISABLE_OCTETS_type;
#define ETH_RXIPV4_UDP_CHECKSUM_DISABLE_OCTETS	(*( ETH_RXIPV4_UDP_CHECKSUM_DISABLE_OCTETS_type *) 0xf001e260u)	/* Register 152 - Receive IPV4 Fragmented Octet Counter Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int RXIPV6GDFRM    : 32;	/* RXIPV6GDFRM */
	} B;
	int I;
	unsigned int U;

} ETH_RXIPV6_GOOD_FRAMES_type;
#define ETH_RXIPV6_GOOD_FRAMES	(*( ETH_RXIPV6_GOOD_FRAMES_type *) 0xf001e224u)	/* Register 137 - Receive IPV6 Good Frame Counter Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int RXIPV6GDOCT    : 32;	/* Thsi field indicates the number of bytes received in good IPv6 datagrams encapsulating TCP, UDP or ICMPv6 data. */
	} B;
	int I;
	unsigned int U;

} ETH_RXIPV6_GOOD_OCTETS_type;
#define ETH_RXIPV6_GOOD_OCTETS	(*( ETH_RXIPV6_GOOD_OCTETS_type *) 0xf001e264u)	/* Register 153 - Receive IPV6 Good Octet Counter Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int RXIPV6HDRERRFRM: 32;	/* RXIPV6HDRERRFRM */
	} B;
	int I;
	unsigned int U;

} ETH_RXIPV6_HEADER_ERROR_FRAMES_type;
#define ETH_RXIPV6_HEADER_ERROR_FRAMES	(*( ETH_RXIPV6_HEADER_ERROR_FRAMES_type *) 0xf001e228u)	/* Register 138 - Receive IPV6 Header Error Frame Counter Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int RXIPV6HDRERROCT: 32;	/* This field indicates the number of bytes received in IPv6 datagrams with header errors (length or version mismatch). The value in the IPv6 headers Length field is used to update this counter. */
	} B;
	int I;
	unsigned int U;

} ETH_RXIPV6_HEADER_ERROR_OCTETS_type;
#define ETH_RXIPV6_HEADER_ERROR_OCTETS	(*( ETH_RXIPV6_HEADER_ERROR_OCTETS_type *) 0xf001e268u)	/* Register 154 - Receive IPV6 Header Error Octet Counter Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int RXIPV6NOPAYFRM : 32;	/* RXIPV6NOPAYFRM */
	} B;
	int I;
	unsigned int U;

} ETH_RXIPV6_NO_PAYLOAD_FRAMES_type;
#define ETH_RXIPV6_NO_PAYLOAD_FRAMES	(*( ETH_RXIPV6_NO_PAYLOAD_FRAMES_type *) 0xf001e22cu)	/* Register 139 - Receive IPV6 No Payload Frame Counter Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int RXIPV6NOPAYOCT : 32;	/* This field indicates the number of bytes received in IPv6 datagrams that did not have a TCP, UDP, or ICMP payload. The value in the IPv6 headers Length field is used to update this counter. */
	} B;
	int I;
	unsigned int U;

} ETH_RXIPV6_NO_PAYLOAD_OCTETS_type;
#define ETH_RXIPV6_NO_PAYLOAD_OCTETS	(*( ETH_RXIPV6_NO_PAYLOAD_OCTETS_type *) 0xf001e26cu)	/* Register 155 - Receive IPV6 No Payload Octet Counter Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int RXTCPERRFRM    : 32;	/* RXTCPERRFRM */
	} B;
	int I;
	unsigned int U;

} ETH_RXTCP_ERROR_FRAMES_type;
#define ETH_RXTCP_ERROR_FRAMES	(*( ETH_RXTCP_ERROR_FRAMES_type *) 0xf001e23cu)	/* Register 143 - Receive TCP Error Frame Counter Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int RXTCPERROCT    : 32;	/* RXTCPERROCT */
	} B;
	int I;
	unsigned int U;

} ETH_RXTCP_ERROR_OCTETS_type;
#define ETH_RXTCP_ERROR_OCTETS	(*( ETH_RXTCP_ERROR_OCTETS_type *) 0xf001e27cu)	/* Register 159 - Receive TCP Error Octet Counter Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int RXTCPGDFRM     : 32;	/* RXTCPGDFRM */
	} B;
	int I;
	unsigned int U;

} ETH_RXTCP_GOOD_FRAMES_type;
#define ETH_RXTCP_GOOD_FRAMES	(*( ETH_RXTCP_GOOD_FRAMES_type *) 0xf001e238u)	/* Register 142 - Receive TCP Good Frame Counter Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int RXTCPGDOCT     : 32;	/* RXTCPGDOCT */
	} B;
	int I;
	unsigned int U;

} ETH_RXTCP_GOOD_OCTETS_type;
#define ETH_RXTCP_GOOD_OCTETS	(*( ETH_RXTCP_GOOD_OCTETS_type *) 0xf001e278u)	/* Register 158 - Receive TCP Good Octet Counter Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int RXUDPERRFRM    : 32;	/* RXUDPERRFRM */
	} B;
	int I;
	unsigned int U;

} ETH_RXUDP_ERROR_FRAMES_type;
#define ETH_RXUDP_ERROR_FRAMES	(*( ETH_RXUDP_ERROR_FRAMES_type *) 0xf001e234u)	/* Register 141 - Receive UDP Error Frame Counter Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int RXUDPERROCT    : 32;	/* RXUDPERROCT */
	} B;
	int I;
	unsigned int U;

} ETH_RXUDP_ERROR_OCTETS_type;
#define ETH_RXUDP_ERROR_OCTETS	(*( ETH_RXUDP_ERROR_OCTETS_type *) 0xf001e274u)	/* Register 157 - Receive UDP Error Octet Counter Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int RXUDPGDFRM     : 32;	/* RXUDPGDFRM */
	} B;
	int I;
	unsigned int U;

} ETH_RXUDP_GOOD_FRAMES_type;
#define ETH_RXUDP_GOOD_FRAMES	(*( ETH_RXUDP_GOOD_FRAMES_type *) 0xf001e230u)	/* Register 140 - Receive UDP Good Frame Counter Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int RXUDPGDOCT     : 32;	/* RXUDPGDOCT */
	} B;
	int I;
	unsigned int U;

} ETH_RXUDP_GOOD_OCTETS_type;
#define ETH_RXUDP_GOOD_OCTETS	(*( ETH_RXUDP_GOOD_OCTETS_type *) 0xf001e270u)	/* Register 156 - Receive UDP Good Octet Counter Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int RX1024_MAXOCTGB: 32;	/* RX1024_MAXOCTGB */
	} B;
	int I;
	unsigned int U;

} ETH_RX_1024TOMAXOCTETS_FRAMES_GOOD_BAD_type;
#define ETH_RX_1024TOMAXOCTETS_FRAMES_GOOD_BAD	(*( ETH_RX_1024TOMAXOCTETS_FRAMES_GOOD_BAD_type *) 0xf001e1c0u)	/* Register 112 - Receive Frame Count for Good and Bad 1,024 to Maxsize Bytes Frames */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int RX128_255OCTGB : 32;	/* RX128_255OCTGB */
	} B;
	int I;
	unsigned int U;

} ETH_RX_128TO255OCTETS_FRAMES_GOOD_BAD_type;
#define ETH_RX_128TO255OCTETS_FRAMES_GOOD_BAD	(*( ETH_RX_128TO255OCTETS_FRAMES_GOOD_BAD_type *) 0xf001e1b4u)	/* Register 109 - Receive Frame Count for Good and Bad 128 to 255 Bytes Frames */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int RX256_511OCTGB : 32;	/* RX256_511OCTGB */
	} B;
	int I;
	unsigned int U;

} ETH_RX_256TO511OCTETS_FRAMES_GOOD_BAD_type;
#define ETH_RX_256TO511OCTETS_FRAMES_GOOD_BAD	(*( ETH_RX_256TO511OCTETS_FRAMES_GOOD_BAD_type *) 0xf001e1b8u)	/* Register 110 - Receive Frame Count for Good and Bad 256 to 511 Bytes Frames */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int RX512_1023OCTGB: 32;	/* RX512_1023OCTGB */
	} B;
	int I;
	unsigned int U;

} ETH_RX_512TO1023OCTETS_FRAMES_GOOD_BAD_type;
#define ETH_RX_512TO1023OCTETS_FRAMES_GOOD_BAD	(*( ETH_RX_512TO1023OCTETS_FRAMES_GOOD_BAD_type *) 0xf001e1bcu)	/* Register 111 - Receive Frame Count for Good and Bad 512 to 1,023 Bytes Frames */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int RX64OCTGB      : 32;	/* RX64OCTGB */
	} B;
	int I;
	unsigned int U;

} ETH_RX_64OCTETS_FRAMES_GOOD_BAD_type;
#define ETH_RX_64OCTETS_FRAMES_GOOD_BAD	(*( ETH_RX_64OCTETS_FRAMES_GOOD_BAD_type *) 0xf001e1acu)	/* Register 107 - Receive Frame Count for Good and Bad 64 Byte Frames */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int RX65_127OCTGB  : 32;	/* RX65_127OCTGB */
	} B;
	int I;
	unsigned int U;

} ETH_RX_65TO127OCTETS_FRAMES_GOOD_BAD_type;
#define ETH_RX_65TO127OCTETS_FRAMES_GOOD_BAD	(*( ETH_RX_65TO127OCTETS_FRAMES_GOOD_BAD_type *) 0xf001e1b0u)	/* Register 108 - Receive Frame Count for Good and Bad 65 to 127 Bytes Frames */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int RXALGNERR      : 32;	/* RXALGNERR */
	} B;
	int I;
	unsigned int U;

} ETH_RX_ALIGNMENT_ERROR_FRAMES_type;
#define ETH_RX_ALIGNMENT_ERROR_FRAMES	(*( ETH_RX_ALIGNMENT_ERROR_FRAMES_type *) 0xf001e198u)	/* Register 102 - Receive Frame Count for Alignment Error Frames */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int RXBCASTG       : 32;	/* RXBCASTG */
	} B;
	int I;
	unsigned int U;

} ETH_RX_BROADCAST_FRAMES_GOOD_type;
#define ETH_RX_BROADCAST_FRAMES_GOOD	(*( ETH_RX_BROADCAST_FRAMES_GOOD_type *) 0xf001e18cu)	/* Register 99 - Receive Frame Count for Good Broadcast Frames */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int RXCTRLG        : 32;	/* RXCTRLG */
	} B;
	int I;
	unsigned int U;

} ETH_RX_CONTROL_FRAMES_GOOD_type;
#define ETH_RX_CONTROL_FRAMES_GOOD	(*( ETH_RX_CONTROL_FRAMES_GOOD_type *) 0xf001e1e4u)	/* Register 121 - Receive Frame Count for Good Control Frames Frames */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int RXCRCERR       : 32;	/* RXCRCERR */
	} B;
	int I;
	unsigned int U;

} ETH_RX_CRC_ERROR_FRAMES_type;
#define ETH_RX_CRC_ERROR_FRAMES	(*( ETH_RX_CRC_ERROR_FRAMES_type *) 0xf001e194u)	/* Register 101 - Receive Frame Count for CRC Error Frames */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int RXFIFOOVFL     : 32;	/* RXFIFOOVFL */
	} B;
	int I;
	unsigned int U;

} ETH_RX_FIFO_OVERFLOW_FRAMES_type;
#define ETH_RX_FIFO_OVERFLOW_FRAMES	(*( ETH_RX_FIFO_OVERFLOW_FRAMES_type *) 0xf001e1d4u)	/* Register 117 - Receive Frame Count for FIFO Overflow Frames */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int RXFRMGB        : 32;	/* RXFRMGB */
	} B;
	int I;
	unsigned int U;

} ETH_RX_FRAMES_COUNT_GOOD_BAD_type;
#define ETH_RX_FRAMES_COUNT_GOOD_BAD	(*( ETH_RX_FRAMES_COUNT_GOOD_BAD_type *) 0xf001e180u)	/* Register 96 - Receive Frame Count for Good and Bad Frames */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int RXJABERR       : 32;	/* RXJABERR */
	} B;
	int I;
	unsigned int U;

} ETH_RX_JABBER_ERROR_FRAMES_type;
#define ETH_RX_JABBER_ERROR_FRAMES	(*( ETH_RX_JABBER_ERROR_FRAMES_type *) 0xf001e1a0u)	/* Register 104 - Receive Frame Count for Jabber Error Frames */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int RXLENERR       : 32;	/* RXLENERR */
	} B;
	int I;
	unsigned int U;

} ETH_RX_LENGTH_ERROR_FRAMES_type;
#define ETH_RX_LENGTH_ERROR_FRAMES	(*( ETH_RX_LENGTH_ERROR_FRAMES_type *) 0xf001e1c8u)	/* Register 114 - Receive Frame Count for Length Error Frames */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int RXMCASTG       : 32;	/* RXMCASTG */
	} B;
	int I;
	unsigned int U;

} ETH_RX_MULTICAST_FRAMES_GOOD_type;
#define ETH_RX_MULTICAST_FRAMES_GOOD	(*( ETH_RX_MULTICAST_FRAMES_GOOD_type *) 0xf001e190u)	/* Register 100 - Receive Frame Count for Good Multicast Frames */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int RXOCTG         : 32;	/* RXOCTG */
	} B;
	int I;
	unsigned int U;

} ETH_RX_OCTET_COUNT_GOOD_type;
#define ETH_RX_OCTET_COUNT_GOOD	(*( ETH_RX_OCTET_COUNT_GOOD_type *) 0xf001e188u)	/* Register 98 - Receive Octet Count for Good Frames */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int RXOCTGB        : 32;	/* RXOCTGB */
	} B;
	int I;
	unsigned int U;

} ETH_RX_OCTET_COUNT_GOOD_BAD_type;
#define ETH_RX_OCTET_COUNT_GOOD_BAD	(*( ETH_RX_OCTET_COUNT_GOOD_BAD_type *) 0xf001e184u)	/* Register 97 - Receive Octet Count for Good and Bad Frames */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int RXOUTOFRNG     : 32;	/* RXOUTOFRNG */
	} B;
	int I;
	unsigned int U;

} ETH_RX_OUT_OF_RANGE_TYPE_FRAMES_type;
#define ETH_RX_OUT_OF_RANGE_TYPE_FRAMES	(*( ETH_RX_OUT_OF_RANGE_TYPE_FRAMES_type *) 0xf001e1ccu)	/* Register 115 - Receive Frame Count for Out of Range Frames */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int RXOVERSZG      : 32;	/* RXOVERSZG */
	} B;
	int I;
	unsigned int U;

} ETH_RX_OVERSIZE_FRAMES_GOOD_type;
#define ETH_RX_OVERSIZE_FRAMES_GOOD	(*( ETH_RX_OVERSIZE_FRAMES_GOOD_type *) 0xf001e1a8u)	/* Register 106 - Receive Frame Count for Oversize Frames */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int RXPAUSEFRM     : 32;	/* RXPAUSEFRM */
	} B;
	int I;
	unsigned int U;

} ETH_RX_PAUSE_FRAMES_type;
#define ETH_RX_PAUSE_FRAMES	(*( ETH_RX_PAUSE_FRAMES_type *) 0xf001e1d0u)	/* Register 116 - Receive Frame Count for PAUSE Frames */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int RXRCVERR       : 32;	/* RXRCVERR */
	} B;
	int I;
	unsigned int U;

} ETH_RX_RECEIVE_ERROR_FRAMES_type;
#define ETH_RX_RECEIVE_ERROR_FRAMES	(*( ETH_RX_RECEIVE_ERROR_FRAMES_type *) 0xf001e1e0u)	/* Register 120 - Receive Frame Count for Receive Error Frames */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int RXRUNTERR      : 32;	/* RXRUNTERR */
	} B;
	int I;
	unsigned int U;

} ETH_RX_RUNT_ERROR_FRAMES_type;
#define ETH_RX_RUNT_ERROR_FRAMES	(*( ETH_RX_RUNT_ERROR_FRAMES_type *) 0xf001e19cu)	/* Register 103 - Receive Frame Count for Runt Error Frames */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int RXUNDERSZG     : 32;	/* RXUNDERSZG */
	} B;
	int I;
	unsigned int U;

} ETH_RX_UNDERSIZE_FRAMES_GOOD_type;
#define ETH_RX_UNDERSIZE_FRAMES_GOOD	(*( ETH_RX_UNDERSIZE_FRAMES_GOOD_type *) 0xf001e1a4u)	/* Register 105 - Receive Frame Count for Undersize Frames */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int RXUCASTG       : 32;	/* RXUCASTG */
	} B;
	int I;
	unsigned int U;

} ETH_RX_UNICAST_FRAMES_GOOD_type;
#define ETH_RX_UNICAST_FRAMES_GOOD	(*( ETH_RX_UNICAST_FRAMES_GOOD_type *) 0xf001e1c4u)	/* Register 113 - Receive Frame Count for Good Unicast Frames */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int RXVLANFRGB     : 32;	/* RXVLANFRGB */
	} B;
	int I;
	unsigned int U;

} ETH_RX_VLAN_FRAMES_GOOD_BAD_type;
#define ETH_RX_VLAN_FRAMES_GOOD_BAD	(*( ETH_RX_VLAN_FRAMES_GOOD_BAD_type *) 0xf001e1d8u)	/* Register 118 - Receive Frame Count for Good and Bad VLAN Frames */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int RXWDGERR       : 32;	/* RXWDGERR */
	} B;
	int I;
	unsigned int U;

} ETH_RX_WATCHDOG_ERROR_FRAMES_type;
#define ETH_RX_WATCHDOG_ERROR_FRAMES	(*( ETH_RX_WATCHDOG_ERROR_FRAMES_type *) 0xf001e1dcu)	/* Register 119 - Receive Frame Count for Watchdog Error Frames */

typedef volatile union
{
	struct
	{ 
		unsigned int TI             : 1;	/* Transmit Interrupt */
		unsigned int TPS            : 1;	/* Transmit Process Stopped */
		unsigned int TU             : 1;	/* Transmit Buffer Unavailable */
		unsigned int TJT            : 1;	/* Transmit Jabber Timeout */
		unsigned int OVF            : 1;	/* Receive Overflow */
		unsigned int UNF            : 1;	/* Transmit Underflow */
		unsigned int RI             : 1;	/* Receive Interrupt */
		unsigned int RU             : 1;	/* Receive Buffer Unavailable */
		unsigned int RPS            : 1;	/* Receive Process Stopped */
		unsigned int RWT            : 1;	/* Receive Watchdog Timeout */
		unsigned int ETI            : 1;	/* Early Transmit Interrupt */
		/* const */ unsigned int RESERVED_12_11 : 2;	/* RESERVED_12_11 */
		unsigned int FBI            : 1;	/* Fatal Bus Error Interrupt */
		unsigned int ERI            : 1;	/* Early Receive Interrupt */
		unsigned int AIS            : 1;	/* Abnormal Interrupt Summary */
		unsigned int NIS            : 1;	/* Normal Interrupt Summary */
		/* const */ unsigned int RS             : 3;	/* Received Process State */
		/* const */ unsigned int TS             : 3;	/* Transmit Process State */
		/* const */ unsigned int EB             : 3;	/* Error Bits */
		/* const */ unsigned int GLI            : 1;	/* GMAC Line interface Interrupt */
		/* const */ unsigned int GMI            : 1;	/* GMAC MMC Interrupt */
		/* const */ unsigned int GPI            : 1;	/* GMAC PMT Interrupt */
		/* const */ unsigned int TTI            : 1;	/* Timestamp Trigger Interrupt */
		/* const */ unsigned int GLPII          : 1;	/* GMAC LPI Interrupt (for Channel 0) */
		/* const */ unsigned int RESERVED_31    : 1;	/* RESERVED_31 */
	} B;
	int I;
	unsigned int U;

} ETH_STATUS_type;
#define ETH_STATUS	(*( ETH_STATUS_type *) 0xf001f014u)	/* Register 5 - Status Register */

typedef volatile union
{
	struct
	{ 
		unsigned int SSINC          : 8;	/* Sub-second Increment Value */
		/* const */ unsigned int RESERVED_31_8  : 24;	/* RESERVED_31_8 */
	} B;
	int I;
	unsigned int U;

} ETH_SUB_SECOND_INCREMENT_type;
#define ETH_SUB_SECOND_INCREMENT	(*( ETH_SUB_SECOND_INCREMENT_type *) 0xf001e704u)	/* Register 449 - Sub-Second Increment Register */

typedef volatile union
{
	struct
	{ 
		unsigned int TSHWR          : 16;	/* Timestamp Higher Word Register */
		/* const */ unsigned int RESERVED_31_16 : 16;	/* RESERVED_31_16 */
	} B;
	int I;
	unsigned int U;

} ETH_SYSTEM_TIME_HIGHER_WORD_SECONDS_type;
#define ETH_SYSTEM_TIME_HIGHER_WORD_SECONDS	(*( ETH_SYSTEM_TIME_HIGHER_WORD_SECONDS_type *) 0xf001e724u)	/* Register 457 - System Time - Higher Word Seconds Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int TSSS           : 31;	/* Timestamp Sub Seconds */
		/* const */ unsigned int RESERVED_31    : 1;	/* RESERVED_31 */
	} B;
	int I;
	unsigned int U;

} ETH_SYSTEM_TIME_NANOSECONDS_type;
#define ETH_SYSTEM_TIME_NANOSECONDS	(*( ETH_SYSTEM_TIME_NANOSECONDS_type *) 0xf001e70cu)	/* Register 451 - System Time - Nanoseconds Register */

typedef volatile union
{
	struct
	{ 
		unsigned int TSSS           : 31;	/* Timestamp Sub Second */
		unsigned int ADDSUB         : 1;	/* Add or subtract time */
	} B;
	int I;
	unsigned int U;

} ETH_SYSTEM_TIME_NANOSECONDS_UPDATE_type;
#define ETH_SYSTEM_TIME_NANOSECONDS_UPDATE	(*( ETH_SYSTEM_TIME_NANOSECONDS_UPDATE_type *) 0xf001e714u)	/* Register 453 - System Time - Nanoseconds Update Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int TSS            : 32;	/* Timestamp Second */
	} B;
	int I;
	unsigned int U;

} ETH_SYSTEM_TIME_SECONDS_type;
#define ETH_SYSTEM_TIME_SECONDS	(*( ETH_SYSTEM_TIME_SECONDS_type *) 0xf001e708u)	/* Register 450 - System Time - Seconds Register */

typedef volatile union
{
	struct
	{ 
		unsigned int TSS            : 32;	/* Timestamp Second */
	} B;
	int I;
	unsigned int U;

} ETH_SYSTEM_TIME_SECONDS_UPDATE_type;
#define ETH_SYSTEM_TIME_SECONDS_UPDATE	(*( ETH_SYSTEM_TIME_SECONDS_UPDATE_type *) 0xf001e710u)	/* Register 452 - System Time - Seconds Update Register */

typedef volatile union
{
	struct
	{ 
		unsigned int TTSLO          : 31;	/* Target Timestamp Low Register */
		/* const */ unsigned int TRGTBUSY       : 1;	/* Target Time Register Busy */
	} B;
	int I;
	unsigned int U;

} ETH_TARGET_TIME_NANOSECONDS_type;
#define ETH_TARGET_TIME_NANOSECONDS	(*( ETH_TARGET_TIME_NANOSECONDS_type *) 0xf001e720u)	/* Register 456 - Target Time Nanoseconds Register */

typedef volatile union
{
	struct
	{ 
		unsigned int TSTR           : 32;	/* Target Time Seconds Register */
	} B;
	int I;
	unsigned int U;

} ETH_TARGET_TIME_SECONDS_type;
#define ETH_TARGET_TIME_SECONDS	(*( ETH_TARGET_TIME_SECONDS_type *) 0xf001e71cu)	/* Register 455 - Target Time Seconds Register */

typedef volatile union
{
	struct
	{ 
		unsigned int TSAR           : 32;	/* Timestamp Addend Register */
	} B;
	int I;
	unsigned int U;

} ETH_TIMESTAMP_ADDEND_type;
#define ETH_TIMESTAMP_ADDEND	(*( ETH_TIMESTAMP_ADDEND_type *) 0xf001e718u)	/* Register 454 - Timestamp Addend Register */

typedef volatile union
{
	struct
	{ 
		unsigned int TSENA          : 1;	/* Timestamp Enable */
		unsigned int TSCFUPDT       : 1;	/* Timestamp Fine or Coarse Update */
		unsigned int TSINIT         : 1;	/* Timestamp Initialize */
		unsigned int TSUPDT         : 1;	/* Timestamp Update */
		unsigned int TSTRIG         : 1;	/* Timestamp Interrupt Trigger Enable */
		unsigned int TSADDREG       : 1;	/* Addend Reg Update */
		/* const */ unsigned int RESERVED_7_6   : 2;	/* RESERVED_7_6 */
		unsigned int TSENALL        : 1;	/* Enable Timestamp for All Frames */
		unsigned int TSCTRLSSR      : 1;	/* Timestamp Digital or Binary Rollover Control */
		unsigned int TSVER2ENA      : 1;	/* Enable PTP packet Processing for Version 2 Format */
		unsigned int TSIPENA        : 1;	/* Enable Processing of PTP over Ethernet Frames */
		unsigned int TSIPV6ENA      : 1;	/* Enable Processing of PTP Frames Sent Over IPv6-UDP */
		unsigned int TSIPV4ENA      : 1;	/* Enable Processing of PTP Frames Sent over IPv4-UDP */
		unsigned int TSEVNTENA      : 1;	/* Enable Timestamp Snapshot for Event Messages */
		unsigned int TSMSTRENA      : 1;	/* Enable Snapshot for Messages Relevant to Master */
		unsigned int SNAPTYPSEL     : 2;	/* Select PTP packets for Taking Snapshots */
		unsigned int TSENMACADDR    : 1;	/* Enable MAC address for PTP Frame Filtering */
		/* const */ unsigned int RESERVED_23_19 : 5;	/* RESERVED_23_19 */
		/* const */ unsigned int ATSFC          : 1;	/* Auxiliary Snapshot FIFO Clear */
		/* const */ unsigned int ATSEN0         : 1;	/* Auxiliary Snapshot 0 Enable */
		/* const */ unsigned int ATSEN1         : 1;	/* Auxiliary Snapshot 1 Enable */
		/* const */ unsigned int ATSEN2         : 1;	/* Auxiliary Snapshot 2 Enable */
		/* const */ unsigned int ATSEN3         : 1;	/* Auxiliary Snapshot 3 Enable */
		/* const */ unsigned int RESERVED_31_29 : 3;	/* RESERVED_31_29 */
	} B;
	int I;
	unsigned int U;

} ETH_TIMESTAMP_CONTROL_type;
#define ETH_TIMESTAMP_CONTROL	(*( ETH_TIMESTAMP_CONTROL_type *) 0xf001e700u)	/* Register 448 - Timestamp Control Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int TSSOVF         : 1;	/* Timestamp Seconds Overflow */
		/* const */ unsigned int TSTARGT        : 1;	/* Timestamp Target Time Reached */
		/* const */ unsigned int AUXTSTRIG      : 1;	/* Auxiliary Timestamp Trigger Snapshot */
		/* const */ unsigned int TSTRGTERR      : 1;	/* Timestamp Target Time Error */
		/* const */ unsigned int TSTARGT1       : 1;	/* Timestamp Target Time Reached for Target Time PPS1 */
		/* const */ unsigned int TSTRGTERR1     : 1;	/* Timestamp Target Time Error */
		/* const */ unsigned int TSTARGT2       : 1;	/* Timestamp Target Time Reached for Target Time PPS2 */
		/* const */ unsigned int TSTRGTERR2     : 1;	/* Timestamp Target Time Error */
		/* const */ unsigned int TSTARGT3       : 1;	/* Timestamp Target Time Reached for Target Time PPS3 */
		/* const */ unsigned int TSTRGTERR3     : 1;	/* Timestamp Target Time Error */
		/* const */ unsigned int RESERVED_15_10 : 6;	/* RESERVED_15_10 */
		/* const */ unsigned int ATSSTN         : 4;	/* Auxiliary Timestamp Snapshot Trigger Identifier */
		/* const */ unsigned int RESERVED_23_20 : 4;	/* RESERVED_23_20 */
		/* const */ unsigned int ATSSTM         : 1;	/* Auxiliary Timestamp Snapshot Trigger Missed */
		/* const */ unsigned int ATSNS          : 5;	/* Number of Auxiliary Timestamp Snapshots */
		/* const */ unsigned int RESERVED_31_30 : 2;	/* RESERVED_31_30 */
	} B;
	int I;
	unsigned int U;

} ETH_TIMESTAMP_STATUS_type;
#define ETH_TIMESTAMP_STATUS	(*( ETH_TIMESTAMP_STATUS_type *) 0xf001e728u)	/* Register 458 - Timestamp Status Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int RESERVED_1_0   : 2;	/* RESERVED_1_0 */
		unsigned int TDESLA         : 30;	/* Start of Transmit List */
	} B;
	int I;
	unsigned int U;

} ETH_TRANSMIT_DESCRIPTOR_LIST_ADDRESS_type;
#define ETH_TRANSMIT_DESCRIPTOR_LIST_ADDRESS	(*( ETH_TRANSMIT_DESCRIPTOR_LIST_ADDRESS_type *) 0xf001f010u)	/* Register 4 - Transmit Descriptor List Address Register */

typedef volatile union
{
	struct
	{ 
		unsigned int TPD            : 32;	/* Transmit Poll Demand */
	} B;
	int I;
	unsigned int U;

} ETH_TRANSMIT_POLL_DEMAND_type;
#define ETH_TRANSMIT_POLL_DEMAND	(*( ETH_TRANSMIT_POLL_DEMAND_type *) 0xf001f004u)	/* Register 1 - Transmit Poll Demand Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int TX1024_MAXOCTGB: 32;	/* TX1024_MAXOCTGB */
	} B;
	int I;
	unsigned int U;

} ETH_TX_1024TOMAXOCTETS_FRAMES_GOOD_BAD_type;
#define ETH_TX_1024TOMAXOCTETS_FRAMES_GOOD_BAD	(*( ETH_TX_1024TOMAXOCTETS_FRAMES_GOOD_BAD_type *) 0xf001e138u)	/* Register 78 - Transmit Octet Count for Good and Bad 1024 to Maxsize Bytes Frames */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int TX128_255OCTGB : 32;	/* TX128_255OCTGB */
	} B;
	int I;
	unsigned int U;

} ETH_TX_128TO255OCTETS_FRAMES_GOOD_BAD_type;
#define ETH_TX_128TO255OCTETS_FRAMES_GOOD_BAD	(*( ETH_TX_128TO255OCTETS_FRAMES_GOOD_BAD_type *) 0xf001e12cu)	/* Register 75 - Transmit Octet Count for Good and Bad 128 to 255 Bytes Frames */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int TX256_511OCTGB : 32;	/* TX256_511OCTGB */
	} B;
	int I;
	unsigned int U;

} ETH_TX_256TO511OCTETS_FRAMES_GOOD_BAD_type;
#define ETH_TX_256TO511OCTETS_FRAMES_GOOD_BAD	(*( ETH_TX_256TO511OCTETS_FRAMES_GOOD_BAD_type *) 0xf001e130u)	/* Register 76 - Transmit Octet Count for Good and Bad 256 to 511 Bytes Frames */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int TX512_1023OCTGB: 32;	/* TX512_1023OCTGB */
	} B;
	int I;
	unsigned int U;

} ETH_TX_512TO1023OCTETS_FRAMES_GOOD_BAD_type;
#define ETH_TX_512TO1023OCTETS_FRAMES_GOOD_BAD	(*( ETH_TX_512TO1023OCTETS_FRAMES_GOOD_BAD_type *) 0xf001e134u)	/* Register 77 - Transmit Octet Count for Good and Bad 512 to 1023 Bytes Frames */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int TX64OCTGB      : 32;	/* TX64OCTGB */
	} B;
	int I;
	unsigned int U;

} ETH_TX_64OCTETS_FRAMES_GOOD_BAD_type;
#define ETH_TX_64OCTETS_FRAMES_GOOD_BAD	(*( ETH_TX_64OCTETS_FRAMES_GOOD_BAD_type *) 0xf001e124u)	/* Register 73 - Transmit Octet Count for Good and Bad 64 Byte Frames */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int TX65_127OCTGB  : 32;	/* TX65_127OCTGB */
	} B;
	int I;
	unsigned int U;

} ETH_TX_65TO127OCTETS_FRAMES_GOOD_BAD_type;
#define ETH_TX_65TO127OCTETS_FRAMES_GOOD_BAD	(*( ETH_TX_65TO127OCTETS_FRAMES_GOOD_BAD_type *) 0xf001e128u)	/* Register 74 - Transmit Octet Count for Good and Bad 65 to 127 Bytes Frames */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int TXBCASTG       : 32;	/* TXBCASTG */
	} B;
	int I;
	unsigned int U;

} ETH_TX_BROADCAST_FRAMES_GOOD_type;
#define ETH_TX_BROADCAST_FRAMES_GOOD	(*( ETH_TX_BROADCAST_FRAMES_GOOD_type *) 0xf001e11cu)	/* Register 71 - Transmit Frame Count for Good Broadcast Frames */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int TXBCASTGB      : 32;	/* TXBCASTGB */
	} B;
	int I;
	unsigned int U;

} ETH_TX_BROADCAST_FRAMES_GOOD_BAD_type;
#define ETH_TX_BROADCAST_FRAMES_GOOD_BAD	(*( ETH_TX_BROADCAST_FRAMES_GOOD_BAD_type *) 0xf001e144u)	/* Register 81 - Transmit Frame Count for Good and Bad Broadcast Frames */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int TXCARR         : 32;	/* TXCARR */
	} B;
	int I;
	unsigned int U;

} ETH_TX_CARRIER_ERROR_FRAMES_type;
#define ETH_TX_CARRIER_ERROR_FRAMES	(*( ETH_TX_CARRIER_ERROR_FRAMES_type *) 0xf001e160u)	/* Register 88 - Transmit Frame Count for Carrier Sense Error Frames */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int TXDEFRD        : 32;	/* TXDEFRD */
	} B;
	int I;
	unsigned int U;

} ETH_TX_DEFERRED_FRAMES_type;
#define ETH_TX_DEFERRED_FRAMES	(*( ETH_TX_DEFERRED_FRAMES_type *) 0xf001e154u)	/* Register 85 - Transmit Frame Count for Deferred Frames */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int TXEXSCOL       : 32;	/* TXEXSCOL */
	} B;
	int I;
	unsigned int U;

} ETH_TX_EXCESSIVE_COLLISION_FRAMES_type;
#define ETH_TX_EXCESSIVE_COLLISION_FRAMES	(*( ETH_TX_EXCESSIVE_COLLISION_FRAMES_type *) 0xf001e15cu)	/* Register 87 - Transmit Frame Count for Excessive Collision Error Frames */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int TXEXSDEF       : 32;	/* TXEXSDEF */
	} B;
	int I;
	unsigned int U;

} ETH_TX_EXCESSIVE_DEFERRAL_ERROR_type;
#define ETH_TX_EXCESSIVE_DEFERRAL_ERROR	(*( ETH_TX_EXCESSIVE_DEFERRAL_ERROR_type *) 0xf001e16cu)	/* Register 91 - Transmit Frame Count for Excessive Deferral Error Frames */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int TXFRMG         : 32;	/* TXFRMG */
	} B;
	int I;
	unsigned int U;

} ETH_TX_FRAME_COUNT_GOOD_type;
#define ETH_TX_FRAME_COUNT_GOOD	(*( ETH_TX_FRAME_COUNT_GOOD_type *) 0xf001e168u)	/* Register 90 - Transmit Frame Count for Good Frames */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int TXFRMGB        : 32;	/* TXFRMGB */
	} B;
	int I;
	unsigned int U;

} ETH_TX_FRAME_COUNT_GOOD_BAD_type;
#define ETH_TX_FRAME_COUNT_GOOD_BAD	(*( ETH_TX_FRAME_COUNT_GOOD_BAD_type *) 0xf001e118u)	/* Register 70 - Transmit Frame Count for Good and Bad Frames */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int TXLATECOL      : 32;	/* TXLATECOL */
	} B;
	int I;
	unsigned int U;

} ETH_TX_LATE_COLLISION_FRAMES_type;
#define ETH_TX_LATE_COLLISION_FRAMES	(*( ETH_TX_LATE_COLLISION_FRAMES_type *) 0xf001e158u)	/* Register 86 - Transmit Frame Count for Late Collision Error Frames */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int TXMCASTG       : 32;	/* TXMCASTG */
	} B;
	int I;
	unsigned int U;

} ETH_TX_MULTICAST_FRAMES_GOOD_type;
#define ETH_TX_MULTICAST_FRAMES_GOOD	(*( ETH_TX_MULTICAST_FRAMES_GOOD_type *) 0xf001e120u)	/* Register 72 - Transmit Frame Count for Good Multicast Frames */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int TXMCASTGB      : 32;	/* TXMCASTGB */
	} B;
	int I;
	unsigned int U;

} ETH_TX_MULTICAST_FRAMES_GOOD_BAD_type;
#define ETH_TX_MULTICAST_FRAMES_GOOD_BAD	(*( ETH_TX_MULTICAST_FRAMES_GOOD_BAD_type *) 0xf001e140u)	/* Register 80 - Transmit Frame Count for Good and Bad Multicast Frames */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int TXMULTCOLG     : 32;	/* TXMULTCOLG */
	} B;
	int I;
	unsigned int U;

} ETH_TX_MULTIPLE_COLLISION_GOOD_FRAMES_type;
#define ETH_TX_MULTIPLE_COLLISION_GOOD_FRAMES	(*( ETH_TX_MULTIPLE_COLLISION_GOOD_FRAMES_type *) 0xf001e150u)	/* Register 84 - Transmit Frame Count for Frames Transmitted after Multiple Collision */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int TXOCTG         : 32;	/* TXOCTG */
	} B;
	int I;
	unsigned int U;

} ETH_TX_OCTET_COUNT_GOOD_type;
#define ETH_TX_OCTET_COUNT_GOOD	(*( ETH_TX_OCTET_COUNT_GOOD_type *) 0xf001e164u)	/* Register 89 - Transmit Octet Count for Good Frames */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int TXOCTGB        : 32;	/* TXOCTGB */
	} B;
	int I;
	unsigned int U;

} ETH_TX_OCTET_COUNT_GOOD_BAD_type;
#define ETH_TX_OCTET_COUNT_GOOD_BAD	(*( ETH_TX_OCTET_COUNT_GOOD_BAD_type *) 0xf001e114u)	/* Register 69 - Transmit Octet Count for Good and Bad Frames */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int TXOSIZG        : 32;	/* TXOSIZG */
	} B;
	int I;
	unsigned int U;

} ETH_TX_OSIZE_FRAMES_GOOD_type;
#define ETH_TX_OSIZE_FRAMES_GOOD	(*( ETH_TX_OSIZE_FRAMES_GOOD_type *) 0xf001e178u)	/* Register 94 - Transmit Frame Count for Good Oversize Frames */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int TXPAUSE        : 32;	/* TXPAUSE */
	} B;
	int I;
	unsigned int U;

} ETH_TX_PAUSE_FRAMES_type;
#define ETH_TX_PAUSE_FRAMES	(*( ETH_TX_PAUSE_FRAMES_type *) 0xf001e170u)	/* Register 92 - Transmit Frame Count for Good PAUSE Frames */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int TXSNGLCOLG     : 32;	/* TXSNGLCOLG */
	} B;
	int I;
	unsigned int U;

} ETH_TX_SINGLE_COLLISION_GOOD_FRAMES_type;
#define ETH_TX_SINGLE_COLLISION_GOOD_FRAMES	(*( ETH_TX_SINGLE_COLLISION_GOOD_FRAMES_type *) 0xf001e14cu)	/* Register 83 - Transmit Frame Count for Frames Transmitted after Single Collision */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int TXUNDRFLW      : 32;	/* TXUNDRFLW */
	} B;
	int I;
	unsigned int U;

} ETH_TX_UNDERFLOW_ERROR_FRAMES_type;
#define ETH_TX_UNDERFLOW_ERROR_FRAMES	(*( ETH_TX_UNDERFLOW_ERROR_FRAMES_type *) 0xf001e148u)	/* Register 82 - Transmit Frame Count for Underflow Error Frames */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int TXUCASTGB      : 32;	/* TXUCASTGB */
	} B;
	int I;
	unsigned int U;

} ETH_TX_UNICAST_FRAMES_GOOD_BAD_type;
#define ETH_TX_UNICAST_FRAMES_GOOD_BAD	(*( ETH_TX_UNICAST_FRAMES_GOOD_BAD_type *) 0xf001e13cu)	/* Register 79 - Transmit Frame Count for Good and Bad Unicast Frames */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int TXVLANG        : 32;	/* TXVLANG */
	} B;
	int I;
	unsigned int U;

} ETH_TX_VLAN_FRAMES_GOOD_type;
#define ETH_TX_VLAN_FRAMES_GOOD	(*( ETH_TX_VLAN_FRAMES_GOOD_type *) 0xf001e174u)	/* Register 93 - Transmit Frame Count for Good VLAN Frames */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int SNPSVER        : 8;	/* SNPSVER */
		/* const */ unsigned int USERVER        : 8;	/* USERVER */
		/* const */ unsigned int RESERVED_31_16 : 16;	/* RESERVED_31_16 */
	} B;
	int I;
	unsigned int U;

} ETH_VERSION_type;
#define ETH_VERSION	(*( ETH_VERSION_type *) 0xf001e020u)	/* Register 8 - Version Register */

typedef volatile union
{
	struct
	{ 
		unsigned int VL             : 16;	/* VLAN Tag Identifier for Receive Frames */
		unsigned int ETV            : 1;	/* Enable 12-Bit VLAN Tag Comparison */
		unsigned int VTIM           : 1;	/* VLAN Tag Inverse Match Enable */
		unsigned int ESVL           : 1;	/* Enable S-VLAN */
		/* const */ unsigned int VTHM           : 1;	/* VLAN Tag Hash Table Match Enable */
		/* const */ unsigned int RESERVED_31_20 : 12;	/* RESERVED_31_20 */
	} B;
	int I;
	unsigned int U;

} ETH_VLAN_TAG_type;
#define ETH_VLAN_TAG	(*( ETH_VLAN_TAG_type *) 0xf001e01cu)	/* Register 7 - VLAN Tag Register */

#endif /*_REGTC27XC_H*/
